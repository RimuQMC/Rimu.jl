var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip850\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip850)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip851\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip850)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip852\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip852)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip852)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip852)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip852)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip850)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip850)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip850)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip850)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip850)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip850)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip852)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.84 2211.02,1260.84 \"/>\n<polyline clip-path=\"url(#clip852)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1002.98 2211.02,1002.98 \"/>\n<polyline clip-path=\"url(#clip852)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.113 2211.02,745.113 \"/>\n<polyline clip-path=\"url(#clip852)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,487.247 2211.02,487.247 \"/>\n<polyline clip-path=\"url(#clip852)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,229.382 2211.02,229.382 \"/>\n<polyline clip-path=\"url(#clip850)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip850)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.84 423.181,1260.84 \"/>\n<polyline clip-path=\"url(#clip850)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1002.98 423.181,1002.98 \"/>\n<polyline clip-path=\"url(#clip850)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.113 423.181,745.113 \"/>\n<polyline clip-path=\"url(#clip850)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,487.247 423.181,487.247 \"/>\n<polyline clip-path=\"url(#clip850)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,229.382 423.181,229.382 \"/>\n<path clip-path=\"url(#clip850)\" d=\"M356.339 1246.64 Q352.728 1246.64 350.899 1250.21 Q349.094 1253.75 349.094 1260.88 Q349.094 1267.98 350.899 1271.55 Q352.728 1275.09 356.339 1275.09 Q359.973 1275.09 361.779 1271.55 Q363.608 1267.98 363.608 1260.88 Q363.608 1253.75 361.779 1250.21 Q359.973 1246.64 356.339 1246.64 M356.339 1242.94 Q362.149 1242.94 365.205 1247.54 Q368.284 1252.13 368.284 1260.88 Q368.284 1269.6 365.205 1274.21 Q362.149 1278.79 356.339 1278.79 Q350.529 1278.79 347.45 1274.21 Q344.395 1269.6 344.395 1260.88 Q344.395 1252.13 347.45 1247.54 Q350.529 1242.94 356.339 1242.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M290.043 1016.32 L306.363 1016.32 L306.363 1020.26 L284.418 1020.26 L284.418 1016.32 Q287.08 1013.57 291.664 1008.94 Q296.27 1004.29 297.451 1002.94 Q299.696 1000.42 300.576 998.684 Q301.478 996.925 301.478 995.235 Q301.478 992.48 299.534 990.744 Q297.613 989.008 294.511 989.008 Q292.312 989.008 289.858 989.772 Q287.427 990.536 284.65 992.087 L284.65 987.365 Q287.474 986.23 289.927 985.652 Q292.381 985.073 294.418 985.073 Q299.789 985.073 302.983 987.758 Q306.177 990.443 306.177 994.934 Q306.177 997.064 305.367 998.985 Q304.58 1000.88 302.474 1003.48 Q301.895 1004.15 298.793 1007.36 Q295.691 1010.56 290.043 1016.32 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M316.224 985.698 L334.58 985.698 L334.58 989.633 L320.506 989.633 L320.506 998.105 Q321.524 997.758 322.543 997.596 Q323.562 997.411 324.58 997.411 Q330.367 997.411 333.747 1000.58 Q337.126 1003.75 337.126 1009.17 Q337.126 1014.75 333.654 1017.85 Q330.182 1020.93 323.862 1020.93 Q321.687 1020.93 319.418 1020.56 Q317.173 1020.19 314.765 1019.45 L314.765 1014.75 Q316.849 1015.88 319.071 1016.44 Q321.293 1016.99 323.77 1016.99 Q327.774 1016.99 330.112 1014.89 Q332.45 1012.78 332.45 1009.17 Q332.45 1005.56 330.112 1003.45 Q327.774 1001.35 323.77 1001.35 Q321.895 1001.35 320.02 1001.76 Q318.168 1002.18 316.224 1003.06 L316.224 985.698 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M356.339 988.777 Q352.728 988.777 350.899 992.341 Q349.094 995.883 349.094 1003.01 Q349.094 1010.12 350.899 1013.68 Q352.728 1017.23 356.339 1017.23 Q359.973 1017.23 361.779 1013.68 Q363.608 1010.12 363.608 1003.01 Q363.608 995.883 361.779 992.341 Q359.973 988.777 356.339 988.777 M356.339 985.073 Q362.149 985.073 365.205 989.679 Q368.284 994.263 368.284 1003.01 Q368.284 1011.74 365.205 1016.35 Q362.149 1020.93 356.339 1020.93 Q350.529 1020.93 347.45 1016.35 Q344.395 1011.74 344.395 1003.01 Q344.395 994.263 347.45 989.679 Q350.529 985.073 356.339 985.073 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M286.062 727.833 L304.418 727.833 L304.418 731.768 L290.344 731.768 L290.344 740.24 Q291.363 739.893 292.381 739.731 Q293.4 739.545 294.418 739.545 Q300.205 739.545 303.585 742.717 Q306.964 745.888 306.964 751.305 Q306.964 756.883 303.492 759.985 Q300.02 763.064 293.701 763.064 Q291.525 763.064 289.256 762.693 Q287.011 762.323 284.603 761.582 L284.603 756.883 Q286.687 758.018 288.909 758.573 Q291.131 759.129 293.608 759.129 Q297.613 759.129 299.951 757.022 Q302.288 754.916 302.288 751.305 Q302.288 747.694 299.951 745.587 Q297.613 743.481 293.608 743.481 Q291.733 743.481 289.858 743.897 Q288.006 744.314 286.062 745.194 L286.062 727.833 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M326.177 730.911 Q322.566 730.911 320.737 734.476 Q318.932 738.018 318.932 745.147 Q318.932 752.254 320.737 755.818 Q322.566 759.36 326.177 759.36 Q329.811 759.36 331.617 755.818 Q333.446 752.254 333.446 745.147 Q333.446 738.018 331.617 734.476 Q329.811 730.911 326.177 730.911 M326.177 727.208 Q331.987 727.208 335.043 731.814 Q338.122 736.397 338.122 745.147 Q338.122 753.874 335.043 758.481 Q331.987 763.064 326.177 763.064 Q320.367 763.064 317.288 758.481 Q314.233 753.874 314.233 745.147 Q314.233 736.397 317.288 731.814 Q320.367 727.208 326.177 727.208 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M356.339 730.911 Q352.728 730.911 350.899 734.476 Q349.094 738.018 349.094 745.147 Q349.094 752.254 350.899 755.818 Q352.728 759.36 356.339 759.36 Q359.973 759.36 361.779 755.818 Q363.608 752.254 363.608 745.147 Q363.608 738.018 361.779 734.476 Q359.973 730.911 356.339 730.911 M356.339 727.208 Q362.149 727.208 365.205 731.814 Q368.284 736.397 368.284 745.147 Q368.284 753.874 365.205 758.481 Q362.149 763.064 356.339 763.064 Q350.529 763.064 347.45 758.481 Q344.395 753.874 344.395 745.147 Q344.395 736.397 347.45 731.814 Q350.529 727.208 356.339 727.208 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M284.835 469.967 L307.057 469.967 L307.057 471.958 L294.511 504.527 L289.627 504.527 L301.432 473.902 L284.835 473.902 L284.835 469.967 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M316.224 469.967 L334.58 469.967 L334.58 473.902 L320.506 473.902 L320.506 482.375 Q321.524 482.027 322.543 481.865 Q323.562 481.68 324.58 481.68 Q330.367 481.68 333.747 484.851 Q337.126 488.023 337.126 493.439 Q337.126 499.018 333.654 502.12 Q330.182 505.198 323.862 505.198 Q321.687 505.198 319.418 504.828 Q317.173 504.458 314.765 503.717 L314.765 499.018 Q316.849 500.152 319.071 500.708 Q321.293 501.263 323.77 501.263 Q327.774 501.263 330.112 499.157 Q332.45 497.05 332.45 493.439 Q332.45 489.828 330.112 487.722 Q327.774 485.615 323.77 485.615 Q321.895 485.615 320.02 486.032 Q318.168 486.449 316.224 487.328 L316.224 469.967 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M356.339 473.046 Q352.728 473.046 350.899 476.611 Q349.094 480.152 349.094 487.282 Q349.094 494.388 350.899 497.953 Q352.728 501.495 356.339 501.495 Q359.973 501.495 361.779 497.953 Q363.608 494.388 363.608 487.282 Q363.608 480.152 361.779 476.611 Q359.973 473.046 356.339 473.046 M356.339 469.342 Q362.149 469.342 365.205 473.949 Q368.284 478.532 368.284 487.282 Q368.284 496.009 365.205 500.615 Q362.149 505.198 356.339 505.198 Q350.529 505.198 347.45 500.615 Q344.395 496.009 344.395 487.282 Q344.395 478.532 347.45 473.949 Q350.529 469.342 356.339 469.342 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M256.664 242.727 L264.303 242.727 L264.303 216.361 L255.992 218.028 L255.992 213.769 L264.256 212.102 L268.932 212.102 L268.932 242.727 L276.571 242.727 L276.571 246.662 L256.664 246.662 L256.664 242.727 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M296.015 215.181 Q292.404 215.181 290.576 218.745 Q288.77 222.287 288.77 229.417 Q288.77 236.523 290.576 240.088 Q292.404 243.629 296.015 243.629 Q299.65 243.629 301.455 240.088 Q303.284 236.523 303.284 229.417 Q303.284 222.287 301.455 218.745 Q299.65 215.181 296.015 215.181 M296.015 211.477 Q301.826 211.477 304.881 216.083 Q307.96 220.667 307.96 229.417 Q307.96 238.143 304.881 242.75 Q301.826 247.333 296.015 247.333 Q290.205 247.333 287.127 242.75 Q284.071 238.143 284.071 229.417 Q284.071 220.667 287.127 216.083 Q290.205 211.477 296.015 211.477 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M326.177 215.181 Q322.566 215.181 320.737 218.745 Q318.932 222.287 318.932 229.417 Q318.932 236.523 320.737 240.088 Q322.566 243.629 326.177 243.629 Q329.811 243.629 331.617 240.088 Q333.446 236.523 333.446 229.417 Q333.446 222.287 331.617 218.745 Q329.811 215.181 326.177 215.181 M326.177 211.477 Q331.987 211.477 335.043 216.083 Q338.122 220.667 338.122 229.417 Q338.122 238.143 335.043 242.75 Q331.987 247.333 326.177 247.333 Q320.367 247.333 317.288 242.75 Q314.233 238.143 314.233 229.417 Q314.233 220.667 317.288 216.083 Q320.367 211.477 326.177 211.477 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M356.339 215.181 Q352.728 215.181 350.899 218.745 Q349.094 222.287 349.094 229.417 Q349.094 236.523 350.899 240.088 Q352.728 243.629 356.339 243.629 Q359.973 243.629 361.779 240.088 Q363.608 236.523 363.608 229.417 Q363.608 222.287 361.779 218.745 Q359.973 215.181 356.339 215.181 M356.339 211.477 Q362.149 211.477 365.205 216.083 Q368.284 220.667 368.284 229.417 Q368.284 238.143 365.205 242.75 Q362.149 247.333 356.339 247.333 Q350.529 247.333 347.45 242.75 Q344.395 238.143 344.395 229.417 Q344.395 220.667 347.45 216.083 Q350.529 211.477 356.339 211.477 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip852)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,229.382 4017.76,229.382 \"/>\n<polyline clip-path=\"url(#clip852)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1249.06 459.396,1248.58 459.964,1247.01 460.533,1246.42 461.101,1245.76 461.669,1245.01 462.238,1244.18 462.806,1242.25 463.375,1241.27 463.943,1240.17 464.511,1239 465.08,1237.71 465.648,1236.32 466.216,1234.79 466.785,1233.16 467.353,1231.41 467.921,1228.49 468.49,1226.45 469.058,1224.26 469.626,1221.92 470.195,1218.39 470.763,1215.66 471.331,1212.8 471.9,1205.64 472.468,1202.31 473.036,1198.78 473.605,1195.06 474.173,1191.09 474.741,1186.93 475.31,1182.59 475.878,1177 476.446,1171.12 477.015,1164.97 477.583,1159.57 478.152,1153.97 478.72,1148.11 479.288,1142.1 479.857,1135.78 480.425,1129.21 480.993,1122.45 481.562,1112.37 482.13,1105.18 482.698,1096.78 483.267,1088.23 483.835,1078.34 484.403,1069.43 484.972,1061.41 485.54,1053.13 486.108,1044.71 486.677,1035.14 487.245,1025.46 487.813,1016.67 488.382,1006.65 488.95,996.45 489.518,987.379 490.087,976.936 490.655,962.303 491.224,951.995 491.792,941.589 492.36,931.177 492.929,920.652 493.497,911.07 494.065,899.353 494.634,887.631 495.202,877.955 495.77,867.288 496.339,856.571 496.907,845.805 497.475,833.041 498.044,823.428 498.612,811.714 499.18,798.115 499.749,786.627 500.317,775.277 500.885,762.904 501.454,752.674 502.022,740.611 502.59,729.642 503.159,719.833 503.727,711.197 504.295,699.446 504.864,687.907 505.432,679.706 506.001,671.547 506.569,661.438 507.137,650.273 507.706,642.497 508.274,631.631 508.842,623.124 509.411,613.795 509.979,605.605 510.547,597.507 511.116,590.553 511.684,582.608 512.252,576.837 512.821,570.127 513.389,563.409 513.957,555.735 514.526,546.23 515.094,538.977 515.662,531.88 516.231,523.801 516.799,516.992 517.367,511.43 517.936,504.727 518.504,500.476 519.072,495.085 519.641,487.453 520.209,482.201 520.778,473.914 521.346,467.865 521.914,463.064 522.483,457.486 523.051,450.827 523.619,441.143 524.188,434.822 524.756,429.805 525.324,426.017 525.893,421.227 526.461,416.387 527.029,409.539 527.598,403.05 528.166,399.816 528.734,396.731 529.303,394.78 529.871,390.506 530.439,387.569 531.008,383.513 531.576,379.581 532.144,374.551 532.713,369.739 533.281,367.272 533.85,362.592 534.418,359.375 534.986,353.874 535.555,351.958 536.123,349.947 536.691,346.956 537.26,343.871 537.828,341.93 538.396,338.166 538.965,337.648 539.533,333.744 540.101,330.087 540.67,327.589 541.238,327.226 541.806,322.553 542.375,321.187 542.943,318.803 543.511,317.572 544.08,315.459 544.648,312.302 545.216,311.296 545.785,309.183 546.353,307.212 546.921,307.149 547.49,306.168 548.058,304.837 548.627,302.893 549.195,300.819 549.763,300.152 550.332,300.227 550.9,298.146 551.468,297.171 552.037,294.153 552.605,294.363 553.173,293.437 553.742,292.666 554.31,291.616 554.878,290.447 555.447,288.605 556.015,285.537 556.583,283.53 557.152,280.862 557.72,281.412 558.288,281.88 558.857,278.343 559.425,277.041 559.993,275.771 560.562,275.506 561.13,274.993 561.698,274.514 562.267,273.968 562.835,272.505 563.404,268.964 563.972,269.595 564.54,268.268 565.109,269.252 565.677,268.094 566.245,267.673 566.814,265.582 567.382,265.613 567.95,264.489 568.519,264.2 569.087,265.061 569.655,264.685 570.224,263.158 570.792,262.923 571.36,261.808 571.929,259.766 572.497,260.708 573.065,259.427 573.634,261.356 574.202,260.145 574.77,259.718 575.339,262.574 575.907,265.042 576.476,263.386 577.044,261.754 577.612,260.023 578.181,259.51 578.749,256.922 579.317,257.608 579.886,256.261 580.454,255.953 581.022,252.253 581.591,252.391 582.159,250.234 582.727,248.198 583.296,248.412 583.864,248.33 584.432,248.34 585.001,247.379 585.569,243.507 586.137,243.894 586.706,243.431 587.274,242.711 587.842,243.136 588.411,243.45 588.979,242.931 589.547,243.413 590.116,243.879 590.684,244.418 591.253,242.692 591.821,241.966 592.389,240.38 592.958,242.154 593.526,238.654 594.094,239.205 594.663,238.997 595.231,239.617 595.799,241.293 596.368,242.697 596.936,244.152 597.504,244.487 598.073,246.962 598.641,247.915 599.209,246.899 599.778,247.958 600.346,247.655 600.914,247.499 601.483,246.705 602.051,247.694 602.619,245.345 603.188,246.479 603.756,245.228 604.325,245.335 604.893,246.337 605.461,246.288 606.03,246.152 606.598,243.919 607.166,241.814 607.735,240.971 608.303,238.131 608.871,238.865 609.44,237.079 610.008,236.218 610.576,236.613 611.145,239.18 611.713,238.603 612.281,240.008 612.85,240.368 613.418,240.518 613.986,240.736 614.555,239.957 615.123,239.019 615.691,239.503 616.26,237.558 616.828,239.773 617.396,240.184 617.965,239.41 618.533,240.832 619.102,241.952 619.67,242.143 620.238,242.032 620.807,242.233 621.375,241.008 621.943,240.643 622.512,238.499 623.08,238.576 623.648,236.465 624.217,237.601 624.785,237.827 625.353,234.981 625.922,234.36 626.49,236.818 627.058,234.845 627.627,234.317 628.195,233.722 628.763,233.115 629.332,234.44 629.9,235.955 630.468,238.374 631.037,236.698 631.605,236.072 632.173,235.432 632.742,233.794 633.31,234.418 633.879,234.766 634.447,236.177 635.015,237.506 635.584,237.827 636.152,237.817 636.72,237.891 637.289,240.26 637.857,240.118 638.425,239.114 638.994,238.256 639.562,238.347 640.13,237.23 640.699,236.426 641.267,236.669 641.835,237.884 642.404,238.95 642.972,238.803 643.54,236.644 644.109,237.69 644.677,237.758 645.245,239.821 645.814,239.783 646.382,237.687 646.951,238.691 647.519,237.554 648.087,235.532 648.656,235.525 649.224,235.641 649.792,235.842 650.361,234.931 650.929,233.169 651.497,234.653 652.066,234.787 652.634,232.888 653.202,230.187 653.771,229.75 654.339,228.378 654.907,228.043 655.476,229.711 656.044,233.333 656.612,233.627 657.181,233.79 657.749,232.967 658.317,234.538 658.886,234.793 659.454,234.057 660.022,230.347 660.591,229.873 661.159,230.663 661.728,232.059 662.296,233.37 662.864,233.706 663.433,233.101 664.001,231.378 664.569,231.698 665.138,232.1 665.706,232.575 666.274,234.037 666.843,234.183 667.411,234.281 667.979,233.338 668.548,232.553 669.116,232.95 669.684,233.207 670.253,232.471 670.821,236.002 671.389,235.908 671.958,236.978 672.526,238.111 673.094,236.796 673.663,237.707 674.231,239.615 674.799,239.47 675.368,238.161 675.936,238.788 676.505,238.907 677.073,239.651 677.641,238.302 678.21,236.162 678.778,234.395 679.346,235.615 679.915,235.65 680.483,235.764 681.051,234.004 681.62,234.223 682.188,234.412 682.756,234.564 683.325,233.654 683.893,232.816 684.461,234.056 685.03,233.116 685.598,233.25 686.166,234.136 686.735,232.158 687.303,233.515 687.871,234.462 688.44,234.463 689.008,235.307 689.577,236.38 690.145,233.161 690.713,231.251 691.282,231.312 691.85,231.778 692.418,232.116 692.987,232.294 693.555,233.359 694.123,231.646 694.692,232.816 695.26,232.922 695.828,232.766 696.397,234.894 696.965,234.864 697.533,234.889 698.102,233.699 698.67,231.661 699.238,231.837 699.807,232.388 700.375,233.775 700.943,235.031 701.512,234.927 702.08,234.901 702.648,236.749 703.217,236.554 703.785,236.298 704.354,238.272 704.922,237.886 705.49,237.608 706.059,237.446 706.627,239.125 707.195,239.727 707.764,237.215 708.332,235.779 708.9,234.364 709.469,235.282 710.037,234.211 710.605,231.099 711.174,230.273 711.742,230.187 712.31,230.283 712.879,231.599 713.447,231.475 714.015,230.515 714.584,230.717 715.152,231.889 715.72,233.163 716.289,231.853 716.857,233.776 717.425,232.591 717.994,232.444 718.562,232.359 719.131,230.336 719.699,231.563 720.267,231.476 720.836,229.268 721.404,230.712 721.972,228.871 722.541,229.314 723.109,229.79 723.677,227.878 724.246,232.391 724.814,232.657 725.382,233.438 725.951,234.351 726.519,234.132 727.087,232.999 727.656,231.978 728.224,233.201 728.792,232.854 729.361,234.812 729.929,234.669 730.497,232.397 731.066,231.332 731.634,234.571 732.203,234.334 732.771,234.313 733.339,234.24 733.908,233.931 734.476,232.004 735.044,231.061 735.613,228.234 736.181,227.292 736.749,226.27 737.318,226.716 737.886,226.993 738.454,229.568 739.023,229.69 739.591,230.014 740.159,230.308 740.728,230.376 741.296,228.476 741.864,227.599 742.433,226.996 743.001,227.331 743.569,229.8 744.138,231.84 744.706,232.845 745.274,234.657 745.843,234.591 746.411,232.621 746.98,231.605 747.548,231.893 748.116,230.792 748.685,229.763 749.253,228.813 749.821,227.305 750.39,229.848 750.958,230.058 751.526,231.174 752.095,229.162 752.663,230.628 753.231,230.757 753.8,228.826 754.368,230.087 754.936,228.242 755.505,226.603 756.073,226.039 756.641,225.626 757.21,227.161 757.778,226.288 758.346,226.565 758.915,226.887 759.483,226.456 760.052,228.006 760.62,228.391 761.188,227.439 761.757,228.979 762.325,230.322 762.893,230.609 763.462,229.874 764.03,230.196 764.598,230.312 765.167,229.461 765.735,229.805 766.303,228.977 766.872,227.999 767.44,227.352 768.008,227.681 768.577,228.973 769.145,227.233 769.713,229.63 770.282,229.755 770.85,229.907 771.418,230.07 771.987,230.288 772.555,230.528 773.123,230.594 773.692,228.689 774.26,228.068 774.829,228.492 775.397,228.741 775.965,231.319 776.534,233.632 777.102,235.773 777.67,234.564 778.239,234.395 778.807,235.331 779.375,236.184 779.944,236.009 780.512,235.666 781.08,236.455 781.649,236.137 782.217,235.849 782.785,237.586 783.354,238.161 783.922,237.668 784.49,238.417 785.059,234.809 785.627,234.627 786.195,235.269 786.764,234.043 787.332,234.003 787.9,234.785 788.469,235.562 789.037,236.422 789.606,237.331 790.174,238.894 790.742,238.281 791.311,237.739 791.879,238.48 792.447,237.881 793.016,237.497 793.584,234.988 794.152,234.388 794.721,235.033 795.289,235.76 795.857,235.268 796.426,233.883 796.994,233.424 797.562,235.228 798.131,233.795 798.699,234.363 799.267,233.972 799.836,234.554 800.404,235.284 800.972,236.867 801.541,235.187 802.109,234.692 802.678,230.232 803.246,229.092 803.814,228.009 804.383,229.146 804.951,229.323 805.519,228.199 806.088,227.146 806.656,227.433 807.224,225.427 807.793,226.73 808.361,227.97 808.929,229.224 809.498,227.342 810.066,229.585 810.634,230.415 811.203,230.42 811.771,230.471 812.339,231.472 812.908,230.362 813.476,227.139 814.044,227.28 814.613,228.624 815.181,228.787 815.749,228.929 816.318,232.005 816.886,231.724 817.455,230.519 818.023,230.524 818.591,230.318 819.16,231.421 819.728,231.289 820.296,230.078 820.865,227.807 821.433,224.869 822.001,226.265 822.57,225.678 823.138,226.93 823.706,228.177 824.275,228.527 824.843,227.733 825.411,228.098 825.98,227.206 826.548,226.48 827.116,226.531 827.685,224.519 828.253,223.782 828.821,224.31 829.39,224.894 829.958,225.29 830.526,225.639 831.095,223.903 831.663,224.581 832.232,226.957 832.8,227.114 833.368,226.504 833.937,225.734 834.505,225.958 835.073,230.573 835.642,229.755 836.21,230.67 836.778,228.61 837.347,226.644 837.915,224.928 838.483,226.527 839.052,226.91 839.62,229.279 840.188,230.515 840.757,227.319 841.325,229.826 841.893,229.989 842.462,229.065 843.03,228.039 843.598,226.417 844.167,224.556 844.735,224.305 845.304,225.747 845.872,227 846.44,226.203 847.009,227.399 847.577,225.473 848.145,228.144 848.714,228.499 849.282,227.831 849.85,229.262 850.419,227.454 850.987,228.765 851.555,231.035 852.124,234.227 852.692,235.27 853.26,235.897 853.829,235.425 854.397,234.124 854.965,235.135 855.534,236.044 856.102,235.702 856.67,233.208 857.239,233.069 857.807,233.06 858.375,232.835 858.944,231.639 859.512,232.642 860.081,231.606 860.649,232.738 861.217,234.687 861.786,234.427 862.354,234.201 862.922,234.864 863.491,236.52 864.059,231.955 864.627,230.579 865.196,228.406 865.764,230.765 866.332,230.938 866.901,229.829 867.469,230.781 868.037,230.778 868.606,232.788 869.174,231.45 869.742,230.278 870.311,230.313 870.879,230.144 871.447,231.185 872.016,232.25 872.584,230.112 873.152,230.152 873.721,226.996 874.289,226.246 874.858,227.474 875.426,229.643 875.994,231.791 876.563,232.683 877.131,232.605 877.699,233.463 878.268,236.43 878.836,237.243 879.404,235.549 879.973,237.082 880.541,238.521 881.109,234.747 881.678,234.375 882.246,234.114 882.814,233.686 883.383,235.223 883.951,236.634 884.519,236.085 885.088,234.564 885.656,236.268 886.224,233.573 886.793,233.157 887.361,230.825 887.93,229.689 888.498,229.721 889.066,229.595 889.635,228.651 890.203,227.452 890.771,227.561 891.34,226.369 891.908,224.36 892.476,225.894 893.045,228.26 893.613,228.18 894.181,228.201 894.75,227.189 895.318,226.342 895.886,229.837 896.455,227.818 897.023,227.66 897.591,226.737 898.16,225.754 898.728,226.007 899.296,224.173 899.865,225.493 900.433,224.818 901.001,224.043 901.57,224.497 902.138,225.753 902.707,226.912 903.275,226.879 903.843,226.128 904.412,226.329 904.98,226.635 905.548,227.847 906.117,228.912 906.685,229.08 907.253,229.211 907.822,230.334 908.39,230.095 908.958,231.238 909.527,230.021 910.095,230.192 910.663,231.342 911.232,230.315 911.8,229.213 912.368,229.346 912.937,229.413 913.505,231.356 914.073,234.309 914.642,234.04 915.21,232.634 915.779,231.057 916.347,231.038 916.915,231.792 917.484,229.756 918.052,228.879 918.62,227.826 919.189,229.812 919.757,228.857 920.325,228.991 920.894,230.158 921.462,233.119 922.03,233.891 922.599,230.512 923.167,230.665 923.735,231.432 924.304,231.406 924.872,230.217 925.44,230.141 926.009,229.907 926.577,231.081 927.145,231.102 927.714,231.023 928.282,231.687 928.85,230.601 929.419,231.824 929.987,232.556 930.556,231.13 931.124,230.88 931.692,230.978 932.261,230.067 932.829,231.246 933.397,231.077 933.966,229.993 934.534,230.099 935.102,228.977 935.671,231.03 936.239,229.776 936.807,226.862 937.376,227.06 937.944,225.213 938.512,224.358 939.081,225.546 939.649,225.982 940.217,223.365 940.786,224.847 941.354,228.354 941.922,229.611 942.491,230.633 943.059,230.763 943.627,229.794 944.196,228.824 944.764,230.092 945.333,229.281 945.901,229.377 946.469,229.46 947.038,228.703 947.606,227.694 948.174,227.678 948.743,227.925 949.311,228.233 949.879,225.245 950.448,225.642 951.016,228.824 951.584,230.029 952.153,230.119 952.721,229.992 953.289,231.13 953.858,231.304 954.426,229.263 954.994,229.247 955.563,230.468 956.131,230.296 956.699,230.038 957.268,230.828 957.836,231.872 958.405,233.898 958.973,234.556 959.541,234.052 960.11,235.866 960.678,234.175 961.246,235.98 961.815,235.314 962.383,233.645 962.951,233.266 963.52,232.993 964.088,233.781 964.656,231.338 965.225,230.932 965.793,230.854 966.361,230.535 966.93,228.525 967.498,227.629 968.066,227.743 968.635,229.939 969.203,228.034 969.771,228.152 970.34,228.158 970.908,227.239 971.476,227.38 972.045,228.389 972.613,229.53 973.182,228.767 973.75,228.81 974.318,229.843 974.887,228.499 975.455,229.604 976.023,228.636 976.592,227.423 977.16,228.707 977.728,228.581 978.297,228.632 978.865,227.715 979.433,225.927 980.002,226.335 980.57,226.636 981.138,228.052 981.707,228.026 982.275,228.301 982.843,226.45 983.412,227.795 983.98,227.956 984.548,228.001 985.117,228.351 985.685,228.503 986.253,226.695 986.822,226.972 987.39,227.234 987.959,227.253 988.527,230.67 989.095,226.547 989.664,227.809 990.232,228.145 990.8,229.469 991.369,231.355 991.937,229.859 992.505,228.87 993.074,230.071 993.642,229.983 994.21,231.106 994.779,233.081 995.347,236.132 995.915,236.553 996.484,236.053 997.052,233.456 997.62,233.256 998.189,231.792 998.757,232.69 999.325,231.383 999.894,232.296 1000.46,231.873 1001.03,228.551 1001.6,227.603 1002.17,225.739 1002.74,223.934 1003.3,221.12 1003.87,221.645 1004.44,222.126 1005.01,222.733 1005.58,222.98 1006.15,223.611 1006.71,225.096 1007.28,225.523 1007.85,224.761 1008.42,226.42 1008.99,226.399 1009.56,225.536 1010.12,222.814 1010.69,226.605 1011.26,226.768 1011.83,226.012 1012.4,226.193 1012.97,228.53 1013.53,228.701 1014.1,228.881 1014.67,229.269 1015.24,230.407 1015.81,230.488 1016.38,230.614 1016.94,232.683 1017.51,235.365 1018.08,234.064 1018.65,232.833 1019.22,233.83 1019.79,234.685 1020.35,234.525 1020.92,233.015 1021.49,233.897 1022.06,233.664 1022.63,234.436 1023.2,234.246 1023.76,236.115 1024.33,233.707 1024.9,233.415 1025.47,233.085 1026.04,230.915 1026.61,231.223 1027.17,230.184 1027.74,230.154 1028.31,231.355 1028.88,231.402 1029.45,231.183 1030.02,233.197 1030.58,233.028 1031.15,230.818 1031.72,230.742 1032.29,229.695 1032.86,227.633 1033.43,227.941 1033.99,228.294 1034.56,229.128 1035.13,228.081 1035.7,230.243 1036.27,230.044 1036.84,230.006 1037.4,229.789 1037.97,228.715 1038.54,226.733 1039.11,224.978 1039.68,223.327 1040.25,222.682 1040.81,226.278 1041.38,225.549 1041.95,224.995 1042.52,229.54 1043.09,228.664 1043.66,228.904 1044.22,230.301 1044.79,228.223 1045.36,227.601 1045.93,227.834 1046.5,228.972 1047.07,230.02 1047.63,230.981 1048.2,229.807 1048.77,232.001 1049.34,230.702 1049.91,230.635 1050.48,230.655 1051.05,229.458 1051.61,231.529 1052.18,231.614 1052.75,231.524 1053.32,231.236 1053.89,229.135 1054.46,229.042 1055.02,229.142 1055.59,229.102 1056.16,229.121 1056.73,226.218 1057.3,226.435 1057.87,227.827 1058.43,228.245 1059,227.475 1059.57,227.764 1060.14,228.795 1060.71,228.885 1061.28,229.906 1061.84,227.673 1062.41,227.95 1062.98,228.067 1063.55,230.047 1064.12,232.104 1064.69,227.668 1065.25,227.911 1065.82,228.035 1066.39,228.236 1066.96,227.539 1067.53,226.901 1068.1,226.094 1068.66,223.468 1069.23,224.923 1069.8,226.306 1070.37,225.589 1070.94,224.81 1071.51,224.185 1072.07,225.656 1072.64,225.007 1073.21,226.362 1073.78,226.647 1074.35,227 1074.92,227.432 1075.48,227.836 1076.05,227.049 1076.62,228.387 1077.19,229.692 1077.76,229.878 1078.33,229.744 1078.89,233.023 1079.46,229.698 1080.03,229.909 1080.6,228.92 1081.17,230.157 1081.74,229.143 1082.3,227.2 1082.87,228.425 1083.44,228.672 1084.01,228.777 1084.58,228.001 1085.15,227.124 1085.71,228.339 1086.28,231.404 1086.85,230.434 1087.42,229.395 1087.99,231.308 1088.56,232.332 1089.12,231.107 1089.69,231.348 1090.26,231.175 1090.83,229.156 1091.4,230.36 1091.97,231.599 1092.53,230.596 1093.1,230.769 1093.67,229.886 1094.24,230.154 1094.81,231.267 1095.38,231.234 1095.94,231.177 1096.51,235.424 1097.08,234.833 1097.65,234.225 1098.22,235.074 1098.79,236.941 1099.35,234.481 1099.92,235.114 1100.49,235.803 1101.06,236.457 1101.63,236.091 1102.2,234.787 1102.76,234.269 1103.33,233.954 1103.9,237.809 1104.47,238.263 1105.04,236.444 1105.61,240.133 1106.17,236.369 1106.74,236.855 1107.31,238.247 1107.88,238.723 1108.45,235.93 1109.02,234.272 1109.58,234.875 1110.15,233.311 1110.72,230.783 1111.29,230.827 1111.86,230.666 1112.43,230.565 1112.99,230.339 1113.56,232.373 1114.13,230.076 1114.7,229.982 1115.27,229.126 1115.84,230.918 1116.4,231.598 1116.97,233.205 1117.54,232 1118.11,231.824 1118.68,231.575 1119.25,231.135 1119.81,231.849 1120.38,229.528 1120.95,229.33 1121.52,229.103 1122.09,229.979 1122.66,227.814 1123.23,227.835 1123.79,230.708 1124.36,228.301 1124.93,227.286 1125.5,227.549 1126.07,226.568 1126.64,227.574 1127.2,225.715 1127.77,224.964 1128.34,224.166 1128.91,222.376 1129.48,222.717 1130.05,222.741 1130.61,223.075 1131.18,223.664 1131.75,222.94 1132.32,227.384 1132.89,224.233 1133.46,225.662 1134.02,226.948 1134.59,227.294 1135.16,228.495 1135.73,228.606 1136.3,227.56 1136.87,226.698 1137.43,226.891 1138,225.87 1138.57,226.123 1139.14,226.234 1139.71,226.666 1140.28,227.057 1140.84,227.208 1141.41,226.374 1141.98,227.472 1142.55,226.45 1143.12,225.418 1143.69,226.551 1144.25,226.804 1144.82,227.089 1145.39,228.379 1145.96,228.57 1146.53,230.597 1147.1,227.341 1147.66,228.562 1148.23,227.806 1148.8,228.856 1149.37,228.097 1149.94,229.405 1150.51,230.594 1151.07,230.559 1151.64,230.242 1152.21,228.28 1152.78,226.251 1153.35,225.747 1153.92,224.991 1154.48,223.445 1155.05,221.901 1155.62,223.512 1156.19,225.05 1156.76,226.528 1157.33,226.892 1157.89,228.186 1158.46,227.388 1159.03,227.499 1159.6,227.988 1160.17,229.136 1160.74,228.475 1161.3,228.536 1161.87,228.662 1162.44,227.879 1163.01,228.321 1163.58,229.516 1164.15,229.335 1164.71,231.195 1165.28,231.044 1165.85,232.112 1166.42,234.02 1166.99,231.556 1167.56,231.428 1168.12,231.19 1168.69,232.173 1169.26,232.092 1169.83,231.881 1170.4,232.722 1170.97,232.649 1171.53,229.523 1172.1,228.65 1172.67,234.006 1173.24,234.758 1173.81,235.441 1174.38,236.911 1174.94,235.3 1175.51,236.786 1176.08,236.095 1176.65,235.634 1177.22,234.734 1177.79,237.335 1178.35,236.943 1178.92,235.332 1179.49,232.805 1180.06,232.454 1180.63,231.992 1181.2,231.751 1181.76,230.367 1182.33,231.514 1182.9,231.476 1183.47,231.194 1184.04,230.884 1184.61,231.797 1185.17,230.504 1185.74,231.411 1186.31,231.073 1186.88,232.114 1187.45,231.516 1188.02,229.215 1188.58,231.006 1189.15,228.733 1189.72,229.639 1190.29,230.571 1190.86,230.624 1191.43,232.473 1192,231.957 1192.56,232.716 1193.13,232.274 1193.7,232.015 1194.27,232.965 1194.84,231.604 1195.41,231.424 1195.97,233.221 1196.54,233.754 1197.11,234.277 1197.68,230.664 1198.25,230.641 1198.82,232.382 1199.38,233.08 1199.95,232.866 1200.52,232.48 1201.09,231.229 1201.66,229.612 1202.23,230.386 1202.79,231.326 1203.36,231.258 1203.93,231.039 1204.5,230.781 1205.07,231.61 1205.64,231.339 1206.2,233.126 1206.77,231.671 1207.34,231.229 1207.91,231.881 1208.48,230.432 1209.05,230.142 1209.61,229.996 1210.18,230.971 1210.75,230.781 1211.32,232.745 1211.89,232.287 1212.46,230.831 1213.02,230.655 1213.59,229.479 1214.16,228.269 1214.73,226.21 1215.3,225.313 1215.87,224.427 1216.43,225.752 1217,224.852 1217.57,224.12 1218.14,224.48 1218.71,226.907 1219.28,225.958 1219.84,225.092 1220.41,226.158 1220.98,222.991 1221.55,223.256 1222.12,221.629 1222.69,222.29 1223.25,224.795 1223.82,225.179 1224.39,224.514 1224.96,224.884 1225.53,226.381 1226.1,226.681 1226.66,226.504 1227.23,225.822 1227.8,228.066 1228.37,228.1 1228.94,227.263 1229.51,227.481 1230.07,225.568 1230.64,226.95 1231.21,226.025 1231.78,228.448 1232.35,228.316 1232.92,228.467 1233.48,227.325 1234.05,226.222 1234.62,227.778 1235.19,228.997 1235.76,225.882 1236.33,228.038 1236.89,223.949 1237.46,224.421 1238.03,226.978 1238.6,228.203 1239.17,229.249 1239.74,229.333 1240.3,230.496 1240.87,229.369 1241.44,229.257 1242.01,230.287 1242.58,233.193 1243.15,234.128 1243.71,234.766 1244.28,233.259 1244.85,232.844 1245.42,229.329 1245.99,230.406 1246.56,230.24 1247.12,229.166 1247.69,229.023 1248.26,227.1 1248.83,229.082 1249.4,229.134 1249.97,228.056 1250.53,226.166 1251.1,224.545 1251.67,227.233 1252.24,227.161 1252.81,227.564 1253.38,228.937 1253.94,229.925 1254.51,228.914 1255.08,227.957 1255.65,230.253 1256.22,232.355 1256.79,233.182 1257.35,233.055 1257.92,230.751 1258.49,228.429 1259.06,227.389 1259.63,227.535 1260.2,228.786 1260.76,227.783 1261.33,227.898 1261.9,228.176 1262.47,229.406 1263.04,230.76 1263.61,231.684 1264.18,230.319 1264.74,231.239 1265.31,231.974 1265.88,229.712 1266.45,229.463 1267.02,229.455 1267.59,230.606 1268.15,230.593 1268.72,229.248 1269.29,227.261 1269.86,230.452 1270.43,230.129 1271,230.242 1271.56,229.057 1272.13,225.917 1272.7,225.228 1273.27,229.649 1273.84,231.402 1274.41,231.61 1274.97,229.556 1275.54,228.495 1276.11,229.623 1276.68,229.581 1277.25,228.554 1277.82,228.592 1278.38,229.431 1278.95,228.324 1279.52,226.229 1280.09,225.357 1280.66,226.7 1281.23,226.827 1281.79,226.889 1282.36,227.919 1282.93,228.974 1283.5,229.087 1284.07,229.83 1284.64,229.816 1285.2,231.932 1285.77,230.803 1286.34,231.564 1286.91,231.337 1287.48,231.995 1288.05,229.899 1288.61,229.689 1289.18,228.829 1289.75,230.889 1290.32,230.636 1290.89,230.557 1291.46,230.415 1292.02,232.387 1292.59,232.007 1293.16,231.891 1293.73,231.681 1294.3,233.315 1294.87,233.36 1295.43,233.979 1296,234.762 1296.57,233.166 1297.14,234.982 1297.71,234.536 1298.28,234.298 1298.84,234.03 1299.41,231.713 1299.98,232.399 1300.55,231.164 1301.12,231.047 1301.69,228.76 1302.25,229.734 1302.82,226.523 1303.39,224.654 1303.96,222.776 1304.53,222.172 1305.1,220.59 1305.66,220.123 1306.23,220.875 1306.8,224.303 1307.37,224.459 1307.94,225.799 1308.51,224.006 1309.07,225.397 1309.64,226.73 1310.21,226.76 1310.78,225.762 1311.35,226.113 1311.92,226.519 1312.48,227.821 1313.05,228.104 1313.62,231.444 1314.19,231.476 1314.76,231.195 1315.33,230.893 1315.89,231.706 1316.46,231.572 1317.03,232.684 1317.6,232.611 1318.17,233.538 1318.74,233.313 1319.3,231.918 1319.87,231.584 1320.44,229.456 1321.01,229.338 1321.58,230.337 1322.15,231.387 1322.71,229.163 1323.28,228.057 1323.85,228.097 1324.42,229.248 1324.99,229.255 1325.56,228.33 1326.12,229.216 1326.69,231.181 1327.26,231.109 1327.83,231.713 1328.4,231.255 1328.97,229.005 1329.53,228.947 1330.1,230.289 1330.67,230.197 1331.24,230.026 1331.81,230.292 1332.38,230.304 1332.94,230.125 1333.51,227.842 1334.08,229.893 1334.65,231.034 1335.22,230.925 1335.79,230.798 1336.36,229.842 1336.92,230.962 1337.49,229.726 1338.06,229.551 1338.63,227.581 1339.2,228.724 1339.77,228.552 1340.33,228.582 1340.9,229.615 1341.47,229.675 1342.04,230.691 1342.61,230.654 1343.18,230.358 1343.74,229.296 1344.31,230.316 1344.88,229.307 1345.45,228.433 1346.02,229.295 1346.59,228.231 1347.15,227.317 1347.72,228.574 1348.29,226.537 1348.86,225.803 1349.43,227.171 1350,225.37 1350.56,224.312 1351.13,221.794 1351.7,221.317 1352.27,221.964 1352.84,221.505 1353.41,223.074 1353.97,223.649 1354.54,222.976 1355.11,223.728 1355.68,223.321 1356.25,223.818 1356.82,223.225 1357.38,225.88 1357.95,223.098 1358.52,223.741 1359.09,222.133 1359.66,222.779 1360.23,224.37 1360.79,224.783 1361.36,227.601 1361.93,226.88 1362.5,229.354 1363.07,229.586 1363.64,229.77 1364.2,229.802 1364.77,230.861 1365.34,231.812 1365.91,231.753 1366.48,233.879 1367.05,233.766 1367.61,235.666 1368.18,234.462 1368.75,234.912 1369.32,233.457 1369.89,234.501 1370.46,234.165 1371.02,234.975 1371.59,236.799 1372.16,234.112 1372.73,236.858 1373.3,236.34 1373.87,236.92 1374.43,238.429 1375,237.866 1375.57,237.207 1376.14,236.651 1376.71,234.986 1377.28,235.659 1377.84,234.074 1378.41,232.516 1378.98,232.177 1379.55,231.884 1380.12,232.768 1380.69,232.61 1381.25,233.304 1381.82,234.061 1382.39,233.396 1382.96,233.168 1383.53,232.729 1384.1,232.119 1384.66,233.868 1385.23,232.446 1385.8,230.288 1386.37,232.374 1386.94,233.028 1387.51,233.584 1388.07,234.257 1388.64,234.773 1389.21,233.037 1389.78,232.965 1390.35,229.225 1390.92,229.114 1391.48,227.037 1392.05,227.926 1392.62,228.008 1393.19,229.032 1393.76,230.147 1394.33,228.781 1394.89,229.612 1395.46,228.425 1396.03,231.661 1396.6,231.439 1397.17,231.341 1397.74,230.118 1398.3,228.041 1398.87,228.112 1399.44,229.256 1400.01,229.119 1400.58,226.921 1401.15,224.816 1401.71,225.068 1402.28,224.078 1402.85,224.397 1403.42,222.688 1403.99,223.174 1404.56,223.686 1405.13,223.121 1405.69,222.356 1406.26,223.755 1406.83,229.348 1407.4,229.222 1407.97,227.084 1408.54,227.134 1409.1,226.304 1409.67,227.413 1410.24,227.416 1410.81,227.551 1411.38,225.7 1411.95,225.095 1412.51,228.496 1413.08,228.475 1413.65,228.608 1414.22,229.569 1414.79,230.627 1415.36,230.584 1415.92,229.577 1416.49,231.498 1417.06,231.133 1417.63,228.952 1418.2,228.715 1418.77,226.609 1419.33,226.924 1419.9,225.932 1420.47,228.277 1421.04,227.279 1421.61,225.368 1422.18,224.327 1422.74,223.632 1423.31,222.999 1423.88,224.814 1424.45,224.224 1425.02,222.604 1425.59,222.185 1426.15,222.464 1426.72,221.155 1427.29,221.937 1427.86,223.755 1428.43,224.378 1429,224.768 1429.56,225.088 1430.13,225.382 1430.7,225.875 1431.27,224.237 1431.84,224.582 1432.41,224.956 1432.97,226.492 1433.54,226.819 1434.11,228.996 1434.68,230.31 1435.25,229.418 1435.82,230.593 1436.38,230.705 1436.95,229.712 1437.52,229.828 1438.09,229.908 1438.66,229.946 1439.23,231.029 1439.79,232.833 1440.36,231.546 1440.93,229.493 1441.5,229.697 1442.07,228.611 1442.64,228.735 1443.2,229.024 1443.77,229.225 1444.34,230.392 1444.91,230.363 1445.48,231.567 1446.05,228.565 1446.61,230.893 1447.18,231.671 1447.75,231.513 1448.32,231.649 1448.89,232.629 1449.46,232.515 1450.02,233.522 1450.59,234.489 1451.16,233.07 1451.73,231.895 1452.3,231.874 1452.87,231.869 1453.43,232.695 1454,232.53 1454.57,231.571 1455.14,230.587 1455.71,229.353 1456.28,229.467 1456.84,228.546 1457.41,228.718 1457.98,229.835 1458.55,228.964 1459.12,228.939 1459.69,230.056 1460.25,232.073 1460.82,232.794 1461.39,233.628 1461.96,232.511 1462.53,231.27 1463.1,229.088 1463.66,226.219 1464.23,227.591 1464.8,227.767 1465.37,228.969 1465.94,229.074 1466.51,232.225 1467.07,231.962 1467.64,227.604 1468.21,227.76 1468.78,228.872 1469.35,230.873 1469.92,229.745 1470.48,228.667 1471.05,229.965 1471.62,230.989 1472.19,232.013 1472.76,229.69 1473.33,227.742 1473.89,228.94 1474.46,230.213 1475.03,228.212 1475.6,227.218 1476.17,229.447 1476.74,229.46 1477.31,230.593 1477.87,228.394 1478.44,226.543 1479.01,227.746 1479.58,227.989 1480.15,225.998 1480.72,227.31 1481.28,224.161 1481.85,224.705 1482.42,225.025 1482.99,225.337 1483.56,226.547 1484.13,228.776 1484.69,229.898 1485.26,228.999 1485.83,230.076 1486.4,231.127 1486.97,232.233 1487.54,233.265 1488.1,230.865 1488.67,232.892 1489.24,233.873 1489.81,232.769 1490.38,232.573 1490.95,232.577 1491.51,234.449 1492.08,233.882 1492.65,232.532 1493.22,233.298 1493.79,231.997 1494.36,231.656 1494.92,232.675 1495.49,231.437 1496.06,227.996 1496.63,226.895 1497.2,231.298 1497.77,233.338 1498.33,230.111 1498.9,230.226 1499.47,230.001 1500.04,230.016 1500.61,229.953 1501.18,229.821 1501.74,227.731 1502.31,228.909 1502.88,229.173 1503.45,229.093 1504.02,230.404 1504.59,230.419 1505.15,232.539 1505.72,233.354 1506.29,230.007 1506.86,231.135 1507.43,231.194 1508,232.386 1508.56,231.078 1509.13,228.663 1509.7,228.471 1510.27,227.701 1510.84,229.853 1511.41,227.902 1511.97,227.021 1512.54,228.254 1513.11,228.362 1513.68,229.444 1514.25,230.458 1514.82,231.558 1515.38,233.507 1515.95,233.219 1516.52,232.097 1517.09,231.843 1517.66,232.734 1518.23,231.464 1518.79,230.159 1519.36,230.13 1519.93,229.006 1520.5,229.058 1521.07,229.969 1521.64,231.013 1522.2,230.839 1522.77,229.713 1523.34,228.591 1523.91,226.661 1524.48,225.872 1525.05,226.319 1525.61,226.483 1526.18,227.512 1526.75,228.676 1527.32,230.67 1527.89,229.411 1528.46,229.322 1529.02,229.267 1529.59,229.118 1530.16,230.208 1530.73,230.071 1531.3,229.925 1531.87,231.765 1532.43,233.681 1533,233.214 1533.57,232.719 1534.14,231.421 1534.71,232.064 1535.28,230.979 1535.84,230.755 1536.41,231.61 1536.98,229.52 1537.55,231.308 1538.12,230.356 1538.69,230.164 1539.25,228.756 1539.82,229.719 1540.39,228.784 1540.96,226.875 1541.53,225.774 1542.1,226.005 1542.66,226.186 1543.23,224.591 1543.8,225.903 1544.37,226.093 1544.94,228.163 1545.51,226.109 1546.08,224.147 1546.64,223.693 1547.21,225.044 1547.78,225.279 1548.35,223.597 1548.92,227.173 1549.49,226.217 1550.05,225.411 1550.62,225.577 1551.19,225.815 1551.76,228.053 1552.33,227.159 1552.9,227.41 1553.46,227.255 1554.03,228.676 1554.6,229.817 1555.17,231.091 1555.74,232.156 1556.31,234.042 1556.87,233.846 1557.44,233.428 1558.01,233.235 1558.58,233.057 1559.15,233.581 1559.72,235.195 1560.28,233.583 1560.85,232.25 1561.42,232.013 1561.99,234.038 1562.56,234.417 1563.13,236.005 1563.69,234.452 1564.26,234.287 1564.83,231.715 1565.4,231.329 1565.97,230.933 1566.54,230.966 1567.1,229.683 1567.67,226.568 1568.24,224.877 1568.81,225.195 1569.38,225.596 1569.95,225.392 1570.51,226.646 1571.08,227.997 1571.65,227.074 1572.22,227.31 1572.79,226.444 1573.36,223.7 1573.92,223.942 1574.49,227.298 1575.06,227.381 1575.63,226.615 1576.2,226.823 1576.77,229.155 1577.33,231.254 1577.9,231.33 1578.47,230.275 1579.04,229.041 1579.61,229.893 1580.18,230.712 1580.74,228.493 1581.31,230.714 1581.88,231.438 1582.45,236.285 1583.02,232.823 1583.59,232.3 1584.15,232.242 1584.72,231.988 1585.29,231.953 1585.86,233.012 1586.43,231.577 1587,231.433 1587.56,231.359 1588.13,231.295 1588.7,230.968 1589.27,230.782 1589.84,230.669 1590.41,229.532 1590.97,229.449 1591.54,230.511 1592.11,229.388 1592.68,229.436 1593.25,229.313 1593.82,229.17 1594.38,230.261 1594.95,232.189 1595.52,229.882 1596.09,229.714 1596.66,229.597 1597.23,227.61 1597.79,226.905 1598.36,227.158 1598.93,229.472 1599.5,228.273 1600.07,229.451 1600.64,229.798 1601.2,229.776 1601.77,229.629 1602.34,231.544 1602.91,230.376 1603.48,229.299 1604.05,229.453 1604.61,228.498 1605.18,231.682 1605.75,230.466 1606.32,230.311 1606.89,230.07 1607.46,229.904 1608.02,227.757 1608.59,228.95 1609.16,229.804 1609.73,227.749 1610.3,225.781 1610.87,225.085 1611.43,224.51 1612,225.961 1612.57,225.203 1613.14,225.618 1613.71,226.689 1614.28,226.905 1614.84,226.054 1615.41,226.377 1615.98,225.588 1616.55,225.038 1617.12,224.342 1617.69,226.613 1618.26,228.845 1618.82,229.887 1619.39,229.714 1619.96,227.669 1620.53,227.877 1621.1,229.252 1621.67,230.198 1622.23,231.027 1622.8,231.007 1623.37,229.958 1623.94,230.902 1624.51,230.77 1625.08,231.696 1625.64,231.607 1626.21,233.655 1626.78,233.514 1627.35,229.02 1627.92,228.077 1628.49,227.105 1629.05,226.197 1629.62,226.458 1630.19,224.515 1630.76,223.856 1631.33,224.104 1631.9,224.653 1632.46,225.06 1633.03,224.666 1633.6,226.115 1634.17,227.437 1634.74,225.554 1635.31,227.001 1635.87,227.274 1636.44,228.519 1637.01,227.631 1637.58,227.667 1638.15,228.957 1638.72,233.199 1639.28,231.967 1639.85,231.827 1640.42,230.834 1640.99,230.677 1641.56,230.522 1642.13,231.475 1642.69,231.706 1643.26,232.672 1643.83,232.34 1644.4,233.258 1644.97,234.146 1645.54,235.811 1646.1,234.299 1646.67,233.958 1647.24,234.781 1647.81,234.478 1648.38,233.054 1648.95,230.657 1649.51,232.659 1650.08,230.523 1650.65,229.533 1651.22,229.694 1651.79,229.633 1652.36,230.704 1652.92,230.776 1653.49,229.764 1654.06,226.654 1654.63,227.972 1655.2,229.128 1655.77,230.207 1656.33,231.161 1656.9,231.1 1657.47,232.072 1658.04,229.937 1658.61,229.773 1659.18,227.898 1659.74,226.041 1660.31,225.182 1660.88,226.485 1661.45,226.735 1662.02,230.194 1662.59,231.309 1663.15,231.134 1663.72,231.043 1664.29,231.916 1664.86,230.664 1665.43,229.586 1666,229.481 1666.56,228.701 1667.13,228.715 1667.7,226.705 1668.27,224.722 1668.84,224.185 1669.41,224.669 1669.97,225.144 1670.54,225.516 1671.11,225.636 1671.68,226.973 1672.25,226.294 1672.82,227.593 1673.38,227.731 1673.95,225.903 1674.52,224.193 1675.09,225.392 1675.66,227.781 1676.23,229.021 1676.79,229.182 1677.36,231.395 1677.93,230.397 1678.5,229.391 1679.07,229.209 1679.64,231.495 1680.2,231.468 1680.77,233.617 1681.34,234.588 1681.91,235.38 1682.48,237.142 1683.05,238.661 1683.61,238 1684.18,235.321 1684.75,236.87 1685.32,238.383 1685.89,237.566 1686.46,239.029 1687.02,237.136 1687.59,236.432 1688.16,234.888 1688.73,233.459 1689.3,231.986 1689.87,230.676 1690.44,231.548 1691,230.238 1691.57,228.226 1692.14,229.322 1692.71,229.005 1693.28,228.697 1693.85,227.825 1694.41,227.807 1694.98,228.916 1695.55,229.125 1696.12,228.945 1696.69,228.663 1697.26,230.529 1697.82,230.222 1698.39,231.27 1698.96,231.044 1699.53,228.761 1700.1,229.582 1700.67,229.584 1701.23,230.48 1701.8,230.488 1702.37,229.233 1702.94,230.217 1703.51,231.035 1704.08,230.659 1704.64,230.363 1705.21,229.131 1705.78,231.104 1706.35,231.88 1706.92,228.564 1707.49,228.435 1708.05,229.349 1708.62,229.575 1709.19,228.521 1709.76,227.567 1710.33,229.749 1710.9,225.564 1711.46,221.744 1712.03,222.264 1712.6,224.866 1713.17,223.935 1713.74,225.243 1714.31,224.827 1714.87,226.17 1715.44,226.692 1716.01,227.892 1716.58,229.883 1717.15,229.894 1717.72,229.766 1718.28,229.773 1718.85,228.683 1719.42,226.927 1719.99,229.169 1720.56,226.31 1721.13,226.402 1721.69,225.504 1722.26,225.814 1722.83,227.895 1723.4,229.049 1723.97,228.794 1724.54,229.956 1725.1,226.806 1725.67,226.142 1726.24,228.289 1726.81,227.606 1727.38,225.701 1727.95,226.98 1728.51,224.902 1729.08,225.16 1729.65,222.301 1730.22,221.73 1730.79,221.387 1731.36,219.895 1731.92,222.787 1732.49,224.194 1733.06,224.653 1733.63,226.37 1734.2,227.622 1734.77,227.778 1735.33,227.867 1735.9,228.903 1736.47,227.915 1737.04,228.116 1737.61,230.675 1738.18,229.647 1738.74,230.565 1739.31,228.544 1739.88,229.67 1740.45,229.664 1741.02,230.815 1741.59,230.858 1742.15,230.725 1742.72,231.651 1743.29,233.572 1743.86,231.199 1744.43,231.093 1745,229.924 1745.56,229.085 1746.13,229.596 1746.7,228.552 1747.27,226.631 1747.84,225.924 1748.41,225.414 1748.97,225.613 1749.54,225.99 1750.11,228.492 1750.68,230.589 1751.25,232.734 1751.82,232.538 1752.38,234.416 1752.95,231.987 1753.52,232.666 1754.09,234.547 1754.66,234.077 1755.23,232.694 1755.79,231.315 1756.36,233.192 1756.93,232.956 1757.5,233.681 1758.07,232.321 1758.64,231.159 1759.21,231.166 1759.77,230.075 1760.34,228.982 1760.91,231.135 1761.48,230.164 1762.05,231.07 1762.62,233.016 1763.18,233.557 1763.75,232.223 1764.32,230.161 1764.89,230.174 1765.46,229.148 1766.03,228.062 1766.59,229.345 1767.16,227.152 1767.73,228.275 1768.3,226.233 1768.87,227.438 1769.44,227.619 1770,224.552 1770.57,226.081 1771.14,229.738 1771.71,231.028 1772.28,229.855 1772.85,227.852 1773.41,229.895 1773.98,231.065 1774.55,232.076 1775.12,230.988 1775.69,229.811 1776.26,229.795 1776.82,229.546 1777.39,227.624 1777.96,228.788 1778.53,227.833 1779.1,228.865 1779.67,228.781 1780.23,227.742 1780.8,228.882 1781.37,228.891 1781.94,228.921 1782.51,226.963 1783.08,227.265 1783.64,225.432 1784.21,225.84 1784.78,227.273 1785.35,228.664 1785.92,228.029 1786.49,229.187 1787.05,229.256 1787.62,229.522 1788.19,230.753 1788.76,231.607 1789.33,230.456 1789.9,230.675 1790.46,230.679 1791.03,231.629 1791.6,233.607 1792.17,234.396 1792.74,233.881 1793.31,235.526 1793.87,234.096 1794.44,234.901 1795.01,235.292 1795.58,235.881 1796.15,235.353 1796.72,235.089 1797.28,234.638 1797.85,234.008 1798.42,233.485 1798.99,233.303 1799.56,232.81 1800.13,234.358 1800.69,234.011 1801.26,233.773 1801.83,230.074 1802.4,229.978 1802.97,230.867 1803.54,230.767 1804.1,228.489 1804.67,227.181 1805.24,226.255 1805.81,225.466 1806.38,224.748 1806.95,224.96 1807.51,226.017 1808.08,223.088 1808.65,223.355 1809.22,225.881 1809.79,225.721 1810.36,226.771 1810.92,226.034 1811.49,224.268 1812.06,222.489 1812.63,225.126 1813.2,224.469 1813.77,226.019 1814.33,225.229 1814.9,227.518 1815.47,227.446 1816.04,228.64 1816.61,226.721 1817.18,227.786 1817.74,226.666 1818.31,224.659 1818.88,227.015 1819.45,227.062 1820.02,227.274 1820.59,229.692 1821.15,230.716 1821.72,229.591 1822.29,229.46 1822.86,229.344 1823.43,227.348 1824,227.519 1824.56,225.432 1825.13,227.862 1825.7,229.018 1826.27,231.23 1826.84,234.359 1827.41,231.927 1827.97,231.833 1828.54,231.748 1829.11,227.379 1829.68,228.302 1830.25,227.587 1830.82,228.514 1831.39,230.84 1831.95,231.046 1832.52,229.952 1833.09,231.191 1833.66,230.983 1834.23,230.87 1834.8,230.609 1835.36,231.386 1835.93,231.181 1836.5,231.003 1837.07,229.8 1837.64,229.002 1838.21,228.001 1838.77,229.223 1839.34,230.512 1839.91,230.693 1840.48,231.688 1841.05,231.361 1841.62,232.429 1842.18,231.343 1842.75,232.303 1843.32,231.034 1843.89,232.859 1844.46,233.623 1845.03,230.02 1845.59,229.921 1846.16,230.882 1846.73,229.723 1847.3,230.573 1847.87,232.486 1848.44,230.137 1849,231.123 1849.57,229.804 1850.14,228.767 1850.71,228.68 1851.28,228.786 1851.85,225.868 1852.41,226.157 1852.98,225.427 1853.55,228.669 1854.12,229.828 1854.69,232.038 1855.26,231.887 1855.82,231.733 1856.39,232.38 1856.96,229.768 1857.53,227.678 1858.1,226.674 1858.67,228.585 1859.23,230.903 1859.8,233.801 1860.37,234.62 1860.94,233.262 1861.51,230.821 1862.08,230.033 1862.64,229.847 1863.21,228.708 1863.78,229.676 1864.35,229.623 1864.92,230.503 1865.49,228.284 1866.05,227.407 1866.62,229.668 1867.19,229.727 1867.76,228.61 1868.33,228.352 1868.9,229.35 1869.46,229.382 1870.03,229.235 1870.6,228.229 1871.17,227.958 1871.74,227.046 1872.31,228.184 1872.87,226.163 1873.44,226.307 1874.01,228.513 1874.58,228.488 1875.15,227.555 1875.72,227.571 1876.28,227.555 1876.85,227.661 1877.42,227.603 1877.99,227.364 1878.56,228.573 1879.13,228.467 1879.69,226.499 1880.26,232.034 1880.83,230.075 1881.4,229.953 1881.97,230.954 1882.54,228.837 1883.1,229.896 1883.67,227.786 1884.24,231.157 1884.81,230.97 1885.38,229.922 1885.95,229.849 1886.51,229.743 1887.08,229.833 1887.65,230.616 1888.22,229.31 1888.79,227.205 1889.36,227.215 1889.92,227.315 1890.49,227.419 1891.06,229.72 1891.63,229.773 1892.2,228.866 1892.77,230.03 1893.33,231.105 1893.9,230.976 1894.47,230.735 1895.04,232.697 1895.61,232.263 1896.18,230.232 1896.74,233.221 1897.31,232.927 1897.88,232.675 1898.45,231.481 1899.02,231.272 1899.59,229.01 1900.16,229.989 1900.72,230.006 1901.29,229.987 1901.86,229.023 1902.43,227.038 1903,227.33 1903.57,228.472 1904.13,229.82 1904.7,228.884 1905.27,228.885 1905.84,229.858 1906.41,229.907 1906.98,229.702 1907.54,229.431 1908.11,225.222 1908.68,224.433 1909.25,226.016 1909.82,226.019 1910.39,227.259 1910.95,227.269 1911.52,227.542 1912.09,225.641 1912.66,225.01 1913.23,227.274 1913.8,228.379 1914.36,227.035 1914.93,227.09 1915.5,229.312 1916.07,229.248 1916.64,230.27 1917.21,230.258 1917.77,229.176 1918.34,228.329 1918.91,229.393 1919.48,230.241 1920.05,228.174 1920.62,228.285 1921.18,228.406 1921.75,228.506 1922.32,228.596 1922.89,229.845 1923.46,230.754 1924.03,231.496 1924.59,231.364 1925.16,232.159 1925.73,231.008 1926.3,231.963 1926.87,228.716 1927.44,230.814 1928,230.648 1928.57,229.486 1929.14,228.315 1929.71,229.444 1930.28,229.521 1930.85,230.633 1931.41,230.358 1931.98,230.349 1932.55,231.248 1933.12,230.993 1933.69,230.672 1934.26,232.534 1934.82,232.156 1935.39,232.176 1935.96,229.051 1936.53,230.006 1937.1,227.897 1937.67,227.892 1938.23,226.89 1938.8,226.204 1939.37,225.167 1939.94,225.534 1940.51,228.822 1941.08,230.899 1941.64,228.5 1942.21,228.58 1942.78,229.438 1943.35,229.479 1943.92,228.338 1944.49,227.813 1945.05,227.97 1945.62,227.97 1946.19,231.251 1946.76,232.018 1947.33,230.682 1947.9,230.385 1948.46,230.348 1949.03,230.483 1949.6,231.522 1950.17,232.267 1950.74,234.719 1951.31,235.021 1951.87,234.65 1952.44,233.247 1953.01,232.836 1953.58,232.563 1954.15,232.325 1954.72,232.984 1955.28,232.743 1955.85,233.485 1956.42,233.196 1956.99,232.865 1957.56,231.406 1958.13,229.218 1958.69,228.308 1959.26,228.279 1959.83,228.201 1960.4,227.186 1960.97,227.256 1961.54,228.373 1962.1,227.247 1962.67,229.329 1963.24,230.267 1963.81,229.244 1964.38,229.216 1964.95,227.428 1965.51,227.628 1966.08,227.824 1966.65,227.784 1967.22,226.922 1967.79,227.041 1968.36,227.406 1968.92,225.464 1969.49,225.767 1970.06,223.865 1970.63,225.293 1971.2,224.517 1971.77,224.931 1972.34,227.211 1972.9,228.19 1973.47,225.973 1974.04,227.292 1974.61,227.456 1975.18,229.701 1975.75,229.35 1976.31,229.372 1976.88,228.227 1977.45,228.476 1978.02,227.568 1978.59,226.699 1979.16,227.002 1979.72,227.188 1980.29,226.209 1980.86,226.524 1981.43,227.7 1982,228.606 1982.57,230.876 1983.13,231.944 1983.7,231.694 1984.27,229.764 1984.84,228.755 1985.41,228.789 1985.98,229.819 1986.54,226.654 1987.11,228.756 1987.68,227.969 1988.25,228.022 1988.82,229.175 1989.39,227.11 1989.95,229.233 1990.52,229.38 1991.09,228.236 1991.66,227.535 1992.23,227.619 1992.8,226.568 1993.36,227.725 1993.93,229.827 1994.5,232.067 1995.07,231.142 1995.64,229.977 1996.21,230.077 1996.77,226.869 1997.34,226.727 1997.91,227.871 1998.48,227.946 1999.05,227.123 1999.62,226.381 2000.18,226.345 2000.75,226.59 2001.32,227.923 2001.89,227.339 2002.46,228.59 2003.03,228.769 2003.59,228.894 2004.16,226.642 2004.73,224.781 2005.3,226.189 2005.87,227.338 2006.44,226.482 2007,226.685 2007.57,227.903 2008.14,228.121 2008.71,227.278 2009.28,227.535 2009.85,227.769 2010.41,229.066 2010.98,227.183 2011.55,228.617 2012.12,229.99 2012.69,232.051 2013.26,229.892 2013.82,230.814 2014.39,230.966 2014.96,230.088 2015.53,231.157 2016.1,231.171 2016.67,234.141 2017.23,235.034 2017.8,232.625 2018.37,231.488 2018.94,232.312 2019.51,232.12 2020.08,232.007 2020.64,233.804 2021.21,233.527 2021.78,233.246 2022.35,232.023 2022.92,230.716 2023.49,232.683 2024.05,232.556 2024.62,232.268 2025.19,233.176 2025.76,230.807 2026.33,232.767 2026.9,234.514 2027.46,236.123 2028.03,234.792 2028.6,234.334 2029.17,236.078 2029.74,234.451 2030.31,234.824 2030.87,232.405 2031.44,231.189 2032.01,229.092 2032.58,230.053 2033.15,231.145 2033.72,229.965 2034.28,232.829 2034.85,231.426 2035.42,231.115 2035.99,230.048 2036.56,230.009 2037.13,228.816 2037.69,228.86 2038.26,229.719 2038.83,230.69 2039.4,232.698 2039.97,230.183 2040.54,230.262 2041.11,230.198 2041.67,229.167 2042.24,230.059 2042.81,230.028 2043.38,229.883 2043.95,228.857 2044.52,228.883 2045.08,231.041 2045.65,228.848 2046.22,228.921 2046.79,227.822 2047.36,227.932 2047.93,226.828 2048.49,226.99 2049.06,228.026 2049.63,228.025 2050.2,228.96 2050.77,227.907 2051.34,227.844 2051.9,227.933 2052.47,227.951 2053.04,228.961 2053.61,229.242 2054.18,228.259 2054.75,226.152 2055.31,226.442 2055.88,227.774 2056.45,227.554 2057.02,226.587 2057.59,226.605 2058.16,229.816 2058.72,229.667 2059.29,228.57 2059.86,226.658 2060.43,226.839 2061,227.218 2061.57,228.099 2062.13,227.125 2062.7,229.633 2063.27,228.553 2063.84,228.683 2064.41,225.754 2064.98,224.91 2065.54,224.169 2066.11,224.663 2066.68,223.153 2067.25,223.636 2067.82,224.064 2068.39,223.684 2068.95,223.218 2069.52,223.706 2070.09,225.365 2070.66,226.89 2071.23,229.241 2071.8,228.346 2072.36,226.725 2072.93,226.958 2073.5,227.379 2074.07,227.554 2074.64,227.832 2075.21,230 2075.77,229.158 2076.34,229.3 2076.91,230.456 2077.48,232.543 2078.05,232.362 2078.62,232.096 2079.18,231.701 2079.75,232.529 2080.32,231.345 2080.89,233.35 2081.46,230.116 2082.03,230.145 2082.59,232.149 2083.16,231.052 2083.73,232.325 2084.3,230.062 2084.87,231.02 2085.44,229.906 2086,230.041 2086.57,229.841 2087.14,232.036 2087.71,231.733 2088.28,230.578 2088.85,230.642 2089.41,230.604 2089.98,229.511 2090.55,231.431 2091.12,234.254 2091.69,234.08 2092.26,232.669 2092.82,233.488 2093.39,230.239 2093.96,229.082 2094.53,230.055 2095.1,230.956 2095.67,229.982 2096.23,227.705 2096.8,227.901 2097.37,227.919 2097.94,228.106 2098.51,227.239 2099.08,227.491 2099.64,227.515 2100.21,226.571 2100.78,224.818 2101.35,225.309 2101.92,225.569 2102.49,228.951 2103.05,231.287 2103.62,231.142 2104.19,229.84 2104.76,229.892 2105.33,229.708 2105.9,230.695 2106.46,231.572 2107.03,232.402 2107.6,232.18 2108.17,231.868 2108.74,230.582 2109.31,231.457 2109.87,229.457 2110.44,229.538 2111.01,229.603 2111.58,229.635 2112.15,231.568 2112.72,230.57 2113.29,229.446 2113.85,230.467 2114.42,231.445 2114.99,231.398 2115.56,231.304 2116.13,230.227 2116.7,227.177 2117.26,226.558 2117.83,226.837 2118.4,229.72 2118.97,229.633 2119.54,228.509 2120.11,228.361 2120.67,226.464 2121.24,229.782 2121.81,230.732 2122.38,230.335 2122.95,228.376 2123.52,229.504 2124.08,229.427 2124.65,229.296 2125.22,228.503 2125.79,229.622 2126.36,229.621 2126.93,228.583 2127.49,228.617 2128.06,228.683 2128.63,228.623 2129.2,228.74 2129.77,228.792 2130.34,230.174 2130.9,228.19 2131.47,227.42 2132.04,226.387 2132.61,225.472 2133.18,226.669 2133.75,225.759 2134.31,223.712 2134.88,226.258 2135.45,224.818 2136.02,224.24 2136.59,224.873 2137.16,226.161 2137.72,226.489 2138.29,226.643 2138.86,226.752 2139.43,227.885 2140,226.99 2140.57,228.387 2141.13,228.763 2141.7,227.767 2142.27,228.04 2142.84,229.135 2143.41,229.357 2143.98,229.542 2144.54,228.57 2145.11,227.545 2145.68,231.748 2146.25,231.714 2146.82,230.803 2147.39,230.896 2147.95,232.814 2148.52,233.48 2149.09,234.134 2149.66,236.077 2150.23,236.536 2150.8,234.899 2151.36,234.724 2151.93,231.129 2152.5,230.89 2153.07,228.813 2153.64,229.682 2154.21,228.592 2154.77,227.591 2155.34,226.665 2155.91,226.741 2156.48,227.033 2157.05,226.193 2157.62,226.645 2158.18,227.003 2158.75,227.35 2159.32,228.655 2159.89,228.823 \"/>\n<path clip-path=\"url(#clip850)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip850)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip850)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip850)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip850)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip850)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip850)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.036 ± 0.02\n  with uncertainty of ± 0.0018426662278127847\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.0141 ± (0.00253312, 0.0025414) (MC)\n  95% confidence interval: [-4.0193, -4.00872]) (MC)\n  linear error propagation: -4.0143 ± 0.00266663\n  |δ_y| = |0.00200952| (≤ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.014098929863048, val_l = 0.005201176010863229, val_u = 0.005379678107081176)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip880\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip880)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip881\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip880)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip882\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip882)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip882)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip882)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip882)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip880)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip882)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1153.17 2211.02,1153.17 \"/>\n<polyline clip-path=\"url(#clip882)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1004.03 2211.02,1004.03 \"/>\n<polyline clip-path=\"url(#clip882)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,854.883 2211.02,854.883 \"/>\n<polyline clip-path=\"url(#clip882)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,705.74 2211.02,705.74 \"/>\n<polyline clip-path=\"url(#clip882)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,556.597 2211.02,556.597 \"/>\n<polyline clip-path=\"url(#clip882)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,407.454 2211.02,407.454 \"/>\n<polyline clip-path=\"url(#clip882)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,258.311 2211.02,258.311 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1153.17 365.751,1153.17 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1004.03 365.751,1004.03 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,854.883 365.751,854.883 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,705.74 365.751,705.74 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,556.597 365.751,556.597 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,407.454 365.751,407.454 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,258.311 365.751,258.311 \"/>\n<path clip-path=\"url(#clip880)\" d=\"M298.909 1138.97 Q295.298 1138.97 293.469 1142.53 Q291.664 1146.07 291.664 1153.2 Q291.664 1160.31 293.469 1163.88 Q295.298 1167.42 298.909 1167.42 Q302.543 1167.42 304.349 1163.88 Q306.177 1160.31 306.177 1153.2 Q306.177 1146.07 304.349 1142.53 Q302.543 1138.97 298.909 1138.97 M298.909 1135.26 Q304.719 1135.26 307.775 1139.87 Q310.853 1144.45 310.853 1153.2 Q310.853 1161.93 307.775 1166.54 Q304.719 1171.12 298.909 1171.12 Q293.099 1171.12 290.02 1166.54 Q286.964 1161.93 286.964 1153.2 Q286.964 1144.45 290.02 1139.87 Q293.099 1135.26 298.909 1135.26 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M259.557 1017.37 L267.196 1017.37 L267.196 991.006 L258.886 992.672 L258.886 988.413 L267.15 986.746 L271.826 986.746 L271.826 1017.37 L279.465 1017.37 L279.465 1021.31 L259.557 1021.31 L259.557 1017.37 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M298.909 989.825 Q295.298 989.825 293.469 993.39 Q291.664 996.931 291.664 1004.06 Q291.664 1011.17 293.469 1014.73 Q295.298 1018.27 298.909 1018.27 Q302.543 1018.27 304.349 1014.73 Q306.177 1011.17 306.177 1004.06 Q306.177 996.931 304.349 993.39 Q302.543 989.825 298.909 989.825 M298.909 986.121 Q304.719 986.121 307.775 990.728 Q310.853 995.311 310.853 1004.06 Q310.853 1012.79 307.775 1017.39 Q304.719 1021.98 298.909 1021.98 Q293.099 1021.98 290.02 1017.39 Q286.964 1012.79 286.964 1004.06 Q286.964 995.311 290.02 990.728 Q293.099 986.121 298.909 986.121 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M262.775 868.228 L279.094 868.228 L279.094 872.163 L257.15 872.163 L257.15 868.228 Q259.812 865.473 264.395 860.844 Q269.002 856.191 270.182 854.848 Q272.428 852.325 273.307 850.589 Q274.21 848.83 274.21 847.14 Q274.21 844.386 272.266 842.649 Q270.344 840.913 267.242 840.913 Q265.043 840.913 262.59 841.677 Q260.159 842.441 257.381 843.992 L257.381 839.27 Q260.205 838.136 262.659 837.557 Q265.113 836.978 267.15 836.978 Q272.52 836.978 275.715 839.663 Q278.909 842.349 278.909 846.839 Q278.909 848.969 278.099 850.89 Q277.312 852.788 275.205 855.381 Q274.627 856.052 271.525 859.27 Q268.423 862.464 262.775 868.228 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M298.909 840.682 Q295.298 840.682 293.469 844.247 Q291.664 847.788 291.664 854.918 Q291.664 862.024 293.469 865.589 Q295.298 869.131 298.909 869.131 Q302.543 869.131 304.349 865.589 Q306.177 862.024 306.177 854.918 Q306.177 847.788 304.349 844.247 Q302.543 840.682 298.909 840.682 M298.909 836.978 Q304.719 836.978 307.775 841.585 Q310.853 846.168 310.853 854.918 Q310.853 863.645 307.775 868.251 Q304.719 872.834 298.909 872.834 Q293.099 872.834 290.02 868.251 Q286.964 863.645 286.964 854.918 Q286.964 846.168 290.02 841.585 Q293.099 836.978 298.909 836.978 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M272.914 704.386 Q276.27 705.103 278.145 707.372 Q280.043 709.64 280.043 712.974 Q280.043 718.09 276.525 720.89 Q273.006 723.691 266.525 723.691 Q264.349 723.691 262.034 723.252 Q259.742 722.835 257.289 721.978 L257.289 717.465 Q259.233 718.599 261.548 719.177 Q263.863 719.756 266.386 719.756 Q270.784 719.756 273.076 718.02 Q275.39 716.284 275.39 712.974 Q275.39 709.918 273.238 708.205 Q271.108 706.469 267.289 706.469 L263.261 706.469 L263.261 702.627 L267.474 702.627 Q270.923 702.627 272.752 701.261 Q274.58 699.872 274.58 697.279 Q274.58 694.617 272.682 693.205 Q270.807 691.77 267.289 691.77 Q265.367 691.77 263.168 692.187 Q260.969 692.604 258.33 693.483 L258.33 689.317 Q260.992 688.576 263.307 688.205 Q265.645 687.835 267.705 687.835 Q273.029 687.835 276.131 690.266 Q279.233 692.673 279.233 696.793 Q279.233 699.664 277.59 701.654 Q275.946 703.622 272.914 704.386 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M298.909 691.539 Q295.298 691.539 293.469 695.104 Q291.664 698.645 291.664 705.775 Q291.664 712.881 293.469 716.446 Q295.298 719.988 298.909 719.988 Q302.543 719.988 304.349 716.446 Q306.177 712.881 306.177 705.775 Q306.177 698.645 304.349 695.104 Q302.543 691.539 298.909 691.539 M298.909 687.835 Q304.719 687.835 307.775 692.441 Q310.853 697.025 310.853 705.775 Q310.853 714.502 307.775 719.108 Q304.719 723.691 298.909 723.691 Q293.099 723.691 290.02 719.108 Q286.964 714.502 286.964 705.775 Q286.964 697.025 290.02 692.441 Q293.099 687.835 298.909 687.835 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M271.594 543.391 L259.789 561.84 L271.594 561.84 L271.594 543.391 M270.367 539.317 L276.247 539.317 L276.247 561.84 L281.177 561.84 L281.177 565.729 L276.247 565.729 L276.247 573.877 L271.594 573.877 L271.594 565.729 L255.992 565.729 L255.992 561.215 L270.367 539.317 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M298.909 542.396 Q295.298 542.396 293.469 545.96 Q291.664 549.502 291.664 556.632 Q291.664 563.738 293.469 567.303 Q295.298 570.844 298.909 570.844 Q302.543 570.844 304.349 567.303 Q306.177 563.738 306.177 556.632 Q306.177 549.502 304.349 545.96 Q302.543 542.396 298.909 542.396 M298.909 538.692 Q304.719 538.692 307.775 543.298 Q310.853 547.882 310.853 556.632 Q310.853 565.358 307.775 569.965 Q304.719 574.548 298.909 574.548 Q293.099 574.548 290.02 569.965 Q286.964 565.358 286.964 556.632 Q286.964 547.882 290.02 543.298 Q293.099 538.692 298.909 538.692 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M258.793 390.174 L277.15 390.174 L277.15 394.109 L263.076 394.109 L263.076 402.581 Q264.094 402.234 265.113 402.072 Q266.131 401.887 267.15 401.887 Q272.937 401.887 276.316 405.058 Q279.696 408.229 279.696 413.646 Q279.696 419.225 276.224 422.326 Q272.752 425.405 266.432 425.405 Q264.256 425.405 261.988 425.035 Q259.742 424.664 257.335 423.924 L257.335 419.225 Q259.418 420.359 261.641 420.914 Q263.863 421.47 266.34 421.47 Q270.344 421.47 272.682 419.363 Q275.02 417.257 275.02 413.646 Q275.02 410.035 272.682 407.928 Q270.344 405.822 266.34 405.822 Q264.465 405.822 262.59 406.238 Q260.738 406.655 258.793 407.535 L258.793 390.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M298.909 393.252 Q295.298 393.252 293.469 396.817 Q291.664 400.359 291.664 407.488 Q291.664 414.595 293.469 418.16 Q295.298 421.701 298.909 421.701 Q302.543 421.701 304.349 418.16 Q306.177 414.595 306.177 407.488 Q306.177 400.359 304.349 396.817 Q302.543 393.252 298.909 393.252 M298.909 389.549 Q304.719 389.549 307.775 394.155 Q310.853 398.739 310.853 407.488 Q310.853 416.215 307.775 420.822 Q304.719 425.405 298.909 425.405 Q293.099 425.405 290.02 420.822 Q286.964 416.215 286.964 407.488 Q286.964 398.739 290.02 394.155 Q293.099 389.549 298.909 389.549 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M269.326 256.447 Q266.178 256.447 264.326 258.6 Q262.497 260.753 262.497 264.503 Q262.497 268.23 264.326 270.405 Q266.178 272.558 269.326 272.558 Q272.474 272.558 274.303 270.405 Q276.154 268.23 276.154 264.503 Q276.154 260.753 274.303 258.6 Q272.474 256.447 269.326 256.447 M278.608 241.794 L278.608 246.054 Q276.849 245.22 275.043 244.781 Q273.261 244.341 271.502 244.341 Q266.872 244.341 264.418 247.466 Q261.988 250.591 261.641 256.91 Q263.006 254.896 265.066 253.831 Q267.127 252.744 269.603 252.744 Q274.812 252.744 277.821 255.915 Q280.853 259.063 280.853 264.503 Q280.853 269.827 277.705 273.044 Q274.557 276.262 269.326 276.262 Q263.33 276.262 260.159 271.679 Q256.988 267.072 256.988 258.345 Q256.988 250.151 260.877 245.29 Q264.766 240.406 271.316 240.406 Q273.076 240.406 274.858 240.753 Q276.664 241.1 278.608 241.794 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M298.909 244.109 Q295.298 244.109 293.469 247.674 Q291.664 251.216 291.664 258.345 Q291.664 265.452 293.469 269.017 Q295.298 272.558 298.909 272.558 Q302.543 272.558 304.349 269.017 Q306.177 265.452 306.177 258.345 Q306.177 251.216 304.349 247.674 Q302.543 244.109 298.909 244.109 M298.909 240.406 Q304.719 240.406 307.775 245.012 Q310.853 249.595 310.853 258.345 Q310.853 267.072 307.775 271.679 Q304.719 276.262 298.909 276.262 Q293.099 276.262 290.02 271.679 Q286.964 267.072 286.964 258.345 Q286.964 249.595 290.02 245.012 Q293.099 240.406 298.909 240.406 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip882)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1043.28 400.199,942.318 400.786,849.686 401.372,764.819 401.958,687.201 402.545,616.354 403.131,551.834 403.718,493.229 404.304,534.447 404.891,482.037 405.477,434.706 406.063,393.373 406.65,355.164 407.236,390.566 407.823,357.377 408.409,328.889 408.995,302.969 409.582,280.355 410.168,260.83 410.755,245.434 411.341,231.41 411.927,219.895 412.514,250.145 413.1,241.961 413.687,235.84 414.273,231.637 414.86,259.145 415.446,258.615 416.032,258.689 416.619,354.721 417.205,356.108 417.792,358.984 418.378,362.654 418.964,368.312 419.551,374.488 420.137,381.109 420.724,403.56 421.31,426.058 421.896,448.517 422.483,458.455 423.069,468.609 423.656,479.466 424.242,489.884 424.829,501.44 425.415,513.386 426.001,525.202 426.588,562.81 427.174,574.07 427.761,592.92 428.347,610.884 428.933,636.057 429.52,652.705 430.106,662.495 430.693,672.777 431.279,682.87 431.865,698.302 432.452,713.18 433.038,722.553 433.625,737.116 434.211,751.557 434.798,760.123 435.384,774.057 435.97,804.432 436.557,816.158 437.143,827.712 437.73,838.785 438.316,849.813 438.902,857.147 439.489,871.443 440.075,885.258 440.662,892.151 441.248,901.943 441.835,911.649 442.421,921.283 443.007,936.423 443.594,942.467 444.18,954.159 444.767,970.621 445.353,981.338 445.939,991.581 446.526,1004.22 447.112,1011.6 447.699,1023.26 448.285,1032.32 448.871,1038.75 449.458,1042.62 450.044,1053.35 450.631,1063.59 451.217,1066.86 451.804,1070.14 452.39,1077.48 452.976,1086.98 453.563,1089.87 454.149,1098.86 454.736,1103.41 455.322,1109.61 455.908,1113.79 456.495,1117.91 457.081,1120.07 457.668,1124.13 458.254,1124.43 458.84,1126.51 459.427,1128.72 460.013,1132.7 460.6,1139.92 461.186,1143.45 461.773,1146.84 462.359,1151.97 462.945,1155.15 463.532,1156.41 464.118,1159.63 464.705,1159.04 465.291,1160.36 465.877,1165.32 466.464,1166.69 467.05,1172.86 467.637,1175.72 468.223,1176.79 468.809,1179.14 469.396,1183.23 469.982,1191.92 470.569,1195.79 471.155,1197.86 471.742,1198.24 472.328,1200.15 472.914,1202.24 473.501,1207.29 474.087,1211.95 474.674,1212.13 475.26,1212.18 475.846,1210.7 476.433,1212.52 477.019,1212.56 477.606,1214.23 478.192,1215.81 478.778,1218.98 479.365,1221.95 479.951,1221.82 480.538,1224.76 481.124,1225.81 481.711,1230 482.297,1229.5 482.883,1229.17 483.47,1230.19 484.056,1231.4 484.643,1231.17 485.229,1233.39 485.815,1231.41 486.402,1233.9 486.988,1236.15 487.575,1236.96 488.161,1235.04 488.748,1238.74 489.334,1238.25 489.92,1239.11 490.507,1238.54 491.093,1239.13 491.68,1241.11 492.266,1240.4 492.852,1241.12 493.439,1241.72 494.025,1239.93 494.612,1239.31 495.198,1239.16 495.784,1239.82 496.371,1240.69 496.957,1239.82 497.544,1238.03 498.13,1238.96 498.717,1238.55 499.303,1240.73 499.889,1238.92 500.476,1238.53 501.062,1237.97 501.649,1237.78 502.235,1237.76 502.821,1238.61 503.408,1241.04 503.994,1242.2 504.581,1244.24 505.167,1242.33 505.753,1240.51 506.34,1243.66 506.926,1244.11 507.513,1244.55 508.099,1243.78 508.686,1243.32 509.272,1242.83 509.858,1242.44 510.445,1243.19 511.031,1246.52 511.618,1244.81 512.204,1245.49 512.79,1243.37 513.377,1243.85 513.963,1243.45 514.55,1245.11 515.136,1244.22 515.722,1244.74 516.309,1244.26 516.895,1242.39 517.482,1242.01 518.068,1243.04 518.655,1242.54 519.241,1243.11 519.827,1244.83 520.414,1242.97 521,1243.79 521.587,1240.74 522.173,1241.46 522.759,1241.26 523.346,1237.07 523.932,1233.28 524.519,1234.46 525.105,1235.65 525.691,1236.99 526.278,1236.9 526.864,1239.33 527.451,1237.85 528.037,1238.83 528.624,1238.57 529.21,1242.42 529.796,1241.72 530.383,1243.78 530.969,1245.74 531.556,1245.04 532.142,1244.7 532.728,1244.24 533.315,1244.95 533.901,1249.18 534.488,1248.38 535.074,1248.6 535.661,1249.13 536.247,1248.32 536.833,1247.62 537.42,1247.91 538.006,1247.02 538.593,1246.14 539.179,1245.15 539.765,1246.87 540.352,1247.43 540.938,1249.02 541.525,1246.65 542.111,1250.53 542.697,1249.66 543.284,1249.68 543.87,1248.71 544.457,1246.48 545.043,1244.52 545.63,1242.47 546.216,1241.73 546.802,1238.41 547.389,1236.85 547.975,1237.64 548.562,1235.96 549.148,1235.89 549.734,1235.65 550.321,1236.18 550.907,1234.59 551.494,1236.98 552.08,1235.25 552.666,1236.35 553.253,1235.85 553.839,1234.28 554.426,1233.94 555.012,1233.71 555.599,1235.99 556.185,1238.17 556.771,1238.89 557.358,1242 557.944,1240.93 558.531,1242.83 559.117,1243.68 559.703,1243.05 560.29,1239.83 560.876,1240.29 561.463,1238.4 562.049,1237.72 562.635,1237.29 563.222,1236.77 563.808,1237.43 564.395,1238.3 564.981,1237.5 565.568,1239.58 566.154,1236.76 566.74,1236.03 567.327,1236.7 567.913,1234.77 568.5,1233.16 569.086,1232.64 569.672,1232.48 570.259,1231.95 570.845,1233.11 571.432,1233.27 572.018,1235.57 572.605,1235.26 573.191,1237.56 573.777,1236.05 574.364,1235.59 574.95,1238.77 575.537,1239.38 576.123,1236.34 576.709,1238.51 577.296,1239.01 577.882,1239.6 578.469,1240.22 579.055,1238.57 579.641,1236.65 580.228,1233.62 580.814,1235.41 581.401,1235.98 581.987,1236.58 582.574,1238.39 583.16,1237.54 583.746,1237.02 584.333,1235.22 584.919,1233.48 585.506,1232.91 586.092,1232.72 586.678,1232.44 587.265,1229.42 587.851,1229.34 588.438,1230.28 589.024,1231.08 589.61,1230.76 590.197,1231.88 590.783,1232.66 591.37,1232.21 591.956,1230.59 592.543,1229.13 593.129,1229.08 593.715,1231.43 594.302,1230.01 594.888,1229.74 595.475,1227.09 596.061,1226.89 596.647,1229.15 597.234,1227.76 597.82,1228.9 598.407,1231.11 598.993,1230.97 599.579,1230.69 600.166,1230.31 600.752,1231.24 601.339,1233.2 601.925,1231.35 602.512,1231.07 603.098,1233.2 603.684,1236.31 604.271,1236.81 604.857,1238.42 605.444,1238.83 606.03,1236.9 606.616,1232.61 607.203,1232.17 607.789,1231.88 608.376,1232.75 608.962,1230.81 609.548,1230.38 610.135,1231.13 610.721,1235.41 611.308,1235.95 611.894,1235.01 612.481,1233.32 613.067,1231.71 613.653,1231.22 614.24,1231.84 614.826,1233.79 615.413,1233.36 615.999,1232.84 616.585,1232.21 617.172,1230.4 617.758,1230.12 618.345,1229.9 618.931,1230.9 619.518,1231.74 620.104,1231.19 620.69,1230.81 621.277,1231.59 621.863,1227.33 622.45,1227.29 623.036,1225.87 623.622,1224.34 624.209,1225.71 624.795,1224.45 625.382,1221.98 625.968,1221.92 626.554,1223.24 627.141,1222.29 627.727,1221.93 628.314,1220.83 628.9,1222.19 629.487,1224.53 630.073,1226.47 630.659,1224.91 631.246,1224.72 631.832,1224.44 632.419,1226.38 633.005,1226.01 633.591,1225.68 634.178,1225.38 634.764,1226.34 635.351,1227.23 635.937,1225.68 636.523,1226.69 637.11,1226.44 637.696,1225.3 638.283,1227.54 638.869,1225.86 639.456,1224.65 640.042,1224.53 640.628,1223.41 641.215,1222 641.801,1225.65 642.388,1227.82 642.974,1227.71 643.56,1227.11 644.147,1226.66 644.733,1226.38 645.32,1225.06 645.906,1226.99 646.492,1225.55 647.079,1225.35 647.665,1225.45 648.252,1222.85 648.838,1222.76 649.425,1222.6 650.011,1223.89 650.597,1226.2 651.184,1225.94 651.77,1225.23 652.357,1223.52 652.943,1221.93 653.529,1221.92 654.116,1221.82 654.702,1219.5 655.289,1219.56 655.875,1219.7 656.462,1217.19 657.048,1217.44 657.634,1217.57 658.221,1217.58 658.807,1215.39 659.394,1214.45 659.98,1217.2 660.566,1218.72 661.153,1220.25 661.739,1219.05 662.326,1220.18 662.912,1223.75 663.498,1224.69 664.085,1224.77 664.671,1224.64 665.258,1223.06 665.844,1223.16 666.431,1224.24 667.017,1223.98 667.603,1222.56 668.19,1220.99 668.776,1222.46 669.363,1220.12 669.949,1221.43 670.535,1221.52 671.122,1221.55 671.708,1223.88 672.295,1222.4 672.881,1222.46 673.467,1225.02 674.054,1223.31 674.64,1225.46 675.227,1224.95 675.813,1224.39 676.4,1226.63 676.986,1221.34 677.572,1220.95 678.159,1219.95 678.745,1218.78 679.332,1218.92 679.918,1220.15 680.504,1221.28 681.091,1219.77 681.677,1220.09 682.264,1217.69 682.85,1217.73 683.436,1220.3 684.023,1221.49 684.609,1217.61 685.196,1217.77 685.782,1217.68 686.369,1217.66 686.955,1217.91 687.541,1220.09 688.128,1221.14 688.714,1224.44 689.301,1225.57 689.887,1226.82 690.473,1226.37 691.06,1226.11 691.646,1223.13 692.233,1222.98 692.819,1222.59 693.405,1222.23 693.992,1222.13 694.578,1224.35 695.165,1225.4 695.751,1226.15 696.338,1225.81 696.924,1222.95 697.51,1220.53 698.097,1219.28 698.683,1217.05 699.27,1217.01 699.856,1219.22 700.442,1220.35 701.029,1219.96 701.615,1221.2 702.202,1222.38 702.788,1223.5 703.375,1225.29 703.961,1222.34 704.547,1222.08 705.134,1220.74 705.72,1223.08 706.307,1221.35 706.893,1221.17 707.479,1223.42 708.066,1221.94 708.652,1224.1 709.239,1226.06 709.825,1226.79 710.411,1227.35 710.998,1225.63 711.584,1226.71 712.171,1226.46 712.757,1226.14 713.344,1226.71 713.93,1224.95 714.516,1224.53 715.103,1225.67 715.689,1223.9 716.276,1222.33 716.862,1221.96 717.448,1222.8 718.035,1222.41 718.621,1222.26 719.208,1223.24 719.794,1222.83 720.38,1223.8 720.967,1224.96 721.553,1225.76 722.14,1225.42 722.726,1223.93 723.313,1225.99 723.899,1223.22 724.485,1223.06 725.072,1222.87 725.658,1222.67 726.245,1222.4 726.831,1222.09 727.417,1221.99 728.004,1224.21 728.59,1224.96 729.177,1224.49 729.763,1224.21 730.349,1221.19 730.936,1218.4 731.522,1215.77 732.109,1217.05 732.695,1217.13 733.282,1215.9 733.868,1214.75 734.454,1214.8 735.041,1215.06 735.627,1213.98 736.214,1214.19 736.8,1214.37 737.386,1212.16 737.973,1211.28 738.559,1211.67 739.146,1210.58 739.732,1214.66 740.318,1214.75 740.905,1213.87 741.491,1215.19 742.078,1215.12 742.664,1214.09 743.251,1213.04 743.837,1211.88 744.423,1210.63 745.01,1208.59 745.596,1209.1 746.183,1209.54 746.769,1208.46 747.355,1208.96 747.942,1209.22 748.528,1212.01 749.115,1212.59 749.701,1211.71 750.288,1210.72 750.874,1211.16 751.46,1212.66 752.047,1213.1 752.633,1210.87 753.22,1212.43 753.806,1211.66 754.392,1212 754.979,1211.21 755.565,1210.22 756.152,1208.2 756.738,1210.03 757.324,1210.48 757.911,1215.63 758.497,1216.96 759.084,1218.24 759.67,1216.93 760.257,1216.73 760.843,1218.06 761.429,1219.33 762.016,1219.04 762.602,1221.44 763.189,1220 763.775,1218.6 764.361,1217.16 764.948,1219.38 765.534,1216.78 766.121,1215.8 766.707,1215.77 767.293,1215.68 767.88,1214.48 768.466,1215.74 769.053,1219.52 769.639,1219.4 770.226,1217.87 770.812,1217.69 771.398,1217.54 771.985,1213.92 772.571,1214.19 773.158,1215.56 773.744,1215.53 774.33,1215.74 774.917,1214.42 775.503,1214.53 776.09,1215.91 776.676,1218.58 777.262,1222.07 777.849,1220.53 778.435,1221.29 779.022,1219.91 779.608,1218.49 780.195,1218.11 780.781,1219.07 781.367,1218.67 781.954,1219.75 782.54,1220.66 783.127,1220.67 783.713,1223.1 784.299,1224.07 784.886,1223.58 785.472,1223.01 786.059,1222.65 786.645,1222.34 787.232,1224.46 787.818,1223.79 788.404,1221.11 788.991,1220.98 789.577,1221.75 790.164,1222.72 790.75,1222.55 791.336,1217.18 791.923,1218.12 792.509,1217.03 793.096,1219.44 793.682,1221.77 794.268,1223.85 794.855,1222.07 795.441,1221.69 796.028,1218.95 796.614,1217.5 797.201,1221.24 797.787,1218.33 798.373,1218.13 798.96,1219.2 799.546,1220.42 800.133,1222.36 800.719,1224.62 801.305,1225.02 801.892,1223.45 802.478,1222.06 803.065,1223.05 803.651,1221.72 804.237,1224.03 804.824,1220.98 805.41,1220.58 805.997,1221.39 806.583,1219.74 807.17,1221.88 807.756,1220.37 808.342,1217.71 808.929,1213.89 809.515,1212.54 810.102,1211.66 810.688,1212.07 811.274,1213.48 811.861,1212.17 812.447,1210.95 813.034,1211.21 813.62,1214.02 814.206,1214.09 814.793,1214.02 815.379,1214.2 815.966,1215.53 816.552,1214.29 817.139,1215.44 817.725,1214.05 818.311,1211.67 818.898,1211.85 819.484,1212 820.071,1211.11 820.657,1209.01 821.243,1214.26 821.83,1215.82 822.416,1218.36 823.003,1215.6 823.589,1215.36 824.175,1216.64 824.762,1215.5 825.348,1215.47 825.935,1213.06 826.521,1214.57 827.108,1215.9 827.694,1215.84 828.28,1216.02 828.867,1214.77 829.453,1213.47 830.04,1215.93 830.626,1215.87 831.212,1219.57 831.799,1220.51 832.385,1219.14 832.972,1216.62 833.558,1214.08 834.145,1212.97 834.731,1212.98 835.317,1211.89 835.904,1208.28 836.49,1207.15 837.077,1208.98 837.663,1207.02 838.249,1205.12 838.836,1209.4 839.422,1209.71 840.009,1209.91 840.595,1210.3 841.181,1208.38 841.768,1206.57 842.354,1207.05 842.941,1208.7 843.527,1206.56 844.114,1209.6 844.7,1209.99 845.286,1212.67 845.873,1213.97 846.459,1213.93 847.046,1214.07 847.632,1215.18 848.218,1216.61 848.805,1216.52 849.391,1217.97 849.978,1220.4 850.564,1218.71 851.15,1216.01 851.737,1216.13 852.323,1216.13 852.91,1217.35 853.496,1218.4 854.083,1214.35 854.669,1216.72 855.255,1216.94 855.842,1218.07 856.428,1219.29 857.015,1219.07 857.601,1221.31 858.187,1219.88 858.774,1220.76 859.36,1221.77 859.947,1221.36 860.533,1220 861.119,1218.72 861.706,1218.82 862.292,1219.76 862.879,1219.6 863.465,1219.31 864.052,1217.94 864.638,1216.72 865.224,1216.54 865.811,1216.39 866.397,1215.07 866.984,1215.33 867.57,1213.96 868.156,1215.36 868.743,1215.14 869.329,1213.76 869.916,1214.93 870.502,1216.21 871.089,1216.06 871.675,1215.98 872.261,1213.68 872.848,1210.14 873.434,1210.35 874.021,1211.9 874.607,1213.69 875.193,1213.68 875.78,1212.75 876.366,1215.1 876.953,1216.12 877.539,1217.37 878.125,1215.07 878.712,1216.19 879.298,1216.04 879.885,1214.67 880.471,1211.15 881.058,1210.15 881.644,1214.05 882.23,1213.84 882.817,1212.9 883.403,1212.89 883.99,1214.24 884.576,1214.31 885.162,1214.57 885.749,1213.17 886.335,1213.11 886.922,1213.16 887.508,1212.34 888.094,1213.57 888.681,1212.1 889.267,1211.17 889.854,1212.79 890.44,1213.04 891.027,1212.89 891.613,1213.93 892.199,1212.52 892.786,1212.68 893.372,1213.92 893.959,1213.78 894.545,1215.09 895.131,1212.67 895.718,1214.12 896.304,1217.54 896.891,1217.37 897.477,1219.59 898.063,1220.69 898.65,1219.41 899.236,1218.99 899.823,1222.14 900.409,1220.54 900.996,1216.52 901.582,1215.06 902.168,1213.85 902.755,1213.67 903.341,1214.78 903.928,1215.91 904.514,1214.43 905.1,1215.37 905.687,1215.26 906.273,1215.16 906.86,1216.05 907.446,1217.26 908.032,1217.31 908.619,1217.06 909.205,1216.73 909.792,1220.28 910.378,1219.91 910.965,1216.25 911.551,1214.84 912.137,1214.72 912.724,1214.85 913.31,1213.49 913.897,1213.24 914.483,1215.61 915.069,1215.63 915.656,1214.19 916.242,1214.37 916.829,1214.66 917.415,1213.71 918.002,1212.44 918.588,1209.98 919.174,1209.1 919.761,1209.58 920.347,1207.31 920.934,1209.17 921.52,1206.92 922.106,1207.56 922.693,1209.4 923.279,1209.75 923.866,1209.98 924.452,1208.96 925.038,1211.75 925.625,1212.19 926.211,1212.24 926.798,1212.59 927.384,1214.93 927.971,1216.01 928.557,1215.91 929.143,1213.36 929.73,1215.6 930.316,1215.49 930.903,1215.51 931.489,1216.62 932.075,1216.5 932.662,1215.36 933.248,1214.04 933.835,1214.93 934.421,1214.9 935.007,1213.69 935.594,1215.27 936.18,1213.98 936.767,1215.12 937.353,1216.57 937.94,1215.1 938.526,1215.26 939.112,1215.22 939.699,1216.32 940.285,1218.46 940.872,1218.06 941.458,1217.78 942.044,1216.18 942.631,1216.24 943.217,1215.94 943.804,1218.15 944.39,1216.63 944.976,1216.48 945.563,1216.46 946.149,1216.08 946.736,1215.92 947.322,1218.07 947.909,1217.81 948.495,1217.56 949.081,1217.58 949.668,1213.6 950.254,1218.43 950.841,1217.01 951.427,1216.66 952.013,1215.12 952.6,1212.89 953.186,1214.61 953.773,1215.77 954.359,1214.37 954.945,1214.45 955.532,1213.11 956.118,1210.74 956.705,1207.03 957.291,1206.38 957.878,1206.8 958.464,1209.73 959.05,1209.87 959.637,1211.51 960.223,1210.4 960.81,1211.86 961.396,1210.74 961.982,1211.17 962.569,1215.04 963.155,1216.17 963.742,1218.41 964.328,1220.61 964.915,1224.04 965.501,1223.61 966.087,1223.23 966.674,1222.68 967.26,1222.55 967.847,1221.95 968.433,1220.34 969.019,1219.94 969.606,1220.92 970.192,1219.08 970.779,1219.17 971.365,1220.26 971.951,1223.54 972.538,1219.24 973.124,1219.11 973.711,1220.06 974.297,1219.93 974.884,1217.25 975.47,1217.07 976.056,1216.87 976.643,1216.43 977.229,1215.08 977.816,1214.97 978.402,1214.79 978.988,1212.32 979.575,1209.06 980.161,1210.46 980.748,1211.81 981.334,1210.55 981.92,1209.44 982.507,1209.5 983.093,1211.17 983.68,1210.04 984.266,1210.22 984.853,1209.2 985.439,1209.31 986.025,1206.98 986.612,1209.68 987.198,1209.93 987.785,1210.22 988.371,1212.7 988.957,1212.3 989.544,1213.49 990.13,1213.51 990.717,1212.07 991.303,1211.97 991.889,1212.18 992.476,1209.75 993.062,1209.87 993.649,1212.4 994.235,1212.45 994.822,1213.66 995.408,1216.08 995.994,1215.76 996.581,1215.38 997.167,1214.42 997.754,1215.66 998.34,1213.14 998.926,1213.35 999.513,1213.38 1000.1,1213.62 1000.69,1214.88 1001.27,1217.23 1001.86,1219.36 1002.44,1221.4 1003.03,1222.29 1003.62,1218.22 1004.2,1219.15 1004.79,1219.89 1005.38,1214.64 1005.96,1215.67 1006.55,1215.41 1007.14,1213.77 1007.72,1216.2 1008.31,1216.96 1008.9,1216.73 1009.48,1215.42 1010.07,1214.19 1010.65,1213.04 1011.24,1214.39 1011.83,1211.79 1012.41,1213.27 1013,1213.31 1013.59,1213.26 1014.17,1214.64 1014.76,1212.2 1015.35,1212.05 1015.93,1212.1 1016.52,1212.39 1017.11,1214.83 1017.69,1214.94 1018.28,1214.84 1018.86,1214.89 1019.45,1214.87 1020.04,1218.3 1020.62,1218.12 1021.21,1216.54 1021.8,1216.09 1022.38,1217.02 1022.97,1216.73 1023.56,1215.55 1024.14,1215.45 1024.73,1214.26 1025.32,1216.88 1025.9,1216.6 1026.49,1216.49 1027.07,1214.19 1027.66,1211.74 1028.25,1216.91 1028.83,1216.67 1029.42,1216.55 1030.01,1216.35 1030.59,1217.2 1031.18,1217.99 1031.77,1219 1032.35,1222.16 1032.94,1220.59 1033.52,1219.06 1034.11,1219.98 1034.7,1220.98 1035.28,1221.82 1035.87,1220.21 1036.46,1221.06 1037.04,1219.57 1037.63,1219.3 1038.22,1218.95 1038.8,1218.5 1039.39,1218.07 1039.98,1219.03 1040.56,1217.51 1041.15,1215.99 1041.73,1215.76 1042.32,1215.91 1042.91,1212.03 1043.49,1215.87 1044.08,1215.61 1044.67,1216.77 1045.25,1215.32 1045.84,1216.5 1046.43,1218.8 1047.01,1217.4 1047.6,1217.13 1048.19,1217.03 1048.77,1217.95 1049.36,1219.02 1049.94,1217.64 1050.53,1214.05 1051.12,1215.15 1051.7,1216.35 1052.29,1214.09 1052.88,1212.83 1053.46,1214.21 1054.05,1213.89 1054.64,1214.05 1055.22,1216.39 1055.81,1214.97 1056.39,1213.49 1056.98,1214.62 1057.57,1214.39 1058.15,1215.4 1058.74,1215.07 1059.33,1213.74 1059.91,1213.73 1060.5,1213.76 1061.09,1208.69 1061.67,1209.25 1062.26,1209.84 1062.85,1208.72 1063.43,1206.37 1064.02,1209.12 1064.6,1208.25 1065.19,1207.3 1065.78,1206.37 1066.36,1206.64 1066.95,1208.04 1067.54,1208.52 1068.12,1208.78 1068.71,1204.1 1069.3,1203.37 1069.88,1205.32 1070.47,1200.77 1071.06,1205 1071.64,1204.26 1072.23,1202.43 1072.81,1201.66 1073.4,1204.76 1073.99,1206.57 1074.57,1205.75 1075.16,1207.47 1075.75,1210.37 1076.33,1210.29 1076.92,1210.44 1077.51,1210.53 1078.09,1210.77 1078.68,1208.35 1079.26,1210.99 1079.85,1211.09 1080.44,1212.08 1081.02,1209.97 1081.61,1209.13 1082.2,1207.18 1082.78,1208.52 1083.37,1208.67 1083.96,1208.9 1084.54,1209.37 1085.13,1208.49 1085.72,1211.17 1086.3,1211.4 1086.89,1211.67 1087.47,1210.65 1088.06,1213.18 1088.65,1213.2 1089.23,1209.84 1089.82,1212.65 1090.41,1213.87 1090.99,1213.61 1091.58,1214.81 1092.17,1213.69 1092.75,1215.92 1093.34,1216.89 1093.93,1217.93 1094.51,1220.15 1095.1,1219.91 1095.68,1220.03 1096.27,1219.79 1096.86,1219.25 1097.44,1220.23 1098.03,1215.16 1098.62,1218.91 1099.2,1217.35 1099.79,1215.92 1100.38,1215.57 1100.96,1214.2 1101.55,1214.09 1102.14,1215.34 1102.72,1216.4 1103.31,1216.24 1103.89,1217.49 1104.48,1217.28 1105.07,1217.22 1105.65,1216.79 1106.24,1216.39 1106.83,1216.27 1107.41,1217.3 1108,1216.07 1108.59,1217.32 1109.17,1218.6 1109.76,1217.36 1110.34,1217.13 1110.93,1216.85 1111.52,1215.39 1112.1,1215.18 1112.69,1212.81 1113.28,1216.62 1113.86,1215.23 1114.45,1216.14 1115.04,1214.94 1115.62,1215.85 1116.21,1214.34 1116.8,1212.93 1117.38,1212.94 1117.97,1213.29 1118.55,1215.59 1119.14,1218 1119.73,1218.67 1120.31,1219.64 1120.9,1221.55 1121.49,1223.5 1122.07,1221.79 1122.66,1220.11 1123.25,1218.48 1123.83,1218.12 1124.42,1216.65 1125.01,1217.62 1125.59,1217.53 1126.18,1217 1126.76,1215.68 1127.35,1216.46 1127.94,1216.41 1128.52,1216.28 1129.11,1217.22 1129.7,1216.74 1130.28,1215.35 1130.87,1215.56 1131.46,1213.37 1132.04,1213.5 1132.63,1212.2 1133.21,1209.88 1133.8,1212.69 1134.39,1212.79 1134.97,1213.02 1135.56,1211.82 1136.15,1211.85 1136.73,1212.04 1137.32,1210.98 1137.91,1210.99 1138.49,1214.61 1139.08,1215.64 1139.67,1209.32 1140.25,1208.33 1140.84,1207.39 1141.42,1205.5 1142.01,1207.24 1142.6,1205.34 1143.18,1205.99 1143.77,1206.38 1144.36,1207.3 1144.94,1204.09 1145.53,1204.37 1146.12,1206.11 1146.7,1208.97 1147.29,1209.3 1147.88,1209.78 1148.46,1210 1149.05,1211.58 1149.63,1210.21 1150.22,1210.2 1150.81,1210.49 1151.39,1210.81 1151.98,1209.7 1152.57,1211.17 1153.15,1210.07 1153.74,1210.42 1154.33,1209.15 1154.91,1209.8 1155.5,1212.47 1156.09,1210.35 1156.67,1213 1157.26,1211.95 1157.84,1210.84 1158.43,1210.75 1159.02,1208.53 1159.6,1209.07 1160.19,1208.12 1160.78,1208.56 1161.36,1208.8 1161.95,1207.62 1162.54,1209.14 1163.12,1209.3 1163.71,1207.13 1164.29,1206.41 1164.88,1205.69 1165.47,1209.85 1166.05,1209.85 1166.64,1207.76 1167.23,1206.87 1167.81,1207.03 1168.4,1207.41 1168.99,1208.82 1169.57,1210.68 1170.16,1209.77 1170.75,1208.63 1171.33,1208.67 1171.92,1208.88 1172.5,1209.15 1173.09,1208.14 1173.68,1208.4 1174.26,1206.24 1174.85,1207.88 1175.44,1208.35 1176.02,1207.54 1176.61,1209.19 1177.2,1209.51 1177.78,1209.66 1178.37,1208.5 1178.96,1208.69 1179.54,1206.33 1180.13,1206.79 1180.71,1208.45 1181.3,1208.62 1181.89,1209.98 1182.47,1211.41 1183.06,1213.86 1183.65,1214.99 1184.23,1216.12 1184.82,1214.68 1185.41,1215.82 1185.99,1216.78 1186.58,1216.48 1187.16,1213.74 1187.75,1214.92 1188.34,1216.01 1188.92,1214.86 1189.51,1218.65 1190.1,1218.49 1190.68,1220.54 1191.27,1219.94 1191.86,1217.17 1192.44,1216.82 1193.03,1217.7 1193.62,1217.38 1194.2,1215.72 1194.79,1215.44 1195.37,1215.71 1195.96,1216.58 1196.55,1214.02 1197.13,1214.01 1197.72,1215.02 1198.31,1214.81 1198.89,1217.11 1199.48,1215.57 1200.07,1216.72 1200.65,1213.94 1201.24,1214.12 1201.83,1213.96 1202.41,1215.33 1203,1216.68 1203.58,1214.92 1204.17,1213.52 1204.76,1217.2 1205.34,1214.74 1205.93,1219.58 1206.52,1219.15 1207.1,1216.26 1207.69,1214.87 1208.28,1213.66 1208.86,1213.57 1209.45,1212.2 1210.03,1213.5 1210.62,1213.63 1211.21,1212.42 1211.79,1208.96 1212.38,1207.77 1212.97,1206.9 1213.55,1208.56 1214.14,1208.96 1214.73,1213.04 1215.31,1211.77 1215.9,1211.94 1216.49,1213.19 1217.07,1213.36 1217.66,1215.64 1218.24,1213.35 1218.83,1213.3 1219.42,1214.58 1220,1216.83 1220.59,1218.81 1221.18,1215.76 1221.76,1215.9 1222.35,1215.47 1222.94,1213.9 1223.52,1212.74 1224.11,1213.92 1224.7,1215.06 1225.28,1212.38 1225.87,1209.88 1226.45,1208.83 1227.04,1208.89 1227.63,1211.53 1228.21,1214.24 1228.8,1215.49 1229.39,1215.36 1229.97,1213.93 1230.56,1215.13 1231.15,1215.03 1231.73,1214.74 1232.32,1213.31 1232.91,1211.71 1233.49,1210.59 1234.08,1212.15 1234.66,1211.04 1235.25,1210.13 1235.84,1212.74 1236.42,1213.03 1237.01,1213.04 1237.6,1211.68 1238.18,1211.66 1238.77,1213.22 1239.36,1215.57 1239.94,1211.85 1240.53,1212.21 1241.11,1212.06 1241.7,1213.44 1242.29,1217.14 1242.87,1218.03 1243.46,1212.92 1244.05,1210.85 1244.63,1210.55 1245.22,1212.93 1245.81,1214.18 1246.39,1212.87 1246.98,1212.91 1247.57,1214.12 1248.15,1214.09 1248.74,1213.12 1249.32,1214.42 1249.91,1216.92 1250.5,1218.01 1251.08,1216.53 1251.67,1216.44 1252.26,1216.42 1252.84,1215.27 1253.43,1214.06 1254.02,1213.94 1254.6,1213.07 1255.19,1213.07 1255.78,1210.56 1256.36,1211.84 1256.95,1210.9 1257.53,1211.12 1258.12,1210.3 1258.71,1212.72 1259.29,1212.95 1259.88,1213.96 1260.47,1211.54 1261.05,1211.8 1261.64,1211.87 1262.23,1212.01 1262.81,1209.65 1263.4,1210.03 1263.98,1210.11 1264.57,1210.3 1265.16,1208.31 1265.74,1208.17 1266.33,1207.34 1266.92,1206.31 1267.5,1208.08 1268.09,1205.84 1268.68,1206.23 1269.26,1206.4 1269.85,1206.6 1270.44,1209.24 1271.02,1208.37 1271.61,1209.76 1272.19,1209.86 1272.78,1212.52 1273.37,1211.38 1273.95,1215.16 1274.54,1217.42 1275.13,1219.74 1275.71,1220.6 1276.3,1222.62 1276.89,1223.36 1277.47,1222.7 1278.06,1218.88 1278.65,1218.81 1279.23,1217.35 1279.82,1219.54 1280.4,1218.03 1280.99,1216.55 1281.58,1216.58 1282.16,1217.81 1282.75,1217.48 1283.34,1217.08 1283.92,1215.62 1284.51,1215.32 1285.1,1211.4 1285.68,1211.32 1286.27,1211.6 1286.86,1211.92 1287.44,1210.92 1288.03,1211.03 1288.61,1209.66 1289.2,1209.67 1289.79,1208.5 1290.37,1208.67 1290.96,1210.23 1291.55,1210.56 1292.13,1213.03 1292.72,1213.16 1293.31,1211.99 1293.89,1210.72 1294.48,1213.3 1295.06,1214.61 1295.65,1214.6 1296.24,1213.27 1296.82,1213.26 1297.41,1214.36 1298,1213.34 1298.58,1211.02 1299.17,1211.06 1299.76,1210.31 1300.34,1210.8 1300.93,1213.41 1301.52,1213.49 1302.1,1211.91 1302.69,1212 1303.27,1212.18 1303.86,1211.85 1304.45,1211.82 1305.03,1212.01 1305.62,1214.69 1306.21,1212.3 1306.79,1210.94 1307.38,1211.03 1307.97,1211.15 1308.55,1212.24 1309.14,1210.91 1309.73,1212.33 1310.31,1212.53 1310.9,1214.85 1311.48,1213.54 1312.07,1213.76 1312.66,1213.75 1313.24,1212.55 1313.83,1212.47 1314.42,1211.26 1315,1211.28 1315.59,1211.6 1316.18,1212.83 1316.76,1211.63 1317.35,1212.8 1317.93,1213.83 1318.52,1212.83 1319.11,1214.09 1319.69,1215.19 1320.28,1213.76 1320.87,1216.18 1321.45,1217.11 1322.04,1215.58 1322.63,1217.75 1323.21,1219.09 1323.8,1222.16 1324.39,1222.89 1324.97,1222.32 1325.56,1223.03 1326.14,1221.37 1326.73,1220.84 1327.32,1221.76 1327.9,1221.03 1328.49,1221.63 1329.08,1221.19 1329.66,1222.02 1330.25,1219.04 1330.84,1222.39 1331.42,1221.78 1332.01,1223.79 1332.6,1223.2 1333.18,1221.49 1333.77,1221.12 1334.35,1217.91 1334.94,1218.8 1335.53,1215.94 1336.11,1215.67 1336.7,1215.45 1337.29,1215.4 1337.87,1214.14 1338.46,1212.98 1339.05,1213 1339.63,1210.43 1340.22,1210.45 1340.8,1208.1 1341.39,1209.38 1341.98,1208.73 1342.56,1210.33 1343.15,1209 1343.74,1209.27 1344.32,1208.2 1344.91,1205.91 1345.5,1208.92 1346.08,1205.56 1346.67,1206 1347.26,1205.15 1347.84,1203.18 1348.43,1203.64 1349.01,1204.22 1349.6,1204.7 1350.19,1206.51 1350.77,1205.58 1351.36,1207.32 1351.95,1209.05 1352.53,1209.38 1353.12,1209.66 1353.71,1208.56 1354.29,1208.67 1354.88,1207.77 1355.47,1206.78 1356.05,1207.46 1356.64,1207.64 1357.22,1208.07 1357.81,1208.72 1358.4,1206.58 1358.98,1208.16 1359.57,1210.64 1360.16,1208.16 1360.74,1207.31 1361.33,1206.57 1361.92,1205.67 1362.5,1204.95 1363.09,1206.88 1363.68,1206.88 1364.26,1211.22 1364.85,1211.35 1365.43,1213.81 1366.02,1212.81 1366.61,1212.75 1367.19,1211.58 1367.78,1210.27 1368.37,1211.86 1368.95,1210.9 1369.54,1212.29 1370.13,1208.49 1370.71,1208.7 1371.3,1208.77 1371.88,1210.17 1372.47,1212.6 1373.06,1212.55 1373.64,1211.23 1374.23,1211.4 1374.82,1213.99 1375.4,1216.52 1375.99,1216.33 1376.58,1217.6 1377.16,1217.34 1377.75,1219.46 1378.34,1219.05 1378.92,1218.59 1379.51,1219.38 1380.09,1220.43 1380.68,1218.95 1381.27,1212.5 1381.85,1212.65 1382.44,1215.17 1383.03,1215.16 1383.61,1216.19 1384.2,1214.96 1384.79,1215 1385.37,1214.89 1385.96,1217.11 1386.55,1217.9 1387.13,1214 1387.72,1214.04 1388.3,1213.91 1388.89,1212.79 1389.48,1211.54 1390.06,1211.56 1390.65,1212.72 1391.24,1210.45 1391.82,1210.83 1392.41,1213.36 1393,1213.65 1393.58,1216.15 1394.17,1215.84 1394.75,1217.07 1395.34,1214.39 1395.93,1215.59 1396.51,1217.88 1397.1,1219.2 1397.69,1220.13 1398.27,1221.01 1398.86,1219.03 1399.45,1219.82 1400.03,1221.84 1400.62,1222.49 1401.21,1222.33 1401.79,1224.02 1402.38,1223.3 1402.96,1221.34 1403.55,1220.73 1404.14,1220.39 1404.72,1220.12 1405.31,1219.88 1405.9,1219.39 1406.48,1221.39 1407.07,1221.11 1407.66,1220.78 1408.24,1219.08 1408.83,1218.76 1409.42,1216.25 1410,1214.71 1410.59,1215.74 1411.17,1214.35 1411.76,1214.19 1412.35,1215.33 1412.93,1215.19 1413.52,1215.09 1414.11,1215.03 1414.69,1213.74 1415.28,1211.56 1415.87,1213.01 1416.45,1215.38 1417.04,1215.14 1417.63,1216.41 1418.21,1216.28 1418.8,1215.96 1419.38,1215.73 1419.97,1214.36 1420.56,1214.37 1421.14,1212.92 1421.73,1216.41 1422.32,1213.69 1422.9,1212.73 1423.49,1212.86 1424.08,1212.65 1424.66,1211.44 1425.25,1211.5 1425.83,1210.24 1426.42,1209 1427.01,1210.56 1427.59,1211.86 1428.18,1211.83 1428.77,1211.78 1429.35,1210.74 1429.94,1210.86 1430.53,1211.92 1431.11,1213.03 1431.7,1214.46 1432.29,1214.33 1432.87,1215.41 1433.46,1215.23 1434.04,1213.93 1434.63,1214.95 1435.22,1214.99 1435.8,1213.68 1436.39,1211.28 1436.98,1210.36 1437.56,1209.3 1438.15,1210.52 1438.74,1211.91 1439.32,1214.45 1439.91,1217.83 1440.5,1216.29 1441.08,1216.13 1441.67,1214.75 1442.25,1214.63 1442.84,1210.92 1443.43,1211.16 1444.01,1216.25 1444.6,1216.1 1445.19,1214.83 1445.77,1212.48 1446.36,1213.78 1446.95,1215.04 1447.53,1213.53 1448.12,1212.3 1448.7,1211.06 1449.29,1213.74 1449.88,1216.03 1450.46,1214.66 1451.05,1213.16 1451.64,1215.51 1452.22,1216.7 1452.81,1214.13 1453.4,1214.11 1453.98,1212.77 1454.57,1215.34 1455.16,1217.54 1455.74,1216.19 1456.33,1215.94 1456.91,1218.32 1457.5,1216.85 1458.09,1220.6 1458.67,1220.08 1459.26,1219.81 1459.85,1219.55 1460.43,1218.22 1461.02,1215.66 1461.61,1214.35 1462.19,1215.4 1462.78,1214.13 1463.37,1212.88 1463.95,1211.53 1464.54,1210.24 1465.12,1212.99 1465.71,1210.56 1466.3,1209.31 1466.88,1210.52 1467.47,1210.67 1468.06,1210.59 1468.64,1208.3 1469.23,1208.86 1469.82,1210.35 1470.4,1209.37 1470.99,1210.82 1471.57,1211.16 1472.16,1209.9 1472.75,1211.29 1473.33,1215.31 1473.92,1216.64 1474.51,1211.5 1475.09,1209.04 1475.68,1212.77 1476.27,1212.61 1476.85,1212.86 1477.44,1212.83 1478.03,1212.89 1478.61,1213.03 1479.2,1215.48 1479.78,1214.13 1480.37,1213.83 1480.96,1213.93 1481.54,1212.39 1482.13,1212.35 1482.72,1209.82 1483.3,1208.78 1483.89,1212.65 1484.48,1211.3 1485.06,1211.19 1485.65,1209.74 1486.24,1211.22 1486.82,1214.03 1487.41,1214.27 1487.99,1215.2 1488.58,1212.7 1489.17,1214.99 1489.75,1216.06 1490.34,1214.66 1490.93,1214.56 1491.51,1213.31 1492.1,1212.11 1492.69,1210.79 1493.27,1208.43 1493.86,1208.68 1494.45,1209.91 1495.03,1210.15 1495.62,1209.04 1496.2,1210.46 1496.79,1211.96 1497.38,1211.97 1497.96,1213.28 1498.55,1213.23 1499.14,1212.16 1499.72,1210.92 1500.31,1211.09 1500.9,1212.38 1501.48,1213.7 1502.07,1215.99 1502.65,1216.98 1503.24,1216.54 1503.83,1216.41 1504.41,1215.27 1505,1213.94 1505.59,1211.6 1506.17,1213.06 1506.76,1213.16 1507.35,1213.23 1507.93,1213.41 1508.52,1212.13 1509.11,1212.27 1509.69,1212.43 1510.28,1210.24 1510.86,1207.92 1511.45,1208.37 1512.04,1208.87 1512.62,1210.33 1513.21,1209.52 1513.8,1210.74 1514.38,1210.97 1514.97,1209.92 1515.56,1212.34 1516.14,1210.23 1516.73,1211.31 1517.32,1211.51 1517.9,1213.15 1518.49,1212.03 1519.07,1213.13 1519.66,1215.39 1520.25,1216.74 1520.83,1216.56 1521.42,1216.42 1522.01,1218.37 1522.59,1216.94 1523.18,1216.8 1523.77,1214.43 1524.35,1216.88 1524.94,1219.26 1525.52,1219.92 1526.11,1218.46 1526.7,1218.28 1527.28,1220.35 1527.87,1216.28 1528.46,1217.46 1529.04,1218.48 1529.63,1218.38 1530.22,1218.19 1530.8,1215.63 1531.39,1216.72 1531.98,1216.47 1532.56,1216.7 1533.15,1215.08 1533.73,1213.75 1534.32,1212.23 1534.91,1210.93 1535.49,1208.64 1536.08,1208.76 1536.67,1209.15 1537.25,1209.29 1537.84,1209.41 1538.43,1208.7 1539.01,1206.69 1539.6,1208.47 1540.19,1209.95 1540.77,1210.16 1541.36,1207.7 1541.94,1207.15 1542.53,1205.14 1543.12,1206.83 1543.7,1206.91 1544.29,1209.84 1544.88,1210.25 1545.46,1210.67 1546.05,1210.59 1546.64,1212.07 1547.22,1215.74 1547.81,1217.79 1548.4,1217.52 1548.98,1217.15 1549.57,1217.47 1550.15,1216.09 1550.74,1214.56 1551.33,1215.68 1551.91,1215.46 1552.5,1216.52 1553.09,1219.82 1553.67,1219.66 1554.26,1215.84 1554.85,1215.79 1555.43,1216.74 1556.02,1216.56 1556.6,1213.87 1557.19,1211.4 1557.78,1211.27 1558.36,1212.47 1558.95,1213.9 1559.54,1212.91 1560.12,1211.93 1560.71,1214.51 1561.3,1211.91 1561.88,1211.03 1562.47,1205.24 1563.06,1209.18 1563.64,1209.72 1564.23,1209.72 1564.81,1209.96 1565.4,1209.94 1565.99,1208.62 1566.57,1210.24 1567.16,1210.36 1567.75,1210.4 1568.33,1210.43 1568.92,1210.77 1569.51,1210.95 1570.09,1211.05 1570.68,1212.37 1571.27,1212.46 1571.85,1211.21 1572.44,1212.5 1573.02,1212.45 1573.61,1212.59 1574.2,1212.76 1574.78,1211.48 1575.37,1209.18 1575.96,1211.84 1576.54,1212.03 1577.13,1212.16 1577.72,1214.5 1578.3,1215.37 1578.89,1215.13 1579.47,1212.45 1580.06,1213.86 1580.65,1212.5 1581.23,1212.09 1581.82,1212.1 1582.41,1212.27 1582.99,1210 1583.58,1211.33 1584.17,1212.58 1584.75,1212.4 1585.34,1213.52 1585.93,1209.79 1586.51,1211.17 1587.1,1211.33 1587.68,1211.59 1588.27,1211.77 1588.86,1214.29 1589.44,1212.92 1590.03,1211.92 1590.62,1214.34 1591.2,1216.69 1591.79,1217.59 1592.38,1218.37 1592.96,1216.77 1593.55,1217.74 1594.14,1217.35 1594.72,1216.18 1595.31,1215.99 1595.89,1217.05 1596.48,1216.74 1597.07,1217.74 1597.65,1218.47 1598.24,1219.39 1598.83,1216.84 1599.41,1214.27 1600,1213.06 1600.59,1213.25 1601.17,1215.65 1601.76,1215.45 1602.34,1213.86 1602.93,1212.75 1603.52,1211.75 1604.1,1211.74 1604.69,1212.94 1605.28,1211.81 1605.86,1211.93 1606.45,1210.8 1607.04,1210.85 1607.62,1208.38 1608.21,1208.45 1608.8,1213.66 1609.38,1214.78 1609.97,1215.96 1610.55,1217.08 1611.14,1216.85 1611.73,1219.2 1612.31,1220.08 1612.9,1219.92 1613.49,1219.4 1614.07,1219.03 1614.66,1219.59 1615.25,1218 1615.83,1216.52 1616.42,1218.78 1617.01,1217.16 1617.59,1216.9 1618.18,1215.48 1618.76,1216.54 1619.35,1216.54 1619.94,1215.06 1620.52,1210.06 1621.11,1211.43 1621.7,1211.53 1622.28,1212.65 1622.87,1212.8 1623.46,1212.96 1624.04,1211.8 1624.63,1211.48 1625.22,1210.29 1625.8,1210.6 1626.39,1209.45 1626.97,1208.3 1627.56,1206.22 1628.15,1207.86 1628.73,1208.15 1629.32,1207.07 1629.91,1207.31 1630.49,1208.88 1631.08,1211.63 1631.67,1209.23 1632.25,1211.68 1632.84,1212.82 1633.42,1212.63 1634.01,1212.69 1634.6,1211.42 1635.18,1211.31 1635.77,1212.47 1636.36,1216.12 1636.94,1214.64 1637.53,1213.3 1638.12,1212.04 1638.7,1210.89 1639.29,1210.92 1639.88,1209.73 1640.46,1212.19 1641.05,1212.37 1641.63,1214.58 1642.22,1216.8 1642.81,1217.88 1643.39,1216.45 1643.98,1216.22 1644.57,1212.2 1645.15,1210.87 1645.74,1211.03 1646.33,1211.1 1646.91,1210.03 1647.5,1211.45 1648.09,1212.69 1648.67,1212.81 1649.26,1213.73 1649.84,1213.73 1650.43,1216.11 1651.02,1218.5 1651.6,1219.24 1652.19,1218.79 1652.78,1218.35 1653.36,1218.01 1653.95,1217.95 1654.54,1216.47 1655.12,1217.32 1655.71,1215.86 1656.29,1215.74 1656.88,1217.93 1657.47,1220.02 1658.05,1218.73 1658.64,1216.01 1659.23,1214.59 1659.81,1214.41 1660.4,1211.8 1660.99,1212.93 1661.57,1214.1 1662.16,1214.31 1662.75,1211.62 1663.33,1211.6 1663.92,1209.01 1664.5,1207.76 1665.09,1206.7 1665.68,1204.47 1666.26,1202.48 1666.85,1203.05 1667.44,1206.03 1668.02,1204.05 1668.61,1202.08 1669.2,1202.84 1669.78,1200.91 1670.37,1202.94 1670.96,1203.6 1671.54,1205.27 1672.13,1206.83 1672.71,1208.48 1673.3,1209.97 1673.89,1208.91 1674.47,1210.41 1675.06,1212.76 1675.65,1211.5 1676.23,1211.87 1676.82,1212.24 1677.41,1213.29 1677.99,1213.34 1678.58,1212.07 1679.17,1211.84 1679.75,1212.06 1680.34,1212.4 1680.92,1210.21 1681.51,1210.55 1682.1,1209.29 1682.68,1209.51 1683.27,1212.17 1683.86,1211.22 1684.44,1211.21 1685.03,1210.15 1685.62,1210.11 1686.2,1211.57 1686.79,1210.41 1687.37,1209.42 1687.96,1209.83 1688.55,1210.15 1689.13,1211.58 1689.72,1209.26 1690.31,1208.3 1690.89,1212.16 1691.48,1212.33 1692.07,1211.27 1692.65,1211.01 1693.24,1212.25 1693.83,1213.39 1694.41,1210.86 1695,1215.78 1695.58,1220.35 1696.17,1219.92 1696.76,1217.03 1697.34,1218.23 1697.93,1216.82 1698.52,1217.4 1699.1,1215.93 1699.69,1215.39 1700.28,1214.04 1700.86,1211.72 1701.45,1211.7 1702.04,1211.84 1702.62,1211.82 1703.21,1213.1 1703.79,1215.18 1704.38,1212.6 1704.97,1215.97 1705.55,1215.93 1706.14,1217.06 1706.73,1216.78 1707.31,1214.42 1707.9,1213.09 1708.49,1213.4 1709.07,1212.04 1709.66,1215.74 1710.24,1216.58 1710.83,1214.13 1711.42,1214.96 1712,1217.24 1712.59,1215.82 1713.18,1218.32 1713.76,1218.12 1714.35,1221.57 1714.94,1222.41 1715.52,1222.98 1716.11,1224.91 1716.7,1221.75 1717.28,1220.25 1717.87,1219.83 1718.45,1217.92 1719.04,1216.51 1719.63,1216.37 1720.21,1216.3 1720.8,1215.12 1721.39,1216.29 1721.97,1216.09 1722.56,1213.1 1723.15,1214.28 1723.73,1213.19 1724.32,1215.55 1724.91,1214.24 1725.49,1214.24 1726.08,1212.88 1726.66,1212.79 1727.25,1212.92 1727.84,1211.79 1728.42,1209.47 1729.01,1212.18 1729.6,1212.26 1730.18,1213.6 1730.77,1214.58 1731.36,1213.98 1731.94,1215.21 1732.53,1217.49 1733.11,1218.39 1733.7,1219.06 1734.29,1218.92 1734.87,1218.57 1735.46,1215.7 1736.05,1213.24 1736.63,1210.68 1737.22,1210.83 1737.81,1208.54 1738.39,1211.3 1738.98,1210.43 1739.57,1208.13 1740.15,1208.57 1740.74,1210.09 1741.32,1211.65 1741.91,1209.38 1742.5,1209.58 1743.08,1208.63 1743.67,1210.14 1744.26,1211.45 1744.84,1211.4 1745.43,1212.65 1746.02,1213.92 1746.6,1211.39 1747.19,1212.49 1747.78,1211.41 1748.36,1209.07 1748.95,1208.34 1749.53,1209.82 1750.12,1212.2 1750.71,1212.16 1751.29,1213.35 1751.88,1214.64 1752.47,1213.16 1753.05,1215.74 1753.64,1214.47 1754.23,1216.9 1754.81,1215.56 1755.4,1215.39 1755.99,1219.04 1756.57,1217.35 1757.16,1213.12 1757.74,1211.59 1758.33,1212.93 1758.92,1215.29 1759.5,1212.91 1760.09,1211.52 1760.68,1210.28 1761.26,1211.51 1761.85,1212.86 1762.44,1212.87 1763.02,1213.15 1763.61,1215.41 1764.19,1214.08 1764.78,1215.22 1765.37,1214.04 1765.95,1214.15 1766.54,1215.39 1767.13,1214.09 1767.71,1214.09 1768.3,1214.06 1768.89,1216.38 1769.47,1216.08 1770.06,1218.29 1770.65,1217.9 1771.23,1216.29 1771.82,1214.7 1772.4,1215.47 1772.99,1214.13 1773.58,1214.06 1774.16,1213.75 1774.75,1212.29 1775.34,1211.25 1775.92,1212.56 1776.51,1212.27 1777.1,1212.24 1777.68,1211.09 1778.27,1208.69 1778.86,1207.66 1779.44,1208.15 1780.03,1206.1 1780.61,1207.65 1781.2,1206.59 1781.79,1206 1782.37,1205.16 1782.96,1205.64 1783.55,1205.81 1784.13,1206.21 1784.72,1206.84 1785.31,1207.35 1785.89,1207.47 1786.48,1207.96 1787.06,1206.05 1787.65,1206.35 1788.24,1206.52 1788.82,1210.79 1789.41,1210.89 1790,1209.83 1790.58,1209.91 1791.17,1212.57 1791.76,1214.13 1792.34,1215.27 1792.93,1216.27 1793.52,1217.2 1794.1,1217.06 1794.69,1215.92 1795.27,1219.44 1795.86,1219.27 1796.45,1216.44 1797.03,1216.71 1797.62,1215.56 1798.21,1216.49 1798.79,1218.64 1799.38,1220.85 1799.97,1217.91 1800.55,1218.78 1801.14,1217.07 1801.73,1218.08 1802.31,1215.48 1802.9,1215.61 1803.48,1214.25 1804.07,1216.53 1804.66,1215.33 1805.24,1216.69 1805.83,1219.11 1806.42,1216.45 1807,1216.45 1807.59,1216.25 1808.18,1213.45 1808.76,1212.24 1809.35,1213.53 1809.94,1213.68 1810.52,1213.82 1811.11,1216.17 1811.69,1216.02 1812.28,1218.52 1812.87,1215.75 1813.45,1214.42 1814.04,1211.82 1814.63,1208.07 1815.21,1210.83 1815.8,1210.89 1816.39,1210.93 1816.97,1216.03 1817.56,1214.99 1818.14,1215.86 1818.73,1214.81 1819.32,1212.08 1819.9,1211.8 1820.49,1213.06 1821.08,1211.58 1821.66,1211.78 1822.25,1211.88 1822.84,1212.16 1823.42,1211.21 1824.01,1211.4 1824.6,1211.57 1825.18,1212.96 1825.77,1213.89 1826.35,1215.08 1826.94,1213.67 1827.53,1212.15 1828.11,1211.91 1828.7,1210.7 1829.29,1211.04 1829.87,1209.73 1830.46,1210.94 1831.05,1209.76 1831.63,1211.2 1832.22,1209 1832.81,1208.01 1833.39,1212.18 1833.98,1212.28 1834.56,1211.13 1835.15,1212.46 1835.74,1211.45 1836.32,1209.16 1836.91,1211.87 1837.5,1210.69 1838.08,1212.2 1838.67,1213.42 1839.26,1213.53 1839.84,1213.43 1840.43,1216.87 1841.01,1216.62 1841.6,1217.55 1842.19,1213.82 1842.77,1212.47 1843.36,1209.85 1843.95,1209.97 1844.53,1210.09 1845.12,1209.27 1845.71,1212.29 1846.29,1214.74 1846.88,1215.97 1847.47,1213.78 1848.05,1211.06 1848.64,1207.6 1849.22,1206.52 1849.81,1208.01 1850.4,1210.81 1850.98,1211.71 1851.57,1211.91 1852.16,1213.24 1852.74,1212.12 1853.33,1212.17 1853.92,1211.13 1854.5,1213.72 1855.09,1214.78 1855.68,1212.16 1856.26,1212.08 1856.85,1213.39 1857.43,1213.71 1858.02,1212.56 1858.61,1212.52 1859.19,1212.7 1859.78,1213.89 1860.37,1214.23 1860.95,1215.34 1861.54,1214.05 1862.13,1216.46 1862.71,1216.37 1863.3,1213.84 1863.88,1213.89 1864.47,1215.01 1865.06,1215.03 1865.64,1215.09 1866.23,1215.01 1866.82,1215.12 1867.4,1215.44 1867.99,1214.06 1868.58,1214.21 1869.16,1216.55 1869.75,1210.08 1870.34,1212.34 1870.92,1212.46 1871.51,1211.27 1872.09,1213.73 1872.68,1212.49 1873.27,1214.97 1873.85,1211.03 1874.44,1211.21 1875.03,1212.41 1875.61,1212.48 1876.2,1212.6 1876.79,1212.48 1877.37,1211.55 1877.96,1213.06 1878.55,1215.55 1879.13,1215.58 1879.72,1215.52 1880.3,1215.44 1880.89,1212.77 1881.48,1212.7 1882.06,1213.76 1882.65,1212.4 1883.24,1211.12 1883.82,1211.23 1884.41,1211.48 1885,1209.13 1885.58,1209.56 1886.17,1211.9 1886.76,1208.34 1887.34,1208.6 1887.93,1208.82 1888.51,1210.16 1889.1,1210.35 1889.69,1212.98 1890.27,1211.83 1890.86,1211.8 1891.45,1211.81 1892.03,1212.93 1892.62,1215.28 1893.21,1214.99 1893.79,1213.69 1894.38,1212.12 1894.96,1213.22 1895.55,1213.23 1896.14,1212.09 1896.72,1212.02 1897.31,1212.25 1897.9,1212.56 1898.48,1217.52 1899.07,1218.54 1899.66,1216.8 1900.24,1216.87 1900.83,1215.49 1901.42,1215.52 1902,1215.25 1902.59,1217.53 1903.17,1218.36 1903.76,1215.8 1904.35,1214.54 1904.93,1216.15 1905.52,1216.14 1906.11,1213.57 1906.69,1213.65 1907.28,1212.45 1907.87,1212.44 1908.45,1213.7 1909.04,1214.7 1909.63,1213.47 1910.21,1212.47 1910.8,1214.89 1911.38,1214.79 1911.97,1214.67 1912.56,1214.57 1913.14,1214.49 1913.73,1213.03 1914.32,1211.95 1914.9,1211.04 1915.49,1211.15 1916.08,1210.16 1916.66,1211.46 1917.25,1210.29 1917.83,1214.07 1918.42,1211.61 1919.01,1211.77 1919.59,1213.11 1920.18,1214.49 1920.77,1213.18 1921.35,1213.09 1921.94,1211.77 1922.53,1212.07 1923.11,1212.06 1923.7,1210.97 1924.29,1211.23 1924.87,1211.57 1925.46,1209.34 1926.04,1209.72 1926.63,1209.63 1927.22,1213.25 1927.8,1212.14 1928.39,1214.61 1928.98,1214.65 1929.56,1215.86 1930.15,1216.73 1930.74,1218.02 1931.32,1217.69 1931.91,1213.9 1932.5,1211.47 1933.08,1214.26 1933.67,1214.19 1934.25,1213.19 1934.84,1213.14 1935.43,1214.49 1936.01,1215.13 1936.6,1214.98 1937.19,1215.02 1937.77,1211.17 1938.36,1210.23 1938.95,1211.74 1939.53,1212.06 1940.12,1212.08 1940.71,1211.9 1941.29,1210.65 1941.88,1209.72 1942.46,1206.75 1943.05,1206.27 1943.64,1206.57 1944.22,1208.12 1944.81,1208.51 1945.4,1208.75 1945.98,1208.96 1946.57,1208.11 1947.16,1208.32 1947.74,1207.36 1948.33,1207.61 1948.91,1207.91 1949.5,1209.56 1950.09,1212.09 1950.67,1213.17 1951.26,1213.23 1951.85,1213.35 1952.43,1214.57 1953.02,1214.54 1953.61,1213.27 1954.19,1214.62 1954.78,1212.22 1955.37,1211.11 1955.95,1212.3 1956.54,1212.33 1957.12,1214.44 1957.71,1214.25 1958.3,1214.06 1958.88,1214.15 1959.47,1215.2 1960.06,1215.12 1960.64,1214.74 1961.23,1217.07 1961.82,1216.8 1962.4,1219.12 1962.99,1217.57 1963.58,1218.58 1964.16,1218.2 1964.75,1215.63 1965.33,1214.52 1965.92,1217.16 1966.51,1215.69 1967.09,1215.54 1967.68,1212.94 1968.27,1213.35 1968.85,1213.32 1969.44,1214.67 1970.03,1214.41 1970.61,1215.5 1971.2,1216.56 1971.78,1216.27 1972.37,1216.1 1972.96,1217.31 1973.54,1217.01 1974.13,1215.69 1974.72,1214.66 1975.3,1212 1975.89,1210.7 1976.48,1210.94 1977.06,1213.16 1977.65,1214.35 1978.24,1214.32 1978.82,1213.12 1979.41,1216.84 1979.99,1214.43 1980.58,1215.37 1981.17,1215.34 1981.75,1214.01 1982.34,1216.45 1982.93,1214 1983.51,1213.83 1984.1,1215.18 1984.69,1216.03 1985.27,1215.98 1985.86,1217.25 1986.45,1215.96 1987.03,1213.52 1987.62,1210.86 1988.2,1211.89 1988.79,1213.23 1989.38,1213.09 1989.96,1216.86 1990.55,1217.08 1991.14,1215.8 1991.72,1215.75 1992.31,1216.75 1992.9,1217.67 1993.48,1217.78 1994.07,1217.57 1994.65,1216.06 1995.24,1216.78 1995.83,1215.36 1996.41,1215.16 1997,1215.03 1997.59,1217.69 1998.17,1219.95 1998.76,1218.4 1999.35,1217.12 1999.93,1218.17 2000.52,1218 2001.11,1216.63 2001.69,1216.41 2002.28,1217.43 2002.86,1217.18 2003.45,1216.94 2004.04,1215.45 2004.62,1217.68 2005.21,1216.04 2005.8,1214.44 2006.38,1211.99 2006.97,1214.48 2007.56,1213.38 2008.14,1213.16 2008.73,1214.16 2009.32,1212.88 2009.9,1212.83 2010.49,1209.27 2011.07,1208.1 2011.66,1210.82 2012.25,1212.09 2012.83,1211.07 2013.42,1211.23 2014.01,1211.3 2014.59,1209.11 2015.18,1209.34 2015.77,1209.57 2016.35,1210.93 2016.94,1212.42 2017.53,1210.06 2018.11,1210.13 2018.7,1210.4 2019.28,1209.26 2019.87,1211.97 2020.46,1209.62 2021.04,1207.47 2021.63,1205.44 2022.22,1206.87 2022.8,1207.29 2023.39,1205.1 2023.98,1206.88 2024.56,1206.32 2025.15,1209.06 2025.73,1210.42 2026.32,1212.86 2026.91,1211.73 2027.49,1210.43 2028.08,1211.78 2028.67,1208.38 2029.25,1209.96 2029.84,1210.28 2030.43,1211.5 2031.01,1211.53 2031.6,1212.92 2032.19,1212.88 2032.77,1211.88 2033.36,1210.73 2033.94,1208.32 2034.53,1211.22 2035.12,1211.11 2035.7,1211.16 2036.29,1212.36 2036.88,1211.31 2037.46,1211.34 2038.05,1211.49 2038.64,1212.69 2039.22,1212.67 2039.81,1210.14 2040.4,1212.69 2040.98,1212.61 2041.57,1213.92 2042.15,1213.83 2042.74,1215.16 2043.33,1215.03 2043.91,1213.86 2044.5,1213.9 2045.09,1212.82 2045.67,1214.08 2046.26,1214.18 2046.85,1214.11 2047.43,1214.13 2048.02,1212.97 2048.6,1212.65 2049.19,1213.81 2049.78,1216.32 2050.36,1216.05 2050.95,1214.55 2051.54,1214.85 2052.12,1216.03 2052.71,1216.07 2053.3,1212.35 2053.88,1212.51 2054.47,1213.8 2055.06,1216.07 2055.64,1215.92 2056.23,1215.54 2056.81,1214.55 2057.4,1215.72 2057.99,1212.82 2058.57,1214.09 2059.16,1213.95 2059.75,1217.42 2060.33,1218.5 2060.92,1219.47 2061.51,1219.01 2062.09,1220.89 2062.68,1220.47 2063.27,1220.1 2063.85,1220.67 2064.44,1221.34 2065.02,1220.91 2065.61,1219.1 2066.2,1217.4 2066.78,1214.68 2067.37,1215.74 2067.96,1217.68 2068.54,1217.46 2069.13,1217.02 2069.72,1216.86 2070.3,1216.58 2070.89,1214.06 2071.48,1215.04 2072.06,1214.87 2072.65,1213.51 2073.23,1211.02 2073.82,1211.16 2074.41,1211.4 2074.99,1211.81 2075.58,1210.78 2076.17,1212.1 2076.75,1209.69 2077.34,1213.42 2077.93,1213.37 2078.51,1210.98 2079.1,1212.21 2079.68,1210.67 2080.27,1213.28 2080.86,1212.13 2081.44,1213.41 2082.03,1213.24 2082.62,1213.46 2083.2,1210.85 2083.79,1211.15 2084.38,1212.46 2084.96,1212.36 2085.55,1212.37 2086.14,1213.63 2086.72,1211.36 2087.31,1207.97 2087.89,1208.07 2088.48,1209.63 2089.07,1208.58 2089.65,1212.33 2090.24,1213.68 2090.83,1212.53 2091.41,1211.46 2092,1212.57 2092.59,1215.24 2093.17,1215.05 2093.76,1215.06 2094.35,1214.88 2094.93,1215.93 2095.52,1215.68 2096.1,1215.69 2096.69,1216.85 2097.28,1218.97 2097.86,1218.5 2098.45,1218.29 2099.04,1214.4 2099.62,1211.65 2100.21,1211.78 2100.8,1213.27 2101.38,1213.2 2101.97,1213.41 2102.55,1212.23 2103.14,1211.17 2103.73,1210.13 2104.31,1210.33 2104.9,1210.63 2105.49,1212.09 2106.07,1211.03 2106.66,1213.35 2107.25,1213.25 2107.83,1213.17 2108.42,1213.13 2109.01,1210.84 2109.59,1211.96 2110.18,1213.26 2110.76,1212.06 2111.35,1210.88 2111.94,1210.88 2112.52,1210.95 2113.11,1212.18 2113.7,1215.75 2114.28,1216.53 2114.87,1216.27 2115.46,1212.93 2116.04,1213.03 2116.63,1214.35 2117.22,1214.54 2117.8,1216.8 2118.39,1212.96 2118.97,1211.82 2119.56,1212.26 2120.15,1214.55 2120.73,1213.24 2121.32,1213.33 2121.91,1213.49 2122.49,1214.42 2123.08,1213.12 2123.67,1213.12 2124.25,1214.34 2124.84,1214.32 2125.42,1214.26 2126.01,1214.34 2126.6,1214.22 2127.18,1214.18 2127.77,1212.56 2128.36,1214.88 2128.94,1215.82 2129.53,1217.08 2130.12,1218.22 2130.7,1216.9 2131.29,1218.04 2131.88,1220.53 2132.46,1217.67 2133.05,1219.43 2133.63,1220.21 2134.22,1219.59 2134.81,1218.18 2135.39,1217.87 2135.98,1217.75 2136.57,1217.69 2137.15,1216.42 2137.74,1217.5 2138.33,1215.91 2138.91,1215.49 2139.5,1216.68 2140.09,1216.4 2140.67,1215.14 2141.26,1214.88 2141.84,1214.66 2142.43,1215.81 2143.02,1217.03 2143.6,1212.11 2144.19,1212.1 2144.78,1213.12 2145.36,1212.98 2145.95,1210.68 2146.54,1209.81 2147.12,1208.94 2147.71,1206.52 2148.3,1205.82 2148.88,1207.6 2149.47,1207.68 2150.05,1211.81 2150.64,1212.05 2151.23,1214.47 2151.81,1213.46 2152.4,1214.74 2152.99,1215.94 2153.57,1217.07 2154.16,1217.04 2154.75,1216.76 2155.33,1217.8 2155.92,1217.34 2156.5,1216.98 2157.09,1216.63 2157.68,1215.14 2158.26,1214.96 \"/>\n<path clip-path=\"url(#clip882)\" d=\"M986.025 1213.67 L986.612 1213.67 L987.198 1213.67 L987.785 1213.67 L988.371 1213.67 L988.957 1213.67 L989.544 1213.67 L990.13 1213.67 L990.717 1213.67 L991.303 1213.67 L991.889 1213.67 L992.476 1213.67 L993.062 1213.67 L993.649 1213.67 L994.235 1213.67 L994.822 1213.67 L995.408 1213.67 L995.994 1213.67 L996.581 1213.67 L997.167 1213.67 L997.754 1213.67 L998.34 1213.67 L998.926 1213.67 L999.513 1213.67 L1000.1 1213.67 L1000.69 1213.67 L1001.27 1213.67 L1001.86 1213.67 L1002.44 1213.67 L1003.03 1213.67 L1003.62 1213.67 L1004.2 1213.67 L1004.79 1213.67 L1005.38 1213.67 L1005.96 1213.67 L1006.55 1213.67 L1007.14 1213.67 L1007.72 1213.67 L1008.31 1213.67 L1008.9 1213.67 L1009.48 1213.67 L1010.07 1213.67 L1010.65 1213.67 L1011.24 1213.67 L1011.83 1213.67 L1012.41 1213.67 L1013 1213.67 L1013.59 1213.67 L1014.17 1213.67 L1014.76 1213.67 L1015.35 1213.67 L1015.93 1213.67 L1016.52 1213.67 L1017.11 1213.67 L1017.69 1213.67 L1018.28 1213.67 L1018.86 1213.67 L1019.45 1213.67 L1020.04 1213.67 L1020.62 1213.67 L1021.21 1213.67 L1021.8 1213.67 L1022.38 1213.67 L1022.97 1213.67 L1023.56 1213.67 L1024.14 1213.67 L1024.73 1213.67 L1025.32 1213.67 L1025.9 1213.67 L1026.49 1213.67 L1027.07 1213.67 L1027.66 1213.67 L1028.25 1213.67 L1028.83 1213.67 L1029.42 1213.67 L1030.01 1213.67 L1030.59 1213.67 L1031.18 1213.67 L1031.77 1213.67 L1032.35 1213.67 L1032.94 1213.67 L1033.52 1213.67 L1034.11 1213.67 L1034.7 1213.67 L1035.28 1213.67 L1035.87 1213.67 L1036.46 1213.67 L1037.04 1213.67 L1037.63 1213.67 L1038.22 1213.67 L1038.8 1213.67 L1039.39 1213.67 L1039.98 1213.67 L1040.56 1213.67 L1041.15 1213.67 L1041.73 1213.67 L1042.32 1213.67 L1042.91 1213.67 L1043.49 1213.67 L1044.08 1213.67 L1044.67 1213.67 L1045.25 1213.67 L1045.84 1213.67 L1046.43 1213.67 L1047.01 1213.67 L1047.6 1213.67 L1048.19 1213.67 L1048.77 1213.67 L1049.36 1213.67 L1049.94 1213.67 L1050.53 1213.67 L1051.12 1213.67 L1051.7 1213.67 L1052.29 1213.67 L1052.88 1213.67 L1053.46 1213.67 L1054.05 1213.67 L1054.64 1213.67 L1055.22 1213.67 L1055.81 1213.67 L1056.39 1213.67 L1056.98 1213.67 L1057.57 1213.67 L1058.15 1213.67 L1058.74 1213.67 L1059.33 1213.67 L1059.91 1213.67 L1060.5 1213.67 L1061.09 1213.67 L1061.67 1213.67 L1062.26 1213.67 L1062.85 1213.67 L1063.43 1213.67 L1064.02 1213.67 L1064.6 1213.67 L1065.19 1213.67 L1065.78 1213.67 L1066.36 1213.67 L1066.95 1213.67 L1067.54 1213.67 L1068.12 1213.67 L1068.71 1213.67 L1069.3 1213.67 L1069.88 1213.67 L1070.47 1213.67 L1071.06 1213.67 L1071.64 1213.67 L1072.23 1213.67 L1072.81 1213.67 L1073.4 1213.67 L1073.99 1213.67 L1074.57 1213.67 L1075.16 1213.67 L1075.75 1213.67 L1076.33 1213.67 L1076.92 1213.67 L1077.51 1213.67 L1078.09 1213.67 L1078.68 1213.67 L1079.26 1213.67 L1079.85 1213.67 L1080.44 1213.67 L1081.02 1213.67 L1081.61 1213.67 L1082.2 1213.67 L1082.78 1213.67 L1083.37 1213.67 L1083.96 1213.67 L1084.54 1213.67 L1085.13 1213.67 L1085.72 1213.67 L1086.3 1213.67 L1086.89 1213.67 L1087.47 1213.67 L1088.06 1213.67 L1088.65 1213.67 L1089.23 1213.67 L1089.82 1213.67 L1090.41 1213.67 L1090.99 1213.67 L1091.58 1213.67 L1092.17 1213.67 L1092.75 1213.67 L1093.34 1213.67 L1093.93 1213.67 L1094.51 1213.67 L1095.1 1213.67 L1095.68 1213.67 L1096.27 1213.67 L1096.86 1213.67 L1097.44 1213.67 L1098.03 1213.67 L1098.62 1213.67 L1099.2 1213.67 L1099.79 1213.67 L1100.38 1213.67 L1100.96 1213.67 L1101.55 1213.67 L1102.14 1213.67 L1102.72 1213.67 L1103.31 1213.67 L1103.89 1213.67 L1104.48 1213.67 L1105.07 1213.67 L1105.65 1213.67 L1106.24 1213.67 L1106.83 1213.67 L1107.41 1213.67 L1108 1213.67 L1108.59 1213.67 L1109.17 1213.67 L1109.76 1213.67 L1110.34 1213.67 L1110.93 1213.67 L1111.52 1213.67 L1112.1 1213.67 L1112.69 1213.67 L1113.28 1213.67 L1113.86 1213.67 L1114.45 1213.67 L1115.04 1213.67 L1115.62 1213.67 L1116.21 1213.67 L1116.8 1213.67 L1117.38 1213.67 L1117.97 1213.67 L1118.55 1213.67 L1119.14 1213.67 L1119.73 1213.67 L1120.31 1213.67 L1120.9 1213.67 L1121.49 1213.67 L1122.07 1213.67 L1122.66 1213.67 L1123.25 1213.67 L1123.83 1213.67 L1124.42 1213.67 L1125.01 1213.67 L1125.59 1213.67 L1126.18 1213.67 L1126.76 1213.67 L1127.35 1213.67 L1127.94 1213.67 L1128.52 1213.67 L1129.11 1213.67 L1129.7 1213.67 L1130.28 1213.67 L1130.87 1213.67 L1131.46 1213.67 L1132.04 1213.67 L1132.63 1213.67 L1133.21 1213.67 L1133.8 1213.67 L1134.39 1213.67 L1134.97 1213.67 L1135.56 1213.67 L1136.15 1213.67 L1136.73 1213.67 L1137.32 1213.67 L1137.91 1213.67 L1138.49 1213.67 L1139.08 1213.67 L1139.67 1213.67 L1140.25 1213.67 L1140.84 1213.67 L1141.42 1213.67 L1142.01 1213.67 L1142.6 1213.67 L1143.18 1213.67 L1143.77 1213.67 L1144.36 1213.67 L1144.94 1213.67 L1145.53 1213.67 L1146.12 1213.67 L1146.7 1213.67 L1147.29 1213.67 L1147.88 1213.67 L1148.46 1213.67 L1149.05 1213.67 L1149.63 1213.67 L1150.22 1213.67 L1150.81 1213.67 L1151.39 1213.67 L1151.98 1213.67 L1152.57 1213.67 L1153.15 1213.67 L1153.74 1213.67 L1154.33 1213.67 L1154.91 1213.67 L1155.5 1213.67 L1156.09 1213.67 L1156.67 1213.67 L1157.26 1213.67 L1157.84 1213.67 L1158.43 1213.67 L1159.02 1213.67 L1159.6 1213.67 L1160.19 1213.67 L1160.78 1213.67 L1161.36 1213.67 L1161.95 1213.67 L1162.54 1213.67 L1163.12 1213.67 L1163.71 1213.67 L1164.29 1213.67 L1164.88 1213.67 L1165.47 1213.67 L1166.05 1213.67 L1166.64 1213.67 L1167.23 1213.67 L1167.81 1213.67 L1168.4 1213.67 L1168.99 1213.67 L1169.57 1213.67 L1170.16 1213.67 L1170.75 1213.67 L1171.33 1213.67 L1171.92 1213.67 L1172.5 1213.67 L1173.09 1213.67 L1173.68 1213.67 L1174.26 1213.67 L1174.85 1213.67 L1175.44 1213.67 L1176.02 1213.67 L1176.61 1213.67 L1177.2 1213.67 L1177.78 1213.67 L1178.37 1213.67 L1178.96 1213.67 L1179.54 1213.67 L1180.13 1213.67 L1180.71 1213.67 L1181.3 1213.67 L1181.89 1213.67 L1182.47 1213.67 L1183.06 1213.67 L1183.65 1213.67 L1184.23 1213.67 L1184.82 1213.67 L1185.41 1213.67 L1185.99 1213.67 L1186.58 1213.67 L1187.16 1213.67 L1187.75 1213.67 L1188.34 1213.67 L1188.92 1213.67 L1189.51 1213.67 L1190.1 1213.67 L1190.68 1213.67 L1191.27 1213.67 L1191.86 1213.67 L1192.44 1213.67 L1193.03 1213.67 L1193.62 1213.67 L1194.2 1213.67 L1194.79 1213.67 L1195.37 1213.67 L1195.96 1213.67 L1196.55 1213.67 L1197.13 1213.67 L1197.72 1213.67 L1198.31 1213.67 L1198.89 1213.67 L1199.48 1213.67 L1200.07 1213.67 L1200.65 1213.67 L1201.24 1213.67 L1201.83 1213.67 L1202.41 1213.67 L1203 1213.67 L1203.58 1213.67 L1204.17 1213.67 L1204.76 1213.67 L1205.34 1213.67 L1205.93 1213.67 L1206.52 1213.67 L1207.1 1213.67 L1207.69 1213.67 L1208.28 1213.67 L1208.86 1213.67 L1209.45 1213.67 L1210.03 1213.67 L1210.62 1213.67 L1211.21 1213.67 L1211.79 1213.67 L1212.38 1213.67 L1212.97 1213.67 L1213.55 1213.67 L1214.14 1213.67 L1214.73 1213.67 L1215.31 1213.67 L1215.9 1213.67 L1216.49 1213.67 L1217.07 1213.67 L1217.66 1213.67 L1218.24 1213.67 L1218.83 1213.67 L1219.42 1213.67 L1220 1213.67 L1220.59 1213.67 L1221.18 1213.67 L1221.76 1213.67 L1222.35 1213.67 L1222.94 1213.67 L1223.52 1213.67 L1224.11 1213.67 L1224.7 1213.67 L1225.28 1213.67 L1225.87 1213.67 L1226.45 1213.67 L1227.04 1213.67 L1227.63 1213.67 L1228.21 1213.67 L1228.8 1213.67 L1229.39 1213.67 L1229.97 1213.67 L1230.56 1213.67 L1231.15 1213.67 L1231.73 1213.67 L1232.32 1213.67 L1232.91 1213.67 L1233.49 1213.67 L1234.08 1213.67 L1234.66 1213.67 L1235.25 1213.67 L1235.84 1213.67 L1236.42 1213.67 L1237.01 1213.67 L1237.6 1213.67 L1238.18 1213.67 L1238.77 1213.67 L1239.36 1213.67 L1239.94 1213.67 L1240.53 1213.67 L1241.11 1213.67 L1241.7 1213.67 L1242.29 1213.67 L1242.87 1213.67 L1243.46 1213.67 L1244.05 1213.67 L1244.63 1213.67 L1245.22 1213.67 L1245.81 1213.67 L1246.39 1213.67 L1246.98 1213.67 L1247.57 1213.67 L1248.15 1213.67 L1248.74 1213.67 L1249.32 1213.67 L1249.91 1213.67 L1250.5 1213.67 L1251.08 1213.67 L1251.67 1213.67 L1252.26 1213.67 L1252.84 1213.67 L1253.43 1213.67 L1254.02 1213.67 L1254.6 1213.67 L1255.19 1213.67 L1255.78 1213.67 L1256.36 1213.67 L1256.95 1213.67 L1257.53 1213.67 L1258.12 1213.67 L1258.71 1213.67 L1259.29 1213.67 L1259.88 1213.67 L1260.47 1213.67 L1261.05 1213.67 L1261.64 1213.67 L1262.23 1213.67 L1262.81 1213.67 L1263.4 1213.67 L1263.98 1213.67 L1264.57 1213.67 L1265.16 1213.67 L1265.74 1213.67 L1266.33 1213.67 L1266.92 1213.67 L1267.5 1213.67 L1268.09 1213.67 L1268.68 1213.67 L1269.26 1213.67 L1269.85 1213.67 L1270.44 1213.67 L1271.02 1213.67 L1271.61 1213.67 L1272.19 1213.67 L1272.78 1213.67 L1273.37 1213.67 L1273.95 1213.67 L1274.54 1213.67 L1275.13 1213.67 L1275.71 1213.67 L1276.3 1213.67 L1276.89 1213.67 L1277.47 1213.67 L1278.06 1213.67 L1278.65 1213.67 L1279.23 1213.67 L1279.82 1213.67 L1280.4 1213.67 L1280.99 1213.67 L1281.58 1213.67 L1282.16 1213.67 L1282.75 1213.67 L1283.34 1213.67 L1283.92 1213.67 L1284.51 1213.67 L1285.1 1213.67 L1285.68 1213.67 L1286.27 1213.67 L1286.86 1213.67 L1287.44 1213.67 L1288.03 1213.67 L1288.61 1213.67 L1289.2 1213.67 L1289.79 1213.67 L1290.37 1213.67 L1290.96 1213.67 L1291.55 1213.67 L1292.13 1213.67 L1292.72 1213.67 L1293.31 1213.67 L1293.89 1213.67 L1294.48 1213.67 L1295.06 1213.67 L1295.65 1213.67 L1296.24 1213.67 L1296.82 1213.67 L1297.41 1213.67 L1298 1213.67 L1298.58 1213.67 L1299.17 1213.67 L1299.76 1213.67 L1300.34 1213.67 L1300.93 1213.67 L1301.52 1213.67 L1302.1 1213.67 L1302.69 1213.67 L1303.27 1213.67 L1303.86 1213.67 L1304.45 1213.67 L1305.03 1213.67 L1305.62 1213.67 L1306.21 1213.67 L1306.79 1213.67 L1307.38 1213.67 L1307.97 1213.67 L1308.55 1213.67 L1309.14 1213.67 L1309.73 1213.67 L1310.31 1213.67 L1310.9 1213.67 L1311.48 1213.67 L1312.07 1213.67 L1312.66 1213.67 L1313.24 1213.67 L1313.83 1213.67 L1314.42 1213.67 L1315 1213.67 L1315.59 1213.67 L1316.18 1213.67 L1316.76 1213.67 L1317.35 1213.67 L1317.93 1213.67 L1318.52 1213.67 L1319.11 1213.67 L1319.69 1213.67 L1320.28 1213.67 L1320.87 1213.67 L1321.45 1213.67 L1322.04 1213.67 L1322.63 1213.67 L1323.21 1213.67 L1323.8 1213.67 L1324.39 1213.67 L1324.97 1213.67 L1325.56 1213.67 L1326.14 1213.67 L1326.73 1213.67 L1327.32 1213.67 L1327.9 1213.67 L1328.49 1213.67 L1329.08 1213.67 L1329.66 1213.67 L1330.25 1213.67 L1330.84 1213.67 L1331.42 1213.67 L1332.01 1213.67 L1332.6 1213.67 L1333.18 1213.67 L1333.77 1213.67 L1334.35 1213.67 L1334.94 1213.67 L1335.53 1213.67 L1336.11 1213.67 L1336.7 1213.67 L1337.29 1213.67 L1337.87 1213.67 L1338.46 1213.67 L1339.05 1213.67 L1339.63 1213.67 L1340.22 1213.67 L1340.8 1213.67 L1341.39 1213.67 L1341.98 1213.67 L1342.56 1213.67 L1343.15 1213.67 L1343.74 1213.67 L1344.32 1213.67 L1344.91 1213.67 L1345.5 1213.67 L1346.08 1213.67 L1346.67 1213.67 L1347.26 1213.67 L1347.84 1213.67 L1348.43 1213.67 L1349.01 1213.67 L1349.6 1213.67 L1350.19 1213.67 L1350.77 1213.67 L1351.36 1213.67 L1351.95 1213.67 L1352.53 1213.67 L1353.12 1213.67 L1353.71 1213.67 L1354.29 1213.67 L1354.88 1213.67 L1355.47 1213.67 L1356.05 1213.67 L1356.64 1213.67 L1357.22 1213.67 L1357.81 1213.67 L1358.4 1213.67 L1358.98 1213.67 L1359.57 1213.67 L1360.16 1213.67 L1360.74 1213.67 L1361.33 1213.67 L1361.92 1213.67 L1362.5 1213.67 L1363.09 1213.67 L1363.68 1213.67 L1364.26 1213.67 L1364.85 1213.67 L1365.43 1213.67 L1366.02 1213.67 L1366.61 1213.67 L1367.19 1213.67 L1367.78 1213.67 L1368.37 1213.67 L1368.95 1213.67 L1369.54 1213.67 L1370.13 1213.67 L1370.71 1213.67 L1371.3 1213.67 L1371.88 1213.67 L1372.47 1213.67 L1373.06 1213.67 L1373.64 1213.67 L1374.23 1213.67 L1374.82 1213.67 L1375.4 1213.67 L1375.99 1213.67 L1376.58 1213.67 L1377.16 1213.67 L1377.75 1213.67 L1378.34 1213.67 L1378.92 1213.67 L1379.51 1213.67 L1380.09 1213.67 L1380.68 1213.67 L1381.27 1213.67 L1381.85 1213.67 L1382.44 1213.67 L1383.03 1213.67 L1383.61 1213.67 L1384.2 1213.67 L1384.79 1213.67 L1385.37 1213.67 L1385.96 1213.67 L1386.55 1213.67 L1387.13 1213.67 L1387.72 1213.67 L1388.3 1213.67 L1388.89 1213.67 L1389.48 1213.67 L1390.06 1213.67 L1390.65 1213.67 L1391.24 1213.67 L1391.82 1213.67 L1392.41 1213.67 L1393 1213.67 L1393.58 1213.67 L1394.17 1213.67 L1394.75 1213.67 L1395.34 1213.67 L1395.93 1213.67 L1396.51 1213.67 L1397.1 1213.67 L1397.69 1213.67 L1398.27 1213.67 L1398.86 1213.67 L1399.45 1213.67 L1400.03 1213.67 L1400.62 1213.67 L1401.21 1213.67 L1401.79 1213.67 L1402.38 1213.67 L1402.96 1213.67 L1403.55 1213.67 L1404.14 1213.67 L1404.72 1213.67 L1405.31 1213.67 L1405.9 1213.67 L1406.48 1213.67 L1407.07 1213.67 L1407.66 1213.67 L1408.24 1213.67 L1408.83 1213.67 L1409.42 1213.67 L1410 1213.67 L1410.59 1213.67 L1411.17 1213.67 L1411.76 1213.67 L1412.35 1213.67 L1412.93 1213.67 L1413.52 1213.67 L1414.11 1213.67 L1414.69 1213.67 L1415.28 1213.67 L1415.87 1213.67 L1416.45 1213.67 L1417.04 1213.67 L1417.63 1213.67 L1418.21 1213.67 L1418.8 1213.67 L1419.38 1213.67 L1419.97 1213.67 L1420.56 1213.67 L1421.14 1213.67 L1421.73 1213.67 L1422.32 1213.67 L1422.9 1213.67 L1423.49 1213.67 L1424.08 1213.67 L1424.66 1213.67 L1425.25 1213.67 L1425.83 1213.67 L1426.42 1213.67 L1427.01 1213.67 L1427.59 1213.67 L1428.18 1213.67 L1428.77 1213.67 L1429.35 1213.67 L1429.94 1213.67 L1430.53 1213.67 L1431.11 1213.67 L1431.7 1213.67 L1432.29 1213.67 L1432.87 1213.67 L1433.46 1213.67 L1434.04 1213.67 L1434.63 1213.67 L1435.22 1213.67 L1435.8 1213.67 L1436.39 1213.67 L1436.98 1213.67 L1437.56 1213.67 L1438.15 1213.67 L1438.74 1213.67 L1439.32 1213.67 L1439.91 1213.67 L1440.5 1213.67 L1441.08 1213.67 L1441.67 1213.67 L1442.25 1213.67 L1442.84 1213.67 L1443.43 1213.67 L1444.01 1213.67 L1444.6 1213.67 L1445.19 1213.67 L1445.77 1213.67 L1446.36 1213.67 L1446.95 1213.67 L1447.53 1213.67 L1448.12 1213.67 L1448.7 1213.67 L1449.29 1213.67 L1449.88 1213.67 L1450.46 1213.67 L1451.05 1213.67 L1451.64 1213.67 L1452.22 1213.67 L1452.81 1213.67 L1453.4 1213.67 L1453.98 1213.67 L1454.57 1213.67 L1455.16 1213.67 L1455.74 1213.67 L1456.33 1213.67 L1456.91 1213.67 L1457.5 1213.67 L1458.09 1213.67 L1458.67 1213.67 L1459.26 1213.67 L1459.85 1213.67 L1460.43 1213.67 L1461.02 1213.67 L1461.61 1213.67 L1462.19 1213.67 L1462.78 1213.67 L1463.37 1213.67 L1463.95 1213.67 L1464.54 1213.67 L1465.12 1213.67 L1465.71 1213.67 L1466.3 1213.67 L1466.88 1213.67 L1467.47 1213.67 L1468.06 1213.67 L1468.64 1213.67 L1469.23 1213.67 L1469.82 1213.67 L1470.4 1213.67 L1470.99 1213.67 L1471.57 1213.67 L1472.16 1213.67 L1472.75 1213.67 L1473.33 1213.67 L1473.92 1213.67 L1474.51 1213.67 L1475.09 1213.67 L1475.68 1213.67 L1476.27 1213.67 L1476.85 1213.67 L1477.44 1213.67 L1478.03 1213.67 L1478.61 1213.67 L1479.2 1213.67 L1479.78 1213.67 L1480.37 1213.67 L1480.96 1213.67 L1481.54 1213.67 L1482.13 1213.67 L1482.72 1213.67 L1483.3 1213.67 L1483.89 1213.67 L1484.48 1213.67 L1485.06 1213.67 L1485.65 1213.67 L1486.24 1213.67 L1486.82 1213.67 L1487.41 1213.67 L1487.99 1213.67 L1488.58 1213.67 L1489.17 1213.67 L1489.75 1213.67 L1490.34 1213.67 L1490.93 1213.67 L1491.51 1213.67 L1492.1 1213.67 L1492.69 1213.67 L1493.27 1213.67 L1493.86 1213.67 L1494.45 1213.67 L1495.03 1213.67 L1495.62 1213.67 L1496.2 1213.67 L1496.79 1213.67 L1497.38 1213.67 L1497.96 1213.67 L1498.55 1213.67 L1499.14 1213.67 L1499.72 1213.67 L1500.31 1213.67 L1500.9 1213.67 L1501.48 1213.67 L1502.07 1213.67 L1502.65 1213.67 L1503.24 1213.67 L1503.83 1213.67 L1504.41 1213.67 L1505 1213.67 L1505.59 1213.67 L1506.17 1213.67 L1506.76 1213.67 L1507.35 1213.67 L1507.93 1213.67 L1508.52 1213.67 L1509.11 1213.67 L1509.69 1213.67 L1510.28 1213.67 L1510.86 1213.67 L1511.45 1213.67 L1512.04 1213.67 L1512.62 1213.67 L1513.21 1213.67 L1513.8 1213.67 L1514.38 1213.67 L1514.97 1213.67 L1515.56 1213.67 L1516.14 1213.67 L1516.73 1213.67 L1517.32 1213.67 L1517.9 1213.67 L1518.49 1213.67 L1519.07 1213.67 L1519.66 1213.67 L1520.25 1213.67 L1520.83 1213.67 L1521.42 1213.67 L1522.01 1213.67 L1522.59 1213.67 L1523.18 1213.67 L1523.77 1213.67 L1524.35 1213.67 L1524.94 1213.67 L1525.52 1213.67 L1526.11 1213.67 L1526.7 1213.67 L1527.28 1213.67 L1527.87 1213.67 L1528.46 1213.67 L1529.04 1213.67 L1529.63 1213.67 L1530.22 1213.67 L1530.8 1213.67 L1531.39 1213.67 L1531.98 1213.67 L1532.56 1213.67 L1533.15 1213.67 L1533.73 1213.67 L1534.32 1213.67 L1534.91 1213.67 L1535.49 1213.67 L1536.08 1213.67 L1536.67 1213.67 L1537.25 1213.67 L1537.84 1213.67 L1538.43 1213.67 L1539.01 1213.67 L1539.6 1213.67 L1540.19 1213.67 L1540.77 1213.67 L1541.36 1213.67 L1541.94 1213.67 L1542.53 1213.67 L1543.12 1213.67 L1543.7 1213.67 L1544.29 1213.67 L1544.88 1213.67 L1545.46 1213.67 L1546.05 1213.67 L1546.64 1213.67 L1547.22 1213.67 L1547.81 1213.67 L1548.4 1213.67 L1548.98 1213.67 L1549.57 1213.67 L1550.15 1213.67 L1550.74 1213.67 L1551.33 1213.67 L1551.91 1213.67 L1552.5 1213.67 L1553.09 1213.67 L1553.67 1213.67 L1554.26 1213.67 L1554.85 1213.67 L1555.43 1213.67 L1556.02 1213.67 L1556.6 1213.67 L1557.19 1213.67 L1557.78 1213.67 L1558.36 1213.67 L1558.95 1213.67 L1559.54 1213.67 L1560.12 1213.67 L1560.71 1213.67 L1561.3 1213.67 L1561.88 1213.67 L1562.47 1213.67 L1563.06 1213.67 L1563.64 1213.67 L1564.23 1213.67 L1564.81 1213.67 L1565.4 1213.67 L1565.99 1213.67 L1566.57 1213.67 L1567.16 1213.67 L1567.75 1213.67 L1568.33 1213.67 L1568.92 1213.67 L1569.51 1213.67 L1570.09 1213.67 L1570.68 1213.67 L1571.27 1213.67 L1571.85 1213.67 L1572.44 1213.67 L1573.02 1213.67 L1573.61 1213.67 L1574.2 1213.67 L1574.78 1213.67 L1575.37 1213.67 L1575.96 1213.67 L1576.54 1213.67 L1577.13 1213.67 L1577.72 1213.67 L1578.3 1213.67 L1578.89 1213.67 L1579.47 1213.67 L1580.06 1213.67 L1580.65 1213.67 L1581.23 1213.67 L1581.82 1213.67 L1582.41 1213.67 L1582.99 1213.67 L1583.58 1213.67 L1584.17 1213.67 L1584.75 1213.67 L1585.34 1213.67 L1585.93 1213.67 L1586.51 1213.67 L1587.1 1213.67 L1587.68 1213.67 L1588.27 1213.67 L1588.86 1213.67 L1589.44 1213.67 L1590.03 1213.67 L1590.62 1213.67 L1591.2 1213.67 L1591.79 1213.67 L1592.38 1213.67 L1592.96 1213.67 L1593.55 1213.67 L1594.14 1213.67 L1594.72 1213.67 L1595.31 1213.67 L1595.89 1213.67 L1596.48 1213.67 L1597.07 1213.67 L1597.65 1213.67 L1598.24 1213.67 L1598.83 1213.67 L1599.41 1213.67 L1600 1213.67 L1600.59 1213.67 L1601.17 1213.67 L1601.76 1213.67 L1602.34 1213.67 L1602.93 1213.67 L1603.52 1213.67 L1604.1 1213.67 L1604.69 1213.67 L1605.28 1213.67 L1605.86 1213.67 L1606.45 1213.67 L1607.04 1213.67 L1607.62 1213.67 L1608.21 1213.67 L1608.8 1213.67 L1609.38 1213.67 L1609.97 1213.67 L1610.55 1213.67 L1611.14 1213.67 L1611.73 1213.67 L1612.31 1213.67 L1612.9 1213.67 L1613.49 1213.67 L1614.07 1213.67 L1614.66 1213.67 L1615.25 1213.67 L1615.83 1213.67 L1616.42 1213.67 L1617.01 1213.67 L1617.59 1213.67 L1618.18 1213.67 L1618.76 1213.67 L1619.35 1213.67 L1619.94 1213.67 L1620.52 1213.67 L1621.11 1213.67 L1621.7 1213.67 L1622.28 1213.67 L1622.87 1213.67 L1623.46 1213.67 L1624.04 1213.67 L1624.63 1213.67 L1625.22 1213.67 L1625.8 1213.67 L1626.39 1213.67 L1626.97 1213.67 L1627.56 1213.67 L1628.15 1213.67 L1628.73 1213.67 L1629.32 1213.67 L1629.91 1213.67 L1630.49 1213.67 L1631.08 1213.67 L1631.67 1213.67 L1632.25 1213.67 L1632.84 1213.67 L1633.42 1213.67 L1634.01 1213.67 L1634.6 1213.67 L1635.18 1213.67 L1635.77 1213.67 L1636.36 1213.67 L1636.94 1213.67 L1637.53 1213.67 L1638.12 1213.67 L1638.7 1213.67 L1639.29 1213.67 L1639.88 1213.67 L1640.46 1213.67 L1641.05 1213.67 L1641.63 1213.67 L1642.22 1213.67 L1642.81 1213.67 L1643.39 1213.67 L1643.98 1213.67 L1644.57 1213.67 L1645.15 1213.67 L1645.74 1213.67 L1646.33 1213.67 L1646.91 1213.67 L1647.5 1213.67 L1648.09 1213.67 L1648.67 1213.67 L1649.26 1213.67 L1649.84 1213.67 L1650.43 1213.67 L1651.02 1213.67 L1651.6 1213.67 L1652.19 1213.67 L1652.78 1213.67 L1653.36 1213.67 L1653.95 1213.67 L1654.54 1213.67 L1655.12 1213.67 L1655.71 1213.67 L1656.29 1213.67 L1656.88 1213.67 L1657.47 1213.67 L1658.05 1213.67 L1658.64 1213.67 L1659.23 1213.67 L1659.81 1213.67 L1660.4 1213.67 L1660.99 1213.67 L1661.57 1213.67 L1662.16 1213.67 L1662.75 1213.67 L1663.33 1213.67 L1663.92 1213.67 L1664.5 1213.67 L1665.09 1213.67 L1665.68 1213.67 L1666.26 1213.67 L1666.85 1213.67 L1667.44 1213.67 L1668.02 1213.67 L1668.61 1213.67 L1669.2 1213.67 L1669.78 1213.67 L1670.37 1213.67 L1670.96 1213.67 L1671.54 1213.67 L1672.13 1213.67 L1672.71 1213.67 L1673.3 1213.67 L1673.89 1213.67 L1674.47 1213.67 L1675.06 1213.67 L1675.65 1213.67 L1676.23 1213.67 L1676.82 1213.67 L1677.41 1213.67 L1677.99 1213.67 L1678.58 1213.67 L1679.17 1213.67 L1679.75 1213.67 L1680.34 1213.67 L1680.92 1213.67 L1681.51 1213.67 L1682.1 1213.67 L1682.68 1213.67 L1683.27 1213.67 L1683.86 1213.67 L1684.44 1213.67 L1685.03 1213.67 L1685.62 1213.67 L1686.2 1213.67 L1686.79 1213.67 L1687.37 1213.67 L1687.96 1213.67 L1688.55 1213.67 L1689.13 1213.67 L1689.72 1213.67 L1690.31 1213.67 L1690.89 1213.67 L1691.48 1213.67 L1692.07 1213.67 L1692.65 1213.67 L1693.24 1213.67 L1693.83 1213.67 L1694.41 1213.67 L1695 1213.67 L1695.58 1213.67 L1696.17 1213.67 L1696.76 1213.67 L1697.34 1213.67 L1697.93 1213.67 L1698.52 1213.67 L1699.1 1213.67 L1699.69 1213.67 L1700.28 1213.67 L1700.86 1213.67 L1701.45 1213.67 L1702.04 1213.67 L1702.62 1213.67 L1703.21 1213.67 L1703.79 1213.67 L1704.38 1213.67 L1704.97 1213.67 L1705.55 1213.67 L1706.14 1213.67 L1706.73 1213.67 L1707.31 1213.67 L1707.9 1213.67 L1708.49 1213.67 L1709.07 1213.67 L1709.66 1213.67 L1710.24 1213.67 L1710.83 1213.67 L1711.42 1213.67 L1712 1213.67 L1712.59 1213.67 L1713.18 1213.67 L1713.76 1213.67 L1714.35 1213.67 L1714.94 1213.67 L1715.52 1213.67 L1716.11 1213.67 L1716.7 1213.67 L1717.28 1213.67 L1717.87 1213.67 L1718.45 1213.67 L1719.04 1213.67 L1719.63 1213.67 L1720.21 1213.67 L1720.8 1213.67 L1721.39 1213.67 L1721.97 1213.67 L1722.56 1213.67 L1723.15 1213.67 L1723.73 1213.67 L1724.32 1213.67 L1724.91 1213.67 L1725.49 1213.67 L1726.08 1213.67 L1726.66 1213.67 L1727.25 1213.67 L1727.84 1213.67 L1728.42 1213.67 L1729.01 1213.67 L1729.6 1213.67 L1730.18 1213.67 L1730.77 1213.67 L1731.36 1213.67 L1731.94 1213.67 L1732.53 1213.67 L1733.11 1213.67 L1733.7 1213.67 L1734.29 1213.67 L1734.87 1213.67 L1735.46 1213.67 L1736.05 1213.67 L1736.63 1213.67 L1737.22 1213.67 L1737.81 1213.67 L1738.39 1213.67 L1738.98 1213.67 L1739.57 1213.67 L1740.15 1213.67 L1740.74 1213.67 L1741.32 1213.67 L1741.91 1213.67 L1742.5 1213.67 L1743.08 1213.67 L1743.67 1213.67 L1744.26 1213.67 L1744.84 1213.67 L1745.43 1213.67 L1746.02 1213.67 L1746.6 1213.67 L1747.19 1213.67 L1747.78 1213.67 L1748.36 1213.67 L1748.95 1213.67 L1749.53 1213.67 L1750.12 1213.67 L1750.71 1213.67 L1751.29 1213.67 L1751.88 1213.67 L1752.47 1213.67 L1753.05 1213.67 L1753.64 1213.67 L1754.23 1213.67 L1754.81 1213.67 L1755.4 1213.67 L1755.99 1213.67 L1756.57 1213.67 L1757.16 1213.67 L1757.74 1213.67 L1758.33 1213.67 L1758.92 1213.67 L1759.5 1213.67 L1760.09 1213.67 L1760.68 1213.67 L1761.26 1213.67 L1761.85 1213.67 L1762.44 1213.67 L1763.02 1213.67 L1763.61 1213.67 L1764.19 1213.67 L1764.78 1213.67 L1765.37 1213.67 L1765.95 1213.67 L1766.54 1213.67 L1767.13 1213.67 L1767.71 1213.67 L1768.3 1213.67 L1768.89 1213.67 L1769.47 1213.67 L1770.06 1213.67 L1770.65 1213.67 L1771.23 1213.67 L1771.82 1213.67 L1772.4 1213.67 L1772.99 1213.67 L1773.58 1213.67 L1774.16 1213.67 L1774.75 1213.67 L1775.34 1213.67 L1775.92 1213.67 L1776.51 1213.67 L1777.1 1213.67 L1777.68 1213.67 L1778.27 1213.67 L1778.86 1213.67 L1779.44 1213.67 L1780.03 1213.67 L1780.61 1213.67 L1781.2 1213.67 L1781.79 1213.67 L1782.37 1213.67 L1782.96 1213.67 L1783.55 1213.67 L1784.13 1213.67 L1784.72 1213.67 L1785.31 1213.67 L1785.89 1213.67 L1786.48 1213.67 L1787.06 1213.67 L1787.65 1213.67 L1788.24 1213.67 L1788.82 1213.67 L1789.41 1213.67 L1790 1213.67 L1790.58 1213.67 L1791.17 1213.67 L1791.76 1213.67 L1792.34 1213.67 L1792.93 1213.67 L1793.52 1213.67 L1794.1 1213.67 L1794.69 1213.67 L1795.27 1213.67 L1795.86 1213.67 L1796.45 1213.67 L1797.03 1213.67 L1797.62 1213.67 L1798.21 1213.67 L1798.79 1213.67 L1799.38 1213.67 L1799.97 1213.67 L1800.55 1213.67 L1801.14 1213.67 L1801.73 1213.67 L1802.31 1213.67 L1802.9 1213.67 L1803.48 1213.67 L1804.07 1213.67 L1804.66 1213.67 L1805.24 1213.67 L1805.83 1213.67 L1806.42 1213.67 L1807 1213.67 L1807.59 1213.67 L1808.18 1213.67 L1808.76 1213.67 L1809.35 1213.67 L1809.94 1213.67 L1810.52 1213.67 L1811.11 1213.67 L1811.69 1213.67 L1812.28 1213.67 L1812.87 1213.67 L1813.45 1213.67 L1814.04 1213.67 L1814.63 1213.67 L1815.21 1213.67 L1815.8 1213.67 L1816.39 1213.67 L1816.97 1213.67 L1817.56 1213.67 L1818.14 1213.67 L1818.73 1213.67 L1819.32 1213.67 L1819.9 1213.67 L1820.49 1213.67 L1821.08 1213.67 L1821.66 1213.67 L1822.25 1213.67 L1822.84 1213.67 L1823.42 1213.67 L1824.01 1213.67 L1824.6 1213.67 L1825.18 1213.67 L1825.77 1213.67 L1826.35 1213.67 L1826.94 1213.67 L1827.53 1213.67 L1828.11 1213.67 L1828.7 1213.67 L1829.29 1213.67 L1829.87 1213.67 L1830.46 1213.67 L1831.05 1213.67 L1831.63 1213.67 L1832.22 1213.67 L1832.81 1213.67 L1833.39 1213.67 L1833.98 1213.67 L1834.56 1213.67 L1835.15 1213.67 L1835.74 1213.67 L1836.32 1213.67 L1836.91 1213.67 L1837.5 1213.67 L1838.08 1213.67 L1838.67 1213.67 L1839.26 1213.67 L1839.84 1213.67 L1840.43 1213.67 L1841.01 1213.67 L1841.6 1213.67 L1842.19 1213.67 L1842.77 1213.67 L1843.36 1213.67 L1843.95 1213.67 L1844.53 1213.67 L1845.12 1213.67 L1845.71 1213.67 L1846.29 1213.67 L1846.88 1213.67 L1847.47 1213.67 L1848.05 1213.67 L1848.64 1213.67 L1849.22 1213.67 L1849.81 1213.67 L1850.4 1213.67 L1850.98 1213.67 L1851.57 1213.67 L1852.16 1213.67 L1852.74 1213.67 L1853.33 1213.67 L1853.92 1213.67 L1854.5 1213.67 L1855.09 1213.67 L1855.68 1213.67 L1856.26 1213.67 L1856.85 1213.67 L1857.43 1213.67 L1858.02 1213.67 L1858.61 1213.67 L1859.19 1213.67 L1859.78 1213.67 L1860.37 1213.67 L1860.95 1213.67 L1861.54 1213.67 L1862.13 1213.67 L1862.71 1213.67 L1863.3 1213.67 L1863.88 1213.67 L1864.47 1213.67 L1865.06 1213.67 L1865.64 1213.67 L1866.23 1213.67 L1866.82 1213.67 L1867.4 1213.67 L1867.99 1213.67 L1868.58 1213.67 L1869.16 1213.67 L1869.75 1213.67 L1870.34 1213.67 L1870.92 1213.67 L1871.51 1213.67 L1872.09 1213.67 L1872.68 1213.67 L1873.27 1213.67 L1873.85 1213.67 L1874.44 1213.67 L1875.03 1213.67 L1875.61 1213.67 L1876.2 1213.67 L1876.79 1213.67 L1877.37 1213.67 L1877.96 1213.67 L1878.55 1213.67 L1879.13 1213.67 L1879.72 1213.67 L1880.3 1213.67 L1880.89 1213.67 L1881.48 1213.67 L1882.06 1213.67 L1882.65 1213.67 L1883.24 1213.67 L1883.82 1213.67 L1884.41 1213.67 L1885 1213.67 L1885.58 1213.67 L1886.17 1213.67 L1886.76 1213.67 L1887.34 1213.67 L1887.93 1213.67 L1888.51 1213.67 L1889.1 1213.67 L1889.69 1213.67 L1890.27 1213.67 L1890.86 1213.67 L1891.45 1213.67 L1892.03 1213.67 L1892.62 1213.67 L1893.21 1213.67 L1893.79 1213.67 L1894.38 1213.67 L1894.96 1213.67 L1895.55 1213.67 L1896.14 1213.67 L1896.72 1213.67 L1897.31 1213.67 L1897.9 1213.67 L1898.48 1213.67 L1899.07 1213.67 L1899.66 1213.67 L1900.24 1213.67 L1900.83 1213.67 L1901.42 1213.67 L1902 1213.67 L1902.59 1213.67 L1903.17 1213.67 L1903.76 1213.67 L1904.35 1213.67 L1904.93 1213.67 L1905.52 1213.67 L1906.11 1213.67 L1906.69 1213.67 L1907.28 1213.67 L1907.87 1213.67 L1908.45 1213.67 L1909.04 1213.67 L1909.63 1213.67 L1910.21 1213.67 L1910.8 1213.67 L1911.38 1213.67 L1911.97 1213.67 L1912.56 1213.67 L1913.14 1213.67 L1913.73 1213.67 L1914.32 1213.67 L1914.9 1213.67 L1915.49 1213.67 L1916.08 1213.67 L1916.66 1213.67 L1917.25 1213.67 L1917.83 1213.67 L1918.42 1213.67 L1919.01 1213.67 L1919.59 1213.67 L1920.18 1213.67 L1920.77 1213.67 L1921.35 1213.67 L1921.94 1213.67 L1922.53 1213.67 L1923.11 1213.67 L1923.7 1213.67 L1924.29 1213.67 L1924.87 1213.67 L1925.46 1213.67 L1926.04 1213.67 L1926.63 1213.67 L1927.22 1213.67 L1927.8 1213.67 L1928.39 1213.67 L1928.98 1213.67 L1929.56 1213.67 L1930.15 1213.67 L1930.74 1213.67 L1931.32 1213.67 L1931.91 1213.67 L1932.5 1213.67 L1933.08 1213.67 L1933.67 1213.67 L1934.25 1213.67 L1934.84 1213.67 L1935.43 1213.67 L1936.01 1213.67 L1936.6 1213.67 L1937.19 1213.67 L1937.77 1213.67 L1938.36 1213.67 L1938.95 1213.67 L1939.53 1213.67 L1940.12 1213.67 L1940.71 1213.67 L1941.29 1213.67 L1941.88 1213.67 L1942.46 1213.67 L1943.05 1213.67 L1943.64 1213.67 L1944.22 1213.67 L1944.81 1213.67 L1945.4 1213.67 L1945.98 1213.67 L1946.57 1213.67 L1947.16 1213.67 L1947.74 1213.67 L1948.33 1213.67 L1948.91 1213.67 L1949.5 1213.67 L1950.09 1213.67 L1950.67 1213.67 L1951.26 1213.67 L1951.85 1213.67 L1952.43 1213.67 L1953.02 1213.67 L1953.61 1213.67 L1954.19 1213.67 L1954.78 1213.67 L1955.37 1213.67 L1955.95 1213.67 L1956.54 1213.67 L1957.12 1213.67 L1957.71 1213.67 L1958.3 1213.67 L1958.88 1213.67 L1959.47 1213.67 L1960.06 1213.67 L1960.64 1213.67 L1961.23 1213.67 L1961.82 1213.67 L1962.4 1213.67 L1962.99 1213.67 L1963.58 1213.67 L1964.16 1213.67 L1964.75 1213.67 L1965.33 1213.67 L1965.92 1213.67 L1966.51 1213.67 L1967.09 1213.67 L1967.68 1213.67 L1968.27 1213.67 L1968.85 1213.67 L1969.44 1213.67 L1970.03 1213.67 L1970.61 1213.67 L1971.2 1213.67 L1971.78 1213.67 L1972.37 1213.67 L1972.96 1213.67 L1973.54 1213.67 L1974.13 1213.67 L1974.72 1213.67 L1975.3 1213.67 L1975.89 1213.67 L1976.48 1213.67 L1977.06 1213.67 L1977.65 1213.67 L1978.24 1213.67 L1978.82 1213.67 L1979.41 1213.67 L1979.99 1213.67 L1980.58 1213.67 L1981.17 1213.67 L1981.75 1213.67 L1982.34 1213.67 L1982.93 1213.67 L1983.51 1213.67 L1984.1 1213.67 L1984.69 1213.67 L1985.27 1213.67 L1985.86 1213.67 L1986.45 1213.67 L1987.03 1213.67 L1987.62 1213.67 L1988.2 1213.67 L1988.79 1213.67 L1989.38 1213.67 L1989.96 1213.67 L1990.55 1213.67 L1991.14 1213.67 L1991.72 1213.67 L1992.31 1213.67 L1992.9 1213.67 L1993.48 1213.67 L1994.07 1213.67 L1994.65 1213.67 L1995.24 1213.67 L1995.83 1213.67 L1996.41 1213.67 L1997 1213.67 L1997.59 1213.67 L1998.17 1213.67 L1998.76 1213.67 L1999.35 1213.67 L1999.93 1213.67 L2000.52 1213.67 L2001.11 1213.67 L2001.69 1213.67 L2002.28 1213.67 L2002.86 1213.67 L2003.45 1213.67 L2004.04 1213.67 L2004.62 1213.67 L2005.21 1213.67 L2005.8 1213.67 L2006.38 1213.67 L2006.97 1213.67 L2007.56 1213.67 L2008.14 1213.67 L2008.73 1213.67 L2009.32 1213.67 L2009.9 1213.67 L2010.49 1213.67 L2011.07 1213.67 L2011.66 1213.67 L2012.25 1213.67 L2012.83 1213.67 L2013.42 1213.67 L2014.01 1213.67 L2014.59 1213.67 L2015.18 1213.67 L2015.77 1213.67 L2016.35 1213.67 L2016.94 1213.67 L2017.53 1213.67 L2018.11 1213.67 L2018.7 1213.67 L2019.28 1213.67 L2019.87 1213.67 L2020.46 1213.67 L2021.04 1213.67 L2021.63 1213.67 L2022.22 1213.67 L2022.8 1213.67 L2023.39 1213.67 L2023.98 1213.67 L2024.56 1213.67 L2025.15 1213.67 L2025.73 1213.67 L2026.32 1213.67 L2026.91 1213.67 L2027.49 1213.67 L2028.08 1213.67 L2028.67 1213.67 L2029.25 1213.67 L2029.84 1213.67 L2030.43 1213.67 L2031.01 1213.67 L2031.6 1213.67 L2032.19 1213.67 L2032.77 1213.67 L2033.36 1213.67 L2033.94 1213.67 L2034.53 1213.67 L2035.12 1213.67 L2035.7 1213.67 L2036.29 1213.67 L2036.88 1213.67 L2037.46 1213.67 L2038.05 1213.67 L2038.64 1213.67 L2039.22 1213.67 L2039.81 1213.67 L2040.4 1213.67 L2040.98 1213.67 L2041.57 1213.67 L2042.15 1213.67 L2042.74 1213.67 L2043.33 1213.67 L2043.91 1213.67 L2044.5 1213.67 L2045.09 1213.67 L2045.67 1213.67 L2046.26 1213.67 L2046.85 1213.67 L2047.43 1213.67 L2048.02 1213.67 L2048.6 1213.67 L2049.19 1213.67 L2049.78 1213.67 L2050.36 1213.67 L2050.95 1213.67 L2051.54 1213.67 L2052.12 1213.67 L2052.71 1213.67 L2053.3 1213.67 L2053.88 1213.67 L2054.47 1213.67 L2055.06 1213.67 L2055.64 1213.67 L2056.23 1213.67 L2056.81 1213.67 L2057.4 1213.67 L2057.99 1213.67 L2058.57 1213.67 L2059.16 1213.67 L2059.75 1213.67 L2060.33 1213.67 L2060.92 1213.67 L2061.51 1213.67 L2062.09 1213.67 L2062.68 1213.67 L2063.27 1213.67 L2063.85 1213.67 L2064.44 1213.67 L2065.02 1213.67 L2065.61 1213.67 L2066.2 1213.67 L2066.78 1213.67 L2067.37 1213.67 L2067.96 1213.67 L2068.54 1213.67 L2069.13 1213.67 L2069.72 1213.67 L2070.3 1213.67 L2070.89 1213.67 L2071.48 1213.67 L2072.06 1213.67 L2072.65 1213.67 L2073.23 1213.67 L2073.82 1213.67 L2074.41 1213.67 L2074.99 1213.67 L2075.58 1213.67 L2076.17 1213.67 L2076.75 1213.67 L2077.34 1213.67 L2077.93 1213.67 L2078.51 1213.67 L2079.1 1213.67 L2079.68 1213.67 L2080.27 1213.67 L2080.86 1213.67 L2081.44 1213.67 L2082.03 1213.67 L2082.62 1213.67 L2083.2 1213.67 L2083.79 1213.67 L2084.38 1213.67 L2084.96 1213.67 L2085.55 1213.67 L2086.14 1213.67 L2086.72 1213.67 L2087.31 1213.67 L2087.89 1213.67 L2088.48 1213.67 L2089.07 1213.67 L2089.65 1213.67 L2090.24 1213.67 L2090.83 1213.67 L2091.41 1213.67 L2092 1213.67 L2092.59 1213.67 L2093.17 1213.67 L2093.76 1213.67 L2094.35 1213.67 L2094.93 1213.67 L2095.52 1213.67 L2096.1 1213.67 L2096.69 1213.67 L2097.28 1213.67 L2097.86 1213.67 L2098.45 1213.67 L2099.04 1213.67 L2099.62 1213.67 L2100.21 1213.67 L2100.8 1213.67 L2101.38 1213.67 L2101.97 1213.67 L2102.55 1213.67 L2103.14 1213.67 L2103.73 1213.67 L2104.31 1213.67 L2104.9 1213.67 L2105.49 1213.67 L2106.07 1213.67 L2106.66 1213.67 L2107.25 1213.67 L2107.83 1213.67 L2108.42 1213.67 L2109.01 1213.67 L2109.59 1213.67 L2110.18 1213.67 L2110.76 1213.67 L2111.35 1213.67 L2111.94 1213.67 L2112.52 1213.67 L2113.11 1213.67 L2113.7 1213.67 L2114.28 1213.67 L2114.87 1213.67 L2115.46 1213.67 L2116.04 1213.67 L2116.63 1213.67 L2117.22 1213.67 L2117.8 1213.67 L2118.39 1213.67 L2118.97 1213.67 L2119.56 1213.67 L2120.15 1213.67 L2120.73 1213.67 L2121.32 1213.67 L2121.91 1213.67 L2122.49 1213.67 L2123.08 1213.67 L2123.67 1213.67 L2124.25 1213.67 L2124.84 1213.67 L2125.42 1213.67 L2126.01 1213.67 L2126.6 1213.67 L2127.18 1213.67 L2127.77 1213.67 L2128.36 1213.67 L2128.94 1213.67 L2129.53 1213.67 L2130.12 1213.67 L2130.7 1213.67 L2131.29 1213.67 L2131.88 1213.67 L2132.46 1213.67 L2133.05 1213.67 L2133.63 1213.67 L2134.22 1213.67 L2134.81 1213.67 L2135.39 1213.67 L2135.98 1213.67 L2136.57 1213.67 L2137.15 1213.67 L2137.74 1213.67 L2138.33 1213.67 L2138.91 1213.67 L2139.5 1213.67 L2140.09 1213.67 L2140.67 1213.67 L2141.26 1213.67 L2141.84 1213.67 L2142.43 1213.67 L2143.02 1213.67 L2143.6 1213.67 L2144.19 1213.67 L2144.78 1213.67 L2145.36 1213.67 L2145.95 1213.67 L2146.54 1213.67 L2147.12 1213.67 L2147.71 1213.67 L2148.3 1213.67 L2148.88 1213.67 L2149.47 1213.67 L2150.05 1213.67 L2150.64 1213.67 L2151.23 1213.67 L2151.81 1213.67 L2152.4 1213.67 L2152.99 1213.67 L2153.57 1213.67 L2154.16 1213.67 L2154.75 1213.67 L2155.33 1213.67 L2155.92 1213.67 L2156.5 1213.67 L2157.09 1213.67 L2157.68 1213.67 L2158.26 1213.67 L2158.26 1213.07 L2157.68 1213.07 L2157.09 1213.07 L2156.5 1213.07 L2155.92 1213.07 L2155.33 1213.07 L2154.75 1213.07 L2154.16 1213.07 L2153.57 1213.07 L2152.99 1213.07 L2152.4 1213.07 L2151.81 1213.07 L2151.23 1213.07 L2150.64 1213.07 L2150.05 1213.07 L2149.47 1213.07 L2148.88 1213.07 L2148.3 1213.07 L2147.71 1213.07 L2147.12 1213.07 L2146.54 1213.07 L2145.95 1213.07 L2145.36 1213.07 L2144.78 1213.07 L2144.19 1213.07 L2143.6 1213.07 L2143.02 1213.07 L2142.43 1213.07 L2141.84 1213.07 L2141.26 1213.07 L2140.67 1213.07 L2140.09 1213.07 L2139.5 1213.07 L2138.91 1213.07 L2138.33 1213.07 L2137.74 1213.07 L2137.15 1213.07 L2136.57 1213.07 L2135.98 1213.07 L2135.39 1213.07 L2134.81 1213.07 L2134.22 1213.07 L2133.63 1213.07 L2133.05 1213.07 L2132.46 1213.07 L2131.88 1213.07 L2131.29 1213.07 L2130.7 1213.07 L2130.12 1213.07 L2129.53 1213.07 L2128.94 1213.07 L2128.36 1213.07 L2127.77 1213.07 L2127.18 1213.07 L2126.6 1213.07 L2126.01 1213.07 L2125.42 1213.07 L2124.84 1213.07 L2124.25 1213.07 L2123.67 1213.07 L2123.08 1213.07 L2122.49 1213.07 L2121.91 1213.07 L2121.32 1213.07 L2120.73 1213.07 L2120.15 1213.07 L2119.56 1213.07 L2118.97 1213.07 L2118.39 1213.07 L2117.8 1213.07 L2117.22 1213.07 L2116.63 1213.07 L2116.04 1213.07 L2115.46 1213.07 L2114.87 1213.07 L2114.28 1213.07 L2113.7 1213.07 L2113.11 1213.07 L2112.52 1213.07 L2111.94 1213.07 L2111.35 1213.07 L2110.76 1213.07 L2110.18 1213.07 L2109.59 1213.07 L2109.01 1213.07 L2108.42 1213.07 L2107.83 1213.07 L2107.25 1213.07 L2106.66 1213.07 L2106.07 1213.07 L2105.49 1213.07 L2104.9 1213.07 L2104.31 1213.07 L2103.73 1213.07 L2103.14 1213.07 L2102.55 1213.07 L2101.97 1213.07 L2101.38 1213.07 L2100.8 1213.07 L2100.21 1213.07 L2099.62 1213.07 L2099.04 1213.07 L2098.45 1213.07 L2097.86 1213.07 L2097.28 1213.07 L2096.69 1213.07 L2096.1 1213.07 L2095.52 1213.07 L2094.93 1213.07 L2094.35 1213.07 L2093.76 1213.07 L2093.17 1213.07 L2092.59 1213.07 L2092 1213.07 L2091.41 1213.07 L2090.83 1213.07 L2090.24 1213.07 L2089.65 1213.07 L2089.07 1213.07 L2088.48 1213.07 L2087.89 1213.07 L2087.31 1213.07 L2086.72 1213.07 L2086.14 1213.07 L2085.55 1213.07 L2084.96 1213.07 L2084.38 1213.07 L2083.79 1213.07 L2083.2 1213.07 L2082.62 1213.07 L2082.03 1213.07 L2081.44 1213.07 L2080.86 1213.07 L2080.27 1213.07 L2079.68 1213.07 L2079.1 1213.07 L2078.51 1213.07 L2077.93 1213.07 L2077.34 1213.07 L2076.75 1213.07 L2076.17 1213.07 L2075.58 1213.07 L2074.99 1213.07 L2074.41 1213.07 L2073.82 1213.07 L2073.23 1213.07 L2072.65 1213.07 L2072.06 1213.07 L2071.48 1213.07 L2070.89 1213.07 L2070.3 1213.07 L2069.72 1213.07 L2069.13 1213.07 L2068.54 1213.07 L2067.96 1213.07 L2067.37 1213.07 L2066.78 1213.07 L2066.2 1213.07 L2065.61 1213.07 L2065.02 1213.07 L2064.44 1213.07 L2063.85 1213.07 L2063.27 1213.07 L2062.68 1213.07 L2062.09 1213.07 L2061.51 1213.07 L2060.92 1213.07 L2060.33 1213.07 L2059.75 1213.07 L2059.16 1213.07 L2058.57 1213.07 L2057.99 1213.07 L2057.4 1213.07 L2056.81 1213.07 L2056.23 1213.07 L2055.64 1213.07 L2055.06 1213.07 L2054.47 1213.07 L2053.88 1213.07 L2053.3 1213.07 L2052.71 1213.07 L2052.12 1213.07 L2051.54 1213.07 L2050.95 1213.07 L2050.36 1213.07 L2049.78 1213.07 L2049.19 1213.07 L2048.6 1213.07 L2048.02 1213.07 L2047.43 1213.07 L2046.85 1213.07 L2046.26 1213.07 L2045.67 1213.07 L2045.09 1213.07 L2044.5 1213.07 L2043.91 1213.07 L2043.33 1213.07 L2042.74 1213.07 L2042.15 1213.07 L2041.57 1213.07 L2040.98 1213.07 L2040.4 1213.07 L2039.81 1213.07 L2039.22 1213.07 L2038.64 1213.07 L2038.05 1213.07 L2037.46 1213.07 L2036.88 1213.07 L2036.29 1213.07 L2035.7 1213.07 L2035.12 1213.07 L2034.53 1213.07 L2033.94 1213.07 L2033.36 1213.07 L2032.77 1213.07 L2032.19 1213.07 L2031.6 1213.07 L2031.01 1213.07 L2030.43 1213.07 L2029.84 1213.07 L2029.25 1213.07 L2028.67 1213.07 L2028.08 1213.07 L2027.49 1213.07 L2026.91 1213.07 L2026.32 1213.07 L2025.73 1213.07 L2025.15 1213.07 L2024.56 1213.07 L2023.98 1213.07 L2023.39 1213.07 L2022.8 1213.07 L2022.22 1213.07 L2021.63 1213.07 L2021.04 1213.07 L2020.46 1213.07 L2019.87 1213.07 L2019.28 1213.07 L2018.7 1213.07 L2018.11 1213.07 L2017.53 1213.07 L2016.94 1213.07 L2016.35 1213.07 L2015.77 1213.07 L2015.18 1213.07 L2014.59 1213.07 L2014.01 1213.07 L2013.42 1213.07 L2012.83 1213.07 L2012.25 1213.07 L2011.66 1213.07 L2011.07 1213.07 L2010.49 1213.07 L2009.9 1213.07 L2009.32 1213.07 L2008.73 1213.07 L2008.14 1213.07 L2007.56 1213.07 L2006.97 1213.07 L2006.38 1213.07 L2005.8 1213.07 L2005.21 1213.07 L2004.62 1213.07 L2004.04 1213.07 L2003.45 1213.07 L2002.86 1213.07 L2002.28 1213.07 L2001.69 1213.07 L2001.11 1213.07 L2000.52 1213.07 L1999.93 1213.07 L1999.35 1213.07 L1998.76 1213.07 L1998.17 1213.07 L1997.59 1213.07 L1997 1213.07 L1996.41 1213.07 L1995.83 1213.07 L1995.24 1213.07 L1994.65 1213.07 L1994.07 1213.07 L1993.48 1213.07 L1992.9 1213.07 L1992.31 1213.07 L1991.72 1213.07 L1991.14 1213.07 L1990.55 1213.07 L1989.96 1213.07 L1989.38 1213.07 L1988.79 1213.07 L1988.2 1213.07 L1987.62 1213.07 L1987.03 1213.07 L1986.45 1213.07 L1985.86 1213.07 L1985.27 1213.07 L1984.69 1213.07 L1984.1 1213.07 L1983.51 1213.07 L1982.93 1213.07 L1982.34 1213.07 L1981.75 1213.07 L1981.17 1213.07 L1980.58 1213.07 L1979.99 1213.07 L1979.41 1213.07 L1978.82 1213.07 L1978.24 1213.07 L1977.65 1213.07 L1977.06 1213.07 L1976.48 1213.07 L1975.89 1213.07 L1975.3 1213.07 L1974.72 1213.07 L1974.13 1213.07 L1973.54 1213.07 L1972.96 1213.07 L1972.37 1213.07 L1971.78 1213.07 L1971.2 1213.07 L1970.61 1213.07 L1970.03 1213.07 L1969.44 1213.07 L1968.85 1213.07 L1968.27 1213.07 L1967.68 1213.07 L1967.09 1213.07 L1966.51 1213.07 L1965.92 1213.07 L1965.33 1213.07 L1964.75 1213.07 L1964.16 1213.07 L1963.58 1213.07 L1962.99 1213.07 L1962.4 1213.07 L1961.82 1213.07 L1961.23 1213.07 L1960.64 1213.07 L1960.06 1213.07 L1959.47 1213.07 L1958.88 1213.07 L1958.3 1213.07 L1957.71 1213.07 L1957.12 1213.07 L1956.54 1213.07 L1955.95 1213.07 L1955.37 1213.07 L1954.78 1213.07 L1954.19 1213.07 L1953.61 1213.07 L1953.02 1213.07 L1952.43 1213.07 L1951.85 1213.07 L1951.26 1213.07 L1950.67 1213.07 L1950.09 1213.07 L1949.5 1213.07 L1948.91 1213.07 L1948.33 1213.07 L1947.74 1213.07 L1947.16 1213.07 L1946.57 1213.07 L1945.98 1213.07 L1945.4 1213.07 L1944.81 1213.07 L1944.22 1213.07 L1943.64 1213.07 L1943.05 1213.07 L1942.46 1213.07 L1941.88 1213.07 L1941.29 1213.07 L1940.71 1213.07 L1940.12 1213.07 L1939.53 1213.07 L1938.95 1213.07 L1938.36 1213.07 L1937.77 1213.07 L1937.19 1213.07 L1936.6 1213.07 L1936.01 1213.07 L1935.43 1213.07 L1934.84 1213.07 L1934.25 1213.07 L1933.67 1213.07 L1933.08 1213.07 L1932.5 1213.07 L1931.91 1213.07 L1931.32 1213.07 L1930.74 1213.07 L1930.15 1213.07 L1929.56 1213.07 L1928.98 1213.07 L1928.39 1213.07 L1927.8 1213.07 L1927.22 1213.07 L1926.63 1213.07 L1926.04 1213.07 L1925.46 1213.07 L1924.87 1213.07 L1924.29 1213.07 L1923.7 1213.07 L1923.11 1213.07 L1922.53 1213.07 L1921.94 1213.07 L1921.35 1213.07 L1920.77 1213.07 L1920.18 1213.07 L1919.59 1213.07 L1919.01 1213.07 L1918.42 1213.07 L1917.83 1213.07 L1917.25 1213.07 L1916.66 1213.07 L1916.08 1213.07 L1915.49 1213.07 L1914.9 1213.07 L1914.32 1213.07 L1913.73 1213.07 L1913.14 1213.07 L1912.56 1213.07 L1911.97 1213.07 L1911.38 1213.07 L1910.8 1213.07 L1910.21 1213.07 L1909.63 1213.07 L1909.04 1213.07 L1908.45 1213.07 L1907.87 1213.07 L1907.28 1213.07 L1906.69 1213.07 L1906.11 1213.07 L1905.52 1213.07 L1904.93 1213.07 L1904.35 1213.07 L1903.76 1213.07 L1903.17 1213.07 L1902.59 1213.07 L1902 1213.07 L1901.42 1213.07 L1900.83 1213.07 L1900.24 1213.07 L1899.66 1213.07 L1899.07 1213.07 L1898.48 1213.07 L1897.9 1213.07 L1897.31 1213.07 L1896.72 1213.07 L1896.14 1213.07 L1895.55 1213.07 L1894.96 1213.07 L1894.38 1213.07 L1893.79 1213.07 L1893.21 1213.07 L1892.62 1213.07 L1892.03 1213.07 L1891.45 1213.07 L1890.86 1213.07 L1890.27 1213.07 L1889.69 1213.07 L1889.1 1213.07 L1888.51 1213.07 L1887.93 1213.07 L1887.34 1213.07 L1886.76 1213.07 L1886.17 1213.07 L1885.58 1213.07 L1885 1213.07 L1884.41 1213.07 L1883.82 1213.07 L1883.24 1213.07 L1882.65 1213.07 L1882.06 1213.07 L1881.48 1213.07 L1880.89 1213.07 L1880.3 1213.07 L1879.72 1213.07 L1879.13 1213.07 L1878.55 1213.07 L1877.96 1213.07 L1877.37 1213.07 L1876.79 1213.07 L1876.2 1213.07 L1875.61 1213.07 L1875.03 1213.07 L1874.44 1213.07 L1873.85 1213.07 L1873.27 1213.07 L1872.68 1213.07 L1872.09 1213.07 L1871.51 1213.07 L1870.92 1213.07 L1870.34 1213.07 L1869.75 1213.07 L1869.16 1213.07 L1868.58 1213.07 L1867.99 1213.07 L1867.4 1213.07 L1866.82 1213.07 L1866.23 1213.07 L1865.64 1213.07 L1865.06 1213.07 L1864.47 1213.07 L1863.88 1213.07 L1863.3 1213.07 L1862.71 1213.07 L1862.13 1213.07 L1861.54 1213.07 L1860.95 1213.07 L1860.37 1213.07 L1859.78 1213.07 L1859.19 1213.07 L1858.61 1213.07 L1858.02 1213.07 L1857.43 1213.07 L1856.85 1213.07 L1856.26 1213.07 L1855.68 1213.07 L1855.09 1213.07 L1854.5 1213.07 L1853.92 1213.07 L1853.33 1213.07 L1852.74 1213.07 L1852.16 1213.07 L1851.57 1213.07 L1850.98 1213.07 L1850.4 1213.07 L1849.81 1213.07 L1849.22 1213.07 L1848.64 1213.07 L1848.05 1213.07 L1847.47 1213.07 L1846.88 1213.07 L1846.29 1213.07 L1845.71 1213.07 L1845.12 1213.07 L1844.53 1213.07 L1843.95 1213.07 L1843.36 1213.07 L1842.77 1213.07 L1842.19 1213.07 L1841.6 1213.07 L1841.01 1213.07 L1840.43 1213.07 L1839.84 1213.07 L1839.26 1213.07 L1838.67 1213.07 L1838.08 1213.07 L1837.5 1213.07 L1836.91 1213.07 L1836.32 1213.07 L1835.74 1213.07 L1835.15 1213.07 L1834.56 1213.07 L1833.98 1213.07 L1833.39 1213.07 L1832.81 1213.07 L1832.22 1213.07 L1831.63 1213.07 L1831.05 1213.07 L1830.46 1213.07 L1829.87 1213.07 L1829.29 1213.07 L1828.7 1213.07 L1828.11 1213.07 L1827.53 1213.07 L1826.94 1213.07 L1826.35 1213.07 L1825.77 1213.07 L1825.18 1213.07 L1824.6 1213.07 L1824.01 1213.07 L1823.42 1213.07 L1822.84 1213.07 L1822.25 1213.07 L1821.66 1213.07 L1821.08 1213.07 L1820.49 1213.07 L1819.9 1213.07 L1819.32 1213.07 L1818.73 1213.07 L1818.14 1213.07 L1817.56 1213.07 L1816.97 1213.07 L1816.39 1213.07 L1815.8 1213.07 L1815.21 1213.07 L1814.63 1213.07 L1814.04 1213.07 L1813.45 1213.07 L1812.87 1213.07 L1812.28 1213.07 L1811.69 1213.07 L1811.11 1213.07 L1810.52 1213.07 L1809.94 1213.07 L1809.35 1213.07 L1808.76 1213.07 L1808.18 1213.07 L1807.59 1213.07 L1807 1213.07 L1806.42 1213.07 L1805.83 1213.07 L1805.24 1213.07 L1804.66 1213.07 L1804.07 1213.07 L1803.48 1213.07 L1802.9 1213.07 L1802.31 1213.07 L1801.73 1213.07 L1801.14 1213.07 L1800.55 1213.07 L1799.97 1213.07 L1799.38 1213.07 L1798.79 1213.07 L1798.21 1213.07 L1797.62 1213.07 L1797.03 1213.07 L1796.45 1213.07 L1795.86 1213.07 L1795.27 1213.07 L1794.69 1213.07 L1794.1 1213.07 L1793.52 1213.07 L1792.93 1213.07 L1792.34 1213.07 L1791.76 1213.07 L1791.17 1213.07 L1790.58 1213.07 L1790 1213.07 L1789.41 1213.07 L1788.82 1213.07 L1788.24 1213.07 L1787.65 1213.07 L1787.06 1213.07 L1786.48 1213.07 L1785.89 1213.07 L1785.31 1213.07 L1784.72 1213.07 L1784.13 1213.07 L1783.55 1213.07 L1782.96 1213.07 L1782.37 1213.07 L1781.79 1213.07 L1781.2 1213.07 L1780.61 1213.07 L1780.03 1213.07 L1779.44 1213.07 L1778.86 1213.07 L1778.27 1213.07 L1777.68 1213.07 L1777.1 1213.07 L1776.51 1213.07 L1775.92 1213.07 L1775.34 1213.07 L1774.75 1213.07 L1774.16 1213.07 L1773.58 1213.07 L1772.99 1213.07 L1772.4 1213.07 L1771.82 1213.07 L1771.23 1213.07 L1770.65 1213.07 L1770.06 1213.07 L1769.47 1213.07 L1768.89 1213.07 L1768.3 1213.07 L1767.71 1213.07 L1767.13 1213.07 L1766.54 1213.07 L1765.95 1213.07 L1765.37 1213.07 L1764.78 1213.07 L1764.19 1213.07 L1763.61 1213.07 L1763.02 1213.07 L1762.44 1213.07 L1761.85 1213.07 L1761.26 1213.07 L1760.68 1213.07 L1760.09 1213.07 L1759.5 1213.07 L1758.92 1213.07 L1758.33 1213.07 L1757.74 1213.07 L1757.16 1213.07 L1756.57 1213.07 L1755.99 1213.07 L1755.4 1213.07 L1754.81 1213.07 L1754.23 1213.07 L1753.64 1213.07 L1753.05 1213.07 L1752.47 1213.07 L1751.88 1213.07 L1751.29 1213.07 L1750.71 1213.07 L1750.12 1213.07 L1749.53 1213.07 L1748.95 1213.07 L1748.36 1213.07 L1747.78 1213.07 L1747.19 1213.07 L1746.6 1213.07 L1746.02 1213.07 L1745.43 1213.07 L1744.84 1213.07 L1744.26 1213.07 L1743.67 1213.07 L1743.08 1213.07 L1742.5 1213.07 L1741.91 1213.07 L1741.32 1213.07 L1740.74 1213.07 L1740.15 1213.07 L1739.57 1213.07 L1738.98 1213.07 L1738.39 1213.07 L1737.81 1213.07 L1737.22 1213.07 L1736.63 1213.07 L1736.05 1213.07 L1735.46 1213.07 L1734.87 1213.07 L1734.29 1213.07 L1733.7 1213.07 L1733.11 1213.07 L1732.53 1213.07 L1731.94 1213.07 L1731.36 1213.07 L1730.77 1213.07 L1730.18 1213.07 L1729.6 1213.07 L1729.01 1213.07 L1728.42 1213.07 L1727.84 1213.07 L1727.25 1213.07 L1726.66 1213.07 L1726.08 1213.07 L1725.49 1213.07 L1724.91 1213.07 L1724.32 1213.07 L1723.73 1213.07 L1723.15 1213.07 L1722.56 1213.07 L1721.97 1213.07 L1721.39 1213.07 L1720.8 1213.07 L1720.21 1213.07 L1719.63 1213.07 L1719.04 1213.07 L1718.45 1213.07 L1717.87 1213.07 L1717.28 1213.07 L1716.7 1213.07 L1716.11 1213.07 L1715.52 1213.07 L1714.94 1213.07 L1714.35 1213.07 L1713.76 1213.07 L1713.18 1213.07 L1712.59 1213.07 L1712 1213.07 L1711.42 1213.07 L1710.83 1213.07 L1710.24 1213.07 L1709.66 1213.07 L1709.07 1213.07 L1708.49 1213.07 L1707.9 1213.07 L1707.31 1213.07 L1706.73 1213.07 L1706.14 1213.07 L1705.55 1213.07 L1704.97 1213.07 L1704.38 1213.07 L1703.79 1213.07 L1703.21 1213.07 L1702.62 1213.07 L1702.04 1213.07 L1701.45 1213.07 L1700.86 1213.07 L1700.28 1213.07 L1699.69 1213.07 L1699.1 1213.07 L1698.52 1213.07 L1697.93 1213.07 L1697.34 1213.07 L1696.76 1213.07 L1696.17 1213.07 L1695.58 1213.07 L1695 1213.07 L1694.41 1213.07 L1693.83 1213.07 L1693.24 1213.07 L1692.65 1213.07 L1692.07 1213.07 L1691.48 1213.07 L1690.89 1213.07 L1690.31 1213.07 L1689.72 1213.07 L1689.13 1213.07 L1688.55 1213.07 L1687.96 1213.07 L1687.37 1213.07 L1686.79 1213.07 L1686.2 1213.07 L1685.62 1213.07 L1685.03 1213.07 L1684.44 1213.07 L1683.86 1213.07 L1683.27 1213.07 L1682.68 1213.07 L1682.1 1213.07 L1681.51 1213.07 L1680.92 1213.07 L1680.34 1213.07 L1679.75 1213.07 L1679.17 1213.07 L1678.58 1213.07 L1677.99 1213.07 L1677.41 1213.07 L1676.82 1213.07 L1676.23 1213.07 L1675.65 1213.07 L1675.06 1213.07 L1674.47 1213.07 L1673.89 1213.07 L1673.3 1213.07 L1672.71 1213.07 L1672.13 1213.07 L1671.54 1213.07 L1670.96 1213.07 L1670.37 1213.07 L1669.78 1213.07 L1669.2 1213.07 L1668.61 1213.07 L1668.02 1213.07 L1667.44 1213.07 L1666.85 1213.07 L1666.26 1213.07 L1665.68 1213.07 L1665.09 1213.07 L1664.5 1213.07 L1663.92 1213.07 L1663.33 1213.07 L1662.75 1213.07 L1662.16 1213.07 L1661.57 1213.07 L1660.99 1213.07 L1660.4 1213.07 L1659.81 1213.07 L1659.23 1213.07 L1658.64 1213.07 L1658.05 1213.07 L1657.47 1213.07 L1656.88 1213.07 L1656.29 1213.07 L1655.71 1213.07 L1655.12 1213.07 L1654.54 1213.07 L1653.95 1213.07 L1653.36 1213.07 L1652.78 1213.07 L1652.19 1213.07 L1651.6 1213.07 L1651.02 1213.07 L1650.43 1213.07 L1649.84 1213.07 L1649.26 1213.07 L1648.67 1213.07 L1648.09 1213.07 L1647.5 1213.07 L1646.91 1213.07 L1646.33 1213.07 L1645.74 1213.07 L1645.15 1213.07 L1644.57 1213.07 L1643.98 1213.07 L1643.39 1213.07 L1642.81 1213.07 L1642.22 1213.07 L1641.63 1213.07 L1641.05 1213.07 L1640.46 1213.07 L1639.88 1213.07 L1639.29 1213.07 L1638.7 1213.07 L1638.12 1213.07 L1637.53 1213.07 L1636.94 1213.07 L1636.36 1213.07 L1635.77 1213.07 L1635.18 1213.07 L1634.6 1213.07 L1634.01 1213.07 L1633.42 1213.07 L1632.84 1213.07 L1632.25 1213.07 L1631.67 1213.07 L1631.08 1213.07 L1630.49 1213.07 L1629.91 1213.07 L1629.32 1213.07 L1628.73 1213.07 L1628.15 1213.07 L1627.56 1213.07 L1626.97 1213.07 L1626.39 1213.07 L1625.8 1213.07 L1625.22 1213.07 L1624.63 1213.07 L1624.04 1213.07 L1623.46 1213.07 L1622.87 1213.07 L1622.28 1213.07 L1621.7 1213.07 L1621.11 1213.07 L1620.52 1213.07 L1619.94 1213.07 L1619.35 1213.07 L1618.76 1213.07 L1618.18 1213.07 L1617.59 1213.07 L1617.01 1213.07 L1616.42 1213.07 L1615.83 1213.07 L1615.25 1213.07 L1614.66 1213.07 L1614.07 1213.07 L1613.49 1213.07 L1612.9 1213.07 L1612.31 1213.07 L1611.73 1213.07 L1611.14 1213.07 L1610.55 1213.07 L1609.97 1213.07 L1609.38 1213.07 L1608.8 1213.07 L1608.21 1213.07 L1607.62 1213.07 L1607.04 1213.07 L1606.45 1213.07 L1605.86 1213.07 L1605.28 1213.07 L1604.69 1213.07 L1604.1 1213.07 L1603.52 1213.07 L1602.93 1213.07 L1602.34 1213.07 L1601.76 1213.07 L1601.17 1213.07 L1600.59 1213.07 L1600 1213.07 L1599.41 1213.07 L1598.83 1213.07 L1598.24 1213.07 L1597.65 1213.07 L1597.07 1213.07 L1596.48 1213.07 L1595.89 1213.07 L1595.31 1213.07 L1594.72 1213.07 L1594.14 1213.07 L1593.55 1213.07 L1592.96 1213.07 L1592.38 1213.07 L1591.79 1213.07 L1591.2 1213.07 L1590.62 1213.07 L1590.03 1213.07 L1589.44 1213.07 L1588.86 1213.07 L1588.27 1213.07 L1587.68 1213.07 L1587.1 1213.07 L1586.51 1213.07 L1585.93 1213.07 L1585.34 1213.07 L1584.75 1213.07 L1584.17 1213.07 L1583.58 1213.07 L1582.99 1213.07 L1582.41 1213.07 L1581.82 1213.07 L1581.23 1213.07 L1580.65 1213.07 L1580.06 1213.07 L1579.47 1213.07 L1578.89 1213.07 L1578.3 1213.07 L1577.72 1213.07 L1577.13 1213.07 L1576.54 1213.07 L1575.96 1213.07 L1575.37 1213.07 L1574.78 1213.07 L1574.2 1213.07 L1573.61 1213.07 L1573.02 1213.07 L1572.44 1213.07 L1571.85 1213.07 L1571.27 1213.07 L1570.68 1213.07 L1570.09 1213.07 L1569.51 1213.07 L1568.92 1213.07 L1568.33 1213.07 L1567.75 1213.07 L1567.16 1213.07 L1566.57 1213.07 L1565.99 1213.07 L1565.4 1213.07 L1564.81 1213.07 L1564.23 1213.07 L1563.64 1213.07 L1563.06 1213.07 L1562.47 1213.07 L1561.88 1213.07 L1561.3 1213.07 L1560.71 1213.07 L1560.12 1213.07 L1559.54 1213.07 L1558.95 1213.07 L1558.36 1213.07 L1557.78 1213.07 L1557.19 1213.07 L1556.6 1213.07 L1556.02 1213.07 L1555.43 1213.07 L1554.85 1213.07 L1554.26 1213.07 L1553.67 1213.07 L1553.09 1213.07 L1552.5 1213.07 L1551.91 1213.07 L1551.33 1213.07 L1550.74 1213.07 L1550.15 1213.07 L1549.57 1213.07 L1548.98 1213.07 L1548.4 1213.07 L1547.81 1213.07 L1547.22 1213.07 L1546.64 1213.07 L1546.05 1213.07 L1545.46 1213.07 L1544.88 1213.07 L1544.29 1213.07 L1543.7 1213.07 L1543.12 1213.07 L1542.53 1213.07 L1541.94 1213.07 L1541.36 1213.07 L1540.77 1213.07 L1540.19 1213.07 L1539.6 1213.07 L1539.01 1213.07 L1538.43 1213.07 L1537.84 1213.07 L1537.25 1213.07 L1536.67 1213.07 L1536.08 1213.07 L1535.49 1213.07 L1534.91 1213.07 L1534.32 1213.07 L1533.73 1213.07 L1533.15 1213.07 L1532.56 1213.07 L1531.98 1213.07 L1531.39 1213.07 L1530.8 1213.07 L1530.22 1213.07 L1529.63 1213.07 L1529.04 1213.07 L1528.46 1213.07 L1527.87 1213.07 L1527.28 1213.07 L1526.7 1213.07 L1526.11 1213.07 L1525.52 1213.07 L1524.94 1213.07 L1524.35 1213.07 L1523.77 1213.07 L1523.18 1213.07 L1522.59 1213.07 L1522.01 1213.07 L1521.42 1213.07 L1520.83 1213.07 L1520.25 1213.07 L1519.66 1213.07 L1519.07 1213.07 L1518.49 1213.07 L1517.9 1213.07 L1517.32 1213.07 L1516.73 1213.07 L1516.14 1213.07 L1515.56 1213.07 L1514.97 1213.07 L1514.38 1213.07 L1513.8 1213.07 L1513.21 1213.07 L1512.62 1213.07 L1512.04 1213.07 L1511.45 1213.07 L1510.86 1213.07 L1510.28 1213.07 L1509.69 1213.07 L1509.11 1213.07 L1508.52 1213.07 L1507.93 1213.07 L1507.35 1213.07 L1506.76 1213.07 L1506.17 1213.07 L1505.59 1213.07 L1505 1213.07 L1504.41 1213.07 L1503.83 1213.07 L1503.24 1213.07 L1502.65 1213.07 L1502.07 1213.07 L1501.48 1213.07 L1500.9 1213.07 L1500.31 1213.07 L1499.72 1213.07 L1499.14 1213.07 L1498.55 1213.07 L1497.96 1213.07 L1497.38 1213.07 L1496.79 1213.07 L1496.2 1213.07 L1495.62 1213.07 L1495.03 1213.07 L1494.45 1213.07 L1493.86 1213.07 L1493.27 1213.07 L1492.69 1213.07 L1492.1 1213.07 L1491.51 1213.07 L1490.93 1213.07 L1490.34 1213.07 L1489.75 1213.07 L1489.17 1213.07 L1488.58 1213.07 L1487.99 1213.07 L1487.41 1213.07 L1486.82 1213.07 L1486.24 1213.07 L1485.65 1213.07 L1485.06 1213.07 L1484.48 1213.07 L1483.89 1213.07 L1483.3 1213.07 L1482.72 1213.07 L1482.13 1213.07 L1481.54 1213.07 L1480.96 1213.07 L1480.37 1213.07 L1479.78 1213.07 L1479.2 1213.07 L1478.61 1213.07 L1478.03 1213.07 L1477.44 1213.07 L1476.85 1213.07 L1476.27 1213.07 L1475.68 1213.07 L1475.09 1213.07 L1474.51 1213.07 L1473.92 1213.07 L1473.33 1213.07 L1472.75 1213.07 L1472.16 1213.07 L1471.57 1213.07 L1470.99 1213.07 L1470.4 1213.07 L1469.82 1213.07 L1469.23 1213.07 L1468.64 1213.07 L1468.06 1213.07 L1467.47 1213.07 L1466.88 1213.07 L1466.3 1213.07 L1465.71 1213.07 L1465.12 1213.07 L1464.54 1213.07 L1463.95 1213.07 L1463.37 1213.07 L1462.78 1213.07 L1462.19 1213.07 L1461.61 1213.07 L1461.02 1213.07 L1460.43 1213.07 L1459.85 1213.07 L1459.26 1213.07 L1458.67 1213.07 L1458.09 1213.07 L1457.5 1213.07 L1456.91 1213.07 L1456.33 1213.07 L1455.74 1213.07 L1455.16 1213.07 L1454.57 1213.07 L1453.98 1213.07 L1453.4 1213.07 L1452.81 1213.07 L1452.22 1213.07 L1451.64 1213.07 L1451.05 1213.07 L1450.46 1213.07 L1449.88 1213.07 L1449.29 1213.07 L1448.7 1213.07 L1448.12 1213.07 L1447.53 1213.07 L1446.95 1213.07 L1446.36 1213.07 L1445.77 1213.07 L1445.19 1213.07 L1444.6 1213.07 L1444.01 1213.07 L1443.43 1213.07 L1442.84 1213.07 L1442.25 1213.07 L1441.67 1213.07 L1441.08 1213.07 L1440.5 1213.07 L1439.91 1213.07 L1439.32 1213.07 L1438.74 1213.07 L1438.15 1213.07 L1437.56 1213.07 L1436.98 1213.07 L1436.39 1213.07 L1435.8 1213.07 L1435.22 1213.07 L1434.63 1213.07 L1434.04 1213.07 L1433.46 1213.07 L1432.87 1213.07 L1432.29 1213.07 L1431.7 1213.07 L1431.11 1213.07 L1430.53 1213.07 L1429.94 1213.07 L1429.35 1213.07 L1428.77 1213.07 L1428.18 1213.07 L1427.59 1213.07 L1427.01 1213.07 L1426.42 1213.07 L1425.83 1213.07 L1425.25 1213.07 L1424.66 1213.07 L1424.08 1213.07 L1423.49 1213.07 L1422.9 1213.07 L1422.32 1213.07 L1421.73 1213.07 L1421.14 1213.07 L1420.56 1213.07 L1419.97 1213.07 L1419.38 1213.07 L1418.8 1213.07 L1418.21 1213.07 L1417.63 1213.07 L1417.04 1213.07 L1416.45 1213.07 L1415.87 1213.07 L1415.28 1213.07 L1414.69 1213.07 L1414.11 1213.07 L1413.52 1213.07 L1412.93 1213.07 L1412.35 1213.07 L1411.76 1213.07 L1411.17 1213.07 L1410.59 1213.07 L1410 1213.07 L1409.42 1213.07 L1408.83 1213.07 L1408.24 1213.07 L1407.66 1213.07 L1407.07 1213.07 L1406.48 1213.07 L1405.9 1213.07 L1405.31 1213.07 L1404.72 1213.07 L1404.14 1213.07 L1403.55 1213.07 L1402.96 1213.07 L1402.38 1213.07 L1401.79 1213.07 L1401.21 1213.07 L1400.62 1213.07 L1400.03 1213.07 L1399.45 1213.07 L1398.86 1213.07 L1398.27 1213.07 L1397.69 1213.07 L1397.1 1213.07 L1396.51 1213.07 L1395.93 1213.07 L1395.34 1213.07 L1394.75 1213.07 L1394.17 1213.07 L1393.58 1213.07 L1393 1213.07 L1392.41 1213.07 L1391.82 1213.07 L1391.24 1213.07 L1390.65 1213.07 L1390.06 1213.07 L1389.48 1213.07 L1388.89 1213.07 L1388.3 1213.07 L1387.72 1213.07 L1387.13 1213.07 L1386.55 1213.07 L1385.96 1213.07 L1385.37 1213.07 L1384.79 1213.07 L1384.2 1213.07 L1383.61 1213.07 L1383.03 1213.07 L1382.44 1213.07 L1381.85 1213.07 L1381.27 1213.07 L1380.68 1213.07 L1380.09 1213.07 L1379.51 1213.07 L1378.92 1213.07 L1378.34 1213.07 L1377.75 1213.07 L1377.16 1213.07 L1376.58 1213.07 L1375.99 1213.07 L1375.4 1213.07 L1374.82 1213.07 L1374.23 1213.07 L1373.64 1213.07 L1373.06 1213.07 L1372.47 1213.07 L1371.88 1213.07 L1371.3 1213.07 L1370.71 1213.07 L1370.13 1213.07 L1369.54 1213.07 L1368.95 1213.07 L1368.37 1213.07 L1367.78 1213.07 L1367.19 1213.07 L1366.61 1213.07 L1366.02 1213.07 L1365.43 1213.07 L1364.85 1213.07 L1364.26 1213.07 L1363.68 1213.07 L1363.09 1213.07 L1362.5 1213.07 L1361.92 1213.07 L1361.33 1213.07 L1360.74 1213.07 L1360.16 1213.07 L1359.57 1213.07 L1358.98 1213.07 L1358.4 1213.07 L1357.81 1213.07 L1357.22 1213.07 L1356.64 1213.07 L1356.05 1213.07 L1355.47 1213.07 L1354.88 1213.07 L1354.29 1213.07 L1353.71 1213.07 L1353.12 1213.07 L1352.53 1213.07 L1351.95 1213.07 L1351.36 1213.07 L1350.77 1213.07 L1350.19 1213.07 L1349.6 1213.07 L1349.01 1213.07 L1348.43 1213.07 L1347.84 1213.07 L1347.26 1213.07 L1346.67 1213.07 L1346.08 1213.07 L1345.5 1213.07 L1344.91 1213.07 L1344.32 1213.07 L1343.74 1213.07 L1343.15 1213.07 L1342.56 1213.07 L1341.98 1213.07 L1341.39 1213.07 L1340.8 1213.07 L1340.22 1213.07 L1339.63 1213.07 L1339.05 1213.07 L1338.46 1213.07 L1337.87 1213.07 L1337.29 1213.07 L1336.7 1213.07 L1336.11 1213.07 L1335.53 1213.07 L1334.94 1213.07 L1334.35 1213.07 L1333.77 1213.07 L1333.18 1213.07 L1332.6 1213.07 L1332.01 1213.07 L1331.42 1213.07 L1330.84 1213.07 L1330.25 1213.07 L1329.66 1213.07 L1329.08 1213.07 L1328.49 1213.07 L1327.9 1213.07 L1327.32 1213.07 L1326.73 1213.07 L1326.14 1213.07 L1325.56 1213.07 L1324.97 1213.07 L1324.39 1213.07 L1323.8 1213.07 L1323.21 1213.07 L1322.63 1213.07 L1322.04 1213.07 L1321.45 1213.07 L1320.87 1213.07 L1320.28 1213.07 L1319.69 1213.07 L1319.11 1213.07 L1318.52 1213.07 L1317.93 1213.07 L1317.35 1213.07 L1316.76 1213.07 L1316.18 1213.07 L1315.59 1213.07 L1315 1213.07 L1314.42 1213.07 L1313.83 1213.07 L1313.24 1213.07 L1312.66 1213.07 L1312.07 1213.07 L1311.48 1213.07 L1310.9 1213.07 L1310.31 1213.07 L1309.73 1213.07 L1309.14 1213.07 L1308.55 1213.07 L1307.97 1213.07 L1307.38 1213.07 L1306.79 1213.07 L1306.21 1213.07 L1305.62 1213.07 L1305.03 1213.07 L1304.45 1213.07 L1303.86 1213.07 L1303.27 1213.07 L1302.69 1213.07 L1302.1 1213.07 L1301.52 1213.07 L1300.93 1213.07 L1300.34 1213.07 L1299.76 1213.07 L1299.17 1213.07 L1298.58 1213.07 L1298 1213.07 L1297.41 1213.07 L1296.82 1213.07 L1296.24 1213.07 L1295.65 1213.07 L1295.06 1213.07 L1294.48 1213.07 L1293.89 1213.07 L1293.31 1213.07 L1292.72 1213.07 L1292.13 1213.07 L1291.55 1213.07 L1290.96 1213.07 L1290.37 1213.07 L1289.79 1213.07 L1289.2 1213.07 L1288.61 1213.07 L1288.03 1213.07 L1287.44 1213.07 L1286.86 1213.07 L1286.27 1213.07 L1285.68 1213.07 L1285.1 1213.07 L1284.51 1213.07 L1283.92 1213.07 L1283.34 1213.07 L1282.75 1213.07 L1282.16 1213.07 L1281.58 1213.07 L1280.99 1213.07 L1280.4 1213.07 L1279.82 1213.07 L1279.23 1213.07 L1278.65 1213.07 L1278.06 1213.07 L1277.47 1213.07 L1276.89 1213.07 L1276.3 1213.07 L1275.71 1213.07 L1275.13 1213.07 L1274.54 1213.07 L1273.95 1213.07 L1273.37 1213.07 L1272.78 1213.07 L1272.19 1213.07 L1271.61 1213.07 L1271.02 1213.07 L1270.44 1213.07 L1269.85 1213.07 L1269.26 1213.07 L1268.68 1213.07 L1268.09 1213.07 L1267.5 1213.07 L1266.92 1213.07 L1266.33 1213.07 L1265.74 1213.07 L1265.16 1213.07 L1264.57 1213.07 L1263.98 1213.07 L1263.4 1213.07 L1262.81 1213.07 L1262.23 1213.07 L1261.64 1213.07 L1261.05 1213.07 L1260.47 1213.07 L1259.88 1213.07 L1259.29 1213.07 L1258.71 1213.07 L1258.12 1213.07 L1257.53 1213.07 L1256.95 1213.07 L1256.36 1213.07 L1255.78 1213.07 L1255.19 1213.07 L1254.6 1213.07 L1254.02 1213.07 L1253.43 1213.07 L1252.84 1213.07 L1252.26 1213.07 L1251.67 1213.07 L1251.08 1213.07 L1250.5 1213.07 L1249.91 1213.07 L1249.32 1213.07 L1248.74 1213.07 L1248.15 1213.07 L1247.57 1213.07 L1246.98 1213.07 L1246.39 1213.07 L1245.81 1213.07 L1245.22 1213.07 L1244.63 1213.07 L1244.05 1213.07 L1243.46 1213.07 L1242.87 1213.07 L1242.29 1213.07 L1241.7 1213.07 L1241.11 1213.07 L1240.53 1213.07 L1239.94 1213.07 L1239.36 1213.07 L1238.77 1213.07 L1238.18 1213.07 L1237.6 1213.07 L1237.01 1213.07 L1236.42 1213.07 L1235.84 1213.07 L1235.25 1213.07 L1234.66 1213.07 L1234.08 1213.07 L1233.49 1213.07 L1232.91 1213.07 L1232.32 1213.07 L1231.73 1213.07 L1231.15 1213.07 L1230.56 1213.07 L1229.97 1213.07 L1229.39 1213.07 L1228.8 1213.07 L1228.21 1213.07 L1227.63 1213.07 L1227.04 1213.07 L1226.45 1213.07 L1225.87 1213.07 L1225.28 1213.07 L1224.7 1213.07 L1224.11 1213.07 L1223.52 1213.07 L1222.94 1213.07 L1222.35 1213.07 L1221.76 1213.07 L1221.18 1213.07 L1220.59 1213.07 L1220 1213.07 L1219.42 1213.07 L1218.83 1213.07 L1218.24 1213.07 L1217.66 1213.07 L1217.07 1213.07 L1216.49 1213.07 L1215.9 1213.07 L1215.31 1213.07 L1214.73 1213.07 L1214.14 1213.07 L1213.55 1213.07 L1212.97 1213.07 L1212.38 1213.07 L1211.79 1213.07 L1211.21 1213.07 L1210.62 1213.07 L1210.03 1213.07 L1209.45 1213.07 L1208.86 1213.07 L1208.28 1213.07 L1207.69 1213.07 L1207.1 1213.07 L1206.52 1213.07 L1205.93 1213.07 L1205.34 1213.07 L1204.76 1213.07 L1204.17 1213.07 L1203.58 1213.07 L1203 1213.07 L1202.41 1213.07 L1201.83 1213.07 L1201.24 1213.07 L1200.65 1213.07 L1200.07 1213.07 L1199.48 1213.07 L1198.89 1213.07 L1198.31 1213.07 L1197.72 1213.07 L1197.13 1213.07 L1196.55 1213.07 L1195.96 1213.07 L1195.37 1213.07 L1194.79 1213.07 L1194.2 1213.07 L1193.62 1213.07 L1193.03 1213.07 L1192.44 1213.07 L1191.86 1213.07 L1191.27 1213.07 L1190.68 1213.07 L1190.1 1213.07 L1189.51 1213.07 L1188.92 1213.07 L1188.34 1213.07 L1187.75 1213.07 L1187.16 1213.07 L1186.58 1213.07 L1185.99 1213.07 L1185.41 1213.07 L1184.82 1213.07 L1184.23 1213.07 L1183.65 1213.07 L1183.06 1213.07 L1182.47 1213.07 L1181.89 1213.07 L1181.3 1213.07 L1180.71 1213.07 L1180.13 1213.07 L1179.54 1213.07 L1178.96 1213.07 L1178.37 1213.07 L1177.78 1213.07 L1177.2 1213.07 L1176.61 1213.07 L1176.02 1213.07 L1175.44 1213.07 L1174.85 1213.07 L1174.26 1213.07 L1173.68 1213.07 L1173.09 1213.07 L1172.5 1213.07 L1171.92 1213.07 L1171.33 1213.07 L1170.75 1213.07 L1170.16 1213.07 L1169.57 1213.07 L1168.99 1213.07 L1168.4 1213.07 L1167.81 1213.07 L1167.23 1213.07 L1166.64 1213.07 L1166.05 1213.07 L1165.47 1213.07 L1164.88 1213.07 L1164.29 1213.07 L1163.71 1213.07 L1163.12 1213.07 L1162.54 1213.07 L1161.95 1213.07 L1161.36 1213.07 L1160.78 1213.07 L1160.19 1213.07 L1159.6 1213.07 L1159.02 1213.07 L1158.43 1213.07 L1157.84 1213.07 L1157.26 1213.07 L1156.67 1213.07 L1156.09 1213.07 L1155.5 1213.07 L1154.91 1213.07 L1154.33 1213.07 L1153.74 1213.07 L1153.15 1213.07 L1152.57 1213.07 L1151.98 1213.07 L1151.39 1213.07 L1150.81 1213.07 L1150.22 1213.07 L1149.63 1213.07 L1149.05 1213.07 L1148.46 1213.07 L1147.88 1213.07 L1147.29 1213.07 L1146.7 1213.07 L1146.12 1213.07 L1145.53 1213.07 L1144.94 1213.07 L1144.36 1213.07 L1143.77 1213.07 L1143.18 1213.07 L1142.6 1213.07 L1142.01 1213.07 L1141.42 1213.07 L1140.84 1213.07 L1140.25 1213.07 L1139.67 1213.07 L1139.08 1213.07 L1138.49 1213.07 L1137.91 1213.07 L1137.32 1213.07 L1136.73 1213.07 L1136.15 1213.07 L1135.56 1213.07 L1134.97 1213.07 L1134.39 1213.07 L1133.8 1213.07 L1133.21 1213.07 L1132.63 1213.07 L1132.04 1213.07 L1131.46 1213.07 L1130.87 1213.07 L1130.28 1213.07 L1129.7 1213.07 L1129.11 1213.07 L1128.52 1213.07 L1127.94 1213.07 L1127.35 1213.07 L1126.76 1213.07 L1126.18 1213.07 L1125.59 1213.07 L1125.01 1213.07 L1124.42 1213.07 L1123.83 1213.07 L1123.25 1213.07 L1122.66 1213.07 L1122.07 1213.07 L1121.49 1213.07 L1120.9 1213.07 L1120.31 1213.07 L1119.73 1213.07 L1119.14 1213.07 L1118.55 1213.07 L1117.97 1213.07 L1117.38 1213.07 L1116.8 1213.07 L1116.21 1213.07 L1115.62 1213.07 L1115.04 1213.07 L1114.45 1213.07 L1113.86 1213.07 L1113.28 1213.07 L1112.69 1213.07 L1112.1 1213.07 L1111.52 1213.07 L1110.93 1213.07 L1110.34 1213.07 L1109.76 1213.07 L1109.17 1213.07 L1108.59 1213.07 L1108 1213.07 L1107.41 1213.07 L1106.83 1213.07 L1106.24 1213.07 L1105.65 1213.07 L1105.07 1213.07 L1104.48 1213.07 L1103.89 1213.07 L1103.31 1213.07 L1102.72 1213.07 L1102.14 1213.07 L1101.55 1213.07 L1100.96 1213.07 L1100.38 1213.07 L1099.79 1213.07 L1099.2 1213.07 L1098.62 1213.07 L1098.03 1213.07 L1097.44 1213.07 L1096.86 1213.07 L1096.27 1213.07 L1095.68 1213.07 L1095.1 1213.07 L1094.51 1213.07 L1093.93 1213.07 L1093.34 1213.07 L1092.75 1213.07 L1092.17 1213.07 L1091.58 1213.07 L1090.99 1213.07 L1090.41 1213.07 L1089.82 1213.07 L1089.23 1213.07 L1088.65 1213.07 L1088.06 1213.07 L1087.47 1213.07 L1086.89 1213.07 L1086.3 1213.07 L1085.72 1213.07 L1085.13 1213.07 L1084.54 1213.07 L1083.96 1213.07 L1083.37 1213.07 L1082.78 1213.07 L1082.2 1213.07 L1081.61 1213.07 L1081.02 1213.07 L1080.44 1213.07 L1079.85 1213.07 L1079.26 1213.07 L1078.68 1213.07 L1078.09 1213.07 L1077.51 1213.07 L1076.92 1213.07 L1076.33 1213.07 L1075.75 1213.07 L1075.16 1213.07 L1074.57 1213.07 L1073.99 1213.07 L1073.4 1213.07 L1072.81 1213.07 L1072.23 1213.07 L1071.64 1213.07 L1071.06 1213.07 L1070.47 1213.07 L1069.88 1213.07 L1069.3 1213.07 L1068.71 1213.07 L1068.12 1213.07 L1067.54 1213.07 L1066.95 1213.07 L1066.36 1213.07 L1065.78 1213.07 L1065.19 1213.07 L1064.6 1213.07 L1064.02 1213.07 L1063.43 1213.07 L1062.85 1213.07 L1062.26 1213.07 L1061.67 1213.07 L1061.09 1213.07 L1060.5 1213.07 L1059.91 1213.07 L1059.33 1213.07 L1058.74 1213.07 L1058.15 1213.07 L1057.57 1213.07 L1056.98 1213.07 L1056.39 1213.07 L1055.81 1213.07 L1055.22 1213.07 L1054.64 1213.07 L1054.05 1213.07 L1053.46 1213.07 L1052.88 1213.07 L1052.29 1213.07 L1051.7 1213.07 L1051.12 1213.07 L1050.53 1213.07 L1049.94 1213.07 L1049.36 1213.07 L1048.77 1213.07 L1048.19 1213.07 L1047.6 1213.07 L1047.01 1213.07 L1046.43 1213.07 L1045.84 1213.07 L1045.25 1213.07 L1044.67 1213.07 L1044.08 1213.07 L1043.49 1213.07 L1042.91 1213.07 L1042.32 1213.07 L1041.73 1213.07 L1041.15 1213.07 L1040.56 1213.07 L1039.98 1213.07 L1039.39 1213.07 L1038.8 1213.07 L1038.22 1213.07 L1037.63 1213.07 L1037.04 1213.07 L1036.46 1213.07 L1035.87 1213.07 L1035.28 1213.07 L1034.7 1213.07 L1034.11 1213.07 L1033.52 1213.07 L1032.94 1213.07 L1032.35 1213.07 L1031.77 1213.07 L1031.18 1213.07 L1030.59 1213.07 L1030.01 1213.07 L1029.42 1213.07 L1028.83 1213.07 L1028.25 1213.07 L1027.66 1213.07 L1027.07 1213.07 L1026.49 1213.07 L1025.9 1213.07 L1025.32 1213.07 L1024.73 1213.07 L1024.14 1213.07 L1023.56 1213.07 L1022.97 1213.07 L1022.38 1213.07 L1021.8 1213.07 L1021.21 1213.07 L1020.62 1213.07 L1020.04 1213.07 L1019.45 1213.07 L1018.86 1213.07 L1018.28 1213.07 L1017.69 1213.07 L1017.11 1213.07 L1016.52 1213.07 L1015.93 1213.07 L1015.35 1213.07 L1014.76 1213.07 L1014.17 1213.07 L1013.59 1213.07 L1013 1213.07 L1012.41 1213.07 L1011.83 1213.07 L1011.24 1213.07 L1010.65 1213.07 L1010.07 1213.07 L1009.48 1213.07 L1008.9 1213.07 L1008.31 1213.07 L1007.72 1213.07 L1007.14 1213.07 L1006.55 1213.07 L1005.96 1213.07 L1005.38 1213.07 L1004.79 1213.07 L1004.2 1213.07 L1003.62 1213.07 L1003.03 1213.07 L1002.44 1213.07 L1001.86 1213.07 L1001.27 1213.07 L1000.69 1213.07 L1000.1 1213.07 L999.513 1213.07 L998.926 1213.07 L998.34 1213.07 L997.754 1213.07 L997.167 1213.07 L996.581 1213.07 L995.994 1213.07 L995.408 1213.07 L994.822 1213.07 L994.235 1213.07 L993.649 1213.07 L993.062 1213.07 L992.476 1213.07 L991.889 1213.07 L991.303 1213.07 L990.717 1213.07 L990.13 1213.07 L989.544 1213.07 L988.957 1213.07 L988.371 1213.07 L987.785 1213.07 L987.198 1213.07 L986.612 1213.07 L986.025 1213.07  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip882)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1213.37 986.612,1213.37 987.198,1213.37 987.785,1213.37 988.371,1213.37 988.957,1213.37 989.544,1213.37 990.13,1213.37 990.717,1213.37 991.303,1213.37 991.889,1213.37 992.476,1213.37 993.062,1213.37 993.649,1213.37 994.235,1213.37 994.822,1213.37 995.408,1213.37 995.994,1213.37 996.581,1213.37 997.167,1213.37 997.754,1213.37 998.34,1213.37 998.926,1213.37 999.513,1213.37 1000.1,1213.37 1000.69,1213.37 1001.27,1213.37 1001.86,1213.37 1002.44,1213.37 1003.03,1213.37 1003.62,1213.37 1004.2,1213.37 1004.79,1213.37 1005.38,1213.37 1005.96,1213.37 1006.55,1213.37 1007.14,1213.37 1007.72,1213.37 1008.31,1213.37 1008.9,1213.37 1009.48,1213.37 1010.07,1213.37 1010.65,1213.37 1011.24,1213.37 1011.83,1213.37 1012.41,1213.37 1013,1213.37 1013.59,1213.37 1014.17,1213.37 1014.76,1213.37 1015.35,1213.37 1015.93,1213.37 1016.52,1213.37 1017.11,1213.37 1017.69,1213.37 1018.28,1213.37 1018.86,1213.37 1019.45,1213.37 1020.04,1213.37 1020.62,1213.37 1021.21,1213.37 1021.8,1213.37 1022.38,1213.37 1022.97,1213.37 1023.56,1213.37 1024.14,1213.37 1024.73,1213.37 1025.32,1213.37 1025.9,1213.37 1026.49,1213.37 1027.07,1213.37 1027.66,1213.37 1028.25,1213.37 1028.83,1213.37 1029.42,1213.37 1030.01,1213.37 1030.59,1213.37 1031.18,1213.37 1031.77,1213.37 1032.35,1213.37 1032.94,1213.37 1033.52,1213.37 1034.11,1213.37 1034.7,1213.37 1035.28,1213.37 1035.87,1213.37 1036.46,1213.37 1037.04,1213.37 1037.63,1213.37 1038.22,1213.37 1038.8,1213.37 1039.39,1213.37 1039.98,1213.37 1040.56,1213.37 1041.15,1213.37 1041.73,1213.37 1042.32,1213.37 1042.91,1213.37 1043.49,1213.37 1044.08,1213.37 1044.67,1213.37 1045.25,1213.37 1045.84,1213.37 1046.43,1213.37 1047.01,1213.37 1047.6,1213.37 1048.19,1213.37 1048.77,1213.37 1049.36,1213.37 1049.94,1213.37 1050.53,1213.37 1051.12,1213.37 1051.7,1213.37 1052.29,1213.37 1052.88,1213.37 1053.46,1213.37 1054.05,1213.37 1054.64,1213.37 1055.22,1213.37 1055.81,1213.37 1056.39,1213.37 1056.98,1213.37 1057.57,1213.37 1058.15,1213.37 1058.74,1213.37 1059.33,1213.37 1059.91,1213.37 1060.5,1213.37 1061.09,1213.37 1061.67,1213.37 1062.26,1213.37 1062.85,1213.37 1063.43,1213.37 1064.02,1213.37 1064.6,1213.37 1065.19,1213.37 1065.78,1213.37 1066.36,1213.37 1066.95,1213.37 1067.54,1213.37 1068.12,1213.37 1068.71,1213.37 1069.3,1213.37 1069.88,1213.37 1070.47,1213.37 1071.06,1213.37 1071.64,1213.37 1072.23,1213.37 1072.81,1213.37 1073.4,1213.37 1073.99,1213.37 1074.57,1213.37 1075.16,1213.37 1075.75,1213.37 1076.33,1213.37 1076.92,1213.37 1077.51,1213.37 1078.09,1213.37 1078.68,1213.37 1079.26,1213.37 1079.85,1213.37 1080.44,1213.37 1081.02,1213.37 1081.61,1213.37 1082.2,1213.37 1082.78,1213.37 1083.37,1213.37 1083.96,1213.37 1084.54,1213.37 1085.13,1213.37 1085.72,1213.37 1086.3,1213.37 1086.89,1213.37 1087.47,1213.37 1088.06,1213.37 1088.65,1213.37 1089.23,1213.37 1089.82,1213.37 1090.41,1213.37 1090.99,1213.37 1091.58,1213.37 1092.17,1213.37 1092.75,1213.37 1093.34,1213.37 1093.93,1213.37 1094.51,1213.37 1095.1,1213.37 1095.68,1213.37 1096.27,1213.37 1096.86,1213.37 1097.44,1213.37 1098.03,1213.37 1098.62,1213.37 1099.2,1213.37 1099.79,1213.37 1100.38,1213.37 1100.96,1213.37 1101.55,1213.37 1102.14,1213.37 1102.72,1213.37 1103.31,1213.37 1103.89,1213.37 1104.48,1213.37 1105.07,1213.37 1105.65,1213.37 1106.24,1213.37 1106.83,1213.37 1107.41,1213.37 1108,1213.37 1108.59,1213.37 1109.17,1213.37 1109.76,1213.37 1110.34,1213.37 1110.93,1213.37 1111.52,1213.37 1112.1,1213.37 1112.69,1213.37 1113.28,1213.37 1113.86,1213.37 1114.45,1213.37 1115.04,1213.37 1115.62,1213.37 1116.21,1213.37 1116.8,1213.37 1117.38,1213.37 1117.97,1213.37 1118.55,1213.37 1119.14,1213.37 1119.73,1213.37 1120.31,1213.37 1120.9,1213.37 1121.49,1213.37 1122.07,1213.37 1122.66,1213.37 1123.25,1213.37 1123.83,1213.37 1124.42,1213.37 1125.01,1213.37 1125.59,1213.37 1126.18,1213.37 1126.76,1213.37 1127.35,1213.37 1127.94,1213.37 1128.52,1213.37 1129.11,1213.37 1129.7,1213.37 1130.28,1213.37 1130.87,1213.37 1131.46,1213.37 1132.04,1213.37 1132.63,1213.37 1133.21,1213.37 1133.8,1213.37 1134.39,1213.37 1134.97,1213.37 1135.56,1213.37 1136.15,1213.37 1136.73,1213.37 1137.32,1213.37 1137.91,1213.37 1138.49,1213.37 1139.08,1213.37 1139.67,1213.37 1140.25,1213.37 1140.84,1213.37 1141.42,1213.37 1142.01,1213.37 1142.6,1213.37 1143.18,1213.37 1143.77,1213.37 1144.36,1213.37 1144.94,1213.37 1145.53,1213.37 1146.12,1213.37 1146.7,1213.37 1147.29,1213.37 1147.88,1213.37 1148.46,1213.37 1149.05,1213.37 1149.63,1213.37 1150.22,1213.37 1150.81,1213.37 1151.39,1213.37 1151.98,1213.37 1152.57,1213.37 1153.15,1213.37 1153.74,1213.37 1154.33,1213.37 1154.91,1213.37 1155.5,1213.37 1156.09,1213.37 1156.67,1213.37 1157.26,1213.37 1157.84,1213.37 1158.43,1213.37 1159.02,1213.37 1159.6,1213.37 1160.19,1213.37 1160.78,1213.37 1161.36,1213.37 1161.95,1213.37 1162.54,1213.37 1163.12,1213.37 1163.71,1213.37 1164.29,1213.37 1164.88,1213.37 1165.47,1213.37 1166.05,1213.37 1166.64,1213.37 1167.23,1213.37 1167.81,1213.37 1168.4,1213.37 1168.99,1213.37 1169.57,1213.37 1170.16,1213.37 1170.75,1213.37 1171.33,1213.37 1171.92,1213.37 1172.5,1213.37 1173.09,1213.37 1173.68,1213.37 1174.26,1213.37 1174.85,1213.37 1175.44,1213.37 1176.02,1213.37 1176.61,1213.37 1177.2,1213.37 1177.78,1213.37 1178.37,1213.37 1178.96,1213.37 1179.54,1213.37 1180.13,1213.37 1180.71,1213.37 1181.3,1213.37 1181.89,1213.37 1182.47,1213.37 1183.06,1213.37 1183.65,1213.37 1184.23,1213.37 1184.82,1213.37 1185.41,1213.37 1185.99,1213.37 1186.58,1213.37 1187.16,1213.37 1187.75,1213.37 1188.34,1213.37 1188.92,1213.37 1189.51,1213.37 1190.1,1213.37 1190.68,1213.37 1191.27,1213.37 1191.86,1213.37 1192.44,1213.37 1193.03,1213.37 1193.62,1213.37 1194.2,1213.37 1194.79,1213.37 1195.37,1213.37 1195.96,1213.37 1196.55,1213.37 1197.13,1213.37 1197.72,1213.37 1198.31,1213.37 1198.89,1213.37 1199.48,1213.37 1200.07,1213.37 1200.65,1213.37 1201.24,1213.37 1201.83,1213.37 1202.41,1213.37 1203,1213.37 1203.58,1213.37 1204.17,1213.37 1204.76,1213.37 1205.34,1213.37 1205.93,1213.37 1206.52,1213.37 1207.1,1213.37 1207.69,1213.37 1208.28,1213.37 1208.86,1213.37 1209.45,1213.37 1210.03,1213.37 1210.62,1213.37 1211.21,1213.37 1211.79,1213.37 1212.38,1213.37 1212.97,1213.37 1213.55,1213.37 1214.14,1213.37 1214.73,1213.37 1215.31,1213.37 1215.9,1213.37 1216.49,1213.37 1217.07,1213.37 1217.66,1213.37 1218.24,1213.37 1218.83,1213.37 1219.42,1213.37 1220,1213.37 1220.59,1213.37 1221.18,1213.37 1221.76,1213.37 1222.35,1213.37 1222.94,1213.37 1223.52,1213.37 1224.11,1213.37 1224.7,1213.37 1225.28,1213.37 1225.87,1213.37 1226.45,1213.37 1227.04,1213.37 1227.63,1213.37 1228.21,1213.37 1228.8,1213.37 1229.39,1213.37 1229.97,1213.37 1230.56,1213.37 1231.15,1213.37 1231.73,1213.37 1232.32,1213.37 1232.91,1213.37 1233.49,1213.37 1234.08,1213.37 1234.66,1213.37 1235.25,1213.37 1235.84,1213.37 1236.42,1213.37 1237.01,1213.37 1237.6,1213.37 1238.18,1213.37 1238.77,1213.37 1239.36,1213.37 1239.94,1213.37 1240.53,1213.37 1241.11,1213.37 1241.7,1213.37 1242.29,1213.37 1242.87,1213.37 1243.46,1213.37 1244.05,1213.37 1244.63,1213.37 1245.22,1213.37 1245.81,1213.37 1246.39,1213.37 1246.98,1213.37 1247.57,1213.37 1248.15,1213.37 1248.74,1213.37 1249.32,1213.37 1249.91,1213.37 1250.5,1213.37 1251.08,1213.37 1251.67,1213.37 1252.26,1213.37 1252.84,1213.37 1253.43,1213.37 1254.02,1213.37 1254.6,1213.37 1255.19,1213.37 1255.78,1213.37 1256.36,1213.37 1256.95,1213.37 1257.53,1213.37 1258.12,1213.37 1258.71,1213.37 1259.29,1213.37 1259.88,1213.37 1260.47,1213.37 1261.05,1213.37 1261.64,1213.37 1262.23,1213.37 1262.81,1213.37 1263.4,1213.37 1263.98,1213.37 1264.57,1213.37 1265.16,1213.37 1265.74,1213.37 1266.33,1213.37 1266.92,1213.37 1267.5,1213.37 1268.09,1213.37 1268.68,1213.37 1269.26,1213.37 1269.85,1213.37 1270.44,1213.37 1271.02,1213.37 1271.61,1213.37 1272.19,1213.37 1272.78,1213.37 1273.37,1213.37 1273.95,1213.37 1274.54,1213.37 1275.13,1213.37 1275.71,1213.37 1276.3,1213.37 1276.89,1213.37 1277.47,1213.37 1278.06,1213.37 1278.65,1213.37 1279.23,1213.37 1279.82,1213.37 1280.4,1213.37 1280.99,1213.37 1281.58,1213.37 1282.16,1213.37 1282.75,1213.37 1283.34,1213.37 1283.92,1213.37 1284.51,1213.37 1285.1,1213.37 1285.68,1213.37 1286.27,1213.37 1286.86,1213.37 1287.44,1213.37 1288.03,1213.37 1288.61,1213.37 1289.2,1213.37 1289.79,1213.37 1290.37,1213.37 1290.96,1213.37 1291.55,1213.37 1292.13,1213.37 1292.72,1213.37 1293.31,1213.37 1293.89,1213.37 1294.48,1213.37 1295.06,1213.37 1295.65,1213.37 1296.24,1213.37 1296.82,1213.37 1297.41,1213.37 1298,1213.37 1298.58,1213.37 1299.17,1213.37 1299.76,1213.37 1300.34,1213.37 1300.93,1213.37 1301.52,1213.37 1302.1,1213.37 1302.69,1213.37 1303.27,1213.37 1303.86,1213.37 1304.45,1213.37 1305.03,1213.37 1305.62,1213.37 1306.21,1213.37 1306.79,1213.37 1307.38,1213.37 1307.97,1213.37 1308.55,1213.37 1309.14,1213.37 1309.73,1213.37 1310.31,1213.37 1310.9,1213.37 1311.48,1213.37 1312.07,1213.37 1312.66,1213.37 1313.24,1213.37 1313.83,1213.37 1314.42,1213.37 1315,1213.37 1315.59,1213.37 1316.18,1213.37 1316.76,1213.37 1317.35,1213.37 1317.93,1213.37 1318.52,1213.37 1319.11,1213.37 1319.69,1213.37 1320.28,1213.37 1320.87,1213.37 1321.45,1213.37 1322.04,1213.37 1322.63,1213.37 1323.21,1213.37 1323.8,1213.37 1324.39,1213.37 1324.97,1213.37 1325.56,1213.37 1326.14,1213.37 1326.73,1213.37 1327.32,1213.37 1327.9,1213.37 1328.49,1213.37 1329.08,1213.37 1329.66,1213.37 1330.25,1213.37 1330.84,1213.37 1331.42,1213.37 1332.01,1213.37 1332.6,1213.37 1333.18,1213.37 1333.77,1213.37 1334.35,1213.37 1334.94,1213.37 1335.53,1213.37 1336.11,1213.37 1336.7,1213.37 1337.29,1213.37 1337.87,1213.37 1338.46,1213.37 1339.05,1213.37 1339.63,1213.37 1340.22,1213.37 1340.8,1213.37 1341.39,1213.37 1341.98,1213.37 1342.56,1213.37 1343.15,1213.37 1343.74,1213.37 1344.32,1213.37 1344.91,1213.37 1345.5,1213.37 1346.08,1213.37 1346.67,1213.37 1347.26,1213.37 1347.84,1213.37 1348.43,1213.37 1349.01,1213.37 1349.6,1213.37 1350.19,1213.37 1350.77,1213.37 1351.36,1213.37 1351.95,1213.37 1352.53,1213.37 1353.12,1213.37 1353.71,1213.37 1354.29,1213.37 1354.88,1213.37 1355.47,1213.37 1356.05,1213.37 1356.64,1213.37 1357.22,1213.37 1357.81,1213.37 1358.4,1213.37 1358.98,1213.37 1359.57,1213.37 1360.16,1213.37 1360.74,1213.37 1361.33,1213.37 1361.92,1213.37 1362.5,1213.37 1363.09,1213.37 1363.68,1213.37 1364.26,1213.37 1364.85,1213.37 1365.43,1213.37 1366.02,1213.37 1366.61,1213.37 1367.19,1213.37 1367.78,1213.37 1368.37,1213.37 1368.95,1213.37 1369.54,1213.37 1370.13,1213.37 1370.71,1213.37 1371.3,1213.37 1371.88,1213.37 1372.47,1213.37 1373.06,1213.37 1373.64,1213.37 1374.23,1213.37 1374.82,1213.37 1375.4,1213.37 1375.99,1213.37 1376.58,1213.37 1377.16,1213.37 1377.75,1213.37 1378.34,1213.37 1378.92,1213.37 1379.51,1213.37 1380.09,1213.37 1380.68,1213.37 1381.27,1213.37 1381.85,1213.37 1382.44,1213.37 1383.03,1213.37 1383.61,1213.37 1384.2,1213.37 1384.79,1213.37 1385.37,1213.37 1385.96,1213.37 1386.55,1213.37 1387.13,1213.37 1387.72,1213.37 1388.3,1213.37 1388.89,1213.37 1389.48,1213.37 1390.06,1213.37 1390.65,1213.37 1391.24,1213.37 1391.82,1213.37 1392.41,1213.37 1393,1213.37 1393.58,1213.37 1394.17,1213.37 1394.75,1213.37 1395.34,1213.37 1395.93,1213.37 1396.51,1213.37 1397.1,1213.37 1397.69,1213.37 1398.27,1213.37 1398.86,1213.37 1399.45,1213.37 1400.03,1213.37 1400.62,1213.37 1401.21,1213.37 1401.79,1213.37 1402.38,1213.37 1402.96,1213.37 1403.55,1213.37 1404.14,1213.37 1404.72,1213.37 1405.31,1213.37 1405.9,1213.37 1406.48,1213.37 1407.07,1213.37 1407.66,1213.37 1408.24,1213.37 1408.83,1213.37 1409.42,1213.37 1410,1213.37 1410.59,1213.37 1411.17,1213.37 1411.76,1213.37 1412.35,1213.37 1412.93,1213.37 1413.52,1213.37 1414.11,1213.37 1414.69,1213.37 1415.28,1213.37 1415.87,1213.37 1416.45,1213.37 1417.04,1213.37 1417.63,1213.37 1418.21,1213.37 1418.8,1213.37 1419.38,1213.37 1419.97,1213.37 1420.56,1213.37 1421.14,1213.37 1421.73,1213.37 1422.32,1213.37 1422.9,1213.37 1423.49,1213.37 1424.08,1213.37 1424.66,1213.37 1425.25,1213.37 1425.83,1213.37 1426.42,1213.37 1427.01,1213.37 1427.59,1213.37 1428.18,1213.37 1428.77,1213.37 1429.35,1213.37 1429.94,1213.37 1430.53,1213.37 1431.11,1213.37 1431.7,1213.37 1432.29,1213.37 1432.87,1213.37 1433.46,1213.37 1434.04,1213.37 1434.63,1213.37 1435.22,1213.37 1435.8,1213.37 1436.39,1213.37 1436.98,1213.37 1437.56,1213.37 1438.15,1213.37 1438.74,1213.37 1439.32,1213.37 1439.91,1213.37 1440.5,1213.37 1441.08,1213.37 1441.67,1213.37 1442.25,1213.37 1442.84,1213.37 1443.43,1213.37 1444.01,1213.37 1444.6,1213.37 1445.19,1213.37 1445.77,1213.37 1446.36,1213.37 1446.95,1213.37 1447.53,1213.37 1448.12,1213.37 1448.7,1213.37 1449.29,1213.37 1449.88,1213.37 1450.46,1213.37 1451.05,1213.37 1451.64,1213.37 1452.22,1213.37 1452.81,1213.37 1453.4,1213.37 1453.98,1213.37 1454.57,1213.37 1455.16,1213.37 1455.74,1213.37 1456.33,1213.37 1456.91,1213.37 1457.5,1213.37 1458.09,1213.37 1458.67,1213.37 1459.26,1213.37 1459.85,1213.37 1460.43,1213.37 1461.02,1213.37 1461.61,1213.37 1462.19,1213.37 1462.78,1213.37 1463.37,1213.37 1463.95,1213.37 1464.54,1213.37 1465.12,1213.37 1465.71,1213.37 1466.3,1213.37 1466.88,1213.37 1467.47,1213.37 1468.06,1213.37 1468.64,1213.37 1469.23,1213.37 1469.82,1213.37 1470.4,1213.37 1470.99,1213.37 1471.57,1213.37 1472.16,1213.37 1472.75,1213.37 1473.33,1213.37 1473.92,1213.37 1474.51,1213.37 1475.09,1213.37 1475.68,1213.37 1476.27,1213.37 1476.85,1213.37 1477.44,1213.37 1478.03,1213.37 1478.61,1213.37 1479.2,1213.37 1479.78,1213.37 1480.37,1213.37 1480.96,1213.37 1481.54,1213.37 1482.13,1213.37 1482.72,1213.37 1483.3,1213.37 1483.89,1213.37 1484.48,1213.37 1485.06,1213.37 1485.65,1213.37 1486.24,1213.37 1486.82,1213.37 1487.41,1213.37 1487.99,1213.37 1488.58,1213.37 1489.17,1213.37 1489.75,1213.37 1490.34,1213.37 1490.93,1213.37 1491.51,1213.37 1492.1,1213.37 1492.69,1213.37 1493.27,1213.37 1493.86,1213.37 1494.45,1213.37 1495.03,1213.37 1495.62,1213.37 1496.2,1213.37 1496.79,1213.37 1497.38,1213.37 1497.96,1213.37 1498.55,1213.37 1499.14,1213.37 1499.72,1213.37 1500.31,1213.37 1500.9,1213.37 1501.48,1213.37 1502.07,1213.37 1502.65,1213.37 1503.24,1213.37 1503.83,1213.37 1504.41,1213.37 1505,1213.37 1505.59,1213.37 1506.17,1213.37 1506.76,1213.37 1507.35,1213.37 1507.93,1213.37 1508.52,1213.37 1509.11,1213.37 1509.69,1213.37 1510.28,1213.37 1510.86,1213.37 1511.45,1213.37 1512.04,1213.37 1512.62,1213.37 1513.21,1213.37 1513.8,1213.37 1514.38,1213.37 1514.97,1213.37 1515.56,1213.37 1516.14,1213.37 1516.73,1213.37 1517.32,1213.37 1517.9,1213.37 1518.49,1213.37 1519.07,1213.37 1519.66,1213.37 1520.25,1213.37 1520.83,1213.37 1521.42,1213.37 1522.01,1213.37 1522.59,1213.37 1523.18,1213.37 1523.77,1213.37 1524.35,1213.37 1524.94,1213.37 1525.52,1213.37 1526.11,1213.37 1526.7,1213.37 1527.28,1213.37 1527.87,1213.37 1528.46,1213.37 1529.04,1213.37 1529.63,1213.37 1530.22,1213.37 1530.8,1213.37 1531.39,1213.37 1531.98,1213.37 1532.56,1213.37 1533.15,1213.37 1533.73,1213.37 1534.32,1213.37 1534.91,1213.37 1535.49,1213.37 1536.08,1213.37 1536.67,1213.37 1537.25,1213.37 1537.84,1213.37 1538.43,1213.37 1539.01,1213.37 1539.6,1213.37 1540.19,1213.37 1540.77,1213.37 1541.36,1213.37 1541.94,1213.37 1542.53,1213.37 1543.12,1213.37 1543.7,1213.37 1544.29,1213.37 1544.88,1213.37 1545.46,1213.37 1546.05,1213.37 1546.64,1213.37 1547.22,1213.37 1547.81,1213.37 1548.4,1213.37 1548.98,1213.37 1549.57,1213.37 1550.15,1213.37 1550.74,1213.37 1551.33,1213.37 1551.91,1213.37 1552.5,1213.37 1553.09,1213.37 1553.67,1213.37 1554.26,1213.37 1554.85,1213.37 1555.43,1213.37 1556.02,1213.37 1556.6,1213.37 1557.19,1213.37 1557.78,1213.37 1558.36,1213.37 1558.95,1213.37 1559.54,1213.37 1560.12,1213.37 1560.71,1213.37 1561.3,1213.37 1561.88,1213.37 1562.47,1213.37 1563.06,1213.37 1563.64,1213.37 1564.23,1213.37 1564.81,1213.37 1565.4,1213.37 1565.99,1213.37 1566.57,1213.37 1567.16,1213.37 1567.75,1213.37 1568.33,1213.37 1568.92,1213.37 1569.51,1213.37 1570.09,1213.37 1570.68,1213.37 1571.27,1213.37 1571.85,1213.37 1572.44,1213.37 1573.02,1213.37 1573.61,1213.37 1574.2,1213.37 1574.78,1213.37 1575.37,1213.37 1575.96,1213.37 1576.54,1213.37 1577.13,1213.37 1577.72,1213.37 1578.3,1213.37 1578.89,1213.37 1579.47,1213.37 1580.06,1213.37 1580.65,1213.37 1581.23,1213.37 1581.82,1213.37 1582.41,1213.37 1582.99,1213.37 1583.58,1213.37 1584.17,1213.37 1584.75,1213.37 1585.34,1213.37 1585.93,1213.37 1586.51,1213.37 1587.1,1213.37 1587.68,1213.37 1588.27,1213.37 1588.86,1213.37 1589.44,1213.37 1590.03,1213.37 1590.62,1213.37 1591.2,1213.37 1591.79,1213.37 1592.38,1213.37 1592.96,1213.37 1593.55,1213.37 1594.14,1213.37 1594.72,1213.37 1595.31,1213.37 1595.89,1213.37 1596.48,1213.37 1597.07,1213.37 1597.65,1213.37 1598.24,1213.37 1598.83,1213.37 1599.41,1213.37 1600,1213.37 1600.59,1213.37 1601.17,1213.37 1601.76,1213.37 1602.34,1213.37 1602.93,1213.37 1603.52,1213.37 1604.1,1213.37 1604.69,1213.37 1605.28,1213.37 1605.86,1213.37 1606.45,1213.37 1607.04,1213.37 1607.62,1213.37 1608.21,1213.37 1608.8,1213.37 1609.38,1213.37 1609.97,1213.37 1610.55,1213.37 1611.14,1213.37 1611.73,1213.37 1612.31,1213.37 1612.9,1213.37 1613.49,1213.37 1614.07,1213.37 1614.66,1213.37 1615.25,1213.37 1615.83,1213.37 1616.42,1213.37 1617.01,1213.37 1617.59,1213.37 1618.18,1213.37 1618.76,1213.37 1619.35,1213.37 1619.94,1213.37 1620.52,1213.37 1621.11,1213.37 1621.7,1213.37 1622.28,1213.37 1622.87,1213.37 1623.46,1213.37 1624.04,1213.37 1624.63,1213.37 1625.22,1213.37 1625.8,1213.37 1626.39,1213.37 1626.97,1213.37 1627.56,1213.37 1628.15,1213.37 1628.73,1213.37 1629.32,1213.37 1629.91,1213.37 1630.49,1213.37 1631.08,1213.37 1631.67,1213.37 1632.25,1213.37 1632.84,1213.37 1633.42,1213.37 1634.01,1213.37 1634.6,1213.37 1635.18,1213.37 1635.77,1213.37 1636.36,1213.37 1636.94,1213.37 1637.53,1213.37 1638.12,1213.37 1638.7,1213.37 1639.29,1213.37 1639.88,1213.37 1640.46,1213.37 1641.05,1213.37 1641.63,1213.37 1642.22,1213.37 1642.81,1213.37 1643.39,1213.37 1643.98,1213.37 1644.57,1213.37 1645.15,1213.37 1645.74,1213.37 1646.33,1213.37 1646.91,1213.37 1647.5,1213.37 1648.09,1213.37 1648.67,1213.37 1649.26,1213.37 1649.84,1213.37 1650.43,1213.37 1651.02,1213.37 1651.6,1213.37 1652.19,1213.37 1652.78,1213.37 1653.36,1213.37 1653.95,1213.37 1654.54,1213.37 1655.12,1213.37 1655.71,1213.37 1656.29,1213.37 1656.88,1213.37 1657.47,1213.37 1658.05,1213.37 1658.64,1213.37 1659.23,1213.37 1659.81,1213.37 1660.4,1213.37 1660.99,1213.37 1661.57,1213.37 1662.16,1213.37 1662.75,1213.37 1663.33,1213.37 1663.92,1213.37 1664.5,1213.37 1665.09,1213.37 1665.68,1213.37 1666.26,1213.37 1666.85,1213.37 1667.44,1213.37 1668.02,1213.37 1668.61,1213.37 1669.2,1213.37 1669.78,1213.37 1670.37,1213.37 1670.96,1213.37 1671.54,1213.37 1672.13,1213.37 1672.71,1213.37 1673.3,1213.37 1673.89,1213.37 1674.47,1213.37 1675.06,1213.37 1675.65,1213.37 1676.23,1213.37 1676.82,1213.37 1677.41,1213.37 1677.99,1213.37 1678.58,1213.37 1679.17,1213.37 1679.75,1213.37 1680.34,1213.37 1680.92,1213.37 1681.51,1213.37 1682.1,1213.37 1682.68,1213.37 1683.27,1213.37 1683.86,1213.37 1684.44,1213.37 1685.03,1213.37 1685.62,1213.37 1686.2,1213.37 1686.79,1213.37 1687.37,1213.37 1687.96,1213.37 1688.55,1213.37 1689.13,1213.37 1689.72,1213.37 1690.31,1213.37 1690.89,1213.37 1691.48,1213.37 1692.07,1213.37 1692.65,1213.37 1693.24,1213.37 1693.83,1213.37 1694.41,1213.37 1695,1213.37 1695.58,1213.37 1696.17,1213.37 1696.76,1213.37 1697.34,1213.37 1697.93,1213.37 1698.52,1213.37 1699.1,1213.37 1699.69,1213.37 1700.28,1213.37 1700.86,1213.37 1701.45,1213.37 1702.04,1213.37 1702.62,1213.37 1703.21,1213.37 1703.79,1213.37 1704.38,1213.37 1704.97,1213.37 1705.55,1213.37 1706.14,1213.37 1706.73,1213.37 1707.31,1213.37 1707.9,1213.37 1708.49,1213.37 1709.07,1213.37 1709.66,1213.37 1710.24,1213.37 1710.83,1213.37 1711.42,1213.37 1712,1213.37 1712.59,1213.37 1713.18,1213.37 1713.76,1213.37 1714.35,1213.37 1714.94,1213.37 1715.52,1213.37 1716.11,1213.37 1716.7,1213.37 1717.28,1213.37 1717.87,1213.37 1718.45,1213.37 1719.04,1213.37 1719.63,1213.37 1720.21,1213.37 1720.8,1213.37 1721.39,1213.37 1721.97,1213.37 1722.56,1213.37 1723.15,1213.37 1723.73,1213.37 1724.32,1213.37 1724.91,1213.37 1725.49,1213.37 1726.08,1213.37 1726.66,1213.37 1727.25,1213.37 1727.84,1213.37 1728.42,1213.37 1729.01,1213.37 1729.6,1213.37 1730.18,1213.37 1730.77,1213.37 1731.36,1213.37 1731.94,1213.37 1732.53,1213.37 1733.11,1213.37 1733.7,1213.37 1734.29,1213.37 1734.87,1213.37 1735.46,1213.37 1736.05,1213.37 1736.63,1213.37 1737.22,1213.37 1737.81,1213.37 1738.39,1213.37 1738.98,1213.37 1739.57,1213.37 1740.15,1213.37 1740.74,1213.37 1741.32,1213.37 1741.91,1213.37 1742.5,1213.37 1743.08,1213.37 1743.67,1213.37 1744.26,1213.37 1744.84,1213.37 1745.43,1213.37 1746.02,1213.37 1746.6,1213.37 1747.19,1213.37 1747.78,1213.37 1748.36,1213.37 1748.95,1213.37 1749.53,1213.37 1750.12,1213.37 1750.71,1213.37 1751.29,1213.37 1751.88,1213.37 1752.47,1213.37 1753.05,1213.37 1753.64,1213.37 1754.23,1213.37 1754.81,1213.37 1755.4,1213.37 1755.99,1213.37 1756.57,1213.37 1757.16,1213.37 1757.74,1213.37 1758.33,1213.37 1758.92,1213.37 1759.5,1213.37 1760.09,1213.37 1760.68,1213.37 1761.26,1213.37 1761.85,1213.37 1762.44,1213.37 1763.02,1213.37 1763.61,1213.37 1764.19,1213.37 1764.78,1213.37 1765.37,1213.37 1765.95,1213.37 1766.54,1213.37 1767.13,1213.37 1767.71,1213.37 1768.3,1213.37 1768.89,1213.37 1769.47,1213.37 1770.06,1213.37 1770.65,1213.37 1771.23,1213.37 1771.82,1213.37 1772.4,1213.37 1772.99,1213.37 1773.58,1213.37 1774.16,1213.37 1774.75,1213.37 1775.34,1213.37 1775.92,1213.37 1776.51,1213.37 1777.1,1213.37 1777.68,1213.37 1778.27,1213.37 1778.86,1213.37 1779.44,1213.37 1780.03,1213.37 1780.61,1213.37 1781.2,1213.37 1781.79,1213.37 1782.37,1213.37 1782.96,1213.37 1783.55,1213.37 1784.13,1213.37 1784.72,1213.37 1785.31,1213.37 1785.89,1213.37 1786.48,1213.37 1787.06,1213.37 1787.65,1213.37 1788.24,1213.37 1788.82,1213.37 1789.41,1213.37 1790,1213.37 1790.58,1213.37 1791.17,1213.37 1791.76,1213.37 1792.34,1213.37 1792.93,1213.37 1793.52,1213.37 1794.1,1213.37 1794.69,1213.37 1795.27,1213.37 1795.86,1213.37 1796.45,1213.37 1797.03,1213.37 1797.62,1213.37 1798.21,1213.37 1798.79,1213.37 1799.38,1213.37 1799.97,1213.37 1800.55,1213.37 1801.14,1213.37 1801.73,1213.37 1802.31,1213.37 1802.9,1213.37 1803.48,1213.37 1804.07,1213.37 1804.66,1213.37 1805.24,1213.37 1805.83,1213.37 1806.42,1213.37 1807,1213.37 1807.59,1213.37 1808.18,1213.37 1808.76,1213.37 1809.35,1213.37 1809.94,1213.37 1810.52,1213.37 1811.11,1213.37 1811.69,1213.37 1812.28,1213.37 1812.87,1213.37 1813.45,1213.37 1814.04,1213.37 1814.63,1213.37 1815.21,1213.37 1815.8,1213.37 1816.39,1213.37 1816.97,1213.37 1817.56,1213.37 1818.14,1213.37 1818.73,1213.37 1819.32,1213.37 1819.9,1213.37 1820.49,1213.37 1821.08,1213.37 1821.66,1213.37 1822.25,1213.37 1822.84,1213.37 1823.42,1213.37 1824.01,1213.37 1824.6,1213.37 1825.18,1213.37 1825.77,1213.37 1826.35,1213.37 1826.94,1213.37 1827.53,1213.37 1828.11,1213.37 1828.7,1213.37 1829.29,1213.37 1829.87,1213.37 1830.46,1213.37 1831.05,1213.37 1831.63,1213.37 1832.22,1213.37 1832.81,1213.37 1833.39,1213.37 1833.98,1213.37 1834.56,1213.37 1835.15,1213.37 1835.74,1213.37 1836.32,1213.37 1836.91,1213.37 1837.5,1213.37 1838.08,1213.37 1838.67,1213.37 1839.26,1213.37 1839.84,1213.37 1840.43,1213.37 1841.01,1213.37 1841.6,1213.37 1842.19,1213.37 1842.77,1213.37 1843.36,1213.37 1843.95,1213.37 1844.53,1213.37 1845.12,1213.37 1845.71,1213.37 1846.29,1213.37 1846.88,1213.37 1847.47,1213.37 1848.05,1213.37 1848.64,1213.37 1849.22,1213.37 1849.81,1213.37 1850.4,1213.37 1850.98,1213.37 1851.57,1213.37 1852.16,1213.37 1852.74,1213.37 1853.33,1213.37 1853.92,1213.37 1854.5,1213.37 1855.09,1213.37 1855.68,1213.37 1856.26,1213.37 1856.85,1213.37 1857.43,1213.37 1858.02,1213.37 1858.61,1213.37 1859.19,1213.37 1859.78,1213.37 1860.37,1213.37 1860.95,1213.37 1861.54,1213.37 1862.13,1213.37 1862.71,1213.37 1863.3,1213.37 1863.88,1213.37 1864.47,1213.37 1865.06,1213.37 1865.64,1213.37 1866.23,1213.37 1866.82,1213.37 1867.4,1213.37 1867.99,1213.37 1868.58,1213.37 1869.16,1213.37 1869.75,1213.37 1870.34,1213.37 1870.92,1213.37 1871.51,1213.37 1872.09,1213.37 1872.68,1213.37 1873.27,1213.37 1873.85,1213.37 1874.44,1213.37 1875.03,1213.37 1875.61,1213.37 1876.2,1213.37 1876.79,1213.37 1877.37,1213.37 1877.96,1213.37 1878.55,1213.37 1879.13,1213.37 1879.72,1213.37 1880.3,1213.37 1880.89,1213.37 1881.48,1213.37 1882.06,1213.37 1882.65,1213.37 1883.24,1213.37 1883.82,1213.37 1884.41,1213.37 1885,1213.37 1885.58,1213.37 1886.17,1213.37 1886.76,1213.37 1887.34,1213.37 1887.93,1213.37 1888.51,1213.37 1889.1,1213.37 1889.69,1213.37 1890.27,1213.37 1890.86,1213.37 1891.45,1213.37 1892.03,1213.37 1892.62,1213.37 1893.21,1213.37 1893.79,1213.37 1894.38,1213.37 1894.96,1213.37 1895.55,1213.37 1896.14,1213.37 1896.72,1213.37 1897.31,1213.37 1897.9,1213.37 1898.48,1213.37 1899.07,1213.37 1899.66,1213.37 1900.24,1213.37 1900.83,1213.37 1901.42,1213.37 1902,1213.37 1902.59,1213.37 1903.17,1213.37 1903.76,1213.37 1904.35,1213.37 1904.93,1213.37 1905.52,1213.37 1906.11,1213.37 1906.69,1213.37 1907.28,1213.37 1907.87,1213.37 1908.45,1213.37 1909.04,1213.37 1909.63,1213.37 1910.21,1213.37 1910.8,1213.37 1911.38,1213.37 1911.97,1213.37 1912.56,1213.37 1913.14,1213.37 1913.73,1213.37 1914.32,1213.37 1914.9,1213.37 1915.49,1213.37 1916.08,1213.37 1916.66,1213.37 1917.25,1213.37 1917.83,1213.37 1918.42,1213.37 1919.01,1213.37 1919.59,1213.37 1920.18,1213.37 1920.77,1213.37 1921.35,1213.37 1921.94,1213.37 1922.53,1213.37 1923.11,1213.37 1923.7,1213.37 1924.29,1213.37 1924.87,1213.37 1925.46,1213.37 1926.04,1213.37 1926.63,1213.37 1927.22,1213.37 1927.8,1213.37 1928.39,1213.37 1928.98,1213.37 1929.56,1213.37 1930.15,1213.37 1930.74,1213.37 1931.32,1213.37 1931.91,1213.37 1932.5,1213.37 1933.08,1213.37 1933.67,1213.37 1934.25,1213.37 1934.84,1213.37 1935.43,1213.37 1936.01,1213.37 1936.6,1213.37 1937.19,1213.37 1937.77,1213.37 1938.36,1213.37 1938.95,1213.37 1939.53,1213.37 1940.12,1213.37 1940.71,1213.37 1941.29,1213.37 1941.88,1213.37 1942.46,1213.37 1943.05,1213.37 1943.64,1213.37 1944.22,1213.37 1944.81,1213.37 1945.4,1213.37 1945.98,1213.37 1946.57,1213.37 1947.16,1213.37 1947.74,1213.37 1948.33,1213.37 1948.91,1213.37 1949.5,1213.37 1950.09,1213.37 1950.67,1213.37 1951.26,1213.37 1951.85,1213.37 1952.43,1213.37 1953.02,1213.37 1953.61,1213.37 1954.19,1213.37 1954.78,1213.37 1955.37,1213.37 1955.95,1213.37 1956.54,1213.37 1957.12,1213.37 1957.71,1213.37 1958.3,1213.37 1958.88,1213.37 1959.47,1213.37 1960.06,1213.37 1960.64,1213.37 1961.23,1213.37 1961.82,1213.37 1962.4,1213.37 1962.99,1213.37 1963.58,1213.37 1964.16,1213.37 1964.75,1213.37 1965.33,1213.37 1965.92,1213.37 1966.51,1213.37 1967.09,1213.37 1967.68,1213.37 1968.27,1213.37 1968.85,1213.37 1969.44,1213.37 1970.03,1213.37 1970.61,1213.37 1971.2,1213.37 1971.78,1213.37 1972.37,1213.37 1972.96,1213.37 1973.54,1213.37 1974.13,1213.37 1974.72,1213.37 1975.3,1213.37 1975.89,1213.37 1976.48,1213.37 1977.06,1213.37 1977.65,1213.37 1978.24,1213.37 1978.82,1213.37 1979.41,1213.37 1979.99,1213.37 1980.58,1213.37 1981.17,1213.37 1981.75,1213.37 1982.34,1213.37 1982.93,1213.37 1983.51,1213.37 1984.1,1213.37 1984.69,1213.37 1985.27,1213.37 1985.86,1213.37 1986.45,1213.37 1987.03,1213.37 1987.62,1213.37 1988.2,1213.37 1988.79,1213.37 1989.38,1213.37 1989.96,1213.37 1990.55,1213.37 1991.14,1213.37 1991.72,1213.37 1992.31,1213.37 1992.9,1213.37 1993.48,1213.37 1994.07,1213.37 1994.65,1213.37 1995.24,1213.37 1995.83,1213.37 1996.41,1213.37 1997,1213.37 1997.59,1213.37 1998.17,1213.37 1998.76,1213.37 1999.35,1213.37 1999.93,1213.37 2000.52,1213.37 2001.11,1213.37 2001.69,1213.37 2002.28,1213.37 2002.86,1213.37 2003.45,1213.37 2004.04,1213.37 2004.62,1213.37 2005.21,1213.37 2005.8,1213.37 2006.38,1213.37 2006.97,1213.37 2007.56,1213.37 2008.14,1213.37 2008.73,1213.37 2009.32,1213.37 2009.9,1213.37 2010.49,1213.37 2011.07,1213.37 2011.66,1213.37 2012.25,1213.37 2012.83,1213.37 2013.42,1213.37 2014.01,1213.37 2014.59,1213.37 2015.18,1213.37 2015.77,1213.37 2016.35,1213.37 2016.94,1213.37 2017.53,1213.37 2018.11,1213.37 2018.7,1213.37 2019.28,1213.37 2019.87,1213.37 2020.46,1213.37 2021.04,1213.37 2021.63,1213.37 2022.22,1213.37 2022.8,1213.37 2023.39,1213.37 2023.98,1213.37 2024.56,1213.37 2025.15,1213.37 2025.73,1213.37 2026.32,1213.37 2026.91,1213.37 2027.49,1213.37 2028.08,1213.37 2028.67,1213.37 2029.25,1213.37 2029.84,1213.37 2030.43,1213.37 2031.01,1213.37 2031.6,1213.37 2032.19,1213.37 2032.77,1213.37 2033.36,1213.37 2033.94,1213.37 2034.53,1213.37 2035.12,1213.37 2035.7,1213.37 2036.29,1213.37 2036.88,1213.37 2037.46,1213.37 2038.05,1213.37 2038.64,1213.37 2039.22,1213.37 2039.81,1213.37 2040.4,1213.37 2040.98,1213.37 2041.57,1213.37 2042.15,1213.37 2042.74,1213.37 2043.33,1213.37 2043.91,1213.37 2044.5,1213.37 2045.09,1213.37 2045.67,1213.37 2046.26,1213.37 2046.85,1213.37 2047.43,1213.37 2048.02,1213.37 2048.6,1213.37 2049.19,1213.37 2049.78,1213.37 2050.36,1213.37 2050.95,1213.37 2051.54,1213.37 2052.12,1213.37 2052.71,1213.37 2053.3,1213.37 2053.88,1213.37 2054.47,1213.37 2055.06,1213.37 2055.64,1213.37 2056.23,1213.37 2056.81,1213.37 2057.4,1213.37 2057.99,1213.37 2058.57,1213.37 2059.16,1213.37 2059.75,1213.37 2060.33,1213.37 2060.92,1213.37 2061.51,1213.37 2062.09,1213.37 2062.68,1213.37 2063.27,1213.37 2063.85,1213.37 2064.44,1213.37 2065.02,1213.37 2065.61,1213.37 2066.2,1213.37 2066.78,1213.37 2067.37,1213.37 2067.96,1213.37 2068.54,1213.37 2069.13,1213.37 2069.72,1213.37 2070.3,1213.37 2070.89,1213.37 2071.48,1213.37 2072.06,1213.37 2072.65,1213.37 2073.23,1213.37 2073.82,1213.37 2074.41,1213.37 2074.99,1213.37 2075.58,1213.37 2076.17,1213.37 2076.75,1213.37 2077.34,1213.37 2077.93,1213.37 2078.51,1213.37 2079.1,1213.37 2079.68,1213.37 2080.27,1213.37 2080.86,1213.37 2081.44,1213.37 2082.03,1213.37 2082.62,1213.37 2083.2,1213.37 2083.79,1213.37 2084.38,1213.37 2084.96,1213.37 2085.55,1213.37 2086.14,1213.37 2086.72,1213.37 2087.31,1213.37 2087.89,1213.37 2088.48,1213.37 2089.07,1213.37 2089.65,1213.37 2090.24,1213.37 2090.83,1213.37 2091.41,1213.37 2092,1213.37 2092.59,1213.37 2093.17,1213.37 2093.76,1213.37 2094.35,1213.37 2094.93,1213.37 2095.52,1213.37 2096.1,1213.37 2096.69,1213.37 2097.28,1213.37 2097.86,1213.37 2098.45,1213.37 2099.04,1213.37 2099.62,1213.37 2100.21,1213.37 2100.8,1213.37 2101.38,1213.37 2101.97,1213.37 2102.55,1213.37 2103.14,1213.37 2103.73,1213.37 2104.31,1213.37 2104.9,1213.37 2105.49,1213.37 2106.07,1213.37 2106.66,1213.37 2107.25,1213.37 2107.83,1213.37 2108.42,1213.37 2109.01,1213.37 2109.59,1213.37 2110.18,1213.37 2110.76,1213.37 2111.35,1213.37 2111.94,1213.37 2112.52,1213.37 2113.11,1213.37 2113.7,1213.37 2114.28,1213.37 2114.87,1213.37 2115.46,1213.37 2116.04,1213.37 2116.63,1213.37 2117.22,1213.37 2117.8,1213.37 2118.39,1213.37 2118.97,1213.37 2119.56,1213.37 2120.15,1213.37 2120.73,1213.37 2121.32,1213.37 2121.91,1213.37 2122.49,1213.37 2123.08,1213.37 2123.67,1213.37 2124.25,1213.37 2124.84,1213.37 2125.42,1213.37 2126.01,1213.37 2126.6,1213.37 2127.18,1213.37 2127.77,1213.37 2128.36,1213.37 2128.94,1213.37 2129.53,1213.37 2130.12,1213.37 2130.7,1213.37 2131.29,1213.37 2131.88,1213.37 2132.46,1213.37 2133.05,1213.37 2133.63,1213.37 2134.22,1213.37 2134.81,1213.37 2135.39,1213.37 2135.98,1213.37 2136.57,1213.37 2137.15,1213.37 2137.74,1213.37 2138.33,1213.37 2138.91,1213.37 2139.5,1213.37 2140.09,1213.37 2140.67,1213.37 2141.26,1213.37 2141.84,1213.37 2142.43,1213.37 2143.02,1213.37 2143.6,1213.37 2144.19,1213.37 2144.78,1213.37 2145.36,1213.37 2145.95,1213.37 2146.54,1213.37 2147.12,1213.37 2147.71,1213.37 2148.3,1213.37 2148.88,1213.37 2149.47,1213.37 2150.05,1213.37 2150.64,1213.37 2151.23,1213.37 2151.81,1213.37 2152.4,1213.37 2152.99,1213.37 2153.57,1213.37 2154.16,1213.37 2154.75,1213.37 2155.33,1213.37 2155.92,1213.37 2156.5,1213.37 2157.09,1213.37 2157.68,1213.37 2158.26,1213.37 \"/>\n<path clip-path=\"url(#clip882)\" d=\"M986.025 1213.11 L986.612 1213.11 L987.198 1213.11 L987.785 1213.11 L988.371 1213.11 L988.957 1213.11 L989.544 1213.11 L990.13 1213.11 L990.717 1213.11 L991.303 1213.11 L991.889 1213.11 L992.476 1213.11 L993.062 1213.11 L993.649 1213.11 L994.235 1213.11 L994.822 1213.11 L995.408 1213.11 L995.994 1213.11 L996.581 1213.11 L997.167 1213.11 L997.754 1213.11 L998.34 1213.11 L998.926 1213.11 L999.513 1213.11 L1000.1 1213.11 L1000.69 1213.11 L1001.27 1213.11 L1001.86 1213.11 L1002.44 1213.11 L1003.03 1213.11 L1003.62 1213.11 L1004.2 1213.11 L1004.79 1213.11 L1005.38 1213.11 L1005.96 1213.11 L1006.55 1213.11 L1007.14 1213.11 L1007.72 1213.11 L1008.31 1213.11 L1008.9 1213.11 L1009.48 1213.11 L1010.07 1213.11 L1010.65 1213.11 L1011.24 1213.11 L1011.83 1213.11 L1012.41 1213.11 L1013 1213.11 L1013.59 1213.11 L1014.17 1213.11 L1014.76 1213.11 L1015.35 1213.11 L1015.93 1213.11 L1016.52 1213.11 L1017.11 1213.11 L1017.69 1213.11 L1018.28 1213.11 L1018.86 1213.11 L1019.45 1213.11 L1020.04 1213.11 L1020.62 1213.11 L1021.21 1213.11 L1021.8 1213.11 L1022.38 1213.11 L1022.97 1213.11 L1023.56 1213.11 L1024.14 1213.11 L1024.73 1213.11 L1025.32 1213.11 L1025.9 1213.11 L1026.49 1213.11 L1027.07 1213.11 L1027.66 1213.11 L1028.25 1213.11 L1028.83 1213.11 L1029.42 1213.11 L1030.01 1213.11 L1030.59 1213.11 L1031.18 1213.11 L1031.77 1213.11 L1032.35 1213.11 L1032.94 1213.11 L1033.52 1213.11 L1034.11 1213.11 L1034.7 1213.11 L1035.28 1213.11 L1035.87 1213.11 L1036.46 1213.11 L1037.04 1213.11 L1037.63 1213.11 L1038.22 1213.11 L1038.8 1213.11 L1039.39 1213.11 L1039.98 1213.11 L1040.56 1213.11 L1041.15 1213.11 L1041.73 1213.11 L1042.32 1213.11 L1042.91 1213.11 L1043.49 1213.11 L1044.08 1213.11 L1044.67 1213.11 L1045.25 1213.11 L1045.84 1213.11 L1046.43 1213.11 L1047.01 1213.11 L1047.6 1213.11 L1048.19 1213.11 L1048.77 1213.11 L1049.36 1213.11 L1049.94 1213.11 L1050.53 1213.11 L1051.12 1213.11 L1051.7 1213.11 L1052.29 1213.11 L1052.88 1213.11 L1053.46 1213.11 L1054.05 1213.11 L1054.64 1213.11 L1055.22 1213.11 L1055.81 1213.11 L1056.39 1213.11 L1056.98 1213.11 L1057.57 1213.11 L1058.15 1213.11 L1058.74 1213.11 L1059.33 1213.11 L1059.91 1213.11 L1060.5 1213.11 L1061.09 1213.11 L1061.67 1213.11 L1062.26 1213.11 L1062.85 1213.11 L1063.43 1213.11 L1064.02 1213.11 L1064.6 1213.11 L1065.19 1213.11 L1065.78 1213.11 L1066.36 1213.11 L1066.95 1213.11 L1067.54 1213.11 L1068.12 1213.11 L1068.71 1213.11 L1069.3 1213.11 L1069.88 1213.11 L1070.47 1213.11 L1071.06 1213.11 L1071.64 1213.11 L1072.23 1213.11 L1072.81 1213.11 L1073.4 1213.11 L1073.99 1213.11 L1074.57 1213.11 L1075.16 1213.11 L1075.75 1213.11 L1076.33 1213.11 L1076.92 1213.11 L1077.51 1213.11 L1078.09 1213.11 L1078.68 1213.11 L1079.26 1213.11 L1079.85 1213.11 L1080.44 1213.11 L1081.02 1213.11 L1081.61 1213.11 L1082.2 1213.11 L1082.78 1213.11 L1083.37 1213.11 L1083.96 1213.11 L1084.54 1213.11 L1085.13 1213.11 L1085.72 1213.11 L1086.3 1213.11 L1086.89 1213.11 L1087.47 1213.11 L1088.06 1213.11 L1088.65 1213.11 L1089.23 1213.11 L1089.82 1213.11 L1090.41 1213.11 L1090.99 1213.11 L1091.58 1213.11 L1092.17 1213.11 L1092.75 1213.11 L1093.34 1213.11 L1093.93 1213.11 L1094.51 1213.11 L1095.1 1213.11 L1095.68 1213.11 L1096.27 1213.11 L1096.86 1213.11 L1097.44 1213.11 L1098.03 1213.11 L1098.62 1213.11 L1099.2 1213.11 L1099.79 1213.11 L1100.38 1213.11 L1100.96 1213.11 L1101.55 1213.11 L1102.14 1213.11 L1102.72 1213.11 L1103.31 1213.11 L1103.89 1213.11 L1104.48 1213.11 L1105.07 1213.11 L1105.65 1213.11 L1106.24 1213.11 L1106.83 1213.11 L1107.41 1213.11 L1108 1213.11 L1108.59 1213.11 L1109.17 1213.11 L1109.76 1213.11 L1110.34 1213.11 L1110.93 1213.11 L1111.52 1213.11 L1112.1 1213.11 L1112.69 1213.11 L1113.28 1213.11 L1113.86 1213.11 L1114.45 1213.11 L1115.04 1213.11 L1115.62 1213.11 L1116.21 1213.11 L1116.8 1213.11 L1117.38 1213.11 L1117.97 1213.11 L1118.55 1213.11 L1119.14 1213.11 L1119.73 1213.11 L1120.31 1213.11 L1120.9 1213.11 L1121.49 1213.11 L1122.07 1213.11 L1122.66 1213.11 L1123.25 1213.11 L1123.83 1213.11 L1124.42 1213.11 L1125.01 1213.11 L1125.59 1213.11 L1126.18 1213.11 L1126.76 1213.11 L1127.35 1213.11 L1127.94 1213.11 L1128.52 1213.11 L1129.11 1213.11 L1129.7 1213.11 L1130.28 1213.11 L1130.87 1213.11 L1131.46 1213.11 L1132.04 1213.11 L1132.63 1213.11 L1133.21 1213.11 L1133.8 1213.11 L1134.39 1213.11 L1134.97 1213.11 L1135.56 1213.11 L1136.15 1213.11 L1136.73 1213.11 L1137.32 1213.11 L1137.91 1213.11 L1138.49 1213.11 L1139.08 1213.11 L1139.67 1213.11 L1140.25 1213.11 L1140.84 1213.11 L1141.42 1213.11 L1142.01 1213.11 L1142.6 1213.11 L1143.18 1213.11 L1143.77 1213.11 L1144.36 1213.11 L1144.94 1213.11 L1145.53 1213.11 L1146.12 1213.11 L1146.7 1213.11 L1147.29 1213.11 L1147.88 1213.11 L1148.46 1213.11 L1149.05 1213.11 L1149.63 1213.11 L1150.22 1213.11 L1150.81 1213.11 L1151.39 1213.11 L1151.98 1213.11 L1152.57 1213.11 L1153.15 1213.11 L1153.74 1213.11 L1154.33 1213.11 L1154.91 1213.11 L1155.5 1213.11 L1156.09 1213.11 L1156.67 1213.11 L1157.26 1213.11 L1157.84 1213.11 L1158.43 1213.11 L1159.02 1213.11 L1159.6 1213.11 L1160.19 1213.11 L1160.78 1213.11 L1161.36 1213.11 L1161.95 1213.11 L1162.54 1213.11 L1163.12 1213.11 L1163.71 1213.11 L1164.29 1213.11 L1164.88 1213.11 L1165.47 1213.11 L1166.05 1213.11 L1166.64 1213.11 L1167.23 1213.11 L1167.81 1213.11 L1168.4 1213.11 L1168.99 1213.11 L1169.57 1213.11 L1170.16 1213.11 L1170.75 1213.11 L1171.33 1213.11 L1171.92 1213.11 L1172.5 1213.11 L1173.09 1213.11 L1173.68 1213.11 L1174.26 1213.11 L1174.85 1213.11 L1175.44 1213.11 L1176.02 1213.11 L1176.61 1213.11 L1177.2 1213.11 L1177.78 1213.11 L1178.37 1213.11 L1178.96 1213.11 L1179.54 1213.11 L1180.13 1213.11 L1180.71 1213.11 L1181.3 1213.11 L1181.89 1213.11 L1182.47 1213.11 L1183.06 1213.11 L1183.65 1213.11 L1184.23 1213.11 L1184.82 1213.11 L1185.41 1213.11 L1185.99 1213.11 L1186.58 1213.11 L1187.16 1213.11 L1187.75 1213.11 L1188.34 1213.11 L1188.92 1213.11 L1189.51 1213.11 L1190.1 1213.11 L1190.68 1213.11 L1191.27 1213.11 L1191.86 1213.11 L1192.44 1213.11 L1193.03 1213.11 L1193.62 1213.11 L1194.2 1213.11 L1194.79 1213.11 L1195.37 1213.11 L1195.96 1213.11 L1196.55 1213.11 L1197.13 1213.11 L1197.72 1213.11 L1198.31 1213.11 L1198.89 1213.11 L1199.48 1213.11 L1200.07 1213.11 L1200.65 1213.11 L1201.24 1213.11 L1201.83 1213.11 L1202.41 1213.11 L1203 1213.11 L1203.58 1213.11 L1204.17 1213.11 L1204.76 1213.11 L1205.34 1213.11 L1205.93 1213.11 L1206.52 1213.11 L1207.1 1213.11 L1207.69 1213.11 L1208.28 1213.11 L1208.86 1213.11 L1209.45 1213.11 L1210.03 1213.11 L1210.62 1213.11 L1211.21 1213.11 L1211.79 1213.11 L1212.38 1213.11 L1212.97 1213.11 L1213.55 1213.11 L1214.14 1213.11 L1214.73 1213.11 L1215.31 1213.11 L1215.9 1213.11 L1216.49 1213.11 L1217.07 1213.11 L1217.66 1213.11 L1218.24 1213.11 L1218.83 1213.11 L1219.42 1213.11 L1220 1213.11 L1220.59 1213.11 L1221.18 1213.11 L1221.76 1213.11 L1222.35 1213.11 L1222.94 1213.11 L1223.52 1213.11 L1224.11 1213.11 L1224.7 1213.11 L1225.28 1213.11 L1225.87 1213.11 L1226.45 1213.11 L1227.04 1213.11 L1227.63 1213.11 L1228.21 1213.11 L1228.8 1213.11 L1229.39 1213.11 L1229.97 1213.11 L1230.56 1213.11 L1231.15 1213.11 L1231.73 1213.11 L1232.32 1213.11 L1232.91 1213.11 L1233.49 1213.11 L1234.08 1213.11 L1234.66 1213.11 L1235.25 1213.11 L1235.84 1213.11 L1236.42 1213.11 L1237.01 1213.11 L1237.6 1213.11 L1238.18 1213.11 L1238.77 1213.11 L1239.36 1213.11 L1239.94 1213.11 L1240.53 1213.11 L1241.11 1213.11 L1241.7 1213.11 L1242.29 1213.11 L1242.87 1213.11 L1243.46 1213.11 L1244.05 1213.11 L1244.63 1213.11 L1245.22 1213.11 L1245.81 1213.11 L1246.39 1213.11 L1246.98 1213.11 L1247.57 1213.11 L1248.15 1213.11 L1248.74 1213.11 L1249.32 1213.11 L1249.91 1213.11 L1250.5 1213.11 L1251.08 1213.11 L1251.67 1213.11 L1252.26 1213.11 L1252.84 1213.11 L1253.43 1213.11 L1254.02 1213.11 L1254.6 1213.11 L1255.19 1213.11 L1255.78 1213.11 L1256.36 1213.11 L1256.95 1213.11 L1257.53 1213.11 L1258.12 1213.11 L1258.71 1213.11 L1259.29 1213.11 L1259.88 1213.11 L1260.47 1213.11 L1261.05 1213.11 L1261.64 1213.11 L1262.23 1213.11 L1262.81 1213.11 L1263.4 1213.11 L1263.98 1213.11 L1264.57 1213.11 L1265.16 1213.11 L1265.74 1213.11 L1266.33 1213.11 L1266.92 1213.11 L1267.5 1213.11 L1268.09 1213.11 L1268.68 1213.11 L1269.26 1213.11 L1269.85 1213.11 L1270.44 1213.11 L1271.02 1213.11 L1271.61 1213.11 L1272.19 1213.11 L1272.78 1213.11 L1273.37 1213.11 L1273.95 1213.11 L1274.54 1213.11 L1275.13 1213.11 L1275.71 1213.11 L1276.3 1213.11 L1276.89 1213.11 L1277.47 1213.11 L1278.06 1213.11 L1278.65 1213.11 L1279.23 1213.11 L1279.82 1213.11 L1280.4 1213.11 L1280.99 1213.11 L1281.58 1213.11 L1282.16 1213.11 L1282.75 1213.11 L1283.34 1213.11 L1283.92 1213.11 L1284.51 1213.11 L1285.1 1213.11 L1285.68 1213.11 L1286.27 1213.11 L1286.86 1213.11 L1287.44 1213.11 L1288.03 1213.11 L1288.61 1213.11 L1289.2 1213.11 L1289.79 1213.11 L1290.37 1213.11 L1290.96 1213.11 L1291.55 1213.11 L1292.13 1213.11 L1292.72 1213.11 L1293.31 1213.11 L1293.89 1213.11 L1294.48 1213.11 L1295.06 1213.11 L1295.65 1213.11 L1296.24 1213.11 L1296.82 1213.11 L1297.41 1213.11 L1298 1213.11 L1298.58 1213.11 L1299.17 1213.11 L1299.76 1213.11 L1300.34 1213.11 L1300.93 1213.11 L1301.52 1213.11 L1302.1 1213.11 L1302.69 1213.11 L1303.27 1213.11 L1303.86 1213.11 L1304.45 1213.11 L1305.03 1213.11 L1305.62 1213.11 L1306.21 1213.11 L1306.79 1213.11 L1307.38 1213.11 L1307.97 1213.11 L1308.55 1213.11 L1309.14 1213.11 L1309.73 1213.11 L1310.31 1213.11 L1310.9 1213.11 L1311.48 1213.11 L1312.07 1213.11 L1312.66 1213.11 L1313.24 1213.11 L1313.83 1213.11 L1314.42 1213.11 L1315 1213.11 L1315.59 1213.11 L1316.18 1213.11 L1316.76 1213.11 L1317.35 1213.11 L1317.93 1213.11 L1318.52 1213.11 L1319.11 1213.11 L1319.69 1213.11 L1320.28 1213.11 L1320.87 1213.11 L1321.45 1213.11 L1322.04 1213.11 L1322.63 1213.11 L1323.21 1213.11 L1323.8 1213.11 L1324.39 1213.11 L1324.97 1213.11 L1325.56 1213.11 L1326.14 1213.11 L1326.73 1213.11 L1327.32 1213.11 L1327.9 1213.11 L1328.49 1213.11 L1329.08 1213.11 L1329.66 1213.11 L1330.25 1213.11 L1330.84 1213.11 L1331.42 1213.11 L1332.01 1213.11 L1332.6 1213.11 L1333.18 1213.11 L1333.77 1213.11 L1334.35 1213.11 L1334.94 1213.11 L1335.53 1213.11 L1336.11 1213.11 L1336.7 1213.11 L1337.29 1213.11 L1337.87 1213.11 L1338.46 1213.11 L1339.05 1213.11 L1339.63 1213.11 L1340.22 1213.11 L1340.8 1213.11 L1341.39 1213.11 L1341.98 1213.11 L1342.56 1213.11 L1343.15 1213.11 L1343.74 1213.11 L1344.32 1213.11 L1344.91 1213.11 L1345.5 1213.11 L1346.08 1213.11 L1346.67 1213.11 L1347.26 1213.11 L1347.84 1213.11 L1348.43 1213.11 L1349.01 1213.11 L1349.6 1213.11 L1350.19 1213.11 L1350.77 1213.11 L1351.36 1213.11 L1351.95 1213.11 L1352.53 1213.11 L1353.12 1213.11 L1353.71 1213.11 L1354.29 1213.11 L1354.88 1213.11 L1355.47 1213.11 L1356.05 1213.11 L1356.64 1213.11 L1357.22 1213.11 L1357.81 1213.11 L1358.4 1213.11 L1358.98 1213.11 L1359.57 1213.11 L1360.16 1213.11 L1360.74 1213.11 L1361.33 1213.11 L1361.92 1213.11 L1362.5 1213.11 L1363.09 1213.11 L1363.68 1213.11 L1364.26 1213.11 L1364.85 1213.11 L1365.43 1213.11 L1366.02 1213.11 L1366.61 1213.11 L1367.19 1213.11 L1367.78 1213.11 L1368.37 1213.11 L1368.95 1213.11 L1369.54 1213.11 L1370.13 1213.11 L1370.71 1213.11 L1371.3 1213.11 L1371.88 1213.11 L1372.47 1213.11 L1373.06 1213.11 L1373.64 1213.11 L1374.23 1213.11 L1374.82 1213.11 L1375.4 1213.11 L1375.99 1213.11 L1376.58 1213.11 L1377.16 1213.11 L1377.75 1213.11 L1378.34 1213.11 L1378.92 1213.11 L1379.51 1213.11 L1380.09 1213.11 L1380.68 1213.11 L1381.27 1213.11 L1381.85 1213.11 L1382.44 1213.11 L1383.03 1213.11 L1383.61 1213.11 L1384.2 1213.11 L1384.79 1213.11 L1385.37 1213.11 L1385.96 1213.11 L1386.55 1213.11 L1387.13 1213.11 L1387.72 1213.11 L1388.3 1213.11 L1388.89 1213.11 L1389.48 1213.11 L1390.06 1213.11 L1390.65 1213.11 L1391.24 1213.11 L1391.82 1213.11 L1392.41 1213.11 L1393 1213.11 L1393.58 1213.11 L1394.17 1213.11 L1394.75 1213.11 L1395.34 1213.11 L1395.93 1213.11 L1396.51 1213.11 L1397.1 1213.11 L1397.69 1213.11 L1398.27 1213.11 L1398.86 1213.11 L1399.45 1213.11 L1400.03 1213.11 L1400.62 1213.11 L1401.21 1213.11 L1401.79 1213.11 L1402.38 1213.11 L1402.96 1213.11 L1403.55 1213.11 L1404.14 1213.11 L1404.72 1213.11 L1405.31 1213.11 L1405.9 1213.11 L1406.48 1213.11 L1407.07 1213.11 L1407.66 1213.11 L1408.24 1213.11 L1408.83 1213.11 L1409.42 1213.11 L1410 1213.11 L1410.59 1213.11 L1411.17 1213.11 L1411.76 1213.11 L1412.35 1213.11 L1412.93 1213.11 L1413.52 1213.11 L1414.11 1213.11 L1414.69 1213.11 L1415.28 1213.11 L1415.87 1213.11 L1416.45 1213.11 L1417.04 1213.11 L1417.63 1213.11 L1418.21 1213.11 L1418.8 1213.11 L1419.38 1213.11 L1419.97 1213.11 L1420.56 1213.11 L1421.14 1213.11 L1421.73 1213.11 L1422.32 1213.11 L1422.9 1213.11 L1423.49 1213.11 L1424.08 1213.11 L1424.66 1213.11 L1425.25 1213.11 L1425.83 1213.11 L1426.42 1213.11 L1427.01 1213.11 L1427.59 1213.11 L1428.18 1213.11 L1428.77 1213.11 L1429.35 1213.11 L1429.94 1213.11 L1430.53 1213.11 L1431.11 1213.11 L1431.7 1213.11 L1432.29 1213.11 L1432.87 1213.11 L1433.46 1213.11 L1434.04 1213.11 L1434.63 1213.11 L1435.22 1213.11 L1435.8 1213.11 L1436.39 1213.11 L1436.98 1213.11 L1437.56 1213.11 L1438.15 1213.11 L1438.74 1213.11 L1439.32 1213.11 L1439.91 1213.11 L1440.5 1213.11 L1441.08 1213.11 L1441.67 1213.11 L1442.25 1213.11 L1442.84 1213.11 L1443.43 1213.11 L1444.01 1213.11 L1444.6 1213.11 L1445.19 1213.11 L1445.77 1213.11 L1446.36 1213.11 L1446.95 1213.11 L1447.53 1213.11 L1448.12 1213.11 L1448.7 1213.11 L1449.29 1213.11 L1449.88 1213.11 L1450.46 1213.11 L1451.05 1213.11 L1451.64 1213.11 L1452.22 1213.11 L1452.81 1213.11 L1453.4 1213.11 L1453.98 1213.11 L1454.57 1213.11 L1455.16 1213.11 L1455.74 1213.11 L1456.33 1213.11 L1456.91 1213.11 L1457.5 1213.11 L1458.09 1213.11 L1458.67 1213.11 L1459.26 1213.11 L1459.85 1213.11 L1460.43 1213.11 L1461.02 1213.11 L1461.61 1213.11 L1462.19 1213.11 L1462.78 1213.11 L1463.37 1213.11 L1463.95 1213.11 L1464.54 1213.11 L1465.12 1213.11 L1465.71 1213.11 L1466.3 1213.11 L1466.88 1213.11 L1467.47 1213.11 L1468.06 1213.11 L1468.64 1213.11 L1469.23 1213.11 L1469.82 1213.11 L1470.4 1213.11 L1470.99 1213.11 L1471.57 1213.11 L1472.16 1213.11 L1472.75 1213.11 L1473.33 1213.11 L1473.92 1213.11 L1474.51 1213.11 L1475.09 1213.11 L1475.68 1213.11 L1476.27 1213.11 L1476.85 1213.11 L1477.44 1213.11 L1478.03 1213.11 L1478.61 1213.11 L1479.2 1213.11 L1479.78 1213.11 L1480.37 1213.11 L1480.96 1213.11 L1481.54 1213.11 L1482.13 1213.11 L1482.72 1213.11 L1483.3 1213.11 L1483.89 1213.11 L1484.48 1213.11 L1485.06 1213.11 L1485.65 1213.11 L1486.24 1213.11 L1486.82 1213.11 L1487.41 1213.11 L1487.99 1213.11 L1488.58 1213.11 L1489.17 1213.11 L1489.75 1213.11 L1490.34 1213.11 L1490.93 1213.11 L1491.51 1213.11 L1492.1 1213.11 L1492.69 1213.11 L1493.27 1213.11 L1493.86 1213.11 L1494.45 1213.11 L1495.03 1213.11 L1495.62 1213.11 L1496.2 1213.11 L1496.79 1213.11 L1497.38 1213.11 L1497.96 1213.11 L1498.55 1213.11 L1499.14 1213.11 L1499.72 1213.11 L1500.31 1213.11 L1500.9 1213.11 L1501.48 1213.11 L1502.07 1213.11 L1502.65 1213.11 L1503.24 1213.11 L1503.83 1213.11 L1504.41 1213.11 L1505 1213.11 L1505.59 1213.11 L1506.17 1213.11 L1506.76 1213.11 L1507.35 1213.11 L1507.93 1213.11 L1508.52 1213.11 L1509.11 1213.11 L1509.69 1213.11 L1510.28 1213.11 L1510.86 1213.11 L1511.45 1213.11 L1512.04 1213.11 L1512.62 1213.11 L1513.21 1213.11 L1513.8 1213.11 L1514.38 1213.11 L1514.97 1213.11 L1515.56 1213.11 L1516.14 1213.11 L1516.73 1213.11 L1517.32 1213.11 L1517.9 1213.11 L1518.49 1213.11 L1519.07 1213.11 L1519.66 1213.11 L1520.25 1213.11 L1520.83 1213.11 L1521.42 1213.11 L1522.01 1213.11 L1522.59 1213.11 L1523.18 1213.11 L1523.77 1213.11 L1524.35 1213.11 L1524.94 1213.11 L1525.52 1213.11 L1526.11 1213.11 L1526.7 1213.11 L1527.28 1213.11 L1527.87 1213.11 L1528.46 1213.11 L1529.04 1213.11 L1529.63 1213.11 L1530.22 1213.11 L1530.8 1213.11 L1531.39 1213.11 L1531.98 1213.11 L1532.56 1213.11 L1533.15 1213.11 L1533.73 1213.11 L1534.32 1213.11 L1534.91 1213.11 L1535.49 1213.11 L1536.08 1213.11 L1536.67 1213.11 L1537.25 1213.11 L1537.84 1213.11 L1538.43 1213.11 L1539.01 1213.11 L1539.6 1213.11 L1540.19 1213.11 L1540.77 1213.11 L1541.36 1213.11 L1541.94 1213.11 L1542.53 1213.11 L1543.12 1213.11 L1543.7 1213.11 L1544.29 1213.11 L1544.88 1213.11 L1545.46 1213.11 L1546.05 1213.11 L1546.64 1213.11 L1547.22 1213.11 L1547.81 1213.11 L1548.4 1213.11 L1548.98 1213.11 L1549.57 1213.11 L1550.15 1213.11 L1550.74 1213.11 L1551.33 1213.11 L1551.91 1213.11 L1552.5 1213.11 L1553.09 1213.11 L1553.67 1213.11 L1554.26 1213.11 L1554.85 1213.11 L1555.43 1213.11 L1556.02 1213.11 L1556.6 1213.11 L1557.19 1213.11 L1557.78 1213.11 L1558.36 1213.11 L1558.95 1213.11 L1559.54 1213.11 L1560.12 1213.11 L1560.71 1213.11 L1561.3 1213.11 L1561.88 1213.11 L1562.47 1213.11 L1563.06 1213.11 L1563.64 1213.11 L1564.23 1213.11 L1564.81 1213.11 L1565.4 1213.11 L1565.99 1213.11 L1566.57 1213.11 L1567.16 1213.11 L1567.75 1213.11 L1568.33 1213.11 L1568.92 1213.11 L1569.51 1213.11 L1570.09 1213.11 L1570.68 1213.11 L1571.27 1213.11 L1571.85 1213.11 L1572.44 1213.11 L1573.02 1213.11 L1573.61 1213.11 L1574.2 1213.11 L1574.78 1213.11 L1575.37 1213.11 L1575.96 1213.11 L1576.54 1213.11 L1577.13 1213.11 L1577.72 1213.11 L1578.3 1213.11 L1578.89 1213.11 L1579.47 1213.11 L1580.06 1213.11 L1580.65 1213.11 L1581.23 1213.11 L1581.82 1213.11 L1582.41 1213.11 L1582.99 1213.11 L1583.58 1213.11 L1584.17 1213.11 L1584.75 1213.11 L1585.34 1213.11 L1585.93 1213.11 L1586.51 1213.11 L1587.1 1213.11 L1587.68 1213.11 L1588.27 1213.11 L1588.86 1213.11 L1589.44 1213.11 L1590.03 1213.11 L1590.62 1213.11 L1591.2 1213.11 L1591.79 1213.11 L1592.38 1213.11 L1592.96 1213.11 L1593.55 1213.11 L1594.14 1213.11 L1594.72 1213.11 L1595.31 1213.11 L1595.89 1213.11 L1596.48 1213.11 L1597.07 1213.11 L1597.65 1213.11 L1598.24 1213.11 L1598.83 1213.11 L1599.41 1213.11 L1600 1213.11 L1600.59 1213.11 L1601.17 1213.11 L1601.76 1213.11 L1602.34 1213.11 L1602.93 1213.11 L1603.52 1213.11 L1604.1 1213.11 L1604.69 1213.11 L1605.28 1213.11 L1605.86 1213.11 L1606.45 1213.11 L1607.04 1213.11 L1607.62 1213.11 L1608.21 1213.11 L1608.8 1213.11 L1609.38 1213.11 L1609.97 1213.11 L1610.55 1213.11 L1611.14 1213.11 L1611.73 1213.11 L1612.31 1213.11 L1612.9 1213.11 L1613.49 1213.11 L1614.07 1213.11 L1614.66 1213.11 L1615.25 1213.11 L1615.83 1213.11 L1616.42 1213.11 L1617.01 1213.11 L1617.59 1213.11 L1618.18 1213.11 L1618.76 1213.11 L1619.35 1213.11 L1619.94 1213.11 L1620.52 1213.11 L1621.11 1213.11 L1621.7 1213.11 L1622.28 1213.11 L1622.87 1213.11 L1623.46 1213.11 L1624.04 1213.11 L1624.63 1213.11 L1625.22 1213.11 L1625.8 1213.11 L1626.39 1213.11 L1626.97 1213.11 L1627.56 1213.11 L1628.15 1213.11 L1628.73 1213.11 L1629.32 1213.11 L1629.91 1213.11 L1630.49 1213.11 L1631.08 1213.11 L1631.67 1213.11 L1632.25 1213.11 L1632.84 1213.11 L1633.42 1213.11 L1634.01 1213.11 L1634.6 1213.11 L1635.18 1213.11 L1635.77 1213.11 L1636.36 1213.11 L1636.94 1213.11 L1637.53 1213.11 L1638.12 1213.11 L1638.7 1213.11 L1639.29 1213.11 L1639.88 1213.11 L1640.46 1213.11 L1641.05 1213.11 L1641.63 1213.11 L1642.22 1213.11 L1642.81 1213.11 L1643.39 1213.11 L1643.98 1213.11 L1644.57 1213.11 L1645.15 1213.11 L1645.74 1213.11 L1646.33 1213.11 L1646.91 1213.11 L1647.5 1213.11 L1648.09 1213.11 L1648.67 1213.11 L1649.26 1213.11 L1649.84 1213.11 L1650.43 1213.11 L1651.02 1213.11 L1651.6 1213.11 L1652.19 1213.11 L1652.78 1213.11 L1653.36 1213.11 L1653.95 1213.11 L1654.54 1213.11 L1655.12 1213.11 L1655.71 1213.11 L1656.29 1213.11 L1656.88 1213.11 L1657.47 1213.11 L1658.05 1213.11 L1658.64 1213.11 L1659.23 1213.11 L1659.81 1213.11 L1660.4 1213.11 L1660.99 1213.11 L1661.57 1213.11 L1662.16 1213.11 L1662.75 1213.11 L1663.33 1213.11 L1663.92 1213.11 L1664.5 1213.11 L1665.09 1213.11 L1665.68 1213.11 L1666.26 1213.11 L1666.85 1213.11 L1667.44 1213.11 L1668.02 1213.11 L1668.61 1213.11 L1669.2 1213.11 L1669.78 1213.11 L1670.37 1213.11 L1670.96 1213.11 L1671.54 1213.11 L1672.13 1213.11 L1672.71 1213.11 L1673.3 1213.11 L1673.89 1213.11 L1674.47 1213.11 L1675.06 1213.11 L1675.65 1213.11 L1676.23 1213.11 L1676.82 1213.11 L1677.41 1213.11 L1677.99 1213.11 L1678.58 1213.11 L1679.17 1213.11 L1679.75 1213.11 L1680.34 1213.11 L1680.92 1213.11 L1681.51 1213.11 L1682.1 1213.11 L1682.68 1213.11 L1683.27 1213.11 L1683.86 1213.11 L1684.44 1213.11 L1685.03 1213.11 L1685.62 1213.11 L1686.2 1213.11 L1686.79 1213.11 L1687.37 1213.11 L1687.96 1213.11 L1688.55 1213.11 L1689.13 1213.11 L1689.72 1213.11 L1690.31 1213.11 L1690.89 1213.11 L1691.48 1213.11 L1692.07 1213.11 L1692.65 1213.11 L1693.24 1213.11 L1693.83 1213.11 L1694.41 1213.11 L1695 1213.11 L1695.58 1213.11 L1696.17 1213.11 L1696.76 1213.11 L1697.34 1213.11 L1697.93 1213.11 L1698.52 1213.11 L1699.1 1213.11 L1699.69 1213.11 L1700.28 1213.11 L1700.86 1213.11 L1701.45 1213.11 L1702.04 1213.11 L1702.62 1213.11 L1703.21 1213.11 L1703.79 1213.11 L1704.38 1213.11 L1704.97 1213.11 L1705.55 1213.11 L1706.14 1213.11 L1706.73 1213.11 L1707.31 1213.11 L1707.9 1213.11 L1708.49 1213.11 L1709.07 1213.11 L1709.66 1213.11 L1710.24 1213.11 L1710.83 1213.11 L1711.42 1213.11 L1712 1213.11 L1712.59 1213.11 L1713.18 1213.11 L1713.76 1213.11 L1714.35 1213.11 L1714.94 1213.11 L1715.52 1213.11 L1716.11 1213.11 L1716.7 1213.11 L1717.28 1213.11 L1717.87 1213.11 L1718.45 1213.11 L1719.04 1213.11 L1719.63 1213.11 L1720.21 1213.11 L1720.8 1213.11 L1721.39 1213.11 L1721.97 1213.11 L1722.56 1213.11 L1723.15 1213.11 L1723.73 1213.11 L1724.32 1213.11 L1724.91 1213.11 L1725.49 1213.11 L1726.08 1213.11 L1726.66 1213.11 L1727.25 1213.11 L1727.84 1213.11 L1728.42 1213.11 L1729.01 1213.11 L1729.6 1213.11 L1730.18 1213.11 L1730.77 1213.11 L1731.36 1213.11 L1731.94 1213.11 L1732.53 1213.11 L1733.11 1213.11 L1733.7 1213.11 L1734.29 1213.11 L1734.87 1213.11 L1735.46 1213.11 L1736.05 1213.11 L1736.63 1213.11 L1737.22 1213.11 L1737.81 1213.11 L1738.39 1213.11 L1738.98 1213.11 L1739.57 1213.11 L1740.15 1213.11 L1740.74 1213.11 L1741.32 1213.11 L1741.91 1213.11 L1742.5 1213.11 L1743.08 1213.11 L1743.67 1213.11 L1744.26 1213.11 L1744.84 1213.11 L1745.43 1213.11 L1746.02 1213.11 L1746.6 1213.11 L1747.19 1213.11 L1747.78 1213.11 L1748.36 1213.11 L1748.95 1213.11 L1749.53 1213.11 L1750.12 1213.11 L1750.71 1213.11 L1751.29 1213.11 L1751.88 1213.11 L1752.47 1213.11 L1753.05 1213.11 L1753.64 1213.11 L1754.23 1213.11 L1754.81 1213.11 L1755.4 1213.11 L1755.99 1213.11 L1756.57 1213.11 L1757.16 1213.11 L1757.74 1213.11 L1758.33 1213.11 L1758.92 1213.11 L1759.5 1213.11 L1760.09 1213.11 L1760.68 1213.11 L1761.26 1213.11 L1761.85 1213.11 L1762.44 1213.11 L1763.02 1213.11 L1763.61 1213.11 L1764.19 1213.11 L1764.78 1213.11 L1765.37 1213.11 L1765.95 1213.11 L1766.54 1213.11 L1767.13 1213.11 L1767.71 1213.11 L1768.3 1213.11 L1768.89 1213.11 L1769.47 1213.11 L1770.06 1213.11 L1770.65 1213.11 L1771.23 1213.11 L1771.82 1213.11 L1772.4 1213.11 L1772.99 1213.11 L1773.58 1213.11 L1774.16 1213.11 L1774.75 1213.11 L1775.34 1213.11 L1775.92 1213.11 L1776.51 1213.11 L1777.1 1213.11 L1777.68 1213.11 L1778.27 1213.11 L1778.86 1213.11 L1779.44 1213.11 L1780.03 1213.11 L1780.61 1213.11 L1781.2 1213.11 L1781.79 1213.11 L1782.37 1213.11 L1782.96 1213.11 L1783.55 1213.11 L1784.13 1213.11 L1784.72 1213.11 L1785.31 1213.11 L1785.89 1213.11 L1786.48 1213.11 L1787.06 1213.11 L1787.65 1213.11 L1788.24 1213.11 L1788.82 1213.11 L1789.41 1213.11 L1790 1213.11 L1790.58 1213.11 L1791.17 1213.11 L1791.76 1213.11 L1792.34 1213.11 L1792.93 1213.11 L1793.52 1213.11 L1794.1 1213.11 L1794.69 1213.11 L1795.27 1213.11 L1795.86 1213.11 L1796.45 1213.11 L1797.03 1213.11 L1797.62 1213.11 L1798.21 1213.11 L1798.79 1213.11 L1799.38 1213.11 L1799.97 1213.11 L1800.55 1213.11 L1801.14 1213.11 L1801.73 1213.11 L1802.31 1213.11 L1802.9 1213.11 L1803.48 1213.11 L1804.07 1213.11 L1804.66 1213.11 L1805.24 1213.11 L1805.83 1213.11 L1806.42 1213.11 L1807 1213.11 L1807.59 1213.11 L1808.18 1213.11 L1808.76 1213.11 L1809.35 1213.11 L1809.94 1213.11 L1810.52 1213.11 L1811.11 1213.11 L1811.69 1213.11 L1812.28 1213.11 L1812.87 1213.11 L1813.45 1213.11 L1814.04 1213.11 L1814.63 1213.11 L1815.21 1213.11 L1815.8 1213.11 L1816.39 1213.11 L1816.97 1213.11 L1817.56 1213.11 L1818.14 1213.11 L1818.73 1213.11 L1819.32 1213.11 L1819.9 1213.11 L1820.49 1213.11 L1821.08 1213.11 L1821.66 1213.11 L1822.25 1213.11 L1822.84 1213.11 L1823.42 1213.11 L1824.01 1213.11 L1824.6 1213.11 L1825.18 1213.11 L1825.77 1213.11 L1826.35 1213.11 L1826.94 1213.11 L1827.53 1213.11 L1828.11 1213.11 L1828.7 1213.11 L1829.29 1213.11 L1829.87 1213.11 L1830.46 1213.11 L1831.05 1213.11 L1831.63 1213.11 L1832.22 1213.11 L1832.81 1213.11 L1833.39 1213.11 L1833.98 1213.11 L1834.56 1213.11 L1835.15 1213.11 L1835.74 1213.11 L1836.32 1213.11 L1836.91 1213.11 L1837.5 1213.11 L1838.08 1213.11 L1838.67 1213.11 L1839.26 1213.11 L1839.84 1213.11 L1840.43 1213.11 L1841.01 1213.11 L1841.6 1213.11 L1842.19 1213.11 L1842.77 1213.11 L1843.36 1213.11 L1843.95 1213.11 L1844.53 1213.11 L1845.12 1213.11 L1845.71 1213.11 L1846.29 1213.11 L1846.88 1213.11 L1847.47 1213.11 L1848.05 1213.11 L1848.64 1213.11 L1849.22 1213.11 L1849.81 1213.11 L1850.4 1213.11 L1850.98 1213.11 L1851.57 1213.11 L1852.16 1213.11 L1852.74 1213.11 L1853.33 1213.11 L1853.92 1213.11 L1854.5 1213.11 L1855.09 1213.11 L1855.68 1213.11 L1856.26 1213.11 L1856.85 1213.11 L1857.43 1213.11 L1858.02 1213.11 L1858.61 1213.11 L1859.19 1213.11 L1859.78 1213.11 L1860.37 1213.11 L1860.95 1213.11 L1861.54 1213.11 L1862.13 1213.11 L1862.71 1213.11 L1863.3 1213.11 L1863.88 1213.11 L1864.47 1213.11 L1865.06 1213.11 L1865.64 1213.11 L1866.23 1213.11 L1866.82 1213.11 L1867.4 1213.11 L1867.99 1213.11 L1868.58 1213.11 L1869.16 1213.11 L1869.75 1213.11 L1870.34 1213.11 L1870.92 1213.11 L1871.51 1213.11 L1872.09 1213.11 L1872.68 1213.11 L1873.27 1213.11 L1873.85 1213.11 L1874.44 1213.11 L1875.03 1213.11 L1875.61 1213.11 L1876.2 1213.11 L1876.79 1213.11 L1877.37 1213.11 L1877.96 1213.11 L1878.55 1213.11 L1879.13 1213.11 L1879.72 1213.11 L1880.3 1213.11 L1880.89 1213.11 L1881.48 1213.11 L1882.06 1213.11 L1882.65 1213.11 L1883.24 1213.11 L1883.82 1213.11 L1884.41 1213.11 L1885 1213.11 L1885.58 1213.11 L1886.17 1213.11 L1886.76 1213.11 L1887.34 1213.11 L1887.93 1213.11 L1888.51 1213.11 L1889.1 1213.11 L1889.69 1213.11 L1890.27 1213.11 L1890.86 1213.11 L1891.45 1213.11 L1892.03 1213.11 L1892.62 1213.11 L1893.21 1213.11 L1893.79 1213.11 L1894.38 1213.11 L1894.96 1213.11 L1895.55 1213.11 L1896.14 1213.11 L1896.72 1213.11 L1897.31 1213.11 L1897.9 1213.11 L1898.48 1213.11 L1899.07 1213.11 L1899.66 1213.11 L1900.24 1213.11 L1900.83 1213.11 L1901.42 1213.11 L1902 1213.11 L1902.59 1213.11 L1903.17 1213.11 L1903.76 1213.11 L1904.35 1213.11 L1904.93 1213.11 L1905.52 1213.11 L1906.11 1213.11 L1906.69 1213.11 L1907.28 1213.11 L1907.87 1213.11 L1908.45 1213.11 L1909.04 1213.11 L1909.63 1213.11 L1910.21 1213.11 L1910.8 1213.11 L1911.38 1213.11 L1911.97 1213.11 L1912.56 1213.11 L1913.14 1213.11 L1913.73 1213.11 L1914.32 1213.11 L1914.9 1213.11 L1915.49 1213.11 L1916.08 1213.11 L1916.66 1213.11 L1917.25 1213.11 L1917.83 1213.11 L1918.42 1213.11 L1919.01 1213.11 L1919.59 1213.11 L1920.18 1213.11 L1920.77 1213.11 L1921.35 1213.11 L1921.94 1213.11 L1922.53 1213.11 L1923.11 1213.11 L1923.7 1213.11 L1924.29 1213.11 L1924.87 1213.11 L1925.46 1213.11 L1926.04 1213.11 L1926.63 1213.11 L1927.22 1213.11 L1927.8 1213.11 L1928.39 1213.11 L1928.98 1213.11 L1929.56 1213.11 L1930.15 1213.11 L1930.74 1213.11 L1931.32 1213.11 L1931.91 1213.11 L1932.5 1213.11 L1933.08 1213.11 L1933.67 1213.11 L1934.25 1213.11 L1934.84 1213.11 L1935.43 1213.11 L1936.01 1213.11 L1936.6 1213.11 L1937.19 1213.11 L1937.77 1213.11 L1938.36 1213.11 L1938.95 1213.11 L1939.53 1213.11 L1940.12 1213.11 L1940.71 1213.11 L1941.29 1213.11 L1941.88 1213.11 L1942.46 1213.11 L1943.05 1213.11 L1943.64 1213.11 L1944.22 1213.11 L1944.81 1213.11 L1945.4 1213.11 L1945.98 1213.11 L1946.57 1213.11 L1947.16 1213.11 L1947.74 1213.11 L1948.33 1213.11 L1948.91 1213.11 L1949.5 1213.11 L1950.09 1213.11 L1950.67 1213.11 L1951.26 1213.11 L1951.85 1213.11 L1952.43 1213.11 L1953.02 1213.11 L1953.61 1213.11 L1954.19 1213.11 L1954.78 1213.11 L1955.37 1213.11 L1955.95 1213.11 L1956.54 1213.11 L1957.12 1213.11 L1957.71 1213.11 L1958.3 1213.11 L1958.88 1213.11 L1959.47 1213.11 L1960.06 1213.11 L1960.64 1213.11 L1961.23 1213.11 L1961.82 1213.11 L1962.4 1213.11 L1962.99 1213.11 L1963.58 1213.11 L1964.16 1213.11 L1964.75 1213.11 L1965.33 1213.11 L1965.92 1213.11 L1966.51 1213.11 L1967.09 1213.11 L1967.68 1213.11 L1968.27 1213.11 L1968.85 1213.11 L1969.44 1213.11 L1970.03 1213.11 L1970.61 1213.11 L1971.2 1213.11 L1971.78 1213.11 L1972.37 1213.11 L1972.96 1213.11 L1973.54 1213.11 L1974.13 1213.11 L1974.72 1213.11 L1975.3 1213.11 L1975.89 1213.11 L1976.48 1213.11 L1977.06 1213.11 L1977.65 1213.11 L1978.24 1213.11 L1978.82 1213.11 L1979.41 1213.11 L1979.99 1213.11 L1980.58 1213.11 L1981.17 1213.11 L1981.75 1213.11 L1982.34 1213.11 L1982.93 1213.11 L1983.51 1213.11 L1984.1 1213.11 L1984.69 1213.11 L1985.27 1213.11 L1985.86 1213.11 L1986.45 1213.11 L1987.03 1213.11 L1987.62 1213.11 L1988.2 1213.11 L1988.79 1213.11 L1989.38 1213.11 L1989.96 1213.11 L1990.55 1213.11 L1991.14 1213.11 L1991.72 1213.11 L1992.31 1213.11 L1992.9 1213.11 L1993.48 1213.11 L1994.07 1213.11 L1994.65 1213.11 L1995.24 1213.11 L1995.83 1213.11 L1996.41 1213.11 L1997 1213.11 L1997.59 1213.11 L1998.17 1213.11 L1998.76 1213.11 L1999.35 1213.11 L1999.93 1213.11 L2000.52 1213.11 L2001.11 1213.11 L2001.69 1213.11 L2002.28 1213.11 L2002.86 1213.11 L2003.45 1213.11 L2004.04 1213.11 L2004.62 1213.11 L2005.21 1213.11 L2005.8 1213.11 L2006.38 1213.11 L2006.97 1213.11 L2007.56 1213.11 L2008.14 1213.11 L2008.73 1213.11 L2009.32 1213.11 L2009.9 1213.11 L2010.49 1213.11 L2011.07 1213.11 L2011.66 1213.11 L2012.25 1213.11 L2012.83 1213.11 L2013.42 1213.11 L2014.01 1213.11 L2014.59 1213.11 L2015.18 1213.11 L2015.77 1213.11 L2016.35 1213.11 L2016.94 1213.11 L2017.53 1213.11 L2018.11 1213.11 L2018.7 1213.11 L2019.28 1213.11 L2019.87 1213.11 L2020.46 1213.11 L2021.04 1213.11 L2021.63 1213.11 L2022.22 1213.11 L2022.8 1213.11 L2023.39 1213.11 L2023.98 1213.11 L2024.56 1213.11 L2025.15 1213.11 L2025.73 1213.11 L2026.32 1213.11 L2026.91 1213.11 L2027.49 1213.11 L2028.08 1213.11 L2028.67 1213.11 L2029.25 1213.11 L2029.84 1213.11 L2030.43 1213.11 L2031.01 1213.11 L2031.6 1213.11 L2032.19 1213.11 L2032.77 1213.11 L2033.36 1213.11 L2033.94 1213.11 L2034.53 1213.11 L2035.12 1213.11 L2035.7 1213.11 L2036.29 1213.11 L2036.88 1213.11 L2037.46 1213.11 L2038.05 1213.11 L2038.64 1213.11 L2039.22 1213.11 L2039.81 1213.11 L2040.4 1213.11 L2040.98 1213.11 L2041.57 1213.11 L2042.15 1213.11 L2042.74 1213.11 L2043.33 1213.11 L2043.91 1213.11 L2044.5 1213.11 L2045.09 1213.11 L2045.67 1213.11 L2046.26 1213.11 L2046.85 1213.11 L2047.43 1213.11 L2048.02 1213.11 L2048.6 1213.11 L2049.19 1213.11 L2049.78 1213.11 L2050.36 1213.11 L2050.95 1213.11 L2051.54 1213.11 L2052.12 1213.11 L2052.71 1213.11 L2053.3 1213.11 L2053.88 1213.11 L2054.47 1213.11 L2055.06 1213.11 L2055.64 1213.11 L2056.23 1213.11 L2056.81 1213.11 L2057.4 1213.11 L2057.99 1213.11 L2058.57 1213.11 L2059.16 1213.11 L2059.75 1213.11 L2060.33 1213.11 L2060.92 1213.11 L2061.51 1213.11 L2062.09 1213.11 L2062.68 1213.11 L2063.27 1213.11 L2063.85 1213.11 L2064.44 1213.11 L2065.02 1213.11 L2065.61 1213.11 L2066.2 1213.11 L2066.78 1213.11 L2067.37 1213.11 L2067.96 1213.11 L2068.54 1213.11 L2069.13 1213.11 L2069.72 1213.11 L2070.3 1213.11 L2070.89 1213.11 L2071.48 1213.11 L2072.06 1213.11 L2072.65 1213.11 L2073.23 1213.11 L2073.82 1213.11 L2074.41 1213.11 L2074.99 1213.11 L2075.58 1213.11 L2076.17 1213.11 L2076.75 1213.11 L2077.34 1213.11 L2077.93 1213.11 L2078.51 1213.11 L2079.1 1213.11 L2079.68 1213.11 L2080.27 1213.11 L2080.86 1213.11 L2081.44 1213.11 L2082.03 1213.11 L2082.62 1213.11 L2083.2 1213.11 L2083.79 1213.11 L2084.38 1213.11 L2084.96 1213.11 L2085.55 1213.11 L2086.14 1213.11 L2086.72 1213.11 L2087.31 1213.11 L2087.89 1213.11 L2088.48 1213.11 L2089.07 1213.11 L2089.65 1213.11 L2090.24 1213.11 L2090.83 1213.11 L2091.41 1213.11 L2092 1213.11 L2092.59 1213.11 L2093.17 1213.11 L2093.76 1213.11 L2094.35 1213.11 L2094.93 1213.11 L2095.52 1213.11 L2096.1 1213.11 L2096.69 1213.11 L2097.28 1213.11 L2097.86 1213.11 L2098.45 1213.11 L2099.04 1213.11 L2099.62 1213.11 L2100.21 1213.11 L2100.8 1213.11 L2101.38 1213.11 L2101.97 1213.11 L2102.55 1213.11 L2103.14 1213.11 L2103.73 1213.11 L2104.31 1213.11 L2104.9 1213.11 L2105.49 1213.11 L2106.07 1213.11 L2106.66 1213.11 L2107.25 1213.11 L2107.83 1213.11 L2108.42 1213.11 L2109.01 1213.11 L2109.59 1213.11 L2110.18 1213.11 L2110.76 1213.11 L2111.35 1213.11 L2111.94 1213.11 L2112.52 1213.11 L2113.11 1213.11 L2113.7 1213.11 L2114.28 1213.11 L2114.87 1213.11 L2115.46 1213.11 L2116.04 1213.11 L2116.63 1213.11 L2117.22 1213.11 L2117.8 1213.11 L2118.39 1213.11 L2118.97 1213.11 L2119.56 1213.11 L2120.15 1213.11 L2120.73 1213.11 L2121.32 1213.11 L2121.91 1213.11 L2122.49 1213.11 L2123.08 1213.11 L2123.67 1213.11 L2124.25 1213.11 L2124.84 1213.11 L2125.42 1213.11 L2126.01 1213.11 L2126.6 1213.11 L2127.18 1213.11 L2127.77 1213.11 L2128.36 1213.11 L2128.94 1213.11 L2129.53 1213.11 L2130.12 1213.11 L2130.7 1213.11 L2131.29 1213.11 L2131.88 1213.11 L2132.46 1213.11 L2133.05 1213.11 L2133.63 1213.11 L2134.22 1213.11 L2134.81 1213.11 L2135.39 1213.11 L2135.98 1213.11 L2136.57 1213.11 L2137.15 1213.11 L2137.74 1213.11 L2138.33 1213.11 L2138.91 1213.11 L2139.5 1213.11 L2140.09 1213.11 L2140.67 1213.11 L2141.26 1213.11 L2141.84 1213.11 L2142.43 1213.11 L2143.02 1213.11 L2143.6 1213.11 L2144.19 1213.11 L2144.78 1213.11 L2145.36 1213.11 L2145.95 1213.11 L2146.54 1213.11 L2147.12 1213.11 L2147.71 1213.11 L2148.3 1213.11 L2148.88 1213.11 L2149.47 1213.11 L2150.05 1213.11 L2150.64 1213.11 L2151.23 1213.11 L2151.81 1213.11 L2152.4 1213.11 L2152.99 1213.11 L2153.57 1213.11 L2154.16 1213.11 L2154.75 1213.11 L2155.33 1213.11 L2155.92 1213.11 L2156.5 1213.11 L2157.09 1213.11 L2157.68 1213.11 L2158.26 1213.11 L2158.26 1212.96 L2157.68 1212.96 L2157.09 1212.96 L2156.5 1212.96 L2155.92 1212.96 L2155.33 1212.96 L2154.75 1212.96 L2154.16 1212.96 L2153.57 1212.96 L2152.99 1212.96 L2152.4 1212.96 L2151.81 1212.96 L2151.23 1212.96 L2150.64 1212.96 L2150.05 1212.96 L2149.47 1212.96 L2148.88 1212.96 L2148.3 1212.96 L2147.71 1212.96 L2147.12 1212.96 L2146.54 1212.96 L2145.95 1212.96 L2145.36 1212.96 L2144.78 1212.96 L2144.19 1212.96 L2143.6 1212.96 L2143.02 1212.96 L2142.43 1212.96 L2141.84 1212.96 L2141.26 1212.96 L2140.67 1212.96 L2140.09 1212.96 L2139.5 1212.96 L2138.91 1212.96 L2138.33 1212.96 L2137.74 1212.96 L2137.15 1212.96 L2136.57 1212.96 L2135.98 1212.96 L2135.39 1212.96 L2134.81 1212.96 L2134.22 1212.96 L2133.63 1212.96 L2133.05 1212.96 L2132.46 1212.96 L2131.88 1212.96 L2131.29 1212.96 L2130.7 1212.96 L2130.12 1212.96 L2129.53 1212.96 L2128.94 1212.96 L2128.36 1212.96 L2127.77 1212.96 L2127.18 1212.96 L2126.6 1212.96 L2126.01 1212.96 L2125.42 1212.96 L2124.84 1212.96 L2124.25 1212.96 L2123.67 1212.96 L2123.08 1212.96 L2122.49 1212.96 L2121.91 1212.96 L2121.32 1212.96 L2120.73 1212.96 L2120.15 1212.96 L2119.56 1212.96 L2118.97 1212.96 L2118.39 1212.96 L2117.8 1212.96 L2117.22 1212.96 L2116.63 1212.96 L2116.04 1212.96 L2115.46 1212.96 L2114.87 1212.96 L2114.28 1212.96 L2113.7 1212.96 L2113.11 1212.96 L2112.52 1212.96 L2111.94 1212.96 L2111.35 1212.96 L2110.76 1212.96 L2110.18 1212.96 L2109.59 1212.96 L2109.01 1212.96 L2108.42 1212.96 L2107.83 1212.96 L2107.25 1212.96 L2106.66 1212.96 L2106.07 1212.96 L2105.49 1212.96 L2104.9 1212.96 L2104.31 1212.96 L2103.73 1212.96 L2103.14 1212.96 L2102.55 1212.96 L2101.97 1212.96 L2101.38 1212.96 L2100.8 1212.96 L2100.21 1212.96 L2099.62 1212.96 L2099.04 1212.96 L2098.45 1212.96 L2097.86 1212.96 L2097.28 1212.96 L2096.69 1212.96 L2096.1 1212.96 L2095.52 1212.96 L2094.93 1212.96 L2094.35 1212.96 L2093.76 1212.96 L2093.17 1212.96 L2092.59 1212.96 L2092 1212.96 L2091.41 1212.96 L2090.83 1212.96 L2090.24 1212.96 L2089.65 1212.96 L2089.07 1212.96 L2088.48 1212.96 L2087.89 1212.96 L2087.31 1212.96 L2086.72 1212.96 L2086.14 1212.96 L2085.55 1212.96 L2084.96 1212.96 L2084.38 1212.96 L2083.79 1212.96 L2083.2 1212.96 L2082.62 1212.96 L2082.03 1212.96 L2081.44 1212.96 L2080.86 1212.96 L2080.27 1212.96 L2079.68 1212.96 L2079.1 1212.96 L2078.51 1212.96 L2077.93 1212.96 L2077.34 1212.96 L2076.75 1212.96 L2076.17 1212.96 L2075.58 1212.96 L2074.99 1212.96 L2074.41 1212.96 L2073.82 1212.96 L2073.23 1212.96 L2072.65 1212.96 L2072.06 1212.96 L2071.48 1212.96 L2070.89 1212.96 L2070.3 1212.96 L2069.72 1212.96 L2069.13 1212.96 L2068.54 1212.96 L2067.96 1212.96 L2067.37 1212.96 L2066.78 1212.96 L2066.2 1212.96 L2065.61 1212.96 L2065.02 1212.96 L2064.44 1212.96 L2063.85 1212.96 L2063.27 1212.96 L2062.68 1212.96 L2062.09 1212.96 L2061.51 1212.96 L2060.92 1212.96 L2060.33 1212.96 L2059.75 1212.96 L2059.16 1212.96 L2058.57 1212.96 L2057.99 1212.96 L2057.4 1212.96 L2056.81 1212.96 L2056.23 1212.96 L2055.64 1212.96 L2055.06 1212.96 L2054.47 1212.96 L2053.88 1212.96 L2053.3 1212.96 L2052.71 1212.96 L2052.12 1212.96 L2051.54 1212.96 L2050.95 1212.96 L2050.36 1212.96 L2049.78 1212.96 L2049.19 1212.96 L2048.6 1212.96 L2048.02 1212.96 L2047.43 1212.96 L2046.85 1212.96 L2046.26 1212.96 L2045.67 1212.96 L2045.09 1212.96 L2044.5 1212.96 L2043.91 1212.96 L2043.33 1212.96 L2042.74 1212.96 L2042.15 1212.96 L2041.57 1212.96 L2040.98 1212.96 L2040.4 1212.96 L2039.81 1212.96 L2039.22 1212.96 L2038.64 1212.96 L2038.05 1212.96 L2037.46 1212.96 L2036.88 1212.96 L2036.29 1212.96 L2035.7 1212.96 L2035.12 1212.96 L2034.53 1212.96 L2033.94 1212.96 L2033.36 1212.96 L2032.77 1212.96 L2032.19 1212.96 L2031.6 1212.96 L2031.01 1212.96 L2030.43 1212.96 L2029.84 1212.96 L2029.25 1212.96 L2028.67 1212.96 L2028.08 1212.96 L2027.49 1212.96 L2026.91 1212.96 L2026.32 1212.96 L2025.73 1212.96 L2025.15 1212.96 L2024.56 1212.96 L2023.98 1212.96 L2023.39 1212.96 L2022.8 1212.96 L2022.22 1212.96 L2021.63 1212.96 L2021.04 1212.96 L2020.46 1212.96 L2019.87 1212.96 L2019.28 1212.96 L2018.7 1212.96 L2018.11 1212.96 L2017.53 1212.96 L2016.94 1212.96 L2016.35 1212.96 L2015.77 1212.96 L2015.18 1212.96 L2014.59 1212.96 L2014.01 1212.96 L2013.42 1212.96 L2012.83 1212.96 L2012.25 1212.96 L2011.66 1212.96 L2011.07 1212.96 L2010.49 1212.96 L2009.9 1212.96 L2009.32 1212.96 L2008.73 1212.96 L2008.14 1212.96 L2007.56 1212.96 L2006.97 1212.96 L2006.38 1212.96 L2005.8 1212.96 L2005.21 1212.96 L2004.62 1212.96 L2004.04 1212.96 L2003.45 1212.96 L2002.86 1212.96 L2002.28 1212.96 L2001.69 1212.96 L2001.11 1212.96 L2000.52 1212.96 L1999.93 1212.96 L1999.35 1212.96 L1998.76 1212.96 L1998.17 1212.96 L1997.59 1212.96 L1997 1212.96 L1996.41 1212.96 L1995.83 1212.96 L1995.24 1212.96 L1994.65 1212.96 L1994.07 1212.96 L1993.48 1212.96 L1992.9 1212.96 L1992.31 1212.96 L1991.72 1212.96 L1991.14 1212.96 L1990.55 1212.96 L1989.96 1212.96 L1989.38 1212.96 L1988.79 1212.96 L1988.2 1212.96 L1987.62 1212.96 L1987.03 1212.96 L1986.45 1212.96 L1985.86 1212.96 L1985.27 1212.96 L1984.69 1212.96 L1984.1 1212.96 L1983.51 1212.96 L1982.93 1212.96 L1982.34 1212.96 L1981.75 1212.96 L1981.17 1212.96 L1980.58 1212.96 L1979.99 1212.96 L1979.41 1212.96 L1978.82 1212.96 L1978.24 1212.96 L1977.65 1212.96 L1977.06 1212.96 L1976.48 1212.96 L1975.89 1212.96 L1975.3 1212.96 L1974.72 1212.96 L1974.13 1212.96 L1973.54 1212.96 L1972.96 1212.96 L1972.37 1212.96 L1971.78 1212.96 L1971.2 1212.96 L1970.61 1212.96 L1970.03 1212.96 L1969.44 1212.96 L1968.85 1212.96 L1968.27 1212.96 L1967.68 1212.96 L1967.09 1212.96 L1966.51 1212.96 L1965.92 1212.96 L1965.33 1212.96 L1964.75 1212.96 L1964.16 1212.96 L1963.58 1212.96 L1962.99 1212.96 L1962.4 1212.96 L1961.82 1212.96 L1961.23 1212.96 L1960.64 1212.96 L1960.06 1212.96 L1959.47 1212.96 L1958.88 1212.96 L1958.3 1212.96 L1957.71 1212.96 L1957.12 1212.96 L1956.54 1212.96 L1955.95 1212.96 L1955.37 1212.96 L1954.78 1212.96 L1954.19 1212.96 L1953.61 1212.96 L1953.02 1212.96 L1952.43 1212.96 L1951.85 1212.96 L1951.26 1212.96 L1950.67 1212.96 L1950.09 1212.96 L1949.5 1212.96 L1948.91 1212.96 L1948.33 1212.96 L1947.74 1212.96 L1947.16 1212.96 L1946.57 1212.96 L1945.98 1212.96 L1945.4 1212.96 L1944.81 1212.96 L1944.22 1212.96 L1943.64 1212.96 L1943.05 1212.96 L1942.46 1212.96 L1941.88 1212.96 L1941.29 1212.96 L1940.71 1212.96 L1940.12 1212.96 L1939.53 1212.96 L1938.95 1212.96 L1938.36 1212.96 L1937.77 1212.96 L1937.19 1212.96 L1936.6 1212.96 L1936.01 1212.96 L1935.43 1212.96 L1934.84 1212.96 L1934.25 1212.96 L1933.67 1212.96 L1933.08 1212.96 L1932.5 1212.96 L1931.91 1212.96 L1931.32 1212.96 L1930.74 1212.96 L1930.15 1212.96 L1929.56 1212.96 L1928.98 1212.96 L1928.39 1212.96 L1927.8 1212.96 L1927.22 1212.96 L1926.63 1212.96 L1926.04 1212.96 L1925.46 1212.96 L1924.87 1212.96 L1924.29 1212.96 L1923.7 1212.96 L1923.11 1212.96 L1922.53 1212.96 L1921.94 1212.96 L1921.35 1212.96 L1920.77 1212.96 L1920.18 1212.96 L1919.59 1212.96 L1919.01 1212.96 L1918.42 1212.96 L1917.83 1212.96 L1917.25 1212.96 L1916.66 1212.96 L1916.08 1212.96 L1915.49 1212.96 L1914.9 1212.96 L1914.32 1212.96 L1913.73 1212.96 L1913.14 1212.96 L1912.56 1212.96 L1911.97 1212.96 L1911.38 1212.96 L1910.8 1212.96 L1910.21 1212.96 L1909.63 1212.96 L1909.04 1212.96 L1908.45 1212.96 L1907.87 1212.96 L1907.28 1212.96 L1906.69 1212.96 L1906.11 1212.96 L1905.52 1212.96 L1904.93 1212.96 L1904.35 1212.96 L1903.76 1212.96 L1903.17 1212.96 L1902.59 1212.96 L1902 1212.96 L1901.42 1212.96 L1900.83 1212.96 L1900.24 1212.96 L1899.66 1212.96 L1899.07 1212.96 L1898.48 1212.96 L1897.9 1212.96 L1897.31 1212.96 L1896.72 1212.96 L1896.14 1212.96 L1895.55 1212.96 L1894.96 1212.96 L1894.38 1212.96 L1893.79 1212.96 L1893.21 1212.96 L1892.62 1212.96 L1892.03 1212.96 L1891.45 1212.96 L1890.86 1212.96 L1890.27 1212.96 L1889.69 1212.96 L1889.1 1212.96 L1888.51 1212.96 L1887.93 1212.96 L1887.34 1212.96 L1886.76 1212.96 L1886.17 1212.96 L1885.58 1212.96 L1885 1212.96 L1884.41 1212.96 L1883.82 1212.96 L1883.24 1212.96 L1882.65 1212.96 L1882.06 1212.96 L1881.48 1212.96 L1880.89 1212.96 L1880.3 1212.96 L1879.72 1212.96 L1879.13 1212.96 L1878.55 1212.96 L1877.96 1212.96 L1877.37 1212.96 L1876.79 1212.96 L1876.2 1212.96 L1875.61 1212.96 L1875.03 1212.96 L1874.44 1212.96 L1873.85 1212.96 L1873.27 1212.96 L1872.68 1212.96 L1872.09 1212.96 L1871.51 1212.96 L1870.92 1212.96 L1870.34 1212.96 L1869.75 1212.96 L1869.16 1212.96 L1868.58 1212.96 L1867.99 1212.96 L1867.4 1212.96 L1866.82 1212.96 L1866.23 1212.96 L1865.64 1212.96 L1865.06 1212.96 L1864.47 1212.96 L1863.88 1212.96 L1863.3 1212.96 L1862.71 1212.96 L1862.13 1212.96 L1861.54 1212.96 L1860.95 1212.96 L1860.37 1212.96 L1859.78 1212.96 L1859.19 1212.96 L1858.61 1212.96 L1858.02 1212.96 L1857.43 1212.96 L1856.85 1212.96 L1856.26 1212.96 L1855.68 1212.96 L1855.09 1212.96 L1854.5 1212.96 L1853.92 1212.96 L1853.33 1212.96 L1852.74 1212.96 L1852.16 1212.96 L1851.57 1212.96 L1850.98 1212.96 L1850.4 1212.96 L1849.81 1212.96 L1849.22 1212.96 L1848.64 1212.96 L1848.05 1212.96 L1847.47 1212.96 L1846.88 1212.96 L1846.29 1212.96 L1845.71 1212.96 L1845.12 1212.96 L1844.53 1212.96 L1843.95 1212.96 L1843.36 1212.96 L1842.77 1212.96 L1842.19 1212.96 L1841.6 1212.96 L1841.01 1212.96 L1840.43 1212.96 L1839.84 1212.96 L1839.26 1212.96 L1838.67 1212.96 L1838.08 1212.96 L1837.5 1212.96 L1836.91 1212.96 L1836.32 1212.96 L1835.74 1212.96 L1835.15 1212.96 L1834.56 1212.96 L1833.98 1212.96 L1833.39 1212.96 L1832.81 1212.96 L1832.22 1212.96 L1831.63 1212.96 L1831.05 1212.96 L1830.46 1212.96 L1829.87 1212.96 L1829.29 1212.96 L1828.7 1212.96 L1828.11 1212.96 L1827.53 1212.96 L1826.94 1212.96 L1826.35 1212.96 L1825.77 1212.96 L1825.18 1212.96 L1824.6 1212.96 L1824.01 1212.96 L1823.42 1212.96 L1822.84 1212.96 L1822.25 1212.96 L1821.66 1212.96 L1821.08 1212.96 L1820.49 1212.96 L1819.9 1212.96 L1819.32 1212.96 L1818.73 1212.96 L1818.14 1212.96 L1817.56 1212.96 L1816.97 1212.96 L1816.39 1212.96 L1815.8 1212.96 L1815.21 1212.96 L1814.63 1212.96 L1814.04 1212.96 L1813.45 1212.96 L1812.87 1212.96 L1812.28 1212.96 L1811.69 1212.96 L1811.11 1212.96 L1810.52 1212.96 L1809.94 1212.96 L1809.35 1212.96 L1808.76 1212.96 L1808.18 1212.96 L1807.59 1212.96 L1807 1212.96 L1806.42 1212.96 L1805.83 1212.96 L1805.24 1212.96 L1804.66 1212.96 L1804.07 1212.96 L1803.48 1212.96 L1802.9 1212.96 L1802.31 1212.96 L1801.73 1212.96 L1801.14 1212.96 L1800.55 1212.96 L1799.97 1212.96 L1799.38 1212.96 L1798.79 1212.96 L1798.21 1212.96 L1797.62 1212.96 L1797.03 1212.96 L1796.45 1212.96 L1795.86 1212.96 L1795.27 1212.96 L1794.69 1212.96 L1794.1 1212.96 L1793.52 1212.96 L1792.93 1212.96 L1792.34 1212.96 L1791.76 1212.96 L1791.17 1212.96 L1790.58 1212.96 L1790 1212.96 L1789.41 1212.96 L1788.82 1212.96 L1788.24 1212.96 L1787.65 1212.96 L1787.06 1212.96 L1786.48 1212.96 L1785.89 1212.96 L1785.31 1212.96 L1784.72 1212.96 L1784.13 1212.96 L1783.55 1212.96 L1782.96 1212.96 L1782.37 1212.96 L1781.79 1212.96 L1781.2 1212.96 L1780.61 1212.96 L1780.03 1212.96 L1779.44 1212.96 L1778.86 1212.96 L1778.27 1212.96 L1777.68 1212.96 L1777.1 1212.96 L1776.51 1212.96 L1775.92 1212.96 L1775.34 1212.96 L1774.75 1212.96 L1774.16 1212.96 L1773.58 1212.96 L1772.99 1212.96 L1772.4 1212.96 L1771.82 1212.96 L1771.23 1212.96 L1770.65 1212.96 L1770.06 1212.96 L1769.47 1212.96 L1768.89 1212.96 L1768.3 1212.96 L1767.71 1212.96 L1767.13 1212.96 L1766.54 1212.96 L1765.95 1212.96 L1765.37 1212.96 L1764.78 1212.96 L1764.19 1212.96 L1763.61 1212.96 L1763.02 1212.96 L1762.44 1212.96 L1761.85 1212.96 L1761.26 1212.96 L1760.68 1212.96 L1760.09 1212.96 L1759.5 1212.96 L1758.92 1212.96 L1758.33 1212.96 L1757.74 1212.96 L1757.16 1212.96 L1756.57 1212.96 L1755.99 1212.96 L1755.4 1212.96 L1754.81 1212.96 L1754.23 1212.96 L1753.64 1212.96 L1753.05 1212.96 L1752.47 1212.96 L1751.88 1212.96 L1751.29 1212.96 L1750.71 1212.96 L1750.12 1212.96 L1749.53 1212.96 L1748.95 1212.96 L1748.36 1212.96 L1747.78 1212.96 L1747.19 1212.96 L1746.6 1212.96 L1746.02 1212.96 L1745.43 1212.96 L1744.84 1212.96 L1744.26 1212.96 L1743.67 1212.96 L1743.08 1212.96 L1742.5 1212.96 L1741.91 1212.96 L1741.32 1212.96 L1740.74 1212.96 L1740.15 1212.96 L1739.57 1212.96 L1738.98 1212.96 L1738.39 1212.96 L1737.81 1212.96 L1737.22 1212.96 L1736.63 1212.96 L1736.05 1212.96 L1735.46 1212.96 L1734.87 1212.96 L1734.29 1212.96 L1733.7 1212.96 L1733.11 1212.96 L1732.53 1212.96 L1731.94 1212.96 L1731.36 1212.96 L1730.77 1212.96 L1730.18 1212.96 L1729.6 1212.96 L1729.01 1212.96 L1728.42 1212.96 L1727.84 1212.96 L1727.25 1212.96 L1726.66 1212.96 L1726.08 1212.96 L1725.49 1212.96 L1724.91 1212.96 L1724.32 1212.96 L1723.73 1212.96 L1723.15 1212.96 L1722.56 1212.96 L1721.97 1212.96 L1721.39 1212.96 L1720.8 1212.96 L1720.21 1212.96 L1719.63 1212.96 L1719.04 1212.96 L1718.45 1212.96 L1717.87 1212.96 L1717.28 1212.96 L1716.7 1212.96 L1716.11 1212.96 L1715.52 1212.96 L1714.94 1212.96 L1714.35 1212.96 L1713.76 1212.96 L1713.18 1212.96 L1712.59 1212.96 L1712 1212.96 L1711.42 1212.96 L1710.83 1212.96 L1710.24 1212.96 L1709.66 1212.96 L1709.07 1212.96 L1708.49 1212.96 L1707.9 1212.96 L1707.31 1212.96 L1706.73 1212.96 L1706.14 1212.96 L1705.55 1212.96 L1704.97 1212.96 L1704.38 1212.96 L1703.79 1212.96 L1703.21 1212.96 L1702.62 1212.96 L1702.04 1212.96 L1701.45 1212.96 L1700.86 1212.96 L1700.28 1212.96 L1699.69 1212.96 L1699.1 1212.96 L1698.52 1212.96 L1697.93 1212.96 L1697.34 1212.96 L1696.76 1212.96 L1696.17 1212.96 L1695.58 1212.96 L1695 1212.96 L1694.41 1212.96 L1693.83 1212.96 L1693.24 1212.96 L1692.65 1212.96 L1692.07 1212.96 L1691.48 1212.96 L1690.89 1212.96 L1690.31 1212.96 L1689.72 1212.96 L1689.13 1212.96 L1688.55 1212.96 L1687.96 1212.96 L1687.37 1212.96 L1686.79 1212.96 L1686.2 1212.96 L1685.62 1212.96 L1685.03 1212.96 L1684.44 1212.96 L1683.86 1212.96 L1683.27 1212.96 L1682.68 1212.96 L1682.1 1212.96 L1681.51 1212.96 L1680.92 1212.96 L1680.34 1212.96 L1679.75 1212.96 L1679.17 1212.96 L1678.58 1212.96 L1677.99 1212.96 L1677.41 1212.96 L1676.82 1212.96 L1676.23 1212.96 L1675.65 1212.96 L1675.06 1212.96 L1674.47 1212.96 L1673.89 1212.96 L1673.3 1212.96 L1672.71 1212.96 L1672.13 1212.96 L1671.54 1212.96 L1670.96 1212.96 L1670.37 1212.96 L1669.78 1212.96 L1669.2 1212.96 L1668.61 1212.96 L1668.02 1212.96 L1667.44 1212.96 L1666.85 1212.96 L1666.26 1212.96 L1665.68 1212.96 L1665.09 1212.96 L1664.5 1212.96 L1663.92 1212.96 L1663.33 1212.96 L1662.75 1212.96 L1662.16 1212.96 L1661.57 1212.96 L1660.99 1212.96 L1660.4 1212.96 L1659.81 1212.96 L1659.23 1212.96 L1658.64 1212.96 L1658.05 1212.96 L1657.47 1212.96 L1656.88 1212.96 L1656.29 1212.96 L1655.71 1212.96 L1655.12 1212.96 L1654.54 1212.96 L1653.95 1212.96 L1653.36 1212.96 L1652.78 1212.96 L1652.19 1212.96 L1651.6 1212.96 L1651.02 1212.96 L1650.43 1212.96 L1649.84 1212.96 L1649.26 1212.96 L1648.67 1212.96 L1648.09 1212.96 L1647.5 1212.96 L1646.91 1212.96 L1646.33 1212.96 L1645.74 1212.96 L1645.15 1212.96 L1644.57 1212.96 L1643.98 1212.96 L1643.39 1212.96 L1642.81 1212.96 L1642.22 1212.96 L1641.63 1212.96 L1641.05 1212.96 L1640.46 1212.96 L1639.88 1212.96 L1639.29 1212.96 L1638.7 1212.96 L1638.12 1212.96 L1637.53 1212.96 L1636.94 1212.96 L1636.36 1212.96 L1635.77 1212.96 L1635.18 1212.96 L1634.6 1212.96 L1634.01 1212.96 L1633.42 1212.96 L1632.84 1212.96 L1632.25 1212.96 L1631.67 1212.96 L1631.08 1212.96 L1630.49 1212.96 L1629.91 1212.96 L1629.32 1212.96 L1628.73 1212.96 L1628.15 1212.96 L1627.56 1212.96 L1626.97 1212.96 L1626.39 1212.96 L1625.8 1212.96 L1625.22 1212.96 L1624.63 1212.96 L1624.04 1212.96 L1623.46 1212.96 L1622.87 1212.96 L1622.28 1212.96 L1621.7 1212.96 L1621.11 1212.96 L1620.52 1212.96 L1619.94 1212.96 L1619.35 1212.96 L1618.76 1212.96 L1618.18 1212.96 L1617.59 1212.96 L1617.01 1212.96 L1616.42 1212.96 L1615.83 1212.96 L1615.25 1212.96 L1614.66 1212.96 L1614.07 1212.96 L1613.49 1212.96 L1612.9 1212.96 L1612.31 1212.96 L1611.73 1212.96 L1611.14 1212.96 L1610.55 1212.96 L1609.97 1212.96 L1609.38 1212.96 L1608.8 1212.96 L1608.21 1212.96 L1607.62 1212.96 L1607.04 1212.96 L1606.45 1212.96 L1605.86 1212.96 L1605.28 1212.96 L1604.69 1212.96 L1604.1 1212.96 L1603.52 1212.96 L1602.93 1212.96 L1602.34 1212.96 L1601.76 1212.96 L1601.17 1212.96 L1600.59 1212.96 L1600 1212.96 L1599.41 1212.96 L1598.83 1212.96 L1598.24 1212.96 L1597.65 1212.96 L1597.07 1212.96 L1596.48 1212.96 L1595.89 1212.96 L1595.31 1212.96 L1594.72 1212.96 L1594.14 1212.96 L1593.55 1212.96 L1592.96 1212.96 L1592.38 1212.96 L1591.79 1212.96 L1591.2 1212.96 L1590.62 1212.96 L1590.03 1212.96 L1589.44 1212.96 L1588.86 1212.96 L1588.27 1212.96 L1587.68 1212.96 L1587.1 1212.96 L1586.51 1212.96 L1585.93 1212.96 L1585.34 1212.96 L1584.75 1212.96 L1584.17 1212.96 L1583.58 1212.96 L1582.99 1212.96 L1582.41 1212.96 L1581.82 1212.96 L1581.23 1212.96 L1580.65 1212.96 L1580.06 1212.96 L1579.47 1212.96 L1578.89 1212.96 L1578.3 1212.96 L1577.72 1212.96 L1577.13 1212.96 L1576.54 1212.96 L1575.96 1212.96 L1575.37 1212.96 L1574.78 1212.96 L1574.2 1212.96 L1573.61 1212.96 L1573.02 1212.96 L1572.44 1212.96 L1571.85 1212.96 L1571.27 1212.96 L1570.68 1212.96 L1570.09 1212.96 L1569.51 1212.96 L1568.92 1212.96 L1568.33 1212.96 L1567.75 1212.96 L1567.16 1212.96 L1566.57 1212.96 L1565.99 1212.96 L1565.4 1212.96 L1564.81 1212.96 L1564.23 1212.96 L1563.64 1212.96 L1563.06 1212.96 L1562.47 1212.96 L1561.88 1212.96 L1561.3 1212.96 L1560.71 1212.96 L1560.12 1212.96 L1559.54 1212.96 L1558.95 1212.96 L1558.36 1212.96 L1557.78 1212.96 L1557.19 1212.96 L1556.6 1212.96 L1556.02 1212.96 L1555.43 1212.96 L1554.85 1212.96 L1554.26 1212.96 L1553.67 1212.96 L1553.09 1212.96 L1552.5 1212.96 L1551.91 1212.96 L1551.33 1212.96 L1550.74 1212.96 L1550.15 1212.96 L1549.57 1212.96 L1548.98 1212.96 L1548.4 1212.96 L1547.81 1212.96 L1547.22 1212.96 L1546.64 1212.96 L1546.05 1212.96 L1545.46 1212.96 L1544.88 1212.96 L1544.29 1212.96 L1543.7 1212.96 L1543.12 1212.96 L1542.53 1212.96 L1541.94 1212.96 L1541.36 1212.96 L1540.77 1212.96 L1540.19 1212.96 L1539.6 1212.96 L1539.01 1212.96 L1538.43 1212.96 L1537.84 1212.96 L1537.25 1212.96 L1536.67 1212.96 L1536.08 1212.96 L1535.49 1212.96 L1534.91 1212.96 L1534.32 1212.96 L1533.73 1212.96 L1533.15 1212.96 L1532.56 1212.96 L1531.98 1212.96 L1531.39 1212.96 L1530.8 1212.96 L1530.22 1212.96 L1529.63 1212.96 L1529.04 1212.96 L1528.46 1212.96 L1527.87 1212.96 L1527.28 1212.96 L1526.7 1212.96 L1526.11 1212.96 L1525.52 1212.96 L1524.94 1212.96 L1524.35 1212.96 L1523.77 1212.96 L1523.18 1212.96 L1522.59 1212.96 L1522.01 1212.96 L1521.42 1212.96 L1520.83 1212.96 L1520.25 1212.96 L1519.66 1212.96 L1519.07 1212.96 L1518.49 1212.96 L1517.9 1212.96 L1517.32 1212.96 L1516.73 1212.96 L1516.14 1212.96 L1515.56 1212.96 L1514.97 1212.96 L1514.38 1212.96 L1513.8 1212.96 L1513.21 1212.96 L1512.62 1212.96 L1512.04 1212.96 L1511.45 1212.96 L1510.86 1212.96 L1510.28 1212.96 L1509.69 1212.96 L1509.11 1212.96 L1508.52 1212.96 L1507.93 1212.96 L1507.35 1212.96 L1506.76 1212.96 L1506.17 1212.96 L1505.59 1212.96 L1505 1212.96 L1504.41 1212.96 L1503.83 1212.96 L1503.24 1212.96 L1502.65 1212.96 L1502.07 1212.96 L1501.48 1212.96 L1500.9 1212.96 L1500.31 1212.96 L1499.72 1212.96 L1499.14 1212.96 L1498.55 1212.96 L1497.96 1212.96 L1497.38 1212.96 L1496.79 1212.96 L1496.2 1212.96 L1495.62 1212.96 L1495.03 1212.96 L1494.45 1212.96 L1493.86 1212.96 L1493.27 1212.96 L1492.69 1212.96 L1492.1 1212.96 L1491.51 1212.96 L1490.93 1212.96 L1490.34 1212.96 L1489.75 1212.96 L1489.17 1212.96 L1488.58 1212.96 L1487.99 1212.96 L1487.41 1212.96 L1486.82 1212.96 L1486.24 1212.96 L1485.65 1212.96 L1485.06 1212.96 L1484.48 1212.96 L1483.89 1212.96 L1483.3 1212.96 L1482.72 1212.96 L1482.13 1212.96 L1481.54 1212.96 L1480.96 1212.96 L1480.37 1212.96 L1479.78 1212.96 L1479.2 1212.96 L1478.61 1212.96 L1478.03 1212.96 L1477.44 1212.96 L1476.85 1212.96 L1476.27 1212.96 L1475.68 1212.96 L1475.09 1212.96 L1474.51 1212.96 L1473.92 1212.96 L1473.33 1212.96 L1472.75 1212.96 L1472.16 1212.96 L1471.57 1212.96 L1470.99 1212.96 L1470.4 1212.96 L1469.82 1212.96 L1469.23 1212.96 L1468.64 1212.96 L1468.06 1212.96 L1467.47 1212.96 L1466.88 1212.96 L1466.3 1212.96 L1465.71 1212.96 L1465.12 1212.96 L1464.54 1212.96 L1463.95 1212.96 L1463.37 1212.96 L1462.78 1212.96 L1462.19 1212.96 L1461.61 1212.96 L1461.02 1212.96 L1460.43 1212.96 L1459.85 1212.96 L1459.26 1212.96 L1458.67 1212.96 L1458.09 1212.96 L1457.5 1212.96 L1456.91 1212.96 L1456.33 1212.96 L1455.74 1212.96 L1455.16 1212.96 L1454.57 1212.96 L1453.98 1212.96 L1453.4 1212.96 L1452.81 1212.96 L1452.22 1212.96 L1451.64 1212.96 L1451.05 1212.96 L1450.46 1212.96 L1449.88 1212.96 L1449.29 1212.96 L1448.7 1212.96 L1448.12 1212.96 L1447.53 1212.96 L1446.95 1212.96 L1446.36 1212.96 L1445.77 1212.96 L1445.19 1212.96 L1444.6 1212.96 L1444.01 1212.96 L1443.43 1212.96 L1442.84 1212.96 L1442.25 1212.96 L1441.67 1212.96 L1441.08 1212.96 L1440.5 1212.96 L1439.91 1212.96 L1439.32 1212.96 L1438.74 1212.96 L1438.15 1212.96 L1437.56 1212.96 L1436.98 1212.96 L1436.39 1212.96 L1435.8 1212.96 L1435.22 1212.96 L1434.63 1212.96 L1434.04 1212.96 L1433.46 1212.96 L1432.87 1212.96 L1432.29 1212.96 L1431.7 1212.96 L1431.11 1212.96 L1430.53 1212.96 L1429.94 1212.96 L1429.35 1212.96 L1428.77 1212.96 L1428.18 1212.96 L1427.59 1212.96 L1427.01 1212.96 L1426.42 1212.96 L1425.83 1212.96 L1425.25 1212.96 L1424.66 1212.96 L1424.08 1212.96 L1423.49 1212.96 L1422.9 1212.96 L1422.32 1212.96 L1421.73 1212.96 L1421.14 1212.96 L1420.56 1212.96 L1419.97 1212.96 L1419.38 1212.96 L1418.8 1212.96 L1418.21 1212.96 L1417.63 1212.96 L1417.04 1212.96 L1416.45 1212.96 L1415.87 1212.96 L1415.28 1212.96 L1414.69 1212.96 L1414.11 1212.96 L1413.52 1212.96 L1412.93 1212.96 L1412.35 1212.96 L1411.76 1212.96 L1411.17 1212.96 L1410.59 1212.96 L1410 1212.96 L1409.42 1212.96 L1408.83 1212.96 L1408.24 1212.96 L1407.66 1212.96 L1407.07 1212.96 L1406.48 1212.96 L1405.9 1212.96 L1405.31 1212.96 L1404.72 1212.96 L1404.14 1212.96 L1403.55 1212.96 L1402.96 1212.96 L1402.38 1212.96 L1401.79 1212.96 L1401.21 1212.96 L1400.62 1212.96 L1400.03 1212.96 L1399.45 1212.96 L1398.86 1212.96 L1398.27 1212.96 L1397.69 1212.96 L1397.1 1212.96 L1396.51 1212.96 L1395.93 1212.96 L1395.34 1212.96 L1394.75 1212.96 L1394.17 1212.96 L1393.58 1212.96 L1393 1212.96 L1392.41 1212.96 L1391.82 1212.96 L1391.24 1212.96 L1390.65 1212.96 L1390.06 1212.96 L1389.48 1212.96 L1388.89 1212.96 L1388.3 1212.96 L1387.72 1212.96 L1387.13 1212.96 L1386.55 1212.96 L1385.96 1212.96 L1385.37 1212.96 L1384.79 1212.96 L1384.2 1212.96 L1383.61 1212.96 L1383.03 1212.96 L1382.44 1212.96 L1381.85 1212.96 L1381.27 1212.96 L1380.68 1212.96 L1380.09 1212.96 L1379.51 1212.96 L1378.92 1212.96 L1378.34 1212.96 L1377.75 1212.96 L1377.16 1212.96 L1376.58 1212.96 L1375.99 1212.96 L1375.4 1212.96 L1374.82 1212.96 L1374.23 1212.96 L1373.64 1212.96 L1373.06 1212.96 L1372.47 1212.96 L1371.88 1212.96 L1371.3 1212.96 L1370.71 1212.96 L1370.13 1212.96 L1369.54 1212.96 L1368.95 1212.96 L1368.37 1212.96 L1367.78 1212.96 L1367.19 1212.96 L1366.61 1212.96 L1366.02 1212.96 L1365.43 1212.96 L1364.85 1212.96 L1364.26 1212.96 L1363.68 1212.96 L1363.09 1212.96 L1362.5 1212.96 L1361.92 1212.96 L1361.33 1212.96 L1360.74 1212.96 L1360.16 1212.96 L1359.57 1212.96 L1358.98 1212.96 L1358.4 1212.96 L1357.81 1212.96 L1357.22 1212.96 L1356.64 1212.96 L1356.05 1212.96 L1355.47 1212.96 L1354.88 1212.96 L1354.29 1212.96 L1353.71 1212.96 L1353.12 1212.96 L1352.53 1212.96 L1351.95 1212.96 L1351.36 1212.96 L1350.77 1212.96 L1350.19 1212.96 L1349.6 1212.96 L1349.01 1212.96 L1348.43 1212.96 L1347.84 1212.96 L1347.26 1212.96 L1346.67 1212.96 L1346.08 1212.96 L1345.5 1212.96 L1344.91 1212.96 L1344.32 1212.96 L1343.74 1212.96 L1343.15 1212.96 L1342.56 1212.96 L1341.98 1212.96 L1341.39 1212.96 L1340.8 1212.96 L1340.22 1212.96 L1339.63 1212.96 L1339.05 1212.96 L1338.46 1212.96 L1337.87 1212.96 L1337.29 1212.96 L1336.7 1212.96 L1336.11 1212.96 L1335.53 1212.96 L1334.94 1212.96 L1334.35 1212.96 L1333.77 1212.96 L1333.18 1212.96 L1332.6 1212.96 L1332.01 1212.96 L1331.42 1212.96 L1330.84 1212.96 L1330.25 1212.96 L1329.66 1212.96 L1329.08 1212.96 L1328.49 1212.96 L1327.9 1212.96 L1327.32 1212.96 L1326.73 1212.96 L1326.14 1212.96 L1325.56 1212.96 L1324.97 1212.96 L1324.39 1212.96 L1323.8 1212.96 L1323.21 1212.96 L1322.63 1212.96 L1322.04 1212.96 L1321.45 1212.96 L1320.87 1212.96 L1320.28 1212.96 L1319.69 1212.96 L1319.11 1212.96 L1318.52 1212.96 L1317.93 1212.96 L1317.35 1212.96 L1316.76 1212.96 L1316.18 1212.96 L1315.59 1212.96 L1315 1212.96 L1314.42 1212.96 L1313.83 1212.96 L1313.24 1212.96 L1312.66 1212.96 L1312.07 1212.96 L1311.48 1212.96 L1310.9 1212.96 L1310.31 1212.96 L1309.73 1212.96 L1309.14 1212.96 L1308.55 1212.96 L1307.97 1212.96 L1307.38 1212.96 L1306.79 1212.96 L1306.21 1212.96 L1305.62 1212.96 L1305.03 1212.96 L1304.45 1212.96 L1303.86 1212.96 L1303.27 1212.96 L1302.69 1212.96 L1302.1 1212.96 L1301.52 1212.96 L1300.93 1212.96 L1300.34 1212.96 L1299.76 1212.96 L1299.17 1212.96 L1298.58 1212.96 L1298 1212.96 L1297.41 1212.96 L1296.82 1212.96 L1296.24 1212.96 L1295.65 1212.96 L1295.06 1212.96 L1294.48 1212.96 L1293.89 1212.96 L1293.31 1212.96 L1292.72 1212.96 L1292.13 1212.96 L1291.55 1212.96 L1290.96 1212.96 L1290.37 1212.96 L1289.79 1212.96 L1289.2 1212.96 L1288.61 1212.96 L1288.03 1212.96 L1287.44 1212.96 L1286.86 1212.96 L1286.27 1212.96 L1285.68 1212.96 L1285.1 1212.96 L1284.51 1212.96 L1283.92 1212.96 L1283.34 1212.96 L1282.75 1212.96 L1282.16 1212.96 L1281.58 1212.96 L1280.99 1212.96 L1280.4 1212.96 L1279.82 1212.96 L1279.23 1212.96 L1278.65 1212.96 L1278.06 1212.96 L1277.47 1212.96 L1276.89 1212.96 L1276.3 1212.96 L1275.71 1212.96 L1275.13 1212.96 L1274.54 1212.96 L1273.95 1212.96 L1273.37 1212.96 L1272.78 1212.96 L1272.19 1212.96 L1271.61 1212.96 L1271.02 1212.96 L1270.44 1212.96 L1269.85 1212.96 L1269.26 1212.96 L1268.68 1212.96 L1268.09 1212.96 L1267.5 1212.96 L1266.92 1212.96 L1266.33 1212.96 L1265.74 1212.96 L1265.16 1212.96 L1264.57 1212.96 L1263.98 1212.96 L1263.4 1212.96 L1262.81 1212.96 L1262.23 1212.96 L1261.64 1212.96 L1261.05 1212.96 L1260.47 1212.96 L1259.88 1212.96 L1259.29 1212.96 L1258.71 1212.96 L1258.12 1212.96 L1257.53 1212.96 L1256.95 1212.96 L1256.36 1212.96 L1255.78 1212.96 L1255.19 1212.96 L1254.6 1212.96 L1254.02 1212.96 L1253.43 1212.96 L1252.84 1212.96 L1252.26 1212.96 L1251.67 1212.96 L1251.08 1212.96 L1250.5 1212.96 L1249.91 1212.96 L1249.32 1212.96 L1248.74 1212.96 L1248.15 1212.96 L1247.57 1212.96 L1246.98 1212.96 L1246.39 1212.96 L1245.81 1212.96 L1245.22 1212.96 L1244.63 1212.96 L1244.05 1212.96 L1243.46 1212.96 L1242.87 1212.96 L1242.29 1212.96 L1241.7 1212.96 L1241.11 1212.96 L1240.53 1212.96 L1239.94 1212.96 L1239.36 1212.96 L1238.77 1212.96 L1238.18 1212.96 L1237.6 1212.96 L1237.01 1212.96 L1236.42 1212.96 L1235.84 1212.96 L1235.25 1212.96 L1234.66 1212.96 L1234.08 1212.96 L1233.49 1212.96 L1232.91 1212.96 L1232.32 1212.96 L1231.73 1212.96 L1231.15 1212.96 L1230.56 1212.96 L1229.97 1212.96 L1229.39 1212.96 L1228.8 1212.96 L1228.21 1212.96 L1227.63 1212.96 L1227.04 1212.96 L1226.45 1212.96 L1225.87 1212.96 L1225.28 1212.96 L1224.7 1212.96 L1224.11 1212.96 L1223.52 1212.96 L1222.94 1212.96 L1222.35 1212.96 L1221.76 1212.96 L1221.18 1212.96 L1220.59 1212.96 L1220 1212.96 L1219.42 1212.96 L1218.83 1212.96 L1218.24 1212.96 L1217.66 1212.96 L1217.07 1212.96 L1216.49 1212.96 L1215.9 1212.96 L1215.31 1212.96 L1214.73 1212.96 L1214.14 1212.96 L1213.55 1212.96 L1212.97 1212.96 L1212.38 1212.96 L1211.79 1212.96 L1211.21 1212.96 L1210.62 1212.96 L1210.03 1212.96 L1209.45 1212.96 L1208.86 1212.96 L1208.28 1212.96 L1207.69 1212.96 L1207.1 1212.96 L1206.52 1212.96 L1205.93 1212.96 L1205.34 1212.96 L1204.76 1212.96 L1204.17 1212.96 L1203.58 1212.96 L1203 1212.96 L1202.41 1212.96 L1201.83 1212.96 L1201.24 1212.96 L1200.65 1212.96 L1200.07 1212.96 L1199.48 1212.96 L1198.89 1212.96 L1198.31 1212.96 L1197.72 1212.96 L1197.13 1212.96 L1196.55 1212.96 L1195.96 1212.96 L1195.37 1212.96 L1194.79 1212.96 L1194.2 1212.96 L1193.62 1212.96 L1193.03 1212.96 L1192.44 1212.96 L1191.86 1212.96 L1191.27 1212.96 L1190.68 1212.96 L1190.1 1212.96 L1189.51 1212.96 L1188.92 1212.96 L1188.34 1212.96 L1187.75 1212.96 L1187.16 1212.96 L1186.58 1212.96 L1185.99 1212.96 L1185.41 1212.96 L1184.82 1212.96 L1184.23 1212.96 L1183.65 1212.96 L1183.06 1212.96 L1182.47 1212.96 L1181.89 1212.96 L1181.3 1212.96 L1180.71 1212.96 L1180.13 1212.96 L1179.54 1212.96 L1178.96 1212.96 L1178.37 1212.96 L1177.78 1212.96 L1177.2 1212.96 L1176.61 1212.96 L1176.02 1212.96 L1175.44 1212.96 L1174.85 1212.96 L1174.26 1212.96 L1173.68 1212.96 L1173.09 1212.96 L1172.5 1212.96 L1171.92 1212.96 L1171.33 1212.96 L1170.75 1212.96 L1170.16 1212.96 L1169.57 1212.96 L1168.99 1212.96 L1168.4 1212.96 L1167.81 1212.96 L1167.23 1212.96 L1166.64 1212.96 L1166.05 1212.96 L1165.47 1212.96 L1164.88 1212.96 L1164.29 1212.96 L1163.71 1212.96 L1163.12 1212.96 L1162.54 1212.96 L1161.95 1212.96 L1161.36 1212.96 L1160.78 1212.96 L1160.19 1212.96 L1159.6 1212.96 L1159.02 1212.96 L1158.43 1212.96 L1157.84 1212.96 L1157.26 1212.96 L1156.67 1212.96 L1156.09 1212.96 L1155.5 1212.96 L1154.91 1212.96 L1154.33 1212.96 L1153.74 1212.96 L1153.15 1212.96 L1152.57 1212.96 L1151.98 1212.96 L1151.39 1212.96 L1150.81 1212.96 L1150.22 1212.96 L1149.63 1212.96 L1149.05 1212.96 L1148.46 1212.96 L1147.88 1212.96 L1147.29 1212.96 L1146.7 1212.96 L1146.12 1212.96 L1145.53 1212.96 L1144.94 1212.96 L1144.36 1212.96 L1143.77 1212.96 L1143.18 1212.96 L1142.6 1212.96 L1142.01 1212.96 L1141.42 1212.96 L1140.84 1212.96 L1140.25 1212.96 L1139.67 1212.96 L1139.08 1212.96 L1138.49 1212.96 L1137.91 1212.96 L1137.32 1212.96 L1136.73 1212.96 L1136.15 1212.96 L1135.56 1212.96 L1134.97 1212.96 L1134.39 1212.96 L1133.8 1212.96 L1133.21 1212.96 L1132.63 1212.96 L1132.04 1212.96 L1131.46 1212.96 L1130.87 1212.96 L1130.28 1212.96 L1129.7 1212.96 L1129.11 1212.96 L1128.52 1212.96 L1127.94 1212.96 L1127.35 1212.96 L1126.76 1212.96 L1126.18 1212.96 L1125.59 1212.96 L1125.01 1212.96 L1124.42 1212.96 L1123.83 1212.96 L1123.25 1212.96 L1122.66 1212.96 L1122.07 1212.96 L1121.49 1212.96 L1120.9 1212.96 L1120.31 1212.96 L1119.73 1212.96 L1119.14 1212.96 L1118.55 1212.96 L1117.97 1212.96 L1117.38 1212.96 L1116.8 1212.96 L1116.21 1212.96 L1115.62 1212.96 L1115.04 1212.96 L1114.45 1212.96 L1113.86 1212.96 L1113.28 1212.96 L1112.69 1212.96 L1112.1 1212.96 L1111.52 1212.96 L1110.93 1212.96 L1110.34 1212.96 L1109.76 1212.96 L1109.17 1212.96 L1108.59 1212.96 L1108 1212.96 L1107.41 1212.96 L1106.83 1212.96 L1106.24 1212.96 L1105.65 1212.96 L1105.07 1212.96 L1104.48 1212.96 L1103.89 1212.96 L1103.31 1212.96 L1102.72 1212.96 L1102.14 1212.96 L1101.55 1212.96 L1100.96 1212.96 L1100.38 1212.96 L1099.79 1212.96 L1099.2 1212.96 L1098.62 1212.96 L1098.03 1212.96 L1097.44 1212.96 L1096.86 1212.96 L1096.27 1212.96 L1095.68 1212.96 L1095.1 1212.96 L1094.51 1212.96 L1093.93 1212.96 L1093.34 1212.96 L1092.75 1212.96 L1092.17 1212.96 L1091.58 1212.96 L1090.99 1212.96 L1090.41 1212.96 L1089.82 1212.96 L1089.23 1212.96 L1088.65 1212.96 L1088.06 1212.96 L1087.47 1212.96 L1086.89 1212.96 L1086.3 1212.96 L1085.72 1212.96 L1085.13 1212.96 L1084.54 1212.96 L1083.96 1212.96 L1083.37 1212.96 L1082.78 1212.96 L1082.2 1212.96 L1081.61 1212.96 L1081.02 1212.96 L1080.44 1212.96 L1079.85 1212.96 L1079.26 1212.96 L1078.68 1212.96 L1078.09 1212.96 L1077.51 1212.96 L1076.92 1212.96 L1076.33 1212.96 L1075.75 1212.96 L1075.16 1212.96 L1074.57 1212.96 L1073.99 1212.96 L1073.4 1212.96 L1072.81 1212.96 L1072.23 1212.96 L1071.64 1212.96 L1071.06 1212.96 L1070.47 1212.96 L1069.88 1212.96 L1069.3 1212.96 L1068.71 1212.96 L1068.12 1212.96 L1067.54 1212.96 L1066.95 1212.96 L1066.36 1212.96 L1065.78 1212.96 L1065.19 1212.96 L1064.6 1212.96 L1064.02 1212.96 L1063.43 1212.96 L1062.85 1212.96 L1062.26 1212.96 L1061.67 1212.96 L1061.09 1212.96 L1060.5 1212.96 L1059.91 1212.96 L1059.33 1212.96 L1058.74 1212.96 L1058.15 1212.96 L1057.57 1212.96 L1056.98 1212.96 L1056.39 1212.96 L1055.81 1212.96 L1055.22 1212.96 L1054.64 1212.96 L1054.05 1212.96 L1053.46 1212.96 L1052.88 1212.96 L1052.29 1212.96 L1051.7 1212.96 L1051.12 1212.96 L1050.53 1212.96 L1049.94 1212.96 L1049.36 1212.96 L1048.77 1212.96 L1048.19 1212.96 L1047.6 1212.96 L1047.01 1212.96 L1046.43 1212.96 L1045.84 1212.96 L1045.25 1212.96 L1044.67 1212.96 L1044.08 1212.96 L1043.49 1212.96 L1042.91 1212.96 L1042.32 1212.96 L1041.73 1212.96 L1041.15 1212.96 L1040.56 1212.96 L1039.98 1212.96 L1039.39 1212.96 L1038.8 1212.96 L1038.22 1212.96 L1037.63 1212.96 L1037.04 1212.96 L1036.46 1212.96 L1035.87 1212.96 L1035.28 1212.96 L1034.7 1212.96 L1034.11 1212.96 L1033.52 1212.96 L1032.94 1212.96 L1032.35 1212.96 L1031.77 1212.96 L1031.18 1212.96 L1030.59 1212.96 L1030.01 1212.96 L1029.42 1212.96 L1028.83 1212.96 L1028.25 1212.96 L1027.66 1212.96 L1027.07 1212.96 L1026.49 1212.96 L1025.9 1212.96 L1025.32 1212.96 L1024.73 1212.96 L1024.14 1212.96 L1023.56 1212.96 L1022.97 1212.96 L1022.38 1212.96 L1021.8 1212.96 L1021.21 1212.96 L1020.62 1212.96 L1020.04 1212.96 L1019.45 1212.96 L1018.86 1212.96 L1018.28 1212.96 L1017.69 1212.96 L1017.11 1212.96 L1016.52 1212.96 L1015.93 1212.96 L1015.35 1212.96 L1014.76 1212.96 L1014.17 1212.96 L1013.59 1212.96 L1013 1212.96 L1012.41 1212.96 L1011.83 1212.96 L1011.24 1212.96 L1010.65 1212.96 L1010.07 1212.96 L1009.48 1212.96 L1008.9 1212.96 L1008.31 1212.96 L1007.72 1212.96 L1007.14 1212.96 L1006.55 1212.96 L1005.96 1212.96 L1005.38 1212.96 L1004.79 1212.96 L1004.2 1212.96 L1003.62 1212.96 L1003.03 1212.96 L1002.44 1212.96 L1001.86 1212.96 L1001.27 1212.96 L1000.69 1212.96 L1000.1 1212.96 L999.513 1212.96 L998.926 1212.96 L998.34 1212.96 L997.754 1212.96 L997.167 1212.96 L996.581 1212.96 L995.994 1212.96 L995.408 1212.96 L994.822 1212.96 L994.235 1212.96 L993.649 1212.96 L993.062 1212.96 L992.476 1212.96 L991.889 1212.96 L991.303 1212.96 L990.717 1212.96 L990.13 1212.96 L989.544 1212.96 L988.957 1212.96 L988.371 1212.96 L987.785 1212.96 L987.198 1212.96 L986.612 1212.96 L986.025 1212.96  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip882)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1213.04 986.612,1213.04 987.198,1213.04 987.785,1213.04 988.371,1213.04 988.957,1213.04 989.544,1213.04 990.13,1213.04 990.717,1213.04 991.303,1213.04 991.889,1213.04 992.476,1213.04 993.062,1213.04 993.649,1213.04 994.235,1213.04 994.822,1213.04 995.408,1213.04 995.994,1213.04 996.581,1213.04 997.167,1213.04 997.754,1213.04 998.34,1213.04 998.926,1213.04 999.513,1213.04 1000.1,1213.04 1000.69,1213.04 1001.27,1213.04 1001.86,1213.04 1002.44,1213.04 1003.03,1213.04 1003.62,1213.04 1004.2,1213.04 1004.79,1213.04 1005.38,1213.04 1005.96,1213.04 1006.55,1213.04 1007.14,1213.04 1007.72,1213.04 1008.31,1213.04 1008.9,1213.04 1009.48,1213.04 1010.07,1213.04 1010.65,1213.04 1011.24,1213.04 1011.83,1213.04 1012.41,1213.04 1013,1213.04 1013.59,1213.04 1014.17,1213.04 1014.76,1213.04 1015.35,1213.04 1015.93,1213.04 1016.52,1213.04 1017.11,1213.04 1017.69,1213.04 1018.28,1213.04 1018.86,1213.04 1019.45,1213.04 1020.04,1213.04 1020.62,1213.04 1021.21,1213.04 1021.8,1213.04 1022.38,1213.04 1022.97,1213.04 1023.56,1213.04 1024.14,1213.04 1024.73,1213.04 1025.32,1213.04 1025.9,1213.04 1026.49,1213.04 1027.07,1213.04 1027.66,1213.04 1028.25,1213.04 1028.83,1213.04 1029.42,1213.04 1030.01,1213.04 1030.59,1213.04 1031.18,1213.04 1031.77,1213.04 1032.35,1213.04 1032.94,1213.04 1033.52,1213.04 1034.11,1213.04 1034.7,1213.04 1035.28,1213.04 1035.87,1213.04 1036.46,1213.04 1037.04,1213.04 1037.63,1213.04 1038.22,1213.04 1038.8,1213.04 1039.39,1213.04 1039.98,1213.04 1040.56,1213.04 1041.15,1213.04 1041.73,1213.04 1042.32,1213.04 1042.91,1213.04 1043.49,1213.04 1044.08,1213.04 1044.67,1213.04 1045.25,1213.04 1045.84,1213.04 1046.43,1213.04 1047.01,1213.04 1047.6,1213.04 1048.19,1213.04 1048.77,1213.04 1049.36,1213.04 1049.94,1213.04 1050.53,1213.04 1051.12,1213.04 1051.7,1213.04 1052.29,1213.04 1052.88,1213.04 1053.46,1213.04 1054.05,1213.04 1054.64,1213.04 1055.22,1213.04 1055.81,1213.04 1056.39,1213.04 1056.98,1213.04 1057.57,1213.04 1058.15,1213.04 1058.74,1213.04 1059.33,1213.04 1059.91,1213.04 1060.5,1213.04 1061.09,1213.04 1061.67,1213.04 1062.26,1213.04 1062.85,1213.04 1063.43,1213.04 1064.02,1213.04 1064.6,1213.04 1065.19,1213.04 1065.78,1213.04 1066.36,1213.04 1066.95,1213.04 1067.54,1213.04 1068.12,1213.04 1068.71,1213.04 1069.3,1213.04 1069.88,1213.04 1070.47,1213.04 1071.06,1213.04 1071.64,1213.04 1072.23,1213.04 1072.81,1213.04 1073.4,1213.04 1073.99,1213.04 1074.57,1213.04 1075.16,1213.04 1075.75,1213.04 1076.33,1213.04 1076.92,1213.04 1077.51,1213.04 1078.09,1213.04 1078.68,1213.04 1079.26,1213.04 1079.85,1213.04 1080.44,1213.04 1081.02,1213.04 1081.61,1213.04 1082.2,1213.04 1082.78,1213.04 1083.37,1213.04 1083.96,1213.04 1084.54,1213.04 1085.13,1213.04 1085.72,1213.04 1086.3,1213.04 1086.89,1213.04 1087.47,1213.04 1088.06,1213.04 1088.65,1213.04 1089.23,1213.04 1089.82,1213.04 1090.41,1213.04 1090.99,1213.04 1091.58,1213.04 1092.17,1213.04 1092.75,1213.04 1093.34,1213.04 1093.93,1213.04 1094.51,1213.04 1095.1,1213.04 1095.68,1213.04 1096.27,1213.04 1096.86,1213.04 1097.44,1213.04 1098.03,1213.04 1098.62,1213.04 1099.2,1213.04 1099.79,1213.04 1100.38,1213.04 1100.96,1213.04 1101.55,1213.04 1102.14,1213.04 1102.72,1213.04 1103.31,1213.04 1103.89,1213.04 1104.48,1213.04 1105.07,1213.04 1105.65,1213.04 1106.24,1213.04 1106.83,1213.04 1107.41,1213.04 1108,1213.04 1108.59,1213.04 1109.17,1213.04 1109.76,1213.04 1110.34,1213.04 1110.93,1213.04 1111.52,1213.04 1112.1,1213.04 1112.69,1213.04 1113.28,1213.04 1113.86,1213.04 1114.45,1213.04 1115.04,1213.04 1115.62,1213.04 1116.21,1213.04 1116.8,1213.04 1117.38,1213.04 1117.97,1213.04 1118.55,1213.04 1119.14,1213.04 1119.73,1213.04 1120.31,1213.04 1120.9,1213.04 1121.49,1213.04 1122.07,1213.04 1122.66,1213.04 1123.25,1213.04 1123.83,1213.04 1124.42,1213.04 1125.01,1213.04 1125.59,1213.04 1126.18,1213.04 1126.76,1213.04 1127.35,1213.04 1127.94,1213.04 1128.52,1213.04 1129.11,1213.04 1129.7,1213.04 1130.28,1213.04 1130.87,1213.04 1131.46,1213.04 1132.04,1213.04 1132.63,1213.04 1133.21,1213.04 1133.8,1213.04 1134.39,1213.04 1134.97,1213.04 1135.56,1213.04 1136.15,1213.04 1136.73,1213.04 1137.32,1213.04 1137.91,1213.04 1138.49,1213.04 1139.08,1213.04 1139.67,1213.04 1140.25,1213.04 1140.84,1213.04 1141.42,1213.04 1142.01,1213.04 1142.6,1213.04 1143.18,1213.04 1143.77,1213.04 1144.36,1213.04 1144.94,1213.04 1145.53,1213.04 1146.12,1213.04 1146.7,1213.04 1147.29,1213.04 1147.88,1213.04 1148.46,1213.04 1149.05,1213.04 1149.63,1213.04 1150.22,1213.04 1150.81,1213.04 1151.39,1213.04 1151.98,1213.04 1152.57,1213.04 1153.15,1213.04 1153.74,1213.04 1154.33,1213.04 1154.91,1213.04 1155.5,1213.04 1156.09,1213.04 1156.67,1213.04 1157.26,1213.04 1157.84,1213.04 1158.43,1213.04 1159.02,1213.04 1159.6,1213.04 1160.19,1213.04 1160.78,1213.04 1161.36,1213.04 1161.95,1213.04 1162.54,1213.04 1163.12,1213.04 1163.71,1213.04 1164.29,1213.04 1164.88,1213.04 1165.47,1213.04 1166.05,1213.04 1166.64,1213.04 1167.23,1213.04 1167.81,1213.04 1168.4,1213.04 1168.99,1213.04 1169.57,1213.04 1170.16,1213.04 1170.75,1213.04 1171.33,1213.04 1171.92,1213.04 1172.5,1213.04 1173.09,1213.04 1173.68,1213.04 1174.26,1213.04 1174.85,1213.04 1175.44,1213.04 1176.02,1213.04 1176.61,1213.04 1177.2,1213.04 1177.78,1213.04 1178.37,1213.04 1178.96,1213.04 1179.54,1213.04 1180.13,1213.04 1180.71,1213.04 1181.3,1213.04 1181.89,1213.04 1182.47,1213.04 1183.06,1213.04 1183.65,1213.04 1184.23,1213.04 1184.82,1213.04 1185.41,1213.04 1185.99,1213.04 1186.58,1213.04 1187.16,1213.04 1187.75,1213.04 1188.34,1213.04 1188.92,1213.04 1189.51,1213.04 1190.1,1213.04 1190.68,1213.04 1191.27,1213.04 1191.86,1213.04 1192.44,1213.04 1193.03,1213.04 1193.62,1213.04 1194.2,1213.04 1194.79,1213.04 1195.37,1213.04 1195.96,1213.04 1196.55,1213.04 1197.13,1213.04 1197.72,1213.04 1198.31,1213.04 1198.89,1213.04 1199.48,1213.04 1200.07,1213.04 1200.65,1213.04 1201.24,1213.04 1201.83,1213.04 1202.41,1213.04 1203,1213.04 1203.58,1213.04 1204.17,1213.04 1204.76,1213.04 1205.34,1213.04 1205.93,1213.04 1206.52,1213.04 1207.1,1213.04 1207.69,1213.04 1208.28,1213.04 1208.86,1213.04 1209.45,1213.04 1210.03,1213.04 1210.62,1213.04 1211.21,1213.04 1211.79,1213.04 1212.38,1213.04 1212.97,1213.04 1213.55,1213.04 1214.14,1213.04 1214.73,1213.04 1215.31,1213.04 1215.9,1213.04 1216.49,1213.04 1217.07,1213.04 1217.66,1213.04 1218.24,1213.04 1218.83,1213.04 1219.42,1213.04 1220,1213.04 1220.59,1213.04 1221.18,1213.04 1221.76,1213.04 1222.35,1213.04 1222.94,1213.04 1223.52,1213.04 1224.11,1213.04 1224.7,1213.04 1225.28,1213.04 1225.87,1213.04 1226.45,1213.04 1227.04,1213.04 1227.63,1213.04 1228.21,1213.04 1228.8,1213.04 1229.39,1213.04 1229.97,1213.04 1230.56,1213.04 1231.15,1213.04 1231.73,1213.04 1232.32,1213.04 1232.91,1213.04 1233.49,1213.04 1234.08,1213.04 1234.66,1213.04 1235.25,1213.04 1235.84,1213.04 1236.42,1213.04 1237.01,1213.04 1237.6,1213.04 1238.18,1213.04 1238.77,1213.04 1239.36,1213.04 1239.94,1213.04 1240.53,1213.04 1241.11,1213.04 1241.7,1213.04 1242.29,1213.04 1242.87,1213.04 1243.46,1213.04 1244.05,1213.04 1244.63,1213.04 1245.22,1213.04 1245.81,1213.04 1246.39,1213.04 1246.98,1213.04 1247.57,1213.04 1248.15,1213.04 1248.74,1213.04 1249.32,1213.04 1249.91,1213.04 1250.5,1213.04 1251.08,1213.04 1251.67,1213.04 1252.26,1213.04 1252.84,1213.04 1253.43,1213.04 1254.02,1213.04 1254.6,1213.04 1255.19,1213.04 1255.78,1213.04 1256.36,1213.04 1256.95,1213.04 1257.53,1213.04 1258.12,1213.04 1258.71,1213.04 1259.29,1213.04 1259.88,1213.04 1260.47,1213.04 1261.05,1213.04 1261.64,1213.04 1262.23,1213.04 1262.81,1213.04 1263.4,1213.04 1263.98,1213.04 1264.57,1213.04 1265.16,1213.04 1265.74,1213.04 1266.33,1213.04 1266.92,1213.04 1267.5,1213.04 1268.09,1213.04 1268.68,1213.04 1269.26,1213.04 1269.85,1213.04 1270.44,1213.04 1271.02,1213.04 1271.61,1213.04 1272.19,1213.04 1272.78,1213.04 1273.37,1213.04 1273.95,1213.04 1274.54,1213.04 1275.13,1213.04 1275.71,1213.04 1276.3,1213.04 1276.89,1213.04 1277.47,1213.04 1278.06,1213.04 1278.65,1213.04 1279.23,1213.04 1279.82,1213.04 1280.4,1213.04 1280.99,1213.04 1281.58,1213.04 1282.16,1213.04 1282.75,1213.04 1283.34,1213.04 1283.92,1213.04 1284.51,1213.04 1285.1,1213.04 1285.68,1213.04 1286.27,1213.04 1286.86,1213.04 1287.44,1213.04 1288.03,1213.04 1288.61,1213.04 1289.2,1213.04 1289.79,1213.04 1290.37,1213.04 1290.96,1213.04 1291.55,1213.04 1292.13,1213.04 1292.72,1213.04 1293.31,1213.04 1293.89,1213.04 1294.48,1213.04 1295.06,1213.04 1295.65,1213.04 1296.24,1213.04 1296.82,1213.04 1297.41,1213.04 1298,1213.04 1298.58,1213.04 1299.17,1213.04 1299.76,1213.04 1300.34,1213.04 1300.93,1213.04 1301.52,1213.04 1302.1,1213.04 1302.69,1213.04 1303.27,1213.04 1303.86,1213.04 1304.45,1213.04 1305.03,1213.04 1305.62,1213.04 1306.21,1213.04 1306.79,1213.04 1307.38,1213.04 1307.97,1213.04 1308.55,1213.04 1309.14,1213.04 1309.73,1213.04 1310.31,1213.04 1310.9,1213.04 1311.48,1213.04 1312.07,1213.04 1312.66,1213.04 1313.24,1213.04 1313.83,1213.04 1314.42,1213.04 1315,1213.04 1315.59,1213.04 1316.18,1213.04 1316.76,1213.04 1317.35,1213.04 1317.93,1213.04 1318.52,1213.04 1319.11,1213.04 1319.69,1213.04 1320.28,1213.04 1320.87,1213.04 1321.45,1213.04 1322.04,1213.04 1322.63,1213.04 1323.21,1213.04 1323.8,1213.04 1324.39,1213.04 1324.97,1213.04 1325.56,1213.04 1326.14,1213.04 1326.73,1213.04 1327.32,1213.04 1327.9,1213.04 1328.49,1213.04 1329.08,1213.04 1329.66,1213.04 1330.25,1213.04 1330.84,1213.04 1331.42,1213.04 1332.01,1213.04 1332.6,1213.04 1333.18,1213.04 1333.77,1213.04 1334.35,1213.04 1334.94,1213.04 1335.53,1213.04 1336.11,1213.04 1336.7,1213.04 1337.29,1213.04 1337.87,1213.04 1338.46,1213.04 1339.05,1213.04 1339.63,1213.04 1340.22,1213.04 1340.8,1213.04 1341.39,1213.04 1341.98,1213.04 1342.56,1213.04 1343.15,1213.04 1343.74,1213.04 1344.32,1213.04 1344.91,1213.04 1345.5,1213.04 1346.08,1213.04 1346.67,1213.04 1347.26,1213.04 1347.84,1213.04 1348.43,1213.04 1349.01,1213.04 1349.6,1213.04 1350.19,1213.04 1350.77,1213.04 1351.36,1213.04 1351.95,1213.04 1352.53,1213.04 1353.12,1213.04 1353.71,1213.04 1354.29,1213.04 1354.88,1213.04 1355.47,1213.04 1356.05,1213.04 1356.64,1213.04 1357.22,1213.04 1357.81,1213.04 1358.4,1213.04 1358.98,1213.04 1359.57,1213.04 1360.16,1213.04 1360.74,1213.04 1361.33,1213.04 1361.92,1213.04 1362.5,1213.04 1363.09,1213.04 1363.68,1213.04 1364.26,1213.04 1364.85,1213.04 1365.43,1213.04 1366.02,1213.04 1366.61,1213.04 1367.19,1213.04 1367.78,1213.04 1368.37,1213.04 1368.95,1213.04 1369.54,1213.04 1370.13,1213.04 1370.71,1213.04 1371.3,1213.04 1371.88,1213.04 1372.47,1213.04 1373.06,1213.04 1373.64,1213.04 1374.23,1213.04 1374.82,1213.04 1375.4,1213.04 1375.99,1213.04 1376.58,1213.04 1377.16,1213.04 1377.75,1213.04 1378.34,1213.04 1378.92,1213.04 1379.51,1213.04 1380.09,1213.04 1380.68,1213.04 1381.27,1213.04 1381.85,1213.04 1382.44,1213.04 1383.03,1213.04 1383.61,1213.04 1384.2,1213.04 1384.79,1213.04 1385.37,1213.04 1385.96,1213.04 1386.55,1213.04 1387.13,1213.04 1387.72,1213.04 1388.3,1213.04 1388.89,1213.04 1389.48,1213.04 1390.06,1213.04 1390.65,1213.04 1391.24,1213.04 1391.82,1213.04 1392.41,1213.04 1393,1213.04 1393.58,1213.04 1394.17,1213.04 1394.75,1213.04 1395.34,1213.04 1395.93,1213.04 1396.51,1213.04 1397.1,1213.04 1397.69,1213.04 1398.27,1213.04 1398.86,1213.04 1399.45,1213.04 1400.03,1213.04 1400.62,1213.04 1401.21,1213.04 1401.79,1213.04 1402.38,1213.04 1402.96,1213.04 1403.55,1213.04 1404.14,1213.04 1404.72,1213.04 1405.31,1213.04 1405.9,1213.04 1406.48,1213.04 1407.07,1213.04 1407.66,1213.04 1408.24,1213.04 1408.83,1213.04 1409.42,1213.04 1410,1213.04 1410.59,1213.04 1411.17,1213.04 1411.76,1213.04 1412.35,1213.04 1412.93,1213.04 1413.52,1213.04 1414.11,1213.04 1414.69,1213.04 1415.28,1213.04 1415.87,1213.04 1416.45,1213.04 1417.04,1213.04 1417.63,1213.04 1418.21,1213.04 1418.8,1213.04 1419.38,1213.04 1419.97,1213.04 1420.56,1213.04 1421.14,1213.04 1421.73,1213.04 1422.32,1213.04 1422.9,1213.04 1423.49,1213.04 1424.08,1213.04 1424.66,1213.04 1425.25,1213.04 1425.83,1213.04 1426.42,1213.04 1427.01,1213.04 1427.59,1213.04 1428.18,1213.04 1428.77,1213.04 1429.35,1213.04 1429.94,1213.04 1430.53,1213.04 1431.11,1213.04 1431.7,1213.04 1432.29,1213.04 1432.87,1213.04 1433.46,1213.04 1434.04,1213.04 1434.63,1213.04 1435.22,1213.04 1435.8,1213.04 1436.39,1213.04 1436.98,1213.04 1437.56,1213.04 1438.15,1213.04 1438.74,1213.04 1439.32,1213.04 1439.91,1213.04 1440.5,1213.04 1441.08,1213.04 1441.67,1213.04 1442.25,1213.04 1442.84,1213.04 1443.43,1213.04 1444.01,1213.04 1444.6,1213.04 1445.19,1213.04 1445.77,1213.04 1446.36,1213.04 1446.95,1213.04 1447.53,1213.04 1448.12,1213.04 1448.7,1213.04 1449.29,1213.04 1449.88,1213.04 1450.46,1213.04 1451.05,1213.04 1451.64,1213.04 1452.22,1213.04 1452.81,1213.04 1453.4,1213.04 1453.98,1213.04 1454.57,1213.04 1455.16,1213.04 1455.74,1213.04 1456.33,1213.04 1456.91,1213.04 1457.5,1213.04 1458.09,1213.04 1458.67,1213.04 1459.26,1213.04 1459.85,1213.04 1460.43,1213.04 1461.02,1213.04 1461.61,1213.04 1462.19,1213.04 1462.78,1213.04 1463.37,1213.04 1463.95,1213.04 1464.54,1213.04 1465.12,1213.04 1465.71,1213.04 1466.3,1213.04 1466.88,1213.04 1467.47,1213.04 1468.06,1213.04 1468.64,1213.04 1469.23,1213.04 1469.82,1213.04 1470.4,1213.04 1470.99,1213.04 1471.57,1213.04 1472.16,1213.04 1472.75,1213.04 1473.33,1213.04 1473.92,1213.04 1474.51,1213.04 1475.09,1213.04 1475.68,1213.04 1476.27,1213.04 1476.85,1213.04 1477.44,1213.04 1478.03,1213.04 1478.61,1213.04 1479.2,1213.04 1479.78,1213.04 1480.37,1213.04 1480.96,1213.04 1481.54,1213.04 1482.13,1213.04 1482.72,1213.04 1483.3,1213.04 1483.89,1213.04 1484.48,1213.04 1485.06,1213.04 1485.65,1213.04 1486.24,1213.04 1486.82,1213.04 1487.41,1213.04 1487.99,1213.04 1488.58,1213.04 1489.17,1213.04 1489.75,1213.04 1490.34,1213.04 1490.93,1213.04 1491.51,1213.04 1492.1,1213.04 1492.69,1213.04 1493.27,1213.04 1493.86,1213.04 1494.45,1213.04 1495.03,1213.04 1495.62,1213.04 1496.2,1213.04 1496.79,1213.04 1497.38,1213.04 1497.96,1213.04 1498.55,1213.04 1499.14,1213.04 1499.72,1213.04 1500.31,1213.04 1500.9,1213.04 1501.48,1213.04 1502.07,1213.04 1502.65,1213.04 1503.24,1213.04 1503.83,1213.04 1504.41,1213.04 1505,1213.04 1505.59,1213.04 1506.17,1213.04 1506.76,1213.04 1507.35,1213.04 1507.93,1213.04 1508.52,1213.04 1509.11,1213.04 1509.69,1213.04 1510.28,1213.04 1510.86,1213.04 1511.45,1213.04 1512.04,1213.04 1512.62,1213.04 1513.21,1213.04 1513.8,1213.04 1514.38,1213.04 1514.97,1213.04 1515.56,1213.04 1516.14,1213.04 1516.73,1213.04 1517.32,1213.04 1517.9,1213.04 1518.49,1213.04 1519.07,1213.04 1519.66,1213.04 1520.25,1213.04 1520.83,1213.04 1521.42,1213.04 1522.01,1213.04 1522.59,1213.04 1523.18,1213.04 1523.77,1213.04 1524.35,1213.04 1524.94,1213.04 1525.52,1213.04 1526.11,1213.04 1526.7,1213.04 1527.28,1213.04 1527.87,1213.04 1528.46,1213.04 1529.04,1213.04 1529.63,1213.04 1530.22,1213.04 1530.8,1213.04 1531.39,1213.04 1531.98,1213.04 1532.56,1213.04 1533.15,1213.04 1533.73,1213.04 1534.32,1213.04 1534.91,1213.04 1535.49,1213.04 1536.08,1213.04 1536.67,1213.04 1537.25,1213.04 1537.84,1213.04 1538.43,1213.04 1539.01,1213.04 1539.6,1213.04 1540.19,1213.04 1540.77,1213.04 1541.36,1213.04 1541.94,1213.04 1542.53,1213.04 1543.12,1213.04 1543.7,1213.04 1544.29,1213.04 1544.88,1213.04 1545.46,1213.04 1546.05,1213.04 1546.64,1213.04 1547.22,1213.04 1547.81,1213.04 1548.4,1213.04 1548.98,1213.04 1549.57,1213.04 1550.15,1213.04 1550.74,1213.04 1551.33,1213.04 1551.91,1213.04 1552.5,1213.04 1553.09,1213.04 1553.67,1213.04 1554.26,1213.04 1554.85,1213.04 1555.43,1213.04 1556.02,1213.04 1556.6,1213.04 1557.19,1213.04 1557.78,1213.04 1558.36,1213.04 1558.95,1213.04 1559.54,1213.04 1560.12,1213.04 1560.71,1213.04 1561.3,1213.04 1561.88,1213.04 1562.47,1213.04 1563.06,1213.04 1563.64,1213.04 1564.23,1213.04 1564.81,1213.04 1565.4,1213.04 1565.99,1213.04 1566.57,1213.04 1567.16,1213.04 1567.75,1213.04 1568.33,1213.04 1568.92,1213.04 1569.51,1213.04 1570.09,1213.04 1570.68,1213.04 1571.27,1213.04 1571.85,1213.04 1572.44,1213.04 1573.02,1213.04 1573.61,1213.04 1574.2,1213.04 1574.78,1213.04 1575.37,1213.04 1575.96,1213.04 1576.54,1213.04 1577.13,1213.04 1577.72,1213.04 1578.3,1213.04 1578.89,1213.04 1579.47,1213.04 1580.06,1213.04 1580.65,1213.04 1581.23,1213.04 1581.82,1213.04 1582.41,1213.04 1582.99,1213.04 1583.58,1213.04 1584.17,1213.04 1584.75,1213.04 1585.34,1213.04 1585.93,1213.04 1586.51,1213.04 1587.1,1213.04 1587.68,1213.04 1588.27,1213.04 1588.86,1213.04 1589.44,1213.04 1590.03,1213.04 1590.62,1213.04 1591.2,1213.04 1591.79,1213.04 1592.38,1213.04 1592.96,1213.04 1593.55,1213.04 1594.14,1213.04 1594.72,1213.04 1595.31,1213.04 1595.89,1213.04 1596.48,1213.04 1597.07,1213.04 1597.65,1213.04 1598.24,1213.04 1598.83,1213.04 1599.41,1213.04 1600,1213.04 1600.59,1213.04 1601.17,1213.04 1601.76,1213.04 1602.34,1213.04 1602.93,1213.04 1603.52,1213.04 1604.1,1213.04 1604.69,1213.04 1605.28,1213.04 1605.86,1213.04 1606.45,1213.04 1607.04,1213.04 1607.62,1213.04 1608.21,1213.04 1608.8,1213.04 1609.38,1213.04 1609.97,1213.04 1610.55,1213.04 1611.14,1213.04 1611.73,1213.04 1612.31,1213.04 1612.9,1213.04 1613.49,1213.04 1614.07,1213.04 1614.66,1213.04 1615.25,1213.04 1615.83,1213.04 1616.42,1213.04 1617.01,1213.04 1617.59,1213.04 1618.18,1213.04 1618.76,1213.04 1619.35,1213.04 1619.94,1213.04 1620.52,1213.04 1621.11,1213.04 1621.7,1213.04 1622.28,1213.04 1622.87,1213.04 1623.46,1213.04 1624.04,1213.04 1624.63,1213.04 1625.22,1213.04 1625.8,1213.04 1626.39,1213.04 1626.97,1213.04 1627.56,1213.04 1628.15,1213.04 1628.73,1213.04 1629.32,1213.04 1629.91,1213.04 1630.49,1213.04 1631.08,1213.04 1631.67,1213.04 1632.25,1213.04 1632.84,1213.04 1633.42,1213.04 1634.01,1213.04 1634.6,1213.04 1635.18,1213.04 1635.77,1213.04 1636.36,1213.04 1636.94,1213.04 1637.53,1213.04 1638.12,1213.04 1638.7,1213.04 1639.29,1213.04 1639.88,1213.04 1640.46,1213.04 1641.05,1213.04 1641.63,1213.04 1642.22,1213.04 1642.81,1213.04 1643.39,1213.04 1643.98,1213.04 1644.57,1213.04 1645.15,1213.04 1645.74,1213.04 1646.33,1213.04 1646.91,1213.04 1647.5,1213.04 1648.09,1213.04 1648.67,1213.04 1649.26,1213.04 1649.84,1213.04 1650.43,1213.04 1651.02,1213.04 1651.6,1213.04 1652.19,1213.04 1652.78,1213.04 1653.36,1213.04 1653.95,1213.04 1654.54,1213.04 1655.12,1213.04 1655.71,1213.04 1656.29,1213.04 1656.88,1213.04 1657.47,1213.04 1658.05,1213.04 1658.64,1213.04 1659.23,1213.04 1659.81,1213.04 1660.4,1213.04 1660.99,1213.04 1661.57,1213.04 1662.16,1213.04 1662.75,1213.04 1663.33,1213.04 1663.92,1213.04 1664.5,1213.04 1665.09,1213.04 1665.68,1213.04 1666.26,1213.04 1666.85,1213.04 1667.44,1213.04 1668.02,1213.04 1668.61,1213.04 1669.2,1213.04 1669.78,1213.04 1670.37,1213.04 1670.96,1213.04 1671.54,1213.04 1672.13,1213.04 1672.71,1213.04 1673.3,1213.04 1673.89,1213.04 1674.47,1213.04 1675.06,1213.04 1675.65,1213.04 1676.23,1213.04 1676.82,1213.04 1677.41,1213.04 1677.99,1213.04 1678.58,1213.04 1679.17,1213.04 1679.75,1213.04 1680.34,1213.04 1680.92,1213.04 1681.51,1213.04 1682.1,1213.04 1682.68,1213.04 1683.27,1213.04 1683.86,1213.04 1684.44,1213.04 1685.03,1213.04 1685.62,1213.04 1686.2,1213.04 1686.79,1213.04 1687.37,1213.04 1687.96,1213.04 1688.55,1213.04 1689.13,1213.04 1689.72,1213.04 1690.31,1213.04 1690.89,1213.04 1691.48,1213.04 1692.07,1213.04 1692.65,1213.04 1693.24,1213.04 1693.83,1213.04 1694.41,1213.04 1695,1213.04 1695.58,1213.04 1696.17,1213.04 1696.76,1213.04 1697.34,1213.04 1697.93,1213.04 1698.52,1213.04 1699.1,1213.04 1699.69,1213.04 1700.28,1213.04 1700.86,1213.04 1701.45,1213.04 1702.04,1213.04 1702.62,1213.04 1703.21,1213.04 1703.79,1213.04 1704.38,1213.04 1704.97,1213.04 1705.55,1213.04 1706.14,1213.04 1706.73,1213.04 1707.31,1213.04 1707.9,1213.04 1708.49,1213.04 1709.07,1213.04 1709.66,1213.04 1710.24,1213.04 1710.83,1213.04 1711.42,1213.04 1712,1213.04 1712.59,1213.04 1713.18,1213.04 1713.76,1213.04 1714.35,1213.04 1714.94,1213.04 1715.52,1213.04 1716.11,1213.04 1716.7,1213.04 1717.28,1213.04 1717.87,1213.04 1718.45,1213.04 1719.04,1213.04 1719.63,1213.04 1720.21,1213.04 1720.8,1213.04 1721.39,1213.04 1721.97,1213.04 1722.56,1213.04 1723.15,1213.04 1723.73,1213.04 1724.32,1213.04 1724.91,1213.04 1725.49,1213.04 1726.08,1213.04 1726.66,1213.04 1727.25,1213.04 1727.84,1213.04 1728.42,1213.04 1729.01,1213.04 1729.6,1213.04 1730.18,1213.04 1730.77,1213.04 1731.36,1213.04 1731.94,1213.04 1732.53,1213.04 1733.11,1213.04 1733.7,1213.04 1734.29,1213.04 1734.87,1213.04 1735.46,1213.04 1736.05,1213.04 1736.63,1213.04 1737.22,1213.04 1737.81,1213.04 1738.39,1213.04 1738.98,1213.04 1739.57,1213.04 1740.15,1213.04 1740.74,1213.04 1741.32,1213.04 1741.91,1213.04 1742.5,1213.04 1743.08,1213.04 1743.67,1213.04 1744.26,1213.04 1744.84,1213.04 1745.43,1213.04 1746.02,1213.04 1746.6,1213.04 1747.19,1213.04 1747.78,1213.04 1748.36,1213.04 1748.95,1213.04 1749.53,1213.04 1750.12,1213.04 1750.71,1213.04 1751.29,1213.04 1751.88,1213.04 1752.47,1213.04 1753.05,1213.04 1753.64,1213.04 1754.23,1213.04 1754.81,1213.04 1755.4,1213.04 1755.99,1213.04 1756.57,1213.04 1757.16,1213.04 1757.74,1213.04 1758.33,1213.04 1758.92,1213.04 1759.5,1213.04 1760.09,1213.04 1760.68,1213.04 1761.26,1213.04 1761.85,1213.04 1762.44,1213.04 1763.02,1213.04 1763.61,1213.04 1764.19,1213.04 1764.78,1213.04 1765.37,1213.04 1765.95,1213.04 1766.54,1213.04 1767.13,1213.04 1767.71,1213.04 1768.3,1213.04 1768.89,1213.04 1769.47,1213.04 1770.06,1213.04 1770.65,1213.04 1771.23,1213.04 1771.82,1213.04 1772.4,1213.04 1772.99,1213.04 1773.58,1213.04 1774.16,1213.04 1774.75,1213.04 1775.34,1213.04 1775.92,1213.04 1776.51,1213.04 1777.1,1213.04 1777.68,1213.04 1778.27,1213.04 1778.86,1213.04 1779.44,1213.04 1780.03,1213.04 1780.61,1213.04 1781.2,1213.04 1781.79,1213.04 1782.37,1213.04 1782.96,1213.04 1783.55,1213.04 1784.13,1213.04 1784.72,1213.04 1785.31,1213.04 1785.89,1213.04 1786.48,1213.04 1787.06,1213.04 1787.65,1213.04 1788.24,1213.04 1788.82,1213.04 1789.41,1213.04 1790,1213.04 1790.58,1213.04 1791.17,1213.04 1791.76,1213.04 1792.34,1213.04 1792.93,1213.04 1793.52,1213.04 1794.1,1213.04 1794.69,1213.04 1795.27,1213.04 1795.86,1213.04 1796.45,1213.04 1797.03,1213.04 1797.62,1213.04 1798.21,1213.04 1798.79,1213.04 1799.38,1213.04 1799.97,1213.04 1800.55,1213.04 1801.14,1213.04 1801.73,1213.04 1802.31,1213.04 1802.9,1213.04 1803.48,1213.04 1804.07,1213.04 1804.66,1213.04 1805.24,1213.04 1805.83,1213.04 1806.42,1213.04 1807,1213.04 1807.59,1213.04 1808.18,1213.04 1808.76,1213.04 1809.35,1213.04 1809.94,1213.04 1810.52,1213.04 1811.11,1213.04 1811.69,1213.04 1812.28,1213.04 1812.87,1213.04 1813.45,1213.04 1814.04,1213.04 1814.63,1213.04 1815.21,1213.04 1815.8,1213.04 1816.39,1213.04 1816.97,1213.04 1817.56,1213.04 1818.14,1213.04 1818.73,1213.04 1819.32,1213.04 1819.9,1213.04 1820.49,1213.04 1821.08,1213.04 1821.66,1213.04 1822.25,1213.04 1822.84,1213.04 1823.42,1213.04 1824.01,1213.04 1824.6,1213.04 1825.18,1213.04 1825.77,1213.04 1826.35,1213.04 1826.94,1213.04 1827.53,1213.04 1828.11,1213.04 1828.7,1213.04 1829.29,1213.04 1829.87,1213.04 1830.46,1213.04 1831.05,1213.04 1831.63,1213.04 1832.22,1213.04 1832.81,1213.04 1833.39,1213.04 1833.98,1213.04 1834.56,1213.04 1835.15,1213.04 1835.74,1213.04 1836.32,1213.04 1836.91,1213.04 1837.5,1213.04 1838.08,1213.04 1838.67,1213.04 1839.26,1213.04 1839.84,1213.04 1840.43,1213.04 1841.01,1213.04 1841.6,1213.04 1842.19,1213.04 1842.77,1213.04 1843.36,1213.04 1843.95,1213.04 1844.53,1213.04 1845.12,1213.04 1845.71,1213.04 1846.29,1213.04 1846.88,1213.04 1847.47,1213.04 1848.05,1213.04 1848.64,1213.04 1849.22,1213.04 1849.81,1213.04 1850.4,1213.04 1850.98,1213.04 1851.57,1213.04 1852.16,1213.04 1852.74,1213.04 1853.33,1213.04 1853.92,1213.04 1854.5,1213.04 1855.09,1213.04 1855.68,1213.04 1856.26,1213.04 1856.85,1213.04 1857.43,1213.04 1858.02,1213.04 1858.61,1213.04 1859.19,1213.04 1859.78,1213.04 1860.37,1213.04 1860.95,1213.04 1861.54,1213.04 1862.13,1213.04 1862.71,1213.04 1863.3,1213.04 1863.88,1213.04 1864.47,1213.04 1865.06,1213.04 1865.64,1213.04 1866.23,1213.04 1866.82,1213.04 1867.4,1213.04 1867.99,1213.04 1868.58,1213.04 1869.16,1213.04 1869.75,1213.04 1870.34,1213.04 1870.92,1213.04 1871.51,1213.04 1872.09,1213.04 1872.68,1213.04 1873.27,1213.04 1873.85,1213.04 1874.44,1213.04 1875.03,1213.04 1875.61,1213.04 1876.2,1213.04 1876.79,1213.04 1877.37,1213.04 1877.96,1213.04 1878.55,1213.04 1879.13,1213.04 1879.72,1213.04 1880.3,1213.04 1880.89,1213.04 1881.48,1213.04 1882.06,1213.04 1882.65,1213.04 1883.24,1213.04 1883.82,1213.04 1884.41,1213.04 1885,1213.04 1885.58,1213.04 1886.17,1213.04 1886.76,1213.04 1887.34,1213.04 1887.93,1213.04 1888.51,1213.04 1889.1,1213.04 1889.69,1213.04 1890.27,1213.04 1890.86,1213.04 1891.45,1213.04 1892.03,1213.04 1892.62,1213.04 1893.21,1213.04 1893.79,1213.04 1894.38,1213.04 1894.96,1213.04 1895.55,1213.04 1896.14,1213.04 1896.72,1213.04 1897.31,1213.04 1897.9,1213.04 1898.48,1213.04 1899.07,1213.04 1899.66,1213.04 1900.24,1213.04 1900.83,1213.04 1901.42,1213.04 1902,1213.04 1902.59,1213.04 1903.17,1213.04 1903.76,1213.04 1904.35,1213.04 1904.93,1213.04 1905.52,1213.04 1906.11,1213.04 1906.69,1213.04 1907.28,1213.04 1907.87,1213.04 1908.45,1213.04 1909.04,1213.04 1909.63,1213.04 1910.21,1213.04 1910.8,1213.04 1911.38,1213.04 1911.97,1213.04 1912.56,1213.04 1913.14,1213.04 1913.73,1213.04 1914.32,1213.04 1914.9,1213.04 1915.49,1213.04 1916.08,1213.04 1916.66,1213.04 1917.25,1213.04 1917.83,1213.04 1918.42,1213.04 1919.01,1213.04 1919.59,1213.04 1920.18,1213.04 1920.77,1213.04 1921.35,1213.04 1921.94,1213.04 1922.53,1213.04 1923.11,1213.04 1923.7,1213.04 1924.29,1213.04 1924.87,1213.04 1925.46,1213.04 1926.04,1213.04 1926.63,1213.04 1927.22,1213.04 1927.8,1213.04 1928.39,1213.04 1928.98,1213.04 1929.56,1213.04 1930.15,1213.04 1930.74,1213.04 1931.32,1213.04 1931.91,1213.04 1932.5,1213.04 1933.08,1213.04 1933.67,1213.04 1934.25,1213.04 1934.84,1213.04 1935.43,1213.04 1936.01,1213.04 1936.6,1213.04 1937.19,1213.04 1937.77,1213.04 1938.36,1213.04 1938.95,1213.04 1939.53,1213.04 1940.12,1213.04 1940.71,1213.04 1941.29,1213.04 1941.88,1213.04 1942.46,1213.04 1943.05,1213.04 1943.64,1213.04 1944.22,1213.04 1944.81,1213.04 1945.4,1213.04 1945.98,1213.04 1946.57,1213.04 1947.16,1213.04 1947.74,1213.04 1948.33,1213.04 1948.91,1213.04 1949.5,1213.04 1950.09,1213.04 1950.67,1213.04 1951.26,1213.04 1951.85,1213.04 1952.43,1213.04 1953.02,1213.04 1953.61,1213.04 1954.19,1213.04 1954.78,1213.04 1955.37,1213.04 1955.95,1213.04 1956.54,1213.04 1957.12,1213.04 1957.71,1213.04 1958.3,1213.04 1958.88,1213.04 1959.47,1213.04 1960.06,1213.04 1960.64,1213.04 1961.23,1213.04 1961.82,1213.04 1962.4,1213.04 1962.99,1213.04 1963.58,1213.04 1964.16,1213.04 1964.75,1213.04 1965.33,1213.04 1965.92,1213.04 1966.51,1213.04 1967.09,1213.04 1967.68,1213.04 1968.27,1213.04 1968.85,1213.04 1969.44,1213.04 1970.03,1213.04 1970.61,1213.04 1971.2,1213.04 1971.78,1213.04 1972.37,1213.04 1972.96,1213.04 1973.54,1213.04 1974.13,1213.04 1974.72,1213.04 1975.3,1213.04 1975.89,1213.04 1976.48,1213.04 1977.06,1213.04 1977.65,1213.04 1978.24,1213.04 1978.82,1213.04 1979.41,1213.04 1979.99,1213.04 1980.58,1213.04 1981.17,1213.04 1981.75,1213.04 1982.34,1213.04 1982.93,1213.04 1983.51,1213.04 1984.1,1213.04 1984.69,1213.04 1985.27,1213.04 1985.86,1213.04 1986.45,1213.04 1987.03,1213.04 1987.62,1213.04 1988.2,1213.04 1988.79,1213.04 1989.38,1213.04 1989.96,1213.04 1990.55,1213.04 1991.14,1213.04 1991.72,1213.04 1992.31,1213.04 1992.9,1213.04 1993.48,1213.04 1994.07,1213.04 1994.65,1213.04 1995.24,1213.04 1995.83,1213.04 1996.41,1213.04 1997,1213.04 1997.59,1213.04 1998.17,1213.04 1998.76,1213.04 1999.35,1213.04 1999.93,1213.04 2000.52,1213.04 2001.11,1213.04 2001.69,1213.04 2002.28,1213.04 2002.86,1213.04 2003.45,1213.04 2004.04,1213.04 2004.62,1213.04 2005.21,1213.04 2005.8,1213.04 2006.38,1213.04 2006.97,1213.04 2007.56,1213.04 2008.14,1213.04 2008.73,1213.04 2009.32,1213.04 2009.9,1213.04 2010.49,1213.04 2011.07,1213.04 2011.66,1213.04 2012.25,1213.04 2012.83,1213.04 2013.42,1213.04 2014.01,1213.04 2014.59,1213.04 2015.18,1213.04 2015.77,1213.04 2016.35,1213.04 2016.94,1213.04 2017.53,1213.04 2018.11,1213.04 2018.7,1213.04 2019.28,1213.04 2019.87,1213.04 2020.46,1213.04 2021.04,1213.04 2021.63,1213.04 2022.22,1213.04 2022.8,1213.04 2023.39,1213.04 2023.98,1213.04 2024.56,1213.04 2025.15,1213.04 2025.73,1213.04 2026.32,1213.04 2026.91,1213.04 2027.49,1213.04 2028.08,1213.04 2028.67,1213.04 2029.25,1213.04 2029.84,1213.04 2030.43,1213.04 2031.01,1213.04 2031.6,1213.04 2032.19,1213.04 2032.77,1213.04 2033.36,1213.04 2033.94,1213.04 2034.53,1213.04 2035.12,1213.04 2035.7,1213.04 2036.29,1213.04 2036.88,1213.04 2037.46,1213.04 2038.05,1213.04 2038.64,1213.04 2039.22,1213.04 2039.81,1213.04 2040.4,1213.04 2040.98,1213.04 2041.57,1213.04 2042.15,1213.04 2042.74,1213.04 2043.33,1213.04 2043.91,1213.04 2044.5,1213.04 2045.09,1213.04 2045.67,1213.04 2046.26,1213.04 2046.85,1213.04 2047.43,1213.04 2048.02,1213.04 2048.6,1213.04 2049.19,1213.04 2049.78,1213.04 2050.36,1213.04 2050.95,1213.04 2051.54,1213.04 2052.12,1213.04 2052.71,1213.04 2053.3,1213.04 2053.88,1213.04 2054.47,1213.04 2055.06,1213.04 2055.64,1213.04 2056.23,1213.04 2056.81,1213.04 2057.4,1213.04 2057.99,1213.04 2058.57,1213.04 2059.16,1213.04 2059.75,1213.04 2060.33,1213.04 2060.92,1213.04 2061.51,1213.04 2062.09,1213.04 2062.68,1213.04 2063.27,1213.04 2063.85,1213.04 2064.44,1213.04 2065.02,1213.04 2065.61,1213.04 2066.2,1213.04 2066.78,1213.04 2067.37,1213.04 2067.96,1213.04 2068.54,1213.04 2069.13,1213.04 2069.72,1213.04 2070.3,1213.04 2070.89,1213.04 2071.48,1213.04 2072.06,1213.04 2072.65,1213.04 2073.23,1213.04 2073.82,1213.04 2074.41,1213.04 2074.99,1213.04 2075.58,1213.04 2076.17,1213.04 2076.75,1213.04 2077.34,1213.04 2077.93,1213.04 2078.51,1213.04 2079.1,1213.04 2079.68,1213.04 2080.27,1213.04 2080.86,1213.04 2081.44,1213.04 2082.03,1213.04 2082.62,1213.04 2083.2,1213.04 2083.79,1213.04 2084.38,1213.04 2084.96,1213.04 2085.55,1213.04 2086.14,1213.04 2086.72,1213.04 2087.31,1213.04 2087.89,1213.04 2088.48,1213.04 2089.07,1213.04 2089.65,1213.04 2090.24,1213.04 2090.83,1213.04 2091.41,1213.04 2092,1213.04 2092.59,1213.04 2093.17,1213.04 2093.76,1213.04 2094.35,1213.04 2094.93,1213.04 2095.52,1213.04 2096.1,1213.04 2096.69,1213.04 2097.28,1213.04 2097.86,1213.04 2098.45,1213.04 2099.04,1213.04 2099.62,1213.04 2100.21,1213.04 2100.8,1213.04 2101.38,1213.04 2101.97,1213.04 2102.55,1213.04 2103.14,1213.04 2103.73,1213.04 2104.31,1213.04 2104.9,1213.04 2105.49,1213.04 2106.07,1213.04 2106.66,1213.04 2107.25,1213.04 2107.83,1213.04 2108.42,1213.04 2109.01,1213.04 2109.59,1213.04 2110.18,1213.04 2110.76,1213.04 2111.35,1213.04 2111.94,1213.04 2112.52,1213.04 2113.11,1213.04 2113.7,1213.04 2114.28,1213.04 2114.87,1213.04 2115.46,1213.04 2116.04,1213.04 2116.63,1213.04 2117.22,1213.04 2117.8,1213.04 2118.39,1213.04 2118.97,1213.04 2119.56,1213.04 2120.15,1213.04 2120.73,1213.04 2121.32,1213.04 2121.91,1213.04 2122.49,1213.04 2123.08,1213.04 2123.67,1213.04 2124.25,1213.04 2124.84,1213.04 2125.42,1213.04 2126.01,1213.04 2126.6,1213.04 2127.18,1213.04 2127.77,1213.04 2128.36,1213.04 2128.94,1213.04 2129.53,1213.04 2130.12,1213.04 2130.7,1213.04 2131.29,1213.04 2131.88,1213.04 2132.46,1213.04 2133.05,1213.04 2133.63,1213.04 2134.22,1213.04 2134.81,1213.04 2135.39,1213.04 2135.98,1213.04 2136.57,1213.04 2137.15,1213.04 2137.74,1213.04 2138.33,1213.04 2138.91,1213.04 2139.5,1213.04 2140.09,1213.04 2140.67,1213.04 2141.26,1213.04 2141.84,1213.04 2142.43,1213.04 2143.02,1213.04 2143.6,1213.04 2144.19,1213.04 2144.78,1213.04 2145.36,1213.04 2145.95,1213.04 2146.54,1213.04 2147.12,1213.04 2147.71,1213.04 2148.3,1213.04 2148.88,1213.04 2149.47,1213.04 2150.05,1213.04 2150.64,1213.04 2151.23,1213.04 2151.81,1213.04 2152.4,1213.04 2152.99,1213.04 2153.57,1213.04 2154.16,1213.04 2154.75,1213.04 2155.33,1213.04 2155.92,1213.04 2156.5,1213.04 2157.09,1213.04 2157.68,1213.04 2158.26,1213.04 \"/>\n<polyline clip-path=\"url(#clip882)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.82,1196.42 1399.18,899.083 \"/>\n<polyline clip-path=\"url(#clip882)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1229.23 985.439,1196.42 2158.26,1196.42 2158.26,1229.23 985.439,1229.23 \"/>\n<path clip-path=\"url(#clip880)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip880)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip880)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip880)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip880)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip880)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip883\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip883)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip883)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip883)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip883)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip883)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip880)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip883)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip883)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip883)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip883)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip883)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip880)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip880)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip880)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip883)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-8122.62 164.91,-8903.13 165.469,-8354.17 166.029,-9052.18 166.588,-9682.55 167.147,-10233 167.706,-10741.9 168.266,-10270.4 168.825,-10712.4 169.384,-11091.8 169.943,-11437 170.503,-11738.2 171.062,-11998.3 171.621,-12203.3 172.18,-12390.1 172.74,-12543.4 173.299,-12140.5 173.858,-12249.6 174.417,-12331.1 174.977,-12387 175.536,-12020.7 176.095,-12027.8 176.655,-12026.8 177.214,-10747.8 177.773,-10729.3 178.332,-10691 178.892,-10642.1 179.451,-10566.8 180.01,-10484.5 180.569,-10396.4 181.129,-10097.4 181.688,-9797.72 182.247,-9498.61 182.806,-9366.24 183.366,-9231.02 183.925,-9086.42 184.484,-8947.67 185.043,-8793.76 185.603,-8634.67 186.162,-8477.3 186.721,-7976.43 187.28,-7826.48 187.84,-7575.43 188.399,-7336.18 188.958,-7000.93 189.517,-6779.2 190.077,-6648.82 190.636,-6511.88 191.195,-6377.46 191.754,-6171.93 192.314,-5973.78 192.873,-5848.95 193.432,-5655 193.991,-5462.67 194.551,-5348.59 195.11,-5163.02 195.669,-4758.48 196.228,-4602.31 196.788,-4448.43 197.347,-4300.96 197.906,-4154.08 198.465,-4056.41 199.025,-3866.02 199.584,-3682.02 200.143,-3590.22 200.702,-3459.81 201.262,-3330.54 201.821,-3202.23 202.38,-3000.6 202.939,-2920.1 203.499,-2764.39 204.058,-2545.14 204.617,-2402.41 205.176,-2266 205.736,-2097.61 206.295,-1999.43 206.854,-1844.16 207.413,-1723.48 207.973,-1637.82 208.532,-1586.21 209.091,-1443.4 209.65,-1306.95 210.21,-1263.44 210.769,-1219.8 211.328,-1122.05 211.887,-995.41 212.447,-956.924 213.006,-837.205 213.565,-776.602 214.124,-694.031 214.684,-638.368 215.243,-583.474 215.802,-554.739 216.361,-500.745 216.921,-496.654 217.48,-468.975 218.039,-439.525 218.598,-386.514 219.158,-290.382 219.717,-243.345 220.276,-198.19 220.835,-129.846 221.395,-87.6185 221.954,-70.7693 222.513,-27.955 223.072,-35.7796 223.632,-18.1665 224.191,47.9 224.75,66.0944 225.309,148.311 225.869,186.431 226.428,200.696 226.987,231.986 227.546,286.354 228.106,402.183 228.665,453.654 229.224,481.212 229.783,486.264 230.343,511.764 230.902,539.536 231.461,606.876 232.02,668.939 232.58,671.332 233.139,671.919 233.698,652.206 234.257,676.44 234.817,677.075 235.376,699.269 235.935,720.308 236.494,762.545 237.054,802.105 237.613,800.42 238.172,839.487 238.731,853.486 239.291,909.278 239.85,902.601 240.409,898.224 240.968,911.856 241.528,928.011 242.087,924.885 242.646,954.428 243.205,928.097 243.765,961.249 244.324,991.166 244.883,1001.95 245.442,976.458 246.002,1025.71 246.561,1019.2 247.12,1030.65 247.679,1022.99 248.239,1030.85 248.798,1057.2 249.357,1047.75 249.916,1057.47 250.476,1065.42 251.035,1041.55 251.594,1033.31 252.153,1031.3 252.713,1040.08 253.272,1051.64 253.831,1040.08 254.39,1016.23 254.95,1028.69 255.509,1023.17 256.068,1052.25 256.627,1028.12 257.187,1022.95 257.746,1015.49 258.305,1012.94 258.864,1012.71 259.424,1024.04 259.983,1056.31 260.542,1071.85 261.101,1098.89 261.661,1073.53 262.22,1049.32 262.779,1091.18 263.338,1097.19 263.898,1103.06 264.457,1092.79 265.016,1086.7 265.575,1080.2 266.135,1074.94 266.694,1084.92 267.253,1129.31 267.812,1106.56 268.372,1115.6 268.931,1087.32 269.49,1093.7 270.049,1088.42 270.609,1110.49 271.168,1098.62 271.727,1105.56 272.286,1099.24 272.846,1074.34 273.405,1069.26 273.964,1083.02 274.523,1076.25 275.083,1083.85 275.642,1106.8 276.201,1082.03 276.76,1092.98 277.32,1052.32 277.879,1061.95 278.438,1059.23 278.997,1003.45 279.557,952.936 280.116,968.675 280.675,984.527 281.234,1002.45 281.794,1001.18 282.353,1033.59 282.912,1013.9 283.471,1026.84 284.031,1023.41 284.59,1074.68 285.149,1065.34 285.708,1092.8 286.268,1118.93 286.827,1109.66 287.386,1105.05 287.945,1099 288.505,1108.47 289.064,1164.69 289.623,1154.14 290.182,1157.02 290.742,1164.13 291.301,1153.23 291.86,1143.96 292.419,1147.86 292.979,1135.98 293.538,1124.21 294.097,1111.12 294.656,1133.94 295.216,1141.37 295.775,1162.68 296.334,1131.07 296.893,1182.71 297.453,1171.1 298.012,1171.35 298.571,1158.55 299.13,1128.75 299.69,1102.71 300.249,1075.41 300.808,1065.49 301.368,1021.29 301.927,1000.57 302.486,1011.07 303.045,988.676 303.605,987.747 304.164,984.568 304.723,991.633 305.282,970.434 305.842,1002.28 306.401,979.202 306.96,993.875 307.519,987.243 308.079,966.284 308.638,961.802 309.197,958.733 309.756,989.141 310.316,1018.15 310.875,1027.7 311.434,1069.18 311.993,1054.83 312.553,1080.2 313.112,1091.45 313.671,1083.09 314.23,1040.18 314.79,1046.3 315.349,1021.15 315.908,1012.14 316.467,1006.36 317.027,999.448 317.586,1008.3 318.145,1019.9 318.704,1009.24 319.264,1036.95 319.823,999.292 320.382,989.558 320.941,998.501 321.501,972.808 322.06,951.446 322.619,944.514 323.178,942.331 323.738,935.215 324.297,950.703 324.856,952.905 325.415,983.445 325.975,979.394 326.534,1009.99 327.093,989.818 327.652,983.689 328.212,1026.11 328.771,1034.19 329.33,993.781 329.889,1022.69 330.449,1029.34 331.008,1037.21 331.567,1045.44 332.126,1023.39 332.686,997.878 333.245,957.546 333.804,981.308 334.363,988.943 334.923,996.999 335.482,1020.99 336.041,1009.79 336.6,1002.73 337.16,978.765 337.719,955.627 338.278,948.027 338.837,945.578 339.397,941.802 339.956,901.583 340.515,900.467 341.074,913.079 341.634,923.68 342.193,919.48 342.752,934.406 343.311,944.71 343.871,938.686 344.43,917.195 344.989,897.658 345.548,897.032 346.108,928.313 346.667,909.502 347.226,905.863 347.785,870.556 348.345,867.921 348.904,897.934 349.463,879.458 350.022,894.601 350.582,924.059 351.141,922.277 351.7,918.541 352.259,913.429 352.819,925.828 353.378,951.933 353.937,927.341 354.496,923.601 355.056,951.893 355.615,993.341 356.174,999.974 356.733,1021.4 357.293,1026.97 357.852,1001.18 358.411,944.049 358.97,938.194 359.53,934.318 360.089,945.932 360.648,920.037 361.207,914.423 361.767,924.36 362.326,981.376 362.885,988.538 363.444,975.964 364.004,953.58 364.563,932.1 365.122,925.564 365.681,933.771 366.241,959.77 366.8,954.114 367.359,947.069 367.918,938.742 368.478,914.693 369.037,910.956 369.596,907.921 370.155,921.296 370.715,932.448 371.274,925.214 371.833,920.056 372.392,930.49 372.952,873.776 373.511,873.222 374.07,854.27 374.629,833.989 375.189,852.106 375.748,835.394 376.307,802.559 376.866,801.693 377.426,819.33 377.985,806.678 378.544,801.878 379.103,787.118 379.663,805.332 380.222,836.457 380.781,862.284 381.34,841.464 381.9,838.994 382.459,835.254 383.018,861.076 383.577,856.202 384.137,851.715 384.696,847.769 385.255,860.529 385.814,872.424 386.374,851.806 386.933,865.187 387.492,861.925 388.051,846.745 388.611,876.48 389.17,854.228 389.729,838 390.288,836.424 390.848,821.519 391.407,802.724 391.966,851.4 392.525,880.327 393.085,878.79 393.644,870.856 394.203,864.802 394.762,861.157 395.322,843.467 395.881,869.233 396.44,850.1 396.999,847.368 397.559,848.74 398.118,814.111 398.677,812.871 399.236,810.793 399.796,827.875 400.355,858.665 400.914,855.199 401.473,845.754 402.033,822.951 402.592,801.767 403.151,801.66 403.71,800.356 404.27,769.439 404.829,770.244 405.388,772.074 405.947,738.68 406.507,742.039 407.066,743.811 407.625,743.842 408.184,714.735 408.744,702.165 409.303,738.784 409.862,759.076 410.421,779.455 410.981,763.422 411.54,778.508 412.099,826.083 412.658,838.54 413.218,839.628 413.777,837.869 414.336,816.882 414.895,818.142 415.455,832.617 416.014,829.086 416.573,810.229 417.132,789.375 417.692,808.841 418.251,777.774 418.81,795.103 419.369,796.433 419.929,796.817 420.488,827.75 421.047,808.141 421.606,808.847 422.166,842.934 422.725,820.265 423.284,848.795 423.843,841.988 424.403,834.535 424.962,864.43 425.521,793.929 426.08,788.801 426.64,775.475 427.199,759.81 427.758,761.741 428.318,778.152 428.877,793.118 429.436,773.047 429.995,777.333 430.555,745.358 431.114,745.941 431.673,780.159 432.232,796.003 432.792,744.325 433.351,746.468 433.91,745.274 434.469,744.906 435.029,748.277 435.588,777.264 436.147,791.295 436.706,835.218 437.266,850.35 437.825,867.006 438.384,860.984 438.943,857.464 439.503,817.773 440.062,815.795 440.621,810.608 441.18,805.786 441.74,804.432 442.299,833.992 442.858,848.023 443.417,858.029 443.977,853.513 444.536,815.374 445.095,783.147 445.654,766.549 446.214,736.89 446.773,736.296 447.332,765.783 447.891,780.788 448.451,775.558 449.01,792.125 449.569,807.877 450.128,822.68 450.688,846.523 451.247,807.228 451.806,803.79 452.365,786.024 452.925,817.115 453.484,794.126 454.043,791.715 454.602,821.651 455.162,802.004 455.721,830.768 456.28,856.823 456.839,866.516 457.399,874.009 457.958,851.126 458.517,865.486 459.076,862.094 459.636,857.915 460.195,865.444 460.754,842.038 461.313,836.414 461.873,851.651 462.432,828.083 462.991,807.099 463.55,802.292 464.11,813.478 464.669,808.264 465.228,806.184 465.787,819.274 466.347,813.843 466.906,826.724 467.465,842.201 468.024,852.788 468.584,848.249 469.143,828.496 469.702,855.924 470.261,818.952 470.821,816.917 471.38,814.407 471.939,811.679 472.498,808.041 473.058,803.983 473.617,802.597 474.176,832.171 474.735,842.132 475.295,835.879 475.854,832.248 476.413,791.909 476.972,754.857 477.532,719.723 478.091,736.852 478.65,737.914 479.209,721.58 479.769,706.26 480.328,706.916 480.887,710.3 481.446,695.884 482.006,698.72 482.565,701.188 483.124,671.697 483.683,660.051 484.243,665.15 484.802,650.707 485.361,705.008 485.92,706.204 486.48,694.444 487.039,711.998 487.598,711.179 488.157,697.402 488.717,683.453 489.276,667.953 489.835,651.391 490.394,624.156 490.954,630.926 491.513,636.769 492.072,622.441 492.631,629.119 493.191,632.569 493.75,669.747 494.309,677.488 494.868,665.764 495.428,652.519 495.987,658.328 496.546,678.39 497.105,684.237 497.665,654.501 498.224,675.328 498.783,665.004 499.342,669.635 499.902,659.028 500.461,645.894 501.02,619.034 501.579,643.288 502.139,649.317 502.698,717.977 503.257,735.632 503.816,752.719 504.376,735.293 504.935,732.582 505.494,750.26 506.053,767.137 506.613,763.325 507.172,795.36 507.731,776.167 508.29,757.524 508.85,738.275 509.409,767.859 509.968,733.272 510.527,720.164 511.087,719.776 511.646,718.64 512.205,702.56 512.764,719.388 513.324,769.692 513.883,768.175 514.442,747.727 515.001,745.399 515.561,743.352 516.12,695.11 516.679,698.726 517.238,716.973 517.798,716.535 518.357,719.424 518.916,701.787 519.475,703.24 520.035,721.691 520.594,757.15 521.153,803.666 521.712,783.209 522.272,793.359 522.831,774.878 523.39,756.071 523.949,750.946 524.509,763.682 525.068,758.461 525.627,772.845 526.186,784.9 526.746,784.988 527.305,817.372 527.864,830.379 528.423,823.848 528.983,816.266 529.542,811.449 530.101,807.248 530.66,835.552 531.22,826.636 531.779,790.913 532.338,789.192 532.897,799.453 533.457,812.402 534.016,810.02 534.575,738.63 535.134,751.122 535.694,736.622 536.253,768.608 536.812,799.685 537.371,827.39 537.931,803.719 538.49,798.596 539.049,762.175 539.608,742.782 540.168,792.627 540.727,753.9 541.286,751.198 541.845,765.53 542.405,781.747 542.964,807.599 543.523,837.637 544.082,843.04 544.642,822.049 545.201,803.529 545.76,816.758 546.319,798.99 546.879,829.766 547.438,789.113 547.997,783.913 548.556,794.68 549.116,772.686 549.675,801.096 550.234,781.113 550.793,745.619 551.353,694.8 551.912,676.826 552.471,665.096 553.031,670.535 553.59,689.227 554.149,671.797 554.708,655.643 555.268,658.994 555.827,696.423 556.386,697.425 556.945,696.43 557.505,698.842 558.064,716.623 558.623,700.133 559.182,715.44 559.742,696.931 560.301,665.13 560.86,667.594 561.419,669.609 561.979,657.659 562.538,629.775 563.097,699.641 563.656,720.516 564.216,754.295 564.775,717.515 565.334,714.371 565.893,731.336 566.453,716.226 567.012,715.831 567.571,683.744 568.13,703.778 568.69,721.578 569.249,720.751 569.808,723.127 570.367,706.514 570.927,689.183 571.486,721.949 572.045,721.103 572.604,770.423 573.164,782.91 573.723,764.616 574.282,731.149 574.841,697.271 575.401,682.472 575.96,682.689 576.519,668.167 577.078,620.031 577.638,604.983 578.197,629.347 578.756,603.195 579.315,578.009 579.875,634.897 580.434,639.121 580.993,641.702 581.552,646.994 582.112,621.399 582.671,597.27 583.23,603.717 583.789,625.683 584.349,597.156 584.908,637.604 585.467,642.869 586.026,678.44 586.586,695.858 587.145,695.268 587.704,697.132 588.263,711.897 588.823,730.942 589.382,729.828 589.941,749.079 590.5,781.457 591.06,758.985 591.619,722.962 592.178,724.574 592.737,724.603 593.297,740.851 593.856,754.801 594.415,700.879 594.974,732.453 595.534,735.411 596.093,750.416 596.652,766.622 597.211,763.781 597.771,793.513 598.33,774.467 598.889,786.228 599.448,799.757 600.008,794.3 600.567,776.133 601.126,759.092 601.685,760.379 602.245,772.907 602.804,770.768 603.363,766.904 603.922,748.742 604.482,732.496 605.041,730.003 605.6,728.051 606.159,710.447 606.719,713.9 607.278,695.712 607.837,714.28 608.396,711.39 608.956,693.043 609.515,708.597 610.074,725.643 610.633,723.603 611.193,722.56 611.752,691.99 612.311,644.826 612.87,647.553 613.43,668.283 613.989,692.13 614.548,691.912 615.107,679.529 615.667,710.825 616.226,724.486 616.785,741.162 617.344,710.451 617.904,725.324 618.463,723.38 619.022,705.16 619.581,658.301 620.141,644.956 620.7,696.819 621.259,694.062 621.818,681.589 622.378,681.372 622.937,699.456 623.496,700.386 624.055,703.837 624.615,685.204 625.174,684.342 625.733,685.063 626.292,674.099 626.852,690.486 627.411,670.852 627.97,658.567 628.529,680.048 629.089,683.445 629.648,681.45 630.207,695.282 630.766,676.525 631.326,678.602 631.885,695.136 632.444,693.28 633.003,710.701 633.563,678.539 634.122,697.762 634.681,743.381 635.24,741.048 635.8,770.697 636.359,785.362 636.918,768.312 637.477,762.661 638.037,804.64 638.596,783.331 639.155,729.765 639.714,710.327 640.274,694.185 640.833,691.753 641.392,706.57 641.951,721.682 642.511,701.924 643.07,714.466 643.629,712.981 644.188,711.675 644.748,723.542 645.307,739.598 645.866,740.358 646.425,737.008 646.985,732.621 647.544,779.818 648.103,774.87 648.662,726.117 649.222,707.367 649.781,705.738 650.34,707.519 650.899,689.431 651.459,686.15 652.018,717.647 652.577,717.939 653.136,698.793 653.696,701.156 654.255,704.938 654.814,692.309 655.373,675.425 655.933,642.708 656.492,630.928 657.051,637.286 657.61,607.181 658.17,631.898 658.729,601.901 659.288,610.386 659.847,634.912 660.407,639.574 660.966,642.674 661.525,629.135 662.084,666.283 662.644,672.064 663.203,672.815 663.762,677.381 664.321,708.614 664.881,722.94 665.44,721.692 665.999,687.711 666.558,717.466 667.118,716.032 667.677,716.303 668.236,731.112 668.795,729.559 669.355,714.343 669.914,696.724 670.473,708.656 671.032,708.175 671.592,692.113 672.151,713.094 672.71,696.008 673.269,711.142 673.829,730.41 674.388,710.863 674.947,713.056 675.506,712.494 676.066,727.122 676.625,755.659 677.184,750.326 677.743,746.549 678.303,725.19 678.862,726.004 679.421,722.107 679.981,751.472 680.54,731.282 681.099,729.248 681.658,728.984 682.218,723.904 682.777,721.85 683.336,750.479 683.895,746.961 684.455,743.595 685.014,743.954 685.573,690.945 686.132,755.276 686.692,736.363 687.251,731.579 687.81,711.158 688.369,681.471 688.929,704.403 689.488,719.797 690.047,701.077 690.606,702.243 691.166,684.389 691.725,652.741 692.284,603.423 692.843,594.669 693.403,600.356 693.962,639.323 694.521,641.224 695.08,663.104 695.64,648.207 696.199,667.772 696.758,652.771 697.317,658.539 697.877,710.018 698.436,725.147 698.995,754.919 699.554,784.272 700.114,829.88 700.673,824.218 701.232,819.091 701.791,811.855 702.351,810.029 702.91,802.145 703.469,780.692 704.028,775.321 704.588,788.441 705.147,763.893 705.706,765.127 706.265,779.561 706.825,823.308 707.384,766.013 707.943,764.312 708.502,776.969 709.062,775.174 709.621,739.501 710.18,737.078 710.739,734.458 711.299,728.517 711.858,710.658 712.417,709.076 712.976,706.742 713.536,673.78 714.095,630.436 714.654,649.133 715.213,667.098 715.773,650.31 716.332,635.444 716.891,636.325 717.45,658.578 718.01,643.528 718.569,645.818 719.128,632.302 719.687,633.74 720.247,602.713 720.806,638.677 721.365,641.948 721.924,645.902 722.484,678.939 723.043,673.62 723.602,689.4 724.161,689.631 724.721,670.497 725.28,669.151 725.839,671.964 726.398,639.676 726.958,641.163 727.517,674.858 728.076,675.612 728.635,691.652 729.195,723.942 729.754,719.64 730.313,714.553 730.872,701.786 731.432,718.298 731.991,684.74 732.55,687.602 733.109,688.004 733.669,691.21 734.228,707.959 734.787,739.27 735.346,767.569 735.906,794.734 736.465,806.66 737.024,752.479 737.583,764.854 738.143,774.705 738.702,704.771 739.261,718.493 739.82,714.95 740.38,693.127 740.939,725.499 741.498,735.621 742.057,732.516 742.617,715.125 743.176,698.785 743.735,683.459 744.294,701.434 744.854,666.774 745.413,686.429 745.972,687.076 746.531,686.371 747.091,704.795 747.65,672.194 748.209,670.201 748.768,670.926 749.328,674.793 749.887,707.265 750.446,708.8 751.005,707.337 751.565,708.031 752.124,707.826 752.683,753.452 753.242,751.021 753.802,730.104 754.361,724.027 754.92,736.451 755.479,732.51 756.039,716.825 756.598,715.583 757.157,699.699 757.716,734.6 758.276,730.78 758.835,729.383 759.394,698.696 759.953,666.116 760.513,735.015 761.072,731.73 761.631,730.232 762.19,727.487 762.75,738.778 763.309,749.355 763.868,762.761 764.427,804.858 764.987,783.929 765.546,763.646 766.105,775.824 766.664,789.17 767.224,800.356 767.783,778.935 768.342,790.24 768.901,770.373 769.461,766.839 770.02,762.148 770.579,756.105 771.138,750.368 771.698,763.186 772.257,742.906 772.816,722.713 773.375,719.7 773.935,721.651 774.494,669.913 775.053,721.146 775.612,717.72 776.172,733.099 776.731,713.803 777.29,729.509 777.849,760.075 778.409,741.518 778.968,737.936 779.527,736.504 780.086,748.871 780.646,763.066 781.205,744.688 781.764,696.827 782.323,711.477 782.883,727.477 783.442,697.381 784.001,680.663 784.56,699.043 785.12,694.72 785.679,696.832 786.238,728.038 786.797,709.185 787.357,689.384 787.916,704.485 788.475,701.388 789.034,714.852 789.594,710.474 790.153,692.732 790.712,692.658 791.271,692.992 791.831,625.44 792.39,632.919 792.949,640.836 793.508,625.928 794.068,594.642 794.627,631.207 795.186,619.624 795.745,606.961 796.305,594.642 796.864,598.234 797.423,616.771 797.982,623.283 798.542,626.744 799.101,564.384 799.66,554.581 800.219,580.626 800.779,519.97 801.338,576.304 801.897,566.457 802.456,542.101 803.016,531.812 803.575,573.146 804.134,597.323 804.693,586.287 805.253,609.277 805.812,647.894 806.371,646.769 806.931,648.849 807.49,650.045 808.049,653.239 808.608,620.927 809.168,656.158 809.727,657.426 810.286,670.685 810.845,642.591 811.405,631.412 811.964,605.406 812.523,623.211 813.082,625.18 813.642,628.344 814.201,634.603 814.76,622.819 815.319,658.58 815.879,661.639 816.438,665.217 816.997,651.548 817.556,685.356 818.116,685.509 818.675,640.854 819.234,678.271 819.793,694.531 820.353,691.043 820.912,706.999 821.471,692.089 822.03,721.771 822.59,734.666 823.149,748.506 823.708,778.071 824.267,774.887 824.827,776.573 825.386,773.383 825.945,766.12 826.504,779.191 827.064,711.619 827.623,761.589 828.182,740.798 828.741,721.802 829.301,717.129 829.86,698.929 830.419,697.455 830.978,714.108 831.538,728.185 832.097,725.989 832.656,742.748 833.215,739.862 833.775,739.129 834.334,733.335 834.893,728.043 835.452,726.39 836.012,740.125 836.571,723.834 837.13,740.442 837.689,757.518 838.249,740.98 838.808,737.885 839.367,734.213 839.926,714.686 840.486,711.989 841.045,680.379 841.604,731.157 842.163,712.625 842.723,724.736 843.282,708.742 843.841,720.822 844.4,700.683 844.96,681.978 845.519,682.151 846.078,686.783 846.637,717.336 847.197,749.488 847.756,758.345 848.315,771.308 848.874,796.829 849.434,822.758 849.993,799.907 850.552,777.652 851.111,755.835 851.671,751.021 852.23,731.488 852.789,744.379 853.348,743.245 853.908,736.156 854.467,718.552 855.026,729.014 855.585,728.34 856.145,726.621 856.704,739.134 857.263,732.661 857.822,714.216 858.382,717.015 858.941,687.786 859.5,689.601 860.059,672.27 860.619,641.329 861.178,678.742 861.737,680.101 862.296,683.216 862.856,667.171 863.415,667.591 863.974,670.067 864.533,656.048 865.093,656.173 865.652,704.368 866.211,718.038 866.77,633.943 867.33,620.634 867.889,608.181 868.448,583.064 869.007,606.212 869.567,580.882 870.126,589.525 870.685,594.735 871.244,607.027 871.804,564.242 872.363,567.984 872.922,591.128 873.481,629.172 874.041,633.663 874.6,639.993 875.159,642.971 875.718,664.038 876.278,645.675 876.837,645.622 877.396,649.407 877.955,653.738 878.515,638.887 879.074,658.508 879.633,643.885 880.192,648.57 880.752,631.662 881.311,640.242 881.87,675.772 882.429,647.663 882.989,682.899 883.548,668.864 884.107,654.118 884.666,652.928 885.226,623.425 885.785,630.601 886.344,617.839 886.903,623.781 887.463,626.973 888.022,611.179 888.581,631.524 889.14,633.681 889.7,604.733 890.259,595.136 890.818,585.531 891.377,640.962 891.937,640.922 892.496,613.129 893.055,601.201 893.614,603.423 894.174,608.445 894.733,627.191 895.292,652.047 895.851,639.813 896.411,624.708 896.97,625.181 897.529,628.047 898.088,631.597 898.648,618.114 899.207,621.694 899.766,592.929 900.325,614.717 900.885,620.959 901.444,610.121 902.003,632.173 902.562,636.396 903.122,638.461 903.681,622.931 904.24,625.434 904.799,594.078 905.359,600.247 905.918,622.277 906.477,624.612 907.036,642.703 907.596,661.687 908.155,694.306 908.714,709.337 909.273,724.441 909.833,705.241 910.392,720.443 910.951,733.276 911.51,729.269 912.07,692.769 912.629,708.411 913.188,723.019 913.747,707.639 914.307,758.165 914.866,755.999 915.425,783.278 915.984,775.343 916.544,738.379 917.103,733.772 917.662,745.48 918.221,741.186 918.781,719.126 919.34,715.347 919.899,718.959 920.458,730.524 921.018,696.44 921.577,696.309 922.136,709.831 922.695,707.066 923.255,737.629 923.814,717.149 924.373,732.394 924.932,695.435 925.492,697.79 926.051,695.744 926.61,713.959 927.169,731.867 927.729,708.444 928.288,689.804 928.847,738.779 929.406,706.058 929.966,770.511 930.525,764.802 931.084,726.297 931.644,707.819 932.203,691.752 932.762,690.483 933.321,672.209 933.881,689.588 934.44,691.345 934.999,675.186 935.558,629.149 936.118,613.216 936.677,601.674 937.236,623.796 937.795,629.148 938.355,683.396 938.914,666.48 939.473,668.783 940.032,685.395 940.592,687.72 941.151,718.003 941.71,687.602 942.269,686.871 942.829,703.884 943.388,733.925 943.947,760.281 944.506,719.669 945.066,721.471 945.625,715.829 946.184,694.84 946.743,679.447 947.303,695.169 947.862,710.338 948.421,674.701 948.98,641.345 949.54,627.387 950.099,628.221 950.658,663.377 951.217,699.444 951.777,716.064 952.336,714.386 952.895,695.314 953.454,711.242 954.014,709.941 954.573,706.024 955.132,687.084 955.691,665.782 956.251,650.814 956.81,671.581 957.369,656.824 957.928,644.668 958.488,679.469 959.047,683.277 959.606,683.378 960.165,665.257 960.725,665.084 961.284,685.859 961.843,717.099 962.402,667.633 962.962,672.381 963.521,670.374 964.08,688.724 964.639,738.081 965.199,749.93 965.758,681.877 966.317,654.211 966.876,650.308 967.436,681.938 967.995,698.551 968.554,681.107 969.113,681.69 969.673,697.771 970.232,697.425 970.791,684.489 971.35,701.855 971.91,735.037 972.469,749.665 973.028,729.872 973.587,728.708 974.147,728.51 974.706,713.121 975.265,697.007 975.824,695.363 976.384,683.775 976.943,683.855 977.502,650.424 978.061,667.424 978.621,654.993 979.18,657.904 979.739,646.936 980.298,679.111 980.858,682.264 981.417,695.673 981.976,663.466 982.535,666.969 983.095,667.835 983.654,669.711 984.213,638.342 984.772,643.398 985.332,644.416 985.891,646.952 986.45,620.483 987.009,618.555 987.569,607.56 988.128,593.778 988.687,617.309 989.246,587.472 989.806,592.783 990.365,594.952 990.924,597.665 991.483,632.77 992.043,621.241 992.602,639.763 993.161,641.05 993.72,676.496 994.28,661.384 994.839,711.663 995.398,741.807 995.957,772.609 996.517,784.076 997.076,810.95 997.635,820.929 998.194,812.057 998.754,761.143 999.313,760.273 999.872,740.811 1000.43,769.965 1000.99,749.865 1001.55,730.2 1002.11,730.555 1002.67,746.987 1003.23,742.613 1003.79,737.252 1004.35,717.724 1004.91,713.754 1005.46,661.651 1006.02,660.515 1006.58,664.293 1007.14,668.481 1007.7,655.214 1008.26,656.608 1008.82,638.419 1009.38,638.543 1009.94,622.934 1010.5,625.2 1011.06,645.965 1011.62,650.443 1012.18,683.25 1012.73,685.077 1013.29,669.388 1013.85,652.561 1014.41,686.921 1014.97,704.357 1015.53,704.147 1016.09,686.468 1016.65,686.396 1017.21,700.963 1017.77,687.376 1018.33,656.512 1018.89,657.101 1019.45,647.049 1020.01,653.554 1020.56,688.354 1021.12,689.375 1021.68,668.418 1022.24,669.58 1022.8,672.026 1023.36,667.638 1023.92,667.175 1024.48,669.71 1025.04,705.339 1025.6,673.591 1026.16,655.495 1026.72,656.691 1027.28,658.219 1027.83,672.827 1028.39,655.069 1028.95,674.018 1029.51,676.653 1030.07,707.539 1030.63,690.15 1031.19,693.057 1031.75,692.84 1032.31,676.867 1032.87,675.852 1033.43,659.784 1033.99,659.958 1034.55,664.217 1035.1,680.607 1035.66,664.607 1036.22,680.177 1036.78,693.936 1037.34,680.678 1037.9,697.417 1038.46,712.12 1039.02,693.028 1039.58,725.223 1040.14,737.596 1040.7,717.263 1041.26,746.166 1041.82,763.943 1042.38,804.839 1042.93,814.602 1043.49,806.979 1044.05,816.426 1044.61,794.346 1045.17,787.305 1045.73,799.576 1046.29,789.801 1046.85,797.898 1047.41,791.989 1047.97,802.975 1048.53,763.331 1049.09,807.927 1049.65,799.802 1050.2,826.647 1050.76,818.787 1051.32,795.953 1051.88,791.041 1052.44,748.302 1053,760.16 1053.56,722.106 1054.12,718.462 1054.68,715.509 1055.24,714.887 1055.8,698.1 1056.36,682.677 1056.92,682.859 1057.48,648.606 1058.03,648.991 1058.59,617.635 1059.15,634.713 1059.71,626.033 1060.27,647.305 1060.83,629.57 1061.39,633.283 1061.95,619.019 1062.51,588.453 1063.07,628.621 1063.63,583.755 1064.19,589.648 1064.75,578.318 1065.3,552.078 1065.86,558.201 1066.42,566.01 1066.98,572.397 1067.54,596.467 1068.1,584.111 1068.66,607.214 1069.22,630.33 1069.78,634.701 1070.34,638.456 1070.9,623.761 1071.46,625.204 1072.02,613.26 1072.57,600.107 1073.13,609.163 1073.69,611.508 1074.25,617.267 1074.81,625.847 1075.37,597.429 1075.93,618.473 1076.49,651.492 1077.05,618.372 1077.61,607.146 1078.17,597.247 1078.73,585.335 1079.29,575.666 1079.85,601.41 1080.4,601.41 1080.96,659.17 1081.52,660.974 1082.08,693.643 1082.64,680.43 1083.2,679.582 1083.76,663.934 1084.32,646.51 1084.88,667.753 1085.44,654.871 1086,673.451 1086.56,622.857 1087.12,625.648 1087.67,626.566 1088.23,645.207 1088.79,677.611 1089.35,676.903 1089.91,659.322 1090.47,661.525 1091.03,696.097 1091.59,729.82 1092.15,727.284 1092.71,744.096 1093.27,740.736 1093.83,768.975 1094.39,763.442 1094.94,757.347 1095.5,767.927 1096.06,781.788 1096.62,762.088 1097.18,676.178 1097.74,678.172 1098.3,711.777 1098.86,711.693 1099.42,725.389 1099.98,708.958 1100.54,709.521 1101.1,708.008 1101.66,737.577 1102.22,748.189 1102.77,696.189 1103.33,696.793 1103.89,694.978 1104.45,680.128 1105.01,663.431 1105.57,663.718 1106.13,679.186 1106.69,648.9 1107.25,654.007 1107.81,687.749 1108.37,691.604 1108.93,724.846 1109.49,720.763 1110.04,737.072 1110.6,701.361 1111.16,717.358 1111.72,747.955 1112.28,765.464 1112.84,777.881 1113.4,789.542 1113.96,763.14 1114.52,773.768 1115.08,800.663 1115.64,809.28 1116.2,807.144 1116.76,829.683 1117.31,820.014 1117.87,793.904 1118.43,785.902 1118.99,781.338 1119.55,777.753 1120.11,774.469 1120.67,767.974 1121.23,794.687 1121.79,790.872 1122.35,786.502 1122.91,763.805 1123.47,759.566 1124.03,726.203 1124.59,705.67 1125.14,719.409 1125.7,700.923 1126.26,698.783 1126.82,713.983 1127.38,712.069 1127.94,710.667 1128.5,709.907 1129.06,692.702 1129.62,663.767 1130.18,682.994 1130.74,714.622 1131.3,711.372 1131.86,728.341 1132.41,726.63 1132.97,722.289 1133.53,719.243 1134.09,700.946 1134.65,701.087 1135.21,681.843 1135.77,728.375 1136.33,692.023 1136.89,679.315 1137.45,681.096 1138.01,678.294 1138.57,662.15 1139.13,662.949 1139.68,646.103 1140.24,629.557 1140.8,650.378 1141.36,667.762 1141.92,667.321 1142.48,666.631 1143.04,652.836 1143.6,654.419 1144.16,668.559 1144.72,683.362 1145.28,702.4 1145.84,700.611 1146.4,715.058 1146.96,712.611 1147.51,695.272 1148.07,708.82 1148.63,709.343 1149.19,691.926 1149.75,659.963 1150.31,647.765 1150.87,633.561 1151.43,649.863 1151.99,668.444 1152.55,702.182 1153.11,747.283 1153.67,726.749 1154.23,724.532 1154.78,706.169 1155.34,704.65 1155.9,655.155 1156.46,658.428 1157.02,726.147 1157.58,724.234 1158.14,707.278 1158.7,675.986 1159.26,693.26 1159.82,710.081 1160.38,689.907 1160.94,673.629 1161.5,656.998 1162.05,692.753 1162.61,723.24 1163.17,704.943 1163.73,685.07 1164.29,716.261 1164.85,732.203 1165.41,697.887 1165.97,697.653 1166.53,679.828 1167.09,714.007 1167.65,743.344 1168.21,725.355 1168.77,722.041 1169.33,753.691 1169.88,734.174 1170.44,784.12 1171,777.208 1171.56,773.639 1172.12,770.094 1172.68,752.397 1173.24,718.291 1173.8,700.846 1174.36,714.82 1174.92,698.008 1175.48,681.267 1176.04,663.314 1176.6,646.161 1177.15,682.763 1177.71,650.39 1178.27,633.818 1178.83,649.859 1179.39,651.9 1179.95,650.85 1180.51,620.336 1181.07,627.707 1181.63,647.623 1182.19,634.575 1182.75,653.875 1183.31,658.435 1183.87,641.67 1184.43,660.159 1184.98,713.621 1185.54,731.319 1186.1,662.907 1186.66,630.172 1187.22,679.778 1187.78,677.74 1188.34,681.024 1188.9,680.585 1189.46,681.385 1190.02,683.285 1190.58,715.981 1191.14,697.988 1191.7,693.983 1192.25,695.308 1192.81,674.783 1193.37,674.237 1193.93,640.54 1194.49,626.716 1195.05,678.206 1195.61,660.254 1196.17,658.79 1196.73,639.463 1197.29,659.134 1197.85,696.568 1198.41,699.817 1198.97,712.173 1199.52,678.889 1200.08,709.394 1200.64,723.676 1201.2,705.051 1201.76,703.7 1202.32,687.025 1202.88,671.064 1203.44,653.412 1204,622.022 1204.56,625.297 1205.12,641.794 1205.68,644.955 1206.24,630.163 1206.8,649.13 1207.35,669.022 1207.91,669.244 1208.47,686.684 1209.03,685.975 1209.59,671.766 1210.15,655.153 1210.71,657.397 1211.27,674.656 1211.83,692.178 1212.39,722.693 1212.95,735.898 1213.51,729.979 1214.07,728.342 1214.62,713.108 1215.18,695.413 1215.74,664.295 1216.3,683.685 1216.86,685.074 1217.42,685.955 1217.98,688.333 1218.54,671.28 1219.1,673.185 1219.66,675.268 1220.22,646.147 1220.78,615.206 1221.34,621.242 1221.89,627.873 1222.45,647.292 1223.01,636.532 1223.57,652.788 1224.13,655.815 1224.69,641.937 1225.25,674.132 1225.81,645.96 1226.37,660.349 1226.93,663.064 1227.49,684.96 1228.05,670.017 1228.61,684.613 1229.17,714.745 1229.72,732.762 1230.28,730.259 1230.84,728.461 1231.4,754.407 1231.96,735.343 1232.52,733.446 1233.08,701.999 1233.64,734.584 1234.2,766.291 1234.76,774.997 1235.32,755.621 1235.88,753.279 1236.44,780.84 1236.99,726.645 1237.55,742.301 1238.11,755.896 1238.67,754.529 1239.23,751.961 1239.79,717.972 1240.35,732.418 1240.91,729.166 1241.47,732.196 1242.03,710.559 1242.59,692.851 1243.15,672.675 1243.71,655.372 1244.26,624.778 1244.82,626.422 1245.38,631.641 1245.94,633.432 1246.5,635.055 1247.06,625.66 1247.62,598.873 1248.18,622.538 1248.74,642.258 1249.3,645.103 1249.86,612.364 1250.42,604.932 1250.98,578.28 1251.54,600.786 1252.09,601.813 1252.65,640.857 1253.21,646.226 1253.77,651.851 1254.33,650.857 1254.89,670.549 1255.45,719.348 1256.01,746.693 1256.57,743.099 1257.13,738.107 1257.69,742.466 1258.25,724.055 1258.81,703.708 1259.36,718.607 1259.92,715.617 1260.48,729.836 1261.04,773.681 1261.6,771.644 1262.16,720.775 1262.72,720.105 1263.28,732.736 1263.84,730.325 1264.4,694.513 1264.96,661.583 1265.52,659.804 1266.08,675.806 1266.63,694.93 1267.19,681.642 1267.75,668.595 1268.31,703.062 1268.87,668.436 1269.43,656.622 1269.99,579.5 1270.55,632.033 1271.11,639.224 1271.67,639.239 1272.23,642.344 1272.79,642.105 1273.35,624.611 1273.91,646.107 1274.46,647.701 1275.02,648.238 1275.58,648.629 1276.14,653.184 1276.7,655.628 1277.26,656.973 1277.82,674.456 1278.38,675.705 1278.94,658.998 1279.5,676.302 1280.06,675.544 1280.62,677.464 1281.18,679.722 1281.73,662.646 1282.29,632.029 1282.85,667.468 1283.41,669.95 1283.97,671.684 1284.53,702.823 1285.09,714.418 1285.65,711.22 1286.21,675.579 1286.77,694.39 1287.33,676.224 1287.89,670.75 1288.45,670.967 1289,673.162 1289.56,642.95 1290.12,660.66 1290.68,677.299 1291.24,674.892 1291.8,689.883 1292.36,640.085 1292.92,658.51 1293.48,660.612 1294.04,664.116 1294.6,666.518 1295.16,700.076 1295.72,681.846 1296.28,668.554 1296.83,700.699 1297.39,732.047 1297.95,744.05 1298.51,754.375 1299.07,733.159 1299.63,746.078 1300.19,740.876 1300.75,725.256 1301.31,722.691 1301.87,736.797 1302.43,732.747 1302.99,746.04 1303.55,755.809 1304.1,768.041 1304.66,734.039 1305.22,699.87 1305.78,683.657 1306.34,686.23 1306.9,718.235 1307.46,715.493 1308.02,694.375 1308.58,679.536 1309.14,666.25 1309.7,666.06 1310.26,682.049 1310.82,667.032 1311.38,668.642 1311.93,653.635 1312.49,654.313 1313.05,621.344 1313.61,622.249 1314.17,691.729 1314.73,706.636 1315.29,722.289 1315.85,737.23 1316.41,734.123 1316.97,765.425 1317.53,777.231 1318.09,775.056 1318.65,768.095 1319.2,763.182 1319.76,770.671 1320.32,749.441 1320.88,729.721 1321.44,759.82 1322,738.335 1322.56,734.792 1323.12,715.904 1323.68,730.102 1324.24,730.068 1324.8,710.358 1325.36,643.71 1325.92,661.955 1326.47,663.368 1327.03,678.249 1327.59,680.27 1328.15,682.313 1328.71,666.96 1329.27,662.667 1329.83,646.743 1330.39,650.951 1330.95,635.569 1331.51,620.354 1332.07,592.58 1332.63,614.481 1333.19,618.347 1333.75,603.94 1334.3,607.052 1334.86,627.96 1335.42,664.584 1335.98,632.662 1336.54,665.279 1337.1,680.489 1337.66,677.921 1338.22,678.788 1338.78,661.866 1339.34,660.328 1339.9,675.815 1340.46,724.507 1341.02,704.682 1341.57,686.955 1342.13,670.079 1342.69,654.81 1343.25,655.225 1343.81,639.381 1344.37,672.163 1344.93,674.568 1345.49,703.899 1346.05,733.471 1346.61,747.934 1347.17,728.829 1347.73,725.806 1348.29,672.306 1348.84,654.518 1349.4,656.682 1349.96,657.563 1350.52,643.308 1351.08,662.243 1351.64,678.794 1352.2,680.388 1352.76,692.602 1353.32,692.599 1353.88,724.34 1354.44,756.212 1355,766.032 1355.56,760.074 1356.12,754.088 1356.67,749.562 1357.23,748.88 1357.79,729.087 1358.35,740.456 1358.91,721.05 1359.47,719.439 1360.03,748.6 1360.59,776.425 1361.15,759.268 1361.71,723.048 1362.27,704.083 1362.83,701.653 1363.39,666.919 1363.94,681.996 1364.5,697.496 1365.06,700.359 1365.62,664.452 1366.18,664.225 1366.74,629.719 1367.3,613.075 1367.86,598.955 1368.42,569.23 1368.98,542.752 1369.54,550.369 1370.1,590.093 1370.66,563.764 1371.21,537.47 1371.77,547.637 1372.33,521.92 1372.89,548.928 1373.45,557.666 1374.01,579.897 1374.57,600.77 1375.13,622.727 1375.69,642.553 1376.25,628.424 1376.81,648.373 1377.37,679.722 1377.93,662.856 1378.49,667.863 1379.04,672.807 1379.6,686.719 1380.16,687.48 1380.72,670.55 1381.28,667.414 1381.84,670.311 1382.4,674.882 1382.96,645.773 1383.52,650.25 1384.08,633.496 1384.64,636.474 1385.2,671.85 1385.76,659.141 1386.31,659.062 1386.87,644.911 1387.43,644.444 1387.99,663.826 1388.55,648.413 1389.11,635.28 1389.67,640.69 1390.23,644.946 1390.79,664.014 1391.35,633.073 1391.91,620.31 1392.47,671.698 1393.03,673.967 1393.58,659.904 1394.14,656.359 1394.7,672.864 1395.26,688.097 1395.82,654.395 1396.38,719.939 1396.94,780.81 1397.5,775.039 1398.06,736.558 1398.62,752.514 1399.18,733.723 1399.74,741.513 1400.3,721.882 1400.86,714.691 1401.41,696.701 1401.97,665.887 1402.53,665.555 1403.09,667.424 1403.65,667.189 1404.21,684.189 1404.77,711.957 1405.33,677.531 1405.89,722.459 1406.45,721.962 1407.01,736.94 1407.57,733.282 1408.13,701.744 1408.68,684.09 1409.24,688.194 1409.8,670.122 1410.36,719.388 1410.92,730.593 1411.48,697.915 1412.04,708.968 1412.6,739.372 1413.16,720.475 1413.72,753.763 1414.28,751.101 1414.84,797.081 1415.4,808.158 1415.95,815.855 1416.51,841.553 1417.07,799.373 1417.63,779.423 1418.19,773.829 1418.75,748.414 1419.31,729.701 1419.87,727.807 1420.43,726.894 1420.99,711.104 1421.55,726.754 1422.11,724.056 1422.67,684.226 1423.23,700.008 1423.78,685.481 1424.34,716.885 1424.9,699.447 1425.46,699.452 1426.02,681.264 1426.58,680.149 1427.14,681.779 1427.7,666.8 1428.26,635.819 1428.82,671.912 1429.38,673.02 1429.94,690.886 1430.5,703.901 1431.05,695.963 1431.61,712.309 1432.17,742.69 1432.73,754.617 1433.29,763.664 1433.85,761.768 1434.41,757.019 1434.97,718.827 1435.53,686.148 1436.09,651.998 1436.65,654.055 1437.21,623.456 1437.77,660.205 1438.33,648.706 1438.88,618.011 1439.44,623.835 1440,644.198 1440.56,664.898 1441.12,634.73 1441.68,637.282 1442.24,624.735 1442.8,644.862 1443.36,662.258 1443.92,661.595 1444.48,678.209 1445.04,695.165 1445.6,661.447 1446.15,676.169 1446.71,661.689 1447.27,630.499 1447.83,620.847 1448.39,640.591 1448.95,672.181 1449.51,671.723 1450.07,687.615 1450.63,704.737 1451.19,685 1451.75,719.428 1452.31,702.491 1452.87,734.862 1453.42,716.941 1453.98,714.701 1454.54,763.279 1455.1,740.831 1455.66,684.466 1456.22,664.073 1456.78,682.016 1457.34,713.329 1457.9,681.701 1458.46,663.149 1459.02,646.699 1459.58,663.004 1460.14,681.021 1460.7,681.15 1461.25,684.928 1461.81,715.052 1462.37,697.325 1462.93,712.502 1463.49,696.777 1464.05,698.256 1464.61,714.747 1465.17,697.361 1465.73,697.369 1466.29,697.055 1466.85,727.916 1467.41,723.93 1467.97,753.308 1468.52,748.131 1469.08,726.76 1469.64,705.585 1470.2,715.776 1470.76,698.002 1471.32,696.974 1471.88,692.836 1472.44,673.445 1473,659.565 1473.56,676.997 1474.12,673.22 1474.68,672.762 1475.24,657.41 1475.79,625.532 1476.35,611.777 1476.91,618.356 1477.47,590.983 1478.03,611.683 1478.59,597.503 1479.15,589.625 1479.71,578.482 1480.27,584.825 1480.83,587.151 1481.39,592.513 1481.95,600.84 1482.51,607.66 1483.07,609.263 1483.62,615.838 1484.18,590.352 1484.74,594.294 1485.3,596.619 1485.86,653.526 1486.42,654.827 1486.98,640.659 1487.54,641.778 1488.1,677.152 1488.66,697.954 1489.22,713.144 1489.78,726.46 1490.34,738.895 1490.89,737.01 1491.45,721.814 1492.01,768.665 1492.57,766.428 1493.13,728.774 1493.69,732.35 1494.25,717.028 1494.81,729.382 1495.37,758.049 1495.93,787.417 1496.49,748.309 1497.05,759.896 1497.61,737.159 1498.16,750.557 1498.72,715.964 1499.28,717.67 1499.84,699.535 1500.4,729.856 1500.96,713.988 1501.52,732.029 1502.08,764.29 1502.64,728.846 1503.2,728.844 1503.76,726.229 1504.32,688.92 1504.88,672.715 1505.44,690.006 1505.99,691.986 1506.55,693.787 1507.11,725.141 1507.67,723.087 1508.23,756.35 1508.79,719.491 1509.35,701.809 1509.91,667.129 1510.47,617.235 1511.03,654.046 1511.59,654.741 1512.15,655.326 1512.71,723.262 1513.26,709.405 1513.82,720.951 1514.38,706.956 1514.94,670.665 1515.5,666.965 1516.06,683.662 1516.62,664.001 1517.18,666.713 1517.74,667.997 1518.3,671.645 1518.86,659.04 1519.42,661.65 1519.98,663.895 1520.53,682.319 1521.09,694.725 1521.65,710.57 1522.21,691.796 1522.77,671.585 1523.33,668.391 1523.89,652.318 1524.45,656.767 1525.01,639.331 1525.57,655.497 1526.13,639.766 1526.69,658.859 1527.25,629.588 1527.81,616.47 1528.36,671.911 1528.92,673.277 1529.48,657.99 1530.04,675.759 1530.6,662.284 1531.16,631.795 1531.72,667.813 1532.28,652.075 1532.84,672.278 1533.4,688.442 1533.96,689.995 1534.52,688.559 1535.08,734.494 1535.63,731.05 1536.19,743.469 1536.75,693.865 1537.31,675.867 1537.87,640.952 1538.43,642.514 1538.99,644.162 1539.55,633.256 1540.11,673.43 1540.67,706.136 1541.23,722.398 1541.79,693.256 1542.35,657.069 1542.9,610.925 1543.46,596.633 1544.02,616.451 1544.58,653.706 1545.14,665.658 1545.7,668.381 1546.26,686.144 1546.82,671.13 1547.38,671.872 1547.94,657.96 1548.5,692.495 1549.06,706.593 1549.62,671.703 1550.18,670.682 1550.73,688.119 1551.29,692.418 1551.85,677.06 1552.41,676.561 1552.97,678.871 1553.53,694.712 1554.09,699.324 1554.65,714.074 1555.21,696.93 1555.77,728.989 1556.33,727.731 1556.89,694.075 1557.45,694.727 1558,709.657 1558.56,709.966 1559.12,710.769 1559.68,709.666 1560.24,711.117 1560.8,715.407 1561.36,697.057 1561.92,698.973 1562.48,730.122 1563.04,644.038 1563.6,674.05 1564.16,675.753 1564.72,659.836 1565.28,692.629 1565.83,676.161 1566.39,709.147 1566.95,656.652 1567.51,659.059 1568.07,675.043 1568.63,676.024 1569.19,677.548 1569.75,676.028 1570.31,663.572 1570.87,683.722 1571.43,716.794 1571.99,717.298 1572.55,716.397 1573.1,715.409 1573.66,679.889 1574.22,678.949 1574.78,693.081 1575.34,674.946 1575.9,657.838 1576.46,659.337 1577.02,662.626 1577.58,631.315 1578.14,637.124 1578.7,668.219 1579.26,620.871 1579.82,624.334 1580.37,627.203 1580.93,645.006 1581.49,647.647 1582.05,682.641 1582.61,667.368 1583.17,666.912 1583.73,667.015 1584.29,681.985 1584.85,713.245 1585.41,709.386 1585.97,692.097 1586.53,671.193 1587.09,685.779 1587.65,685.91 1588.2,670.777 1588.76,669.853 1589.32,672.924 1589.88,677.078 1590.44,743.074 1591,756.694 1591.56,733.444 1592.12,734.422 1592.68,716.032 1593.24,716.518 1593.8,712.895 1594.36,743.255 1594.92,754.279 1595.47,720.152 1596.03,703.463 1596.59,724.856 1597.15,724.717 1597.71,690.553 1598.27,691.584 1598.83,675.554 1599.39,675.47 1599.95,692.208 1600.51,705.576 1601.07,689.187 1601.63,675.858 1602.19,708.067 1602.74,706.693 1603.3,705.13 1603.86,703.853 1604.42,702.722 1604.98,683.338 1605.54,668.897 1606.1,656.799 1606.66,658.222 1607.22,645.087 1607.78,662.354 1608.34,646.816 1608.9,697.088 1609.46,664.317 1610.02,666.48 1610.57,684.37 1611.13,702.734 1611.69,685.32 1612.25,684.098 1612.81,666.56 1613.37,670.505 1613.93,670.351 1614.49,655.909 1615.05,659.346 1615.61,663.892 1616.17,634.174 1616.73,639.154 1617.29,637.99 1617.84,686.288 1618.4,671.386 1618.96,704.327 1619.52,704.847 1620.08,721.022 1620.64,732.544 1621.2,749.76 1621.76,745.309 1622.32,694.936 1622.88,662.455 1623.44,699.694 1624,698.719 1624.56,685.488 1625.11,684.815 1625.67,702.717 1626.23,711.279 1626.79,709.294 1627.35,709.734 1627.91,658.587 1628.47,645.943 1629.03,666.155 1629.59,670.424 1630.15,670.697 1630.71,668.286 1631.27,651.594 1631.83,639.193 1632.39,599.612 1632.94,593.203 1633.5,597.322 1634.06,617.838 1634.62,623.13 1635.18,626.36 1635.74,629.126 1636.3,617.83 1636.86,620.518 1637.42,607.79 1637.98,611.079 1638.54,615.11 1639.1,637.033 1639.66,670.822 1640.21,685.166 1640.77,685.946 1641.33,687.508 1641.89,703.791 1642.45,703.381 1643.01,686.512 1643.57,704.479 1644.13,672.455 1644.69,657.722 1645.25,673.531 1645.81,674.021 1646.37,702.137 1646.93,699.606 1647.48,697.06 1648.04,698.174 1648.6,712.193 1649.16,711.072 1649.72,706.07 1650.28,737.104 1650.84,733.568 1651.4,764.444 1651.96,743.796 1652.52,757.191 1653.08,752.211 1653.64,717.874 1654.2,703.186 1654.76,738.314 1655.31,718.683 1655.87,716.753 1656.43,682.094 1656.99,687.52 1657.55,687.186 1658.11,705.17 1658.67,701.616 1659.23,716.15 1659.79,730.321 1660.35,726.405 1660.91,724.225 1661.47,740.234 1662.03,736.279 1662.58,718.723 1663.14,705.016 1663.7,669.566 1664.26,652.303 1664.82,655.443 1665.38,685.092 1665.94,700.83 1666.5,700.489 1667.06,684.498 1667.62,734.039 1668.18,701.899 1668.74,714.45 1669.3,714.053 1669.85,696.361 1670.41,728.845 1670.97,696.215 1671.53,693.951 1672.09,711.926 1672.65,723.272 1673.21,722.529 1673.77,739.543 1674.33,722.264 1674.89,689.769 1675.45,654.381 1676.01,668.119 1676.57,685.907 1677.13,684.146 1677.68,734.298 1678.24,737.294 1678.8,720.175 1679.36,719.465 1679.92,732.82 1680.48,745.145 1681.04,746.62 1681.6,743.724 1682.16,723.676 1682.72,733.293 1683.28,714.284 1683.84,711.714 1684.4,709.947 1684.95,745.424 1685.51,775.414 1686.07,754.785 1686.63,737.751 1687.19,751.798 1687.75,749.52 1688.31,731.245 1688.87,728.271 1689.43,741.892 1689.99,738.514 1690.55,735.405 1691.11,715.543 1691.67,745.187 1692.23,723.359 1692.78,702.022 1693.34,669.395 1693.9,702.558 1694.46,687.897 1695.02,685.058 1695.58,698.392 1696.14,681.344 1696.7,680.59 1697.26,633.207 1697.82,617.645 1698.38,653.919 1698.94,670.821 1699.5,657.2 1700.05,659.314 1700.61,660.25 1701.17,631.11 1701.73,634.115 1702.29,637.262 1702.85,655.356 1703.41,675.112 1703.97,643.724 1704.53,644.713 1705.09,648.265 1705.65,633.055 1706.21,669.205 1706.77,637.893 1707.32,609.291 1707.88,582.274 1708.44,601.231 1709,606.795 1709.56,577.708 1710.12,601.343 1710.68,593.884 1711.24,630.372 1711.8,648.597 1712.36,681.009 1712.92,666.003 1713.48,648.609 1714.04,666.633 1714.6,621.363 1715.15,642.395 1715.71,646.673 1716.27,662.92 1716.83,663.32 1717.39,681.874 1717.95,681.358 1718.51,668.02 1719.07,652.649 1719.63,620.625 1720.19,659.2 1720.75,657.713 1721.31,658.44 1721.87,674.394 1722.42,660.443 1722.98,660.723 1723.54,662.804 1724.1,678.778 1724.66,678.52 1725.22,644.745 1725.78,678.717 1726.34,677.734 1726.9,695.127 1727.46,693.889 1728.02,711.649 1728.58,709.899 1729.14,694.379 1729.69,694.818 1730.25,680.558 1730.81,697.219 1731.37,698.655 1731.93,697.738 1732.49,697.903 1733.05,682.479 1733.61,678.191 1734.17,693.68 1734.73,727.067 1735.29,723.503 1735.85,703.535 1736.41,707.474 1736.97,723.195 1737.52,723.779 1738.08,674.24 1738.64,676.435 1739.2,693.589 1739.76,723.839 1740.32,721.831 1740.88,716.675 1741.44,703.526 1742,719.186 1742.56,680.517 1743.12,697.397 1743.68,695.611 1744.24,741.766 1744.79,756.088 1745.35,769.053 1745.91,762.929 1746.47,787.985 1747.03,782.345 1747.59,777.422 1748.15,784.994 1748.71,794.035 1749.27,788.301 1749.83,764.093 1750.39,741.45 1750.95,705.313 1751.51,719.421 1752.06,745.16 1752.62,742.325 1753.18,736.476 1753.74,734.346 1754.3,730.546 1754.86,696.964 1755.42,710.015 1755.98,707.845 1756.54,689.707 1757.1,656.507 1757.66,658.378 1758.22,661.651 1758.78,667.037 1759.34,653.272 1759.89,670.953 1760.45,638.751 1761.01,688.469 1761.57,687.792 1762.13,656.002 1762.69,672.43 1763.25,651.862 1763.81,686.575 1764.37,671.296 1764.93,688.316 1765.49,686.027 1766.05,688.975 1766.61,654.293 1767.16,658.247 1767.72,675.699 1768.28,674.317 1768.84,674.533 1769.4,691.333 1769.96,661.096 1770.52,615.96 1771.08,617.204 1771.64,638.006 1772.2,624.077 1772.76,673.984 1773.32,691.907 1773.88,676.703 1774.43,662.324 1774.99,677.168 1775.55,712.739 1776.11,710.185 1776.67,710.348 1777.23,707.874 1777.79,721.859 1778.35,718.572 1778.91,718.776 1779.47,734.154 1780.03,762.471 1780.59,756.185 1781.15,753.363 1781.71,701.507 1782.26,664.908 1782.82,666.603 1783.38,686.54 1783.94,685.584 1784.5,688.308 1785.06,672.685 1785.62,658.475 1786.18,644.73 1786.74,647.301 1787.3,651.352 1787.86,670.821 1788.42,656.682 1788.98,687.502 1789.53,686.208 1790.09,685.133 1790.65,684.568 1791.21,654.077 1791.77,669.109 1792.33,686.425 1792.89,670.348 1793.45,654.619 1794.01,654.718 1794.57,655.588 1795.13,671.939 1795.69,719.573 1796.25,729.962 1796.8,726.458 1797.36,681.984 1797.92,683.249 1798.48,700.82 1799.04,703.416 1799.6,733.475 1800.16,682.301 1800.72,667.245 1801.28,673.068 1801.84,703.553 1802.4,686.157 1802.96,687.316 1803.52,689.374 1804.08,701.851 1804.63,684.546 1805.19,684.478 1805.75,700.72 1806.31,700.433 1806.87,699.635 1807.43,700.783 1807.99,699.187 1808.55,698.568 1809.11,677.019 1809.67,707.956 1810.23,720.401 1810.79,737.192 1811.35,752.449 1811.9,734.895 1812.46,749.994 1813.02,783.135 1813.58,745.032 1814.14,768.541 1814.7,778.982 1815.26,770.665 1815.82,751.886 1816.38,747.737 1816.94,746.22 1817.5,745.342 1818.06,728.392 1818.62,742.894 1819.18,721.707 1819.73,716.101 1820.29,731.937 1820.85,728.154 1821.41,711.37 1821.97,707.961 1822.53,705.06 1823.09,720.268 1823.65,736.615 1824.21,671.107 1824.77,670.913 1825.33,684.547 1825.89,682.636 1826.45,651.962 1827,640.394 1827.56,628.814 1828.12,596.635 1828.68,587.318 1829.24,610.986 1829.8,612.046 1830.36,667.071 1830.92,670.307 1831.48,702.495 1832.04,689.004 1832.6,706.036 1833.16,721.993 1833.72,737.07 1834.27,736.718 1834.83,732.943 1835.39,746.837 1835.95,740.732 1836.51,735.96 1837.07,731.25 1837.63,711.401 1838.19,708.988 \"/>\n<path clip-path=\"url(#clip883)\" d=\"M720.247 691.868 L720.806 691.868 L721.365 691.868 L721.924 691.868 L722.484 691.868 L723.043 691.868 L723.602 691.868 L724.161 691.868 L724.721 691.868 L725.28 691.868 L725.839 691.868 L726.398 691.868 L726.958 691.868 L727.517 691.868 L728.076 691.868 L728.635 691.868 L729.195 691.868 L729.754 691.868 L730.313 691.868 L730.872 691.868 L731.432 691.868 L731.991 691.868 L732.55 691.868 L733.109 691.868 L733.669 691.868 L734.228 691.868 L734.787 691.868 L735.346 691.868 L735.906 691.868 L736.465 691.868 L737.024 691.868 L737.583 691.868 L738.143 691.868 L738.702 691.868 L739.261 691.868 L739.82 691.868 L740.38 691.868 L740.939 691.868 L741.498 691.868 L742.057 691.868 L742.617 691.868 L743.176 691.868 L743.735 691.868 L744.294 691.868 L744.854 691.868 L745.413 691.868 L745.972 691.868 L746.531 691.868 L747.091 691.868 L747.65 691.868 L748.209 691.868 L748.768 691.868 L749.328 691.868 L749.887 691.868 L750.446 691.868 L751.005 691.868 L751.565 691.868 L752.124 691.868 L752.683 691.868 L753.242 691.868 L753.802 691.868 L754.361 691.868 L754.92 691.868 L755.479 691.868 L756.039 691.868 L756.598 691.868 L757.157 691.868 L757.716 691.868 L758.276 691.868 L758.835 691.868 L759.394 691.868 L759.953 691.868 L760.513 691.868 L761.072 691.868 L761.631 691.868 L762.19 691.868 L762.75 691.868 L763.309 691.868 L763.868 691.868 L764.427 691.868 L764.987 691.868 L765.546 691.868 L766.105 691.868 L766.664 691.868 L767.224 691.868 L767.783 691.868 L768.342 691.868 L768.901 691.868 L769.461 691.868 L770.02 691.868 L770.579 691.868 L771.138 691.868 L771.698 691.868 L772.257 691.868 L772.816 691.868 L773.375 691.868 L773.935 691.868 L774.494 691.868 L775.053 691.868 L775.612 691.868 L776.172 691.868 L776.731 691.868 L777.29 691.868 L777.849 691.868 L778.409 691.868 L778.968 691.868 L779.527 691.868 L780.086 691.868 L780.646 691.868 L781.205 691.868 L781.764 691.868 L782.323 691.868 L782.883 691.868 L783.442 691.868 L784.001 691.868 L784.56 691.868 L785.12 691.868 L785.679 691.868 L786.238 691.868 L786.797 691.868 L787.357 691.868 L787.916 691.868 L788.475 691.868 L789.034 691.868 L789.594 691.868 L790.153 691.868 L790.712 691.868 L791.271 691.868 L791.831 691.868 L792.39 691.868 L792.949 691.868 L793.508 691.868 L794.068 691.868 L794.627 691.868 L795.186 691.868 L795.745 691.868 L796.305 691.868 L796.864 691.868 L797.423 691.868 L797.982 691.868 L798.542 691.868 L799.101 691.868 L799.66 691.868 L800.219 691.868 L800.779 691.868 L801.338 691.868 L801.897 691.868 L802.456 691.868 L803.016 691.868 L803.575 691.868 L804.134 691.868 L804.693 691.868 L805.253 691.868 L805.812 691.868 L806.371 691.868 L806.931 691.868 L807.49 691.868 L808.049 691.868 L808.608 691.868 L809.168 691.868 L809.727 691.868 L810.286 691.868 L810.845 691.868 L811.405 691.868 L811.964 691.868 L812.523 691.868 L813.082 691.868 L813.642 691.868 L814.201 691.868 L814.76 691.868 L815.319 691.868 L815.879 691.868 L816.438 691.868 L816.997 691.868 L817.556 691.868 L818.116 691.868 L818.675 691.868 L819.234 691.868 L819.793 691.868 L820.353 691.868 L820.912 691.868 L821.471 691.868 L822.03 691.868 L822.59 691.868 L823.149 691.868 L823.708 691.868 L824.267 691.868 L824.827 691.868 L825.386 691.868 L825.945 691.868 L826.504 691.868 L827.064 691.868 L827.623 691.868 L828.182 691.868 L828.741 691.868 L829.301 691.868 L829.86 691.868 L830.419 691.868 L830.978 691.868 L831.538 691.868 L832.097 691.868 L832.656 691.868 L833.215 691.868 L833.775 691.868 L834.334 691.868 L834.893 691.868 L835.452 691.868 L836.012 691.868 L836.571 691.868 L837.13 691.868 L837.689 691.868 L838.249 691.868 L838.808 691.868 L839.367 691.868 L839.926 691.868 L840.486 691.868 L841.045 691.868 L841.604 691.868 L842.163 691.868 L842.723 691.868 L843.282 691.868 L843.841 691.868 L844.4 691.868 L844.96 691.868 L845.519 691.868 L846.078 691.868 L846.637 691.868 L847.197 691.868 L847.756 691.868 L848.315 691.868 L848.874 691.868 L849.434 691.868 L849.993 691.868 L850.552 691.868 L851.111 691.868 L851.671 691.868 L852.23 691.868 L852.789 691.868 L853.348 691.868 L853.908 691.868 L854.467 691.868 L855.026 691.868 L855.585 691.868 L856.145 691.868 L856.704 691.868 L857.263 691.868 L857.822 691.868 L858.382 691.868 L858.941 691.868 L859.5 691.868 L860.059 691.868 L860.619 691.868 L861.178 691.868 L861.737 691.868 L862.296 691.868 L862.856 691.868 L863.415 691.868 L863.974 691.868 L864.533 691.868 L865.093 691.868 L865.652 691.868 L866.211 691.868 L866.77 691.868 L867.33 691.868 L867.889 691.868 L868.448 691.868 L869.007 691.868 L869.567 691.868 L870.126 691.868 L870.685 691.868 L871.244 691.868 L871.804 691.868 L872.363 691.868 L872.922 691.868 L873.481 691.868 L874.041 691.868 L874.6 691.868 L875.159 691.868 L875.718 691.868 L876.278 691.868 L876.837 691.868 L877.396 691.868 L877.955 691.868 L878.515 691.868 L879.074 691.868 L879.633 691.868 L880.192 691.868 L880.752 691.868 L881.311 691.868 L881.87 691.868 L882.429 691.868 L882.989 691.868 L883.548 691.868 L884.107 691.868 L884.666 691.868 L885.226 691.868 L885.785 691.868 L886.344 691.868 L886.903 691.868 L887.463 691.868 L888.022 691.868 L888.581 691.868 L889.14 691.868 L889.7 691.868 L890.259 691.868 L890.818 691.868 L891.377 691.868 L891.937 691.868 L892.496 691.868 L893.055 691.868 L893.614 691.868 L894.174 691.868 L894.733 691.868 L895.292 691.868 L895.851 691.868 L896.411 691.868 L896.97 691.868 L897.529 691.868 L898.088 691.868 L898.648 691.868 L899.207 691.868 L899.766 691.868 L900.325 691.868 L900.885 691.868 L901.444 691.868 L902.003 691.868 L902.562 691.868 L903.122 691.868 L903.681 691.868 L904.24 691.868 L904.799 691.868 L905.359 691.868 L905.918 691.868 L906.477 691.868 L907.036 691.868 L907.596 691.868 L908.155 691.868 L908.714 691.868 L909.273 691.868 L909.833 691.868 L910.392 691.868 L910.951 691.868 L911.51 691.868 L912.07 691.868 L912.629 691.868 L913.188 691.868 L913.747 691.868 L914.307 691.868 L914.866 691.868 L915.425 691.868 L915.984 691.868 L916.544 691.868 L917.103 691.868 L917.662 691.868 L918.221 691.868 L918.781 691.868 L919.34 691.868 L919.899 691.868 L920.458 691.868 L921.018 691.868 L921.577 691.868 L922.136 691.868 L922.695 691.868 L923.255 691.868 L923.814 691.868 L924.373 691.868 L924.932 691.868 L925.492 691.868 L926.051 691.868 L926.61 691.868 L927.169 691.868 L927.729 691.868 L928.288 691.868 L928.847 691.868 L929.406 691.868 L929.966 691.868 L930.525 691.868 L931.084 691.868 L931.644 691.868 L932.203 691.868 L932.762 691.868 L933.321 691.868 L933.881 691.868 L934.44 691.868 L934.999 691.868 L935.558 691.868 L936.118 691.868 L936.677 691.868 L937.236 691.868 L937.795 691.868 L938.355 691.868 L938.914 691.868 L939.473 691.868 L940.032 691.868 L940.592 691.868 L941.151 691.868 L941.71 691.868 L942.269 691.868 L942.829 691.868 L943.388 691.868 L943.947 691.868 L944.506 691.868 L945.066 691.868 L945.625 691.868 L946.184 691.868 L946.743 691.868 L947.303 691.868 L947.862 691.868 L948.421 691.868 L948.98 691.868 L949.54 691.868 L950.099 691.868 L950.658 691.868 L951.217 691.868 L951.777 691.868 L952.336 691.868 L952.895 691.868 L953.454 691.868 L954.014 691.868 L954.573 691.868 L955.132 691.868 L955.691 691.868 L956.251 691.868 L956.81 691.868 L957.369 691.868 L957.928 691.868 L958.488 691.868 L959.047 691.868 L959.606 691.868 L960.165 691.868 L960.725 691.868 L961.284 691.868 L961.843 691.868 L962.402 691.868 L962.962 691.868 L963.521 691.868 L964.08 691.868 L964.639 691.868 L965.199 691.868 L965.758 691.868 L966.317 691.868 L966.876 691.868 L967.436 691.868 L967.995 691.868 L968.554 691.868 L969.113 691.868 L969.673 691.868 L970.232 691.868 L970.791 691.868 L971.35 691.868 L971.91 691.868 L972.469 691.868 L973.028 691.868 L973.587 691.868 L974.147 691.868 L974.706 691.868 L975.265 691.868 L975.824 691.868 L976.384 691.868 L976.943 691.868 L977.502 691.868 L978.061 691.868 L978.621 691.868 L979.18 691.868 L979.739 691.868 L980.298 691.868 L980.858 691.868 L981.417 691.868 L981.976 691.868 L982.535 691.868 L983.095 691.868 L983.654 691.868 L984.213 691.868 L984.772 691.868 L985.332 691.868 L985.891 691.868 L986.45 691.868 L987.009 691.868 L987.569 691.868 L988.128 691.868 L988.687 691.868 L989.246 691.868 L989.806 691.868 L990.365 691.868 L990.924 691.868 L991.483 691.868 L992.043 691.868 L992.602 691.868 L993.161 691.868 L993.72 691.868 L994.28 691.868 L994.839 691.868 L995.398 691.868 L995.957 691.868 L996.517 691.868 L997.076 691.868 L997.635 691.868 L998.194 691.868 L998.754 691.868 L999.313 691.868 L999.872 691.868 L1000.43 691.868 L1000.99 691.868 L1001.55 691.868 L1002.11 691.868 L1002.67 691.868 L1003.23 691.868 L1003.79 691.868 L1004.35 691.868 L1004.91 691.868 L1005.46 691.868 L1006.02 691.868 L1006.58 691.868 L1007.14 691.868 L1007.7 691.868 L1008.26 691.868 L1008.82 691.868 L1009.38 691.868 L1009.94 691.868 L1010.5 691.868 L1011.06 691.868 L1011.62 691.868 L1012.18 691.868 L1012.73 691.868 L1013.29 691.868 L1013.85 691.868 L1014.41 691.868 L1014.97 691.868 L1015.53 691.868 L1016.09 691.868 L1016.65 691.868 L1017.21 691.868 L1017.77 691.868 L1018.33 691.868 L1018.89 691.868 L1019.45 691.868 L1020.01 691.868 L1020.56 691.868 L1021.12 691.868 L1021.68 691.868 L1022.24 691.868 L1022.8 691.868 L1023.36 691.868 L1023.92 691.868 L1024.48 691.868 L1025.04 691.868 L1025.6 691.868 L1026.16 691.868 L1026.72 691.868 L1027.28 691.868 L1027.83 691.868 L1028.39 691.868 L1028.95 691.868 L1029.51 691.868 L1030.07 691.868 L1030.63 691.868 L1031.19 691.868 L1031.75 691.868 L1032.31 691.868 L1032.87 691.868 L1033.43 691.868 L1033.99 691.868 L1034.55 691.868 L1035.1 691.868 L1035.66 691.868 L1036.22 691.868 L1036.78 691.868 L1037.34 691.868 L1037.9 691.868 L1038.46 691.868 L1039.02 691.868 L1039.58 691.868 L1040.14 691.868 L1040.7 691.868 L1041.26 691.868 L1041.82 691.868 L1042.38 691.868 L1042.93 691.868 L1043.49 691.868 L1044.05 691.868 L1044.61 691.868 L1045.17 691.868 L1045.73 691.868 L1046.29 691.868 L1046.85 691.868 L1047.41 691.868 L1047.97 691.868 L1048.53 691.868 L1049.09 691.868 L1049.65 691.868 L1050.2 691.868 L1050.76 691.868 L1051.32 691.868 L1051.88 691.868 L1052.44 691.868 L1053 691.868 L1053.56 691.868 L1054.12 691.868 L1054.68 691.868 L1055.24 691.868 L1055.8 691.868 L1056.36 691.868 L1056.92 691.868 L1057.48 691.868 L1058.03 691.868 L1058.59 691.868 L1059.15 691.868 L1059.71 691.868 L1060.27 691.868 L1060.83 691.868 L1061.39 691.868 L1061.95 691.868 L1062.51 691.868 L1063.07 691.868 L1063.63 691.868 L1064.19 691.868 L1064.75 691.868 L1065.3 691.868 L1065.86 691.868 L1066.42 691.868 L1066.98 691.868 L1067.54 691.868 L1068.1 691.868 L1068.66 691.868 L1069.22 691.868 L1069.78 691.868 L1070.34 691.868 L1070.9 691.868 L1071.46 691.868 L1072.02 691.868 L1072.57 691.868 L1073.13 691.868 L1073.69 691.868 L1074.25 691.868 L1074.81 691.868 L1075.37 691.868 L1075.93 691.868 L1076.49 691.868 L1077.05 691.868 L1077.61 691.868 L1078.17 691.868 L1078.73 691.868 L1079.29 691.868 L1079.85 691.868 L1080.4 691.868 L1080.96 691.868 L1081.52 691.868 L1082.08 691.868 L1082.64 691.868 L1083.2 691.868 L1083.76 691.868 L1084.32 691.868 L1084.88 691.868 L1085.44 691.868 L1086 691.868 L1086.56 691.868 L1087.12 691.868 L1087.67 691.868 L1088.23 691.868 L1088.79 691.868 L1089.35 691.868 L1089.91 691.868 L1090.47 691.868 L1091.03 691.868 L1091.59 691.868 L1092.15 691.868 L1092.71 691.868 L1093.27 691.868 L1093.83 691.868 L1094.39 691.868 L1094.94 691.868 L1095.5 691.868 L1096.06 691.868 L1096.62 691.868 L1097.18 691.868 L1097.74 691.868 L1098.3 691.868 L1098.86 691.868 L1099.42 691.868 L1099.98 691.868 L1100.54 691.868 L1101.1 691.868 L1101.66 691.868 L1102.22 691.868 L1102.77 691.868 L1103.33 691.868 L1103.89 691.868 L1104.45 691.868 L1105.01 691.868 L1105.57 691.868 L1106.13 691.868 L1106.69 691.868 L1107.25 691.868 L1107.81 691.868 L1108.37 691.868 L1108.93 691.868 L1109.49 691.868 L1110.04 691.868 L1110.6 691.868 L1111.16 691.868 L1111.72 691.868 L1112.28 691.868 L1112.84 691.868 L1113.4 691.868 L1113.96 691.868 L1114.52 691.868 L1115.08 691.868 L1115.64 691.868 L1116.2 691.868 L1116.76 691.868 L1117.31 691.868 L1117.87 691.868 L1118.43 691.868 L1118.99 691.868 L1119.55 691.868 L1120.11 691.868 L1120.67 691.868 L1121.23 691.868 L1121.79 691.868 L1122.35 691.868 L1122.91 691.868 L1123.47 691.868 L1124.03 691.868 L1124.59 691.868 L1125.14 691.868 L1125.7 691.868 L1126.26 691.868 L1126.82 691.868 L1127.38 691.868 L1127.94 691.868 L1128.5 691.868 L1129.06 691.868 L1129.62 691.868 L1130.18 691.868 L1130.74 691.868 L1131.3 691.868 L1131.86 691.868 L1132.41 691.868 L1132.97 691.868 L1133.53 691.868 L1134.09 691.868 L1134.65 691.868 L1135.21 691.868 L1135.77 691.868 L1136.33 691.868 L1136.89 691.868 L1137.45 691.868 L1138.01 691.868 L1138.57 691.868 L1139.13 691.868 L1139.68 691.868 L1140.24 691.868 L1140.8 691.868 L1141.36 691.868 L1141.92 691.868 L1142.48 691.868 L1143.04 691.868 L1143.6 691.868 L1144.16 691.868 L1144.72 691.868 L1145.28 691.868 L1145.84 691.868 L1146.4 691.868 L1146.96 691.868 L1147.51 691.868 L1148.07 691.868 L1148.63 691.868 L1149.19 691.868 L1149.75 691.868 L1150.31 691.868 L1150.87 691.868 L1151.43 691.868 L1151.99 691.868 L1152.55 691.868 L1153.11 691.868 L1153.67 691.868 L1154.23 691.868 L1154.78 691.868 L1155.34 691.868 L1155.9 691.868 L1156.46 691.868 L1157.02 691.868 L1157.58 691.868 L1158.14 691.868 L1158.7 691.868 L1159.26 691.868 L1159.82 691.868 L1160.38 691.868 L1160.94 691.868 L1161.5 691.868 L1162.05 691.868 L1162.61 691.868 L1163.17 691.868 L1163.73 691.868 L1164.29 691.868 L1164.85 691.868 L1165.41 691.868 L1165.97 691.868 L1166.53 691.868 L1167.09 691.868 L1167.65 691.868 L1168.21 691.868 L1168.77 691.868 L1169.33 691.868 L1169.88 691.868 L1170.44 691.868 L1171 691.868 L1171.56 691.868 L1172.12 691.868 L1172.68 691.868 L1173.24 691.868 L1173.8 691.868 L1174.36 691.868 L1174.92 691.868 L1175.48 691.868 L1176.04 691.868 L1176.6 691.868 L1177.15 691.868 L1177.71 691.868 L1178.27 691.868 L1178.83 691.868 L1179.39 691.868 L1179.95 691.868 L1180.51 691.868 L1181.07 691.868 L1181.63 691.868 L1182.19 691.868 L1182.75 691.868 L1183.31 691.868 L1183.87 691.868 L1184.43 691.868 L1184.98 691.868 L1185.54 691.868 L1186.1 691.868 L1186.66 691.868 L1187.22 691.868 L1187.78 691.868 L1188.34 691.868 L1188.9 691.868 L1189.46 691.868 L1190.02 691.868 L1190.58 691.868 L1191.14 691.868 L1191.7 691.868 L1192.25 691.868 L1192.81 691.868 L1193.37 691.868 L1193.93 691.868 L1194.49 691.868 L1195.05 691.868 L1195.61 691.868 L1196.17 691.868 L1196.73 691.868 L1197.29 691.868 L1197.85 691.868 L1198.41 691.868 L1198.97 691.868 L1199.52 691.868 L1200.08 691.868 L1200.64 691.868 L1201.2 691.868 L1201.76 691.868 L1202.32 691.868 L1202.88 691.868 L1203.44 691.868 L1204 691.868 L1204.56 691.868 L1205.12 691.868 L1205.68 691.868 L1206.24 691.868 L1206.8 691.868 L1207.35 691.868 L1207.91 691.868 L1208.47 691.868 L1209.03 691.868 L1209.59 691.868 L1210.15 691.868 L1210.71 691.868 L1211.27 691.868 L1211.83 691.868 L1212.39 691.868 L1212.95 691.868 L1213.51 691.868 L1214.07 691.868 L1214.62 691.868 L1215.18 691.868 L1215.74 691.868 L1216.3 691.868 L1216.86 691.868 L1217.42 691.868 L1217.98 691.868 L1218.54 691.868 L1219.1 691.868 L1219.66 691.868 L1220.22 691.868 L1220.78 691.868 L1221.34 691.868 L1221.89 691.868 L1222.45 691.868 L1223.01 691.868 L1223.57 691.868 L1224.13 691.868 L1224.69 691.868 L1225.25 691.868 L1225.81 691.868 L1226.37 691.868 L1226.93 691.868 L1227.49 691.868 L1228.05 691.868 L1228.61 691.868 L1229.17 691.868 L1229.72 691.868 L1230.28 691.868 L1230.84 691.868 L1231.4 691.868 L1231.96 691.868 L1232.52 691.868 L1233.08 691.868 L1233.64 691.868 L1234.2 691.868 L1234.76 691.868 L1235.32 691.868 L1235.88 691.868 L1236.44 691.868 L1236.99 691.868 L1237.55 691.868 L1238.11 691.868 L1238.67 691.868 L1239.23 691.868 L1239.79 691.868 L1240.35 691.868 L1240.91 691.868 L1241.47 691.868 L1242.03 691.868 L1242.59 691.868 L1243.15 691.868 L1243.71 691.868 L1244.26 691.868 L1244.82 691.868 L1245.38 691.868 L1245.94 691.868 L1246.5 691.868 L1247.06 691.868 L1247.62 691.868 L1248.18 691.868 L1248.74 691.868 L1249.3 691.868 L1249.86 691.868 L1250.42 691.868 L1250.98 691.868 L1251.54 691.868 L1252.09 691.868 L1252.65 691.868 L1253.21 691.868 L1253.77 691.868 L1254.33 691.868 L1254.89 691.868 L1255.45 691.868 L1256.01 691.868 L1256.57 691.868 L1257.13 691.868 L1257.69 691.868 L1258.25 691.868 L1258.81 691.868 L1259.36 691.868 L1259.92 691.868 L1260.48 691.868 L1261.04 691.868 L1261.6 691.868 L1262.16 691.868 L1262.72 691.868 L1263.28 691.868 L1263.84 691.868 L1264.4 691.868 L1264.96 691.868 L1265.52 691.868 L1266.08 691.868 L1266.63 691.868 L1267.19 691.868 L1267.75 691.868 L1268.31 691.868 L1268.87 691.868 L1269.43 691.868 L1269.99 691.868 L1270.55 691.868 L1271.11 691.868 L1271.67 691.868 L1272.23 691.868 L1272.79 691.868 L1273.35 691.868 L1273.91 691.868 L1274.46 691.868 L1275.02 691.868 L1275.58 691.868 L1276.14 691.868 L1276.7 691.868 L1277.26 691.868 L1277.82 691.868 L1278.38 691.868 L1278.94 691.868 L1279.5 691.868 L1280.06 691.868 L1280.62 691.868 L1281.18 691.868 L1281.73 691.868 L1282.29 691.868 L1282.85 691.868 L1283.41 691.868 L1283.97 691.868 L1284.53 691.868 L1285.09 691.868 L1285.65 691.868 L1286.21 691.868 L1286.77 691.868 L1287.33 691.868 L1287.89 691.868 L1288.45 691.868 L1289 691.868 L1289.56 691.868 L1290.12 691.868 L1290.68 691.868 L1291.24 691.868 L1291.8 691.868 L1292.36 691.868 L1292.92 691.868 L1293.48 691.868 L1294.04 691.868 L1294.6 691.868 L1295.16 691.868 L1295.72 691.868 L1296.28 691.868 L1296.83 691.868 L1297.39 691.868 L1297.95 691.868 L1298.51 691.868 L1299.07 691.868 L1299.63 691.868 L1300.19 691.868 L1300.75 691.868 L1301.31 691.868 L1301.87 691.868 L1302.43 691.868 L1302.99 691.868 L1303.55 691.868 L1304.1 691.868 L1304.66 691.868 L1305.22 691.868 L1305.78 691.868 L1306.34 691.868 L1306.9 691.868 L1307.46 691.868 L1308.02 691.868 L1308.58 691.868 L1309.14 691.868 L1309.7 691.868 L1310.26 691.868 L1310.82 691.868 L1311.38 691.868 L1311.93 691.868 L1312.49 691.868 L1313.05 691.868 L1313.61 691.868 L1314.17 691.868 L1314.73 691.868 L1315.29 691.868 L1315.85 691.868 L1316.41 691.868 L1316.97 691.868 L1317.53 691.868 L1318.09 691.868 L1318.65 691.868 L1319.2 691.868 L1319.76 691.868 L1320.32 691.868 L1320.88 691.868 L1321.44 691.868 L1322 691.868 L1322.56 691.868 L1323.12 691.868 L1323.68 691.868 L1324.24 691.868 L1324.8 691.868 L1325.36 691.868 L1325.92 691.868 L1326.47 691.868 L1327.03 691.868 L1327.59 691.868 L1328.15 691.868 L1328.71 691.868 L1329.27 691.868 L1329.83 691.868 L1330.39 691.868 L1330.95 691.868 L1331.51 691.868 L1332.07 691.868 L1332.63 691.868 L1333.19 691.868 L1333.75 691.868 L1334.3 691.868 L1334.86 691.868 L1335.42 691.868 L1335.98 691.868 L1336.54 691.868 L1337.1 691.868 L1337.66 691.868 L1338.22 691.868 L1338.78 691.868 L1339.34 691.868 L1339.9 691.868 L1340.46 691.868 L1341.02 691.868 L1341.57 691.868 L1342.13 691.868 L1342.69 691.868 L1343.25 691.868 L1343.81 691.868 L1344.37 691.868 L1344.93 691.868 L1345.49 691.868 L1346.05 691.868 L1346.61 691.868 L1347.17 691.868 L1347.73 691.868 L1348.29 691.868 L1348.84 691.868 L1349.4 691.868 L1349.96 691.868 L1350.52 691.868 L1351.08 691.868 L1351.64 691.868 L1352.2 691.868 L1352.76 691.868 L1353.32 691.868 L1353.88 691.868 L1354.44 691.868 L1355 691.868 L1355.56 691.868 L1356.12 691.868 L1356.67 691.868 L1357.23 691.868 L1357.79 691.868 L1358.35 691.868 L1358.91 691.868 L1359.47 691.868 L1360.03 691.868 L1360.59 691.868 L1361.15 691.868 L1361.71 691.868 L1362.27 691.868 L1362.83 691.868 L1363.39 691.868 L1363.94 691.868 L1364.5 691.868 L1365.06 691.868 L1365.62 691.868 L1366.18 691.868 L1366.74 691.868 L1367.3 691.868 L1367.86 691.868 L1368.42 691.868 L1368.98 691.868 L1369.54 691.868 L1370.1 691.868 L1370.66 691.868 L1371.21 691.868 L1371.77 691.868 L1372.33 691.868 L1372.89 691.868 L1373.45 691.868 L1374.01 691.868 L1374.57 691.868 L1375.13 691.868 L1375.69 691.868 L1376.25 691.868 L1376.81 691.868 L1377.37 691.868 L1377.93 691.868 L1378.49 691.868 L1379.04 691.868 L1379.6 691.868 L1380.16 691.868 L1380.72 691.868 L1381.28 691.868 L1381.84 691.868 L1382.4 691.868 L1382.96 691.868 L1383.52 691.868 L1384.08 691.868 L1384.64 691.868 L1385.2 691.868 L1385.76 691.868 L1386.31 691.868 L1386.87 691.868 L1387.43 691.868 L1387.99 691.868 L1388.55 691.868 L1389.11 691.868 L1389.67 691.868 L1390.23 691.868 L1390.79 691.868 L1391.35 691.868 L1391.91 691.868 L1392.47 691.868 L1393.03 691.868 L1393.58 691.868 L1394.14 691.868 L1394.7 691.868 L1395.26 691.868 L1395.82 691.868 L1396.38 691.868 L1396.94 691.868 L1397.5 691.868 L1398.06 691.868 L1398.62 691.868 L1399.18 691.868 L1399.74 691.868 L1400.3 691.868 L1400.86 691.868 L1401.41 691.868 L1401.97 691.868 L1402.53 691.868 L1403.09 691.868 L1403.65 691.868 L1404.21 691.868 L1404.77 691.868 L1405.33 691.868 L1405.89 691.868 L1406.45 691.868 L1407.01 691.868 L1407.57 691.868 L1408.13 691.868 L1408.68 691.868 L1409.24 691.868 L1409.8 691.868 L1410.36 691.868 L1410.92 691.868 L1411.48 691.868 L1412.04 691.868 L1412.6 691.868 L1413.16 691.868 L1413.72 691.868 L1414.28 691.868 L1414.84 691.868 L1415.4 691.868 L1415.95 691.868 L1416.51 691.868 L1417.07 691.868 L1417.63 691.868 L1418.19 691.868 L1418.75 691.868 L1419.31 691.868 L1419.87 691.868 L1420.43 691.868 L1420.99 691.868 L1421.55 691.868 L1422.11 691.868 L1422.67 691.868 L1423.23 691.868 L1423.78 691.868 L1424.34 691.868 L1424.9 691.868 L1425.46 691.868 L1426.02 691.868 L1426.58 691.868 L1427.14 691.868 L1427.7 691.868 L1428.26 691.868 L1428.82 691.868 L1429.38 691.868 L1429.94 691.868 L1430.5 691.868 L1431.05 691.868 L1431.61 691.868 L1432.17 691.868 L1432.73 691.868 L1433.29 691.868 L1433.85 691.868 L1434.41 691.868 L1434.97 691.868 L1435.53 691.868 L1436.09 691.868 L1436.65 691.868 L1437.21 691.868 L1437.77 691.868 L1438.33 691.868 L1438.88 691.868 L1439.44 691.868 L1440 691.868 L1440.56 691.868 L1441.12 691.868 L1441.68 691.868 L1442.24 691.868 L1442.8 691.868 L1443.36 691.868 L1443.92 691.868 L1444.48 691.868 L1445.04 691.868 L1445.6 691.868 L1446.15 691.868 L1446.71 691.868 L1447.27 691.868 L1447.83 691.868 L1448.39 691.868 L1448.95 691.868 L1449.51 691.868 L1450.07 691.868 L1450.63 691.868 L1451.19 691.868 L1451.75 691.868 L1452.31 691.868 L1452.87 691.868 L1453.42 691.868 L1453.98 691.868 L1454.54 691.868 L1455.1 691.868 L1455.66 691.868 L1456.22 691.868 L1456.78 691.868 L1457.34 691.868 L1457.9 691.868 L1458.46 691.868 L1459.02 691.868 L1459.58 691.868 L1460.14 691.868 L1460.7 691.868 L1461.25 691.868 L1461.81 691.868 L1462.37 691.868 L1462.93 691.868 L1463.49 691.868 L1464.05 691.868 L1464.61 691.868 L1465.17 691.868 L1465.73 691.868 L1466.29 691.868 L1466.85 691.868 L1467.41 691.868 L1467.97 691.868 L1468.52 691.868 L1469.08 691.868 L1469.64 691.868 L1470.2 691.868 L1470.76 691.868 L1471.32 691.868 L1471.88 691.868 L1472.44 691.868 L1473 691.868 L1473.56 691.868 L1474.12 691.868 L1474.68 691.868 L1475.24 691.868 L1475.79 691.868 L1476.35 691.868 L1476.91 691.868 L1477.47 691.868 L1478.03 691.868 L1478.59 691.868 L1479.15 691.868 L1479.71 691.868 L1480.27 691.868 L1480.83 691.868 L1481.39 691.868 L1481.95 691.868 L1482.51 691.868 L1483.07 691.868 L1483.62 691.868 L1484.18 691.868 L1484.74 691.868 L1485.3 691.868 L1485.86 691.868 L1486.42 691.868 L1486.98 691.868 L1487.54 691.868 L1488.1 691.868 L1488.66 691.868 L1489.22 691.868 L1489.78 691.868 L1490.34 691.868 L1490.89 691.868 L1491.45 691.868 L1492.01 691.868 L1492.57 691.868 L1493.13 691.868 L1493.69 691.868 L1494.25 691.868 L1494.81 691.868 L1495.37 691.868 L1495.93 691.868 L1496.49 691.868 L1497.05 691.868 L1497.61 691.868 L1498.16 691.868 L1498.72 691.868 L1499.28 691.868 L1499.84 691.868 L1500.4 691.868 L1500.96 691.868 L1501.52 691.868 L1502.08 691.868 L1502.64 691.868 L1503.2 691.868 L1503.76 691.868 L1504.32 691.868 L1504.88 691.868 L1505.44 691.868 L1505.99 691.868 L1506.55 691.868 L1507.11 691.868 L1507.67 691.868 L1508.23 691.868 L1508.79 691.868 L1509.35 691.868 L1509.91 691.868 L1510.47 691.868 L1511.03 691.868 L1511.59 691.868 L1512.15 691.868 L1512.71 691.868 L1513.26 691.868 L1513.82 691.868 L1514.38 691.868 L1514.94 691.868 L1515.5 691.868 L1516.06 691.868 L1516.62 691.868 L1517.18 691.868 L1517.74 691.868 L1518.3 691.868 L1518.86 691.868 L1519.42 691.868 L1519.98 691.868 L1520.53 691.868 L1521.09 691.868 L1521.65 691.868 L1522.21 691.868 L1522.77 691.868 L1523.33 691.868 L1523.89 691.868 L1524.45 691.868 L1525.01 691.868 L1525.57 691.868 L1526.13 691.868 L1526.69 691.868 L1527.25 691.868 L1527.81 691.868 L1528.36 691.868 L1528.92 691.868 L1529.48 691.868 L1530.04 691.868 L1530.6 691.868 L1531.16 691.868 L1531.72 691.868 L1532.28 691.868 L1532.84 691.868 L1533.4 691.868 L1533.96 691.868 L1534.52 691.868 L1535.08 691.868 L1535.63 691.868 L1536.19 691.868 L1536.75 691.868 L1537.31 691.868 L1537.87 691.868 L1538.43 691.868 L1538.99 691.868 L1539.55 691.868 L1540.11 691.868 L1540.67 691.868 L1541.23 691.868 L1541.79 691.868 L1542.35 691.868 L1542.9 691.868 L1543.46 691.868 L1544.02 691.868 L1544.58 691.868 L1545.14 691.868 L1545.7 691.868 L1546.26 691.868 L1546.82 691.868 L1547.38 691.868 L1547.94 691.868 L1548.5 691.868 L1549.06 691.868 L1549.62 691.868 L1550.18 691.868 L1550.73 691.868 L1551.29 691.868 L1551.85 691.868 L1552.41 691.868 L1552.97 691.868 L1553.53 691.868 L1554.09 691.868 L1554.65 691.868 L1555.21 691.868 L1555.77 691.868 L1556.33 691.868 L1556.89 691.868 L1557.45 691.868 L1558 691.868 L1558.56 691.868 L1559.12 691.868 L1559.68 691.868 L1560.24 691.868 L1560.8 691.868 L1561.36 691.868 L1561.92 691.868 L1562.48 691.868 L1563.04 691.868 L1563.6 691.868 L1564.16 691.868 L1564.72 691.868 L1565.28 691.868 L1565.83 691.868 L1566.39 691.868 L1566.95 691.868 L1567.51 691.868 L1568.07 691.868 L1568.63 691.868 L1569.19 691.868 L1569.75 691.868 L1570.31 691.868 L1570.87 691.868 L1571.43 691.868 L1571.99 691.868 L1572.55 691.868 L1573.1 691.868 L1573.66 691.868 L1574.22 691.868 L1574.78 691.868 L1575.34 691.868 L1575.9 691.868 L1576.46 691.868 L1577.02 691.868 L1577.58 691.868 L1578.14 691.868 L1578.7 691.868 L1579.26 691.868 L1579.82 691.868 L1580.37 691.868 L1580.93 691.868 L1581.49 691.868 L1582.05 691.868 L1582.61 691.868 L1583.17 691.868 L1583.73 691.868 L1584.29 691.868 L1584.85 691.868 L1585.41 691.868 L1585.97 691.868 L1586.53 691.868 L1587.09 691.868 L1587.65 691.868 L1588.2 691.868 L1588.76 691.868 L1589.32 691.868 L1589.88 691.868 L1590.44 691.868 L1591 691.868 L1591.56 691.868 L1592.12 691.868 L1592.68 691.868 L1593.24 691.868 L1593.8 691.868 L1594.36 691.868 L1594.92 691.868 L1595.47 691.868 L1596.03 691.868 L1596.59 691.868 L1597.15 691.868 L1597.71 691.868 L1598.27 691.868 L1598.83 691.868 L1599.39 691.868 L1599.95 691.868 L1600.51 691.868 L1601.07 691.868 L1601.63 691.868 L1602.19 691.868 L1602.74 691.868 L1603.3 691.868 L1603.86 691.868 L1604.42 691.868 L1604.98 691.868 L1605.54 691.868 L1606.1 691.868 L1606.66 691.868 L1607.22 691.868 L1607.78 691.868 L1608.34 691.868 L1608.9 691.868 L1609.46 691.868 L1610.02 691.868 L1610.57 691.868 L1611.13 691.868 L1611.69 691.868 L1612.25 691.868 L1612.81 691.868 L1613.37 691.868 L1613.93 691.868 L1614.49 691.868 L1615.05 691.868 L1615.61 691.868 L1616.17 691.868 L1616.73 691.868 L1617.29 691.868 L1617.84 691.868 L1618.4 691.868 L1618.96 691.868 L1619.52 691.868 L1620.08 691.868 L1620.64 691.868 L1621.2 691.868 L1621.76 691.868 L1622.32 691.868 L1622.88 691.868 L1623.44 691.868 L1624 691.868 L1624.56 691.868 L1625.11 691.868 L1625.67 691.868 L1626.23 691.868 L1626.79 691.868 L1627.35 691.868 L1627.91 691.868 L1628.47 691.868 L1629.03 691.868 L1629.59 691.868 L1630.15 691.868 L1630.71 691.868 L1631.27 691.868 L1631.83 691.868 L1632.39 691.868 L1632.94 691.868 L1633.5 691.868 L1634.06 691.868 L1634.62 691.868 L1635.18 691.868 L1635.74 691.868 L1636.3 691.868 L1636.86 691.868 L1637.42 691.868 L1637.98 691.868 L1638.54 691.868 L1639.1 691.868 L1639.66 691.868 L1640.21 691.868 L1640.77 691.868 L1641.33 691.868 L1641.89 691.868 L1642.45 691.868 L1643.01 691.868 L1643.57 691.868 L1644.13 691.868 L1644.69 691.868 L1645.25 691.868 L1645.81 691.868 L1646.37 691.868 L1646.93 691.868 L1647.48 691.868 L1648.04 691.868 L1648.6 691.868 L1649.16 691.868 L1649.72 691.868 L1650.28 691.868 L1650.84 691.868 L1651.4 691.868 L1651.96 691.868 L1652.52 691.868 L1653.08 691.868 L1653.64 691.868 L1654.2 691.868 L1654.76 691.868 L1655.31 691.868 L1655.87 691.868 L1656.43 691.868 L1656.99 691.868 L1657.55 691.868 L1658.11 691.868 L1658.67 691.868 L1659.23 691.868 L1659.79 691.868 L1660.35 691.868 L1660.91 691.868 L1661.47 691.868 L1662.03 691.868 L1662.58 691.868 L1663.14 691.868 L1663.7 691.868 L1664.26 691.868 L1664.82 691.868 L1665.38 691.868 L1665.94 691.868 L1666.5 691.868 L1667.06 691.868 L1667.62 691.868 L1668.18 691.868 L1668.74 691.868 L1669.3 691.868 L1669.85 691.868 L1670.41 691.868 L1670.97 691.868 L1671.53 691.868 L1672.09 691.868 L1672.65 691.868 L1673.21 691.868 L1673.77 691.868 L1674.33 691.868 L1674.89 691.868 L1675.45 691.868 L1676.01 691.868 L1676.57 691.868 L1677.13 691.868 L1677.68 691.868 L1678.24 691.868 L1678.8 691.868 L1679.36 691.868 L1679.92 691.868 L1680.48 691.868 L1681.04 691.868 L1681.6 691.868 L1682.16 691.868 L1682.72 691.868 L1683.28 691.868 L1683.84 691.868 L1684.4 691.868 L1684.95 691.868 L1685.51 691.868 L1686.07 691.868 L1686.63 691.868 L1687.19 691.868 L1687.75 691.868 L1688.31 691.868 L1688.87 691.868 L1689.43 691.868 L1689.99 691.868 L1690.55 691.868 L1691.11 691.868 L1691.67 691.868 L1692.23 691.868 L1692.78 691.868 L1693.34 691.868 L1693.9 691.868 L1694.46 691.868 L1695.02 691.868 L1695.58 691.868 L1696.14 691.868 L1696.7 691.868 L1697.26 691.868 L1697.82 691.868 L1698.38 691.868 L1698.94 691.868 L1699.5 691.868 L1700.05 691.868 L1700.61 691.868 L1701.17 691.868 L1701.73 691.868 L1702.29 691.868 L1702.85 691.868 L1703.41 691.868 L1703.97 691.868 L1704.53 691.868 L1705.09 691.868 L1705.65 691.868 L1706.21 691.868 L1706.77 691.868 L1707.32 691.868 L1707.88 691.868 L1708.44 691.868 L1709 691.868 L1709.56 691.868 L1710.12 691.868 L1710.68 691.868 L1711.24 691.868 L1711.8 691.868 L1712.36 691.868 L1712.92 691.868 L1713.48 691.868 L1714.04 691.868 L1714.6 691.868 L1715.15 691.868 L1715.71 691.868 L1716.27 691.868 L1716.83 691.868 L1717.39 691.868 L1717.95 691.868 L1718.51 691.868 L1719.07 691.868 L1719.63 691.868 L1720.19 691.868 L1720.75 691.868 L1721.31 691.868 L1721.87 691.868 L1722.42 691.868 L1722.98 691.868 L1723.54 691.868 L1724.1 691.868 L1724.66 691.868 L1725.22 691.868 L1725.78 691.868 L1726.34 691.868 L1726.9 691.868 L1727.46 691.868 L1728.02 691.868 L1728.58 691.868 L1729.14 691.868 L1729.69 691.868 L1730.25 691.868 L1730.81 691.868 L1731.37 691.868 L1731.93 691.868 L1732.49 691.868 L1733.05 691.868 L1733.61 691.868 L1734.17 691.868 L1734.73 691.868 L1735.29 691.868 L1735.85 691.868 L1736.41 691.868 L1736.97 691.868 L1737.52 691.868 L1738.08 691.868 L1738.64 691.868 L1739.2 691.868 L1739.76 691.868 L1740.32 691.868 L1740.88 691.868 L1741.44 691.868 L1742 691.868 L1742.56 691.868 L1743.12 691.868 L1743.68 691.868 L1744.24 691.868 L1744.79 691.868 L1745.35 691.868 L1745.91 691.868 L1746.47 691.868 L1747.03 691.868 L1747.59 691.868 L1748.15 691.868 L1748.71 691.868 L1749.27 691.868 L1749.83 691.868 L1750.39 691.868 L1750.95 691.868 L1751.51 691.868 L1752.06 691.868 L1752.62 691.868 L1753.18 691.868 L1753.74 691.868 L1754.3 691.868 L1754.86 691.868 L1755.42 691.868 L1755.98 691.868 L1756.54 691.868 L1757.1 691.868 L1757.66 691.868 L1758.22 691.868 L1758.78 691.868 L1759.34 691.868 L1759.89 691.868 L1760.45 691.868 L1761.01 691.868 L1761.57 691.868 L1762.13 691.868 L1762.69 691.868 L1763.25 691.868 L1763.81 691.868 L1764.37 691.868 L1764.93 691.868 L1765.49 691.868 L1766.05 691.868 L1766.61 691.868 L1767.16 691.868 L1767.72 691.868 L1768.28 691.868 L1768.84 691.868 L1769.4 691.868 L1769.96 691.868 L1770.52 691.868 L1771.08 691.868 L1771.64 691.868 L1772.2 691.868 L1772.76 691.868 L1773.32 691.868 L1773.88 691.868 L1774.43 691.868 L1774.99 691.868 L1775.55 691.868 L1776.11 691.868 L1776.67 691.868 L1777.23 691.868 L1777.79 691.868 L1778.35 691.868 L1778.91 691.868 L1779.47 691.868 L1780.03 691.868 L1780.59 691.868 L1781.15 691.868 L1781.71 691.868 L1782.26 691.868 L1782.82 691.868 L1783.38 691.868 L1783.94 691.868 L1784.5 691.868 L1785.06 691.868 L1785.62 691.868 L1786.18 691.868 L1786.74 691.868 L1787.3 691.868 L1787.86 691.868 L1788.42 691.868 L1788.98 691.868 L1789.53 691.868 L1790.09 691.868 L1790.65 691.868 L1791.21 691.868 L1791.77 691.868 L1792.33 691.868 L1792.89 691.868 L1793.45 691.868 L1794.01 691.868 L1794.57 691.868 L1795.13 691.868 L1795.69 691.868 L1796.25 691.868 L1796.8 691.868 L1797.36 691.868 L1797.92 691.868 L1798.48 691.868 L1799.04 691.868 L1799.6 691.868 L1800.16 691.868 L1800.72 691.868 L1801.28 691.868 L1801.84 691.868 L1802.4 691.868 L1802.96 691.868 L1803.52 691.868 L1804.08 691.868 L1804.63 691.868 L1805.19 691.868 L1805.75 691.868 L1806.31 691.868 L1806.87 691.868 L1807.43 691.868 L1807.99 691.868 L1808.55 691.868 L1809.11 691.868 L1809.67 691.868 L1810.23 691.868 L1810.79 691.868 L1811.35 691.868 L1811.9 691.868 L1812.46 691.868 L1813.02 691.868 L1813.58 691.868 L1814.14 691.868 L1814.7 691.868 L1815.26 691.868 L1815.82 691.868 L1816.38 691.868 L1816.94 691.868 L1817.5 691.868 L1818.06 691.868 L1818.62 691.868 L1819.18 691.868 L1819.73 691.868 L1820.29 691.868 L1820.85 691.868 L1821.41 691.868 L1821.97 691.868 L1822.53 691.868 L1823.09 691.868 L1823.65 691.868 L1824.21 691.868 L1824.77 691.868 L1825.33 691.868 L1825.89 691.868 L1826.45 691.868 L1827 691.868 L1827.56 691.868 L1828.12 691.868 L1828.68 691.868 L1829.24 691.868 L1829.8 691.868 L1830.36 691.868 L1830.92 691.868 L1831.48 691.868 L1832.04 691.868 L1832.6 691.868 L1833.16 691.868 L1833.72 691.868 L1834.27 691.868 L1834.83 691.868 L1835.39 691.868 L1835.95 691.868 L1836.51 691.868 L1837.07 691.868 L1837.63 691.868 L1838.19 691.868 L1838.19 683.783 L1837.63 683.783 L1837.07 683.783 L1836.51 683.783 L1835.95 683.783 L1835.39 683.783 L1834.83 683.783 L1834.27 683.783 L1833.72 683.783 L1833.16 683.783 L1832.6 683.783 L1832.04 683.783 L1831.48 683.783 L1830.92 683.783 L1830.36 683.783 L1829.8 683.783 L1829.24 683.783 L1828.68 683.783 L1828.12 683.783 L1827.56 683.783 L1827 683.783 L1826.45 683.783 L1825.89 683.783 L1825.33 683.783 L1824.77 683.783 L1824.21 683.783 L1823.65 683.783 L1823.09 683.783 L1822.53 683.783 L1821.97 683.783 L1821.41 683.783 L1820.85 683.783 L1820.29 683.783 L1819.73 683.783 L1819.18 683.783 L1818.62 683.783 L1818.06 683.783 L1817.5 683.783 L1816.94 683.783 L1816.38 683.783 L1815.82 683.783 L1815.26 683.783 L1814.7 683.783 L1814.14 683.783 L1813.58 683.783 L1813.02 683.783 L1812.46 683.783 L1811.9 683.783 L1811.35 683.783 L1810.79 683.783 L1810.23 683.783 L1809.67 683.783 L1809.11 683.783 L1808.55 683.783 L1807.99 683.783 L1807.43 683.783 L1806.87 683.783 L1806.31 683.783 L1805.75 683.783 L1805.19 683.783 L1804.63 683.783 L1804.08 683.783 L1803.52 683.783 L1802.96 683.783 L1802.4 683.783 L1801.84 683.783 L1801.28 683.783 L1800.72 683.783 L1800.16 683.783 L1799.6 683.783 L1799.04 683.783 L1798.48 683.783 L1797.92 683.783 L1797.36 683.783 L1796.8 683.783 L1796.25 683.783 L1795.69 683.783 L1795.13 683.783 L1794.57 683.783 L1794.01 683.783 L1793.45 683.783 L1792.89 683.783 L1792.33 683.783 L1791.77 683.783 L1791.21 683.783 L1790.65 683.783 L1790.09 683.783 L1789.53 683.783 L1788.98 683.783 L1788.42 683.783 L1787.86 683.783 L1787.3 683.783 L1786.74 683.783 L1786.18 683.783 L1785.62 683.783 L1785.06 683.783 L1784.5 683.783 L1783.94 683.783 L1783.38 683.783 L1782.82 683.783 L1782.26 683.783 L1781.71 683.783 L1781.15 683.783 L1780.59 683.783 L1780.03 683.783 L1779.47 683.783 L1778.91 683.783 L1778.35 683.783 L1777.79 683.783 L1777.23 683.783 L1776.67 683.783 L1776.11 683.783 L1775.55 683.783 L1774.99 683.783 L1774.43 683.783 L1773.88 683.783 L1773.32 683.783 L1772.76 683.783 L1772.2 683.783 L1771.64 683.783 L1771.08 683.783 L1770.52 683.783 L1769.96 683.783 L1769.4 683.783 L1768.84 683.783 L1768.28 683.783 L1767.72 683.783 L1767.16 683.783 L1766.61 683.783 L1766.05 683.783 L1765.49 683.783 L1764.93 683.783 L1764.37 683.783 L1763.81 683.783 L1763.25 683.783 L1762.69 683.783 L1762.13 683.783 L1761.57 683.783 L1761.01 683.783 L1760.45 683.783 L1759.89 683.783 L1759.34 683.783 L1758.78 683.783 L1758.22 683.783 L1757.66 683.783 L1757.1 683.783 L1756.54 683.783 L1755.98 683.783 L1755.42 683.783 L1754.86 683.783 L1754.3 683.783 L1753.74 683.783 L1753.18 683.783 L1752.62 683.783 L1752.06 683.783 L1751.51 683.783 L1750.95 683.783 L1750.39 683.783 L1749.83 683.783 L1749.27 683.783 L1748.71 683.783 L1748.15 683.783 L1747.59 683.783 L1747.03 683.783 L1746.47 683.783 L1745.91 683.783 L1745.35 683.783 L1744.79 683.783 L1744.24 683.783 L1743.68 683.783 L1743.12 683.783 L1742.56 683.783 L1742 683.783 L1741.44 683.783 L1740.88 683.783 L1740.32 683.783 L1739.76 683.783 L1739.2 683.783 L1738.64 683.783 L1738.08 683.783 L1737.52 683.783 L1736.97 683.783 L1736.41 683.783 L1735.85 683.783 L1735.29 683.783 L1734.73 683.783 L1734.17 683.783 L1733.61 683.783 L1733.05 683.783 L1732.49 683.783 L1731.93 683.783 L1731.37 683.783 L1730.81 683.783 L1730.25 683.783 L1729.69 683.783 L1729.14 683.783 L1728.58 683.783 L1728.02 683.783 L1727.46 683.783 L1726.9 683.783 L1726.34 683.783 L1725.78 683.783 L1725.22 683.783 L1724.66 683.783 L1724.1 683.783 L1723.54 683.783 L1722.98 683.783 L1722.42 683.783 L1721.87 683.783 L1721.31 683.783 L1720.75 683.783 L1720.19 683.783 L1719.63 683.783 L1719.07 683.783 L1718.51 683.783 L1717.95 683.783 L1717.39 683.783 L1716.83 683.783 L1716.27 683.783 L1715.71 683.783 L1715.15 683.783 L1714.6 683.783 L1714.04 683.783 L1713.48 683.783 L1712.92 683.783 L1712.36 683.783 L1711.8 683.783 L1711.24 683.783 L1710.68 683.783 L1710.12 683.783 L1709.56 683.783 L1709 683.783 L1708.44 683.783 L1707.88 683.783 L1707.32 683.783 L1706.77 683.783 L1706.21 683.783 L1705.65 683.783 L1705.09 683.783 L1704.53 683.783 L1703.97 683.783 L1703.41 683.783 L1702.85 683.783 L1702.29 683.783 L1701.73 683.783 L1701.17 683.783 L1700.61 683.783 L1700.05 683.783 L1699.5 683.783 L1698.94 683.783 L1698.38 683.783 L1697.82 683.783 L1697.26 683.783 L1696.7 683.783 L1696.14 683.783 L1695.58 683.783 L1695.02 683.783 L1694.46 683.783 L1693.9 683.783 L1693.34 683.783 L1692.78 683.783 L1692.23 683.783 L1691.67 683.783 L1691.11 683.783 L1690.55 683.783 L1689.99 683.783 L1689.43 683.783 L1688.87 683.783 L1688.31 683.783 L1687.75 683.783 L1687.19 683.783 L1686.63 683.783 L1686.07 683.783 L1685.51 683.783 L1684.95 683.783 L1684.4 683.783 L1683.84 683.783 L1683.28 683.783 L1682.72 683.783 L1682.16 683.783 L1681.6 683.783 L1681.04 683.783 L1680.48 683.783 L1679.92 683.783 L1679.36 683.783 L1678.8 683.783 L1678.24 683.783 L1677.68 683.783 L1677.13 683.783 L1676.57 683.783 L1676.01 683.783 L1675.45 683.783 L1674.89 683.783 L1674.33 683.783 L1673.77 683.783 L1673.21 683.783 L1672.65 683.783 L1672.09 683.783 L1671.53 683.783 L1670.97 683.783 L1670.41 683.783 L1669.85 683.783 L1669.3 683.783 L1668.74 683.783 L1668.18 683.783 L1667.62 683.783 L1667.06 683.783 L1666.5 683.783 L1665.94 683.783 L1665.38 683.783 L1664.82 683.783 L1664.26 683.783 L1663.7 683.783 L1663.14 683.783 L1662.58 683.783 L1662.03 683.783 L1661.47 683.783 L1660.91 683.783 L1660.35 683.783 L1659.79 683.783 L1659.23 683.783 L1658.67 683.783 L1658.11 683.783 L1657.55 683.783 L1656.99 683.783 L1656.43 683.783 L1655.87 683.783 L1655.31 683.783 L1654.76 683.783 L1654.2 683.783 L1653.64 683.783 L1653.08 683.783 L1652.52 683.783 L1651.96 683.783 L1651.4 683.783 L1650.84 683.783 L1650.28 683.783 L1649.72 683.783 L1649.16 683.783 L1648.6 683.783 L1648.04 683.783 L1647.48 683.783 L1646.93 683.783 L1646.37 683.783 L1645.81 683.783 L1645.25 683.783 L1644.69 683.783 L1644.13 683.783 L1643.57 683.783 L1643.01 683.783 L1642.45 683.783 L1641.89 683.783 L1641.33 683.783 L1640.77 683.783 L1640.21 683.783 L1639.66 683.783 L1639.1 683.783 L1638.54 683.783 L1637.98 683.783 L1637.42 683.783 L1636.86 683.783 L1636.3 683.783 L1635.74 683.783 L1635.18 683.783 L1634.62 683.783 L1634.06 683.783 L1633.5 683.783 L1632.94 683.783 L1632.39 683.783 L1631.83 683.783 L1631.27 683.783 L1630.71 683.783 L1630.15 683.783 L1629.59 683.783 L1629.03 683.783 L1628.47 683.783 L1627.91 683.783 L1627.35 683.783 L1626.79 683.783 L1626.23 683.783 L1625.67 683.783 L1625.11 683.783 L1624.56 683.783 L1624 683.783 L1623.44 683.783 L1622.88 683.783 L1622.32 683.783 L1621.76 683.783 L1621.2 683.783 L1620.64 683.783 L1620.08 683.783 L1619.52 683.783 L1618.96 683.783 L1618.4 683.783 L1617.84 683.783 L1617.29 683.783 L1616.73 683.783 L1616.17 683.783 L1615.61 683.783 L1615.05 683.783 L1614.49 683.783 L1613.93 683.783 L1613.37 683.783 L1612.81 683.783 L1612.25 683.783 L1611.69 683.783 L1611.13 683.783 L1610.57 683.783 L1610.02 683.783 L1609.46 683.783 L1608.9 683.783 L1608.34 683.783 L1607.78 683.783 L1607.22 683.783 L1606.66 683.783 L1606.1 683.783 L1605.54 683.783 L1604.98 683.783 L1604.42 683.783 L1603.86 683.783 L1603.3 683.783 L1602.74 683.783 L1602.19 683.783 L1601.63 683.783 L1601.07 683.783 L1600.51 683.783 L1599.95 683.783 L1599.39 683.783 L1598.83 683.783 L1598.27 683.783 L1597.71 683.783 L1597.15 683.783 L1596.59 683.783 L1596.03 683.783 L1595.47 683.783 L1594.92 683.783 L1594.36 683.783 L1593.8 683.783 L1593.24 683.783 L1592.68 683.783 L1592.12 683.783 L1591.56 683.783 L1591 683.783 L1590.44 683.783 L1589.88 683.783 L1589.32 683.783 L1588.76 683.783 L1588.2 683.783 L1587.65 683.783 L1587.09 683.783 L1586.53 683.783 L1585.97 683.783 L1585.41 683.783 L1584.85 683.783 L1584.29 683.783 L1583.73 683.783 L1583.17 683.783 L1582.61 683.783 L1582.05 683.783 L1581.49 683.783 L1580.93 683.783 L1580.37 683.783 L1579.82 683.783 L1579.26 683.783 L1578.7 683.783 L1578.14 683.783 L1577.58 683.783 L1577.02 683.783 L1576.46 683.783 L1575.9 683.783 L1575.34 683.783 L1574.78 683.783 L1574.22 683.783 L1573.66 683.783 L1573.1 683.783 L1572.55 683.783 L1571.99 683.783 L1571.43 683.783 L1570.87 683.783 L1570.31 683.783 L1569.75 683.783 L1569.19 683.783 L1568.63 683.783 L1568.07 683.783 L1567.51 683.783 L1566.95 683.783 L1566.39 683.783 L1565.83 683.783 L1565.28 683.783 L1564.72 683.783 L1564.16 683.783 L1563.6 683.783 L1563.04 683.783 L1562.48 683.783 L1561.92 683.783 L1561.36 683.783 L1560.8 683.783 L1560.24 683.783 L1559.68 683.783 L1559.12 683.783 L1558.56 683.783 L1558 683.783 L1557.45 683.783 L1556.89 683.783 L1556.33 683.783 L1555.77 683.783 L1555.21 683.783 L1554.65 683.783 L1554.09 683.783 L1553.53 683.783 L1552.97 683.783 L1552.41 683.783 L1551.85 683.783 L1551.29 683.783 L1550.73 683.783 L1550.18 683.783 L1549.62 683.783 L1549.06 683.783 L1548.5 683.783 L1547.94 683.783 L1547.38 683.783 L1546.82 683.783 L1546.26 683.783 L1545.7 683.783 L1545.14 683.783 L1544.58 683.783 L1544.02 683.783 L1543.46 683.783 L1542.9 683.783 L1542.35 683.783 L1541.79 683.783 L1541.23 683.783 L1540.67 683.783 L1540.11 683.783 L1539.55 683.783 L1538.99 683.783 L1538.43 683.783 L1537.87 683.783 L1537.31 683.783 L1536.75 683.783 L1536.19 683.783 L1535.63 683.783 L1535.08 683.783 L1534.52 683.783 L1533.96 683.783 L1533.4 683.783 L1532.84 683.783 L1532.28 683.783 L1531.72 683.783 L1531.16 683.783 L1530.6 683.783 L1530.04 683.783 L1529.48 683.783 L1528.92 683.783 L1528.36 683.783 L1527.81 683.783 L1527.25 683.783 L1526.69 683.783 L1526.13 683.783 L1525.57 683.783 L1525.01 683.783 L1524.45 683.783 L1523.89 683.783 L1523.33 683.783 L1522.77 683.783 L1522.21 683.783 L1521.65 683.783 L1521.09 683.783 L1520.53 683.783 L1519.98 683.783 L1519.42 683.783 L1518.86 683.783 L1518.3 683.783 L1517.74 683.783 L1517.18 683.783 L1516.62 683.783 L1516.06 683.783 L1515.5 683.783 L1514.94 683.783 L1514.38 683.783 L1513.82 683.783 L1513.26 683.783 L1512.71 683.783 L1512.15 683.783 L1511.59 683.783 L1511.03 683.783 L1510.47 683.783 L1509.91 683.783 L1509.35 683.783 L1508.79 683.783 L1508.23 683.783 L1507.67 683.783 L1507.11 683.783 L1506.55 683.783 L1505.99 683.783 L1505.44 683.783 L1504.88 683.783 L1504.32 683.783 L1503.76 683.783 L1503.2 683.783 L1502.64 683.783 L1502.08 683.783 L1501.52 683.783 L1500.96 683.783 L1500.4 683.783 L1499.84 683.783 L1499.28 683.783 L1498.72 683.783 L1498.16 683.783 L1497.61 683.783 L1497.05 683.783 L1496.49 683.783 L1495.93 683.783 L1495.37 683.783 L1494.81 683.783 L1494.25 683.783 L1493.69 683.783 L1493.13 683.783 L1492.57 683.783 L1492.01 683.783 L1491.45 683.783 L1490.89 683.783 L1490.34 683.783 L1489.78 683.783 L1489.22 683.783 L1488.66 683.783 L1488.1 683.783 L1487.54 683.783 L1486.98 683.783 L1486.42 683.783 L1485.86 683.783 L1485.3 683.783 L1484.74 683.783 L1484.18 683.783 L1483.62 683.783 L1483.07 683.783 L1482.51 683.783 L1481.95 683.783 L1481.39 683.783 L1480.83 683.783 L1480.27 683.783 L1479.71 683.783 L1479.15 683.783 L1478.59 683.783 L1478.03 683.783 L1477.47 683.783 L1476.91 683.783 L1476.35 683.783 L1475.79 683.783 L1475.24 683.783 L1474.68 683.783 L1474.12 683.783 L1473.56 683.783 L1473 683.783 L1472.44 683.783 L1471.88 683.783 L1471.32 683.783 L1470.76 683.783 L1470.2 683.783 L1469.64 683.783 L1469.08 683.783 L1468.52 683.783 L1467.97 683.783 L1467.41 683.783 L1466.85 683.783 L1466.29 683.783 L1465.73 683.783 L1465.17 683.783 L1464.61 683.783 L1464.05 683.783 L1463.49 683.783 L1462.93 683.783 L1462.37 683.783 L1461.81 683.783 L1461.25 683.783 L1460.7 683.783 L1460.14 683.783 L1459.58 683.783 L1459.02 683.783 L1458.46 683.783 L1457.9 683.783 L1457.34 683.783 L1456.78 683.783 L1456.22 683.783 L1455.66 683.783 L1455.1 683.783 L1454.54 683.783 L1453.98 683.783 L1453.42 683.783 L1452.87 683.783 L1452.31 683.783 L1451.75 683.783 L1451.19 683.783 L1450.63 683.783 L1450.07 683.783 L1449.51 683.783 L1448.95 683.783 L1448.39 683.783 L1447.83 683.783 L1447.27 683.783 L1446.71 683.783 L1446.15 683.783 L1445.6 683.783 L1445.04 683.783 L1444.48 683.783 L1443.92 683.783 L1443.36 683.783 L1442.8 683.783 L1442.24 683.783 L1441.68 683.783 L1441.12 683.783 L1440.56 683.783 L1440 683.783 L1439.44 683.783 L1438.88 683.783 L1438.33 683.783 L1437.77 683.783 L1437.21 683.783 L1436.65 683.783 L1436.09 683.783 L1435.53 683.783 L1434.97 683.783 L1434.41 683.783 L1433.85 683.783 L1433.29 683.783 L1432.73 683.783 L1432.17 683.783 L1431.61 683.783 L1431.05 683.783 L1430.5 683.783 L1429.94 683.783 L1429.38 683.783 L1428.82 683.783 L1428.26 683.783 L1427.7 683.783 L1427.14 683.783 L1426.58 683.783 L1426.02 683.783 L1425.46 683.783 L1424.9 683.783 L1424.34 683.783 L1423.78 683.783 L1423.23 683.783 L1422.67 683.783 L1422.11 683.783 L1421.55 683.783 L1420.99 683.783 L1420.43 683.783 L1419.87 683.783 L1419.31 683.783 L1418.75 683.783 L1418.19 683.783 L1417.63 683.783 L1417.07 683.783 L1416.51 683.783 L1415.95 683.783 L1415.4 683.783 L1414.84 683.783 L1414.28 683.783 L1413.72 683.783 L1413.16 683.783 L1412.6 683.783 L1412.04 683.783 L1411.48 683.783 L1410.92 683.783 L1410.36 683.783 L1409.8 683.783 L1409.24 683.783 L1408.68 683.783 L1408.13 683.783 L1407.57 683.783 L1407.01 683.783 L1406.45 683.783 L1405.89 683.783 L1405.33 683.783 L1404.77 683.783 L1404.21 683.783 L1403.65 683.783 L1403.09 683.783 L1402.53 683.783 L1401.97 683.783 L1401.41 683.783 L1400.86 683.783 L1400.3 683.783 L1399.74 683.783 L1399.18 683.783 L1398.62 683.783 L1398.06 683.783 L1397.5 683.783 L1396.94 683.783 L1396.38 683.783 L1395.82 683.783 L1395.26 683.783 L1394.7 683.783 L1394.14 683.783 L1393.58 683.783 L1393.03 683.783 L1392.47 683.783 L1391.91 683.783 L1391.35 683.783 L1390.79 683.783 L1390.23 683.783 L1389.67 683.783 L1389.11 683.783 L1388.55 683.783 L1387.99 683.783 L1387.43 683.783 L1386.87 683.783 L1386.31 683.783 L1385.76 683.783 L1385.2 683.783 L1384.64 683.783 L1384.08 683.783 L1383.52 683.783 L1382.96 683.783 L1382.4 683.783 L1381.84 683.783 L1381.28 683.783 L1380.72 683.783 L1380.16 683.783 L1379.6 683.783 L1379.04 683.783 L1378.49 683.783 L1377.93 683.783 L1377.37 683.783 L1376.81 683.783 L1376.25 683.783 L1375.69 683.783 L1375.13 683.783 L1374.57 683.783 L1374.01 683.783 L1373.45 683.783 L1372.89 683.783 L1372.33 683.783 L1371.77 683.783 L1371.21 683.783 L1370.66 683.783 L1370.1 683.783 L1369.54 683.783 L1368.98 683.783 L1368.42 683.783 L1367.86 683.783 L1367.3 683.783 L1366.74 683.783 L1366.18 683.783 L1365.62 683.783 L1365.06 683.783 L1364.5 683.783 L1363.94 683.783 L1363.39 683.783 L1362.83 683.783 L1362.27 683.783 L1361.71 683.783 L1361.15 683.783 L1360.59 683.783 L1360.03 683.783 L1359.47 683.783 L1358.91 683.783 L1358.35 683.783 L1357.79 683.783 L1357.23 683.783 L1356.67 683.783 L1356.12 683.783 L1355.56 683.783 L1355 683.783 L1354.44 683.783 L1353.88 683.783 L1353.32 683.783 L1352.76 683.783 L1352.2 683.783 L1351.64 683.783 L1351.08 683.783 L1350.52 683.783 L1349.96 683.783 L1349.4 683.783 L1348.84 683.783 L1348.29 683.783 L1347.73 683.783 L1347.17 683.783 L1346.61 683.783 L1346.05 683.783 L1345.49 683.783 L1344.93 683.783 L1344.37 683.783 L1343.81 683.783 L1343.25 683.783 L1342.69 683.783 L1342.13 683.783 L1341.57 683.783 L1341.02 683.783 L1340.46 683.783 L1339.9 683.783 L1339.34 683.783 L1338.78 683.783 L1338.22 683.783 L1337.66 683.783 L1337.1 683.783 L1336.54 683.783 L1335.98 683.783 L1335.42 683.783 L1334.86 683.783 L1334.3 683.783 L1333.75 683.783 L1333.19 683.783 L1332.63 683.783 L1332.07 683.783 L1331.51 683.783 L1330.95 683.783 L1330.39 683.783 L1329.83 683.783 L1329.27 683.783 L1328.71 683.783 L1328.15 683.783 L1327.59 683.783 L1327.03 683.783 L1326.47 683.783 L1325.92 683.783 L1325.36 683.783 L1324.8 683.783 L1324.24 683.783 L1323.68 683.783 L1323.12 683.783 L1322.56 683.783 L1322 683.783 L1321.44 683.783 L1320.88 683.783 L1320.32 683.783 L1319.76 683.783 L1319.2 683.783 L1318.65 683.783 L1318.09 683.783 L1317.53 683.783 L1316.97 683.783 L1316.41 683.783 L1315.85 683.783 L1315.29 683.783 L1314.73 683.783 L1314.17 683.783 L1313.61 683.783 L1313.05 683.783 L1312.49 683.783 L1311.93 683.783 L1311.38 683.783 L1310.82 683.783 L1310.26 683.783 L1309.7 683.783 L1309.14 683.783 L1308.58 683.783 L1308.02 683.783 L1307.46 683.783 L1306.9 683.783 L1306.34 683.783 L1305.78 683.783 L1305.22 683.783 L1304.66 683.783 L1304.1 683.783 L1303.55 683.783 L1302.99 683.783 L1302.43 683.783 L1301.87 683.783 L1301.31 683.783 L1300.75 683.783 L1300.19 683.783 L1299.63 683.783 L1299.07 683.783 L1298.51 683.783 L1297.95 683.783 L1297.39 683.783 L1296.83 683.783 L1296.28 683.783 L1295.72 683.783 L1295.16 683.783 L1294.6 683.783 L1294.04 683.783 L1293.48 683.783 L1292.92 683.783 L1292.36 683.783 L1291.8 683.783 L1291.24 683.783 L1290.68 683.783 L1290.12 683.783 L1289.56 683.783 L1289 683.783 L1288.45 683.783 L1287.89 683.783 L1287.33 683.783 L1286.77 683.783 L1286.21 683.783 L1285.65 683.783 L1285.09 683.783 L1284.53 683.783 L1283.97 683.783 L1283.41 683.783 L1282.85 683.783 L1282.29 683.783 L1281.73 683.783 L1281.18 683.783 L1280.62 683.783 L1280.06 683.783 L1279.5 683.783 L1278.94 683.783 L1278.38 683.783 L1277.82 683.783 L1277.26 683.783 L1276.7 683.783 L1276.14 683.783 L1275.58 683.783 L1275.02 683.783 L1274.46 683.783 L1273.91 683.783 L1273.35 683.783 L1272.79 683.783 L1272.23 683.783 L1271.67 683.783 L1271.11 683.783 L1270.55 683.783 L1269.99 683.783 L1269.43 683.783 L1268.87 683.783 L1268.31 683.783 L1267.75 683.783 L1267.19 683.783 L1266.63 683.783 L1266.08 683.783 L1265.52 683.783 L1264.96 683.783 L1264.4 683.783 L1263.84 683.783 L1263.28 683.783 L1262.72 683.783 L1262.16 683.783 L1261.6 683.783 L1261.04 683.783 L1260.48 683.783 L1259.92 683.783 L1259.36 683.783 L1258.81 683.783 L1258.25 683.783 L1257.69 683.783 L1257.13 683.783 L1256.57 683.783 L1256.01 683.783 L1255.45 683.783 L1254.89 683.783 L1254.33 683.783 L1253.77 683.783 L1253.21 683.783 L1252.65 683.783 L1252.09 683.783 L1251.54 683.783 L1250.98 683.783 L1250.42 683.783 L1249.86 683.783 L1249.3 683.783 L1248.74 683.783 L1248.18 683.783 L1247.62 683.783 L1247.06 683.783 L1246.5 683.783 L1245.94 683.783 L1245.38 683.783 L1244.82 683.783 L1244.26 683.783 L1243.71 683.783 L1243.15 683.783 L1242.59 683.783 L1242.03 683.783 L1241.47 683.783 L1240.91 683.783 L1240.35 683.783 L1239.79 683.783 L1239.23 683.783 L1238.67 683.783 L1238.11 683.783 L1237.55 683.783 L1236.99 683.783 L1236.44 683.783 L1235.88 683.783 L1235.32 683.783 L1234.76 683.783 L1234.2 683.783 L1233.64 683.783 L1233.08 683.783 L1232.52 683.783 L1231.96 683.783 L1231.4 683.783 L1230.84 683.783 L1230.28 683.783 L1229.72 683.783 L1229.17 683.783 L1228.61 683.783 L1228.05 683.783 L1227.49 683.783 L1226.93 683.783 L1226.37 683.783 L1225.81 683.783 L1225.25 683.783 L1224.69 683.783 L1224.13 683.783 L1223.57 683.783 L1223.01 683.783 L1222.45 683.783 L1221.89 683.783 L1221.34 683.783 L1220.78 683.783 L1220.22 683.783 L1219.66 683.783 L1219.1 683.783 L1218.54 683.783 L1217.98 683.783 L1217.42 683.783 L1216.86 683.783 L1216.3 683.783 L1215.74 683.783 L1215.18 683.783 L1214.62 683.783 L1214.07 683.783 L1213.51 683.783 L1212.95 683.783 L1212.39 683.783 L1211.83 683.783 L1211.27 683.783 L1210.71 683.783 L1210.15 683.783 L1209.59 683.783 L1209.03 683.783 L1208.47 683.783 L1207.91 683.783 L1207.35 683.783 L1206.8 683.783 L1206.24 683.783 L1205.68 683.783 L1205.12 683.783 L1204.56 683.783 L1204 683.783 L1203.44 683.783 L1202.88 683.783 L1202.32 683.783 L1201.76 683.783 L1201.2 683.783 L1200.64 683.783 L1200.08 683.783 L1199.52 683.783 L1198.97 683.783 L1198.41 683.783 L1197.85 683.783 L1197.29 683.783 L1196.73 683.783 L1196.17 683.783 L1195.61 683.783 L1195.05 683.783 L1194.49 683.783 L1193.93 683.783 L1193.37 683.783 L1192.81 683.783 L1192.25 683.783 L1191.7 683.783 L1191.14 683.783 L1190.58 683.783 L1190.02 683.783 L1189.46 683.783 L1188.9 683.783 L1188.34 683.783 L1187.78 683.783 L1187.22 683.783 L1186.66 683.783 L1186.1 683.783 L1185.54 683.783 L1184.98 683.783 L1184.43 683.783 L1183.87 683.783 L1183.31 683.783 L1182.75 683.783 L1182.19 683.783 L1181.63 683.783 L1181.07 683.783 L1180.51 683.783 L1179.95 683.783 L1179.39 683.783 L1178.83 683.783 L1178.27 683.783 L1177.71 683.783 L1177.15 683.783 L1176.6 683.783 L1176.04 683.783 L1175.48 683.783 L1174.92 683.783 L1174.36 683.783 L1173.8 683.783 L1173.24 683.783 L1172.68 683.783 L1172.12 683.783 L1171.56 683.783 L1171 683.783 L1170.44 683.783 L1169.88 683.783 L1169.33 683.783 L1168.77 683.783 L1168.21 683.783 L1167.65 683.783 L1167.09 683.783 L1166.53 683.783 L1165.97 683.783 L1165.41 683.783 L1164.85 683.783 L1164.29 683.783 L1163.73 683.783 L1163.17 683.783 L1162.61 683.783 L1162.05 683.783 L1161.5 683.783 L1160.94 683.783 L1160.38 683.783 L1159.82 683.783 L1159.26 683.783 L1158.7 683.783 L1158.14 683.783 L1157.58 683.783 L1157.02 683.783 L1156.46 683.783 L1155.9 683.783 L1155.34 683.783 L1154.78 683.783 L1154.23 683.783 L1153.67 683.783 L1153.11 683.783 L1152.55 683.783 L1151.99 683.783 L1151.43 683.783 L1150.87 683.783 L1150.31 683.783 L1149.75 683.783 L1149.19 683.783 L1148.63 683.783 L1148.07 683.783 L1147.51 683.783 L1146.96 683.783 L1146.4 683.783 L1145.84 683.783 L1145.28 683.783 L1144.72 683.783 L1144.16 683.783 L1143.6 683.783 L1143.04 683.783 L1142.48 683.783 L1141.92 683.783 L1141.36 683.783 L1140.8 683.783 L1140.24 683.783 L1139.68 683.783 L1139.13 683.783 L1138.57 683.783 L1138.01 683.783 L1137.45 683.783 L1136.89 683.783 L1136.33 683.783 L1135.77 683.783 L1135.21 683.783 L1134.65 683.783 L1134.09 683.783 L1133.53 683.783 L1132.97 683.783 L1132.41 683.783 L1131.86 683.783 L1131.3 683.783 L1130.74 683.783 L1130.18 683.783 L1129.62 683.783 L1129.06 683.783 L1128.5 683.783 L1127.94 683.783 L1127.38 683.783 L1126.82 683.783 L1126.26 683.783 L1125.7 683.783 L1125.14 683.783 L1124.59 683.783 L1124.03 683.783 L1123.47 683.783 L1122.91 683.783 L1122.35 683.783 L1121.79 683.783 L1121.23 683.783 L1120.67 683.783 L1120.11 683.783 L1119.55 683.783 L1118.99 683.783 L1118.43 683.783 L1117.87 683.783 L1117.31 683.783 L1116.76 683.783 L1116.2 683.783 L1115.64 683.783 L1115.08 683.783 L1114.52 683.783 L1113.96 683.783 L1113.4 683.783 L1112.84 683.783 L1112.28 683.783 L1111.72 683.783 L1111.16 683.783 L1110.6 683.783 L1110.04 683.783 L1109.49 683.783 L1108.93 683.783 L1108.37 683.783 L1107.81 683.783 L1107.25 683.783 L1106.69 683.783 L1106.13 683.783 L1105.57 683.783 L1105.01 683.783 L1104.45 683.783 L1103.89 683.783 L1103.33 683.783 L1102.77 683.783 L1102.22 683.783 L1101.66 683.783 L1101.1 683.783 L1100.54 683.783 L1099.98 683.783 L1099.42 683.783 L1098.86 683.783 L1098.3 683.783 L1097.74 683.783 L1097.18 683.783 L1096.62 683.783 L1096.06 683.783 L1095.5 683.783 L1094.94 683.783 L1094.39 683.783 L1093.83 683.783 L1093.27 683.783 L1092.71 683.783 L1092.15 683.783 L1091.59 683.783 L1091.03 683.783 L1090.47 683.783 L1089.91 683.783 L1089.35 683.783 L1088.79 683.783 L1088.23 683.783 L1087.67 683.783 L1087.12 683.783 L1086.56 683.783 L1086 683.783 L1085.44 683.783 L1084.88 683.783 L1084.32 683.783 L1083.76 683.783 L1083.2 683.783 L1082.64 683.783 L1082.08 683.783 L1081.52 683.783 L1080.96 683.783 L1080.4 683.783 L1079.85 683.783 L1079.29 683.783 L1078.73 683.783 L1078.17 683.783 L1077.61 683.783 L1077.05 683.783 L1076.49 683.783 L1075.93 683.783 L1075.37 683.783 L1074.81 683.783 L1074.25 683.783 L1073.69 683.783 L1073.13 683.783 L1072.57 683.783 L1072.02 683.783 L1071.46 683.783 L1070.9 683.783 L1070.34 683.783 L1069.78 683.783 L1069.22 683.783 L1068.66 683.783 L1068.1 683.783 L1067.54 683.783 L1066.98 683.783 L1066.42 683.783 L1065.86 683.783 L1065.3 683.783 L1064.75 683.783 L1064.19 683.783 L1063.63 683.783 L1063.07 683.783 L1062.51 683.783 L1061.95 683.783 L1061.39 683.783 L1060.83 683.783 L1060.27 683.783 L1059.71 683.783 L1059.15 683.783 L1058.59 683.783 L1058.03 683.783 L1057.48 683.783 L1056.92 683.783 L1056.36 683.783 L1055.8 683.783 L1055.24 683.783 L1054.68 683.783 L1054.12 683.783 L1053.56 683.783 L1053 683.783 L1052.44 683.783 L1051.88 683.783 L1051.32 683.783 L1050.76 683.783 L1050.2 683.783 L1049.65 683.783 L1049.09 683.783 L1048.53 683.783 L1047.97 683.783 L1047.41 683.783 L1046.85 683.783 L1046.29 683.783 L1045.73 683.783 L1045.17 683.783 L1044.61 683.783 L1044.05 683.783 L1043.49 683.783 L1042.93 683.783 L1042.38 683.783 L1041.82 683.783 L1041.26 683.783 L1040.7 683.783 L1040.14 683.783 L1039.58 683.783 L1039.02 683.783 L1038.46 683.783 L1037.9 683.783 L1037.34 683.783 L1036.78 683.783 L1036.22 683.783 L1035.66 683.783 L1035.1 683.783 L1034.55 683.783 L1033.99 683.783 L1033.43 683.783 L1032.87 683.783 L1032.31 683.783 L1031.75 683.783 L1031.19 683.783 L1030.63 683.783 L1030.07 683.783 L1029.51 683.783 L1028.95 683.783 L1028.39 683.783 L1027.83 683.783 L1027.28 683.783 L1026.72 683.783 L1026.16 683.783 L1025.6 683.783 L1025.04 683.783 L1024.48 683.783 L1023.92 683.783 L1023.36 683.783 L1022.8 683.783 L1022.24 683.783 L1021.68 683.783 L1021.12 683.783 L1020.56 683.783 L1020.01 683.783 L1019.45 683.783 L1018.89 683.783 L1018.33 683.783 L1017.77 683.783 L1017.21 683.783 L1016.65 683.783 L1016.09 683.783 L1015.53 683.783 L1014.97 683.783 L1014.41 683.783 L1013.85 683.783 L1013.29 683.783 L1012.73 683.783 L1012.18 683.783 L1011.62 683.783 L1011.06 683.783 L1010.5 683.783 L1009.94 683.783 L1009.38 683.783 L1008.82 683.783 L1008.26 683.783 L1007.7 683.783 L1007.14 683.783 L1006.58 683.783 L1006.02 683.783 L1005.46 683.783 L1004.91 683.783 L1004.35 683.783 L1003.79 683.783 L1003.23 683.783 L1002.67 683.783 L1002.11 683.783 L1001.55 683.783 L1000.99 683.783 L1000.43 683.783 L999.872 683.783 L999.313 683.783 L998.754 683.783 L998.194 683.783 L997.635 683.783 L997.076 683.783 L996.517 683.783 L995.957 683.783 L995.398 683.783 L994.839 683.783 L994.28 683.783 L993.72 683.783 L993.161 683.783 L992.602 683.783 L992.043 683.783 L991.483 683.783 L990.924 683.783 L990.365 683.783 L989.806 683.783 L989.246 683.783 L988.687 683.783 L988.128 683.783 L987.569 683.783 L987.009 683.783 L986.45 683.783 L985.891 683.783 L985.332 683.783 L984.772 683.783 L984.213 683.783 L983.654 683.783 L983.095 683.783 L982.535 683.783 L981.976 683.783 L981.417 683.783 L980.858 683.783 L980.298 683.783 L979.739 683.783 L979.18 683.783 L978.621 683.783 L978.061 683.783 L977.502 683.783 L976.943 683.783 L976.384 683.783 L975.824 683.783 L975.265 683.783 L974.706 683.783 L974.147 683.783 L973.587 683.783 L973.028 683.783 L972.469 683.783 L971.91 683.783 L971.35 683.783 L970.791 683.783 L970.232 683.783 L969.673 683.783 L969.113 683.783 L968.554 683.783 L967.995 683.783 L967.436 683.783 L966.876 683.783 L966.317 683.783 L965.758 683.783 L965.199 683.783 L964.639 683.783 L964.08 683.783 L963.521 683.783 L962.962 683.783 L962.402 683.783 L961.843 683.783 L961.284 683.783 L960.725 683.783 L960.165 683.783 L959.606 683.783 L959.047 683.783 L958.488 683.783 L957.928 683.783 L957.369 683.783 L956.81 683.783 L956.251 683.783 L955.691 683.783 L955.132 683.783 L954.573 683.783 L954.014 683.783 L953.454 683.783 L952.895 683.783 L952.336 683.783 L951.777 683.783 L951.217 683.783 L950.658 683.783 L950.099 683.783 L949.54 683.783 L948.98 683.783 L948.421 683.783 L947.862 683.783 L947.303 683.783 L946.743 683.783 L946.184 683.783 L945.625 683.783 L945.066 683.783 L944.506 683.783 L943.947 683.783 L943.388 683.783 L942.829 683.783 L942.269 683.783 L941.71 683.783 L941.151 683.783 L940.592 683.783 L940.032 683.783 L939.473 683.783 L938.914 683.783 L938.355 683.783 L937.795 683.783 L937.236 683.783 L936.677 683.783 L936.118 683.783 L935.558 683.783 L934.999 683.783 L934.44 683.783 L933.881 683.783 L933.321 683.783 L932.762 683.783 L932.203 683.783 L931.644 683.783 L931.084 683.783 L930.525 683.783 L929.966 683.783 L929.406 683.783 L928.847 683.783 L928.288 683.783 L927.729 683.783 L927.169 683.783 L926.61 683.783 L926.051 683.783 L925.492 683.783 L924.932 683.783 L924.373 683.783 L923.814 683.783 L923.255 683.783 L922.695 683.783 L922.136 683.783 L921.577 683.783 L921.018 683.783 L920.458 683.783 L919.899 683.783 L919.34 683.783 L918.781 683.783 L918.221 683.783 L917.662 683.783 L917.103 683.783 L916.544 683.783 L915.984 683.783 L915.425 683.783 L914.866 683.783 L914.307 683.783 L913.747 683.783 L913.188 683.783 L912.629 683.783 L912.07 683.783 L911.51 683.783 L910.951 683.783 L910.392 683.783 L909.833 683.783 L909.273 683.783 L908.714 683.783 L908.155 683.783 L907.596 683.783 L907.036 683.783 L906.477 683.783 L905.918 683.783 L905.359 683.783 L904.799 683.783 L904.24 683.783 L903.681 683.783 L903.122 683.783 L902.562 683.783 L902.003 683.783 L901.444 683.783 L900.885 683.783 L900.325 683.783 L899.766 683.783 L899.207 683.783 L898.648 683.783 L898.088 683.783 L897.529 683.783 L896.97 683.783 L896.411 683.783 L895.851 683.783 L895.292 683.783 L894.733 683.783 L894.174 683.783 L893.614 683.783 L893.055 683.783 L892.496 683.783 L891.937 683.783 L891.377 683.783 L890.818 683.783 L890.259 683.783 L889.7 683.783 L889.14 683.783 L888.581 683.783 L888.022 683.783 L887.463 683.783 L886.903 683.783 L886.344 683.783 L885.785 683.783 L885.226 683.783 L884.666 683.783 L884.107 683.783 L883.548 683.783 L882.989 683.783 L882.429 683.783 L881.87 683.783 L881.311 683.783 L880.752 683.783 L880.192 683.783 L879.633 683.783 L879.074 683.783 L878.515 683.783 L877.955 683.783 L877.396 683.783 L876.837 683.783 L876.278 683.783 L875.718 683.783 L875.159 683.783 L874.6 683.783 L874.041 683.783 L873.481 683.783 L872.922 683.783 L872.363 683.783 L871.804 683.783 L871.244 683.783 L870.685 683.783 L870.126 683.783 L869.567 683.783 L869.007 683.783 L868.448 683.783 L867.889 683.783 L867.33 683.783 L866.77 683.783 L866.211 683.783 L865.652 683.783 L865.093 683.783 L864.533 683.783 L863.974 683.783 L863.415 683.783 L862.856 683.783 L862.296 683.783 L861.737 683.783 L861.178 683.783 L860.619 683.783 L860.059 683.783 L859.5 683.783 L858.941 683.783 L858.382 683.783 L857.822 683.783 L857.263 683.783 L856.704 683.783 L856.145 683.783 L855.585 683.783 L855.026 683.783 L854.467 683.783 L853.908 683.783 L853.348 683.783 L852.789 683.783 L852.23 683.783 L851.671 683.783 L851.111 683.783 L850.552 683.783 L849.993 683.783 L849.434 683.783 L848.874 683.783 L848.315 683.783 L847.756 683.783 L847.197 683.783 L846.637 683.783 L846.078 683.783 L845.519 683.783 L844.96 683.783 L844.4 683.783 L843.841 683.783 L843.282 683.783 L842.723 683.783 L842.163 683.783 L841.604 683.783 L841.045 683.783 L840.486 683.783 L839.926 683.783 L839.367 683.783 L838.808 683.783 L838.249 683.783 L837.689 683.783 L837.13 683.783 L836.571 683.783 L836.012 683.783 L835.452 683.783 L834.893 683.783 L834.334 683.783 L833.775 683.783 L833.215 683.783 L832.656 683.783 L832.097 683.783 L831.538 683.783 L830.978 683.783 L830.419 683.783 L829.86 683.783 L829.301 683.783 L828.741 683.783 L828.182 683.783 L827.623 683.783 L827.064 683.783 L826.504 683.783 L825.945 683.783 L825.386 683.783 L824.827 683.783 L824.267 683.783 L823.708 683.783 L823.149 683.783 L822.59 683.783 L822.03 683.783 L821.471 683.783 L820.912 683.783 L820.353 683.783 L819.793 683.783 L819.234 683.783 L818.675 683.783 L818.116 683.783 L817.556 683.783 L816.997 683.783 L816.438 683.783 L815.879 683.783 L815.319 683.783 L814.76 683.783 L814.201 683.783 L813.642 683.783 L813.082 683.783 L812.523 683.783 L811.964 683.783 L811.405 683.783 L810.845 683.783 L810.286 683.783 L809.727 683.783 L809.168 683.783 L808.608 683.783 L808.049 683.783 L807.49 683.783 L806.931 683.783 L806.371 683.783 L805.812 683.783 L805.253 683.783 L804.693 683.783 L804.134 683.783 L803.575 683.783 L803.016 683.783 L802.456 683.783 L801.897 683.783 L801.338 683.783 L800.779 683.783 L800.219 683.783 L799.66 683.783 L799.101 683.783 L798.542 683.783 L797.982 683.783 L797.423 683.783 L796.864 683.783 L796.305 683.783 L795.745 683.783 L795.186 683.783 L794.627 683.783 L794.068 683.783 L793.508 683.783 L792.949 683.783 L792.39 683.783 L791.831 683.783 L791.271 683.783 L790.712 683.783 L790.153 683.783 L789.594 683.783 L789.034 683.783 L788.475 683.783 L787.916 683.783 L787.357 683.783 L786.797 683.783 L786.238 683.783 L785.679 683.783 L785.12 683.783 L784.56 683.783 L784.001 683.783 L783.442 683.783 L782.883 683.783 L782.323 683.783 L781.764 683.783 L781.205 683.783 L780.646 683.783 L780.086 683.783 L779.527 683.783 L778.968 683.783 L778.409 683.783 L777.849 683.783 L777.29 683.783 L776.731 683.783 L776.172 683.783 L775.612 683.783 L775.053 683.783 L774.494 683.783 L773.935 683.783 L773.375 683.783 L772.816 683.783 L772.257 683.783 L771.698 683.783 L771.138 683.783 L770.579 683.783 L770.02 683.783 L769.461 683.783 L768.901 683.783 L768.342 683.783 L767.783 683.783 L767.224 683.783 L766.664 683.783 L766.105 683.783 L765.546 683.783 L764.987 683.783 L764.427 683.783 L763.868 683.783 L763.309 683.783 L762.75 683.783 L762.19 683.783 L761.631 683.783 L761.072 683.783 L760.513 683.783 L759.953 683.783 L759.394 683.783 L758.835 683.783 L758.276 683.783 L757.716 683.783 L757.157 683.783 L756.598 683.783 L756.039 683.783 L755.479 683.783 L754.92 683.783 L754.361 683.783 L753.802 683.783 L753.242 683.783 L752.683 683.783 L752.124 683.783 L751.565 683.783 L751.005 683.783 L750.446 683.783 L749.887 683.783 L749.328 683.783 L748.768 683.783 L748.209 683.783 L747.65 683.783 L747.091 683.783 L746.531 683.783 L745.972 683.783 L745.413 683.783 L744.854 683.783 L744.294 683.783 L743.735 683.783 L743.176 683.783 L742.617 683.783 L742.057 683.783 L741.498 683.783 L740.939 683.783 L740.38 683.783 L739.82 683.783 L739.261 683.783 L738.702 683.783 L738.143 683.783 L737.583 683.783 L737.024 683.783 L736.465 683.783 L735.906 683.783 L735.346 683.783 L734.787 683.783 L734.228 683.783 L733.669 683.783 L733.109 683.783 L732.55 683.783 L731.991 683.783 L731.432 683.783 L730.872 683.783 L730.313 683.783 L729.754 683.783 L729.195 683.783 L728.635 683.783 L728.076 683.783 L727.517 683.783 L726.958 683.783 L726.398 683.783 L725.839 683.783 L725.28 683.783 L724.721 683.783 L724.161 683.783 L723.602 683.783 L723.043 683.783 L722.484 683.783 L721.924 683.783 L721.365 683.783 L720.806 683.783 L720.247 683.783  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip883)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,687.826 720.806,687.826 721.365,687.826 721.924,687.826 722.484,687.826 723.043,687.826 723.602,687.826 724.161,687.826 724.721,687.826 725.28,687.826 725.839,687.826 726.398,687.826 726.958,687.826 727.517,687.826 728.076,687.826 728.635,687.826 729.195,687.826 729.754,687.826 730.313,687.826 730.872,687.826 731.432,687.826 731.991,687.826 732.55,687.826 733.109,687.826 733.669,687.826 734.228,687.826 734.787,687.826 735.346,687.826 735.906,687.826 736.465,687.826 737.024,687.826 737.583,687.826 738.143,687.826 738.702,687.826 739.261,687.826 739.82,687.826 740.38,687.826 740.939,687.826 741.498,687.826 742.057,687.826 742.617,687.826 743.176,687.826 743.735,687.826 744.294,687.826 744.854,687.826 745.413,687.826 745.972,687.826 746.531,687.826 747.091,687.826 747.65,687.826 748.209,687.826 748.768,687.826 749.328,687.826 749.887,687.826 750.446,687.826 751.005,687.826 751.565,687.826 752.124,687.826 752.683,687.826 753.242,687.826 753.802,687.826 754.361,687.826 754.92,687.826 755.479,687.826 756.039,687.826 756.598,687.826 757.157,687.826 757.716,687.826 758.276,687.826 758.835,687.826 759.394,687.826 759.953,687.826 760.513,687.826 761.072,687.826 761.631,687.826 762.19,687.826 762.75,687.826 763.309,687.826 763.868,687.826 764.427,687.826 764.987,687.826 765.546,687.826 766.105,687.826 766.664,687.826 767.224,687.826 767.783,687.826 768.342,687.826 768.901,687.826 769.461,687.826 770.02,687.826 770.579,687.826 771.138,687.826 771.698,687.826 772.257,687.826 772.816,687.826 773.375,687.826 773.935,687.826 774.494,687.826 775.053,687.826 775.612,687.826 776.172,687.826 776.731,687.826 777.29,687.826 777.849,687.826 778.409,687.826 778.968,687.826 779.527,687.826 780.086,687.826 780.646,687.826 781.205,687.826 781.764,687.826 782.323,687.826 782.883,687.826 783.442,687.826 784.001,687.826 784.56,687.826 785.12,687.826 785.679,687.826 786.238,687.826 786.797,687.826 787.357,687.826 787.916,687.826 788.475,687.826 789.034,687.826 789.594,687.826 790.153,687.826 790.712,687.826 791.271,687.826 791.831,687.826 792.39,687.826 792.949,687.826 793.508,687.826 794.068,687.826 794.627,687.826 795.186,687.826 795.745,687.826 796.305,687.826 796.864,687.826 797.423,687.826 797.982,687.826 798.542,687.826 799.101,687.826 799.66,687.826 800.219,687.826 800.779,687.826 801.338,687.826 801.897,687.826 802.456,687.826 803.016,687.826 803.575,687.826 804.134,687.826 804.693,687.826 805.253,687.826 805.812,687.826 806.371,687.826 806.931,687.826 807.49,687.826 808.049,687.826 808.608,687.826 809.168,687.826 809.727,687.826 810.286,687.826 810.845,687.826 811.405,687.826 811.964,687.826 812.523,687.826 813.082,687.826 813.642,687.826 814.201,687.826 814.76,687.826 815.319,687.826 815.879,687.826 816.438,687.826 816.997,687.826 817.556,687.826 818.116,687.826 818.675,687.826 819.234,687.826 819.793,687.826 820.353,687.826 820.912,687.826 821.471,687.826 822.03,687.826 822.59,687.826 823.149,687.826 823.708,687.826 824.267,687.826 824.827,687.826 825.386,687.826 825.945,687.826 826.504,687.826 827.064,687.826 827.623,687.826 828.182,687.826 828.741,687.826 829.301,687.826 829.86,687.826 830.419,687.826 830.978,687.826 831.538,687.826 832.097,687.826 832.656,687.826 833.215,687.826 833.775,687.826 834.334,687.826 834.893,687.826 835.452,687.826 836.012,687.826 836.571,687.826 837.13,687.826 837.689,687.826 838.249,687.826 838.808,687.826 839.367,687.826 839.926,687.826 840.486,687.826 841.045,687.826 841.604,687.826 842.163,687.826 842.723,687.826 843.282,687.826 843.841,687.826 844.4,687.826 844.96,687.826 845.519,687.826 846.078,687.826 846.637,687.826 847.197,687.826 847.756,687.826 848.315,687.826 848.874,687.826 849.434,687.826 849.993,687.826 850.552,687.826 851.111,687.826 851.671,687.826 852.23,687.826 852.789,687.826 853.348,687.826 853.908,687.826 854.467,687.826 855.026,687.826 855.585,687.826 856.145,687.826 856.704,687.826 857.263,687.826 857.822,687.826 858.382,687.826 858.941,687.826 859.5,687.826 860.059,687.826 860.619,687.826 861.178,687.826 861.737,687.826 862.296,687.826 862.856,687.826 863.415,687.826 863.974,687.826 864.533,687.826 865.093,687.826 865.652,687.826 866.211,687.826 866.77,687.826 867.33,687.826 867.889,687.826 868.448,687.826 869.007,687.826 869.567,687.826 870.126,687.826 870.685,687.826 871.244,687.826 871.804,687.826 872.363,687.826 872.922,687.826 873.481,687.826 874.041,687.826 874.6,687.826 875.159,687.826 875.718,687.826 876.278,687.826 876.837,687.826 877.396,687.826 877.955,687.826 878.515,687.826 879.074,687.826 879.633,687.826 880.192,687.826 880.752,687.826 881.311,687.826 881.87,687.826 882.429,687.826 882.989,687.826 883.548,687.826 884.107,687.826 884.666,687.826 885.226,687.826 885.785,687.826 886.344,687.826 886.903,687.826 887.463,687.826 888.022,687.826 888.581,687.826 889.14,687.826 889.7,687.826 890.259,687.826 890.818,687.826 891.377,687.826 891.937,687.826 892.496,687.826 893.055,687.826 893.614,687.826 894.174,687.826 894.733,687.826 895.292,687.826 895.851,687.826 896.411,687.826 896.97,687.826 897.529,687.826 898.088,687.826 898.648,687.826 899.207,687.826 899.766,687.826 900.325,687.826 900.885,687.826 901.444,687.826 902.003,687.826 902.562,687.826 903.122,687.826 903.681,687.826 904.24,687.826 904.799,687.826 905.359,687.826 905.918,687.826 906.477,687.826 907.036,687.826 907.596,687.826 908.155,687.826 908.714,687.826 909.273,687.826 909.833,687.826 910.392,687.826 910.951,687.826 911.51,687.826 912.07,687.826 912.629,687.826 913.188,687.826 913.747,687.826 914.307,687.826 914.866,687.826 915.425,687.826 915.984,687.826 916.544,687.826 917.103,687.826 917.662,687.826 918.221,687.826 918.781,687.826 919.34,687.826 919.899,687.826 920.458,687.826 921.018,687.826 921.577,687.826 922.136,687.826 922.695,687.826 923.255,687.826 923.814,687.826 924.373,687.826 924.932,687.826 925.492,687.826 926.051,687.826 926.61,687.826 927.169,687.826 927.729,687.826 928.288,687.826 928.847,687.826 929.406,687.826 929.966,687.826 930.525,687.826 931.084,687.826 931.644,687.826 932.203,687.826 932.762,687.826 933.321,687.826 933.881,687.826 934.44,687.826 934.999,687.826 935.558,687.826 936.118,687.826 936.677,687.826 937.236,687.826 937.795,687.826 938.355,687.826 938.914,687.826 939.473,687.826 940.032,687.826 940.592,687.826 941.151,687.826 941.71,687.826 942.269,687.826 942.829,687.826 943.388,687.826 943.947,687.826 944.506,687.826 945.066,687.826 945.625,687.826 946.184,687.826 946.743,687.826 947.303,687.826 947.862,687.826 948.421,687.826 948.98,687.826 949.54,687.826 950.099,687.826 950.658,687.826 951.217,687.826 951.777,687.826 952.336,687.826 952.895,687.826 953.454,687.826 954.014,687.826 954.573,687.826 955.132,687.826 955.691,687.826 956.251,687.826 956.81,687.826 957.369,687.826 957.928,687.826 958.488,687.826 959.047,687.826 959.606,687.826 960.165,687.826 960.725,687.826 961.284,687.826 961.843,687.826 962.402,687.826 962.962,687.826 963.521,687.826 964.08,687.826 964.639,687.826 965.199,687.826 965.758,687.826 966.317,687.826 966.876,687.826 967.436,687.826 967.995,687.826 968.554,687.826 969.113,687.826 969.673,687.826 970.232,687.826 970.791,687.826 971.35,687.826 971.91,687.826 972.469,687.826 973.028,687.826 973.587,687.826 974.147,687.826 974.706,687.826 975.265,687.826 975.824,687.826 976.384,687.826 976.943,687.826 977.502,687.826 978.061,687.826 978.621,687.826 979.18,687.826 979.739,687.826 980.298,687.826 980.858,687.826 981.417,687.826 981.976,687.826 982.535,687.826 983.095,687.826 983.654,687.826 984.213,687.826 984.772,687.826 985.332,687.826 985.891,687.826 986.45,687.826 987.009,687.826 987.569,687.826 988.128,687.826 988.687,687.826 989.246,687.826 989.806,687.826 990.365,687.826 990.924,687.826 991.483,687.826 992.043,687.826 992.602,687.826 993.161,687.826 993.72,687.826 994.28,687.826 994.839,687.826 995.398,687.826 995.957,687.826 996.517,687.826 997.076,687.826 997.635,687.826 998.194,687.826 998.754,687.826 999.313,687.826 999.872,687.826 1000.43,687.826 1000.99,687.826 1001.55,687.826 1002.11,687.826 1002.67,687.826 1003.23,687.826 1003.79,687.826 1004.35,687.826 1004.91,687.826 1005.46,687.826 1006.02,687.826 1006.58,687.826 1007.14,687.826 1007.7,687.826 1008.26,687.826 1008.82,687.826 1009.38,687.826 1009.94,687.826 1010.5,687.826 1011.06,687.826 1011.62,687.826 1012.18,687.826 1012.73,687.826 1013.29,687.826 1013.85,687.826 1014.41,687.826 1014.97,687.826 1015.53,687.826 1016.09,687.826 1016.65,687.826 1017.21,687.826 1017.77,687.826 1018.33,687.826 1018.89,687.826 1019.45,687.826 1020.01,687.826 1020.56,687.826 1021.12,687.826 1021.68,687.826 1022.24,687.826 1022.8,687.826 1023.36,687.826 1023.92,687.826 1024.48,687.826 1025.04,687.826 1025.6,687.826 1026.16,687.826 1026.72,687.826 1027.28,687.826 1027.83,687.826 1028.39,687.826 1028.95,687.826 1029.51,687.826 1030.07,687.826 1030.63,687.826 1031.19,687.826 1031.75,687.826 1032.31,687.826 1032.87,687.826 1033.43,687.826 1033.99,687.826 1034.55,687.826 1035.1,687.826 1035.66,687.826 1036.22,687.826 1036.78,687.826 1037.34,687.826 1037.9,687.826 1038.46,687.826 1039.02,687.826 1039.58,687.826 1040.14,687.826 1040.7,687.826 1041.26,687.826 1041.82,687.826 1042.38,687.826 1042.93,687.826 1043.49,687.826 1044.05,687.826 1044.61,687.826 1045.17,687.826 1045.73,687.826 1046.29,687.826 1046.85,687.826 1047.41,687.826 1047.97,687.826 1048.53,687.826 1049.09,687.826 1049.65,687.826 1050.2,687.826 1050.76,687.826 1051.32,687.826 1051.88,687.826 1052.44,687.826 1053,687.826 1053.56,687.826 1054.12,687.826 1054.68,687.826 1055.24,687.826 1055.8,687.826 1056.36,687.826 1056.92,687.826 1057.48,687.826 1058.03,687.826 1058.59,687.826 1059.15,687.826 1059.71,687.826 1060.27,687.826 1060.83,687.826 1061.39,687.826 1061.95,687.826 1062.51,687.826 1063.07,687.826 1063.63,687.826 1064.19,687.826 1064.75,687.826 1065.3,687.826 1065.86,687.826 1066.42,687.826 1066.98,687.826 1067.54,687.826 1068.1,687.826 1068.66,687.826 1069.22,687.826 1069.78,687.826 1070.34,687.826 1070.9,687.826 1071.46,687.826 1072.02,687.826 1072.57,687.826 1073.13,687.826 1073.69,687.826 1074.25,687.826 1074.81,687.826 1075.37,687.826 1075.93,687.826 1076.49,687.826 1077.05,687.826 1077.61,687.826 1078.17,687.826 1078.73,687.826 1079.29,687.826 1079.85,687.826 1080.4,687.826 1080.96,687.826 1081.52,687.826 1082.08,687.826 1082.64,687.826 1083.2,687.826 1083.76,687.826 1084.32,687.826 1084.88,687.826 1085.44,687.826 1086,687.826 1086.56,687.826 1087.12,687.826 1087.67,687.826 1088.23,687.826 1088.79,687.826 1089.35,687.826 1089.91,687.826 1090.47,687.826 1091.03,687.826 1091.59,687.826 1092.15,687.826 1092.71,687.826 1093.27,687.826 1093.83,687.826 1094.39,687.826 1094.94,687.826 1095.5,687.826 1096.06,687.826 1096.62,687.826 1097.18,687.826 1097.74,687.826 1098.3,687.826 1098.86,687.826 1099.42,687.826 1099.98,687.826 1100.54,687.826 1101.1,687.826 1101.66,687.826 1102.22,687.826 1102.77,687.826 1103.33,687.826 1103.89,687.826 1104.45,687.826 1105.01,687.826 1105.57,687.826 1106.13,687.826 1106.69,687.826 1107.25,687.826 1107.81,687.826 1108.37,687.826 1108.93,687.826 1109.49,687.826 1110.04,687.826 1110.6,687.826 1111.16,687.826 1111.72,687.826 1112.28,687.826 1112.84,687.826 1113.4,687.826 1113.96,687.826 1114.52,687.826 1115.08,687.826 1115.64,687.826 1116.2,687.826 1116.76,687.826 1117.31,687.826 1117.87,687.826 1118.43,687.826 1118.99,687.826 1119.55,687.826 1120.11,687.826 1120.67,687.826 1121.23,687.826 1121.79,687.826 1122.35,687.826 1122.91,687.826 1123.47,687.826 1124.03,687.826 1124.59,687.826 1125.14,687.826 1125.7,687.826 1126.26,687.826 1126.82,687.826 1127.38,687.826 1127.94,687.826 1128.5,687.826 1129.06,687.826 1129.62,687.826 1130.18,687.826 1130.74,687.826 1131.3,687.826 1131.86,687.826 1132.41,687.826 1132.97,687.826 1133.53,687.826 1134.09,687.826 1134.65,687.826 1135.21,687.826 1135.77,687.826 1136.33,687.826 1136.89,687.826 1137.45,687.826 1138.01,687.826 1138.57,687.826 1139.13,687.826 1139.68,687.826 1140.24,687.826 1140.8,687.826 1141.36,687.826 1141.92,687.826 1142.48,687.826 1143.04,687.826 1143.6,687.826 1144.16,687.826 1144.72,687.826 1145.28,687.826 1145.84,687.826 1146.4,687.826 1146.96,687.826 1147.51,687.826 1148.07,687.826 1148.63,687.826 1149.19,687.826 1149.75,687.826 1150.31,687.826 1150.87,687.826 1151.43,687.826 1151.99,687.826 1152.55,687.826 1153.11,687.826 1153.67,687.826 1154.23,687.826 1154.78,687.826 1155.34,687.826 1155.9,687.826 1156.46,687.826 1157.02,687.826 1157.58,687.826 1158.14,687.826 1158.7,687.826 1159.26,687.826 1159.82,687.826 1160.38,687.826 1160.94,687.826 1161.5,687.826 1162.05,687.826 1162.61,687.826 1163.17,687.826 1163.73,687.826 1164.29,687.826 1164.85,687.826 1165.41,687.826 1165.97,687.826 1166.53,687.826 1167.09,687.826 1167.65,687.826 1168.21,687.826 1168.77,687.826 1169.33,687.826 1169.88,687.826 1170.44,687.826 1171,687.826 1171.56,687.826 1172.12,687.826 1172.68,687.826 1173.24,687.826 1173.8,687.826 1174.36,687.826 1174.92,687.826 1175.48,687.826 1176.04,687.826 1176.6,687.826 1177.15,687.826 1177.71,687.826 1178.27,687.826 1178.83,687.826 1179.39,687.826 1179.95,687.826 1180.51,687.826 1181.07,687.826 1181.63,687.826 1182.19,687.826 1182.75,687.826 1183.31,687.826 1183.87,687.826 1184.43,687.826 1184.98,687.826 1185.54,687.826 1186.1,687.826 1186.66,687.826 1187.22,687.826 1187.78,687.826 1188.34,687.826 1188.9,687.826 1189.46,687.826 1190.02,687.826 1190.58,687.826 1191.14,687.826 1191.7,687.826 1192.25,687.826 1192.81,687.826 1193.37,687.826 1193.93,687.826 1194.49,687.826 1195.05,687.826 1195.61,687.826 1196.17,687.826 1196.73,687.826 1197.29,687.826 1197.85,687.826 1198.41,687.826 1198.97,687.826 1199.52,687.826 1200.08,687.826 1200.64,687.826 1201.2,687.826 1201.76,687.826 1202.32,687.826 1202.88,687.826 1203.44,687.826 1204,687.826 1204.56,687.826 1205.12,687.826 1205.68,687.826 1206.24,687.826 1206.8,687.826 1207.35,687.826 1207.91,687.826 1208.47,687.826 1209.03,687.826 1209.59,687.826 1210.15,687.826 1210.71,687.826 1211.27,687.826 1211.83,687.826 1212.39,687.826 1212.95,687.826 1213.51,687.826 1214.07,687.826 1214.62,687.826 1215.18,687.826 1215.74,687.826 1216.3,687.826 1216.86,687.826 1217.42,687.826 1217.98,687.826 1218.54,687.826 1219.1,687.826 1219.66,687.826 1220.22,687.826 1220.78,687.826 1221.34,687.826 1221.89,687.826 1222.45,687.826 1223.01,687.826 1223.57,687.826 1224.13,687.826 1224.69,687.826 1225.25,687.826 1225.81,687.826 1226.37,687.826 1226.93,687.826 1227.49,687.826 1228.05,687.826 1228.61,687.826 1229.17,687.826 1229.72,687.826 1230.28,687.826 1230.84,687.826 1231.4,687.826 1231.96,687.826 1232.52,687.826 1233.08,687.826 1233.64,687.826 1234.2,687.826 1234.76,687.826 1235.32,687.826 1235.88,687.826 1236.44,687.826 1236.99,687.826 1237.55,687.826 1238.11,687.826 1238.67,687.826 1239.23,687.826 1239.79,687.826 1240.35,687.826 1240.91,687.826 1241.47,687.826 1242.03,687.826 1242.59,687.826 1243.15,687.826 1243.71,687.826 1244.26,687.826 1244.82,687.826 1245.38,687.826 1245.94,687.826 1246.5,687.826 1247.06,687.826 1247.62,687.826 1248.18,687.826 1248.74,687.826 1249.3,687.826 1249.86,687.826 1250.42,687.826 1250.98,687.826 1251.54,687.826 1252.09,687.826 1252.65,687.826 1253.21,687.826 1253.77,687.826 1254.33,687.826 1254.89,687.826 1255.45,687.826 1256.01,687.826 1256.57,687.826 1257.13,687.826 1257.69,687.826 1258.25,687.826 1258.81,687.826 1259.36,687.826 1259.92,687.826 1260.48,687.826 1261.04,687.826 1261.6,687.826 1262.16,687.826 1262.72,687.826 1263.28,687.826 1263.84,687.826 1264.4,687.826 1264.96,687.826 1265.52,687.826 1266.08,687.826 1266.63,687.826 1267.19,687.826 1267.75,687.826 1268.31,687.826 1268.87,687.826 1269.43,687.826 1269.99,687.826 1270.55,687.826 1271.11,687.826 1271.67,687.826 1272.23,687.826 1272.79,687.826 1273.35,687.826 1273.91,687.826 1274.46,687.826 1275.02,687.826 1275.58,687.826 1276.14,687.826 1276.7,687.826 1277.26,687.826 1277.82,687.826 1278.38,687.826 1278.94,687.826 1279.5,687.826 1280.06,687.826 1280.62,687.826 1281.18,687.826 1281.73,687.826 1282.29,687.826 1282.85,687.826 1283.41,687.826 1283.97,687.826 1284.53,687.826 1285.09,687.826 1285.65,687.826 1286.21,687.826 1286.77,687.826 1287.33,687.826 1287.89,687.826 1288.45,687.826 1289,687.826 1289.56,687.826 1290.12,687.826 1290.68,687.826 1291.24,687.826 1291.8,687.826 1292.36,687.826 1292.92,687.826 1293.48,687.826 1294.04,687.826 1294.6,687.826 1295.16,687.826 1295.72,687.826 1296.28,687.826 1296.83,687.826 1297.39,687.826 1297.95,687.826 1298.51,687.826 1299.07,687.826 1299.63,687.826 1300.19,687.826 1300.75,687.826 1301.31,687.826 1301.87,687.826 1302.43,687.826 1302.99,687.826 1303.55,687.826 1304.1,687.826 1304.66,687.826 1305.22,687.826 1305.78,687.826 1306.34,687.826 1306.9,687.826 1307.46,687.826 1308.02,687.826 1308.58,687.826 1309.14,687.826 1309.7,687.826 1310.26,687.826 1310.82,687.826 1311.38,687.826 1311.93,687.826 1312.49,687.826 1313.05,687.826 1313.61,687.826 1314.17,687.826 1314.73,687.826 1315.29,687.826 1315.85,687.826 1316.41,687.826 1316.97,687.826 1317.53,687.826 1318.09,687.826 1318.65,687.826 1319.2,687.826 1319.76,687.826 1320.32,687.826 1320.88,687.826 1321.44,687.826 1322,687.826 1322.56,687.826 1323.12,687.826 1323.68,687.826 1324.24,687.826 1324.8,687.826 1325.36,687.826 1325.92,687.826 1326.47,687.826 1327.03,687.826 1327.59,687.826 1328.15,687.826 1328.71,687.826 1329.27,687.826 1329.83,687.826 1330.39,687.826 1330.95,687.826 1331.51,687.826 1332.07,687.826 1332.63,687.826 1333.19,687.826 1333.75,687.826 1334.3,687.826 1334.86,687.826 1335.42,687.826 1335.98,687.826 1336.54,687.826 1337.1,687.826 1337.66,687.826 1338.22,687.826 1338.78,687.826 1339.34,687.826 1339.9,687.826 1340.46,687.826 1341.02,687.826 1341.57,687.826 1342.13,687.826 1342.69,687.826 1343.25,687.826 1343.81,687.826 1344.37,687.826 1344.93,687.826 1345.49,687.826 1346.05,687.826 1346.61,687.826 1347.17,687.826 1347.73,687.826 1348.29,687.826 1348.84,687.826 1349.4,687.826 1349.96,687.826 1350.52,687.826 1351.08,687.826 1351.64,687.826 1352.2,687.826 1352.76,687.826 1353.32,687.826 1353.88,687.826 1354.44,687.826 1355,687.826 1355.56,687.826 1356.12,687.826 1356.67,687.826 1357.23,687.826 1357.79,687.826 1358.35,687.826 1358.91,687.826 1359.47,687.826 1360.03,687.826 1360.59,687.826 1361.15,687.826 1361.71,687.826 1362.27,687.826 1362.83,687.826 1363.39,687.826 1363.94,687.826 1364.5,687.826 1365.06,687.826 1365.62,687.826 1366.18,687.826 1366.74,687.826 1367.3,687.826 1367.86,687.826 1368.42,687.826 1368.98,687.826 1369.54,687.826 1370.1,687.826 1370.66,687.826 1371.21,687.826 1371.77,687.826 1372.33,687.826 1372.89,687.826 1373.45,687.826 1374.01,687.826 1374.57,687.826 1375.13,687.826 1375.69,687.826 1376.25,687.826 1376.81,687.826 1377.37,687.826 1377.93,687.826 1378.49,687.826 1379.04,687.826 1379.6,687.826 1380.16,687.826 1380.72,687.826 1381.28,687.826 1381.84,687.826 1382.4,687.826 1382.96,687.826 1383.52,687.826 1384.08,687.826 1384.64,687.826 1385.2,687.826 1385.76,687.826 1386.31,687.826 1386.87,687.826 1387.43,687.826 1387.99,687.826 1388.55,687.826 1389.11,687.826 1389.67,687.826 1390.23,687.826 1390.79,687.826 1391.35,687.826 1391.91,687.826 1392.47,687.826 1393.03,687.826 1393.58,687.826 1394.14,687.826 1394.7,687.826 1395.26,687.826 1395.82,687.826 1396.38,687.826 1396.94,687.826 1397.5,687.826 1398.06,687.826 1398.62,687.826 1399.18,687.826 1399.74,687.826 1400.3,687.826 1400.86,687.826 1401.41,687.826 1401.97,687.826 1402.53,687.826 1403.09,687.826 1403.65,687.826 1404.21,687.826 1404.77,687.826 1405.33,687.826 1405.89,687.826 1406.45,687.826 1407.01,687.826 1407.57,687.826 1408.13,687.826 1408.68,687.826 1409.24,687.826 1409.8,687.826 1410.36,687.826 1410.92,687.826 1411.48,687.826 1412.04,687.826 1412.6,687.826 1413.16,687.826 1413.72,687.826 1414.28,687.826 1414.84,687.826 1415.4,687.826 1415.95,687.826 1416.51,687.826 1417.07,687.826 1417.63,687.826 1418.19,687.826 1418.75,687.826 1419.31,687.826 1419.87,687.826 1420.43,687.826 1420.99,687.826 1421.55,687.826 1422.11,687.826 1422.67,687.826 1423.23,687.826 1423.78,687.826 1424.34,687.826 1424.9,687.826 1425.46,687.826 1426.02,687.826 1426.58,687.826 1427.14,687.826 1427.7,687.826 1428.26,687.826 1428.82,687.826 1429.38,687.826 1429.94,687.826 1430.5,687.826 1431.05,687.826 1431.61,687.826 1432.17,687.826 1432.73,687.826 1433.29,687.826 1433.85,687.826 1434.41,687.826 1434.97,687.826 1435.53,687.826 1436.09,687.826 1436.65,687.826 1437.21,687.826 1437.77,687.826 1438.33,687.826 1438.88,687.826 1439.44,687.826 1440,687.826 1440.56,687.826 1441.12,687.826 1441.68,687.826 1442.24,687.826 1442.8,687.826 1443.36,687.826 1443.92,687.826 1444.48,687.826 1445.04,687.826 1445.6,687.826 1446.15,687.826 1446.71,687.826 1447.27,687.826 1447.83,687.826 1448.39,687.826 1448.95,687.826 1449.51,687.826 1450.07,687.826 1450.63,687.826 1451.19,687.826 1451.75,687.826 1452.31,687.826 1452.87,687.826 1453.42,687.826 1453.98,687.826 1454.54,687.826 1455.1,687.826 1455.66,687.826 1456.22,687.826 1456.78,687.826 1457.34,687.826 1457.9,687.826 1458.46,687.826 1459.02,687.826 1459.58,687.826 1460.14,687.826 1460.7,687.826 1461.25,687.826 1461.81,687.826 1462.37,687.826 1462.93,687.826 1463.49,687.826 1464.05,687.826 1464.61,687.826 1465.17,687.826 1465.73,687.826 1466.29,687.826 1466.85,687.826 1467.41,687.826 1467.97,687.826 1468.52,687.826 1469.08,687.826 1469.64,687.826 1470.2,687.826 1470.76,687.826 1471.32,687.826 1471.88,687.826 1472.44,687.826 1473,687.826 1473.56,687.826 1474.12,687.826 1474.68,687.826 1475.24,687.826 1475.79,687.826 1476.35,687.826 1476.91,687.826 1477.47,687.826 1478.03,687.826 1478.59,687.826 1479.15,687.826 1479.71,687.826 1480.27,687.826 1480.83,687.826 1481.39,687.826 1481.95,687.826 1482.51,687.826 1483.07,687.826 1483.62,687.826 1484.18,687.826 1484.74,687.826 1485.3,687.826 1485.86,687.826 1486.42,687.826 1486.98,687.826 1487.54,687.826 1488.1,687.826 1488.66,687.826 1489.22,687.826 1489.78,687.826 1490.34,687.826 1490.89,687.826 1491.45,687.826 1492.01,687.826 1492.57,687.826 1493.13,687.826 1493.69,687.826 1494.25,687.826 1494.81,687.826 1495.37,687.826 1495.93,687.826 1496.49,687.826 1497.05,687.826 1497.61,687.826 1498.16,687.826 1498.72,687.826 1499.28,687.826 1499.84,687.826 1500.4,687.826 1500.96,687.826 1501.52,687.826 1502.08,687.826 1502.64,687.826 1503.2,687.826 1503.76,687.826 1504.32,687.826 1504.88,687.826 1505.44,687.826 1505.99,687.826 1506.55,687.826 1507.11,687.826 1507.67,687.826 1508.23,687.826 1508.79,687.826 1509.35,687.826 1509.91,687.826 1510.47,687.826 1511.03,687.826 1511.59,687.826 1512.15,687.826 1512.71,687.826 1513.26,687.826 1513.82,687.826 1514.38,687.826 1514.94,687.826 1515.5,687.826 1516.06,687.826 1516.62,687.826 1517.18,687.826 1517.74,687.826 1518.3,687.826 1518.86,687.826 1519.42,687.826 1519.98,687.826 1520.53,687.826 1521.09,687.826 1521.65,687.826 1522.21,687.826 1522.77,687.826 1523.33,687.826 1523.89,687.826 1524.45,687.826 1525.01,687.826 1525.57,687.826 1526.13,687.826 1526.69,687.826 1527.25,687.826 1527.81,687.826 1528.36,687.826 1528.92,687.826 1529.48,687.826 1530.04,687.826 1530.6,687.826 1531.16,687.826 1531.72,687.826 1532.28,687.826 1532.84,687.826 1533.4,687.826 1533.96,687.826 1534.52,687.826 1535.08,687.826 1535.63,687.826 1536.19,687.826 1536.75,687.826 1537.31,687.826 1537.87,687.826 1538.43,687.826 1538.99,687.826 1539.55,687.826 1540.11,687.826 1540.67,687.826 1541.23,687.826 1541.79,687.826 1542.35,687.826 1542.9,687.826 1543.46,687.826 1544.02,687.826 1544.58,687.826 1545.14,687.826 1545.7,687.826 1546.26,687.826 1546.82,687.826 1547.38,687.826 1547.94,687.826 1548.5,687.826 1549.06,687.826 1549.62,687.826 1550.18,687.826 1550.73,687.826 1551.29,687.826 1551.85,687.826 1552.41,687.826 1552.97,687.826 1553.53,687.826 1554.09,687.826 1554.65,687.826 1555.21,687.826 1555.77,687.826 1556.33,687.826 1556.89,687.826 1557.45,687.826 1558,687.826 1558.56,687.826 1559.12,687.826 1559.68,687.826 1560.24,687.826 1560.8,687.826 1561.36,687.826 1561.92,687.826 1562.48,687.826 1563.04,687.826 1563.6,687.826 1564.16,687.826 1564.72,687.826 1565.28,687.826 1565.83,687.826 1566.39,687.826 1566.95,687.826 1567.51,687.826 1568.07,687.826 1568.63,687.826 1569.19,687.826 1569.75,687.826 1570.31,687.826 1570.87,687.826 1571.43,687.826 1571.99,687.826 1572.55,687.826 1573.1,687.826 1573.66,687.826 1574.22,687.826 1574.78,687.826 1575.34,687.826 1575.9,687.826 1576.46,687.826 1577.02,687.826 1577.58,687.826 1578.14,687.826 1578.7,687.826 1579.26,687.826 1579.82,687.826 1580.37,687.826 1580.93,687.826 1581.49,687.826 1582.05,687.826 1582.61,687.826 1583.17,687.826 1583.73,687.826 1584.29,687.826 1584.85,687.826 1585.41,687.826 1585.97,687.826 1586.53,687.826 1587.09,687.826 1587.65,687.826 1588.2,687.826 1588.76,687.826 1589.32,687.826 1589.88,687.826 1590.44,687.826 1591,687.826 1591.56,687.826 1592.12,687.826 1592.68,687.826 1593.24,687.826 1593.8,687.826 1594.36,687.826 1594.92,687.826 1595.47,687.826 1596.03,687.826 1596.59,687.826 1597.15,687.826 1597.71,687.826 1598.27,687.826 1598.83,687.826 1599.39,687.826 1599.95,687.826 1600.51,687.826 1601.07,687.826 1601.63,687.826 1602.19,687.826 1602.74,687.826 1603.3,687.826 1603.86,687.826 1604.42,687.826 1604.98,687.826 1605.54,687.826 1606.1,687.826 1606.66,687.826 1607.22,687.826 1607.78,687.826 1608.34,687.826 1608.9,687.826 1609.46,687.826 1610.02,687.826 1610.57,687.826 1611.13,687.826 1611.69,687.826 1612.25,687.826 1612.81,687.826 1613.37,687.826 1613.93,687.826 1614.49,687.826 1615.05,687.826 1615.61,687.826 1616.17,687.826 1616.73,687.826 1617.29,687.826 1617.84,687.826 1618.4,687.826 1618.96,687.826 1619.52,687.826 1620.08,687.826 1620.64,687.826 1621.2,687.826 1621.76,687.826 1622.32,687.826 1622.88,687.826 1623.44,687.826 1624,687.826 1624.56,687.826 1625.11,687.826 1625.67,687.826 1626.23,687.826 1626.79,687.826 1627.35,687.826 1627.91,687.826 1628.47,687.826 1629.03,687.826 1629.59,687.826 1630.15,687.826 1630.71,687.826 1631.27,687.826 1631.83,687.826 1632.39,687.826 1632.94,687.826 1633.5,687.826 1634.06,687.826 1634.62,687.826 1635.18,687.826 1635.74,687.826 1636.3,687.826 1636.86,687.826 1637.42,687.826 1637.98,687.826 1638.54,687.826 1639.1,687.826 1639.66,687.826 1640.21,687.826 1640.77,687.826 1641.33,687.826 1641.89,687.826 1642.45,687.826 1643.01,687.826 1643.57,687.826 1644.13,687.826 1644.69,687.826 1645.25,687.826 1645.81,687.826 1646.37,687.826 1646.93,687.826 1647.48,687.826 1648.04,687.826 1648.6,687.826 1649.16,687.826 1649.72,687.826 1650.28,687.826 1650.84,687.826 1651.4,687.826 1651.96,687.826 1652.52,687.826 1653.08,687.826 1653.64,687.826 1654.2,687.826 1654.76,687.826 1655.31,687.826 1655.87,687.826 1656.43,687.826 1656.99,687.826 1657.55,687.826 1658.11,687.826 1658.67,687.826 1659.23,687.826 1659.79,687.826 1660.35,687.826 1660.91,687.826 1661.47,687.826 1662.03,687.826 1662.58,687.826 1663.14,687.826 1663.7,687.826 1664.26,687.826 1664.82,687.826 1665.38,687.826 1665.94,687.826 1666.5,687.826 1667.06,687.826 1667.62,687.826 1668.18,687.826 1668.74,687.826 1669.3,687.826 1669.85,687.826 1670.41,687.826 1670.97,687.826 1671.53,687.826 1672.09,687.826 1672.65,687.826 1673.21,687.826 1673.77,687.826 1674.33,687.826 1674.89,687.826 1675.45,687.826 1676.01,687.826 1676.57,687.826 1677.13,687.826 1677.68,687.826 1678.24,687.826 1678.8,687.826 1679.36,687.826 1679.92,687.826 1680.48,687.826 1681.04,687.826 1681.6,687.826 1682.16,687.826 1682.72,687.826 1683.28,687.826 1683.84,687.826 1684.4,687.826 1684.95,687.826 1685.51,687.826 1686.07,687.826 1686.63,687.826 1687.19,687.826 1687.75,687.826 1688.31,687.826 1688.87,687.826 1689.43,687.826 1689.99,687.826 1690.55,687.826 1691.11,687.826 1691.67,687.826 1692.23,687.826 1692.78,687.826 1693.34,687.826 1693.9,687.826 1694.46,687.826 1695.02,687.826 1695.58,687.826 1696.14,687.826 1696.7,687.826 1697.26,687.826 1697.82,687.826 1698.38,687.826 1698.94,687.826 1699.5,687.826 1700.05,687.826 1700.61,687.826 1701.17,687.826 1701.73,687.826 1702.29,687.826 1702.85,687.826 1703.41,687.826 1703.97,687.826 1704.53,687.826 1705.09,687.826 1705.65,687.826 1706.21,687.826 1706.77,687.826 1707.32,687.826 1707.88,687.826 1708.44,687.826 1709,687.826 1709.56,687.826 1710.12,687.826 1710.68,687.826 1711.24,687.826 1711.8,687.826 1712.36,687.826 1712.92,687.826 1713.48,687.826 1714.04,687.826 1714.6,687.826 1715.15,687.826 1715.71,687.826 1716.27,687.826 1716.83,687.826 1717.39,687.826 1717.95,687.826 1718.51,687.826 1719.07,687.826 1719.63,687.826 1720.19,687.826 1720.75,687.826 1721.31,687.826 1721.87,687.826 1722.42,687.826 1722.98,687.826 1723.54,687.826 1724.1,687.826 1724.66,687.826 1725.22,687.826 1725.78,687.826 1726.34,687.826 1726.9,687.826 1727.46,687.826 1728.02,687.826 1728.58,687.826 1729.14,687.826 1729.69,687.826 1730.25,687.826 1730.81,687.826 1731.37,687.826 1731.93,687.826 1732.49,687.826 1733.05,687.826 1733.61,687.826 1734.17,687.826 1734.73,687.826 1735.29,687.826 1735.85,687.826 1736.41,687.826 1736.97,687.826 1737.52,687.826 1738.08,687.826 1738.64,687.826 1739.2,687.826 1739.76,687.826 1740.32,687.826 1740.88,687.826 1741.44,687.826 1742,687.826 1742.56,687.826 1743.12,687.826 1743.68,687.826 1744.24,687.826 1744.79,687.826 1745.35,687.826 1745.91,687.826 1746.47,687.826 1747.03,687.826 1747.59,687.826 1748.15,687.826 1748.71,687.826 1749.27,687.826 1749.83,687.826 1750.39,687.826 1750.95,687.826 1751.51,687.826 1752.06,687.826 1752.62,687.826 1753.18,687.826 1753.74,687.826 1754.3,687.826 1754.86,687.826 1755.42,687.826 1755.98,687.826 1756.54,687.826 1757.1,687.826 1757.66,687.826 1758.22,687.826 1758.78,687.826 1759.34,687.826 1759.89,687.826 1760.45,687.826 1761.01,687.826 1761.57,687.826 1762.13,687.826 1762.69,687.826 1763.25,687.826 1763.81,687.826 1764.37,687.826 1764.93,687.826 1765.49,687.826 1766.05,687.826 1766.61,687.826 1767.16,687.826 1767.72,687.826 1768.28,687.826 1768.84,687.826 1769.4,687.826 1769.96,687.826 1770.52,687.826 1771.08,687.826 1771.64,687.826 1772.2,687.826 1772.76,687.826 1773.32,687.826 1773.88,687.826 1774.43,687.826 1774.99,687.826 1775.55,687.826 1776.11,687.826 1776.67,687.826 1777.23,687.826 1777.79,687.826 1778.35,687.826 1778.91,687.826 1779.47,687.826 1780.03,687.826 1780.59,687.826 1781.15,687.826 1781.71,687.826 1782.26,687.826 1782.82,687.826 1783.38,687.826 1783.94,687.826 1784.5,687.826 1785.06,687.826 1785.62,687.826 1786.18,687.826 1786.74,687.826 1787.3,687.826 1787.86,687.826 1788.42,687.826 1788.98,687.826 1789.53,687.826 1790.09,687.826 1790.65,687.826 1791.21,687.826 1791.77,687.826 1792.33,687.826 1792.89,687.826 1793.45,687.826 1794.01,687.826 1794.57,687.826 1795.13,687.826 1795.69,687.826 1796.25,687.826 1796.8,687.826 1797.36,687.826 1797.92,687.826 1798.48,687.826 1799.04,687.826 1799.6,687.826 1800.16,687.826 1800.72,687.826 1801.28,687.826 1801.84,687.826 1802.4,687.826 1802.96,687.826 1803.52,687.826 1804.08,687.826 1804.63,687.826 1805.19,687.826 1805.75,687.826 1806.31,687.826 1806.87,687.826 1807.43,687.826 1807.99,687.826 1808.55,687.826 1809.11,687.826 1809.67,687.826 1810.23,687.826 1810.79,687.826 1811.35,687.826 1811.9,687.826 1812.46,687.826 1813.02,687.826 1813.58,687.826 1814.14,687.826 1814.7,687.826 1815.26,687.826 1815.82,687.826 1816.38,687.826 1816.94,687.826 1817.5,687.826 1818.06,687.826 1818.62,687.826 1819.18,687.826 1819.73,687.826 1820.29,687.826 1820.85,687.826 1821.41,687.826 1821.97,687.826 1822.53,687.826 1823.09,687.826 1823.65,687.826 1824.21,687.826 1824.77,687.826 1825.33,687.826 1825.89,687.826 1826.45,687.826 1827,687.826 1827.56,687.826 1828.12,687.826 1828.68,687.826 1829.24,687.826 1829.8,687.826 1830.36,687.826 1830.92,687.826 1831.48,687.826 1832.04,687.826 1832.6,687.826 1833.16,687.826 1833.72,687.826 1834.27,687.826 1834.83,687.826 1835.39,687.826 1835.95,687.826 1836.51,687.826 1837.07,687.826 1837.63,687.826 1838.19,687.826 \"/>\n<path clip-path=\"url(#clip883)\" d=\"M720.247 684.422 L720.806 684.422 L721.365 684.422 L721.924 684.422 L722.484 684.422 L723.043 684.422 L723.602 684.422 L724.161 684.422 L724.721 684.422 L725.28 684.422 L725.839 684.422 L726.398 684.422 L726.958 684.422 L727.517 684.422 L728.076 684.422 L728.635 684.422 L729.195 684.422 L729.754 684.422 L730.313 684.422 L730.872 684.422 L731.432 684.422 L731.991 684.422 L732.55 684.422 L733.109 684.422 L733.669 684.422 L734.228 684.422 L734.787 684.422 L735.346 684.422 L735.906 684.422 L736.465 684.422 L737.024 684.422 L737.583 684.422 L738.143 684.422 L738.702 684.422 L739.261 684.422 L739.82 684.422 L740.38 684.422 L740.939 684.422 L741.498 684.422 L742.057 684.422 L742.617 684.422 L743.176 684.422 L743.735 684.422 L744.294 684.422 L744.854 684.422 L745.413 684.422 L745.972 684.422 L746.531 684.422 L747.091 684.422 L747.65 684.422 L748.209 684.422 L748.768 684.422 L749.328 684.422 L749.887 684.422 L750.446 684.422 L751.005 684.422 L751.565 684.422 L752.124 684.422 L752.683 684.422 L753.242 684.422 L753.802 684.422 L754.361 684.422 L754.92 684.422 L755.479 684.422 L756.039 684.422 L756.598 684.422 L757.157 684.422 L757.716 684.422 L758.276 684.422 L758.835 684.422 L759.394 684.422 L759.953 684.422 L760.513 684.422 L761.072 684.422 L761.631 684.422 L762.19 684.422 L762.75 684.422 L763.309 684.422 L763.868 684.422 L764.427 684.422 L764.987 684.422 L765.546 684.422 L766.105 684.422 L766.664 684.422 L767.224 684.422 L767.783 684.422 L768.342 684.422 L768.901 684.422 L769.461 684.422 L770.02 684.422 L770.579 684.422 L771.138 684.422 L771.698 684.422 L772.257 684.422 L772.816 684.422 L773.375 684.422 L773.935 684.422 L774.494 684.422 L775.053 684.422 L775.612 684.422 L776.172 684.422 L776.731 684.422 L777.29 684.422 L777.849 684.422 L778.409 684.422 L778.968 684.422 L779.527 684.422 L780.086 684.422 L780.646 684.422 L781.205 684.422 L781.764 684.422 L782.323 684.422 L782.883 684.422 L783.442 684.422 L784.001 684.422 L784.56 684.422 L785.12 684.422 L785.679 684.422 L786.238 684.422 L786.797 684.422 L787.357 684.422 L787.916 684.422 L788.475 684.422 L789.034 684.422 L789.594 684.422 L790.153 684.422 L790.712 684.422 L791.271 684.422 L791.831 684.422 L792.39 684.422 L792.949 684.422 L793.508 684.422 L794.068 684.422 L794.627 684.422 L795.186 684.422 L795.745 684.422 L796.305 684.422 L796.864 684.422 L797.423 684.422 L797.982 684.422 L798.542 684.422 L799.101 684.422 L799.66 684.422 L800.219 684.422 L800.779 684.422 L801.338 684.422 L801.897 684.422 L802.456 684.422 L803.016 684.422 L803.575 684.422 L804.134 684.422 L804.693 684.422 L805.253 684.422 L805.812 684.422 L806.371 684.422 L806.931 684.422 L807.49 684.422 L808.049 684.422 L808.608 684.422 L809.168 684.422 L809.727 684.422 L810.286 684.422 L810.845 684.422 L811.405 684.422 L811.964 684.422 L812.523 684.422 L813.082 684.422 L813.642 684.422 L814.201 684.422 L814.76 684.422 L815.319 684.422 L815.879 684.422 L816.438 684.422 L816.997 684.422 L817.556 684.422 L818.116 684.422 L818.675 684.422 L819.234 684.422 L819.793 684.422 L820.353 684.422 L820.912 684.422 L821.471 684.422 L822.03 684.422 L822.59 684.422 L823.149 684.422 L823.708 684.422 L824.267 684.422 L824.827 684.422 L825.386 684.422 L825.945 684.422 L826.504 684.422 L827.064 684.422 L827.623 684.422 L828.182 684.422 L828.741 684.422 L829.301 684.422 L829.86 684.422 L830.419 684.422 L830.978 684.422 L831.538 684.422 L832.097 684.422 L832.656 684.422 L833.215 684.422 L833.775 684.422 L834.334 684.422 L834.893 684.422 L835.452 684.422 L836.012 684.422 L836.571 684.422 L837.13 684.422 L837.689 684.422 L838.249 684.422 L838.808 684.422 L839.367 684.422 L839.926 684.422 L840.486 684.422 L841.045 684.422 L841.604 684.422 L842.163 684.422 L842.723 684.422 L843.282 684.422 L843.841 684.422 L844.4 684.422 L844.96 684.422 L845.519 684.422 L846.078 684.422 L846.637 684.422 L847.197 684.422 L847.756 684.422 L848.315 684.422 L848.874 684.422 L849.434 684.422 L849.993 684.422 L850.552 684.422 L851.111 684.422 L851.671 684.422 L852.23 684.422 L852.789 684.422 L853.348 684.422 L853.908 684.422 L854.467 684.422 L855.026 684.422 L855.585 684.422 L856.145 684.422 L856.704 684.422 L857.263 684.422 L857.822 684.422 L858.382 684.422 L858.941 684.422 L859.5 684.422 L860.059 684.422 L860.619 684.422 L861.178 684.422 L861.737 684.422 L862.296 684.422 L862.856 684.422 L863.415 684.422 L863.974 684.422 L864.533 684.422 L865.093 684.422 L865.652 684.422 L866.211 684.422 L866.77 684.422 L867.33 684.422 L867.889 684.422 L868.448 684.422 L869.007 684.422 L869.567 684.422 L870.126 684.422 L870.685 684.422 L871.244 684.422 L871.804 684.422 L872.363 684.422 L872.922 684.422 L873.481 684.422 L874.041 684.422 L874.6 684.422 L875.159 684.422 L875.718 684.422 L876.278 684.422 L876.837 684.422 L877.396 684.422 L877.955 684.422 L878.515 684.422 L879.074 684.422 L879.633 684.422 L880.192 684.422 L880.752 684.422 L881.311 684.422 L881.87 684.422 L882.429 684.422 L882.989 684.422 L883.548 684.422 L884.107 684.422 L884.666 684.422 L885.226 684.422 L885.785 684.422 L886.344 684.422 L886.903 684.422 L887.463 684.422 L888.022 684.422 L888.581 684.422 L889.14 684.422 L889.7 684.422 L890.259 684.422 L890.818 684.422 L891.377 684.422 L891.937 684.422 L892.496 684.422 L893.055 684.422 L893.614 684.422 L894.174 684.422 L894.733 684.422 L895.292 684.422 L895.851 684.422 L896.411 684.422 L896.97 684.422 L897.529 684.422 L898.088 684.422 L898.648 684.422 L899.207 684.422 L899.766 684.422 L900.325 684.422 L900.885 684.422 L901.444 684.422 L902.003 684.422 L902.562 684.422 L903.122 684.422 L903.681 684.422 L904.24 684.422 L904.799 684.422 L905.359 684.422 L905.918 684.422 L906.477 684.422 L907.036 684.422 L907.596 684.422 L908.155 684.422 L908.714 684.422 L909.273 684.422 L909.833 684.422 L910.392 684.422 L910.951 684.422 L911.51 684.422 L912.07 684.422 L912.629 684.422 L913.188 684.422 L913.747 684.422 L914.307 684.422 L914.866 684.422 L915.425 684.422 L915.984 684.422 L916.544 684.422 L917.103 684.422 L917.662 684.422 L918.221 684.422 L918.781 684.422 L919.34 684.422 L919.899 684.422 L920.458 684.422 L921.018 684.422 L921.577 684.422 L922.136 684.422 L922.695 684.422 L923.255 684.422 L923.814 684.422 L924.373 684.422 L924.932 684.422 L925.492 684.422 L926.051 684.422 L926.61 684.422 L927.169 684.422 L927.729 684.422 L928.288 684.422 L928.847 684.422 L929.406 684.422 L929.966 684.422 L930.525 684.422 L931.084 684.422 L931.644 684.422 L932.203 684.422 L932.762 684.422 L933.321 684.422 L933.881 684.422 L934.44 684.422 L934.999 684.422 L935.558 684.422 L936.118 684.422 L936.677 684.422 L937.236 684.422 L937.795 684.422 L938.355 684.422 L938.914 684.422 L939.473 684.422 L940.032 684.422 L940.592 684.422 L941.151 684.422 L941.71 684.422 L942.269 684.422 L942.829 684.422 L943.388 684.422 L943.947 684.422 L944.506 684.422 L945.066 684.422 L945.625 684.422 L946.184 684.422 L946.743 684.422 L947.303 684.422 L947.862 684.422 L948.421 684.422 L948.98 684.422 L949.54 684.422 L950.099 684.422 L950.658 684.422 L951.217 684.422 L951.777 684.422 L952.336 684.422 L952.895 684.422 L953.454 684.422 L954.014 684.422 L954.573 684.422 L955.132 684.422 L955.691 684.422 L956.251 684.422 L956.81 684.422 L957.369 684.422 L957.928 684.422 L958.488 684.422 L959.047 684.422 L959.606 684.422 L960.165 684.422 L960.725 684.422 L961.284 684.422 L961.843 684.422 L962.402 684.422 L962.962 684.422 L963.521 684.422 L964.08 684.422 L964.639 684.422 L965.199 684.422 L965.758 684.422 L966.317 684.422 L966.876 684.422 L967.436 684.422 L967.995 684.422 L968.554 684.422 L969.113 684.422 L969.673 684.422 L970.232 684.422 L970.791 684.422 L971.35 684.422 L971.91 684.422 L972.469 684.422 L973.028 684.422 L973.587 684.422 L974.147 684.422 L974.706 684.422 L975.265 684.422 L975.824 684.422 L976.384 684.422 L976.943 684.422 L977.502 684.422 L978.061 684.422 L978.621 684.422 L979.18 684.422 L979.739 684.422 L980.298 684.422 L980.858 684.422 L981.417 684.422 L981.976 684.422 L982.535 684.422 L983.095 684.422 L983.654 684.422 L984.213 684.422 L984.772 684.422 L985.332 684.422 L985.891 684.422 L986.45 684.422 L987.009 684.422 L987.569 684.422 L988.128 684.422 L988.687 684.422 L989.246 684.422 L989.806 684.422 L990.365 684.422 L990.924 684.422 L991.483 684.422 L992.043 684.422 L992.602 684.422 L993.161 684.422 L993.72 684.422 L994.28 684.422 L994.839 684.422 L995.398 684.422 L995.957 684.422 L996.517 684.422 L997.076 684.422 L997.635 684.422 L998.194 684.422 L998.754 684.422 L999.313 684.422 L999.872 684.422 L1000.43 684.422 L1000.99 684.422 L1001.55 684.422 L1002.11 684.422 L1002.67 684.422 L1003.23 684.422 L1003.79 684.422 L1004.35 684.422 L1004.91 684.422 L1005.46 684.422 L1006.02 684.422 L1006.58 684.422 L1007.14 684.422 L1007.7 684.422 L1008.26 684.422 L1008.82 684.422 L1009.38 684.422 L1009.94 684.422 L1010.5 684.422 L1011.06 684.422 L1011.62 684.422 L1012.18 684.422 L1012.73 684.422 L1013.29 684.422 L1013.85 684.422 L1014.41 684.422 L1014.97 684.422 L1015.53 684.422 L1016.09 684.422 L1016.65 684.422 L1017.21 684.422 L1017.77 684.422 L1018.33 684.422 L1018.89 684.422 L1019.45 684.422 L1020.01 684.422 L1020.56 684.422 L1021.12 684.422 L1021.68 684.422 L1022.24 684.422 L1022.8 684.422 L1023.36 684.422 L1023.92 684.422 L1024.48 684.422 L1025.04 684.422 L1025.6 684.422 L1026.16 684.422 L1026.72 684.422 L1027.28 684.422 L1027.83 684.422 L1028.39 684.422 L1028.95 684.422 L1029.51 684.422 L1030.07 684.422 L1030.63 684.422 L1031.19 684.422 L1031.75 684.422 L1032.31 684.422 L1032.87 684.422 L1033.43 684.422 L1033.99 684.422 L1034.55 684.422 L1035.1 684.422 L1035.66 684.422 L1036.22 684.422 L1036.78 684.422 L1037.34 684.422 L1037.9 684.422 L1038.46 684.422 L1039.02 684.422 L1039.58 684.422 L1040.14 684.422 L1040.7 684.422 L1041.26 684.422 L1041.82 684.422 L1042.38 684.422 L1042.93 684.422 L1043.49 684.422 L1044.05 684.422 L1044.61 684.422 L1045.17 684.422 L1045.73 684.422 L1046.29 684.422 L1046.85 684.422 L1047.41 684.422 L1047.97 684.422 L1048.53 684.422 L1049.09 684.422 L1049.65 684.422 L1050.2 684.422 L1050.76 684.422 L1051.32 684.422 L1051.88 684.422 L1052.44 684.422 L1053 684.422 L1053.56 684.422 L1054.12 684.422 L1054.68 684.422 L1055.24 684.422 L1055.8 684.422 L1056.36 684.422 L1056.92 684.422 L1057.48 684.422 L1058.03 684.422 L1058.59 684.422 L1059.15 684.422 L1059.71 684.422 L1060.27 684.422 L1060.83 684.422 L1061.39 684.422 L1061.95 684.422 L1062.51 684.422 L1063.07 684.422 L1063.63 684.422 L1064.19 684.422 L1064.75 684.422 L1065.3 684.422 L1065.86 684.422 L1066.42 684.422 L1066.98 684.422 L1067.54 684.422 L1068.1 684.422 L1068.66 684.422 L1069.22 684.422 L1069.78 684.422 L1070.34 684.422 L1070.9 684.422 L1071.46 684.422 L1072.02 684.422 L1072.57 684.422 L1073.13 684.422 L1073.69 684.422 L1074.25 684.422 L1074.81 684.422 L1075.37 684.422 L1075.93 684.422 L1076.49 684.422 L1077.05 684.422 L1077.61 684.422 L1078.17 684.422 L1078.73 684.422 L1079.29 684.422 L1079.85 684.422 L1080.4 684.422 L1080.96 684.422 L1081.52 684.422 L1082.08 684.422 L1082.64 684.422 L1083.2 684.422 L1083.76 684.422 L1084.32 684.422 L1084.88 684.422 L1085.44 684.422 L1086 684.422 L1086.56 684.422 L1087.12 684.422 L1087.67 684.422 L1088.23 684.422 L1088.79 684.422 L1089.35 684.422 L1089.91 684.422 L1090.47 684.422 L1091.03 684.422 L1091.59 684.422 L1092.15 684.422 L1092.71 684.422 L1093.27 684.422 L1093.83 684.422 L1094.39 684.422 L1094.94 684.422 L1095.5 684.422 L1096.06 684.422 L1096.62 684.422 L1097.18 684.422 L1097.74 684.422 L1098.3 684.422 L1098.86 684.422 L1099.42 684.422 L1099.98 684.422 L1100.54 684.422 L1101.1 684.422 L1101.66 684.422 L1102.22 684.422 L1102.77 684.422 L1103.33 684.422 L1103.89 684.422 L1104.45 684.422 L1105.01 684.422 L1105.57 684.422 L1106.13 684.422 L1106.69 684.422 L1107.25 684.422 L1107.81 684.422 L1108.37 684.422 L1108.93 684.422 L1109.49 684.422 L1110.04 684.422 L1110.6 684.422 L1111.16 684.422 L1111.72 684.422 L1112.28 684.422 L1112.84 684.422 L1113.4 684.422 L1113.96 684.422 L1114.52 684.422 L1115.08 684.422 L1115.64 684.422 L1116.2 684.422 L1116.76 684.422 L1117.31 684.422 L1117.87 684.422 L1118.43 684.422 L1118.99 684.422 L1119.55 684.422 L1120.11 684.422 L1120.67 684.422 L1121.23 684.422 L1121.79 684.422 L1122.35 684.422 L1122.91 684.422 L1123.47 684.422 L1124.03 684.422 L1124.59 684.422 L1125.14 684.422 L1125.7 684.422 L1126.26 684.422 L1126.82 684.422 L1127.38 684.422 L1127.94 684.422 L1128.5 684.422 L1129.06 684.422 L1129.62 684.422 L1130.18 684.422 L1130.74 684.422 L1131.3 684.422 L1131.86 684.422 L1132.41 684.422 L1132.97 684.422 L1133.53 684.422 L1134.09 684.422 L1134.65 684.422 L1135.21 684.422 L1135.77 684.422 L1136.33 684.422 L1136.89 684.422 L1137.45 684.422 L1138.01 684.422 L1138.57 684.422 L1139.13 684.422 L1139.68 684.422 L1140.24 684.422 L1140.8 684.422 L1141.36 684.422 L1141.92 684.422 L1142.48 684.422 L1143.04 684.422 L1143.6 684.422 L1144.16 684.422 L1144.72 684.422 L1145.28 684.422 L1145.84 684.422 L1146.4 684.422 L1146.96 684.422 L1147.51 684.422 L1148.07 684.422 L1148.63 684.422 L1149.19 684.422 L1149.75 684.422 L1150.31 684.422 L1150.87 684.422 L1151.43 684.422 L1151.99 684.422 L1152.55 684.422 L1153.11 684.422 L1153.67 684.422 L1154.23 684.422 L1154.78 684.422 L1155.34 684.422 L1155.9 684.422 L1156.46 684.422 L1157.02 684.422 L1157.58 684.422 L1158.14 684.422 L1158.7 684.422 L1159.26 684.422 L1159.82 684.422 L1160.38 684.422 L1160.94 684.422 L1161.5 684.422 L1162.05 684.422 L1162.61 684.422 L1163.17 684.422 L1163.73 684.422 L1164.29 684.422 L1164.85 684.422 L1165.41 684.422 L1165.97 684.422 L1166.53 684.422 L1167.09 684.422 L1167.65 684.422 L1168.21 684.422 L1168.77 684.422 L1169.33 684.422 L1169.88 684.422 L1170.44 684.422 L1171 684.422 L1171.56 684.422 L1172.12 684.422 L1172.68 684.422 L1173.24 684.422 L1173.8 684.422 L1174.36 684.422 L1174.92 684.422 L1175.48 684.422 L1176.04 684.422 L1176.6 684.422 L1177.15 684.422 L1177.71 684.422 L1178.27 684.422 L1178.83 684.422 L1179.39 684.422 L1179.95 684.422 L1180.51 684.422 L1181.07 684.422 L1181.63 684.422 L1182.19 684.422 L1182.75 684.422 L1183.31 684.422 L1183.87 684.422 L1184.43 684.422 L1184.98 684.422 L1185.54 684.422 L1186.1 684.422 L1186.66 684.422 L1187.22 684.422 L1187.78 684.422 L1188.34 684.422 L1188.9 684.422 L1189.46 684.422 L1190.02 684.422 L1190.58 684.422 L1191.14 684.422 L1191.7 684.422 L1192.25 684.422 L1192.81 684.422 L1193.37 684.422 L1193.93 684.422 L1194.49 684.422 L1195.05 684.422 L1195.61 684.422 L1196.17 684.422 L1196.73 684.422 L1197.29 684.422 L1197.85 684.422 L1198.41 684.422 L1198.97 684.422 L1199.52 684.422 L1200.08 684.422 L1200.64 684.422 L1201.2 684.422 L1201.76 684.422 L1202.32 684.422 L1202.88 684.422 L1203.44 684.422 L1204 684.422 L1204.56 684.422 L1205.12 684.422 L1205.68 684.422 L1206.24 684.422 L1206.8 684.422 L1207.35 684.422 L1207.91 684.422 L1208.47 684.422 L1209.03 684.422 L1209.59 684.422 L1210.15 684.422 L1210.71 684.422 L1211.27 684.422 L1211.83 684.422 L1212.39 684.422 L1212.95 684.422 L1213.51 684.422 L1214.07 684.422 L1214.62 684.422 L1215.18 684.422 L1215.74 684.422 L1216.3 684.422 L1216.86 684.422 L1217.42 684.422 L1217.98 684.422 L1218.54 684.422 L1219.1 684.422 L1219.66 684.422 L1220.22 684.422 L1220.78 684.422 L1221.34 684.422 L1221.89 684.422 L1222.45 684.422 L1223.01 684.422 L1223.57 684.422 L1224.13 684.422 L1224.69 684.422 L1225.25 684.422 L1225.81 684.422 L1226.37 684.422 L1226.93 684.422 L1227.49 684.422 L1228.05 684.422 L1228.61 684.422 L1229.17 684.422 L1229.72 684.422 L1230.28 684.422 L1230.84 684.422 L1231.4 684.422 L1231.96 684.422 L1232.52 684.422 L1233.08 684.422 L1233.64 684.422 L1234.2 684.422 L1234.76 684.422 L1235.32 684.422 L1235.88 684.422 L1236.44 684.422 L1236.99 684.422 L1237.55 684.422 L1238.11 684.422 L1238.67 684.422 L1239.23 684.422 L1239.79 684.422 L1240.35 684.422 L1240.91 684.422 L1241.47 684.422 L1242.03 684.422 L1242.59 684.422 L1243.15 684.422 L1243.71 684.422 L1244.26 684.422 L1244.82 684.422 L1245.38 684.422 L1245.94 684.422 L1246.5 684.422 L1247.06 684.422 L1247.62 684.422 L1248.18 684.422 L1248.74 684.422 L1249.3 684.422 L1249.86 684.422 L1250.42 684.422 L1250.98 684.422 L1251.54 684.422 L1252.09 684.422 L1252.65 684.422 L1253.21 684.422 L1253.77 684.422 L1254.33 684.422 L1254.89 684.422 L1255.45 684.422 L1256.01 684.422 L1256.57 684.422 L1257.13 684.422 L1257.69 684.422 L1258.25 684.422 L1258.81 684.422 L1259.36 684.422 L1259.92 684.422 L1260.48 684.422 L1261.04 684.422 L1261.6 684.422 L1262.16 684.422 L1262.72 684.422 L1263.28 684.422 L1263.84 684.422 L1264.4 684.422 L1264.96 684.422 L1265.52 684.422 L1266.08 684.422 L1266.63 684.422 L1267.19 684.422 L1267.75 684.422 L1268.31 684.422 L1268.87 684.422 L1269.43 684.422 L1269.99 684.422 L1270.55 684.422 L1271.11 684.422 L1271.67 684.422 L1272.23 684.422 L1272.79 684.422 L1273.35 684.422 L1273.91 684.422 L1274.46 684.422 L1275.02 684.422 L1275.58 684.422 L1276.14 684.422 L1276.7 684.422 L1277.26 684.422 L1277.82 684.422 L1278.38 684.422 L1278.94 684.422 L1279.5 684.422 L1280.06 684.422 L1280.62 684.422 L1281.18 684.422 L1281.73 684.422 L1282.29 684.422 L1282.85 684.422 L1283.41 684.422 L1283.97 684.422 L1284.53 684.422 L1285.09 684.422 L1285.65 684.422 L1286.21 684.422 L1286.77 684.422 L1287.33 684.422 L1287.89 684.422 L1288.45 684.422 L1289 684.422 L1289.56 684.422 L1290.12 684.422 L1290.68 684.422 L1291.24 684.422 L1291.8 684.422 L1292.36 684.422 L1292.92 684.422 L1293.48 684.422 L1294.04 684.422 L1294.6 684.422 L1295.16 684.422 L1295.72 684.422 L1296.28 684.422 L1296.83 684.422 L1297.39 684.422 L1297.95 684.422 L1298.51 684.422 L1299.07 684.422 L1299.63 684.422 L1300.19 684.422 L1300.75 684.422 L1301.31 684.422 L1301.87 684.422 L1302.43 684.422 L1302.99 684.422 L1303.55 684.422 L1304.1 684.422 L1304.66 684.422 L1305.22 684.422 L1305.78 684.422 L1306.34 684.422 L1306.9 684.422 L1307.46 684.422 L1308.02 684.422 L1308.58 684.422 L1309.14 684.422 L1309.7 684.422 L1310.26 684.422 L1310.82 684.422 L1311.38 684.422 L1311.93 684.422 L1312.49 684.422 L1313.05 684.422 L1313.61 684.422 L1314.17 684.422 L1314.73 684.422 L1315.29 684.422 L1315.85 684.422 L1316.41 684.422 L1316.97 684.422 L1317.53 684.422 L1318.09 684.422 L1318.65 684.422 L1319.2 684.422 L1319.76 684.422 L1320.32 684.422 L1320.88 684.422 L1321.44 684.422 L1322 684.422 L1322.56 684.422 L1323.12 684.422 L1323.68 684.422 L1324.24 684.422 L1324.8 684.422 L1325.36 684.422 L1325.92 684.422 L1326.47 684.422 L1327.03 684.422 L1327.59 684.422 L1328.15 684.422 L1328.71 684.422 L1329.27 684.422 L1329.83 684.422 L1330.39 684.422 L1330.95 684.422 L1331.51 684.422 L1332.07 684.422 L1332.63 684.422 L1333.19 684.422 L1333.75 684.422 L1334.3 684.422 L1334.86 684.422 L1335.42 684.422 L1335.98 684.422 L1336.54 684.422 L1337.1 684.422 L1337.66 684.422 L1338.22 684.422 L1338.78 684.422 L1339.34 684.422 L1339.9 684.422 L1340.46 684.422 L1341.02 684.422 L1341.57 684.422 L1342.13 684.422 L1342.69 684.422 L1343.25 684.422 L1343.81 684.422 L1344.37 684.422 L1344.93 684.422 L1345.49 684.422 L1346.05 684.422 L1346.61 684.422 L1347.17 684.422 L1347.73 684.422 L1348.29 684.422 L1348.84 684.422 L1349.4 684.422 L1349.96 684.422 L1350.52 684.422 L1351.08 684.422 L1351.64 684.422 L1352.2 684.422 L1352.76 684.422 L1353.32 684.422 L1353.88 684.422 L1354.44 684.422 L1355 684.422 L1355.56 684.422 L1356.12 684.422 L1356.67 684.422 L1357.23 684.422 L1357.79 684.422 L1358.35 684.422 L1358.91 684.422 L1359.47 684.422 L1360.03 684.422 L1360.59 684.422 L1361.15 684.422 L1361.71 684.422 L1362.27 684.422 L1362.83 684.422 L1363.39 684.422 L1363.94 684.422 L1364.5 684.422 L1365.06 684.422 L1365.62 684.422 L1366.18 684.422 L1366.74 684.422 L1367.3 684.422 L1367.86 684.422 L1368.42 684.422 L1368.98 684.422 L1369.54 684.422 L1370.1 684.422 L1370.66 684.422 L1371.21 684.422 L1371.77 684.422 L1372.33 684.422 L1372.89 684.422 L1373.45 684.422 L1374.01 684.422 L1374.57 684.422 L1375.13 684.422 L1375.69 684.422 L1376.25 684.422 L1376.81 684.422 L1377.37 684.422 L1377.93 684.422 L1378.49 684.422 L1379.04 684.422 L1379.6 684.422 L1380.16 684.422 L1380.72 684.422 L1381.28 684.422 L1381.84 684.422 L1382.4 684.422 L1382.96 684.422 L1383.52 684.422 L1384.08 684.422 L1384.64 684.422 L1385.2 684.422 L1385.76 684.422 L1386.31 684.422 L1386.87 684.422 L1387.43 684.422 L1387.99 684.422 L1388.55 684.422 L1389.11 684.422 L1389.67 684.422 L1390.23 684.422 L1390.79 684.422 L1391.35 684.422 L1391.91 684.422 L1392.47 684.422 L1393.03 684.422 L1393.58 684.422 L1394.14 684.422 L1394.7 684.422 L1395.26 684.422 L1395.82 684.422 L1396.38 684.422 L1396.94 684.422 L1397.5 684.422 L1398.06 684.422 L1398.62 684.422 L1399.18 684.422 L1399.74 684.422 L1400.3 684.422 L1400.86 684.422 L1401.41 684.422 L1401.97 684.422 L1402.53 684.422 L1403.09 684.422 L1403.65 684.422 L1404.21 684.422 L1404.77 684.422 L1405.33 684.422 L1405.89 684.422 L1406.45 684.422 L1407.01 684.422 L1407.57 684.422 L1408.13 684.422 L1408.68 684.422 L1409.24 684.422 L1409.8 684.422 L1410.36 684.422 L1410.92 684.422 L1411.48 684.422 L1412.04 684.422 L1412.6 684.422 L1413.16 684.422 L1413.72 684.422 L1414.28 684.422 L1414.84 684.422 L1415.4 684.422 L1415.95 684.422 L1416.51 684.422 L1417.07 684.422 L1417.63 684.422 L1418.19 684.422 L1418.75 684.422 L1419.31 684.422 L1419.87 684.422 L1420.43 684.422 L1420.99 684.422 L1421.55 684.422 L1422.11 684.422 L1422.67 684.422 L1423.23 684.422 L1423.78 684.422 L1424.34 684.422 L1424.9 684.422 L1425.46 684.422 L1426.02 684.422 L1426.58 684.422 L1427.14 684.422 L1427.7 684.422 L1428.26 684.422 L1428.82 684.422 L1429.38 684.422 L1429.94 684.422 L1430.5 684.422 L1431.05 684.422 L1431.61 684.422 L1432.17 684.422 L1432.73 684.422 L1433.29 684.422 L1433.85 684.422 L1434.41 684.422 L1434.97 684.422 L1435.53 684.422 L1436.09 684.422 L1436.65 684.422 L1437.21 684.422 L1437.77 684.422 L1438.33 684.422 L1438.88 684.422 L1439.44 684.422 L1440 684.422 L1440.56 684.422 L1441.12 684.422 L1441.68 684.422 L1442.24 684.422 L1442.8 684.422 L1443.36 684.422 L1443.92 684.422 L1444.48 684.422 L1445.04 684.422 L1445.6 684.422 L1446.15 684.422 L1446.71 684.422 L1447.27 684.422 L1447.83 684.422 L1448.39 684.422 L1448.95 684.422 L1449.51 684.422 L1450.07 684.422 L1450.63 684.422 L1451.19 684.422 L1451.75 684.422 L1452.31 684.422 L1452.87 684.422 L1453.42 684.422 L1453.98 684.422 L1454.54 684.422 L1455.1 684.422 L1455.66 684.422 L1456.22 684.422 L1456.78 684.422 L1457.34 684.422 L1457.9 684.422 L1458.46 684.422 L1459.02 684.422 L1459.58 684.422 L1460.14 684.422 L1460.7 684.422 L1461.25 684.422 L1461.81 684.422 L1462.37 684.422 L1462.93 684.422 L1463.49 684.422 L1464.05 684.422 L1464.61 684.422 L1465.17 684.422 L1465.73 684.422 L1466.29 684.422 L1466.85 684.422 L1467.41 684.422 L1467.97 684.422 L1468.52 684.422 L1469.08 684.422 L1469.64 684.422 L1470.2 684.422 L1470.76 684.422 L1471.32 684.422 L1471.88 684.422 L1472.44 684.422 L1473 684.422 L1473.56 684.422 L1474.12 684.422 L1474.68 684.422 L1475.24 684.422 L1475.79 684.422 L1476.35 684.422 L1476.91 684.422 L1477.47 684.422 L1478.03 684.422 L1478.59 684.422 L1479.15 684.422 L1479.71 684.422 L1480.27 684.422 L1480.83 684.422 L1481.39 684.422 L1481.95 684.422 L1482.51 684.422 L1483.07 684.422 L1483.62 684.422 L1484.18 684.422 L1484.74 684.422 L1485.3 684.422 L1485.86 684.422 L1486.42 684.422 L1486.98 684.422 L1487.54 684.422 L1488.1 684.422 L1488.66 684.422 L1489.22 684.422 L1489.78 684.422 L1490.34 684.422 L1490.89 684.422 L1491.45 684.422 L1492.01 684.422 L1492.57 684.422 L1493.13 684.422 L1493.69 684.422 L1494.25 684.422 L1494.81 684.422 L1495.37 684.422 L1495.93 684.422 L1496.49 684.422 L1497.05 684.422 L1497.61 684.422 L1498.16 684.422 L1498.72 684.422 L1499.28 684.422 L1499.84 684.422 L1500.4 684.422 L1500.96 684.422 L1501.52 684.422 L1502.08 684.422 L1502.64 684.422 L1503.2 684.422 L1503.76 684.422 L1504.32 684.422 L1504.88 684.422 L1505.44 684.422 L1505.99 684.422 L1506.55 684.422 L1507.11 684.422 L1507.67 684.422 L1508.23 684.422 L1508.79 684.422 L1509.35 684.422 L1509.91 684.422 L1510.47 684.422 L1511.03 684.422 L1511.59 684.422 L1512.15 684.422 L1512.71 684.422 L1513.26 684.422 L1513.82 684.422 L1514.38 684.422 L1514.94 684.422 L1515.5 684.422 L1516.06 684.422 L1516.62 684.422 L1517.18 684.422 L1517.74 684.422 L1518.3 684.422 L1518.86 684.422 L1519.42 684.422 L1519.98 684.422 L1520.53 684.422 L1521.09 684.422 L1521.65 684.422 L1522.21 684.422 L1522.77 684.422 L1523.33 684.422 L1523.89 684.422 L1524.45 684.422 L1525.01 684.422 L1525.57 684.422 L1526.13 684.422 L1526.69 684.422 L1527.25 684.422 L1527.81 684.422 L1528.36 684.422 L1528.92 684.422 L1529.48 684.422 L1530.04 684.422 L1530.6 684.422 L1531.16 684.422 L1531.72 684.422 L1532.28 684.422 L1532.84 684.422 L1533.4 684.422 L1533.96 684.422 L1534.52 684.422 L1535.08 684.422 L1535.63 684.422 L1536.19 684.422 L1536.75 684.422 L1537.31 684.422 L1537.87 684.422 L1538.43 684.422 L1538.99 684.422 L1539.55 684.422 L1540.11 684.422 L1540.67 684.422 L1541.23 684.422 L1541.79 684.422 L1542.35 684.422 L1542.9 684.422 L1543.46 684.422 L1544.02 684.422 L1544.58 684.422 L1545.14 684.422 L1545.7 684.422 L1546.26 684.422 L1546.82 684.422 L1547.38 684.422 L1547.94 684.422 L1548.5 684.422 L1549.06 684.422 L1549.62 684.422 L1550.18 684.422 L1550.73 684.422 L1551.29 684.422 L1551.85 684.422 L1552.41 684.422 L1552.97 684.422 L1553.53 684.422 L1554.09 684.422 L1554.65 684.422 L1555.21 684.422 L1555.77 684.422 L1556.33 684.422 L1556.89 684.422 L1557.45 684.422 L1558 684.422 L1558.56 684.422 L1559.12 684.422 L1559.68 684.422 L1560.24 684.422 L1560.8 684.422 L1561.36 684.422 L1561.92 684.422 L1562.48 684.422 L1563.04 684.422 L1563.6 684.422 L1564.16 684.422 L1564.72 684.422 L1565.28 684.422 L1565.83 684.422 L1566.39 684.422 L1566.95 684.422 L1567.51 684.422 L1568.07 684.422 L1568.63 684.422 L1569.19 684.422 L1569.75 684.422 L1570.31 684.422 L1570.87 684.422 L1571.43 684.422 L1571.99 684.422 L1572.55 684.422 L1573.1 684.422 L1573.66 684.422 L1574.22 684.422 L1574.78 684.422 L1575.34 684.422 L1575.9 684.422 L1576.46 684.422 L1577.02 684.422 L1577.58 684.422 L1578.14 684.422 L1578.7 684.422 L1579.26 684.422 L1579.82 684.422 L1580.37 684.422 L1580.93 684.422 L1581.49 684.422 L1582.05 684.422 L1582.61 684.422 L1583.17 684.422 L1583.73 684.422 L1584.29 684.422 L1584.85 684.422 L1585.41 684.422 L1585.97 684.422 L1586.53 684.422 L1587.09 684.422 L1587.65 684.422 L1588.2 684.422 L1588.76 684.422 L1589.32 684.422 L1589.88 684.422 L1590.44 684.422 L1591 684.422 L1591.56 684.422 L1592.12 684.422 L1592.68 684.422 L1593.24 684.422 L1593.8 684.422 L1594.36 684.422 L1594.92 684.422 L1595.47 684.422 L1596.03 684.422 L1596.59 684.422 L1597.15 684.422 L1597.71 684.422 L1598.27 684.422 L1598.83 684.422 L1599.39 684.422 L1599.95 684.422 L1600.51 684.422 L1601.07 684.422 L1601.63 684.422 L1602.19 684.422 L1602.74 684.422 L1603.3 684.422 L1603.86 684.422 L1604.42 684.422 L1604.98 684.422 L1605.54 684.422 L1606.1 684.422 L1606.66 684.422 L1607.22 684.422 L1607.78 684.422 L1608.34 684.422 L1608.9 684.422 L1609.46 684.422 L1610.02 684.422 L1610.57 684.422 L1611.13 684.422 L1611.69 684.422 L1612.25 684.422 L1612.81 684.422 L1613.37 684.422 L1613.93 684.422 L1614.49 684.422 L1615.05 684.422 L1615.61 684.422 L1616.17 684.422 L1616.73 684.422 L1617.29 684.422 L1617.84 684.422 L1618.4 684.422 L1618.96 684.422 L1619.52 684.422 L1620.08 684.422 L1620.64 684.422 L1621.2 684.422 L1621.76 684.422 L1622.32 684.422 L1622.88 684.422 L1623.44 684.422 L1624 684.422 L1624.56 684.422 L1625.11 684.422 L1625.67 684.422 L1626.23 684.422 L1626.79 684.422 L1627.35 684.422 L1627.91 684.422 L1628.47 684.422 L1629.03 684.422 L1629.59 684.422 L1630.15 684.422 L1630.71 684.422 L1631.27 684.422 L1631.83 684.422 L1632.39 684.422 L1632.94 684.422 L1633.5 684.422 L1634.06 684.422 L1634.62 684.422 L1635.18 684.422 L1635.74 684.422 L1636.3 684.422 L1636.86 684.422 L1637.42 684.422 L1637.98 684.422 L1638.54 684.422 L1639.1 684.422 L1639.66 684.422 L1640.21 684.422 L1640.77 684.422 L1641.33 684.422 L1641.89 684.422 L1642.45 684.422 L1643.01 684.422 L1643.57 684.422 L1644.13 684.422 L1644.69 684.422 L1645.25 684.422 L1645.81 684.422 L1646.37 684.422 L1646.93 684.422 L1647.48 684.422 L1648.04 684.422 L1648.6 684.422 L1649.16 684.422 L1649.72 684.422 L1650.28 684.422 L1650.84 684.422 L1651.4 684.422 L1651.96 684.422 L1652.52 684.422 L1653.08 684.422 L1653.64 684.422 L1654.2 684.422 L1654.76 684.422 L1655.31 684.422 L1655.87 684.422 L1656.43 684.422 L1656.99 684.422 L1657.55 684.422 L1658.11 684.422 L1658.67 684.422 L1659.23 684.422 L1659.79 684.422 L1660.35 684.422 L1660.91 684.422 L1661.47 684.422 L1662.03 684.422 L1662.58 684.422 L1663.14 684.422 L1663.7 684.422 L1664.26 684.422 L1664.82 684.422 L1665.38 684.422 L1665.94 684.422 L1666.5 684.422 L1667.06 684.422 L1667.62 684.422 L1668.18 684.422 L1668.74 684.422 L1669.3 684.422 L1669.85 684.422 L1670.41 684.422 L1670.97 684.422 L1671.53 684.422 L1672.09 684.422 L1672.65 684.422 L1673.21 684.422 L1673.77 684.422 L1674.33 684.422 L1674.89 684.422 L1675.45 684.422 L1676.01 684.422 L1676.57 684.422 L1677.13 684.422 L1677.68 684.422 L1678.24 684.422 L1678.8 684.422 L1679.36 684.422 L1679.92 684.422 L1680.48 684.422 L1681.04 684.422 L1681.6 684.422 L1682.16 684.422 L1682.72 684.422 L1683.28 684.422 L1683.84 684.422 L1684.4 684.422 L1684.95 684.422 L1685.51 684.422 L1686.07 684.422 L1686.63 684.422 L1687.19 684.422 L1687.75 684.422 L1688.31 684.422 L1688.87 684.422 L1689.43 684.422 L1689.99 684.422 L1690.55 684.422 L1691.11 684.422 L1691.67 684.422 L1692.23 684.422 L1692.78 684.422 L1693.34 684.422 L1693.9 684.422 L1694.46 684.422 L1695.02 684.422 L1695.58 684.422 L1696.14 684.422 L1696.7 684.422 L1697.26 684.422 L1697.82 684.422 L1698.38 684.422 L1698.94 684.422 L1699.5 684.422 L1700.05 684.422 L1700.61 684.422 L1701.17 684.422 L1701.73 684.422 L1702.29 684.422 L1702.85 684.422 L1703.41 684.422 L1703.97 684.422 L1704.53 684.422 L1705.09 684.422 L1705.65 684.422 L1706.21 684.422 L1706.77 684.422 L1707.32 684.422 L1707.88 684.422 L1708.44 684.422 L1709 684.422 L1709.56 684.422 L1710.12 684.422 L1710.68 684.422 L1711.24 684.422 L1711.8 684.422 L1712.36 684.422 L1712.92 684.422 L1713.48 684.422 L1714.04 684.422 L1714.6 684.422 L1715.15 684.422 L1715.71 684.422 L1716.27 684.422 L1716.83 684.422 L1717.39 684.422 L1717.95 684.422 L1718.51 684.422 L1719.07 684.422 L1719.63 684.422 L1720.19 684.422 L1720.75 684.422 L1721.31 684.422 L1721.87 684.422 L1722.42 684.422 L1722.98 684.422 L1723.54 684.422 L1724.1 684.422 L1724.66 684.422 L1725.22 684.422 L1725.78 684.422 L1726.34 684.422 L1726.9 684.422 L1727.46 684.422 L1728.02 684.422 L1728.58 684.422 L1729.14 684.422 L1729.69 684.422 L1730.25 684.422 L1730.81 684.422 L1731.37 684.422 L1731.93 684.422 L1732.49 684.422 L1733.05 684.422 L1733.61 684.422 L1734.17 684.422 L1734.73 684.422 L1735.29 684.422 L1735.85 684.422 L1736.41 684.422 L1736.97 684.422 L1737.52 684.422 L1738.08 684.422 L1738.64 684.422 L1739.2 684.422 L1739.76 684.422 L1740.32 684.422 L1740.88 684.422 L1741.44 684.422 L1742 684.422 L1742.56 684.422 L1743.12 684.422 L1743.68 684.422 L1744.24 684.422 L1744.79 684.422 L1745.35 684.422 L1745.91 684.422 L1746.47 684.422 L1747.03 684.422 L1747.59 684.422 L1748.15 684.422 L1748.71 684.422 L1749.27 684.422 L1749.83 684.422 L1750.39 684.422 L1750.95 684.422 L1751.51 684.422 L1752.06 684.422 L1752.62 684.422 L1753.18 684.422 L1753.74 684.422 L1754.3 684.422 L1754.86 684.422 L1755.42 684.422 L1755.98 684.422 L1756.54 684.422 L1757.1 684.422 L1757.66 684.422 L1758.22 684.422 L1758.78 684.422 L1759.34 684.422 L1759.89 684.422 L1760.45 684.422 L1761.01 684.422 L1761.57 684.422 L1762.13 684.422 L1762.69 684.422 L1763.25 684.422 L1763.81 684.422 L1764.37 684.422 L1764.93 684.422 L1765.49 684.422 L1766.05 684.422 L1766.61 684.422 L1767.16 684.422 L1767.72 684.422 L1768.28 684.422 L1768.84 684.422 L1769.4 684.422 L1769.96 684.422 L1770.52 684.422 L1771.08 684.422 L1771.64 684.422 L1772.2 684.422 L1772.76 684.422 L1773.32 684.422 L1773.88 684.422 L1774.43 684.422 L1774.99 684.422 L1775.55 684.422 L1776.11 684.422 L1776.67 684.422 L1777.23 684.422 L1777.79 684.422 L1778.35 684.422 L1778.91 684.422 L1779.47 684.422 L1780.03 684.422 L1780.59 684.422 L1781.15 684.422 L1781.71 684.422 L1782.26 684.422 L1782.82 684.422 L1783.38 684.422 L1783.94 684.422 L1784.5 684.422 L1785.06 684.422 L1785.62 684.422 L1786.18 684.422 L1786.74 684.422 L1787.3 684.422 L1787.86 684.422 L1788.42 684.422 L1788.98 684.422 L1789.53 684.422 L1790.09 684.422 L1790.65 684.422 L1791.21 684.422 L1791.77 684.422 L1792.33 684.422 L1792.89 684.422 L1793.45 684.422 L1794.01 684.422 L1794.57 684.422 L1795.13 684.422 L1795.69 684.422 L1796.25 684.422 L1796.8 684.422 L1797.36 684.422 L1797.92 684.422 L1798.48 684.422 L1799.04 684.422 L1799.6 684.422 L1800.16 684.422 L1800.72 684.422 L1801.28 684.422 L1801.84 684.422 L1802.4 684.422 L1802.96 684.422 L1803.52 684.422 L1804.08 684.422 L1804.63 684.422 L1805.19 684.422 L1805.75 684.422 L1806.31 684.422 L1806.87 684.422 L1807.43 684.422 L1807.99 684.422 L1808.55 684.422 L1809.11 684.422 L1809.67 684.422 L1810.23 684.422 L1810.79 684.422 L1811.35 684.422 L1811.9 684.422 L1812.46 684.422 L1813.02 684.422 L1813.58 684.422 L1814.14 684.422 L1814.7 684.422 L1815.26 684.422 L1815.82 684.422 L1816.38 684.422 L1816.94 684.422 L1817.5 684.422 L1818.06 684.422 L1818.62 684.422 L1819.18 684.422 L1819.73 684.422 L1820.29 684.422 L1820.85 684.422 L1821.41 684.422 L1821.97 684.422 L1822.53 684.422 L1823.09 684.422 L1823.65 684.422 L1824.21 684.422 L1824.77 684.422 L1825.33 684.422 L1825.89 684.422 L1826.45 684.422 L1827 684.422 L1827.56 684.422 L1828.12 684.422 L1828.68 684.422 L1829.24 684.422 L1829.8 684.422 L1830.36 684.422 L1830.92 684.422 L1831.48 684.422 L1832.04 684.422 L1832.6 684.422 L1833.16 684.422 L1833.72 684.422 L1834.27 684.422 L1834.83 684.422 L1835.39 684.422 L1835.95 684.422 L1836.51 684.422 L1837.07 684.422 L1837.63 684.422 L1838.19 684.422 L1838.19 682.32 L1837.63 682.32 L1837.07 682.32 L1836.51 682.32 L1835.95 682.32 L1835.39 682.32 L1834.83 682.32 L1834.27 682.32 L1833.72 682.32 L1833.16 682.32 L1832.6 682.32 L1832.04 682.32 L1831.48 682.32 L1830.92 682.32 L1830.36 682.32 L1829.8 682.32 L1829.24 682.32 L1828.68 682.32 L1828.12 682.32 L1827.56 682.32 L1827 682.32 L1826.45 682.32 L1825.89 682.32 L1825.33 682.32 L1824.77 682.32 L1824.21 682.32 L1823.65 682.32 L1823.09 682.32 L1822.53 682.32 L1821.97 682.32 L1821.41 682.32 L1820.85 682.32 L1820.29 682.32 L1819.73 682.32 L1819.18 682.32 L1818.62 682.32 L1818.06 682.32 L1817.5 682.32 L1816.94 682.32 L1816.38 682.32 L1815.82 682.32 L1815.26 682.32 L1814.7 682.32 L1814.14 682.32 L1813.58 682.32 L1813.02 682.32 L1812.46 682.32 L1811.9 682.32 L1811.35 682.32 L1810.79 682.32 L1810.23 682.32 L1809.67 682.32 L1809.11 682.32 L1808.55 682.32 L1807.99 682.32 L1807.43 682.32 L1806.87 682.32 L1806.31 682.32 L1805.75 682.32 L1805.19 682.32 L1804.63 682.32 L1804.08 682.32 L1803.52 682.32 L1802.96 682.32 L1802.4 682.32 L1801.84 682.32 L1801.28 682.32 L1800.72 682.32 L1800.16 682.32 L1799.6 682.32 L1799.04 682.32 L1798.48 682.32 L1797.92 682.32 L1797.36 682.32 L1796.8 682.32 L1796.25 682.32 L1795.69 682.32 L1795.13 682.32 L1794.57 682.32 L1794.01 682.32 L1793.45 682.32 L1792.89 682.32 L1792.33 682.32 L1791.77 682.32 L1791.21 682.32 L1790.65 682.32 L1790.09 682.32 L1789.53 682.32 L1788.98 682.32 L1788.42 682.32 L1787.86 682.32 L1787.3 682.32 L1786.74 682.32 L1786.18 682.32 L1785.62 682.32 L1785.06 682.32 L1784.5 682.32 L1783.94 682.32 L1783.38 682.32 L1782.82 682.32 L1782.26 682.32 L1781.71 682.32 L1781.15 682.32 L1780.59 682.32 L1780.03 682.32 L1779.47 682.32 L1778.91 682.32 L1778.35 682.32 L1777.79 682.32 L1777.23 682.32 L1776.67 682.32 L1776.11 682.32 L1775.55 682.32 L1774.99 682.32 L1774.43 682.32 L1773.88 682.32 L1773.32 682.32 L1772.76 682.32 L1772.2 682.32 L1771.64 682.32 L1771.08 682.32 L1770.52 682.32 L1769.96 682.32 L1769.4 682.32 L1768.84 682.32 L1768.28 682.32 L1767.72 682.32 L1767.16 682.32 L1766.61 682.32 L1766.05 682.32 L1765.49 682.32 L1764.93 682.32 L1764.37 682.32 L1763.81 682.32 L1763.25 682.32 L1762.69 682.32 L1762.13 682.32 L1761.57 682.32 L1761.01 682.32 L1760.45 682.32 L1759.89 682.32 L1759.34 682.32 L1758.78 682.32 L1758.22 682.32 L1757.66 682.32 L1757.1 682.32 L1756.54 682.32 L1755.98 682.32 L1755.42 682.32 L1754.86 682.32 L1754.3 682.32 L1753.74 682.32 L1753.18 682.32 L1752.62 682.32 L1752.06 682.32 L1751.51 682.32 L1750.95 682.32 L1750.39 682.32 L1749.83 682.32 L1749.27 682.32 L1748.71 682.32 L1748.15 682.32 L1747.59 682.32 L1747.03 682.32 L1746.47 682.32 L1745.91 682.32 L1745.35 682.32 L1744.79 682.32 L1744.24 682.32 L1743.68 682.32 L1743.12 682.32 L1742.56 682.32 L1742 682.32 L1741.44 682.32 L1740.88 682.32 L1740.32 682.32 L1739.76 682.32 L1739.2 682.32 L1738.64 682.32 L1738.08 682.32 L1737.52 682.32 L1736.97 682.32 L1736.41 682.32 L1735.85 682.32 L1735.29 682.32 L1734.73 682.32 L1734.17 682.32 L1733.61 682.32 L1733.05 682.32 L1732.49 682.32 L1731.93 682.32 L1731.37 682.32 L1730.81 682.32 L1730.25 682.32 L1729.69 682.32 L1729.14 682.32 L1728.58 682.32 L1728.02 682.32 L1727.46 682.32 L1726.9 682.32 L1726.34 682.32 L1725.78 682.32 L1725.22 682.32 L1724.66 682.32 L1724.1 682.32 L1723.54 682.32 L1722.98 682.32 L1722.42 682.32 L1721.87 682.32 L1721.31 682.32 L1720.75 682.32 L1720.19 682.32 L1719.63 682.32 L1719.07 682.32 L1718.51 682.32 L1717.95 682.32 L1717.39 682.32 L1716.83 682.32 L1716.27 682.32 L1715.71 682.32 L1715.15 682.32 L1714.6 682.32 L1714.04 682.32 L1713.48 682.32 L1712.92 682.32 L1712.36 682.32 L1711.8 682.32 L1711.24 682.32 L1710.68 682.32 L1710.12 682.32 L1709.56 682.32 L1709 682.32 L1708.44 682.32 L1707.88 682.32 L1707.32 682.32 L1706.77 682.32 L1706.21 682.32 L1705.65 682.32 L1705.09 682.32 L1704.53 682.32 L1703.97 682.32 L1703.41 682.32 L1702.85 682.32 L1702.29 682.32 L1701.73 682.32 L1701.17 682.32 L1700.61 682.32 L1700.05 682.32 L1699.5 682.32 L1698.94 682.32 L1698.38 682.32 L1697.82 682.32 L1697.26 682.32 L1696.7 682.32 L1696.14 682.32 L1695.58 682.32 L1695.02 682.32 L1694.46 682.32 L1693.9 682.32 L1693.34 682.32 L1692.78 682.32 L1692.23 682.32 L1691.67 682.32 L1691.11 682.32 L1690.55 682.32 L1689.99 682.32 L1689.43 682.32 L1688.87 682.32 L1688.31 682.32 L1687.75 682.32 L1687.19 682.32 L1686.63 682.32 L1686.07 682.32 L1685.51 682.32 L1684.95 682.32 L1684.4 682.32 L1683.84 682.32 L1683.28 682.32 L1682.72 682.32 L1682.16 682.32 L1681.6 682.32 L1681.04 682.32 L1680.48 682.32 L1679.92 682.32 L1679.36 682.32 L1678.8 682.32 L1678.24 682.32 L1677.68 682.32 L1677.13 682.32 L1676.57 682.32 L1676.01 682.32 L1675.45 682.32 L1674.89 682.32 L1674.33 682.32 L1673.77 682.32 L1673.21 682.32 L1672.65 682.32 L1672.09 682.32 L1671.53 682.32 L1670.97 682.32 L1670.41 682.32 L1669.85 682.32 L1669.3 682.32 L1668.74 682.32 L1668.18 682.32 L1667.62 682.32 L1667.06 682.32 L1666.5 682.32 L1665.94 682.32 L1665.38 682.32 L1664.82 682.32 L1664.26 682.32 L1663.7 682.32 L1663.14 682.32 L1662.58 682.32 L1662.03 682.32 L1661.47 682.32 L1660.91 682.32 L1660.35 682.32 L1659.79 682.32 L1659.23 682.32 L1658.67 682.32 L1658.11 682.32 L1657.55 682.32 L1656.99 682.32 L1656.43 682.32 L1655.87 682.32 L1655.31 682.32 L1654.76 682.32 L1654.2 682.32 L1653.64 682.32 L1653.08 682.32 L1652.52 682.32 L1651.96 682.32 L1651.4 682.32 L1650.84 682.32 L1650.28 682.32 L1649.72 682.32 L1649.16 682.32 L1648.6 682.32 L1648.04 682.32 L1647.48 682.32 L1646.93 682.32 L1646.37 682.32 L1645.81 682.32 L1645.25 682.32 L1644.69 682.32 L1644.13 682.32 L1643.57 682.32 L1643.01 682.32 L1642.45 682.32 L1641.89 682.32 L1641.33 682.32 L1640.77 682.32 L1640.21 682.32 L1639.66 682.32 L1639.1 682.32 L1638.54 682.32 L1637.98 682.32 L1637.42 682.32 L1636.86 682.32 L1636.3 682.32 L1635.74 682.32 L1635.18 682.32 L1634.62 682.32 L1634.06 682.32 L1633.5 682.32 L1632.94 682.32 L1632.39 682.32 L1631.83 682.32 L1631.27 682.32 L1630.71 682.32 L1630.15 682.32 L1629.59 682.32 L1629.03 682.32 L1628.47 682.32 L1627.91 682.32 L1627.35 682.32 L1626.79 682.32 L1626.23 682.32 L1625.67 682.32 L1625.11 682.32 L1624.56 682.32 L1624 682.32 L1623.44 682.32 L1622.88 682.32 L1622.32 682.32 L1621.76 682.32 L1621.2 682.32 L1620.64 682.32 L1620.08 682.32 L1619.52 682.32 L1618.96 682.32 L1618.4 682.32 L1617.84 682.32 L1617.29 682.32 L1616.73 682.32 L1616.17 682.32 L1615.61 682.32 L1615.05 682.32 L1614.49 682.32 L1613.93 682.32 L1613.37 682.32 L1612.81 682.32 L1612.25 682.32 L1611.69 682.32 L1611.13 682.32 L1610.57 682.32 L1610.02 682.32 L1609.46 682.32 L1608.9 682.32 L1608.34 682.32 L1607.78 682.32 L1607.22 682.32 L1606.66 682.32 L1606.1 682.32 L1605.54 682.32 L1604.98 682.32 L1604.42 682.32 L1603.86 682.32 L1603.3 682.32 L1602.74 682.32 L1602.19 682.32 L1601.63 682.32 L1601.07 682.32 L1600.51 682.32 L1599.95 682.32 L1599.39 682.32 L1598.83 682.32 L1598.27 682.32 L1597.71 682.32 L1597.15 682.32 L1596.59 682.32 L1596.03 682.32 L1595.47 682.32 L1594.92 682.32 L1594.36 682.32 L1593.8 682.32 L1593.24 682.32 L1592.68 682.32 L1592.12 682.32 L1591.56 682.32 L1591 682.32 L1590.44 682.32 L1589.88 682.32 L1589.32 682.32 L1588.76 682.32 L1588.2 682.32 L1587.65 682.32 L1587.09 682.32 L1586.53 682.32 L1585.97 682.32 L1585.41 682.32 L1584.85 682.32 L1584.29 682.32 L1583.73 682.32 L1583.17 682.32 L1582.61 682.32 L1582.05 682.32 L1581.49 682.32 L1580.93 682.32 L1580.37 682.32 L1579.82 682.32 L1579.26 682.32 L1578.7 682.32 L1578.14 682.32 L1577.58 682.32 L1577.02 682.32 L1576.46 682.32 L1575.9 682.32 L1575.34 682.32 L1574.78 682.32 L1574.22 682.32 L1573.66 682.32 L1573.1 682.32 L1572.55 682.32 L1571.99 682.32 L1571.43 682.32 L1570.87 682.32 L1570.31 682.32 L1569.75 682.32 L1569.19 682.32 L1568.63 682.32 L1568.07 682.32 L1567.51 682.32 L1566.95 682.32 L1566.39 682.32 L1565.83 682.32 L1565.28 682.32 L1564.72 682.32 L1564.16 682.32 L1563.6 682.32 L1563.04 682.32 L1562.48 682.32 L1561.92 682.32 L1561.36 682.32 L1560.8 682.32 L1560.24 682.32 L1559.68 682.32 L1559.12 682.32 L1558.56 682.32 L1558 682.32 L1557.45 682.32 L1556.89 682.32 L1556.33 682.32 L1555.77 682.32 L1555.21 682.32 L1554.65 682.32 L1554.09 682.32 L1553.53 682.32 L1552.97 682.32 L1552.41 682.32 L1551.85 682.32 L1551.29 682.32 L1550.73 682.32 L1550.18 682.32 L1549.62 682.32 L1549.06 682.32 L1548.5 682.32 L1547.94 682.32 L1547.38 682.32 L1546.82 682.32 L1546.26 682.32 L1545.7 682.32 L1545.14 682.32 L1544.58 682.32 L1544.02 682.32 L1543.46 682.32 L1542.9 682.32 L1542.35 682.32 L1541.79 682.32 L1541.23 682.32 L1540.67 682.32 L1540.11 682.32 L1539.55 682.32 L1538.99 682.32 L1538.43 682.32 L1537.87 682.32 L1537.31 682.32 L1536.75 682.32 L1536.19 682.32 L1535.63 682.32 L1535.08 682.32 L1534.52 682.32 L1533.96 682.32 L1533.4 682.32 L1532.84 682.32 L1532.28 682.32 L1531.72 682.32 L1531.16 682.32 L1530.6 682.32 L1530.04 682.32 L1529.48 682.32 L1528.92 682.32 L1528.36 682.32 L1527.81 682.32 L1527.25 682.32 L1526.69 682.32 L1526.13 682.32 L1525.57 682.32 L1525.01 682.32 L1524.45 682.32 L1523.89 682.32 L1523.33 682.32 L1522.77 682.32 L1522.21 682.32 L1521.65 682.32 L1521.09 682.32 L1520.53 682.32 L1519.98 682.32 L1519.42 682.32 L1518.86 682.32 L1518.3 682.32 L1517.74 682.32 L1517.18 682.32 L1516.62 682.32 L1516.06 682.32 L1515.5 682.32 L1514.94 682.32 L1514.38 682.32 L1513.82 682.32 L1513.26 682.32 L1512.71 682.32 L1512.15 682.32 L1511.59 682.32 L1511.03 682.32 L1510.47 682.32 L1509.91 682.32 L1509.35 682.32 L1508.79 682.32 L1508.23 682.32 L1507.67 682.32 L1507.11 682.32 L1506.55 682.32 L1505.99 682.32 L1505.44 682.32 L1504.88 682.32 L1504.32 682.32 L1503.76 682.32 L1503.2 682.32 L1502.64 682.32 L1502.08 682.32 L1501.52 682.32 L1500.96 682.32 L1500.4 682.32 L1499.84 682.32 L1499.28 682.32 L1498.72 682.32 L1498.16 682.32 L1497.61 682.32 L1497.05 682.32 L1496.49 682.32 L1495.93 682.32 L1495.37 682.32 L1494.81 682.32 L1494.25 682.32 L1493.69 682.32 L1493.13 682.32 L1492.57 682.32 L1492.01 682.32 L1491.45 682.32 L1490.89 682.32 L1490.34 682.32 L1489.78 682.32 L1489.22 682.32 L1488.66 682.32 L1488.1 682.32 L1487.54 682.32 L1486.98 682.32 L1486.42 682.32 L1485.86 682.32 L1485.3 682.32 L1484.74 682.32 L1484.18 682.32 L1483.62 682.32 L1483.07 682.32 L1482.51 682.32 L1481.95 682.32 L1481.39 682.32 L1480.83 682.32 L1480.27 682.32 L1479.71 682.32 L1479.15 682.32 L1478.59 682.32 L1478.03 682.32 L1477.47 682.32 L1476.91 682.32 L1476.35 682.32 L1475.79 682.32 L1475.24 682.32 L1474.68 682.32 L1474.12 682.32 L1473.56 682.32 L1473 682.32 L1472.44 682.32 L1471.88 682.32 L1471.32 682.32 L1470.76 682.32 L1470.2 682.32 L1469.64 682.32 L1469.08 682.32 L1468.52 682.32 L1467.97 682.32 L1467.41 682.32 L1466.85 682.32 L1466.29 682.32 L1465.73 682.32 L1465.17 682.32 L1464.61 682.32 L1464.05 682.32 L1463.49 682.32 L1462.93 682.32 L1462.37 682.32 L1461.81 682.32 L1461.25 682.32 L1460.7 682.32 L1460.14 682.32 L1459.58 682.32 L1459.02 682.32 L1458.46 682.32 L1457.9 682.32 L1457.34 682.32 L1456.78 682.32 L1456.22 682.32 L1455.66 682.32 L1455.1 682.32 L1454.54 682.32 L1453.98 682.32 L1453.42 682.32 L1452.87 682.32 L1452.31 682.32 L1451.75 682.32 L1451.19 682.32 L1450.63 682.32 L1450.07 682.32 L1449.51 682.32 L1448.95 682.32 L1448.39 682.32 L1447.83 682.32 L1447.27 682.32 L1446.71 682.32 L1446.15 682.32 L1445.6 682.32 L1445.04 682.32 L1444.48 682.32 L1443.92 682.32 L1443.36 682.32 L1442.8 682.32 L1442.24 682.32 L1441.68 682.32 L1441.12 682.32 L1440.56 682.32 L1440 682.32 L1439.44 682.32 L1438.88 682.32 L1438.33 682.32 L1437.77 682.32 L1437.21 682.32 L1436.65 682.32 L1436.09 682.32 L1435.53 682.32 L1434.97 682.32 L1434.41 682.32 L1433.85 682.32 L1433.29 682.32 L1432.73 682.32 L1432.17 682.32 L1431.61 682.32 L1431.05 682.32 L1430.5 682.32 L1429.94 682.32 L1429.38 682.32 L1428.82 682.32 L1428.26 682.32 L1427.7 682.32 L1427.14 682.32 L1426.58 682.32 L1426.02 682.32 L1425.46 682.32 L1424.9 682.32 L1424.34 682.32 L1423.78 682.32 L1423.23 682.32 L1422.67 682.32 L1422.11 682.32 L1421.55 682.32 L1420.99 682.32 L1420.43 682.32 L1419.87 682.32 L1419.31 682.32 L1418.75 682.32 L1418.19 682.32 L1417.63 682.32 L1417.07 682.32 L1416.51 682.32 L1415.95 682.32 L1415.4 682.32 L1414.84 682.32 L1414.28 682.32 L1413.72 682.32 L1413.16 682.32 L1412.6 682.32 L1412.04 682.32 L1411.48 682.32 L1410.92 682.32 L1410.36 682.32 L1409.8 682.32 L1409.24 682.32 L1408.68 682.32 L1408.13 682.32 L1407.57 682.32 L1407.01 682.32 L1406.45 682.32 L1405.89 682.32 L1405.33 682.32 L1404.77 682.32 L1404.21 682.32 L1403.65 682.32 L1403.09 682.32 L1402.53 682.32 L1401.97 682.32 L1401.41 682.32 L1400.86 682.32 L1400.3 682.32 L1399.74 682.32 L1399.18 682.32 L1398.62 682.32 L1398.06 682.32 L1397.5 682.32 L1396.94 682.32 L1396.38 682.32 L1395.82 682.32 L1395.26 682.32 L1394.7 682.32 L1394.14 682.32 L1393.58 682.32 L1393.03 682.32 L1392.47 682.32 L1391.91 682.32 L1391.35 682.32 L1390.79 682.32 L1390.23 682.32 L1389.67 682.32 L1389.11 682.32 L1388.55 682.32 L1387.99 682.32 L1387.43 682.32 L1386.87 682.32 L1386.31 682.32 L1385.76 682.32 L1385.2 682.32 L1384.64 682.32 L1384.08 682.32 L1383.52 682.32 L1382.96 682.32 L1382.4 682.32 L1381.84 682.32 L1381.28 682.32 L1380.72 682.32 L1380.16 682.32 L1379.6 682.32 L1379.04 682.32 L1378.49 682.32 L1377.93 682.32 L1377.37 682.32 L1376.81 682.32 L1376.25 682.32 L1375.69 682.32 L1375.13 682.32 L1374.57 682.32 L1374.01 682.32 L1373.45 682.32 L1372.89 682.32 L1372.33 682.32 L1371.77 682.32 L1371.21 682.32 L1370.66 682.32 L1370.1 682.32 L1369.54 682.32 L1368.98 682.32 L1368.42 682.32 L1367.86 682.32 L1367.3 682.32 L1366.74 682.32 L1366.18 682.32 L1365.62 682.32 L1365.06 682.32 L1364.5 682.32 L1363.94 682.32 L1363.39 682.32 L1362.83 682.32 L1362.27 682.32 L1361.71 682.32 L1361.15 682.32 L1360.59 682.32 L1360.03 682.32 L1359.47 682.32 L1358.91 682.32 L1358.35 682.32 L1357.79 682.32 L1357.23 682.32 L1356.67 682.32 L1356.12 682.32 L1355.56 682.32 L1355 682.32 L1354.44 682.32 L1353.88 682.32 L1353.32 682.32 L1352.76 682.32 L1352.2 682.32 L1351.64 682.32 L1351.08 682.32 L1350.52 682.32 L1349.96 682.32 L1349.4 682.32 L1348.84 682.32 L1348.29 682.32 L1347.73 682.32 L1347.17 682.32 L1346.61 682.32 L1346.05 682.32 L1345.49 682.32 L1344.93 682.32 L1344.37 682.32 L1343.81 682.32 L1343.25 682.32 L1342.69 682.32 L1342.13 682.32 L1341.57 682.32 L1341.02 682.32 L1340.46 682.32 L1339.9 682.32 L1339.34 682.32 L1338.78 682.32 L1338.22 682.32 L1337.66 682.32 L1337.1 682.32 L1336.54 682.32 L1335.98 682.32 L1335.42 682.32 L1334.86 682.32 L1334.3 682.32 L1333.75 682.32 L1333.19 682.32 L1332.63 682.32 L1332.07 682.32 L1331.51 682.32 L1330.95 682.32 L1330.39 682.32 L1329.83 682.32 L1329.27 682.32 L1328.71 682.32 L1328.15 682.32 L1327.59 682.32 L1327.03 682.32 L1326.47 682.32 L1325.92 682.32 L1325.36 682.32 L1324.8 682.32 L1324.24 682.32 L1323.68 682.32 L1323.12 682.32 L1322.56 682.32 L1322 682.32 L1321.44 682.32 L1320.88 682.32 L1320.32 682.32 L1319.76 682.32 L1319.2 682.32 L1318.65 682.32 L1318.09 682.32 L1317.53 682.32 L1316.97 682.32 L1316.41 682.32 L1315.85 682.32 L1315.29 682.32 L1314.73 682.32 L1314.17 682.32 L1313.61 682.32 L1313.05 682.32 L1312.49 682.32 L1311.93 682.32 L1311.38 682.32 L1310.82 682.32 L1310.26 682.32 L1309.7 682.32 L1309.14 682.32 L1308.58 682.32 L1308.02 682.32 L1307.46 682.32 L1306.9 682.32 L1306.34 682.32 L1305.78 682.32 L1305.22 682.32 L1304.66 682.32 L1304.1 682.32 L1303.55 682.32 L1302.99 682.32 L1302.43 682.32 L1301.87 682.32 L1301.31 682.32 L1300.75 682.32 L1300.19 682.32 L1299.63 682.32 L1299.07 682.32 L1298.51 682.32 L1297.95 682.32 L1297.39 682.32 L1296.83 682.32 L1296.28 682.32 L1295.72 682.32 L1295.16 682.32 L1294.6 682.32 L1294.04 682.32 L1293.48 682.32 L1292.92 682.32 L1292.36 682.32 L1291.8 682.32 L1291.24 682.32 L1290.68 682.32 L1290.12 682.32 L1289.56 682.32 L1289 682.32 L1288.45 682.32 L1287.89 682.32 L1287.33 682.32 L1286.77 682.32 L1286.21 682.32 L1285.65 682.32 L1285.09 682.32 L1284.53 682.32 L1283.97 682.32 L1283.41 682.32 L1282.85 682.32 L1282.29 682.32 L1281.73 682.32 L1281.18 682.32 L1280.62 682.32 L1280.06 682.32 L1279.5 682.32 L1278.94 682.32 L1278.38 682.32 L1277.82 682.32 L1277.26 682.32 L1276.7 682.32 L1276.14 682.32 L1275.58 682.32 L1275.02 682.32 L1274.46 682.32 L1273.91 682.32 L1273.35 682.32 L1272.79 682.32 L1272.23 682.32 L1271.67 682.32 L1271.11 682.32 L1270.55 682.32 L1269.99 682.32 L1269.43 682.32 L1268.87 682.32 L1268.31 682.32 L1267.75 682.32 L1267.19 682.32 L1266.63 682.32 L1266.08 682.32 L1265.52 682.32 L1264.96 682.32 L1264.4 682.32 L1263.84 682.32 L1263.28 682.32 L1262.72 682.32 L1262.16 682.32 L1261.6 682.32 L1261.04 682.32 L1260.48 682.32 L1259.92 682.32 L1259.36 682.32 L1258.81 682.32 L1258.25 682.32 L1257.69 682.32 L1257.13 682.32 L1256.57 682.32 L1256.01 682.32 L1255.45 682.32 L1254.89 682.32 L1254.33 682.32 L1253.77 682.32 L1253.21 682.32 L1252.65 682.32 L1252.09 682.32 L1251.54 682.32 L1250.98 682.32 L1250.42 682.32 L1249.86 682.32 L1249.3 682.32 L1248.74 682.32 L1248.18 682.32 L1247.62 682.32 L1247.06 682.32 L1246.5 682.32 L1245.94 682.32 L1245.38 682.32 L1244.82 682.32 L1244.26 682.32 L1243.71 682.32 L1243.15 682.32 L1242.59 682.32 L1242.03 682.32 L1241.47 682.32 L1240.91 682.32 L1240.35 682.32 L1239.79 682.32 L1239.23 682.32 L1238.67 682.32 L1238.11 682.32 L1237.55 682.32 L1236.99 682.32 L1236.44 682.32 L1235.88 682.32 L1235.32 682.32 L1234.76 682.32 L1234.2 682.32 L1233.64 682.32 L1233.08 682.32 L1232.52 682.32 L1231.96 682.32 L1231.4 682.32 L1230.84 682.32 L1230.28 682.32 L1229.72 682.32 L1229.17 682.32 L1228.61 682.32 L1228.05 682.32 L1227.49 682.32 L1226.93 682.32 L1226.37 682.32 L1225.81 682.32 L1225.25 682.32 L1224.69 682.32 L1224.13 682.32 L1223.57 682.32 L1223.01 682.32 L1222.45 682.32 L1221.89 682.32 L1221.34 682.32 L1220.78 682.32 L1220.22 682.32 L1219.66 682.32 L1219.1 682.32 L1218.54 682.32 L1217.98 682.32 L1217.42 682.32 L1216.86 682.32 L1216.3 682.32 L1215.74 682.32 L1215.18 682.32 L1214.62 682.32 L1214.07 682.32 L1213.51 682.32 L1212.95 682.32 L1212.39 682.32 L1211.83 682.32 L1211.27 682.32 L1210.71 682.32 L1210.15 682.32 L1209.59 682.32 L1209.03 682.32 L1208.47 682.32 L1207.91 682.32 L1207.35 682.32 L1206.8 682.32 L1206.24 682.32 L1205.68 682.32 L1205.12 682.32 L1204.56 682.32 L1204 682.32 L1203.44 682.32 L1202.88 682.32 L1202.32 682.32 L1201.76 682.32 L1201.2 682.32 L1200.64 682.32 L1200.08 682.32 L1199.52 682.32 L1198.97 682.32 L1198.41 682.32 L1197.85 682.32 L1197.29 682.32 L1196.73 682.32 L1196.17 682.32 L1195.61 682.32 L1195.05 682.32 L1194.49 682.32 L1193.93 682.32 L1193.37 682.32 L1192.81 682.32 L1192.25 682.32 L1191.7 682.32 L1191.14 682.32 L1190.58 682.32 L1190.02 682.32 L1189.46 682.32 L1188.9 682.32 L1188.34 682.32 L1187.78 682.32 L1187.22 682.32 L1186.66 682.32 L1186.1 682.32 L1185.54 682.32 L1184.98 682.32 L1184.43 682.32 L1183.87 682.32 L1183.31 682.32 L1182.75 682.32 L1182.19 682.32 L1181.63 682.32 L1181.07 682.32 L1180.51 682.32 L1179.95 682.32 L1179.39 682.32 L1178.83 682.32 L1178.27 682.32 L1177.71 682.32 L1177.15 682.32 L1176.6 682.32 L1176.04 682.32 L1175.48 682.32 L1174.92 682.32 L1174.36 682.32 L1173.8 682.32 L1173.24 682.32 L1172.68 682.32 L1172.12 682.32 L1171.56 682.32 L1171 682.32 L1170.44 682.32 L1169.88 682.32 L1169.33 682.32 L1168.77 682.32 L1168.21 682.32 L1167.65 682.32 L1167.09 682.32 L1166.53 682.32 L1165.97 682.32 L1165.41 682.32 L1164.85 682.32 L1164.29 682.32 L1163.73 682.32 L1163.17 682.32 L1162.61 682.32 L1162.05 682.32 L1161.5 682.32 L1160.94 682.32 L1160.38 682.32 L1159.82 682.32 L1159.26 682.32 L1158.7 682.32 L1158.14 682.32 L1157.58 682.32 L1157.02 682.32 L1156.46 682.32 L1155.9 682.32 L1155.34 682.32 L1154.78 682.32 L1154.23 682.32 L1153.67 682.32 L1153.11 682.32 L1152.55 682.32 L1151.99 682.32 L1151.43 682.32 L1150.87 682.32 L1150.31 682.32 L1149.75 682.32 L1149.19 682.32 L1148.63 682.32 L1148.07 682.32 L1147.51 682.32 L1146.96 682.32 L1146.4 682.32 L1145.84 682.32 L1145.28 682.32 L1144.72 682.32 L1144.16 682.32 L1143.6 682.32 L1143.04 682.32 L1142.48 682.32 L1141.92 682.32 L1141.36 682.32 L1140.8 682.32 L1140.24 682.32 L1139.68 682.32 L1139.13 682.32 L1138.57 682.32 L1138.01 682.32 L1137.45 682.32 L1136.89 682.32 L1136.33 682.32 L1135.77 682.32 L1135.21 682.32 L1134.65 682.32 L1134.09 682.32 L1133.53 682.32 L1132.97 682.32 L1132.41 682.32 L1131.86 682.32 L1131.3 682.32 L1130.74 682.32 L1130.18 682.32 L1129.62 682.32 L1129.06 682.32 L1128.5 682.32 L1127.94 682.32 L1127.38 682.32 L1126.82 682.32 L1126.26 682.32 L1125.7 682.32 L1125.14 682.32 L1124.59 682.32 L1124.03 682.32 L1123.47 682.32 L1122.91 682.32 L1122.35 682.32 L1121.79 682.32 L1121.23 682.32 L1120.67 682.32 L1120.11 682.32 L1119.55 682.32 L1118.99 682.32 L1118.43 682.32 L1117.87 682.32 L1117.31 682.32 L1116.76 682.32 L1116.2 682.32 L1115.64 682.32 L1115.08 682.32 L1114.52 682.32 L1113.96 682.32 L1113.4 682.32 L1112.84 682.32 L1112.28 682.32 L1111.72 682.32 L1111.16 682.32 L1110.6 682.32 L1110.04 682.32 L1109.49 682.32 L1108.93 682.32 L1108.37 682.32 L1107.81 682.32 L1107.25 682.32 L1106.69 682.32 L1106.13 682.32 L1105.57 682.32 L1105.01 682.32 L1104.45 682.32 L1103.89 682.32 L1103.33 682.32 L1102.77 682.32 L1102.22 682.32 L1101.66 682.32 L1101.1 682.32 L1100.54 682.32 L1099.98 682.32 L1099.42 682.32 L1098.86 682.32 L1098.3 682.32 L1097.74 682.32 L1097.18 682.32 L1096.62 682.32 L1096.06 682.32 L1095.5 682.32 L1094.94 682.32 L1094.39 682.32 L1093.83 682.32 L1093.27 682.32 L1092.71 682.32 L1092.15 682.32 L1091.59 682.32 L1091.03 682.32 L1090.47 682.32 L1089.91 682.32 L1089.35 682.32 L1088.79 682.32 L1088.23 682.32 L1087.67 682.32 L1087.12 682.32 L1086.56 682.32 L1086 682.32 L1085.44 682.32 L1084.88 682.32 L1084.32 682.32 L1083.76 682.32 L1083.2 682.32 L1082.64 682.32 L1082.08 682.32 L1081.52 682.32 L1080.96 682.32 L1080.4 682.32 L1079.85 682.32 L1079.29 682.32 L1078.73 682.32 L1078.17 682.32 L1077.61 682.32 L1077.05 682.32 L1076.49 682.32 L1075.93 682.32 L1075.37 682.32 L1074.81 682.32 L1074.25 682.32 L1073.69 682.32 L1073.13 682.32 L1072.57 682.32 L1072.02 682.32 L1071.46 682.32 L1070.9 682.32 L1070.34 682.32 L1069.78 682.32 L1069.22 682.32 L1068.66 682.32 L1068.1 682.32 L1067.54 682.32 L1066.98 682.32 L1066.42 682.32 L1065.86 682.32 L1065.3 682.32 L1064.75 682.32 L1064.19 682.32 L1063.63 682.32 L1063.07 682.32 L1062.51 682.32 L1061.95 682.32 L1061.39 682.32 L1060.83 682.32 L1060.27 682.32 L1059.71 682.32 L1059.15 682.32 L1058.59 682.32 L1058.03 682.32 L1057.48 682.32 L1056.92 682.32 L1056.36 682.32 L1055.8 682.32 L1055.24 682.32 L1054.68 682.32 L1054.12 682.32 L1053.56 682.32 L1053 682.32 L1052.44 682.32 L1051.88 682.32 L1051.32 682.32 L1050.76 682.32 L1050.2 682.32 L1049.65 682.32 L1049.09 682.32 L1048.53 682.32 L1047.97 682.32 L1047.41 682.32 L1046.85 682.32 L1046.29 682.32 L1045.73 682.32 L1045.17 682.32 L1044.61 682.32 L1044.05 682.32 L1043.49 682.32 L1042.93 682.32 L1042.38 682.32 L1041.82 682.32 L1041.26 682.32 L1040.7 682.32 L1040.14 682.32 L1039.58 682.32 L1039.02 682.32 L1038.46 682.32 L1037.9 682.32 L1037.34 682.32 L1036.78 682.32 L1036.22 682.32 L1035.66 682.32 L1035.1 682.32 L1034.55 682.32 L1033.99 682.32 L1033.43 682.32 L1032.87 682.32 L1032.31 682.32 L1031.75 682.32 L1031.19 682.32 L1030.63 682.32 L1030.07 682.32 L1029.51 682.32 L1028.95 682.32 L1028.39 682.32 L1027.83 682.32 L1027.28 682.32 L1026.72 682.32 L1026.16 682.32 L1025.6 682.32 L1025.04 682.32 L1024.48 682.32 L1023.92 682.32 L1023.36 682.32 L1022.8 682.32 L1022.24 682.32 L1021.68 682.32 L1021.12 682.32 L1020.56 682.32 L1020.01 682.32 L1019.45 682.32 L1018.89 682.32 L1018.33 682.32 L1017.77 682.32 L1017.21 682.32 L1016.65 682.32 L1016.09 682.32 L1015.53 682.32 L1014.97 682.32 L1014.41 682.32 L1013.85 682.32 L1013.29 682.32 L1012.73 682.32 L1012.18 682.32 L1011.62 682.32 L1011.06 682.32 L1010.5 682.32 L1009.94 682.32 L1009.38 682.32 L1008.82 682.32 L1008.26 682.32 L1007.7 682.32 L1007.14 682.32 L1006.58 682.32 L1006.02 682.32 L1005.46 682.32 L1004.91 682.32 L1004.35 682.32 L1003.79 682.32 L1003.23 682.32 L1002.67 682.32 L1002.11 682.32 L1001.55 682.32 L1000.99 682.32 L1000.43 682.32 L999.872 682.32 L999.313 682.32 L998.754 682.32 L998.194 682.32 L997.635 682.32 L997.076 682.32 L996.517 682.32 L995.957 682.32 L995.398 682.32 L994.839 682.32 L994.28 682.32 L993.72 682.32 L993.161 682.32 L992.602 682.32 L992.043 682.32 L991.483 682.32 L990.924 682.32 L990.365 682.32 L989.806 682.32 L989.246 682.32 L988.687 682.32 L988.128 682.32 L987.569 682.32 L987.009 682.32 L986.45 682.32 L985.891 682.32 L985.332 682.32 L984.772 682.32 L984.213 682.32 L983.654 682.32 L983.095 682.32 L982.535 682.32 L981.976 682.32 L981.417 682.32 L980.858 682.32 L980.298 682.32 L979.739 682.32 L979.18 682.32 L978.621 682.32 L978.061 682.32 L977.502 682.32 L976.943 682.32 L976.384 682.32 L975.824 682.32 L975.265 682.32 L974.706 682.32 L974.147 682.32 L973.587 682.32 L973.028 682.32 L972.469 682.32 L971.91 682.32 L971.35 682.32 L970.791 682.32 L970.232 682.32 L969.673 682.32 L969.113 682.32 L968.554 682.32 L967.995 682.32 L967.436 682.32 L966.876 682.32 L966.317 682.32 L965.758 682.32 L965.199 682.32 L964.639 682.32 L964.08 682.32 L963.521 682.32 L962.962 682.32 L962.402 682.32 L961.843 682.32 L961.284 682.32 L960.725 682.32 L960.165 682.32 L959.606 682.32 L959.047 682.32 L958.488 682.32 L957.928 682.32 L957.369 682.32 L956.81 682.32 L956.251 682.32 L955.691 682.32 L955.132 682.32 L954.573 682.32 L954.014 682.32 L953.454 682.32 L952.895 682.32 L952.336 682.32 L951.777 682.32 L951.217 682.32 L950.658 682.32 L950.099 682.32 L949.54 682.32 L948.98 682.32 L948.421 682.32 L947.862 682.32 L947.303 682.32 L946.743 682.32 L946.184 682.32 L945.625 682.32 L945.066 682.32 L944.506 682.32 L943.947 682.32 L943.388 682.32 L942.829 682.32 L942.269 682.32 L941.71 682.32 L941.151 682.32 L940.592 682.32 L940.032 682.32 L939.473 682.32 L938.914 682.32 L938.355 682.32 L937.795 682.32 L937.236 682.32 L936.677 682.32 L936.118 682.32 L935.558 682.32 L934.999 682.32 L934.44 682.32 L933.881 682.32 L933.321 682.32 L932.762 682.32 L932.203 682.32 L931.644 682.32 L931.084 682.32 L930.525 682.32 L929.966 682.32 L929.406 682.32 L928.847 682.32 L928.288 682.32 L927.729 682.32 L927.169 682.32 L926.61 682.32 L926.051 682.32 L925.492 682.32 L924.932 682.32 L924.373 682.32 L923.814 682.32 L923.255 682.32 L922.695 682.32 L922.136 682.32 L921.577 682.32 L921.018 682.32 L920.458 682.32 L919.899 682.32 L919.34 682.32 L918.781 682.32 L918.221 682.32 L917.662 682.32 L917.103 682.32 L916.544 682.32 L915.984 682.32 L915.425 682.32 L914.866 682.32 L914.307 682.32 L913.747 682.32 L913.188 682.32 L912.629 682.32 L912.07 682.32 L911.51 682.32 L910.951 682.32 L910.392 682.32 L909.833 682.32 L909.273 682.32 L908.714 682.32 L908.155 682.32 L907.596 682.32 L907.036 682.32 L906.477 682.32 L905.918 682.32 L905.359 682.32 L904.799 682.32 L904.24 682.32 L903.681 682.32 L903.122 682.32 L902.562 682.32 L902.003 682.32 L901.444 682.32 L900.885 682.32 L900.325 682.32 L899.766 682.32 L899.207 682.32 L898.648 682.32 L898.088 682.32 L897.529 682.32 L896.97 682.32 L896.411 682.32 L895.851 682.32 L895.292 682.32 L894.733 682.32 L894.174 682.32 L893.614 682.32 L893.055 682.32 L892.496 682.32 L891.937 682.32 L891.377 682.32 L890.818 682.32 L890.259 682.32 L889.7 682.32 L889.14 682.32 L888.581 682.32 L888.022 682.32 L887.463 682.32 L886.903 682.32 L886.344 682.32 L885.785 682.32 L885.226 682.32 L884.666 682.32 L884.107 682.32 L883.548 682.32 L882.989 682.32 L882.429 682.32 L881.87 682.32 L881.311 682.32 L880.752 682.32 L880.192 682.32 L879.633 682.32 L879.074 682.32 L878.515 682.32 L877.955 682.32 L877.396 682.32 L876.837 682.32 L876.278 682.32 L875.718 682.32 L875.159 682.32 L874.6 682.32 L874.041 682.32 L873.481 682.32 L872.922 682.32 L872.363 682.32 L871.804 682.32 L871.244 682.32 L870.685 682.32 L870.126 682.32 L869.567 682.32 L869.007 682.32 L868.448 682.32 L867.889 682.32 L867.33 682.32 L866.77 682.32 L866.211 682.32 L865.652 682.32 L865.093 682.32 L864.533 682.32 L863.974 682.32 L863.415 682.32 L862.856 682.32 L862.296 682.32 L861.737 682.32 L861.178 682.32 L860.619 682.32 L860.059 682.32 L859.5 682.32 L858.941 682.32 L858.382 682.32 L857.822 682.32 L857.263 682.32 L856.704 682.32 L856.145 682.32 L855.585 682.32 L855.026 682.32 L854.467 682.32 L853.908 682.32 L853.348 682.32 L852.789 682.32 L852.23 682.32 L851.671 682.32 L851.111 682.32 L850.552 682.32 L849.993 682.32 L849.434 682.32 L848.874 682.32 L848.315 682.32 L847.756 682.32 L847.197 682.32 L846.637 682.32 L846.078 682.32 L845.519 682.32 L844.96 682.32 L844.4 682.32 L843.841 682.32 L843.282 682.32 L842.723 682.32 L842.163 682.32 L841.604 682.32 L841.045 682.32 L840.486 682.32 L839.926 682.32 L839.367 682.32 L838.808 682.32 L838.249 682.32 L837.689 682.32 L837.13 682.32 L836.571 682.32 L836.012 682.32 L835.452 682.32 L834.893 682.32 L834.334 682.32 L833.775 682.32 L833.215 682.32 L832.656 682.32 L832.097 682.32 L831.538 682.32 L830.978 682.32 L830.419 682.32 L829.86 682.32 L829.301 682.32 L828.741 682.32 L828.182 682.32 L827.623 682.32 L827.064 682.32 L826.504 682.32 L825.945 682.32 L825.386 682.32 L824.827 682.32 L824.267 682.32 L823.708 682.32 L823.149 682.32 L822.59 682.32 L822.03 682.32 L821.471 682.32 L820.912 682.32 L820.353 682.32 L819.793 682.32 L819.234 682.32 L818.675 682.32 L818.116 682.32 L817.556 682.32 L816.997 682.32 L816.438 682.32 L815.879 682.32 L815.319 682.32 L814.76 682.32 L814.201 682.32 L813.642 682.32 L813.082 682.32 L812.523 682.32 L811.964 682.32 L811.405 682.32 L810.845 682.32 L810.286 682.32 L809.727 682.32 L809.168 682.32 L808.608 682.32 L808.049 682.32 L807.49 682.32 L806.931 682.32 L806.371 682.32 L805.812 682.32 L805.253 682.32 L804.693 682.32 L804.134 682.32 L803.575 682.32 L803.016 682.32 L802.456 682.32 L801.897 682.32 L801.338 682.32 L800.779 682.32 L800.219 682.32 L799.66 682.32 L799.101 682.32 L798.542 682.32 L797.982 682.32 L797.423 682.32 L796.864 682.32 L796.305 682.32 L795.745 682.32 L795.186 682.32 L794.627 682.32 L794.068 682.32 L793.508 682.32 L792.949 682.32 L792.39 682.32 L791.831 682.32 L791.271 682.32 L790.712 682.32 L790.153 682.32 L789.594 682.32 L789.034 682.32 L788.475 682.32 L787.916 682.32 L787.357 682.32 L786.797 682.32 L786.238 682.32 L785.679 682.32 L785.12 682.32 L784.56 682.32 L784.001 682.32 L783.442 682.32 L782.883 682.32 L782.323 682.32 L781.764 682.32 L781.205 682.32 L780.646 682.32 L780.086 682.32 L779.527 682.32 L778.968 682.32 L778.409 682.32 L777.849 682.32 L777.29 682.32 L776.731 682.32 L776.172 682.32 L775.612 682.32 L775.053 682.32 L774.494 682.32 L773.935 682.32 L773.375 682.32 L772.816 682.32 L772.257 682.32 L771.698 682.32 L771.138 682.32 L770.579 682.32 L770.02 682.32 L769.461 682.32 L768.901 682.32 L768.342 682.32 L767.783 682.32 L767.224 682.32 L766.664 682.32 L766.105 682.32 L765.546 682.32 L764.987 682.32 L764.427 682.32 L763.868 682.32 L763.309 682.32 L762.75 682.32 L762.19 682.32 L761.631 682.32 L761.072 682.32 L760.513 682.32 L759.953 682.32 L759.394 682.32 L758.835 682.32 L758.276 682.32 L757.716 682.32 L757.157 682.32 L756.598 682.32 L756.039 682.32 L755.479 682.32 L754.92 682.32 L754.361 682.32 L753.802 682.32 L753.242 682.32 L752.683 682.32 L752.124 682.32 L751.565 682.32 L751.005 682.32 L750.446 682.32 L749.887 682.32 L749.328 682.32 L748.768 682.32 L748.209 682.32 L747.65 682.32 L747.091 682.32 L746.531 682.32 L745.972 682.32 L745.413 682.32 L744.854 682.32 L744.294 682.32 L743.735 682.32 L743.176 682.32 L742.617 682.32 L742.057 682.32 L741.498 682.32 L740.939 682.32 L740.38 682.32 L739.82 682.32 L739.261 682.32 L738.702 682.32 L738.143 682.32 L737.583 682.32 L737.024 682.32 L736.465 682.32 L735.906 682.32 L735.346 682.32 L734.787 682.32 L734.228 682.32 L733.669 682.32 L733.109 682.32 L732.55 682.32 L731.991 682.32 L731.432 682.32 L730.872 682.32 L730.313 682.32 L729.754 682.32 L729.195 682.32 L728.635 682.32 L728.076 682.32 L727.517 682.32 L726.958 682.32 L726.398 682.32 L725.839 682.32 L725.28 682.32 L724.721 682.32 L724.161 682.32 L723.602 682.32 L723.043 682.32 L722.484 682.32 L721.924 682.32 L721.365 682.32 L720.806 682.32 L720.247 682.32  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip883)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.389 720.806,683.389 721.365,683.389 721.924,683.389 722.484,683.389 723.043,683.389 723.602,683.389 724.161,683.389 724.721,683.389 725.28,683.389 725.839,683.389 726.398,683.389 726.958,683.389 727.517,683.389 728.076,683.389 728.635,683.389 729.195,683.389 729.754,683.389 730.313,683.389 730.872,683.389 731.432,683.389 731.991,683.389 732.55,683.389 733.109,683.389 733.669,683.389 734.228,683.389 734.787,683.389 735.346,683.389 735.906,683.389 736.465,683.389 737.024,683.389 737.583,683.389 738.143,683.389 738.702,683.389 739.261,683.389 739.82,683.389 740.38,683.389 740.939,683.389 741.498,683.389 742.057,683.389 742.617,683.389 743.176,683.389 743.735,683.389 744.294,683.389 744.854,683.389 745.413,683.389 745.972,683.389 746.531,683.389 747.091,683.389 747.65,683.389 748.209,683.389 748.768,683.389 749.328,683.389 749.887,683.389 750.446,683.389 751.005,683.389 751.565,683.389 752.124,683.389 752.683,683.389 753.242,683.389 753.802,683.389 754.361,683.389 754.92,683.389 755.479,683.389 756.039,683.389 756.598,683.389 757.157,683.389 757.716,683.389 758.276,683.389 758.835,683.389 759.394,683.389 759.953,683.389 760.513,683.389 761.072,683.389 761.631,683.389 762.19,683.389 762.75,683.389 763.309,683.389 763.868,683.389 764.427,683.389 764.987,683.389 765.546,683.389 766.105,683.389 766.664,683.389 767.224,683.389 767.783,683.389 768.342,683.389 768.901,683.389 769.461,683.389 770.02,683.389 770.579,683.389 771.138,683.389 771.698,683.389 772.257,683.389 772.816,683.389 773.375,683.389 773.935,683.389 774.494,683.389 775.053,683.389 775.612,683.389 776.172,683.389 776.731,683.389 777.29,683.389 777.849,683.389 778.409,683.389 778.968,683.389 779.527,683.389 780.086,683.389 780.646,683.389 781.205,683.389 781.764,683.389 782.323,683.389 782.883,683.389 783.442,683.389 784.001,683.389 784.56,683.389 785.12,683.389 785.679,683.389 786.238,683.389 786.797,683.389 787.357,683.389 787.916,683.389 788.475,683.389 789.034,683.389 789.594,683.389 790.153,683.389 790.712,683.389 791.271,683.389 791.831,683.389 792.39,683.389 792.949,683.389 793.508,683.389 794.068,683.389 794.627,683.389 795.186,683.389 795.745,683.389 796.305,683.389 796.864,683.389 797.423,683.389 797.982,683.389 798.542,683.389 799.101,683.389 799.66,683.389 800.219,683.389 800.779,683.389 801.338,683.389 801.897,683.389 802.456,683.389 803.016,683.389 803.575,683.389 804.134,683.389 804.693,683.389 805.253,683.389 805.812,683.389 806.371,683.389 806.931,683.389 807.49,683.389 808.049,683.389 808.608,683.389 809.168,683.389 809.727,683.389 810.286,683.389 810.845,683.389 811.405,683.389 811.964,683.389 812.523,683.389 813.082,683.389 813.642,683.389 814.201,683.389 814.76,683.389 815.319,683.389 815.879,683.389 816.438,683.389 816.997,683.389 817.556,683.389 818.116,683.389 818.675,683.389 819.234,683.389 819.793,683.389 820.353,683.389 820.912,683.389 821.471,683.389 822.03,683.389 822.59,683.389 823.149,683.389 823.708,683.389 824.267,683.389 824.827,683.389 825.386,683.389 825.945,683.389 826.504,683.389 827.064,683.389 827.623,683.389 828.182,683.389 828.741,683.389 829.301,683.389 829.86,683.389 830.419,683.389 830.978,683.389 831.538,683.389 832.097,683.389 832.656,683.389 833.215,683.389 833.775,683.389 834.334,683.389 834.893,683.389 835.452,683.389 836.012,683.389 836.571,683.389 837.13,683.389 837.689,683.389 838.249,683.389 838.808,683.389 839.367,683.389 839.926,683.389 840.486,683.389 841.045,683.389 841.604,683.389 842.163,683.389 842.723,683.389 843.282,683.389 843.841,683.389 844.4,683.389 844.96,683.389 845.519,683.389 846.078,683.389 846.637,683.389 847.197,683.389 847.756,683.389 848.315,683.389 848.874,683.389 849.434,683.389 849.993,683.389 850.552,683.389 851.111,683.389 851.671,683.389 852.23,683.389 852.789,683.389 853.348,683.389 853.908,683.389 854.467,683.389 855.026,683.389 855.585,683.389 856.145,683.389 856.704,683.389 857.263,683.389 857.822,683.389 858.382,683.389 858.941,683.389 859.5,683.389 860.059,683.389 860.619,683.389 861.178,683.389 861.737,683.389 862.296,683.389 862.856,683.389 863.415,683.389 863.974,683.389 864.533,683.389 865.093,683.389 865.652,683.389 866.211,683.389 866.77,683.389 867.33,683.389 867.889,683.389 868.448,683.389 869.007,683.389 869.567,683.389 870.126,683.389 870.685,683.389 871.244,683.389 871.804,683.389 872.363,683.389 872.922,683.389 873.481,683.389 874.041,683.389 874.6,683.389 875.159,683.389 875.718,683.389 876.278,683.389 876.837,683.389 877.396,683.389 877.955,683.389 878.515,683.389 879.074,683.389 879.633,683.389 880.192,683.389 880.752,683.389 881.311,683.389 881.87,683.389 882.429,683.389 882.989,683.389 883.548,683.389 884.107,683.389 884.666,683.389 885.226,683.389 885.785,683.389 886.344,683.389 886.903,683.389 887.463,683.389 888.022,683.389 888.581,683.389 889.14,683.389 889.7,683.389 890.259,683.389 890.818,683.389 891.377,683.389 891.937,683.389 892.496,683.389 893.055,683.389 893.614,683.389 894.174,683.389 894.733,683.389 895.292,683.389 895.851,683.389 896.411,683.389 896.97,683.389 897.529,683.389 898.088,683.389 898.648,683.389 899.207,683.389 899.766,683.389 900.325,683.389 900.885,683.389 901.444,683.389 902.003,683.389 902.562,683.389 903.122,683.389 903.681,683.389 904.24,683.389 904.799,683.389 905.359,683.389 905.918,683.389 906.477,683.389 907.036,683.389 907.596,683.389 908.155,683.389 908.714,683.389 909.273,683.389 909.833,683.389 910.392,683.389 910.951,683.389 911.51,683.389 912.07,683.389 912.629,683.389 913.188,683.389 913.747,683.389 914.307,683.389 914.866,683.389 915.425,683.389 915.984,683.389 916.544,683.389 917.103,683.389 917.662,683.389 918.221,683.389 918.781,683.389 919.34,683.389 919.899,683.389 920.458,683.389 921.018,683.389 921.577,683.389 922.136,683.389 922.695,683.389 923.255,683.389 923.814,683.389 924.373,683.389 924.932,683.389 925.492,683.389 926.051,683.389 926.61,683.389 927.169,683.389 927.729,683.389 928.288,683.389 928.847,683.389 929.406,683.389 929.966,683.389 930.525,683.389 931.084,683.389 931.644,683.389 932.203,683.389 932.762,683.389 933.321,683.389 933.881,683.389 934.44,683.389 934.999,683.389 935.558,683.389 936.118,683.389 936.677,683.389 937.236,683.389 937.795,683.389 938.355,683.389 938.914,683.389 939.473,683.389 940.032,683.389 940.592,683.389 941.151,683.389 941.71,683.389 942.269,683.389 942.829,683.389 943.388,683.389 943.947,683.389 944.506,683.389 945.066,683.389 945.625,683.389 946.184,683.389 946.743,683.389 947.303,683.389 947.862,683.389 948.421,683.389 948.98,683.389 949.54,683.389 950.099,683.389 950.658,683.389 951.217,683.389 951.777,683.389 952.336,683.389 952.895,683.389 953.454,683.389 954.014,683.389 954.573,683.389 955.132,683.389 955.691,683.389 956.251,683.389 956.81,683.389 957.369,683.389 957.928,683.389 958.488,683.389 959.047,683.389 959.606,683.389 960.165,683.389 960.725,683.389 961.284,683.389 961.843,683.389 962.402,683.389 962.962,683.389 963.521,683.389 964.08,683.389 964.639,683.389 965.199,683.389 965.758,683.389 966.317,683.389 966.876,683.389 967.436,683.389 967.995,683.389 968.554,683.389 969.113,683.389 969.673,683.389 970.232,683.389 970.791,683.389 971.35,683.389 971.91,683.389 972.469,683.389 973.028,683.389 973.587,683.389 974.147,683.389 974.706,683.389 975.265,683.389 975.824,683.389 976.384,683.389 976.943,683.389 977.502,683.389 978.061,683.389 978.621,683.389 979.18,683.389 979.739,683.389 980.298,683.389 980.858,683.389 981.417,683.389 981.976,683.389 982.535,683.389 983.095,683.389 983.654,683.389 984.213,683.389 984.772,683.389 985.332,683.389 985.891,683.389 986.45,683.389 987.009,683.389 987.569,683.389 988.128,683.389 988.687,683.389 989.246,683.389 989.806,683.389 990.365,683.389 990.924,683.389 991.483,683.389 992.043,683.389 992.602,683.389 993.161,683.389 993.72,683.389 994.28,683.389 994.839,683.389 995.398,683.389 995.957,683.389 996.517,683.389 997.076,683.389 997.635,683.389 998.194,683.389 998.754,683.389 999.313,683.389 999.872,683.389 1000.43,683.389 1000.99,683.389 1001.55,683.389 1002.11,683.389 1002.67,683.389 1003.23,683.389 1003.79,683.389 1004.35,683.389 1004.91,683.389 1005.46,683.389 1006.02,683.389 1006.58,683.389 1007.14,683.389 1007.7,683.389 1008.26,683.389 1008.82,683.389 1009.38,683.389 1009.94,683.389 1010.5,683.389 1011.06,683.389 1011.62,683.389 1012.18,683.389 1012.73,683.389 1013.29,683.389 1013.85,683.389 1014.41,683.389 1014.97,683.389 1015.53,683.389 1016.09,683.389 1016.65,683.389 1017.21,683.389 1017.77,683.389 1018.33,683.389 1018.89,683.389 1019.45,683.389 1020.01,683.389 1020.56,683.389 1021.12,683.389 1021.68,683.389 1022.24,683.389 1022.8,683.389 1023.36,683.389 1023.92,683.389 1024.48,683.389 1025.04,683.389 1025.6,683.389 1026.16,683.389 1026.72,683.389 1027.28,683.389 1027.83,683.389 1028.39,683.389 1028.95,683.389 1029.51,683.389 1030.07,683.389 1030.63,683.389 1031.19,683.389 1031.75,683.389 1032.31,683.389 1032.87,683.389 1033.43,683.389 1033.99,683.389 1034.55,683.389 1035.1,683.389 1035.66,683.389 1036.22,683.389 1036.78,683.389 1037.34,683.389 1037.9,683.389 1038.46,683.389 1039.02,683.389 1039.58,683.389 1040.14,683.389 1040.7,683.389 1041.26,683.389 1041.82,683.389 1042.38,683.389 1042.93,683.389 1043.49,683.389 1044.05,683.389 1044.61,683.389 1045.17,683.389 1045.73,683.389 1046.29,683.389 1046.85,683.389 1047.41,683.389 1047.97,683.389 1048.53,683.389 1049.09,683.389 1049.65,683.389 1050.2,683.389 1050.76,683.389 1051.32,683.389 1051.88,683.389 1052.44,683.389 1053,683.389 1053.56,683.389 1054.12,683.389 1054.68,683.389 1055.24,683.389 1055.8,683.389 1056.36,683.389 1056.92,683.389 1057.48,683.389 1058.03,683.389 1058.59,683.389 1059.15,683.389 1059.71,683.389 1060.27,683.389 1060.83,683.389 1061.39,683.389 1061.95,683.389 1062.51,683.389 1063.07,683.389 1063.63,683.389 1064.19,683.389 1064.75,683.389 1065.3,683.389 1065.86,683.389 1066.42,683.389 1066.98,683.389 1067.54,683.389 1068.1,683.389 1068.66,683.389 1069.22,683.389 1069.78,683.389 1070.34,683.389 1070.9,683.389 1071.46,683.389 1072.02,683.389 1072.57,683.389 1073.13,683.389 1073.69,683.389 1074.25,683.389 1074.81,683.389 1075.37,683.389 1075.93,683.389 1076.49,683.389 1077.05,683.389 1077.61,683.389 1078.17,683.389 1078.73,683.389 1079.29,683.389 1079.85,683.389 1080.4,683.389 1080.96,683.389 1081.52,683.389 1082.08,683.389 1082.64,683.389 1083.2,683.389 1083.76,683.389 1084.32,683.389 1084.88,683.389 1085.44,683.389 1086,683.389 1086.56,683.389 1087.12,683.389 1087.67,683.389 1088.23,683.389 1088.79,683.389 1089.35,683.389 1089.91,683.389 1090.47,683.389 1091.03,683.389 1091.59,683.389 1092.15,683.389 1092.71,683.389 1093.27,683.389 1093.83,683.389 1094.39,683.389 1094.94,683.389 1095.5,683.389 1096.06,683.389 1096.62,683.389 1097.18,683.389 1097.74,683.389 1098.3,683.389 1098.86,683.389 1099.42,683.389 1099.98,683.389 1100.54,683.389 1101.1,683.389 1101.66,683.389 1102.22,683.389 1102.77,683.389 1103.33,683.389 1103.89,683.389 1104.45,683.389 1105.01,683.389 1105.57,683.389 1106.13,683.389 1106.69,683.389 1107.25,683.389 1107.81,683.389 1108.37,683.389 1108.93,683.389 1109.49,683.389 1110.04,683.389 1110.6,683.389 1111.16,683.389 1111.72,683.389 1112.28,683.389 1112.84,683.389 1113.4,683.389 1113.96,683.389 1114.52,683.389 1115.08,683.389 1115.64,683.389 1116.2,683.389 1116.76,683.389 1117.31,683.389 1117.87,683.389 1118.43,683.389 1118.99,683.389 1119.55,683.389 1120.11,683.389 1120.67,683.389 1121.23,683.389 1121.79,683.389 1122.35,683.389 1122.91,683.389 1123.47,683.389 1124.03,683.389 1124.59,683.389 1125.14,683.389 1125.7,683.389 1126.26,683.389 1126.82,683.389 1127.38,683.389 1127.94,683.389 1128.5,683.389 1129.06,683.389 1129.62,683.389 1130.18,683.389 1130.74,683.389 1131.3,683.389 1131.86,683.389 1132.41,683.389 1132.97,683.389 1133.53,683.389 1134.09,683.389 1134.65,683.389 1135.21,683.389 1135.77,683.389 1136.33,683.389 1136.89,683.389 1137.45,683.389 1138.01,683.389 1138.57,683.389 1139.13,683.389 1139.68,683.389 1140.24,683.389 1140.8,683.389 1141.36,683.389 1141.92,683.389 1142.48,683.389 1143.04,683.389 1143.6,683.389 1144.16,683.389 1144.72,683.389 1145.28,683.389 1145.84,683.389 1146.4,683.389 1146.96,683.389 1147.51,683.389 1148.07,683.389 1148.63,683.389 1149.19,683.389 1149.75,683.389 1150.31,683.389 1150.87,683.389 1151.43,683.389 1151.99,683.389 1152.55,683.389 1153.11,683.389 1153.67,683.389 1154.23,683.389 1154.78,683.389 1155.34,683.389 1155.9,683.389 1156.46,683.389 1157.02,683.389 1157.58,683.389 1158.14,683.389 1158.7,683.389 1159.26,683.389 1159.82,683.389 1160.38,683.389 1160.94,683.389 1161.5,683.389 1162.05,683.389 1162.61,683.389 1163.17,683.389 1163.73,683.389 1164.29,683.389 1164.85,683.389 1165.41,683.389 1165.97,683.389 1166.53,683.389 1167.09,683.389 1167.65,683.389 1168.21,683.389 1168.77,683.389 1169.33,683.389 1169.88,683.389 1170.44,683.389 1171,683.389 1171.56,683.389 1172.12,683.389 1172.68,683.389 1173.24,683.389 1173.8,683.389 1174.36,683.389 1174.92,683.389 1175.48,683.389 1176.04,683.389 1176.6,683.389 1177.15,683.389 1177.71,683.389 1178.27,683.389 1178.83,683.389 1179.39,683.389 1179.95,683.389 1180.51,683.389 1181.07,683.389 1181.63,683.389 1182.19,683.389 1182.75,683.389 1183.31,683.389 1183.87,683.389 1184.43,683.389 1184.98,683.389 1185.54,683.389 1186.1,683.389 1186.66,683.389 1187.22,683.389 1187.78,683.389 1188.34,683.389 1188.9,683.389 1189.46,683.389 1190.02,683.389 1190.58,683.389 1191.14,683.389 1191.7,683.389 1192.25,683.389 1192.81,683.389 1193.37,683.389 1193.93,683.389 1194.49,683.389 1195.05,683.389 1195.61,683.389 1196.17,683.389 1196.73,683.389 1197.29,683.389 1197.85,683.389 1198.41,683.389 1198.97,683.389 1199.52,683.389 1200.08,683.389 1200.64,683.389 1201.2,683.389 1201.76,683.389 1202.32,683.389 1202.88,683.389 1203.44,683.389 1204,683.389 1204.56,683.389 1205.12,683.389 1205.68,683.389 1206.24,683.389 1206.8,683.389 1207.35,683.389 1207.91,683.389 1208.47,683.389 1209.03,683.389 1209.59,683.389 1210.15,683.389 1210.71,683.389 1211.27,683.389 1211.83,683.389 1212.39,683.389 1212.95,683.389 1213.51,683.389 1214.07,683.389 1214.62,683.389 1215.18,683.389 1215.74,683.389 1216.3,683.389 1216.86,683.389 1217.42,683.389 1217.98,683.389 1218.54,683.389 1219.1,683.389 1219.66,683.389 1220.22,683.389 1220.78,683.389 1221.34,683.389 1221.89,683.389 1222.45,683.389 1223.01,683.389 1223.57,683.389 1224.13,683.389 1224.69,683.389 1225.25,683.389 1225.81,683.389 1226.37,683.389 1226.93,683.389 1227.49,683.389 1228.05,683.389 1228.61,683.389 1229.17,683.389 1229.72,683.389 1230.28,683.389 1230.84,683.389 1231.4,683.389 1231.96,683.389 1232.52,683.389 1233.08,683.389 1233.64,683.389 1234.2,683.389 1234.76,683.389 1235.32,683.389 1235.88,683.389 1236.44,683.389 1236.99,683.389 1237.55,683.389 1238.11,683.389 1238.67,683.389 1239.23,683.389 1239.79,683.389 1240.35,683.389 1240.91,683.389 1241.47,683.389 1242.03,683.389 1242.59,683.389 1243.15,683.389 1243.71,683.389 1244.26,683.389 1244.82,683.389 1245.38,683.389 1245.94,683.389 1246.5,683.389 1247.06,683.389 1247.62,683.389 1248.18,683.389 1248.74,683.389 1249.3,683.389 1249.86,683.389 1250.42,683.389 1250.98,683.389 1251.54,683.389 1252.09,683.389 1252.65,683.389 1253.21,683.389 1253.77,683.389 1254.33,683.389 1254.89,683.389 1255.45,683.389 1256.01,683.389 1256.57,683.389 1257.13,683.389 1257.69,683.389 1258.25,683.389 1258.81,683.389 1259.36,683.389 1259.92,683.389 1260.48,683.389 1261.04,683.389 1261.6,683.389 1262.16,683.389 1262.72,683.389 1263.28,683.389 1263.84,683.389 1264.4,683.389 1264.96,683.389 1265.52,683.389 1266.08,683.389 1266.63,683.389 1267.19,683.389 1267.75,683.389 1268.31,683.389 1268.87,683.389 1269.43,683.389 1269.99,683.389 1270.55,683.389 1271.11,683.389 1271.67,683.389 1272.23,683.389 1272.79,683.389 1273.35,683.389 1273.91,683.389 1274.46,683.389 1275.02,683.389 1275.58,683.389 1276.14,683.389 1276.7,683.389 1277.26,683.389 1277.82,683.389 1278.38,683.389 1278.94,683.389 1279.5,683.389 1280.06,683.389 1280.62,683.389 1281.18,683.389 1281.73,683.389 1282.29,683.389 1282.85,683.389 1283.41,683.389 1283.97,683.389 1284.53,683.389 1285.09,683.389 1285.65,683.389 1286.21,683.389 1286.77,683.389 1287.33,683.389 1287.89,683.389 1288.45,683.389 1289,683.389 1289.56,683.389 1290.12,683.389 1290.68,683.389 1291.24,683.389 1291.8,683.389 1292.36,683.389 1292.92,683.389 1293.48,683.389 1294.04,683.389 1294.6,683.389 1295.16,683.389 1295.72,683.389 1296.28,683.389 1296.83,683.389 1297.39,683.389 1297.95,683.389 1298.51,683.389 1299.07,683.389 1299.63,683.389 1300.19,683.389 1300.75,683.389 1301.31,683.389 1301.87,683.389 1302.43,683.389 1302.99,683.389 1303.55,683.389 1304.1,683.389 1304.66,683.389 1305.22,683.389 1305.78,683.389 1306.34,683.389 1306.9,683.389 1307.46,683.389 1308.02,683.389 1308.58,683.389 1309.14,683.389 1309.7,683.389 1310.26,683.389 1310.82,683.389 1311.38,683.389 1311.93,683.389 1312.49,683.389 1313.05,683.389 1313.61,683.389 1314.17,683.389 1314.73,683.389 1315.29,683.389 1315.85,683.389 1316.41,683.389 1316.97,683.389 1317.53,683.389 1318.09,683.389 1318.65,683.389 1319.2,683.389 1319.76,683.389 1320.32,683.389 1320.88,683.389 1321.44,683.389 1322,683.389 1322.56,683.389 1323.12,683.389 1323.68,683.389 1324.24,683.389 1324.8,683.389 1325.36,683.389 1325.92,683.389 1326.47,683.389 1327.03,683.389 1327.59,683.389 1328.15,683.389 1328.71,683.389 1329.27,683.389 1329.83,683.389 1330.39,683.389 1330.95,683.389 1331.51,683.389 1332.07,683.389 1332.63,683.389 1333.19,683.389 1333.75,683.389 1334.3,683.389 1334.86,683.389 1335.42,683.389 1335.98,683.389 1336.54,683.389 1337.1,683.389 1337.66,683.389 1338.22,683.389 1338.78,683.389 1339.34,683.389 1339.9,683.389 1340.46,683.389 1341.02,683.389 1341.57,683.389 1342.13,683.389 1342.69,683.389 1343.25,683.389 1343.81,683.389 1344.37,683.389 1344.93,683.389 1345.49,683.389 1346.05,683.389 1346.61,683.389 1347.17,683.389 1347.73,683.389 1348.29,683.389 1348.84,683.389 1349.4,683.389 1349.96,683.389 1350.52,683.389 1351.08,683.389 1351.64,683.389 1352.2,683.389 1352.76,683.389 1353.32,683.389 1353.88,683.389 1354.44,683.389 1355,683.389 1355.56,683.389 1356.12,683.389 1356.67,683.389 1357.23,683.389 1357.79,683.389 1358.35,683.389 1358.91,683.389 1359.47,683.389 1360.03,683.389 1360.59,683.389 1361.15,683.389 1361.71,683.389 1362.27,683.389 1362.83,683.389 1363.39,683.389 1363.94,683.389 1364.5,683.389 1365.06,683.389 1365.62,683.389 1366.18,683.389 1366.74,683.389 1367.3,683.389 1367.86,683.389 1368.42,683.389 1368.98,683.389 1369.54,683.389 1370.1,683.389 1370.66,683.389 1371.21,683.389 1371.77,683.389 1372.33,683.389 1372.89,683.389 1373.45,683.389 1374.01,683.389 1374.57,683.389 1375.13,683.389 1375.69,683.389 1376.25,683.389 1376.81,683.389 1377.37,683.389 1377.93,683.389 1378.49,683.389 1379.04,683.389 1379.6,683.389 1380.16,683.389 1380.72,683.389 1381.28,683.389 1381.84,683.389 1382.4,683.389 1382.96,683.389 1383.52,683.389 1384.08,683.389 1384.64,683.389 1385.2,683.389 1385.76,683.389 1386.31,683.389 1386.87,683.389 1387.43,683.389 1387.99,683.389 1388.55,683.389 1389.11,683.389 1389.67,683.389 1390.23,683.389 1390.79,683.389 1391.35,683.389 1391.91,683.389 1392.47,683.389 1393.03,683.389 1393.58,683.389 1394.14,683.389 1394.7,683.389 1395.26,683.389 1395.82,683.389 1396.38,683.389 1396.94,683.389 1397.5,683.389 1398.06,683.389 1398.62,683.389 1399.18,683.389 1399.74,683.389 1400.3,683.389 1400.86,683.389 1401.41,683.389 1401.97,683.389 1402.53,683.389 1403.09,683.389 1403.65,683.389 1404.21,683.389 1404.77,683.389 1405.33,683.389 1405.89,683.389 1406.45,683.389 1407.01,683.389 1407.57,683.389 1408.13,683.389 1408.68,683.389 1409.24,683.389 1409.8,683.389 1410.36,683.389 1410.92,683.389 1411.48,683.389 1412.04,683.389 1412.6,683.389 1413.16,683.389 1413.72,683.389 1414.28,683.389 1414.84,683.389 1415.4,683.389 1415.95,683.389 1416.51,683.389 1417.07,683.389 1417.63,683.389 1418.19,683.389 1418.75,683.389 1419.31,683.389 1419.87,683.389 1420.43,683.389 1420.99,683.389 1421.55,683.389 1422.11,683.389 1422.67,683.389 1423.23,683.389 1423.78,683.389 1424.34,683.389 1424.9,683.389 1425.46,683.389 1426.02,683.389 1426.58,683.389 1427.14,683.389 1427.7,683.389 1428.26,683.389 1428.82,683.389 1429.38,683.389 1429.94,683.389 1430.5,683.389 1431.05,683.389 1431.61,683.389 1432.17,683.389 1432.73,683.389 1433.29,683.389 1433.85,683.389 1434.41,683.389 1434.97,683.389 1435.53,683.389 1436.09,683.389 1436.65,683.389 1437.21,683.389 1437.77,683.389 1438.33,683.389 1438.88,683.389 1439.44,683.389 1440,683.389 1440.56,683.389 1441.12,683.389 1441.68,683.389 1442.24,683.389 1442.8,683.389 1443.36,683.389 1443.92,683.389 1444.48,683.389 1445.04,683.389 1445.6,683.389 1446.15,683.389 1446.71,683.389 1447.27,683.389 1447.83,683.389 1448.39,683.389 1448.95,683.389 1449.51,683.389 1450.07,683.389 1450.63,683.389 1451.19,683.389 1451.75,683.389 1452.31,683.389 1452.87,683.389 1453.42,683.389 1453.98,683.389 1454.54,683.389 1455.1,683.389 1455.66,683.389 1456.22,683.389 1456.78,683.389 1457.34,683.389 1457.9,683.389 1458.46,683.389 1459.02,683.389 1459.58,683.389 1460.14,683.389 1460.7,683.389 1461.25,683.389 1461.81,683.389 1462.37,683.389 1462.93,683.389 1463.49,683.389 1464.05,683.389 1464.61,683.389 1465.17,683.389 1465.73,683.389 1466.29,683.389 1466.85,683.389 1467.41,683.389 1467.97,683.389 1468.52,683.389 1469.08,683.389 1469.64,683.389 1470.2,683.389 1470.76,683.389 1471.32,683.389 1471.88,683.389 1472.44,683.389 1473,683.389 1473.56,683.389 1474.12,683.389 1474.68,683.389 1475.24,683.389 1475.79,683.389 1476.35,683.389 1476.91,683.389 1477.47,683.389 1478.03,683.389 1478.59,683.389 1479.15,683.389 1479.71,683.389 1480.27,683.389 1480.83,683.389 1481.39,683.389 1481.95,683.389 1482.51,683.389 1483.07,683.389 1483.62,683.389 1484.18,683.389 1484.74,683.389 1485.3,683.389 1485.86,683.389 1486.42,683.389 1486.98,683.389 1487.54,683.389 1488.1,683.389 1488.66,683.389 1489.22,683.389 1489.78,683.389 1490.34,683.389 1490.89,683.389 1491.45,683.389 1492.01,683.389 1492.57,683.389 1493.13,683.389 1493.69,683.389 1494.25,683.389 1494.81,683.389 1495.37,683.389 1495.93,683.389 1496.49,683.389 1497.05,683.389 1497.61,683.389 1498.16,683.389 1498.72,683.389 1499.28,683.389 1499.84,683.389 1500.4,683.389 1500.96,683.389 1501.52,683.389 1502.08,683.389 1502.64,683.389 1503.2,683.389 1503.76,683.389 1504.32,683.389 1504.88,683.389 1505.44,683.389 1505.99,683.389 1506.55,683.389 1507.11,683.389 1507.67,683.389 1508.23,683.389 1508.79,683.389 1509.35,683.389 1509.91,683.389 1510.47,683.389 1511.03,683.389 1511.59,683.389 1512.15,683.389 1512.71,683.389 1513.26,683.389 1513.82,683.389 1514.38,683.389 1514.94,683.389 1515.5,683.389 1516.06,683.389 1516.62,683.389 1517.18,683.389 1517.74,683.389 1518.3,683.389 1518.86,683.389 1519.42,683.389 1519.98,683.389 1520.53,683.389 1521.09,683.389 1521.65,683.389 1522.21,683.389 1522.77,683.389 1523.33,683.389 1523.89,683.389 1524.45,683.389 1525.01,683.389 1525.57,683.389 1526.13,683.389 1526.69,683.389 1527.25,683.389 1527.81,683.389 1528.36,683.389 1528.92,683.389 1529.48,683.389 1530.04,683.389 1530.6,683.389 1531.16,683.389 1531.72,683.389 1532.28,683.389 1532.84,683.389 1533.4,683.389 1533.96,683.389 1534.52,683.389 1535.08,683.389 1535.63,683.389 1536.19,683.389 1536.75,683.389 1537.31,683.389 1537.87,683.389 1538.43,683.389 1538.99,683.389 1539.55,683.389 1540.11,683.389 1540.67,683.389 1541.23,683.389 1541.79,683.389 1542.35,683.389 1542.9,683.389 1543.46,683.389 1544.02,683.389 1544.58,683.389 1545.14,683.389 1545.7,683.389 1546.26,683.389 1546.82,683.389 1547.38,683.389 1547.94,683.389 1548.5,683.389 1549.06,683.389 1549.62,683.389 1550.18,683.389 1550.73,683.389 1551.29,683.389 1551.85,683.389 1552.41,683.389 1552.97,683.389 1553.53,683.389 1554.09,683.389 1554.65,683.389 1555.21,683.389 1555.77,683.389 1556.33,683.389 1556.89,683.389 1557.45,683.389 1558,683.389 1558.56,683.389 1559.12,683.389 1559.68,683.389 1560.24,683.389 1560.8,683.389 1561.36,683.389 1561.92,683.389 1562.48,683.389 1563.04,683.389 1563.6,683.389 1564.16,683.389 1564.72,683.389 1565.28,683.389 1565.83,683.389 1566.39,683.389 1566.95,683.389 1567.51,683.389 1568.07,683.389 1568.63,683.389 1569.19,683.389 1569.75,683.389 1570.31,683.389 1570.87,683.389 1571.43,683.389 1571.99,683.389 1572.55,683.389 1573.1,683.389 1573.66,683.389 1574.22,683.389 1574.78,683.389 1575.34,683.389 1575.9,683.389 1576.46,683.389 1577.02,683.389 1577.58,683.389 1578.14,683.389 1578.7,683.389 1579.26,683.389 1579.82,683.389 1580.37,683.389 1580.93,683.389 1581.49,683.389 1582.05,683.389 1582.61,683.389 1583.17,683.389 1583.73,683.389 1584.29,683.389 1584.85,683.389 1585.41,683.389 1585.97,683.389 1586.53,683.389 1587.09,683.389 1587.65,683.389 1588.2,683.389 1588.76,683.389 1589.32,683.389 1589.88,683.389 1590.44,683.389 1591,683.389 1591.56,683.389 1592.12,683.389 1592.68,683.389 1593.24,683.389 1593.8,683.389 1594.36,683.389 1594.92,683.389 1595.47,683.389 1596.03,683.389 1596.59,683.389 1597.15,683.389 1597.71,683.389 1598.27,683.389 1598.83,683.389 1599.39,683.389 1599.95,683.389 1600.51,683.389 1601.07,683.389 1601.63,683.389 1602.19,683.389 1602.74,683.389 1603.3,683.389 1603.86,683.389 1604.42,683.389 1604.98,683.389 1605.54,683.389 1606.1,683.389 1606.66,683.389 1607.22,683.389 1607.78,683.389 1608.34,683.389 1608.9,683.389 1609.46,683.389 1610.02,683.389 1610.57,683.389 1611.13,683.389 1611.69,683.389 1612.25,683.389 1612.81,683.389 1613.37,683.389 1613.93,683.389 1614.49,683.389 1615.05,683.389 1615.61,683.389 1616.17,683.389 1616.73,683.389 1617.29,683.389 1617.84,683.389 1618.4,683.389 1618.96,683.389 1619.52,683.389 1620.08,683.389 1620.64,683.389 1621.2,683.389 1621.76,683.389 1622.32,683.389 1622.88,683.389 1623.44,683.389 1624,683.389 1624.56,683.389 1625.11,683.389 1625.67,683.389 1626.23,683.389 1626.79,683.389 1627.35,683.389 1627.91,683.389 1628.47,683.389 1629.03,683.389 1629.59,683.389 1630.15,683.389 1630.71,683.389 1631.27,683.389 1631.83,683.389 1632.39,683.389 1632.94,683.389 1633.5,683.389 1634.06,683.389 1634.62,683.389 1635.18,683.389 1635.74,683.389 1636.3,683.389 1636.86,683.389 1637.42,683.389 1637.98,683.389 1638.54,683.389 1639.1,683.389 1639.66,683.389 1640.21,683.389 1640.77,683.389 1641.33,683.389 1641.89,683.389 1642.45,683.389 1643.01,683.389 1643.57,683.389 1644.13,683.389 1644.69,683.389 1645.25,683.389 1645.81,683.389 1646.37,683.389 1646.93,683.389 1647.48,683.389 1648.04,683.389 1648.6,683.389 1649.16,683.389 1649.72,683.389 1650.28,683.389 1650.84,683.389 1651.4,683.389 1651.96,683.389 1652.52,683.389 1653.08,683.389 1653.64,683.389 1654.2,683.389 1654.76,683.389 1655.31,683.389 1655.87,683.389 1656.43,683.389 1656.99,683.389 1657.55,683.389 1658.11,683.389 1658.67,683.389 1659.23,683.389 1659.79,683.389 1660.35,683.389 1660.91,683.389 1661.47,683.389 1662.03,683.389 1662.58,683.389 1663.14,683.389 1663.7,683.389 1664.26,683.389 1664.82,683.389 1665.38,683.389 1665.94,683.389 1666.5,683.389 1667.06,683.389 1667.62,683.389 1668.18,683.389 1668.74,683.389 1669.3,683.389 1669.85,683.389 1670.41,683.389 1670.97,683.389 1671.53,683.389 1672.09,683.389 1672.65,683.389 1673.21,683.389 1673.77,683.389 1674.33,683.389 1674.89,683.389 1675.45,683.389 1676.01,683.389 1676.57,683.389 1677.13,683.389 1677.68,683.389 1678.24,683.389 1678.8,683.389 1679.36,683.389 1679.92,683.389 1680.48,683.389 1681.04,683.389 1681.6,683.389 1682.16,683.389 1682.72,683.389 1683.28,683.389 1683.84,683.389 1684.4,683.389 1684.95,683.389 1685.51,683.389 1686.07,683.389 1686.63,683.389 1687.19,683.389 1687.75,683.389 1688.31,683.389 1688.87,683.389 1689.43,683.389 1689.99,683.389 1690.55,683.389 1691.11,683.389 1691.67,683.389 1692.23,683.389 1692.78,683.389 1693.34,683.389 1693.9,683.389 1694.46,683.389 1695.02,683.389 1695.58,683.389 1696.14,683.389 1696.7,683.389 1697.26,683.389 1697.82,683.389 1698.38,683.389 1698.94,683.389 1699.5,683.389 1700.05,683.389 1700.61,683.389 1701.17,683.389 1701.73,683.389 1702.29,683.389 1702.85,683.389 1703.41,683.389 1703.97,683.389 1704.53,683.389 1705.09,683.389 1705.65,683.389 1706.21,683.389 1706.77,683.389 1707.32,683.389 1707.88,683.389 1708.44,683.389 1709,683.389 1709.56,683.389 1710.12,683.389 1710.68,683.389 1711.24,683.389 1711.8,683.389 1712.36,683.389 1712.92,683.389 1713.48,683.389 1714.04,683.389 1714.6,683.389 1715.15,683.389 1715.71,683.389 1716.27,683.389 1716.83,683.389 1717.39,683.389 1717.95,683.389 1718.51,683.389 1719.07,683.389 1719.63,683.389 1720.19,683.389 1720.75,683.389 1721.31,683.389 1721.87,683.389 1722.42,683.389 1722.98,683.389 1723.54,683.389 1724.1,683.389 1724.66,683.389 1725.22,683.389 1725.78,683.389 1726.34,683.389 1726.9,683.389 1727.46,683.389 1728.02,683.389 1728.58,683.389 1729.14,683.389 1729.69,683.389 1730.25,683.389 1730.81,683.389 1731.37,683.389 1731.93,683.389 1732.49,683.389 1733.05,683.389 1733.61,683.389 1734.17,683.389 1734.73,683.389 1735.29,683.389 1735.85,683.389 1736.41,683.389 1736.97,683.389 1737.52,683.389 1738.08,683.389 1738.64,683.389 1739.2,683.389 1739.76,683.389 1740.32,683.389 1740.88,683.389 1741.44,683.389 1742,683.389 1742.56,683.389 1743.12,683.389 1743.68,683.389 1744.24,683.389 1744.79,683.389 1745.35,683.389 1745.91,683.389 1746.47,683.389 1747.03,683.389 1747.59,683.389 1748.15,683.389 1748.71,683.389 1749.27,683.389 1749.83,683.389 1750.39,683.389 1750.95,683.389 1751.51,683.389 1752.06,683.389 1752.62,683.389 1753.18,683.389 1753.74,683.389 1754.3,683.389 1754.86,683.389 1755.42,683.389 1755.98,683.389 1756.54,683.389 1757.1,683.389 1757.66,683.389 1758.22,683.389 1758.78,683.389 1759.34,683.389 1759.89,683.389 1760.45,683.389 1761.01,683.389 1761.57,683.389 1762.13,683.389 1762.69,683.389 1763.25,683.389 1763.81,683.389 1764.37,683.389 1764.93,683.389 1765.49,683.389 1766.05,683.389 1766.61,683.389 1767.16,683.389 1767.72,683.389 1768.28,683.389 1768.84,683.389 1769.4,683.389 1769.96,683.389 1770.52,683.389 1771.08,683.389 1771.64,683.389 1772.2,683.389 1772.76,683.389 1773.32,683.389 1773.88,683.389 1774.43,683.389 1774.99,683.389 1775.55,683.389 1776.11,683.389 1776.67,683.389 1777.23,683.389 1777.79,683.389 1778.35,683.389 1778.91,683.389 1779.47,683.389 1780.03,683.389 1780.59,683.389 1781.15,683.389 1781.71,683.389 1782.26,683.389 1782.82,683.389 1783.38,683.389 1783.94,683.389 1784.5,683.389 1785.06,683.389 1785.62,683.389 1786.18,683.389 1786.74,683.389 1787.3,683.389 1787.86,683.389 1788.42,683.389 1788.98,683.389 1789.53,683.389 1790.09,683.389 1790.65,683.389 1791.21,683.389 1791.77,683.389 1792.33,683.389 1792.89,683.389 1793.45,683.389 1794.01,683.389 1794.57,683.389 1795.13,683.389 1795.69,683.389 1796.25,683.389 1796.8,683.389 1797.36,683.389 1797.92,683.389 1798.48,683.389 1799.04,683.389 1799.6,683.389 1800.16,683.389 1800.72,683.389 1801.28,683.389 1801.84,683.389 1802.4,683.389 1802.96,683.389 1803.52,683.389 1804.08,683.389 1804.63,683.389 1805.19,683.389 1805.75,683.389 1806.31,683.389 1806.87,683.389 1807.43,683.389 1807.99,683.389 1808.55,683.389 1809.11,683.389 1809.67,683.389 1810.23,683.389 1810.79,683.389 1811.35,683.389 1811.9,683.389 1812.46,683.389 1813.02,683.389 1813.58,683.389 1814.14,683.389 1814.7,683.389 1815.26,683.389 1815.82,683.389 1816.38,683.389 1816.94,683.389 1817.5,683.389 1818.06,683.389 1818.62,683.389 1819.18,683.389 1819.73,683.389 1820.29,683.389 1820.85,683.389 1821.41,683.389 1821.97,683.389 1822.53,683.389 1823.09,683.389 1823.65,683.389 1824.21,683.389 1824.77,683.389 1825.33,683.389 1825.89,683.389 1826.45,683.389 1827,683.389 1827.56,683.389 1828.12,683.389 1828.68,683.389 1829.24,683.389 1829.8,683.389 1830.36,683.389 1830.92,683.389 1831.48,683.389 1832.04,683.389 1832.6,683.389 1833.16,683.389 1833.72,683.389 1834.27,683.389 1834.83,683.389 1835.39,683.389 1835.95,683.389 1836.51,683.389 1837.07,683.389 1837.63,683.389 1838.19,683.389 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.0364356572882825 ± 0.020352913720370833\nProjected Energy: -4.014098929863048 ± (0.005201176010863229, 0.005379678107081176)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.470828</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.5189e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.2133e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.408e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.343e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">3.126e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.416e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0, boundary_condition=:periodic)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\nboundary_condition : applied boundray condition \n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{HARDWALL}, Tuple{PITWISTED}, Tuple{SingleComponentFockAddress, Any, Val{PITWISTED}, Val{HARDWALL}}} where {PITWISTED, HARDWALL}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen, Val(pitwisted), Val(hard-wall))\n\nCompute the new address of a hopping event for the Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes multiplied by a term consistent with boundary condition.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic, pi-twisted and hard-wall.\nShow pi-twisted when pitwested=true and hard-wall=false and vice-versa for hard-wall else periodic\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(true),Val(false))\n(BoseFS{2,4}(2, 0, 0), -1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(false),Val(true))\n(BoseFS{2,3}(2, 0, 0), 0.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
