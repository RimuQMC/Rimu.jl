var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip280\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip280)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip281\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip280)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip282\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip280)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.82 2211.02,1260.82 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.58 2211.02,1003.58 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,746.351 2211.02,746.351 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,489.118 2211.02,489.118 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,231.885 2211.02,231.885 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.82 423.181,1260.82 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.58 423.181,1003.58 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,746.351 423.181,746.351 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,489.118 423.181,489.118 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,231.885 423.181,231.885 \"/>\n<path clip-path=\"url(#clip280)\" d=\"M356.339 1246.62 Q352.728 1246.62 350.899 1250.18 Q349.094 1253.72 349.094 1260.85 Q349.094 1267.96 350.899 1271.52 Q352.728 1275.07 356.339 1275.07 Q359.973 1275.07 361.779 1271.52 Q363.608 1267.96 363.608 1260.85 Q363.608 1253.72 361.779 1250.18 Q359.973 1246.62 356.339 1246.62 M356.339 1242.91 Q362.149 1242.91 365.205 1247.52 Q368.284 1252.1 368.284 1260.85 Q368.284 1269.58 365.205 1274.19 Q362.149 1278.77 356.339 1278.77 Q350.529 1278.77 347.45 1274.19 Q344.395 1269.58 344.395 1260.85 Q344.395 1252.1 347.45 1247.52 Q350.529 1242.91 356.339 1242.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M290.043 1016.93 L306.363 1016.93 L306.363 1020.86 L284.418 1020.86 L284.418 1016.93 Q287.08 1014.17 291.664 1009.55 Q296.27 1004.89 297.451 1003.55 Q299.696 1001.03 300.576 999.291 Q301.478 997.531 301.478 995.842 Q301.478 993.087 299.534 991.351 Q297.613 989.615 294.511 989.615 Q292.312 989.615 289.858 990.379 Q287.427 991.143 284.65 992.693 L284.65 987.971 Q287.474 986.837 289.927 986.258 Q292.381 985.68 294.418 985.68 Q299.789 985.68 302.983 988.365 Q306.177 991.05 306.177 995.541 Q306.177 997.67 305.367 999.592 Q304.58 1001.49 302.474 1004.08 Q301.895 1004.75 298.793 1007.97 Q295.691 1011.17 290.043 1016.93 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M316.224 986.305 L334.58 986.305 L334.58 990.24 L320.506 990.24 L320.506 998.712 Q321.524 998.365 322.543 998.203 Q323.562 998.018 324.58 998.018 Q330.367 998.018 333.747 1001.19 Q337.126 1004.36 337.126 1009.78 Q337.126 1015.36 333.654 1018.46 Q330.182 1021.54 323.862 1021.54 Q321.687 1021.54 319.418 1021.17 Q317.173 1020.8 314.765 1020.05 L314.765 1015.36 Q316.849 1016.49 319.071 1017.05 Q321.293 1017.6 323.77 1017.6 Q327.774 1017.6 330.112 1015.49 Q332.45 1013.39 332.45 1009.78 Q332.45 1006.17 330.112 1004.06 Q327.774 1001.95 323.77 1001.95 Q321.895 1001.95 320.02 1002.37 Q318.168 1002.79 316.224 1003.67 L316.224 986.305 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M356.339 989.383 Q352.728 989.383 350.899 992.948 Q349.094 996.49 349.094 1003.62 Q349.094 1010.73 350.899 1014.29 Q352.728 1017.83 356.339 1017.83 Q359.973 1017.83 361.779 1014.29 Q363.608 1010.73 363.608 1003.62 Q363.608 996.49 361.779 992.948 Q359.973 989.383 356.339 989.383 M356.339 985.68 Q362.149 985.68 365.205 990.286 Q368.284 994.869 368.284 1003.62 Q368.284 1012.35 365.205 1016.95 Q362.149 1021.54 356.339 1021.54 Q350.529 1021.54 347.45 1016.95 Q344.395 1012.35 344.395 1003.62 Q344.395 994.869 347.45 990.286 Q350.529 985.68 356.339 985.68 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M286.062 729.071 L304.418 729.071 L304.418 733.007 L290.344 733.007 L290.344 741.479 Q291.363 741.131 292.381 740.969 Q293.4 740.784 294.418 740.784 Q300.205 740.784 303.585 743.956 Q306.964 747.127 306.964 752.543 Q306.964 758.122 303.492 761.224 Q300.02 764.303 293.701 764.303 Q291.525 764.303 289.256 763.932 Q287.011 763.562 284.603 762.821 L284.603 758.122 Q286.687 759.256 288.909 759.812 Q291.131 760.367 293.608 760.367 Q297.613 760.367 299.951 758.261 Q302.288 756.155 302.288 752.543 Q302.288 748.932 299.951 746.826 Q297.613 744.719 293.608 744.719 Q291.733 744.719 289.858 745.136 Q288.006 745.553 286.062 746.432 L286.062 729.071 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M326.177 732.15 Q322.566 732.15 320.737 735.715 Q318.932 739.256 318.932 746.386 Q318.932 753.493 320.737 757.057 Q322.566 760.599 326.177 760.599 Q329.811 760.599 331.617 757.057 Q333.446 753.493 333.446 746.386 Q333.446 739.256 331.617 735.715 Q329.811 732.15 326.177 732.15 M326.177 728.446 Q331.987 728.446 335.043 733.053 Q338.122 737.636 338.122 746.386 Q338.122 755.113 335.043 759.719 Q331.987 764.303 326.177 764.303 Q320.367 764.303 317.288 759.719 Q314.233 755.113 314.233 746.386 Q314.233 737.636 317.288 733.053 Q320.367 728.446 326.177 728.446 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M356.339 732.15 Q352.728 732.15 350.899 735.715 Q349.094 739.256 349.094 746.386 Q349.094 753.493 350.899 757.057 Q352.728 760.599 356.339 760.599 Q359.973 760.599 361.779 757.057 Q363.608 753.493 363.608 746.386 Q363.608 739.256 361.779 735.715 Q359.973 732.15 356.339 732.15 M356.339 728.446 Q362.149 728.446 365.205 733.053 Q368.284 737.636 368.284 746.386 Q368.284 755.113 365.205 759.719 Q362.149 764.303 356.339 764.303 Q350.529 764.303 347.45 759.719 Q344.395 755.113 344.395 746.386 Q344.395 737.636 347.45 733.053 Q350.529 728.446 356.339 728.446 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M284.835 471.838 L307.057 471.838 L307.057 473.829 L294.511 506.398 L289.627 506.398 L301.432 475.773 L284.835 475.773 L284.835 471.838 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M316.224 471.838 L334.58 471.838 L334.58 475.773 L320.506 475.773 L320.506 484.245 Q321.524 483.898 322.543 483.736 Q323.562 483.551 324.58 483.551 Q330.367 483.551 333.747 486.722 Q337.126 489.894 337.126 495.31 Q337.126 500.889 333.654 503.991 Q330.182 507.069 323.862 507.069 Q321.687 507.069 319.418 506.699 Q317.173 506.329 314.765 505.588 L314.765 500.889 Q316.849 502.023 319.071 502.579 Q321.293 503.134 323.77 503.134 Q327.774 503.134 330.112 501.028 Q332.45 498.921 332.45 495.31 Q332.45 491.699 330.112 489.593 Q327.774 487.486 323.77 487.486 Q321.895 487.486 320.02 487.903 Q318.168 488.319 316.224 489.199 L316.224 471.838 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M356.339 474.917 Q352.728 474.917 350.899 478.482 Q349.094 482.023 349.094 489.153 Q349.094 496.259 350.899 499.824 Q352.728 503.366 356.339 503.366 Q359.973 503.366 361.779 499.824 Q363.608 496.259 363.608 489.153 Q363.608 482.023 361.779 478.482 Q359.973 474.917 356.339 474.917 M356.339 471.213 Q362.149 471.213 365.205 475.82 Q368.284 480.403 368.284 489.153 Q368.284 497.88 365.205 502.486 Q362.149 507.069 356.339 507.069 Q350.529 507.069 347.45 502.486 Q344.395 497.88 344.395 489.153 Q344.395 480.403 347.45 475.82 Q350.529 471.213 356.339 471.213 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M256.664 245.23 L264.303 245.23 L264.303 218.864 L255.992 220.531 L255.992 216.271 L264.256 214.605 L268.932 214.605 L268.932 245.23 L276.571 245.23 L276.571 249.165 L256.664 249.165 L256.664 245.23 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M296.015 217.684 Q292.404 217.684 290.576 221.248 Q288.77 224.79 288.77 231.92 Q288.77 239.026 290.576 242.591 Q292.404 246.132 296.015 246.132 Q299.65 246.132 301.455 242.591 Q303.284 239.026 303.284 231.92 Q303.284 224.79 301.455 221.248 Q299.65 217.684 296.015 217.684 M296.015 213.98 Q301.826 213.98 304.881 218.586 Q307.96 223.17 307.96 231.92 Q307.96 240.646 304.881 245.253 Q301.826 249.836 296.015 249.836 Q290.205 249.836 287.127 245.253 Q284.071 240.646 284.071 231.92 Q284.071 223.17 287.127 218.586 Q290.205 213.98 296.015 213.98 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M326.177 217.684 Q322.566 217.684 320.737 221.248 Q318.932 224.79 318.932 231.92 Q318.932 239.026 320.737 242.591 Q322.566 246.132 326.177 246.132 Q329.811 246.132 331.617 242.591 Q333.446 239.026 333.446 231.92 Q333.446 224.79 331.617 221.248 Q329.811 217.684 326.177 217.684 M326.177 213.98 Q331.987 213.98 335.043 218.586 Q338.122 223.17 338.122 231.92 Q338.122 240.646 335.043 245.253 Q331.987 249.836 326.177 249.836 Q320.367 249.836 317.288 245.253 Q314.233 240.646 314.233 231.92 Q314.233 223.17 317.288 218.586 Q320.367 213.98 326.177 213.98 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M356.339 217.684 Q352.728 217.684 350.899 221.248 Q349.094 224.79 349.094 231.92 Q349.094 239.026 350.899 242.591 Q352.728 246.132 356.339 246.132 Q359.973 246.132 361.779 242.591 Q363.608 239.026 363.608 231.92 Q363.608 224.79 361.779 221.248 Q359.973 217.684 356.339 217.684 M356.339 213.98 Q362.149 213.98 365.205 218.586 Q368.284 223.17 368.284 231.92 Q368.284 240.646 365.205 245.253 Q362.149 249.836 356.339 249.836 Q350.529 249.836 347.45 245.253 Q344.395 240.646 344.395 231.92 Q344.395 223.17 347.45 218.586 Q350.529 213.98 356.339 213.98 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip282)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,231.885 4017.76,231.885 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1249.06 459.396,1248.59 459.964,1247.02 460.533,1246.43 461.101,1245.77 461.669,1245.03 462.238,1244.22 462.806,1243.31 463.375,1242.32 463.943,1241.23 464.511,1240.05 465.08,1238.76 465.648,1236.34 466.216,1234.82 466.785,1233.18 467.353,1231.42 467.921,1229.52 468.49,1227.46 469.058,1224.24 469.626,1221.87 470.195,1219.35 470.763,1215.62 471.331,1212.73 471.9,1209.65 472.468,1206.37 473.036,1202.91 473.605,1199.27 474.173,1195.39 474.741,1190.29 475.31,1185 475.878,1179.49 476.446,1173.74 477.015,1167.71 477.583,1160.35 478.152,1154.66 478.72,1148.77 479.288,1142.6 479.857,1134.2 480.425,1127.51 480.993,1120.68 481.562,1112.58 482.13,1104.27 482.698,1096.87 483.267,1086.15 483.835,1078.41 484.403,1068.37 484.972,1059.25 485.54,1050.87 486.108,1042.36 486.677,1031.48 487.245,1022.62 487.813,1013.63 488.382,1001.46 488.95,991.27 489.518,981.109 490.087,969.503 490.655,954.818 491.224,943.239 491.792,932.726 492.36,923.237 492.929,913.671 493.497,904.038 494.065,893.209 494.634,882.428 495.202,871.577 495.77,858.764 496.339,849.168 496.907,839.555 497.475,829.926 498.044,818.216 498.612,806.504 499.18,797.023 499.749,783.487 500.317,774.295 500.885,762.984 501.454,752.744 502.022,741.553 502.59,732.587 503.159,722.707 503.727,711.869 504.295,701.201 504.864,691.6 505.432,681.187 506.001,669.767 506.569,660.675 507.137,651.691 507.706,641.788 508.274,632.007 508.842,624.493 509.411,616.002 509.979,606.589 510.547,597.398 511.116,590.491 511.684,582.673 512.252,574.894 512.821,563.994 513.389,556.568 513.957,549.228 514.526,539.924 515.094,530.782 515.662,524.034 516.231,518.339 516.799,511.755 517.367,503.293 517.936,494.096 518.504,490.014 519.072,483.887 519.641,477.856 520.209,473.888 520.778,465.942 521.346,461.353 521.914,452.628 522.483,446.414 523.051,439.169 523.619,435.254 524.188,429.591 524.756,422.941 525.324,420.517 525.893,416.17 526.461,411.731 527.029,409.479 527.598,406.296 528.166,403.98 528.734,399.509 529.303,395.272 529.871,392.228 530.439,389.082 531.008,386.051 531.576,382.868 532.144,379.676 532.713,376.903 533.281,373.027 533.85,370.281 534.418,364.406 534.986,360.942 535.555,358.678 536.123,356.303 536.691,352.011 537.26,347.898 537.828,345.829 538.396,344.726 538.965,342.792 539.533,338.622 540.101,336.747 540.67,333.816 541.238,327.945 541.806,326.547 542.375,325.105 542.943,323.734 543.511,321.904 544.08,318.257 544.648,315.815 545.216,312.719 545.785,310.529 546.353,308.496 546.921,306.202 547.49,306.145 548.058,305.149 548.627,302.206 549.195,301.345 549.763,300.385 550.332,299.459 550.9,296.368 551.468,293.503 552.037,290.952 552.605,290.667 553.173,291.268 553.742,290.569 554.31,288.987 554.878,288.4 555.447,285.653 556.015,284.272 556.583,283.873 557.152,282.626 557.72,283.202 558.288,280.592 558.857,279.253 559.425,281.229 559.993,278.715 560.562,279.392 561.13,278.814 561.698,277.192 562.267,276.756 562.835,274.007 563.404,272.756 563.972,270.694 564.54,268.509 565.109,266.212 565.677,268.198 566.245,267.19 566.814,266.196 567.382,266.21 567.95,265.066 568.519,264.998 569.087,264.142 569.655,263.072 570.224,264.072 570.792,265.069 571.36,264.876 571.929,265.742 572.497,263.239 573.065,262.152 573.634,261.006 574.202,261.9 574.77,262.982 575.339,260.783 575.907,259.671 576.476,257.668 577.044,256.589 577.612,256.901 578.181,257.937 578.749,257.061 579.317,257.19 579.886,255.14 580.454,256.381 581.022,256.4 581.591,253.408 582.159,257.011 582.727,257.736 583.296,257.507 583.864,257.534 584.432,254.162 585.001,253.169 585.569,252.128 586.137,250.137 586.706,249.566 587.274,250.979 587.842,251.226 588.411,250.412 588.979,249.476 589.547,248.73 590.116,249.048 590.684,247.328 591.253,250.702 591.821,250.03 592.389,250.382 592.958,250.607 593.526,251.877 594.094,251.818 594.663,251.649 595.231,250.601 595.799,249.542 596.368,250.833 596.936,250.771 597.504,252.713 598.073,252.263 598.641,252.062 599.209,250.98 599.778,251.767 600.346,250.667 600.914,252.787 601.483,252.555 602.051,253.386 602.619,252.142 603.188,251.719 603.756,251.453 604.325,249.989 604.893,248.896 605.461,249.515 606.03,244.263 606.598,245.445 607.166,245.37 607.735,244.207 608.303,243.161 608.871,240.156 609.44,239.335 610.008,240.88 610.576,242.012 611.145,242.267 611.713,241.533 612.281,242.822 612.85,242.106 613.418,241.282 613.986,239.257 614.555,238.54 615.123,238.106 615.691,239.567 616.26,237.963 616.828,241.455 617.396,241.548 617.965,239.767 618.533,238.03 619.102,236.497 619.67,232.726 620.238,237.736 620.807,239.463 621.375,241.905 621.943,241.013 622.512,237.097 623.08,238.583 623.648,236.89 624.217,237.286 624.785,235.663 625.353,239.288 625.922,238.516 626.49,239.09 627.058,238.388 627.627,239.74 628.195,241.147 628.763,240.378 629.332,241.625 629.9,241.812 630.468,241.874 631.037,240.813 631.605,241.85 632.173,241.783 632.742,237.908 633.31,237.101 633.879,236.456 634.447,236.839 635.015,237.23 635.584,238.672 636.152,239.068 636.72,238.393 637.289,236.727 637.857,235.073 638.425,233.54 638.994,234.144 639.562,234.67 640.13,234.216 640.699,234.948 641.267,235.487 641.835,235.995 642.404,235.411 642.972,237.123 643.54,238.417 644.109,237.593 644.677,236.876 645.245,235.164 645.814,238.054 646.382,236.383 646.951,236.992 647.519,236.267 648.087,237.684 648.656,237.048 649.224,238.381 649.792,236.658 650.361,237.203 650.929,238.671 651.497,237.793 652.066,238.08 652.634,237.403 653.202,239.91 653.771,240.111 654.339,239.428 654.907,240.528 655.476,240.666 656.044,240.597 656.612,239.68 657.181,240.837 657.749,239.86 658.317,239.771 658.886,238.755 659.454,239.963 660.022,238.897 660.591,239.813 661.159,241.728 661.728,242.608 662.296,242.342 662.864,240.233 663.433,241.271 664.001,242.114 664.569,241.614 665.138,240.69 665.706,239.718 666.274,240.712 666.843,239.813 667.411,240.863 667.979,238.606 668.548,241.002 669.116,240.992 669.684,240.873 670.253,240.821 670.821,239.868 671.389,240.921 671.958,240.686 672.526,241.441 673.094,241.413 673.663,240.121 674.231,241.037 674.799,239.903 675.368,240.896 675.936,241.691 676.505,240.282 677.073,241.23 677.641,241.612 678.21,241.256 678.778,240.978 679.346,239.808 679.915,238.751 680.483,238.911 681.051,237.574 681.62,236.613 682.188,236.634 682.756,236.755 683.325,238.758 683.893,237.505 684.461,237.409 685.03,234.148 685.598,233.427 686.166,236.775 686.735,233.875 687.303,233.047 687.871,231.298 688.44,231.93 689.008,231.207 689.577,231.582 690.145,231.984 690.713,231.376 691.282,230.681 691.85,229.992 692.418,231.262 692.987,231.632 693.555,230.859 694.123,230.198 694.692,230.809 695.26,232.327 695.828,234.782 696.397,234.992 696.965,236.159 697.533,236.368 698.102,236.364 698.67,236.2 699.238,237.561 699.807,236.524 700.375,236.57 700.943,234.348 701.512,235.56 702.08,237.763 702.648,235.601 703.217,235.64 703.785,234.699 704.354,233.884 704.922,233.006 705.49,233.088 706.059,236.312 706.627,237.295 707.195,238.233 707.764,239.174 708.332,240.052 708.9,237.697 709.469,237.708 710.037,236.372 710.605,236.454 711.174,235.357 711.742,233.348 712.31,231.503 712.879,230.808 713.447,232.196 714.015,231.484 714.584,231.852 715.152,233.909 715.72,236.299 716.289,235.424 716.857,236.676 717.425,235.48 717.994,236.823 718.562,236.687 719.131,236.513 719.699,237.434 720.267,237.282 720.836,237.064 721.404,235.927 721.972,235.836 722.541,235.687 723.109,235.555 723.677,234.566 724.246,235.449 724.814,236.389 725.382,237.324 725.951,236.261 726.519,235.075 727.087,235.035 727.656,234.821 728.224,234.131 728.792,234.122 729.361,236.245 729.929,236.169 730.497,232.981 731.066,233.992 731.634,234.949 732.203,234.818 732.771,234.115 733.339,232.917 733.908,233.015 734.476,235.231 735.044,234.412 735.613,235.261 736.181,236.086 736.749,235.939 737.318,238.575 737.886,237.125 738.454,235.959 739.023,235.827 739.591,235.653 740.159,233.391 740.728,232.341 741.296,231.327 741.864,233.634 742.433,232.617 743.001,229.596 743.569,231.179 744.138,231.613 744.706,233.821 745.274,234.931 745.843,234.024 746.411,236.063 746.98,235.889 747.548,235.633 748.116,235.691 748.685,237.58 749.253,236.328 749.821,235.173 750.39,237.032 750.958,239.987 751.526,237.387 752.095,235.078 752.663,233.979 753.231,235.064 753.8,235.088 754.368,234.883 754.936,234.818 755.505,234.654 756.073,233.419 756.641,231.387 757.21,230.524 757.778,230.72 758.346,231.755 758.915,235.096 759.483,234.907 760.052,235.879 760.62,236.624 761.188,237.333 761.757,235.991 762.325,234.771 762.893,232.29 763.462,232.467 764.03,231.25 764.598,233.336 765.167,234.314 765.735,232.346 766.303,232.566 766.872,232.528 767.44,232.812 768.008,233.091 768.577,232.003 769.145,231.959 769.713,230.085 770.282,229.146 770.85,229.569 771.418,229.814 771.987,229.115 772.555,230.655 773.123,230.751 773.692,230.854 774.26,228.911 774.829,227.196 775.397,226.464 775.965,226.836 776.534,228.471 777.102,227.711 777.67,229.085 778.239,230.467 778.807,229.833 779.375,229.151 779.944,227.504 780.512,228.107 781.08,227.623 781.649,227.002 782.217,224.33 782.785,226.128 783.354,227.97 783.922,230.522 784.49,232.059 785.059,234.467 785.627,232.522 786.195,232.895 786.764,235.127 787.332,235.272 787.9,235.243 788.469,236.255 789.037,238.341 789.606,242.143 790.174,240.522 790.742,242.015 791.311,238.676 791.879,238.43 792.447,239.039 793.016,238.722 793.584,239.391 794.152,236.778 794.721,236.733 795.289,241.511 795.857,242.142 796.426,241.579 796.994,241.16 797.562,241.777 798.131,237.918 798.699,239.58 799.267,240.133 799.836,239.699 800.404,238.959 800.972,237.183 801.541,237.819 802.109,236.3 802.678,236.016 803.246,234.888 803.814,232.595 804.383,230.52 804.951,230.654 805.519,229.731 806.088,230.853 806.656,230.956 807.224,231.092 807.793,231.122 808.361,228.101 808.929,227.389 809.498,228.632 810.066,228.821 810.634,227.863 811.203,227.251 811.771,227.731 812.339,226.944 812.908,228.401 813.476,228.742 814.044,229.164 814.613,229.399 815.181,230.537 815.749,230.852 816.318,232.196 816.886,232.438 817.455,232.696 818.023,232.623 818.591,232.671 819.16,230.745 819.728,230.858 820.296,231.184 820.865,231.486 821.433,231.885 822.001,227.099 822.57,226.423 823.138,227.023 823.706,227.637 824.275,227.024 824.843,230.691 825.411,230.844 825.98,232.965 826.548,232.948 827.116,232.945 827.685,232.235 828.253,234.445 828.821,231.197 829.39,231.434 829.958,231.573 830.526,230.684 831.095,230.862 831.663,232.169 832.232,233.21 832.8,233.355 833.368,234.412 833.937,233.196 834.505,233.236 835.073,233.326 835.642,234.536 836.21,234.388 836.778,234.142 837.347,235.143 837.915,233.952 838.483,233.039 839.052,230.802 839.62,231.001 840.188,233.365 840.757,234.314 841.325,233.455 841.893,231.397 842.462,232.711 843.03,230.542 843.598,229.732 844.167,229.644 844.735,232.089 845.304,231.204 845.872,231.558 846.44,231.905 847.009,234.984 847.577,235.679 848.145,238.819 848.714,237.215 849.282,238.049 849.85,236.784 850.419,239.695 850.987,239.092 851.555,237.507 852.124,237.209 852.692,236.945 853.26,235.791 853.829,237.535 854.397,236.391 854.965,236.215 855.534,235.753 856.102,235.353 856.67,236.475 857.239,237.167 857.807,234.666 858.375,234.352 858.944,235.099 859.512,235.067 860.081,233.942 860.649,230.829 861.217,230.989 861.786,233.193 862.354,234.234 862.922,234.081 863.491,236.167 864.059,235.731 864.627,236.506 865.196,234.447 865.764,234.16 866.332,234.076 866.901,234.974 867.469,234.621 868.037,236.646 868.606,236.139 869.174,234.747 869.742,233.424 870.311,232.347 870.879,232.273 871.447,234.301 872.016,235.226 872.584,236.194 873.152,233.758 873.721,233.84 874.289,234.521 874.858,235.334 875.426,233.823 875.994,231.662 876.563,232.63 877.131,231.487 877.699,232.266 878.268,231.999 878.836,231.786 879.404,233.852 879.973,232.535 880.541,231.414 881.109,232.487 881.678,232.628 882.246,232.561 882.814,234.359 883.383,233.336 883.951,231.213 884.519,229.17 885.088,229.256 885.656,227.393 886.224,226.6 886.793,227.059 887.361,226.487 887.93,226.865 888.498,225.103 889.066,226.691 889.635,225.902 890.203,225.246 890.771,227.767 891.34,227.077 891.908,227.415 892.476,228.924 893.045,230.358 893.613,231.248 894.181,234.27 894.75,235.315 895.318,236.05 895.886,235.772 896.455,235.571 897.023,235.164 897.591,235.179 898.16,232.875 898.728,228.753 899.296,228.758 899.865,225.98 900.433,223.414 901.001,223.325 901.57,224.029 902.138,225.545 902.707,225.888 903.275,226.286 903.843,230.033 904.412,231.244 904.98,231.296 905.548,231.245 906.117,231.314 906.685,228.364 907.253,226.528 907.822,226.959 908.39,225.487 908.958,226.003 909.527,227.694 910.095,226.168 910.663,224.943 911.232,224.612 911.8,226.304 912.368,227.824 912.937,227.939 913.505,226.402 914.073,227.779 914.642,230.36 915.21,231.746 915.779,230.953 916.347,230.203 916.915,229.463 917.484,231.864 918.052,231.825 918.62,233.126 919.189,233.321 919.757,232.48 920.325,229.768 920.894,229.212 921.462,229.486 922.03,231.93 922.599,228.987 923.167,228.327 923.735,228.591 924.304,230.144 924.872,233.498 925.44,233.587 926.009,230.549 926.577,231.902 927.145,232.289 927.714,234.65 928.282,232.865 928.85,236.206 929.419,237.143 929.987,236.102 930.556,239.12 931.124,237.813 931.692,236.429 932.261,236.028 932.829,235.73 933.397,234.666 933.966,234.621 934.534,236.473 935.102,236.244 935.671,237.06 936.239,236.592 936.807,237.396 937.376,237.212 937.944,236.959 938.512,238.634 939.081,239.343 939.649,238.849 940.217,236.508 940.786,235.036 941.354,235.193 941.922,237.159 942.491,237.916 943.059,237.602 943.627,236.204 944.196,236.028 944.764,235.75 945.333,233.574 945.901,235.423 946.469,234.191 947.038,233.223 947.606,234.007 948.174,233.842 948.743,230.883 949.311,233.236 949.879,236.221 950.448,233.735 951.016,232.53 951.584,233.614 952.153,236.563 952.721,234.046 953.289,235.835 953.858,234.069 954.426,231.808 954.994,231.706 955.563,232.743 956.131,232.618 956.699,232.584 957.268,232.528 957.836,232.687 958.405,232.922 958.973,233.986 959.541,234.926 960.11,236.674 960.678,236.372 961.246,236.929 961.815,235.67 962.383,235.22 962.951,234.996 963.52,235.483 964.088,238.113 964.656,235.563 965.225,235.094 965.793,235.635 966.361,235.309 966.93,235.04 967.498,234.786 968.066,236.7 968.635,234.256 969.203,231.619 969.771,232.651 970.34,235.638 970.908,236.044 971.476,235.664 972.045,234.319 972.613,231.8 973.182,230.651 973.75,229.838 974.318,230.955 974.887,230.902 975.455,231.006 976.023,229.943 976.592,229.027 977.16,228.836 977.728,228.852 978.297,229.936 978.865,231.099 979.433,231.095 980.002,229.974 980.57,231.097 981.138,231.202 981.707,231.153 982.275,231.133 982.843,232.426 983.412,232.227 983.98,231.22 984.548,231.177 985.117,230.07 985.685,229.103 986.253,229.393 986.822,226.528 987.39,225.854 987.959,226.378 988.527,227.536 989.095,227.597 989.664,227.89 990.232,228.415 990.8,226.705 991.369,224.092 991.937,225.926 992.505,226.329 993.074,228.926 993.642,227.306 994.21,228.719 994.779,229.964 995.347,230.172 995.915,230.312 996.484,230.377 997.052,230.331 997.62,231.657 998.189,230.743 998.757,228.573 999.325,229.824 999.894,230.989 1000.46,231.962 1001.03,232.001 1001.6,233.058 1002.17,231.989 1002.74,232.214 1003.3,230.276 1003.87,230.606 1004.44,231.683 1005.01,232.017 1005.58,233.244 1006.15,234.161 1006.71,232.923 1007.28,235.047 1007.85,233.81 1008.42,233.934 1008.99,233.921 1009.56,231.79 1010.12,231.926 1010.69,232.989 1011.26,232.028 1011.83,231.014 1012.4,228.891 1012.97,228.081 1013.53,228.333 1014.1,228.713 1014.67,230.246 1015.24,231.558 1015.81,231.846 1016.38,232.053 1016.94,232.914 1017.51,233.792 1018.08,232.55 1018.65,232.85 1019.22,233.863 1019.79,233.915 1020.35,233.964 1020.92,233.888 1021.49,236.971 1022.06,236.788 1022.63,235.618 1023.2,236.315 1023.76,237.182 1024.33,236.749 1024.9,236.393 1025.47,236.348 1026.04,235.247 1026.61,235.142 1027.17,233.896 1027.74,231.659 1028.31,231.617 1028.88,233.732 1029.45,231.56 1030.02,230.622 1030.58,230.737 1031.15,229.748 1031.72,231.977 1032.29,232.955 1032.86,234.839 1033.43,234.513 1033.99,233.412 1034.56,232.24 1035.13,235.326 1035.7,235.914 1036.27,235.521 1036.84,237.343 1037.4,235.859 1037.97,237.457 1038.54,235.965 1039.11,235.565 1039.68,235.23 1040.25,236.1 1040.81,235.705 1041.38,234.463 1041.95,232.973 1042.52,232.746 1043.09,230.53 1043.66,227.31 1044.22,225.647 1044.79,226.054 1045.36,228.31 1045.93,230.526 1046.5,231.665 1047.07,230.627 1047.63,229.714 1048.2,232.012 1048.77,233.93 1049.34,234.784 1049.91,233.564 1050.48,233.392 1051.05,231.302 1051.61,230.507 1052.18,232.532 1052.75,233.45 1053.32,233.567 1053.89,231.39 1054.46,233.354 1055.02,231.222 1055.59,231.303 1056.16,230.391 1056.73,228.541 1057.3,229.791 1057.87,232.118 1058.43,232.189 1059,232.003 1059.57,230.962 1060.14,234.037 1060.71,232.672 1061.28,235.771 1061.84,236.409 1062.41,235.109 1062.98,234.939 1063.55,234.549 1064.12,235.452 1064.69,234.19 1065.25,236.218 1065.82,235.922 1066.39,234.715 1066.96,234.487 1067.53,233.22 1068.1,230.732 1068.66,228.918 1069.23,230.133 1069.8,231.245 1070.37,231.259 1070.94,232.113 1071.51,230.227 1072.07,230.212 1072.64,230.313 1073.21,228.4 1073.78,226.675 1074.35,227.176 1074.92,227.666 1075.48,229.062 1076.05,227.095 1076.62,225.043 1077.19,226.689 1077.76,229.022 1078.33,230.022 1078.89,230.06 1079.46,231.049 1080.03,233.361 1080.6,234.102 1081.17,232.866 1081.74,233.016 1082.3,231.827 1082.87,231.699 1083.44,231.917 1084.01,232.878 1084.58,231.841 1085.15,230.697 1085.71,230.892 1086.28,231.086 1086.85,231.097 1087.42,233.152 1087.99,232.078 1088.56,231.93 1089.12,231.973 1089.69,230.821 1090.26,232.792 1090.83,232.733 1091.4,232.655 1091.97,231.436 1092.53,230.573 1093.1,229.765 1093.67,230.077 1094.24,231.115 1094.81,230.22 1095.38,230.475 1095.94,231.654 1096.51,231.582 1097.08,232.765 1097.65,231.571 1098.22,231.771 1098.79,231.846 1099.35,233.139 1099.92,233.056 1100.49,232.954 1101.06,230.954 1101.63,231.078 1102.2,230.11 1102.76,232.448 1103.33,232.297 1103.9,232.274 1104.47,232.195 1105.04,229.023 1105.61,227.065 1106.17,227.407 1106.74,225.45 1107.31,226.082 1107.88,226.317 1108.45,225.81 1109.02,226.264 1109.58,227.782 1110.15,229.206 1110.72,228.394 1111.29,227.558 1111.86,227.906 1112.43,232.555 1112.99,231.62 1113.56,230.704 1114.13,230.946 1114.7,232.068 1115.27,232.023 1115.84,232.065 1116.4,233.323 1116.97,232.434 1117.54,233.501 1118.11,235.649 1118.68,234.354 1119.25,234.42 1119.81,236.26 1120.38,234.052 1120.95,233.743 1121.52,232.473 1122.09,231.583 1122.66,232.759 1123.23,232.858 1123.79,234.714 1124.36,232.46 1124.93,233.498 1125.5,232.623 1126.07,232.762 1126.64,232.722 1127.2,232.739 1127.77,231.867 1128.34,230.015 1128.91,229.038 1129.48,230.236 1130.05,229.151 1130.61,229.399 1131.18,231.67 1131.75,231.762 1132.32,232.693 1132.89,233.751 1133.46,233.623 1134.02,232.702 1134.59,233.732 1135.16,232.857 1135.73,233.842 1136.3,233.71 1136.87,231.7 1137.43,230.498 1138,231.759 1138.57,230.939 1139.14,231.02 1139.71,230.05 1140.28,233.49 1140.84,232.372 1141.41,233.601 1141.98,233.645 1142.55,232.528 1143.12,234.551 1143.69,236.554 1144.25,234.004 1144.82,231.624 1145.39,229.697 1145.96,228.721 1146.53,229.865 1147.1,231.134 1147.66,234.217 1148.23,235.172 1148.8,233.953 1149.37,232.711 1149.94,231.671 1150.51,230.57 1151.07,231.715 1151.64,230.704 1152.21,231.941 1152.78,232.078 1153.35,232.137 1153.92,235.341 1154.48,234.234 1155.05,234.223 1155.62,234.129 1156.19,233.051 1156.76,231.996 1157.33,232.839 1157.89,230.918 1158.46,230.821 1159.03,231.851 1159.6,230.697 1160.17,228.753 1160.74,229.036 1161.3,231.372 1161.87,234.459 1162.44,232.131 1163.01,233.042 1163.58,231.899 1164.15,232.135 1164.71,231.36 1165.28,233.745 1165.85,234.731 1166.42,233.295 1166.99,232.952 1167.56,231.688 1168.12,232.723 1168.69,231.718 1169.26,234.827 1169.83,236.597 1170.4,236.286 1170.97,237.121 1171.53,237.82 1172.1,238.668 1172.67,237.185 1173.24,237.742 1173.81,236.187 1174.38,235.614 1174.94,234.272 1175.51,234.042 1176.08,233.918 1176.65,230.549 1177.22,230.58 1177.79,230.534 1178.35,229.779 1178.92,229.763 1179.49,230.905 1180.06,231.918 1180.63,228.724 1181.2,228.875 1181.76,230.209 1182.33,230.38 1182.9,229.399 1183.47,229.746 1184.04,228.805 1184.61,230.106 1185.17,228.192 1185.74,231.507 1186.31,231.492 1186.88,233.432 1187.45,235.484 1188.02,236.063 1188.58,233.687 1189.15,233.546 1189.72,231.334 1190.29,231.283 1190.86,231.205 1191.43,231.102 1192,229.157 1192.56,227.261 1193.13,230.679 1193.7,227.806 1194.27,227.099 1194.84,226.53 1195.41,225.797 1195.97,226.129 1196.54,226.424 1197.11,227.831 1197.68,229.222 1198.25,227.376 1198.82,227.789 1199.38,227.019 1199.95,228.545 1200.52,230.844 1201.09,231.939 1201.66,232.016 1202.23,232.928 1202.79,231.79 1203.36,231.81 1203.93,232.953 1204.5,230.838 1205.07,231.004 1205.64,230.239 1206.2,230.263 1206.77,233.613 1207.34,234.833 1207.91,235.772 1208.48,232.411 1209.05,231.455 1209.61,232.698 1210.18,231.497 1210.75,232.624 1211.32,233.661 1211.89,233.392 1212.46,234.384 1213.02,234.248 1213.59,232.079 1214.16,234.036 1214.73,235.932 1215.3,233.478 1215.87,231.289 1216.43,232.413 1217,231.389 1217.57,231.721 1218.14,231.87 1218.71,231.95 1219.28,230.836 1219.84,230.788 1220.41,226.882 1220.98,227.414 1221.55,228.742 1222.12,231.133 1222.69,232.446 1223.25,232.452 1223.82,233.643 1224.39,233.467 1224.96,232.497 1225.53,232.495 1226.1,232.569 1226.66,234.473 1227.23,237.448 1227.8,234.09 1228.37,234.017 1228.94,233.911 1229.51,232.632 1230.07,231.418 1230.64,232.49 1231.21,230.385 1231.78,231.641 1232.35,232.687 1232.92,232.843 1233.48,231.607 1234.05,231.844 1234.62,231.854 1235.19,233.784 1235.76,234.754 1236.33,234.655 1236.89,234.584 1237.46,234.38 1238.03,234.348 1238.6,234.205 1239.17,234.078 1239.74,236.184 1240.3,238.755 1240.87,237.443 1241.44,234.988 1242.01,233.878 1242.58,234.888 1243.15,234.32 1243.71,232.413 1244.28,233.482 1244.85,231.326 1245.42,231.447 1245.99,231.257 1246.56,232.684 1247.12,232.522 1247.69,233.393 1248.26,233.257 1248.83,233.065 1249.4,232.008 1249.97,232.907 1250.53,234.966 1251.1,234.919 1251.67,234.714 1252.24,235.631 1252.81,235.487 1253.38,235.304 1253.94,237.291 1254.51,237.857 1255.08,237.649 1255.65,238.972 1256.22,236.432 1256.79,236.233 1257.35,234.965 1257.92,234.62 1258.49,235.712 1259.06,236.495 1259.63,235.996 1260.2,235.657 1260.76,235.364 1261.33,234.902 1261.9,234.645 1262.47,234.221 1263.04,235.118 1263.61,235.647 1264.18,234.945 1264.74,232.709 1265.31,233.356 1265.88,233.255 1266.45,233.041 1267.02,233.015 1267.59,231.565 1268.15,231.249 1268.72,231.085 1269.29,228.913 1269.86,229.064 1270.43,229.974 1271,231.939 1271.56,234.824 1272.13,234.816 1272.7,232.401 1273.27,232.364 1273.84,232.976 1274.41,233.797 1274.97,233.174 1275.54,231.877 1276.11,232.697 1276.68,232.652 1277.25,232.543 1277.82,231.415 1278.38,230.281 1278.95,231.114 1279.52,230.96 1280.09,232.101 1280.66,230.001 1281.23,231.917 1281.79,233.623 1282.36,232.132 1282.93,230.233 1283.5,231.215 1284.07,231.14 1284.64,231.24 1285.2,228.952 1285.77,227.167 1286.34,228.362 1286.91,230.648 1287.48,230.7 1288.05,231.784 1288.61,231.571 1289.18,232.571 1289.75,230.403 1290.32,230.121 1290.89,229.916 1291.46,227.837 1292.02,227.883 1292.59,229.063 1293.16,230.299 1293.73,230.453 1294.3,231.582 1294.87,231.419 1295.43,231.467 1296,232.432 1296.57,230.406 1297.14,231.494 1297.71,230.583 1298.28,230.291 1298.84,231.313 1299.41,230.111 1299.98,232.293 1300.55,232.479 1301.12,231.345 1301.69,230.366 1302.25,231.355 1302.82,232.397 1303.39,232.281 1303.96,231.178 1304.53,230.153 1305.1,230.054 1305.66,231.092 1306.23,228.901 1306.8,229.261 1307.37,228.335 1307.94,227.52 1308.51,227.745 1309.07,230.016 1309.64,229.938 1310.21,230.01 1310.78,228.101 1311.35,227.398 1311.92,228.692 1312.48,228.959 1313.05,228.905 1313.62,227.937 1314.19,229.306 1314.76,229.19 1315.33,228.44 1315.89,223.571 1316.46,224.274 1317.03,225.918 1317.6,227.368 1318.17,224.701 1318.74,224.178 1319.3,226.665 1319.87,228.097 1320.44,229.36 1321.01,230.412 1321.58,230.591 1322.15,228.617 1322.71,230.944 1323.28,231.037 1323.85,230.082 1324.42,229.366 1324.99,229.409 1325.56,229.678 1326.12,227.975 1326.69,229.386 1327.26,230.695 1327.83,233.837 1328.4,234.789 1328.97,234.548 1329.53,234.355 1330.1,233.018 1330.67,234.18 1331.24,233.716 1331.81,233.419 1332.38,233.378 1332.94,234.105 1333.51,236.042 1334.08,236.685 1334.65,236.336 1335.22,234.87 1335.79,235.829 1336.36,235.562 1336.92,235.419 1337.49,234.138 1338.06,233.112 1338.63,232.944 1339.2,233.684 1339.77,232.563 1340.33,233.45 1340.9,235.205 1341.47,232.961 1342.04,232.874 1342.61,231.893 1343.18,230.609 1343.74,228.69 1344.31,227.882 1344.88,227.345 1345.45,228.928 1346.02,231.406 1346.59,233.382 1347.15,233.096 1347.72,233.034 1348.29,235.176 1348.86,234.016 1349.43,234.799 1350,233.617 1350.56,233.528 1351.13,233.634 1351.7,234.665 1352.27,234.69 1352.84,233.477 1353.41,234.572 1353.97,235.364 1354.54,237.265 1355.11,237.955 1355.68,238.57 1356.25,236.979 1356.82,235.862 1357.38,233.464 1357.95,231.308 1358.52,231.464 1359.09,229.624 1359.66,231.877 1360.23,231.779 1360.79,230.572 1361.36,231.772 1361.93,228.586 1362.5,225.711 1363.07,225.103 1363.64,226.587 1364.2,227.976 1364.77,229.276 1365.34,228.576 1365.91,228.762 1366.48,229.145 1367.05,232.341 1367.61,231.319 1368.18,229.463 1368.75,228.74 1369.32,226.971 1369.89,226.508 1370.46,227.873 1371.02,229.263 1371.59,230.334 1372.16,228.512 1372.73,227.864 1373.3,227.324 1373.87,228.697 1374.43,229.072 1375,230.526 1375.57,230.483 1376.14,229.695 1376.71,227.644 1377.28,226.045 1377.84,227.539 1378.41,228.886 1378.98,229.221 1379.55,231.494 1380.12,230.706 1380.69,231.05 1381.25,230.32 1381.82,231.627 1382.39,233.722 1382.96,233.671 1383.53,231.489 1384.1,231.733 1384.66,230.739 1385.23,230.73 1385.8,230.818 1386.37,231.099 1386.94,231.377 1387.51,231.641 1388.07,233.94 1388.64,234.163 1389.21,234.235 1389.78,233.296 1390.35,234.338 1390.92,235.375 1391.48,236.22 1392.05,232.981 1392.62,230.581 1393.19,228.509 1393.76,233.731 1394.33,232.518 1394.89,231.536 1395.46,232.724 1396.03,232.553 1396.6,231.244 1397.17,232.277 1397.74,231.324 1398.3,232.61 1398.87,231.827 1399.44,230.923 1400.01,232.063 1400.58,231.303 1401.15,232.323 1401.71,233.324 1402.28,231.16 1402.85,229.338 1403.42,230.446 1403.99,230.69 1404.56,232.823 1405.13,233.769 1405.69,231.886 1406.26,231.892 1406.83,232.778 1407.4,234.722 1407.97,234.384 1408.54,235.157 1409.1,233.913 1409.67,234.764 1410.24,234.371 1410.81,233.344 1411.38,232.306 1411.95,231.376 1412.51,233.437 1413.08,233.341 1413.65,234.212 1414.22,235.233 1414.79,233.097 1415.36,234.96 1415.92,235.967 1416.49,237.757 1417.06,237.471 1417.63,237.139 1418.2,234.583 1418.77,233.542 1419.33,233.454 1419.9,233.453 1420.47,233.352 1421.04,234.295 1421.61,234.133 1422.18,234.119 1422.74,231.862 1423.31,231.879 1423.88,231.996 1424.45,231.921 1425.02,230.864 1425.59,230.932 1426.15,230.062 1426.72,229.996 1427.29,229.916 1427.86,230.844 1428.43,232.03 1429,232.873 1429.56,232.83 1430.13,230.512 1430.7,230.613 1431.27,227.663 1431.84,229.845 1432.41,230.983 1432.97,230.017 1433.54,232.113 1434.11,232.078 1434.68,229.944 1435.25,227.896 1435.82,229.341 1436.38,229.571 1436.95,228.652 1437.52,228.853 1438.09,227.122 1438.66,229.576 1439.23,229.713 1439.79,231.948 1440.36,231.038 1440.93,231.116 1441.5,229.934 1442.07,231.249 1442.64,232.506 1443.2,232.65 1443.77,232.92 1444.34,232.939 1444.91,232.802 1445.48,232.64 1446.05,231.596 1446.61,232.719 1447.18,234.845 1447.75,233.727 1448.32,231.528 1448.89,227.566 1449.46,229.952 1450.02,228.265 1450.59,228.663 1451.16,229.691 1451.73,229.812 1452.3,227.969 1452.87,227.314 1453.43,228.893 1454,231.231 1454.57,231.283 1455.14,231.366 1455.71,234.59 1456.28,233.571 1456.84,233.521 1457.41,230.175 1457.98,229.344 1458.55,228.438 1459.12,228.686 1459.69,232.031 1460.25,231.135 1460.82,230.398 1461.39,232.699 1461.96,233.694 1462.53,233.674 1463.1,236.512 1463.66,237.517 1464.23,238.335 1464.8,238.972 1465.37,238.212 1465.94,237.899 1466.51,237.297 1467.07,238.966 1467.64,238.493 1468.21,237.359 1468.78,237.752 1469.35,235.257 1469.92,235.181 1470.48,232.869 1471.05,233.803 1471.62,234.572 1472.19,235.32 1472.76,236.111 1473.33,235.903 1473.89,235.49 1474.46,236.303 1475.03,236.823 1475.6,235.347 1476.17,235.004 1476.74,233.388 1477.31,231.253 1477.87,230.314 1478.44,230.521 1479.01,230.563 1479.58,230.883 1480.15,231.803 1480.72,232.813 1481.28,232.658 1481.85,229.363 1482.42,228.346 1482.99,227.617 1483.56,226.872 1484.13,227.384 1484.69,225.708 1485.26,226.035 1485.83,226.433 1486.4,223.694 1486.97,224.313 1487.54,224.547 1488.1,226.181 1488.67,226.588 1489.24,227.838 1489.81,228.112 1490.38,229.364 1490.95,229.497 1491.51,229.512 1492.08,231.557 1492.65,231.594 1493.22,231.647 1493.79,233.654 1494.36,234.449 1494.92,233.342 1495.49,233.306 1496.06,234.175 1496.63,233.859 1497.2,231.853 1497.77,232.962 1498.33,232.968 1498.9,230.01 1499.47,230.293 1500.04,232.183 1500.61,230.97 1501.18,231.704 1501.74,233.819 1502.31,231.727 1502.88,231.634 1503.45,229.868 1504.02,230.094 1504.59,230.173 1505.15,231.277 1505.72,231.58 1506.29,231.689 1506.86,228.775 1507.43,230.067 1508,228.99 1508.56,229.374 1509.13,228.572 1509.7,228.823 1510.27,232.142 1510.84,231.03 1511.41,231.193 1511.97,232.376 1512.54,234.594 1513.11,232.392 1513.68,232.296 1514.25,231.302 1514.82,231.354 1515.38,230.527 1515.95,231.04 1516.52,231.217 1517.09,230.193 1517.66,233.564 1518.23,235.643 1518.79,234.436 1519.36,235.313 1519.93,234.881 1520.5,236.908 1521.07,234.508 1521.64,234.472 1522.2,234.272 1522.77,233.287 1523.34,232.116 1523.91,233.234 1524.48,232.239 1525.05,232.211 1525.61,231.316 1526.18,232.511 1526.75,234.311 1527.32,235.057 1527.89,235.044 1528.46,232.124 1529.02,230.825 1529.59,232.844 1530.16,234.889 1530.73,236.817 1531.3,236.392 1531.87,237.082 1532.43,237.592 1533,234.281 1533.57,233.079 1534.14,233.09 1534.71,232.158 1535.28,231.029 1535.84,230.962 1536.41,231.098 1536.98,229.028 1537.55,228.283 1538.12,228.495 1538.69,229.746 1539.25,228.715 1539.82,227.923 1540.39,228.313 1540.96,228.436 1541.53,229.781 1542.1,232.082 1542.66,232.017 1543.23,229.799 1543.8,233.176 1544.37,233.001 1544.94,232.753 1545.51,232.857 1546.08,232.868 1546.64,233.927 1547.21,233.845 1547.78,234.703 1548.35,232.498 1548.92,230.668 1549.49,228.652 1550.05,230.731 1550.62,230.691 1551.19,231.906 1551.76,230.944 1552.33,231.197 1552.9,230.286 1553.46,229.46 1554.03,231.773 1554.6,228.554 1555.17,230.856 1555.74,232.056 1556.31,232.152 1556.87,230.162 1557.44,231.412 1558.01,230.366 1558.58,230.507 1559.15,230.671 1559.72,229.658 1560.28,228.616 1560.85,228.766 1561.42,228.935 1561.99,230.256 1562.56,231.635 1563.13,229.387 1563.69,230.427 1564.26,232.746 1564.83,230.6 1565.4,228.574 1565.97,227.907 1566.54,228.049 1567.1,228.242 1567.67,226.56 1568.24,228.117 1568.81,228.369 1569.38,227.869 1569.95,227.326 1570.51,229.837 1571.08,230.169 1571.65,229.347 1572.22,229.506 1572.79,230.766 1573.36,231.294 1573.92,231.507 1574.49,232.699 1575.06,232.741 1575.63,232.798 1576.2,233.156 1576.77,233.194 1577.33,234.008 1577.9,234.869 1578.47,234.64 1579.04,233.239 1579.61,235.605 1580.18,235.465 1580.74,235.296 1581.31,235.957 1581.88,235.751 1582.45,235.671 1583.02,235.441 1583.59,237.203 1584.15,235.759 1584.72,234.398 1585.29,233.215 1585.86,234.159 1586.43,233.984 1587,234.948 1587.56,233.798 1588.13,233.594 1588.7,234.643 1589.27,234.35 1589.84,233.037 1590.41,231.876 1590.97,233.955 1591.54,233.636 1592.11,235.568 1592.68,236.429 1593.25,236.12 1593.82,234.702 1594.38,234.553 1594.95,234.454 1595.52,235.272 1596.09,233.875 1596.66,234.726 1597.23,235.364 1597.79,230.986 1598.36,232.114 1598.93,233.19 1599.5,232.045 1600.07,232.001 1600.64,231.913 1601.2,231.054 1601.77,231.301 1602.34,231.632 1602.91,230.948 1603.48,231.793 1604.05,231.779 1604.61,232.882 1605.18,232.715 1605.75,232.497 1606.32,234.503 1606.89,235.497 1607.46,234.096 1608.02,233.892 1608.59,232.687 1609.16,233.591 1609.73,236.425 1610.3,234.063 1610.87,234.833 1611.43,236.523 1612,238.038 1612.57,236.402 1613.14,235.082 1613.71,236.796 1614.28,237.443 1614.84,234.844 1615.41,236.477 1615.98,236.921 1616.55,236.323 1617.12,235.856 1617.69,234.382 1618.26,234.975 1618.82,235.7 1619.39,235.341 1619.96,231.074 1620.53,230.96 1621.1,230.832 1621.67,231.742 1622.23,231.673 1622.8,229.381 1623.37,229.409 1623.94,228.529 1624.51,228.468 1625.08,226.452 1625.64,225.901 1626.21,227.381 1626.78,229.724 1627.35,227.6 1627.92,227.905 1628.49,228.374 1629.05,228.685 1629.62,228.876 1630.19,228.023 1630.76,228.241 1631.33,228.249 1631.9,229.633 1632.46,228.877 1633.03,226.805 1633.6,228.293 1634.17,226.504 1634.74,226.554 1635.31,226.824 1635.87,229.151 1636.44,228.395 1637.01,229.974 1637.58,230.214 1638.15,231.326 1638.72,231.552 1639.28,230.503 1639.85,228.577 1640.42,227.934 1640.99,228.317 1641.56,228.603 1642.13,229.926 1642.69,231.077 1643.26,232.02 1643.83,231.918 1644.4,232.688 1644.97,233.368 1645.54,233.207 1646.1,233.967 1646.67,236.671 1647.24,238.402 1647.81,238.245 1648.38,237.704 1648.95,236.129 1649.51,235.728 1650.08,236.513 1650.65,238.067 1651.22,236.54 1651.79,237.317 1652.36,237.948 1652.92,237.569 1653.49,236.889 1654.06,233.548 1654.63,233.264 1655.2,232.011 1655.77,235.083 1656.33,233.521 1656.9,233.543 1657.47,234.492 1658.04,233.173 1658.61,234.221 1659.18,234.017 1659.74,235.774 1660.31,237.251 1660.88,236.673 1661.45,235.35 1662.02,234.949 1662.59,233.418 1663.15,232.053 1663.72,231.925 1664.29,231.868 1664.86,232.661 1665.43,232.528 1666,228.141 1666.56,227.463 1667.13,229.691 1667.7,229.767 1668.27,229.581 1668.84,231.748 1669.41,230.926 1669.97,230.794 1670.54,230.903 1671.11,233.084 1671.68,233.828 1672.25,231.558 1672.82,230.582 1673.38,229.605 1673.95,226.57 1674.52,225.9 1675.09,226.183 1675.66,226.531 1676.23,224.825 1676.79,224.308 1677.36,223.869 1677.93,226.446 1678.5,223.76 1679.07,223.138 1679.64,224.785 1680.2,225.246 1680.77,224.653 1681.34,223.21 1681.91,219.895 1682.48,220.796 1683.05,221.673 1683.61,224.55 1684.18,226.428 1684.75,225.999 1685.32,227.514 1685.89,228.722 1686.46,229.052 1687.02,229.209 1687.59,228.41 1688.16,229.9 1688.73,231.359 1689.3,230.53 1689.87,229.796 1690.44,230.171 1691,231.561 1691.57,230.706 1692.14,235.111 1692.71,234.886 1693.28,234.805 1693.85,236.79 1694.41,237.447 1694.98,237.169 1695.55,237.793 1696.12,236.377 1696.69,233.898 1697.26,233.899 1697.82,232.964 1698.39,232.881 1698.96,230.63 1699.53,229.596 1700.1,228.869 1700.67,229.018 1701.23,227.018 1701.8,226.45 1702.37,224.742 1702.94,228.414 1703.51,230.038 1704.08,231.312 1704.64,232.087 1705.21,233.194 1705.78,234.138 1706.35,232.094 1706.92,234.149 1707.49,233.031 1708.05,234.094 1708.62,232.892 1709.19,231.908 1709.76,230.985 1710.33,231.433 1710.9,233.599 1711.46,235.567 1712.03,233.366 1712.6,231.166 1713.17,229.204 1713.74,230.657 1714.31,229.783 1714.87,230.915 1715.44,229.045 1716.01,228.007 1716.58,229.457 1717.15,230.759 1717.72,230.885 1718.28,230.938 1718.85,229.976 1719.42,230.03 1719.99,230.362 1720.56,230.564 1721.13,229.741 1721.69,228.81 1722.26,227.198 1722.83,228.62 1723.4,229.826 1723.97,229.902 1724.54,231.032 1725.1,233.367 1725.67,233.197 1726.24,230.207 1726.81,232.468 1727.38,232.687 1727.95,229.573 1728.51,230.719 1729.08,230.797 1729.65,231.21 1730.22,230.512 1730.79,231.735 1731.36,232.93 1731.92,234.871 1732.49,234.903 1733.06,236.881 1733.63,237.418 1734.2,237.047 1734.77,235.751 1735.33,234.589 1735.9,236.512 1736.47,236.11 1737.04,235.709 1737.61,236.62 1738.18,235.321 1738.74,235.16 1739.31,232.786 1739.88,234.122 1740.45,234.16 1741.02,232.013 1741.59,230.986 1742.15,232.275 1742.72,231.223 1743.29,232.384 1743.86,233.553 1744.43,234.551 1745,233.084 1745.56,232.957 1746.13,232.806 1746.7,230.621 1747.27,233.88 1747.84,235.898 1748.41,238.796 1748.97,239.341 1749.54,237.804 1750.11,239.631 1750.68,239.145 1751.25,239.766 1751.82,240.228 1752.38,237.545 1752.95,234.152 1753.52,235.068 1754.09,235.025 1754.66,234.853 1755.23,233.793 1755.79,231.632 1756.36,233.488 1756.93,236.416 1757.5,235.976 1758.07,235.783 1758.64,234.567 1759.21,234.412 1759.77,235.218 1760.34,235.998 1760.91,236.673 1761.48,234.007 1762.05,233.797 1762.62,232.634 1763.18,232.387 1763.75,232.222 1764.32,234.005 1764.89,231.845 1765.46,233.818 1766.03,234.549 1766.59,233.052 1767.16,233.101 1767.73,233.953 1768.3,233.732 1768.87,232.501 1769.44,231.227 1770,231.208 1770.57,231.193 1771.14,229.953 1771.71,229.02 1772.28,230.098 1772.85,230.318 1773.41,232.498 1773.98,231.373 1774.55,232.421 1775.12,231.231 1775.69,232.163 1776.26,233.153 1776.82,231.14 1777.39,230.927 1777.96,231.92 1778.53,228.706 1779.1,232.064 1779.67,232.033 1780.23,231.972 1780.8,233.099 1781.37,236.032 1781.94,235.645 1782.51,234.93 1783.08,235.597 1783.64,234.05 1784.21,233.842 1784.78,232.575 1785.35,234.482 1785.92,233.14 1786.49,233.883 1787.05,235.772 1787.62,235.274 1788.19,232.926 1788.76,234.884 1789.33,234.398 1789.9,232.981 1790.46,231.737 1791.03,231.728 1791.6,232.6 1792.17,233.383 1792.74,230.929 1793.31,230.911 1793.87,231.022 1794.44,232.052 1795.01,233.911 1795.58,232.673 1796.15,230.424 1796.72,230.386 1797.28,230.463 1797.85,229.514 1798.42,231.566 1798.99,231.446 1799.56,232.461 1800.13,232.11 1800.69,232.888 1801.26,231.644 1801.83,231.606 1802.4,230.567 1802.97,230.54 1803.54,229.525 1804.1,230.54 1804.67,230.412 1805.24,231.722 1805.81,230.711 1806.38,228.802 1806.95,227.862 1807.51,227.29 1808.08,229.5 1808.65,229.364 1809.22,230.495 1809.79,230.582 1810.36,225.408 1810.92,227.101 1811.49,226.546 1812.06,227.843 1812.63,228.089 1813.2,228.202 1813.77,227.332 1814.33,228.769 1814.9,229.906 1815.47,229.833 1816.04,231.036 1816.61,231.017 1817.18,229.039 1817.74,229.309 1818.31,228.561 1818.88,229.656 1819.45,229.683 1820.02,230.74 1820.59,229.866 1821.15,230.134 1821.72,228.89 1822.29,230.137 1822.86,228.283 1823.43,228.409 1824,229.636 1824.56,231.175 1825.13,233.251 1825.7,233.261 1826.27,232.16 1826.84,232.225 1827.41,232.114 1827.97,231.054 1828.54,230.966 1829.11,230.867 1829.68,229.056 1830.25,228.12 1830.82,228.519 1831.39,228.531 1831.95,228.87 1832.52,233.212 1833.09,233.062 1833.66,235.333 1834.23,234.889 1834.8,234.62 1835.36,232.376 1835.93,232.376 1836.5,232.358 1837.07,232.207 1837.64,233.11 1838.21,228.05 1838.77,227.452 1839.34,227.991 1839.91,230.62 1840.48,230.847 1841.05,230.991 1841.62,231.278 1842.18,229.31 1842.75,230.642 1843.32,229.861 1843.89,228.944 1844.46,229.148 1845.03,229.412 1845.59,229.552 1846.16,230.731 1846.73,230.753 1847.3,233.934 1847.87,235.102 1848.44,235.929 1849,230.623 1849.57,232.777 1850.14,231.665 1850.71,232.742 1851.28,232.727 1851.85,232.636 1852.41,232.626 1852.98,232.675 1853.55,233.608 1854.12,232.475 1854.69,232.748 1855.26,231.759 1855.82,230.756 1856.39,229.833 1856.96,231.121 1857.53,231.175 1858.1,229.173 1858.67,230.246 1859.23,232.45 1859.8,232.342 1860.37,232.296 1860.94,232.245 1861.51,233.263 1862.08,233.1 1862.64,233.128 1863.21,235.329 1863.78,234.179 1864.35,232.187 1864.92,233.283 1865.49,234.165 1866.05,235.172 1866.62,235.136 1867.19,234.068 1867.76,234.076 1868.33,235.004 1868.9,235.806 1869.46,234.567 1870.03,233.225 1870.6,234.17 1871.17,236.094 1871.74,235.766 1872.31,237.655 1872.87,236.195 1873.44,233.727 1874.01,234.592 1874.58,234.222 1875.15,236.926 1875.72,236.786 1876.28,237.242 1876.85,235.984 1877.42,234.539 1877.99,233.3 1878.56,235.143 1879.13,234.716 1879.69,233.395 1880.26,233.419 1880.83,234.523 1881.4,234.575 1881.97,236.196 1882.54,234.671 1883.1,232.531 1883.67,234.621 1884.24,233.263 1884.81,234.067 1885.38,232.951 1885.95,230.729 1886.51,230.835 1887.08,225.887 1887.65,228.342 1888.22,228.58 1888.79,226.773 1889.36,227.179 1889.92,229.707 1890.49,227.832 1891.06,230.097 1891.63,231.124 1892.2,231.049 1892.77,231.303 1893.33,233.266 1893.9,232.858 1894.47,233.612 1895.04,234.382 1895.61,235.42 1896.18,235.014 1896.74,236.787 1897.31,234.337 1897.88,233.952 1898.45,234.888 1899.02,234.836 1899.59,233.581 1900.16,234.353 1900.72,234.065 1901.29,233.868 1901.86,232.539 1902.43,230.616 1903,231.606 1903.57,228.474 1904.13,228.742 1904.7,225.987 1905.27,226.304 1905.84,226.562 1906.41,224.974 1906.98,225.196 1907.54,226.594 1908.11,227.965 1908.68,228.27 1909.25,227.505 1909.82,228.901 1910.39,230.122 1910.95,229.941 1911.52,230.878 1912.09,230.953 1912.66,230.841 1913.23,230.818 1913.8,231.905 1914.36,233.102 1914.93,231.836 1915.5,231.696 1916.07,228.592 1916.64,228.709 1917.21,227.975 1917.77,227.993 1918.34,227.03 1918.91,225.289 1919.48,226.867 1920.05,226.994 1920.62,226.289 1921.18,227.792 1921.75,227.96 1922.32,228.289 1922.89,229.426 1923.46,228.745 1924.03,230.105 1924.59,230.382 1925.16,230.554 1925.73,228.59 1926.3,226.912 1926.87,230.24 1927.44,231.331 1928,233.629 1928.57,231.361 1929.14,230.532 1929.71,231.641 1930.28,232.911 1930.85,232.849 1931.41,235.692 1931.98,235.748 1932.55,235.644 1933.12,235.501 1933.69,233.182 1934.26,232.204 1934.82,234.487 1935.39,235.45 1935.96,234.077 1936.53,234.929 1937.1,235.548 1937.67,232.13 1938.23,232.287 1938.8,233.31 1939.37,233.246 1939.94,233.168 1940.51,234.031 1941.08,234.107 1941.64,232.103 1942.21,233.171 1942.78,234.067 1943.35,232.896 1943.92,232.801 1944.49,233.907 1945.05,233.931 1945.62,233.845 1946.19,232.646 1946.76,232.617 1947.33,233.605 1947.9,231.139 1948.46,231.092 1949.03,233.262 1949.6,230.979 1950.17,231.074 1950.74,230.21 1951.31,230.499 1951.87,230.697 1952.44,230.814 1953.01,231.857 1953.58,230.654 1954.15,232.059 1954.72,231.961 1955.28,232.928 1955.85,230.776 1956.42,229.814 1956.99,229.984 1957.56,230.982 1958.13,229.883 1958.69,230.959 1959.26,228.087 1959.83,227.42 1960.4,228.877 1960.97,232.151 1961.54,231.97 1962.1,231.938 1962.67,232.08 1963.24,234.057 1963.81,234.871 1964.38,233.528 1964.95,233.226 1965.51,234.199 1966.08,230.072 1966.65,230.165 1967.22,231.22 1967.79,233.283 1968.36,232.114 1968.92,229.156 1969.49,227.166 1970.06,226.36 1970.63,225.775 1971.2,225.061 1971.77,224.473 1972.34,226.083 1972.9,226.628 1973.47,226.018 1974.04,226.482 1974.61,226.813 1975.18,228.361 1975.75,230.649 1976.31,230.608 1976.88,231.974 1977.45,234.124 1978.02,232.891 1978.59,231.96 1979.16,232.041 1979.72,233.929 1980.29,232.599 1980.86,231.684 1981.43,228.843 1982,229.046 1982.57,229.375 1983.13,229.512 1983.7,233.079 1984.27,236.054 1984.84,233.843 1985.41,232.748 1985.98,232.861 1986.54,233.644 1987.11,234.467 1987.68,235.319 1988.25,235.095 1988.82,235.141 1989.39,234.982 1989.95,233.729 1990.52,232.483 1991.09,231.292 1991.66,232.698 1992.23,233.726 1992.8,232.638 1993.36,230.648 1993.93,229.759 1994.5,233.167 1995.07,233.273 1995.64,233.207 1996.21,232.047 1996.77,232.273 1997.34,233.599 1997.91,230.747 1998.48,230.997 1999.05,229.041 1999.62,230.552 2000.18,231.738 2000.75,231.844 2001.32,231.767 2001.89,231.949 2002.46,238.127 2003.03,240.9 2003.59,237.323 2004.16,237.137 2004.73,235.58 2005.3,235.081 2005.87,234.761 2006.44,234.403 2007,235.288 2007.57,236.948 2008.14,234.633 2008.71,232.636 2009.28,232.504 2009.85,232.413 2010.41,232.282 2010.98,233.3 2011.55,230.923 2012.12,232.267 2012.69,232.19 2013.26,232.469 2013.82,234.519 2014.39,235.347 2014.96,235.896 2015.53,234.575 2016.1,232.174 2016.67,231.875 2017.23,232.887 2017.8,232.71 2018.37,232.834 2018.94,231.949 2019.51,229.665 2020.08,231.842 2020.64,230.964 2021.21,229.956 2021.78,229.832 2022.35,230.933 2022.92,227.906 2023.49,225.984 2024.05,227.56 2024.62,225.995 2025.19,227.607 2025.76,228.035 2026.33,229.296 2026.9,228.437 2027.46,227.556 2028.03,229.002 2028.6,231.398 2029.17,232.609 2029.74,232.471 2030.31,234.611 2030.87,233.213 2031.44,234.059 2032.01,234.956 2032.58,235.853 2033.15,234.701 2033.72,232.728 2034.28,232.657 2034.85,236.729 2035.42,237.247 2035.99,235.842 2036.56,236.497 2037.13,236.326 2037.69,236.091 2038.26,237.967 2038.83,237.637 2039.4,237.257 2039.97,235.833 2040.54,234.315 2041.11,235.249 2041.67,234.158 2042.24,235.849 2042.81,235.413 2043.38,235.053 2043.95,234.831 2044.52,235.47 2045.08,235.264 2045.65,233.612 2046.22,231.421 2046.79,232.086 2047.36,231.245 2047.93,230.34 2048.49,231.478 2049.06,230.568 2049.63,231.608 2050.2,230.544 2050.77,229.385 2051.34,229.557 2051.9,232.628 2052.47,234.709 2053.04,233.659 2053.61,235.254 2054.18,234.908 2054.75,234.465 2055.31,233.152 2055.88,233.034 2056.45,232.95 2057.02,231.83 2057.59,233.063 2058.16,233.813 2058.72,235.643 2059.29,237.261 2059.86,236.627 2060.43,237.286 2061,237.006 2061.57,237.343 2062.13,232.691 2062.7,231.334 2063.27,231.201 2063.84,230.846 2064.41,230.768 2064.98,227.678 2065.54,228.996 2066.11,229.037 2066.68,228.054 2067.25,229.171 2067.82,229.452 2068.39,227.522 2068.95,227.446 2069.52,227.801 2070.09,228.825 2070.66,223.923 2071.23,224.626 2071.8,226.08 2072.36,225.487 2072.93,225.969 2073.5,227.506 2074.07,226.954 2074.64,226.401 2075.21,228.963 2075.77,229.158 2076.34,232.377 2076.91,233.378 2077.48,232.081 2078.05,230.952 2078.62,231.121 2079.18,230.068 2079.75,229.953 2080.32,229.09 2080.89,230.127 2081.46,230.287 2082.03,229.383 2082.59,228.71 2083.16,226.961 2083.73,227.017 2084.3,227.275 2084.87,228.86 2085.44,229.142 2086,229.607 2086.57,231.975 2087.14,230.858 2087.71,231.955 2088.28,232.017 2088.85,233.113 2089.41,232.976 2089.98,231.79 2090.55,229.743 2091.12,229.955 2091.69,230.07 2092.26,230.448 2092.82,228.461 2093.39,226.747 2093.96,228.409 2094.53,227.692 2095.1,226.93 2095.67,227.425 2096.23,228.786 2096.8,227.051 2097.37,226.562 2097.94,224.932 2098.51,229.864 2099.08,229.248 2099.64,229.397 2100.21,228.574 2100.78,229.954 2101.35,230.25 2101.92,229.339 2102.49,231.82 2103.05,231.793 2103.62,231.955 2104.19,232.185 2104.76,232.471 2105.33,232.653 2105.9,233.812 2106.46,232.64 2107.03,233.543 2107.6,233.75 2108.17,234.754 2108.74,234.771 2109.31,235.759 2109.87,237.552 2110.44,236.057 2111.01,234.721 2111.58,233.54 2112.15,234.33 2112.72,238.412 2113.29,241.135 2113.85,239.361 2114.42,238.517 2114.99,237.116 2115.56,235.704 2116.13,236.475 2116.7,235.256 2117.26,236.108 2117.83,236.826 2118.4,236.552 2118.97,237.439 2119.54,237.957 2120.11,237.433 2120.67,236.99 2121.24,235.559 2121.81,235.255 2122.38,234.167 2122.95,236.019 2123.52,238.702 2124.08,235.185 2124.65,234.82 2125.22,235.412 2125.79,235.143 2126.36,236.007 2126.93,236.754 2127.49,236.28 2128.06,235.822 2128.63,234.543 2129.2,237.525 2129.77,236.962 2130.34,235.448 2130.9,235.105 2131.47,231.723 2132.04,233.877 2132.61,232.576 2133.18,233.278 2133.75,233.964 2134.31,232.636 2134.88,230.529 2135.45,228.627 2136.02,229.886 2136.59,228.851 2137.16,228.855 2137.72,227.959 2138.29,227.1 2138.86,227.445 2139.43,227.601 2140,228.809 2140.57,229.907 2141.13,231.109 2141.7,230.926 2142.27,230.879 2142.84,231.773 2143.41,231.024 2143.98,229.929 2144.54,228.034 2145.11,226.139 2145.68,226.429 2146.25,228.639 2146.82,227.839 2147.39,226.165 2147.95,226.355 2148.52,223.672 2149.09,223.151 2149.66,223.634 2150.23,226.197 2150.8,227.477 2151.36,225.798 2151.93,226.384 2152.5,227.15 2153.07,225.595 2153.64,226.269 2154.21,226.787 2154.77,226.175 2155.34,227.665 2155.91,228.176 2156.48,228.398 2157.05,228.8 2157.62,229.304 2158.18,229.593 2158.75,229.973 2159.32,232.113 2159.89,233.311 \"/>\n<path clip-path=\"url(#clip280)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip280)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip280)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip280)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.035 ± 0.021\n  with uncertainty of ± 0.001883643887494279\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01654 ± (0.00463531, 0.00448683) (MC)\n  95% confidence interval: [-4.0253, -4.00718]) (MC)\n  linear error propagation: -4.01596 ± 0.00459076\n  |δ_y| = |0.00253587| (≤ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.016538646016482, val_l = 0.008758112355488734, val_u = 0.009359984411646316)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip310\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip310)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip311\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip310)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip312\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1153.28 2211.02,1153.28 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1007.1 2211.02,1007.1 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,860.925 2211.02,860.925 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,714.749 2211.02,714.749 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,568.573 2211.02,568.573 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,422.396 2211.02,422.396 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,276.22 2211.02,276.22 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1153.28 365.751,1153.28 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1007.1 365.751,1007.1 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,860.925 365.751,860.925 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,714.749 365.751,714.749 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,568.573 365.751,568.573 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,422.396 365.751,422.396 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,276.22 365.751,276.22 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M298.909 1139.08 Q295.298 1139.08 293.469 1142.64 Q291.664 1146.18 291.664 1153.31 Q291.664 1160.42 293.469 1163.98 Q295.298 1167.53 298.909 1167.53 Q302.543 1167.53 304.349 1163.98 Q306.177 1160.42 306.177 1153.31 Q306.177 1146.18 304.349 1142.64 Q302.543 1139.08 298.909 1139.08 M298.909 1135.37 Q304.719 1135.37 307.775 1139.98 Q310.853 1144.56 310.853 1153.31 Q310.853 1162.04 307.775 1166.65 Q304.719 1171.23 298.909 1171.23 Q293.099 1171.23 290.02 1166.65 Q286.964 1162.04 286.964 1153.31 Q286.964 1144.56 290.02 1139.98 Q293.099 1135.37 298.909 1135.37 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M259.557 1020.45 L267.196 1020.45 L267.196 994.081 L258.886 995.747 L258.886 991.488 L267.15 989.821 L271.826 989.821 L271.826 1020.45 L279.465 1020.45 L279.465 1024.38 L259.557 1024.38 L259.557 1020.45 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M298.909 992.9 Q295.298 992.9 293.469 996.465 Q291.664 1000.01 291.664 1007.14 Q291.664 1014.24 293.469 1017.81 Q295.298 1021.35 298.909 1021.35 Q302.543 1021.35 304.349 1017.81 Q306.177 1014.24 306.177 1007.14 Q306.177 1000.01 304.349 996.465 Q302.543 992.9 298.909 992.9 M298.909 989.196 Q304.719 989.196 307.775 993.803 Q310.853 998.386 310.853 1007.14 Q310.853 1015.86 307.775 1020.47 Q304.719 1025.05 298.909 1025.05 Q293.099 1025.05 290.02 1020.47 Q286.964 1015.86 286.964 1007.14 Q286.964 998.386 290.02 993.803 Q293.099 989.196 298.909 989.196 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M262.775 874.27 L279.094 874.27 L279.094 878.205 L257.15 878.205 L257.15 874.27 Q259.812 871.515 264.395 866.886 Q269.002 862.233 270.182 860.89 Q272.428 858.367 273.307 856.631 Q274.21 854.872 274.21 853.182 Q274.21 850.428 272.266 848.691 Q270.344 846.955 267.242 846.955 Q265.043 846.955 262.59 847.719 Q260.159 848.483 257.381 850.034 L257.381 845.312 Q260.205 844.178 262.659 843.599 Q265.113 843.02 267.15 843.02 Q272.52 843.02 275.715 845.705 Q278.909 848.39 278.909 852.881 Q278.909 855.011 278.099 856.932 Q277.312 858.83 275.205 861.423 Q274.627 862.094 271.525 865.312 Q268.423 868.506 262.775 874.27 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M298.909 846.724 Q295.298 846.724 293.469 850.289 Q291.664 853.83 291.664 860.96 Q291.664 868.066 293.469 871.631 Q295.298 875.173 298.909 875.173 Q302.543 875.173 304.349 871.631 Q306.177 868.066 306.177 860.96 Q306.177 853.83 304.349 850.289 Q302.543 846.724 298.909 846.724 M298.909 843.02 Q304.719 843.02 307.775 847.627 Q310.853 852.21 310.853 860.96 Q310.853 869.687 307.775 874.293 Q304.719 878.876 298.909 878.876 Q293.099 878.876 290.02 874.293 Q286.964 869.687 286.964 860.96 Q286.964 852.21 290.02 847.627 Q293.099 843.02 298.909 843.02 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M272.914 713.395 Q276.27 714.112 278.145 716.381 Q280.043 718.649 280.043 721.983 Q280.043 727.098 276.525 729.899 Q273.006 732.7 266.525 732.7 Q264.349 732.7 262.034 732.26 Q259.742 731.844 257.289 730.987 L257.289 726.473 Q259.233 727.608 261.548 728.186 Q263.863 728.765 266.386 728.765 Q270.784 728.765 273.076 727.029 Q275.39 725.293 275.39 721.983 Q275.39 718.927 273.238 717.214 Q271.108 715.478 267.289 715.478 L263.261 715.478 L263.261 711.635 L267.474 711.635 Q270.923 711.635 272.752 710.27 Q274.58 708.881 274.58 706.288 Q274.58 703.626 272.682 702.214 Q270.807 700.779 267.289 700.779 Q265.367 700.779 263.168 701.196 Q260.969 701.612 258.33 702.492 L258.33 698.325 Q260.992 697.585 263.307 697.214 Q265.645 696.844 267.705 696.844 Q273.029 696.844 276.131 699.274 Q279.233 701.682 279.233 705.802 Q279.233 708.673 277.59 710.663 Q275.946 712.631 272.914 713.395 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M298.909 700.548 Q295.298 700.548 293.469 704.112 Q291.664 707.654 291.664 714.784 Q291.664 721.89 293.469 725.455 Q295.298 728.996 298.909 728.996 Q302.543 728.996 304.349 725.455 Q306.177 721.89 306.177 714.784 Q306.177 707.654 304.349 704.112 Q302.543 700.548 298.909 700.548 M298.909 696.844 Q304.719 696.844 307.775 701.45 Q310.853 706.034 310.853 714.784 Q310.853 723.51 307.775 728.117 Q304.719 732.7 298.909 732.7 Q293.099 732.7 290.02 728.117 Q286.964 723.51 286.964 714.784 Q286.964 706.034 290.02 701.45 Q293.099 696.844 298.909 696.844 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M271.594 555.367 L259.789 573.816 L271.594 573.816 L271.594 555.367 M270.367 551.293 L276.247 551.293 L276.247 573.816 L281.177 573.816 L281.177 577.705 L276.247 577.705 L276.247 585.853 L271.594 585.853 L271.594 577.705 L255.992 577.705 L255.992 573.191 L270.367 551.293 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M298.909 554.371 Q295.298 554.371 293.469 557.936 Q291.664 561.478 291.664 568.607 Q291.664 575.714 293.469 579.279 Q295.298 582.82 298.909 582.82 Q302.543 582.82 304.349 579.279 Q306.177 575.714 306.177 568.607 Q306.177 561.478 304.349 557.936 Q302.543 554.371 298.909 554.371 M298.909 550.668 Q304.719 550.668 307.775 555.274 Q310.853 559.857 310.853 568.607 Q310.853 577.334 307.775 581.941 Q304.719 586.524 298.909 586.524 Q293.099 586.524 290.02 581.941 Q286.964 577.334 286.964 568.607 Q286.964 559.857 290.02 555.274 Q293.099 550.668 298.909 550.668 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M258.793 405.116 L277.15 405.116 L277.15 409.052 L263.076 409.052 L263.076 417.524 Q264.094 417.176 265.113 417.014 Q266.131 416.829 267.15 416.829 Q272.937 416.829 276.316 420.001 Q279.696 423.172 279.696 428.588 Q279.696 434.167 276.224 437.269 Q272.752 440.348 266.432 440.348 Q264.256 440.348 261.988 439.977 Q259.742 439.607 257.335 438.866 L257.335 434.167 Q259.418 435.301 261.641 435.857 Q263.863 436.412 266.34 436.412 Q270.344 436.412 272.682 434.306 Q275.02 432.2 275.02 428.588 Q275.02 424.977 272.682 422.871 Q270.344 420.764 266.34 420.764 Q264.465 420.764 262.59 421.181 Q260.738 421.598 258.793 422.477 L258.793 405.116 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M298.909 408.195 Q295.298 408.195 293.469 411.76 Q291.664 415.301 291.664 422.431 Q291.664 429.538 293.469 433.102 Q295.298 436.644 298.909 436.644 Q302.543 436.644 304.349 433.102 Q306.177 429.538 306.177 422.431 Q306.177 415.301 304.349 411.76 Q302.543 408.195 298.909 408.195 M298.909 404.491 Q304.719 404.491 307.775 409.098 Q310.853 413.681 310.853 422.431 Q310.853 431.158 307.775 435.764 Q304.719 440.348 298.909 440.348 Q293.099 440.348 290.02 435.764 Q286.964 431.158 286.964 422.431 Q286.964 413.681 290.02 409.098 Q293.099 404.491 298.909 404.491 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M269.326 274.357 Q266.178 274.357 264.326 276.509 Q262.497 278.662 262.497 282.412 Q262.497 286.139 264.326 288.315 Q266.178 290.468 269.326 290.468 Q272.474 290.468 274.303 288.315 Q276.154 286.139 276.154 282.412 Q276.154 278.662 274.303 276.509 Q272.474 274.357 269.326 274.357 M278.608 259.704 L278.608 263.963 Q276.849 263.13 275.043 262.69 Q273.261 262.25 271.502 262.25 Q266.872 262.25 264.418 265.375 Q261.988 268.5 261.641 274.82 Q263.006 272.806 265.066 271.741 Q267.127 270.653 269.603 270.653 Q274.812 270.653 277.821 273.824 Q280.853 276.972 280.853 282.412 Q280.853 287.736 277.705 290.954 Q274.557 294.171 269.326 294.171 Q263.33 294.171 260.159 289.588 Q256.988 284.982 256.988 276.255 Q256.988 268.06 260.877 263.199 Q264.766 258.315 271.316 258.315 Q273.076 258.315 274.858 258.662 Q276.664 259.01 278.608 259.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M298.909 262.019 Q295.298 262.019 293.469 265.584 Q291.664 269.125 291.664 276.255 Q291.664 283.361 293.469 286.926 Q295.298 290.468 298.909 290.468 Q302.543 290.468 304.349 286.926 Q306.177 283.361 306.177 276.255 Q306.177 269.125 304.349 265.584 Q302.543 262.019 298.909 262.019 M298.909 258.315 Q304.719 258.315 307.775 262.922 Q310.853 267.505 310.853 276.255 Q310.853 284.982 307.775 289.588 Q304.719 294.171 298.909 294.171 Q293.099 294.171 290.02 289.588 Q286.964 284.982 286.964 276.255 Q286.964 267.505 290.02 262.922 Q293.099 258.315 298.909 258.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip312)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1045.57 400.199,946.621 400.786,855.831 401.372,772.653 401.958,696.579 402.545,627.141 403.131,563.904 403.718,506.465 404.304,546.863 404.891,495.496 405.477,449.106 406.063,407.373 406.65,369.994 407.236,336.688 407.823,307.19 408.409,281.252 408.995,258.639 409.582,239.133 410.168,273.74 410.755,257.985 411.341,244.832 411.927,234.102 412.514,225.629 413.1,219.895 413.687,249.474 414.273,246.432 414.86,244.625 415.446,272.29 416.032,273.016 416.619,275.518 417.205,279.329 417.792,284.08 418.378,289.556 418.964,296.595 419.551,321.686 420.137,345.352 420.724,367.952 421.31,390.141 421.896,412.147 422.483,446.726 423.069,458.083 423.656,469.313 424.242,481.462 424.829,512.674 425.415,525.068 426.001,536.904 426.588,557.301 427.174,577.077 427.761,588.073 428.347,620.697 428.933,630.925 429.52,654.372 430.106,670.419 430.693,680.836 431.279,691.102 431.865,712.787 432.452,722.938 433.038,732.866 433.625,756.863 434.211,770.595 434.798,783.402 435.384,801.431 435.97,830.583 436.557,846.521 437.143,857.872 437.73,865.149 438.316,872.415 438.902,879.652 439.489,890.545 440.075,900.949 440.662,911.279 441.248,927.175 441.835,933.331 442.421,939.44 443.007,945.511 443.594,957.137 444.18,968.56 444.767,974.075 445.353,989.753 445.939,994.542 446.526,1004.44 447.112,1011.74 447.699,1021.23 448.285,1025.65 448.871,1032.16 449.458,1040.79 450.044,1049.05 450.631,1055.1 451.217,1062.87 451.804,1072.72 452.39,1077.97 452.976,1083.08 453.563,1090.06 454.149,1096.87 454.736,1099.52 455.322,1104.1 455.908,1110.45 456.495,1116.5 457.081,1118.59 457.668,1122.4 458.254,1126.26 458.84,1135.58 459.427,1139.11 460.013,1142.61 460.6,1149.47 461.186,1156.19 461.773,1159.13 462.359,1160.51 462.945,1163.41 463.532,1169.38 464.118,1176.61 464.705,1176.07 465.291,1178.76 465.877,1181.41 466.464,1181.05 467.05,1186.76 467.637,1187.59 468.223,1194.64 468.809,1198.13 469.396,1203.22 469.982,1203.63 470.569,1206.63 471.155,1211.15 471.742,1209.79 472.328,1211.21 472.914,1212.84 473.501,1211.51 474.087,1211.53 474.674,1210.41 475.26,1212.34 475.846,1214.04 476.433,1214.18 477.019,1214.53 477.606,1214.79 478.192,1215.33 478.778,1215.95 479.365,1216.07 479.951,1217.73 480.538,1217.97 481.124,1222.43 481.711,1223.81 482.297,1223.67 482.883,1223.73 483.47,1226.36 484.056,1228.84 484.643,1228.75 485.229,1227.44 485.815,1227.24 486.402,1229.98 486.988,1229.84 487.575,1231.1 488.161,1236.19 488.748,1235.69 489.334,1235.27 489.92,1234.79 490.507,1234.93 491.093,1237.42 491.68,1238.45 492.266,1240.36 492.852,1241.2 493.439,1241.89 494.025,1242.95 494.612,1241.27 495.198,1240.76 495.784,1242.7 496.371,1242.12 496.957,1241.67 497.544,1241.21 498.13,1243.45 498.717,1245.48 499.303,1247.17 499.889,1246.14 500.476,1244.03 501.062,1243.5 501.649,1244.06 502.235,1243.45 502.821,1245.49 503.408,1245.93 503.994,1245.19 504.581,1245.5 505.167,1243.62 505.753,1245.6 506.34,1246.09 506.926,1242.59 507.513,1244.49 508.099,1242.58 508.686,1242.18 509.272,1243.06 509.858,1242.53 510.445,1244.82 511.031,1245.35 511.618,1246.89 512.204,1248.62 512.79,1250.53 513.377,1247.35 513.963,1247.72 514.55,1248.1 515.136,1247.29 515.722,1247.87 516.309,1247.18 516.895,1247.44 517.482,1247.98 518.068,1246.06 518.655,1244.12 519.241,1243.59 519.827,1241.79 520.414,1244 521,1244.58 521.587,1245.25 522.173,1243.51 522.759,1241.52 523.346,1243.43 523.932,1244.09 524.519,1245.83 525.105,1246.52 525.691,1245.58 526.278,1243.78 526.864,1244.22 527.451,1243.48 528.037,1245.34 528.624,1243.33 529.21,1242.74 529.796,1245.73 530.383,1240.96 530.969,1239.52 531.556,1239.19 532.142,1238.57 532.728,1241.99 533.315,1242.65 533.901,1243.39 534.488,1245.28 535.074,1245.53 535.661,1243.46 536.247,1242.73 536.833,1243.25 537.42,1243.93 538.006,1244.4 538.593,1243.64 539.179,1245.28 539.765,1240.94 540.352,1241.31 540.938,1240.47 541.525,1239.79 542.111,1237.86 542.697,1237.47 543.284,1237.21 543.87,1237.99 544.457,1238.81 545.043,1236.88 545.63,1236.52 546.216,1233.79 546.802,1233.85 547.389,1233.62 547.975,1234.43 548.562,1233.07 549.148,1233.91 549.734,1230.97 550.321,1230.77 550.907,1229.31 551.494,1230.29 552.08,1230.32 552.666,1230.18 553.253,1231.46 553.839,1232.33 554.426,1231.21 555.012,1236.99 555.599,1235.32 556.185,1235.1 556.771,1236.15 557.358,1237.1 557.944,1240.36 558.531,1241.13 559.117,1239.15 559.703,1237.62 560.29,1237.09 560.876,1237.71 561.463,1235.98 562.049,1236.57 562.635,1237.3 563.222,1239.46 563.808,1240.12 564.395,1240.48 564.981,1238.63 565.568,1240.33 566.154,1236.11 566.74,1235.78 567.327,1237.64 567.913,1239.49 568.5,1241.14 569.086,1245.42 569.672,1239.57 570.259,1237.42 570.845,1234.39 571.432,1235.21 572.018,1239.57 572.605,1237.72 573.191,1239.54 573.777,1238.97 574.364,1240.73 574.95,1236.42 575.537,1237.15 576.123,1236.33 576.709,1236.99 577.296,1235.26 577.882,1233.44 578.469,1234.13 579.055,1232.47 579.641,1232.03 580.228,1231.73 580.814,1232.75 581.401,1231.33 581.987,1231.18 582.574,1235.48 583.16,1236.28 583.746,1236.92 584.333,1236.37 584.919,1235.8 585.506,1233.99 586.092,1233.38 586.678,1234 587.265,1235.79 587.851,1237.61 588.438,1239.32 589.024,1238.58 589.61,1237.92 590.197,1238.38 590.783,1237.48 591.37,1236.78 591.956,1236.11 592.543,1236.69 593.129,1234.62 593.715,1232.99 594.302,1233.8 594.888,1234.51 595.475,1236.39 596.061,1232.95 596.647,1234.75 597.234,1233.94 597.82,1234.67 598.407,1232.92 598.993,1233.53 599.579,1231.86 600.166,1233.72 600.752,1232.97 601.339,1231.14 601.925,1232.01 602.512,1231.54 603.098,1232.19 603.684,1229.14 604.271,1228.72 604.857,1229.33 605.444,1227.87 606.03,1227.51 606.616,1227.39 607.203,1228.27 607.789,1226.74 608.376,1227.67 608.962,1227.6 609.548,1228.6 610.135,1227.03 610.721,1228.09 611.308,1226.87 611.894,1224.45 612.481,1223.19 613.067,1223.26 613.653,1225.49 614.24,1224.08 614.826,1222.88 615.413,1223.23 615.999,1224.09 616.585,1225.02 617.172,1223.68 617.758,1224.53 618.345,1223.13 618.931,1225.56 619.518,1222.6 620.104,1222.41 620.69,1222.34 621.277,1222.2 621.863,1223.1 622.45,1221.69 623.036,1221.76 623.622,1220.68 624.209,1220.49 624.795,1221.78 625.382,1220.52 625.968,1221.64 626.554,1220.3 627.141,1219.16 627.727,1220.59 628.314,1219.29 628.9,1218.63 629.487,1218.82 630.073,1218.93 630.659,1220.09 631.246,1221.14 631.832,1220.8 632.419,1222.2 633.005,1223.19 633.591,1223.06 634.178,1222.81 634.764,1220.36 635.351,1221.67 635.937,1221.65 636.523,1225.32 637.11,1226.11 637.696,1222.18 638.283,1225.44 638.869,1226.36 639.456,1228.36 640.042,1227.64 640.628,1228.47 641.215,1228.06 641.801,1227.6 642.388,1228.3 642.974,1229.12 643.56,1229.94 644.147,1228.51 644.733,1228.1 645.32,1229 645.906,1229.79 646.492,1229.12 647.079,1227.38 647.665,1224.52 648.252,1224.21 648.838,1222.79 649.425,1222.45 650.011,1222.35 650.597,1222.44 651.184,1220.75 651.77,1221.83 652.357,1221.67 652.943,1224.15 653.529,1222.69 654.116,1220.04 654.702,1222.42 655.289,1222.29 655.875,1223.3 656.462,1224.18 657.048,1225.16 657.634,1225.03 658.221,1221.26 658.807,1220.01 659.394,1218.8 659.98,1217.55 660.566,1216.36 661.153,1218.92 661.739,1218.78 662.326,1220.2 662.912,1220.01 663.498,1221.18 664.085,1223.43 664.671,1225.54 665.258,1226.35 665.844,1224.77 666.431,1225.59 667.017,1225.17 667.603,1222.78 668.19,1219.96 668.776,1220.88 669.363,1219.34 669.949,1220.62 670.535,1218.98 671.122,1219.02 671.708,1219.12 672.295,1217.94 672.881,1217.99 673.467,1218.12 674.054,1219.32 674.64,1219.34 675.227,1219.42 675.813,1219.49 676.4,1220.56 676.986,1219.47 677.572,1218.29 678.159,1217.1 678.745,1218.22 679.332,1219.5 679.918,1219.47 680.504,1219.65 681.091,1220.38 681.677,1220.34 682.264,1217.82 682.85,1217.81 683.436,1221.42 684.023,1220.22 684.609,1219.06 685.196,1219.14 685.782,1219.89 686.369,1221.23 686.955,1221.09 687.541,1218.49 688.128,1219.37 688.714,1218.33 689.301,1217.29 689.887,1217.36 690.473,1214.2 691.06,1215.74 691.646,1216.98 692.233,1217.04 692.819,1217.15 693.405,1219.69 693.992,1220.88 694.578,1222.04 695.165,1219.38 695.751,1220.52 696.338,1224 696.924,1222.22 697.51,1221.74 698.097,1219.18 698.683,1217.85 699.27,1218.83 699.856,1216.41 700.442,1216.52 701.029,1216.73 701.615,1216.57 702.202,1214.29 702.788,1215.61 703.375,1216.86 703.961,1214.62 704.547,1211.05 705.134,1213.9 705.72,1216.47 706.307,1217.67 706.893,1216.36 707.479,1216.26 708.066,1216.43 708.652,1216.43 709.239,1216.56 709.825,1217.93 710.411,1220.25 710.998,1221.26 711.584,1221.07 712.171,1219.89 712.757,1216.02 713.344,1216.16 713.93,1214.97 714.516,1214.01 715.103,1213.07 715.689,1214.51 716.276,1215.84 716.862,1218.65 717.448,1218.44 718.035,1219.84 718.621,1217.43 719.208,1216.26 719.794,1218.49 720.38,1218.22 720.967,1218.25 721.553,1217.91 722.14,1217.56 722.726,1218.8 723.313,1218.85 723.899,1221.02 724.485,1222.14 725.072,1221.72 725.658,1221.49 726.245,1222.34 726.831,1220.62 727.417,1220.54 728.004,1220.45 728.59,1222.72 729.177,1224.77 729.763,1225.72 730.349,1225.41 730.936,1223.64 731.522,1224.59 732.109,1223.1 732.695,1221.56 733.282,1222.33 733.868,1223.17 734.454,1225.13 735.041,1224.53 735.627,1225.18 736.214,1225.99 736.8,1229.18 737.386,1227.28 737.973,1225.29 738.559,1222.42 739.146,1220.67 739.732,1217.87 740.318,1220.07 740.905,1219.63 741.491,1217.01 742.078,1216.77 742.664,1216.73 743.251,1215.47 743.837,1212.94 744.423,1208.35 745.01,1210.01 745.596,1208.07 746.183,1211.74 746.769,1211.87 747.355,1211.01 747.942,1211.22 748.528,1210.28 749.115,1213.16 749.701,1213.1 750.288,1207.41 750.874,1206.45 751.46,1206.88 752.047,1207.15 752.633,1206.21 753.22,1210.5 753.806,1208.42 754.392,1207.6 754.979,1207.92 755.565,1208.6 756.152,1210.51 756.738,1209.65 757.324,1211.28 757.911,1211.51 758.497,1212.73 759.084,1215.33 759.67,1217.71 760.257,1217.59 760.843,1218.69 761.429,1217.44 762.016,1217.34 762.602,1217.2 763.189,1217.19 763.775,1220.7 764.361,1221.61 764.948,1220.27 765.534,1220.13 766.121,1221.31 766.707,1222.1 767.293,1221.65 767.88,1222.66 768.466,1221.09 769.053,1220.77 769.639,1220.36 770.226,1220.15 770.812,1218.89 771.398,1218.55 771.985,1217.02 772.571,1216.73 773.158,1216.42 773.744,1216.48 774.33,1216.41 774.917,1218.62 775.503,1218.52 776.09,1218.17 776.676,1217.83 777.262,1217.38 777.849,1222.91 778.435,1223.8 779.022,1223.23 779.608,1222.64 780.195,1223.44 780.781,1219.31 781.367,1219.16 781.954,1216.73 782.54,1216.72 783.127,1216.7 783.713,1217.5 784.299,1214.93 784.886,1218.64 785.472,1218.38 786.059,1218.23 786.645,1219.26 787.232,1219.09 787.818,1217.59 788.404,1216.38 788.991,1216.18 789.577,1214.92 790.164,1216.27 790.75,1216.2 791.336,1216.06 791.923,1214.62 792.509,1214.74 793.096,1214.97 793.682,1213.75 794.268,1215.06 794.855,1216.07 795.441,1218.64 796.028,1218.44 796.614,1215.71 797.201,1214.58 797.787,1215.52 798.373,1217.87 798.96,1216.36 799.546,1218.85 800.133,1219.82 800.719,1219.97 801.305,1217.19 801.892,1218.21 802.478,1217.82 803.065,1217.42 803.651,1213.85 804.237,1212.97 804.824,1209.22 805.41,1210.94 805.997,1209.84 806.583,1211.18 807.17,1207.67 807.756,1208.2 808.342,1209.88 808.929,1210.1 809.515,1210.28 810.102,1211.51 810.688,1209.39 811.274,1210.6 811.861,1210.7 812.447,1211.14 813.034,1211.52 813.62,1210.13 814.206,1209.22 814.793,1212.01 815.379,1212.31 815.966,1211.39 816.552,1211.35 817.139,1212.59 817.725,1216.15 818.311,1215.99 818.898,1213.45 819.484,1212.22 820.071,1212.34 820.657,1209.86 821.243,1210.27 821.83,1209.28 822.416,1211.57 823.003,1211.85 823.589,1211.9 824.175,1210.8 824.762,1211.14 825.348,1208.72 825.935,1209.21 826.521,1210.73 827.108,1212.2 827.694,1213.41 828.28,1213.49 828.867,1211.13 829.453,1210 830.04,1208.79 830.626,1211.53 831.212,1211.39 831.799,1210.55 832.385,1209.55 832.972,1211.23 833.558,1213.69 834.145,1212.57 834.731,1213.88 835.317,1212.99 835.904,1213.29 836.49,1213.53 837.077,1211.14 837.663,1212.62 838.249,1213.91 838.836,1212.67 839.422,1212.5 840.009,1212.56 840.595,1210.45 841.181,1211.59 841.768,1214.02 842.354,1216.39 842.941,1216.36 843.527,1218.57 844.114,1219.59 844.7,1219.18 845.286,1219.95 845.873,1219.63 846.459,1221.78 847.046,1220.1 847.632,1221.13 848.218,1222.02 848.805,1219.26 849.391,1220.15 849.978,1219.87 850.564,1218.23 851.15,1216.64 851.737,1215.64 852.323,1212.15 852.91,1210.88 853.496,1209.95 854.083,1210.18 854.669,1210.32 855.255,1210.71 855.842,1210.62 856.428,1213.22 857.015,1217.97 857.601,1218.04 858.187,1221.31 858.774,1224.4 859.36,1224.7 859.947,1224.08 860.533,1222.51 861.119,1222.26 861.706,1221.94 862.292,1217.74 862.879,1216.38 863.465,1216.33 864.052,1216.4 864.638,1216.34 865.224,1219.76 865.811,1221.96 866.397,1221.59 866.984,1223.4 867.57,1222.95 868.156,1221.13 868.743,1222.98 869.329,1224.53 869.916,1225.06 870.502,1223.28 871.089,1221.65 871.675,1221.61 872.261,1223.47 872.848,1222.01 873.434,1219.12 874.021,1217.55 874.607,1218.47 875.193,1219.36 875.78,1220.25 876.366,1217.53 876.953,1217.57 877.539,1216.07 878.125,1215.81 878.712,1216.76 879.298,1219.88 879.885,1220.57 880.471,1220.32 881.058,1217.54 881.644,1220.95 882.23,1221.78 882.817,1221.55 883.403,1219.83 883.99,1215.98 884.576,1215.84 885.162,1219.33 885.749,1217.79 886.335,1217.34 886.922,1214.59 887.508,1216.6 888.094,1212.7 888.681,1211.51 889.267,1212.6 889.854,1208.98 890.44,1210.34 891.027,1211.82 891.613,1212.18 892.199,1212.44 892.786,1213.59 893.372,1213.58 893.959,1211.36 894.545,1211.52 895.131,1210.47 895.718,1210.9 896.304,1209.86 896.891,1209.94 897.477,1210.12 898.063,1208.05 898.65,1207.07 899.236,1207.47 899.823,1210.04 900.409,1211.65 900.996,1211.4 901.582,1209.03 902.168,1208.03 902.755,1208.26 903.341,1209.76 903.928,1209.86 904.514,1210.09 905.1,1212.53 905.687,1210.35 906.273,1211.7 906.86,1212.77 907.446,1211.83 908.032,1211.97 908.619,1215.36 909.205,1212.65 909.792,1209.15 910.378,1211.95 910.965,1213.3 911.551,1212.03 912.137,1208.56 912.724,1211.38 913.31,1209.25 913.897,1211.22 914.483,1213.79 915.069,1213.91 915.656,1212.71 916.242,1212.84 916.829,1212.86 917.415,1212.91 918.002,1212.71 918.588,1212.42 919.174,1211.16 919.761,1210.02 920.347,1207.92 920.934,1208.16 921.52,1207.41 922.106,1208.76 922.693,1209.2 923.279,1209.38 923.866,1208.74 924.452,1205.6 925.038,1208.43 925.625,1208.89 926.211,1208.19 926.798,1208.48 927.384,1208.71 927.971,1208.94 928.557,1206.64 929.143,1209.38 929.73,1212.38 930.316,1211.19 930.903,1207.71 931.489,1207.15 932.075,1207.5 932.662,1208.97 933.248,1211.84 933.835,1213.17 934.421,1214.14 935.007,1212.9 935.594,1212.98 936.18,1212.88 936.767,1214.13 937.353,1215.24 937.94,1215.52 938.526,1215.57 939.112,1214.39 939.699,1213.08 940.285,1213.11 940.872,1214.42 941.458,1213.17 942.044,1213.06 942.631,1213.13 943.217,1213.17 943.804,1211.69 944.39,1211.91 944.976,1213.07 945.563,1213.14 946.149,1214.43 946.736,1215.59 947.322,1215.32 947.909,1218.69 948.495,1219.58 949.081,1219.12 949.668,1217.91 950.254,1217.93 950.841,1217.69 951.427,1217.18 952.013,1219.23 952.6,1222.36 953.186,1220.42 953.773,1220.09 954.359,1217.22 954.945,1219.16 955.532,1217.63 956.118,1216.26 956.705,1216.07 957.291,1215.94 957.878,1215.9 958.464,1215.99 959.05,1214.49 959.637,1215.55 960.223,1218.09 960.81,1216.72 961.396,1215.42 961.982,1214.31 962.569,1214.26 963.155,1213.03 963.742,1214.25 964.328,1213.99 964.915,1216.22 965.501,1215.88 966.087,1214.66 966.674,1214.28 967.26,1212.85 967.847,1211.75 968.433,1213.14 969.019,1210.65 969.606,1212.01 970.192,1211.83 970.779,1211.8 971.365,1214.22 971.951,1214.07 972.538,1212.83 973.124,1213.92 973.711,1215.09 974.297,1217.57 974.884,1218.57 975.47,1218.37 976.056,1218.01 976.643,1216.31 977.229,1214.83 977.816,1214.5 978.402,1214.26 978.988,1213.26 979.575,1212.22 980.161,1213.61 980.748,1213.25 981.334,1212.05 981.92,1211.95 982.507,1211.84 983.093,1211.89 983.68,1208.25 984.266,1208.35 984.853,1209.6 985.439,1208.7 986.025,1207.59 986.612,1207.98 987.198,1208.28 987.785,1208.23 988.371,1209.41 988.957,1209.46 989.544,1210.83 990.13,1213.38 990.717,1213.43 991.303,1210.99 991.889,1213.46 992.476,1214.56 993.062,1214.45 993.649,1215.62 994.235,1213.09 994.822,1211.95 995.408,1209.74 995.994,1210.05 996.581,1211.27 997.167,1212.6 997.754,1209.01 998.34,1208.24 998.926,1208.61 999.513,1206.4 1000.1,1208.01 1000.69,1206.06 1001.27,1207.67 1001.86,1208.04 1002.44,1208.35 1003.03,1207.26 1003.62,1207.62 1004.2,1208.98 1004.79,1210.65 1005.38,1210.89 1005.96,1213.44 1006.55,1217.19 1007.14,1219.21 1007.72,1218.88 1008.31,1216.41 1008.9,1213.93 1009.48,1212.64 1010.07,1213.85 1010.65,1214.94 1011.24,1212.32 1011.83,1210.09 1012.41,1209.06 1013,1210.41 1013.59,1210.57 1014.17,1212.96 1014.76,1213.89 1015.35,1211.58 1015.93,1210.5 1016.52,1210.33 1017.11,1212.81 1017.69,1210.55 1018.28,1212.99 1018.86,1212.91 1019.45,1213.98 1020.04,1216.15 1020.62,1214.78 1021.21,1212.13 1021.8,1212.04 1022.38,1212.25 1022.97,1213.46 1023.56,1209.91 1024.14,1211.45 1024.73,1207.83 1025.32,1207 1025.9,1208.41 1026.49,1208.53 1027.07,1208.91 1027.66,1207.8 1028.25,1209.19 1028.83,1206.78 1029.42,1207.02 1030.01,1208.34 1030.59,1208.54 1031.18,1209.95 1031.77,1212.8 1032.35,1214.93 1032.94,1213.59 1033.52,1212.34 1034.11,1212.34 1034.7,1211.37 1035.28,1213.55 1035.87,1213.6 1036.46,1213.52 1037.04,1215.77 1037.63,1217.84 1038.22,1217.38 1038.8,1216.92 1039.39,1215.4 1039.98,1217.74 1040.56,1220.21 1041.15,1218.47 1041.73,1215.9 1042.32,1214.8 1042.91,1214.8 1043.49,1213.7 1044.08,1211.04 1044.67,1210.14 1045.25,1211.53 1045.84,1211.33 1046.43,1212.68 1047.01,1212.83 1047.6,1212.59 1048.19,1211.47 1048.77,1212.65 1049.36,1213.98 1049.94,1213.78 1050.53,1213.58 1051.12,1213.58 1051.7,1211.22 1052.29,1212.43 1052.88,1212.6 1053.46,1212.55 1054.05,1213.88 1054.64,1211.62 1055.22,1211.67 1055.81,1211.74 1056.39,1213.14 1056.98,1214.15 1057.57,1215.11 1058.15,1214.8 1058.74,1213.64 1059.33,1214.69 1059.91,1214.43 1060.5,1213.1 1061.09,1213.19 1061.67,1211.83 1062.26,1213.19 1062.85,1212.96 1063.43,1212.88 1064.02,1211.38 1064.6,1211.45 1065.19,1211.54 1065.78,1213.84 1066.36,1213.71 1066.95,1214.85 1067.54,1212.18 1068.12,1212.35 1068.71,1212.36 1069.3,1212.45 1069.88,1216.11 1070.47,1218.44 1071.06,1218.15 1071.64,1220.51 1072.23,1219.93 1072.81,1219.79 1073.4,1220.5 1073.99,1220.11 1074.57,1218.49 1075.16,1216.94 1075.75,1217.94 1076.33,1218.98 1076.92,1218.68 1077.51,1213.39 1078.09,1214.46 1078.68,1215.52 1079.26,1215.27 1079.85,1213.99 1080.44,1214.04 1081.02,1213.99 1081.61,1212.52 1082.2,1213.52 1082.78,1212.27 1083.37,1209.74 1083.96,1211.16 1084.54,1211.03 1085.13,1208.83 1085.72,1211.3 1086.3,1211.61 1086.89,1213.04 1087.47,1214.06 1088.06,1212.7 1088.65,1212.56 1089.23,1210.39 1089.82,1212.94 1090.41,1211.72 1090.99,1212.7 1091.58,1212.52 1092.17,1212.55 1092.75,1212.51 1093.34,1213.5 1093.93,1215.65 1094.51,1216.82 1095.1,1215.5 1095.68,1216.79 1096.27,1216.57 1096.86,1213.99 1097.44,1213.89 1098.03,1212.81 1098.62,1211.57 1099.2,1211.67 1099.79,1212.7 1100.38,1211.49 1100.96,1212.46 1101.55,1211.3 1102.14,1211.41 1102.72,1213.7 1103.31,1215.09 1103.89,1213.66 1104.48,1214.62 1105.07,1214.55 1105.65,1215.69 1106.24,1211.74 1106.83,1213 1107.41,1211.57 1108,1211.48 1108.59,1212.73 1109.17,1210.37 1109.76,1207.98 1110.34,1210.84 1110.93,1213.55 1111.52,1215.79 1112.1,1216.97 1112.69,1215.71 1113.28,1214.29 1113.86,1210.73 1114.45,1209.57 1115.04,1210.91 1115.62,1212.31 1116.21,1213.49 1116.8,1214.77 1117.38,1213.48 1117.97,1214.65 1118.55,1213.24 1119.14,1213.08 1119.73,1213.01 1120.31,1209.28 1120.9,1210.49 1121.49,1210.45 1122.07,1210.51 1122.66,1211.71 1123.25,1212.91 1123.83,1211.93 1124.42,1214.13 1125.01,1214.27 1125.59,1213.1 1126.18,1214.43 1126.76,1216.71 1127.35,1216.45 1127.94,1213.81 1128.52,1210.24 1129.11,1212.89 1129.7,1211.83 1130.28,1213.13 1130.87,1212.85 1131.46,1213.74 1132.04,1210.99 1132.63,1209.8 1133.21,1211.4 1133.8,1211.77 1134.39,1213.21 1134.97,1212.02 1135.56,1213.16 1136.15,1209.56 1136.73,1207.43 1137.32,1207.69 1137.91,1206.61 1138.49,1205.68 1139.08,1204.56 1139.67,1206.13 1140.25,1205.36 1140.84,1207.04 1141.42,1207.61 1142.01,1209.08 1142.6,1209.29 1143.18,1209.39 1143.77,1213.25 1144.36,1213.25 1144.94,1213.33 1145.53,1214.23 1146.12,1214.3 1146.7,1213.02 1147.29,1211.87 1147.88,1215.57 1148.46,1215.47 1149.05,1213.99 1149.63,1213.83 1150.22,1215 1150.81,1214.66 1151.39,1215.79 1151.98,1214.36 1152.57,1216.61 1153.15,1212.86 1153.74,1212.89 1154.33,1210.64 1154.91,1208.23 1155.5,1207.47 1156.09,1210.14 1156.67,1210.26 1157.26,1212.79 1157.84,1212.86 1158.43,1212.96 1159.02,1213.1 1159.6,1215.37 1160.19,1217.62 1160.78,1213.77 1161.36,1217.12 1161.95,1218.03 1162.54,1218.79 1163.12,1219.76 1163.71,1219.52 1164.29,1219.31 1164.88,1217.81 1165.47,1216.29 1166.05,1218.48 1166.64,1218.11 1167.23,1219.09 1167.81,1217.44 1168.4,1214.86 1168.99,1213.61 1169.57,1213.52 1170.16,1212.46 1170.75,1213.76 1171.33,1213.74 1171.92,1212.41 1172.5,1214.84 1173.09,1214.67 1173.68,1215.58 1174.26,1215.59 1174.85,1211.74 1175.44,1210.28 1176.02,1209.12 1176.61,1212.94 1177.2,1214.04 1177.78,1212.6 1178.37,1213.98 1178.96,1212.68 1179.54,1211.46 1180.13,1211.73 1180.71,1210.55 1181.3,1210.65 1181.89,1213.11 1182.47,1210.83 1183.06,1208.58 1183.65,1211.34 1184.23,1213.84 1184.82,1212.55 1185.41,1213.73 1185.99,1213.36 1186.58,1213.19 1187.16,1213.09 1187.75,1214.38 1188.34,1214.46 1188.92,1219 1189.51,1218.5 1190.1,1217.07 1190.68,1214.38 1191.27,1212.87 1191.86,1212.85 1192.44,1211.46 1193.03,1211.62 1193.62,1212.71 1194.2,1212.7 1194.79,1212.6 1195.37,1210.37 1195.96,1206.85 1196.55,1210.63 1197.13,1210.67 1197.72,1210.74 1198.31,1212.18 1198.89,1213.57 1199.48,1212.34 1200.07,1214.76 1200.65,1213.34 1201.24,1212.13 1201.83,1211.94 1202.41,1213.35 1203,1213.08 1203.58,1213.07 1204.17,1210.83 1204.76,1209.66 1205.34,1209.71 1205.93,1209.73 1206.52,1209.9 1207.1,1209.88 1207.69,1209.99 1208.28,1210.09 1208.86,1207.59 1209.45,1204.5 1210.03,1205.87 1210.62,1208.6 1211.21,1209.82 1211.79,1208.6 1212.38,1209.19 1212.97,1211.35 1213.55,1210.1 1214.14,1212.56 1214.73,1212.43 1215.31,1212.67 1215.9,1211.02 1216.49,1211.2 1217.07,1210.17 1217.66,1210.29 1218.24,1210.48 1218.83,1211.68 1219.42,1210.64 1220,1208.22 1220.59,1208.21 1221.18,1208.38 1221.76,1207.25 1222.35,1207.33 1222.94,1207.46 1223.52,1205.07 1224.11,1204.28 1224.7,1204.39 1225.28,1202.72 1225.87,1205.52 1226.45,1205.64 1227.04,1207.02 1227.63,1207.35 1228.21,1206.02 1228.8,1205.02 1229.39,1205.5 1229.97,1205.8 1230.56,1206.05 1231.15,1206.51 1231.73,1206.74 1232.32,1207.17 1232.91,1206.07 1233.49,1205.39 1234.08,1206.12 1234.66,1208.64 1235.25,1207.87 1235.84,1207.96 1236.42,1208.18 1237.01,1208.18 1237.6,1209.84 1238.18,1210.21 1238.77,1210.41 1239.36,1212.94 1239.94,1212.84 1240.53,1211.85 1241.11,1209.62 1241.7,1206.27 1242.29,1206.21 1242.87,1208.95 1243.46,1208.98 1244.05,1208.26 1244.63,1207.28 1245.22,1207.96 1245.81,1209.43 1246.39,1208.48 1246.98,1208.52 1247.57,1208.63 1248.15,1209.92 1248.74,1211.24 1249.32,1210.31 1249.91,1210.51 1250.5,1209.21 1251.08,1211.64 1251.67,1209.46 1252.26,1207.48 1252.84,1209.17 1253.43,1211.36 1254.02,1210.26 1254.6,1210.37 1255.19,1210.27 1255.78,1212.93 1256.36,1215.06 1256.95,1213.79 1257.53,1211.22 1258.12,1211.19 1258.71,1209.96 1259.29,1210.21 1259.88,1209.06 1260.47,1211.55 1261.05,1211.91 1261.64,1212.19 1262.23,1214.64 1262.81,1214.68 1263.4,1213.41 1263.98,1212.04 1264.57,1211.9 1265.16,1210.62 1265.74,1210.82 1266.33,1210.77 1266.92,1209.66 1267.5,1212 1268.09,1210.77 1268.68,1211.84 1269.26,1212.2 1269.85,1211.06 1270.44,1212.46 1271.02,1209.97 1271.61,1209.75 1272.19,1211.05 1272.78,1212.2 1273.37,1211.09 1273.95,1209.89 1274.54,1210.01 1275.13,1211.28 1275.71,1212.48 1276.3,1212.64 1276.89,1211.48 1277.47,1214.03 1278.06,1213.68 1278.65,1214.81 1279.23,1215.83 1279.82,1215.67 1280.4,1213.14 1280.99,1213.28 1281.58,1213.24 1282.16,1215.49 1282.75,1216.38 1283.34,1214.99 1283.92,1214.76 1284.51,1214.88 1285.1,1216.07 1285.68,1214.58 1286.27,1214.77 1286.86,1215.7 1287.44,1221.39 1288.03,1220.77 1288.61,1219.05 1289.2,1217.51 1289.79,1220.69 1290.37,1221.45 1290.96,1218.76 1291.55,1217.23 1292.13,1215.85 1292.72,1214.69 1293.31,1214.52 1293.89,1216.83 1294.48,1214.21 1295.06,1214.13 1295.65,1215.25 1296.24,1216.12 1296.82,1216.13 1297.41,1215.87 1298,1217.89 1298.58,1216.35 1299.17,1214.89 1299.76,1211.28 1300.34,1210.12 1300.93,1210.34 1301.52,1210.5 1302.1,1212 1302.69,1210.62 1303.27,1211.11 1303.86,1211.41 1304.45,1211.43 1305.03,1210.55 1305.62,1208.25 1306.21,1207.4 1306.79,1207.7 1307.38,1209.3 1307.97,1208.12 1308.55,1208.34 1309.14,1208.42 1309.73,1209.83 1310.31,1210.97 1310.9,1211.14 1311.48,1210.26 1312.07,1211.52 1312.66,1210.47 1313.24,1208.4 1313.83,1210.93 1314.42,1211 1315,1212.12 1315.59,1213.61 1316.18,1215.86 1316.76,1216.86 1317.35,1217.57 1317.93,1215.85 1318.52,1213.05 1319.11,1210.77 1319.69,1211.06 1320.28,1211.11 1320.87,1208.59 1321.45,1209.87 1322.04,1208.91 1322.63,1210.22 1323.21,1210.28 1323.8,1210.12 1324.39,1208.88 1324.97,1208.79 1325.56,1210.13 1326.14,1208.83 1326.73,1207.84 1327.32,1205.55 1327.9,1204.62 1328.49,1203.77 1329.08,1205.47 1329.66,1206.65 1330.25,1209.35 1330.84,1211.82 1331.42,1211.65 1332.01,1213.79 1332.6,1211.23 1333.18,1211.35 1333.77,1212.75 1334.35,1211.39 1334.94,1215.08 1335.53,1218.47 1336.11,1219.31 1336.7,1217.75 1337.29,1216.27 1337.87,1214.85 1338.46,1215.72 1339.05,1215.58 1339.63,1215.21 1340.22,1211.57 1340.8,1212.75 1341.39,1214.91 1341.98,1215.8 1342.56,1217.91 1343.15,1218.56 1343.74,1217.11 1344.32,1215.59 1344.91,1214.41 1345.5,1216.55 1346.08,1217.38 1346.67,1218.09 1347.26,1216.61 1347.84,1216.25 1348.43,1214.63 1349.01,1214.71 1349.6,1215.66 1350.19,1218.08 1350.77,1220.02 1351.36,1218.43 1351.95,1216.97 1352.53,1216.65 1353.12,1214.08 1353.71,1215 1354.29,1214.63 1354.88,1215.49 1355.47,1214.01 1356.05,1211.59 1356.64,1211.61 1357.22,1214.1 1357.81,1213.82 1358.4,1214.98 1358.98,1215.02 1359.57,1214.94 1360.16,1214.64 1360.74,1214.33 1361.33,1214.04 1361.92,1211.38 1362.5,1211.07 1363.09,1210.94 1363.68,1211.97 1364.26,1210.73 1364.85,1209.47 1365.43,1208.41 1366.02,1212.07 1366.61,1214.83 1367.19,1217.26 1367.78,1211.28 1368.37,1212.65 1368.95,1213.77 1369.54,1212.4 1370.13,1212.58 1370.71,1214.09 1371.3,1212.9 1371.88,1214 1372.47,1212.52 1373.06,1213.41 1373.64,1214.46 1374.23,1213.16 1374.82,1214.04 1375.4,1212.87 1375.99,1211.7 1376.58,1214.17 1377.16,1216.3 1377.75,1215.08 1378.34,1214.83 1378.92,1212.38 1379.51,1211.26 1380.09,1213.4 1380.68,1213.4 1381.27,1212.37 1381.85,1210.09 1382.44,1210.42 1383.03,1209.46 1383.61,1210.84 1384.2,1209.8 1384.79,1210.19 1385.37,1211.33 1385.96,1212.5 1386.55,1213.57 1387.13,1211.19 1387.72,1211.26 1388.3,1210.22 1388.89,1208.98 1389.48,1211.39 1390.06,1209.19 1390.65,1207.95 1391.24,1205.77 1391.82,1205.97 1392.41,1206.23 1393,1209.09 1393.58,1210.24 1394.17,1210.3 1394.75,1210.27 1395.34,1210.35 1395.93,1209.22 1396.51,1209.35 1397.1,1209.32 1397.69,1211.89 1398.27,1211.87 1398.86,1211.73 1399.45,1211.82 1400.03,1213.04 1400.62,1212.98 1401.21,1214.01 1401.79,1214.13 1402.38,1214.27 1402.96,1213.24 1403.55,1211.89 1404.14,1210.9 1404.72,1210.93 1405.31,1213.6 1405.9,1213.51 1406.48,1216.95 1407.07,1214.53 1407.66,1213.25 1408.24,1214.39 1408.83,1212.01 1409.42,1212.04 1410,1214.51 1410.59,1216.92 1411.17,1215.34 1411.76,1215.13 1412.35,1216.25 1412.93,1216.09 1413.52,1218.16 1414.11,1215.43 1414.69,1215.32 1415.28,1212.79 1415.87,1213.84 1416.45,1213.77 1417.04,1215.15 1417.63,1213.68 1418.21,1212.23 1418.8,1212.05 1419.38,1211.72 1419.97,1211.68 1420.56,1211.81 1421.14,1211.98 1421.73,1213.17 1422.32,1211.87 1422.9,1209.39 1423.49,1210.62 1424.08,1213.13 1424.66,1217.72 1425.25,1215.06 1425.83,1217.05 1426.42,1216.67 1427.01,1215.56 1427.59,1215.47 1428.18,1217.65 1428.77,1218.49 1429.35,1216.77 1429.94,1214.13 1430.53,1214.09 1431.11,1214.01 1431.7,1210.28 1432.29,1211.4 1432.87,1211.42 1433.46,1215.26 1434.04,1216.26 1434.63,1217.36 1435.22,1217.16 1435.8,1213.36 1436.39,1214.39 1436.98,1215.26 1437.56,1212.63 1438.15,1211.46 1438.74,1211.44 1439.32,1208.1 1439.91,1206.82 1440.5,1205.74 1441.08,1204.85 1441.67,1205.57 1442.25,1205.79 1442.84,1206.36 1443.43,1204.29 1444.01,1204.68 1444.6,1205.85 1445.19,1205.27 1445.77,1208.04 1446.36,1208.05 1446.95,1210.66 1447.53,1209.56 1448.12,1208.62 1448.7,1207.69 1449.29,1206.69 1449.88,1206.84 1450.46,1207.22 1451.05,1206.2 1451.64,1205.49 1452.22,1207.1 1452.81,1207.42 1453.4,1209.22 1453.98,1211.66 1454.57,1212.77 1455.16,1212.56 1455.74,1212.54 1456.33,1212.2 1456.91,1211.16 1457.5,1209.99 1458.09,1210.15 1458.67,1213.95 1459.26,1215.18 1459.85,1216.1 1460.43,1217.06 1461.02,1216.58 1461.61,1218.62 1462.19,1218.38 1462.78,1218.06 1463.37,1221.33 1463.95,1220.81 1464.54,1220.71 1465.12,1218.99 1465.71,1218.65 1466.3,1217.33 1466.88,1217.11 1467.47,1215.74 1468.06,1215.65 1468.64,1215.68 1469.23,1213.37 1469.82,1213.33 1470.4,1213.28 1470.99,1210.96 1471.57,1209.99 1472.16,1211.22 1472.75,1211.23 1473.33,1210.19 1473.92,1210.5 1474.51,1212.79 1475.09,1211.5 1475.68,1211.47 1476.27,1214.87 1476.85,1214.59 1477.44,1212.43 1478.03,1213.83 1478.61,1213 1479.2,1210.55 1479.78,1212.94 1480.37,1213.05 1480.96,1215.1 1481.54,1214.88 1482.13,1214.83 1482.72,1213.59 1483.3,1213.25 1483.89,1213.14 1484.48,1216.51 1485.06,1215.09 1485.65,1216.38 1486.24,1216 1486.82,1216.98 1487.41,1216.77 1487.99,1212.99 1488.58,1214.28 1489.17,1214.11 1489.75,1212.75 1490.34,1210.17 1490.93,1212.66 1491.51,1212.76 1492.1,1213.9 1492.69,1213.86 1493.27,1214.83 1493.86,1214.26 1494.45,1214.08 1495.03,1215.28 1495.62,1211.41 1496.2,1208.95 1496.79,1210.27 1497.38,1209.19 1497.96,1209.62 1498.55,1207.19 1499.14,1209.87 1499.72,1209.85 1500.31,1210.03 1500.9,1211.11 1501.48,1212.44 1502.07,1211.14 1502.65,1212.26 1503.24,1212.29 1503.83,1213.32 1504.41,1211.94 1505,1209.84 1505.59,1208.92 1506.17,1208.86 1506.76,1212.18 1507.35,1213.68 1507.93,1211.36 1508.52,1208.97 1509.11,1206.65 1509.69,1207.04 1510.28,1206.13 1510.86,1205.42 1511.45,1209.14 1512.04,1210.48 1512.62,1210.44 1513.21,1211.5 1513.8,1212.8 1514.38,1212.9 1514.97,1212.76 1515.56,1215.17 1516.14,1216.1 1516.73,1215.93 1517.32,1214.57 1517.9,1215.81 1518.49,1216.79 1519.07,1216.43 1519.66,1216.37 1520.25,1214.89 1520.83,1212.28 1521.42,1212.35 1522.01,1214.91 1522.59,1211.05 1523.18,1211.22 1523.77,1211.48 1524.35,1211.34 1524.94,1211.31 1525.52,1210.06 1526.11,1210.11 1526.7,1209.06 1527.28,1211.56 1527.87,1213.67 1528.46,1216.03 1529.04,1213.7 1529.63,1213.77 1530.22,1212.39 1530.8,1213.5 1531.39,1213.23 1531.98,1214.3 1532.56,1215.29 1533.15,1212.67 1533.73,1216.4 1534.32,1213.81 1534.91,1212.44 1535.49,1212.33 1536.08,1214.63 1536.67,1213.22 1537.25,1214.44 1537.84,1214.31 1538.43,1214.15 1539.01,1215.35 1539.6,1216.61 1540.19,1216.51 1540.77,1216.38 1541.36,1214.92 1541.94,1213.36 1542.53,1215.97 1543.12,1214.83 1543.7,1212.17 1544.29,1214.64 1544.88,1217.01 1545.46,1217.86 1546.05,1217.78 1546.64,1217.65 1547.22,1219.67 1547.81,1218 1548.4,1217.79 1548.98,1218.45 1549.57,1219.16 1550.15,1216.37 1550.74,1216.03 1551.33,1217.02 1551.91,1216.89 1552.5,1215.49 1553.09,1214.9 1553.67,1214.67 1554.26,1213.3 1554.85,1213.23 1555.43,1213.14 1556.02,1212.71 1556.6,1212.63 1557.19,1211.66 1557.78,1210.61 1558.36,1210.81 1558.95,1212.37 1559.54,1209.59 1560.12,1209.67 1560.71,1209.79 1561.3,1208.94 1561.88,1209.09 1562.47,1209.09 1563.06,1209.27 1563.64,1207.14 1564.23,1208.7 1564.81,1210.19 1565.4,1211.51 1565.99,1210.38 1566.57,1210.54 1567.16,1209.37 1567.75,1210.63 1568.33,1210.83 1568.92,1209.57 1569.51,1209.85 1570.09,1211.32 1570.68,1212.64 1571.27,1210.22 1571.85,1210.55 1572.44,1208.26 1573.02,1207.18 1573.61,1207.43 1574.2,1208.99 1574.78,1209.09 1575.37,1209.15 1575.96,1208.14 1576.54,1209.69 1577.13,1208.65 1577.72,1207.85 1578.3,1212.85 1578.89,1211.56 1579.47,1210.31 1580.06,1211.61 1580.65,1211.65 1581.23,1211.75 1581.82,1212.75 1582.41,1212.48 1582.99,1212.11 1583.58,1212.91 1584.17,1211.95 1584.75,1211.97 1585.34,1210.69 1585.93,1210.86 1586.51,1211.1 1587.1,1208.75 1587.68,1207.54 1588.27,1209.09 1588.86,1209.27 1589.44,1210.63 1590.03,1209.56 1590.62,1206.22 1591.2,1208.87 1591.79,1207.92 1592.38,1205.89 1592.96,1204.02 1593.55,1205.78 1594.14,1207.22 1594.72,1205.15 1595.31,1204.28 1595.89,1207.18 1596.48,1205.22 1597.07,1204.59 1597.65,1205.17 1598.24,1205.62 1598.83,1207.24 1599.41,1206.5 1600,1205.58 1600.59,1205.91 1601.17,1210.79 1601.76,1210.94 1602.34,1211.11 1602.93,1210.08 1603.52,1210.16 1604.1,1212.82 1604.69,1212.84 1605.28,1213.92 1605.86,1214.06 1606.45,1216.47 1607.04,1217.23 1607.62,1215.65 1608.21,1213.05 1608.8,1215.55 1609.38,1215.3 1609.97,1214.85 1610.55,1214.57 1611.14,1214.42 1611.73,1215.47 1612.31,1215.31 1612.9,1215.38 1613.49,1213.86 1614.07,1214.79 1614.66,1217.25 1615.25,1215.65 1615.83,1217.79 1616.42,1217.86 1617.01,1217.67 1617.59,1215.1 1618.18,1216.03 1618.76,1214.28 1619.35,1214.05 1619.94,1212.8 1620.52,1212.55 1621.11,1213.77 1621.7,1216.03 1622.28,1216.85 1622.87,1216.5 1623.46,1216.25 1624.04,1214.79 1624.63,1213.51 1625.22,1212.43 1625.8,1212.55 1626.39,1211.65 1626.97,1210.84 1627.56,1211 1628.15,1210.09 1628.73,1206.89 1629.32,1204.77 1629.91,1204.8 1630.49,1205.29 1631.08,1206.99 1631.67,1207.36 1632.25,1206.36 1632.84,1204.44 1633.42,1206.08 1634.01,1205.07 1634.6,1204.21 1635.18,1204.51 1635.77,1205.17 1636.36,1208.95 1636.94,1209.24 1637.53,1210.66 1638.12,1207.09 1638.7,1208.83 1639.29,1208.77 1639.88,1207.63 1640.46,1209.1 1641.05,1207.86 1641.63,1208.04 1642.22,1205.95 1642.81,1204.14 1643.39,1204.69 1643.98,1206.12 1644.57,1206.51 1645.15,1208.22 1645.74,1209.77 1646.33,1209.91 1646.91,1209.98 1647.5,1209.06 1648.09,1209.19 1648.67,1214.26 1649.26,1215.13 1649.84,1212.65 1650.43,1212.61 1651.02,1212.88 1651.6,1210.42 1652.19,1211.38 1652.78,1211.55 1653.36,1211.45 1653.95,1208.94 1654.54,1208.05 1655.12,1210.64 1655.71,1211.78 1656.29,1212.94 1656.88,1216.5 1657.47,1217.39 1658.05,1217.2 1658.64,1216.93 1659.23,1219.01 1659.81,1219.77 1660.4,1220.45 1660.99,1217.66 1661.57,1220.88 1662.16,1221.78 1662.75,1220.08 1663.33,1219.71 1663.92,1220.54 1664.5,1222.37 1665.09,1226.37 1665.68,1225.6 1666.26,1224.85 1666.85,1221.77 1667.44,1219.78 1668.02,1220.39 1668.61,1218.78 1669.2,1217.48 1669.78,1217.17 1670.37,1217.06 1670.96,1218.04 1671.54,1216.4 1672.13,1214.75 1672.71,1215.72 1673.3,1216.6 1673.89,1216.22 1674.47,1214.65 1675.06,1215.65 1675.65,1210.56 1676.23,1210.75 1676.82,1210.77 1677.41,1208.4 1677.99,1207.52 1678.58,1207.72 1679.17,1206.87 1679.75,1208.39 1680.34,1211.17 1680.92,1211.12 1681.51,1212.16 1682.1,1212.23 1682.68,1214.82 1683.27,1216.04 1683.86,1216.93 1684.44,1216.83 1685.03,1219.21 1685.62,1219.97 1686.2,1222.06 1686.79,1217.99 1687.37,1216.19 1687.96,1214.76 1688.55,1213.87 1689.13,1212.58 1689.72,1211.46 1690.31,1213.78 1690.89,1211.39 1691.48,1212.63 1692.07,1211.37 1692.65,1212.72 1693.24,1213.84 1693.83,1214.91 1694.41,1214.41 1695,1211.91 1695.58,1209.58 1696.17,1212.05 1696.76,1214.57 1697.34,1216.86 1697.93,1215.24 1698.52,1216.28 1699.1,1215.02 1699.69,1217.2 1700.28,1218.46 1700.86,1216.88 1701.45,1215.43 1702.04,1215.31 1702.62,1215.27 1703.21,1216.4 1703.79,1216.38 1704.38,1216.04 1704.97,1215.84 1705.55,1216.82 1706.14,1217.95 1706.73,1219.88 1707.31,1218.34 1707.9,1217.02 1708.49,1216.98 1709.07,1215.72 1709.66,1213.03 1710.24,1213.2 1710.83,1216.63 1711.42,1214.05 1712,1213.78 1712.59,1217.37 1713.18,1216.1 1713.76,1216.03 1714.35,1215.58 1714.94,1216.4 1715.52,1215.02 1716.11,1213.64 1716.7,1211.36 1717.28,1211.25 1717.87,1208.88 1718.45,1208.14 1719.04,1208.45 1719.63,1209.84 1720.21,1211.1 1720.8,1208.8 1721.39,1209.17 1721.97,1209.54 1722.56,1208.39 1723.15,1209.79 1723.73,1209.9 1724.32,1212.59 1724.91,1211.01 1725.49,1210.92 1726.08,1213.36 1726.66,1214.55 1727.25,1213.07 1727.84,1214.28 1728.42,1212.95 1729.01,1211.58 1729.6,1210.39 1730.18,1212.03 1730.77,1212.15 1731.36,1212.3 1731.94,1214.81 1732.53,1211.06 1733.11,1208.67 1733.7,1205.2 1734.29,1204.41 1734.87,1206.03 1735.46,1203.76 1736.05,1204.15 1736.63,1203.26 1737.22,1202.54 1737.81,1205.49 1738.39,1209.31 1738.98,1208.19 1739.57,1208.17 1740.15,1208.3 1740.74,1209.46 1741.32,1211.92 1741.91,1209.78 1742.5,1206.33 1743.08,1206.74 1743.67,1206.87 1744.26,1208.2 1744.84,1208.32 1745.43,1207.32 1746.02,1206.34 1746.6,1205.46 1747.19,1208.45 1747.78,1208.65 1748.36,1209.96 1748.95,1210.23 1749.53,1210.41 1750.12,1208.33 1750.71,1210.79 1751.29,1208.5 1751.88,1207.6 1752.47,1209.28 1753.05,1209.2 1753.64,1208.18 1754.23,1208.39 1754.81,1209.78 1755.4,1211.24 1755.99,1211.28 1756.57,1211.31 1757.16,1212.76 1757.74,1213.89 1758.33,1212.7 1758.92,1212.49 1759.5,1210 1760.09,1211.29 1760.68,1210.09 1761.26,1211.45 1761.85,1210.39 1762.44,1209.23 1763.02,1211.54 1763.61,1211.8 1764.19,1210.67 1764.78,1214.39 1765.37,1210.58 1765.95,1210.61 1766.54,1210.68 1767.13,1209.37 1767.71,1205.93 1768.3,1206.29 1768.89,1207.03 1769.47,1206.19 1770.06,1207.9 1770.65,1208.09 1771.23,1209.52 1771.82,1207.29 1772.4,1208.79 1772.99,1207.9 1773.58,1205.66 1774.16,1206.15 1774.75,1208.8 1775.34,1206.5 1775.92,1207 1776.51,1208.59 1777.1,1210 1777.68,1210.02 1778.27,1209.01 1778.86,1208.08 1779.44,1210.9 1780.03,1210.94 1780.61,1210.83 1781.2,1209.66 1781.79,1207.5 1782.37,1208.89 1782.96,1211.48 1783.55,1211.55 1784.13,1211.5 1784.72,1212.63 1785.31,1210.31 1785.89,1210.45 1786.48,1209.29 1787.06,1209.68 1787.65,1208.77 1788.24,1210.19 1788.82,1210.24 1789.41,1211.45 1790,1211.51 1790.58,1212.72 1791.17,1211.6 1791.76,1211.78 1792.34,1210.29 1792.93,1211.47 1793.52,1213.7 1794.1,1214.86 1794.69,1215.61 1795.27,1213.16 1795.86,1213.37 1796.45,1212.12 1797.03,1212.05 1797.62,1218.06 1798.21,1216.25 1798.79,1217 1799.38,1215.63 1799.97,1215.43 1800.55,1215.39 1801.14,1216.48 1801.73,1214.92 1802.31,1213.68 1802.9,1213.81 1803.48,1212.46 1804.07,1212.5 1804.66,1214.81 1805.24,1214.56 1805.83,1215.48 1806.42,1214.29 1807,1214.31 1807.59,1213.14 1808.18,1214.18 1808.76,1213.91 1809.35,1215.39 1809.94,1214.02 1810.52,1216.2 1811.11,1216.14 1811.69,1214.8 1812.28,1213.07 1812.87,1210.68 1813.45,1210.63 1814.04,1211.88 1814.63,1211.8 1815.21,1211.92 1815.8,1213.14 1816.39,1213.26 1816.97,1213.4 1817.56,1215.52 1818.14,1216.66 1818.73,1216.29 1819.32,1216.35 1819.9,1216.03 1820.49,1211.07 1821.08,1211.22 1821.66,1208.55 1822.25,1208.99 1822.84,1209.23 1823.42,1211.78 1824.01,1211.77 1824.6,1211.78 1825.18,1211.94 1825.77,1210.88 1826.35,1216.72 1826.94,1217.49 1827.53,1216.97 1828.11,1214.02 1828.7,1213.79 1829.29,1213.64 1829.87,1213.33 1830.46,1215.62 1831.05,1214.14 1831.63,1215.07 1832.22,1216.18 1832.81,1216.01 1833.39,1215.76 1833.98,1215.66 1834.56,1214.35 1835.15,1214.35 1835.74,1210.68 1836.32,1209.28 1836.91,1208.25 1837.5,1214.31 1838.08,1211.84 1838.67,1213.11 1839.26,1211.87 1839.84,1211.87 1840.43,1211.95 1841.01,1211.95 1841.6,1211.88 1842.19,1210.78 1842.77,1212.05 1843.36,1211.72 1843.95,1212.85 1844.53,1214.01 1845.12,1215.11 1845.71,1213.66 1846.29,1213.62 1846.88,1215.95 1847.47,1214.77 1848.05,1212.25 1848.64,1212.37 1849.22,1212.41 1849.81,1212.46 1850.4,1211.27 1850.98,1211.43 1851.57,1211.37 1852.16,1208.78 1852.74,1210.04 1853.33,1212.3 1853.92,1211.02 1854.5,1209.97 1855.09,1208.74 1855.68,1208.71 1856.26,1209.88 1856.85,1209.82 1857.43,1208.69 1858.02,1207.69 1858.61,1209.04 1859.19,1210.54 1859.78,1209.41 1860.37,1207.12 1860.95,1207.4 1861.54,1205.12 1862.13,1206.69 1862.71,1209.46 1863.3,1208.41 1863.88,1208.78 1864.47,1205.58 1865.06,1205.63 1865.64,1204.98 1866.23,1206.33 1866.82,1207.91 1867.4,1209.29 1867.99,1207.12 1868.58,1207.54 1869.16,1209.01 1869.75,1208.95 1870.34,1207.63 1870.92,1207.51 1871.51,1205.56 1872.09,1207.24 1872.68,1209.66 1873.27,1207.22 1873.85,1208.74 1874.44,1207.77 1875.03,1209.02 1875.61,1211.57 1876.2,1211.47 1876.79,1217.21 1877.37,1214.52 1877.96,1214.32 1878.55,1216.48 1879.13,1216.13 1879.72,1213.32 1880.3,1215.53 1880.89,1213 1881.48,1211.86 1882.06,1211.96 1882.65,1211.69 1883.24,1209.42 1883.82,1209.87 1884.41,1208.97 1885,1208.03 1885.58,1206.77 1886.17,1207.16 1886.76,1205.03 1887.34,1207.77 1887.93,1208.16 1888.51,1207.02 1889.1,1207.01 1889.69,1208.41 1890.27,1207.47 1890.86,1207.75 1891.45,1207.93 1892.03,1209.43 1892.62,1211.64 1893.21,1210.52 1893.79,1214.15 1894.38,1213.92 1894.96,1217.17 1895.55,1216.94 1896.14,1216.77 1896.72,1218.72 1897.31,1218.62 1897.9,1217.16 1898.48,1215.7 1899.07,1215.43 1899.66,1216.4 1900.24,1214.89 1900.83,1213.54 1901.42,1213.79 1902,1212.75 1902.59,1212.69 1903.17,1212.84 1903.76,1212.89 1904.35,1211.65 1904.93,1210.26 1905.52,1211.7 1906.11,1211.87 1906.69,1215.46 1907.28,1215.4 1907.87,1216.32 1908.45,1216.39 1909.04,1217.59 1909.63,1219.71 1910.21,1218.04 1910.8,1218.01 1911.38,1218.93 1911.97,1217.32 1912.56,1217.22 1913.14,1216.93 1913.73,1215.7 1914.32,1216.54 1914.9,1215.04 1915.49,1214.76 1916.08,1214.59 1916.66,1216.9 1917.25,1218.91 1917.83,1215.18 1918.42,1213.95 1919.01,1211.3 1919.59,1213.89 1920.18,1214.86 1920.77,1213.61 1921.35,1212.14 1921.94,1212.19 1922.53,1208.86 1923.11,1208.71 1923.7,1208.74 1924.29,1208.82 1924.87,1211.44 1925.46,1212.54 1926.04,1209.88 1926.63,1208.71 1927.22,1210.22 1927.8,1209.18 1928.39,1208.39 1928.98,1212.28 1929.56,1212.09 1930.15,1210.89 1930.74,1210.94 1931.32,1211 1931.91,1209.96 1932.5,1209.83 1933.08,1212.1 1933.67,1210.86 1934.25,1209.79 1934.84,1211.1 1935.43,1211.19 1936.01,1209.88 1936.6,1209.81 1937.19,1209.86 1937.77,1211.21 1938.36,1211.22 1938.95,1210.06 1939.53,1212.88 1940.12,1212.95 1940.71,1210.45 1941.29,1213.07 1941.88,1212.98 1942.46,1214 1943.05,1213.7 1943.64,1213.51 1944.22,1213.4 1944.81,1212.21 1945.4,1213.61 1945.98,1212.01 1946.57,1212.12 1947.16,1210.99 1947.74,1213.46 1948.33,1214.6 1948.91,1214.45 1949.5,1213.34 1950.09,1214.63 1950.67,1213.43 1951.26,1216.78 1951.85,1217.63 1952.43,1216.05 1953.02,1212.33 1953.61,1212.53 1954.19,1212.57 1954.78,1212.4 1955.37,1210.1 1955.95,1209.11 1956.54,1210.6 1957.12,1210.91 1957.71,1209.75 1958.3,1214.49 1958.88,1214.42 1959.47,1213.24 1960.06,1210.86 1960.64,1212.18 1961.23,1215.6 1961.82,1217.96 1962.4,1219 1962.99,1219.8 1963.58,1220.76 1964.16,1221.59 1964.75,1219.91 1965.33,1219.41 1965.92,1220.23 1966.51,1219.83 1967.09,1219.57 1967.68,1217.9 1968.27,1215.33 1968.85,1215.41 1969.44,1213.85 1970.03,1211.36 1970.61,1212.74 1971.2,1213.79 1971.78,1213.7 1972.37,1211.5 1972.96,1213 1973.54,1214.05 1974.13,1217.34 1974.72,1217.17 1975.3,1216.86 1975.89,1216.76 1976.48,1212.68 1977.06,1209.19 1977.65,1211.67 1978.24,1212.9 1978.82,1212.74 1979.41,1211.81 1979.99,1210.82 1980.58,1209.77 1981.17,1209.95 1981.75,1209.82 1982.34,1209.93 1982.93,1211.32 1983.51,1212.72 1984.1,1214.09 1984.69,1212.47 1985.27,1211.26 1985.86,1212.48 1986.45,1214.77 1987.03,1215.83 1987.62,1211.93 1988.2,1211.78 1988.79,1211.82 1989.38,1213.14 1989.96,1212.87 1990.55,1211.32 1991.14,1214.59 1991.72,1214.33 1992.31,1216.61 1992.9,1214.93 1993.48,1213.59 1994.07,1213.47 1994.65,1213.56 1995.24,1213.35 1995.83,1206.16 1996.41,1202.78 1997,1206.75 1997.59,1206.84 1998.17,1208.54 1998.76,1209.03 1999.35,1209.33 1999.93,1209.68 2000.52,1208.6 2001.11,1206.59 2001.69,1209.17 2002.28,1211.42 2002.86,1211.56 2003.45,1211.65 2004.04,1211.79 2004.62,1210.6 2005.21,1213.32 2005.8,1211.79 2006.38,1211.87 2006.97,1211.54 2007.56,1209.15 2008.14,1208.12 2008.73,1207.4 2009.32,1208.85 2009.9,1211.58 2010.49,1211.92 2011.07,1210.74 2011.66,1210.92 2012.25,1210.76 2012.83,1211.77 2013.42,1214.41 2014.01,1211.94 2014.59,1212.96 2015.18,1214.15 2015.77,1214.33 2016.35,1213.11 2016.94,1216.63 2017.53,1218.94 2018.11,1217.25 2018.7,1219.15 2019.28,1217.43 2019.87,1217.03 2020.46,1215.66 2021.04,1216.71 2021.63,1217.81 2022.22,1216.24 2022.8,1213.53 2023.39,1212.14 2023.98,1212.28 2024.56,1209.78 2025.15,1211.34 2025.73,1210.33 2026.32,1209.24 2026.91,1208.13 2027.49,1209.38 2028.08,1211.6 2028.67,1211.67 2029.25,1206.91 2029.84,1206.2 2030.43,1207.71 2031.01,1206.86 2031.6,1206.96 2032.19,1207.13 2032.77,1204.85 2033.36,1205.09 2033.94,1205.4 2034.53,1206.94 2035.12,1208.62 2035.7,1207.47 2036.29,1208.67 2036.88,1206.65 2037.46,1207.07 2038.05,1207.4 2038.64,1207.59 2039.22,1206.78 2039.81,1206.94 2040.4,1208.78 2040.98,1211.28 2041.57,1210.52 2042.15,1211.49 2042.74,1212.56 2043.33,1211.27 2043.91,1212.34 2044.5,1211.16 2045.09,1212.4 2045.67,1213.77 2046.26,1213.63 2046.85,1210.12 2047.43,1207.69 2048.02,1208.85 2048.6,1206.95 2049.19,1207.28 2049.78,1207.72 2050.36,1209.19 2050.95,1209.3 2051.54,1209.37 2052.12,1210.64 2052.71,1209.22 2053.3,1208.32 2053.88,1206.15 2054.47,1204.18 2055.06,1204.79 2055.64,1203.92 2056.23,1204.12 2056.81,1203.61 2057.4,1208.9 2057.99,1210.45 2058.57,1210.62 2059.16,1211.04 2059.75,1211.16 2060.33,1214.76 2060.92,1213.33 2061.51,1213.35 2062.09,1214.55 2062.68,1213.34 2063.27,1213.08 2063.85,1215.37 2064.44,1215.55 2065.02,1215.24 2065.61,1214.15 2066.2,1219.88 2066.78,1219.25 2067.37,1217.74 2067.96,1218.55 2068.54,1218.14 2069.13,1216.5 2069.72,1217.24 2070.3,1217.99 2070.89,1215.15 2071.48,1215 2072.06,1211.33 2072.65,1210.16 2073.23,1211.63 2073.82,1212.93 2074.41,1212.76 2074.99,1213.99 2075.58,1214.17 2076.17,1215.21 2076.75,1214.07 2077.34,1213.93 2077.93,1215.01 2078.51,1215.85 2079.1,1217.94 2079.68,1217.98 2080.27,1217.8 2080.86,1216.07 2081.44,1215.81 2082.03,1215.34 2082.62,1212.65 2083.2,1213.94 2083.79,1212.69 2084.38,1212.62 2084.96,1211.34 2085.55,1211.47 2086.14,1212.83 2086.72,1215.2 2087.31,1215 2087.89,1214.91 2088.48,1214.52 2089.07,1216.85 2089.65,1218.9 2090.24,1217.1 2090.83,1218.01 2091.41,1218.98 2092,1218.52 2092.59,1217.05 2093.17,1219.13 2093.76,1219.8 2094.35,1221.8 2094.93,1216.26 2095.52,1217.02 2096.1,1216.91 2096.69,1217.92 2097.28,1216.4 2097.86,1216.1 2098.45,1217.19 2099.04,1214.38 2099.62,1214.41 2100.21,1214.22 2100.8,1213.95 2101.38,1213.62 2101.97,1213.39 2102.55,1212.03 2103.14,1213.35 2103.73,1212.28 2104.31,1212 2104.9,1210.79 2105.49,1210.71 2106.07,1209.49 2106.66,1207.32 2107.25,1208.93 2107.83,1210.39 2108.42,1211.7 2109.01,1210.74 2109.59,1205.93 2110.18,1202.6 2110.76,1204.46 2111.35,1205.28 2111.94,1206.76 2112.52,1208.29 2113.11,1207.3 2113.7,1208.62 2114.28,1207.55 2114.87,1206.62 2115.46,1206.82 2116.04,1205.68 2116.63,1204.95 2117.22,1205.42 2117.8,1205.81 2118.39,1207.36 2118.97,1207.63 2119.56,1208.82 2120.15,1206.61 2120.73,1203.39 2121.32,1207.34 2121.91,1207.69 2122.49,1206.93 2123.08,1207.16 2123.67,1206.08 2124.25,1205.12 2124.84,1205.56 2125.42,1205.99 2126.01,1207.39 2126.6,1203.86 2127.18,1204.39 2127.77,1206.03 2128.36,1206.35 2128.94,1210.21 2129.53,1207.71 2130.12,1209.17 2130.7,1208.34 2131.29,1207.52 2131.88,1209.01 2132.46,1211.44 2133.05,1213.67 2133.63,1212.28 2134.22,1213.53 2134.81,1213.59 2135.39,1214.69 2135.98,1215.78 2136.57,1215.49 2137.15,1215.41 2137.74,1214.11 2138.33,1212.91 2138.91,1211.56 2139.5,1211.79 2140.09,1211.87 2140.67,1210.85 2141.26,1211.72 2141.84,1213.01 2142.43,1215.25 2143.02,1217.52 2143.6,1217.32 2144.19,1214.89 2144.78,1215.89 2145.36,1217.91 2145.95,1217.82 2146.54,1221.04 2147.12,1221.82 2147.71,1221.46 2148.3,1218.7 2148.88,1217.35 2149.47,1219.39 2150.05,1218.85 2150.64,1218.09 2151.23,1219.99 2151.81,1219.36 2152.4,1218.89 2152.99,1219.71 2153.57,1218.12 2154.16,1217.62 2154.75,1217.45 2155.33,1217.07 2155.92,1216.55 2156.5,1216.28 2157.09,1215.89 2157.68,1213.46 2158.26,1212.06 \"/>\n<path clip-path=\"url(#clip312)\" d=\"M986.025 1212.56 L986.612 1212.56 L987.198 1212.56 L987.785 1212.56 L988.371 1212.56 L988.957 1212.56 L989.544 1212.56 L990.13 1212.56 L990.717 1212.56 L991.303 1212.56 L991.889 1212.56 L992.476 1212.56 L993.062 1212.56 L993.649 1212.56 L994.235 1212.56 L994.822 1212.56 L995.408 1212.56 L995.994 1212.56 L996.581 1212.56 L997.167 1212.56 L997.754 1212.56 L998.34 1212.56 L998.926 1212.56 L999.513 1212.56 L1000.1 1212.56 L1000.69 1212.56 L1001.27 1212.56 L1001.86 1212.56 L1002.44 1212.56 L1003.03 1212.56 L1003.62 1212.56 L1004.2 1212.56 L1004.79 1212.56 L1005.38 1212.56 L1005.96 1212.56 L1006.55 1212.56 L1007.14 1212.56 L1007.72 1212.56 L1008.31 1212.56 L1008.9 1212.56 L1009.48 1212.56 L1010.07 1212.56 L1010.65 1212.56 L1011.24 1212.56 L1011.83 1212.56 L1012.41 1212.56 L1013 1212.56 L1013.59 1212.56 L1014.17 1212.56 L1014.76 1212.56 L1015.35 1212.56 L1015.93 1212.56 L1016.52 1212.56 L1017.11 1212.56 L1017.69 1212.56 L1018.28 1212.56 L1018.86 1212.56 L1019.45 1212.56 L1020.04 1212.56 L1020.62 1212.56 L1021.21 1212.56 L1021.8 1212.56 L1022.38 1212.56 L1022.97 1212.56 L1023.56 1212.56 L1024.14 1212.56 L1024.73 1212.56 L1025.32 1212.56 L1025.9 1212.56 L1026.49 1212.56 L1027.07 1212.56 L1027.66 1212.56 L1028.25 1212.56 L1028.83 1212.56 L1029.42 1212.56 L1030.01 1212.56 L1030.59 1212.56 L1031.18 1212.56 L1031.77 1212.56 L1032.35 1212.56 L1032.94 1212.56 L1033.52 1212.56 L1034.11 1212.56 L1034.7 1212.56 L1035.28 1212.56 L1035.87 1212.56 L1036.46 1212.56 L1037.04 1212.56 L1037.63 1212.56 L1038.22 1212.56 L1038.8 1212.56 L1039.39 1212.56 L1039.98 1212.56 L1040.56 1212.56 L1041.15 1212.56 L1041.73 1212.56 L1042.32 1212.56 L1042.91 1212.56 L1043.49 1212.56 L1044.08 1212.56 L1044.67 1212.56 L1045.25 1212.56 L1045.84 1212.56 L1046.43 1212.56 L1047.01 1212.56 L1047.6 1212.56 L1048.19 1212.56 L1048.77 1212.56 L1049.36 1212.56 L1049.94 1212.56 L1050.53 1212.56 L1051.12 1212.56 L1051.7 1212.56 L1052.29 1212.56 L1052.88 1212.56 L1053.46 1212.56 L1054.05 1212.56 L1054.64 1212.56 L1055.22 1212.56 L1055.81 1212.56 L1056.39 1212.56 L1056.98 1212.56 L1057.57 1212.56 L1058.15 1212.56 L1058.74 1212.56 L1059.33 1212.56 L1059.91 1212.56 L1060.5 1212.56 L1061.09 1212.56 L1061.67 1212.56 L1062.26 1212.56 L1062.85 1212.56 L1063.43 1212.56 L1064.02 1212.56 L1064.6 1212.56 L1065.19 1212.56 L1065.78 1212.56 L1066.36 1212.56 L1066.95 1212.56 L1067.54 1212.56 L1068.12 1212.56 L1068.71 1212.56 L1069.3 1212.56 L1069.88 1212.56 L1070.47 1212.56 L1071.06 1212.56 L1071.64 1212.56 L1072.23 1212.56 L1072.81 1212.56 L1073.4 1212.56 L1073.99 1212.56 L1074.57 1212.56 L1075.16 1212.56 L1075.75 1212.56 L1076.33 1212.56 L1076.92 1212.56 L1077.51 1212.56 L1078.09 1212.56 L1078.68 1212.56 L1079.26 1212.56 L1079.85 1212.56 L1080.44 1212.56 L1081.02 1212.56 L1081.61 1212.56 L1082.2 1212.56 L1082.78 1212.56 L1083.37 1212.56 L1083.96 1212.56 L1084.54 1212.56 L1085.13 1212.56 L1085.72 1212.56 L1086.3 1212.56 L1086.89 1212.56 L1087.47 1212.56 L1088.06 1212.56 L1088.65 1212.56 L1089.23 1212.56 L1089.82 1212.56 L1090.41 1212.56 L1090.99 1212.56 L1091.58 1212.56 L1092.17 1212.56 L1092.75 1212.56 L1093.34 1212.56 L1093.93 1212.56 L1094.51 1212.56 L1095.1 1212.56 L1095.68 1212.56 L1096.27 1212.56 L1096.86 1212.56 L1097.44 1212.56 L1098.03 1212.56 L1098.62 1212.56 L1099.2 1212.56 L1099.79 1212.56 L1100.38 1212.56 L1100.96 1212.56 L1101.55 1212.56 L1102.14 1212.56 L1102.72 1212.56 L1103.31 1212.56 L1103.89 1212.56 L1104.48 1212.56 L1105.07 1212.56 L1105.65 1212.56 L1106.24 1212.56 L1106.83 1212.56 L1107.41 1212.56 L1108 1212.56 L1108.59 1212.56 L1109.17 1212.56 L1109.76 1212.56 L1110.34 1212.56 L1110.93 1212.56 L1111.52 1212.56 L1112.1 1212.56 L1112.69 1212.56 L1113.28 1212.56 L1113.86 1212.56 L1114.45 1212.56 L1115.04 1212.56 L1115.62 1212.56 L1116.21 1212.56 L1116.8 1212.56 L1117.38 1212.56 L1117.97 1212.56 L1118.55 1212.56 L1119.14 1212.56 L1119.73 1212.56 L1120.31 1212.56 L1120.9 1212.56 L1121.49 1212.56 L1122.07 1212.56 L1122.66 1212.56 L1123.25 1212.56 L1123.83 1212.56 L1124.42 1212.56 L1125.01 1212.56 L1125.59 1212.56 L1126.18 1212.56 L1126.76 1212.56 L1127.35 1212.56 L1127.94 1212.56 L1128.52 1212.56 L1129.11 1212.56 L1129.7 1212.56 L1130.28 1212.56 L1130.87 1212.56 L1131.46 1212.56 L1132.04 1212.56 L1132.63 1212.56 L1133.21 1212.56 L1133.8 1212.56 L1134.39 1212.56 L1134.97 1212.56 L1135.56 1212.56 L1136.15 1212.56 L1136.73 1212.56 L1137.32 1212.56 L1137.91 1212.56 L1138.49 1212.56 L1139.08 1212.56 L1139.67 1212.56 L1140.25 1212.56 L1140.84 1212.56 L1141.42 1212.56 L1142.01 1212.56 L1142.6 1212.56 L1143.18 1212.56 L1143.77 1212.56 L1144.36 1212.56 L1144.94 1212.56 L1145.53 1212.56 L1146.12 1212.56 L1146.7 1212.56 L1147.29 1212.56 L1147.88 1212.56 L1148.46 1212.56 L1149.05 1212.56 L1149.63 1212.56 L1150.22 1212.56 L1150.81 1212.56 L1151.39 1212.56 L1151.98 1212.56 L1152.57 1212.56 L1153.15 1212.56 L1153.74 1212.56 L1154.33 1212.56 L1154.91 1212.56 L1155.5 1212.56 L1156.09 1212.56 L1156.67 1212.56 L1157.26 1212.56 L1157.84 1212.56 L1158.43 1212.56 L1159.02 1212.56 L1159.6 1212.56 L1160.19 1212.56 L1160.78 1212.56 L1161.36 1212.56 L1161.95 1212.56 L1162.54 1212.56 L1163.12 1212.56 L1163.71 1212.56 L1164.29 1212.56 L1164.88 1212.56 L1165.47 1212.56 L1166.05 1212.56 L1166.64 1212.56 L1167.23 1212.56 L1167.81 1212.56 L1168.4 1212.56 L1168.99 1212.56 L1169.57 1212.56 L1170.16 1212.56 L1170.75 1212.56 L1171.33 1212.56 L1171.92 1212.56 L1172.5 1212.56 L1173.09 1212.56 L1173.68 1212.56 L1174.26 1212.56 L1174.85 1212.56 L1175.44 1212.56 L1176.02 1212.56 L1176.61 1212.56 L1177.2 1212.56 L1177.78 1212.56 L1178.37 1212.56 L1178.96 1212.56 L1179.54 1212.56 L1180.13 1212.56 L1180.71 1212.56 L1181.3 1212.56 L1181.89 1212.56 L1182.47 1212.56 L1183.06 1212.56 L1183.65 1212.56 L1184.23 1212.56 L1184.82 1212.56 L1185.41 1212.56 L1185.99 1212.56 L1186.58 1212.56 L1187.16 1212.56 L1187.75 1212.56 L1188.34 1212.56 L1188.92 1212.56 L1189.51 1212.56 L1190.1 1212.56 L1190.68 1212.56 L1191.27 1212.56 L1191.86 1212.56 L1192.44 1212.56 L1193.03 1212.56 L1193.62 1212.56 L1194.2 1212.56 L1194.79 1212.56 L1195.37 1212.56 L1195.96 1212.56 L1196.55 1212.56 L1197.13 1212.56 L1197.72 1212.56 L1198.31 1212.56 L1198.89 1212.56 L1199.48 1212.56 L1200.07 1212.56 L1200.65 1212.56 L1201.24 1212.56 L1201.83 1212.56 L1202.41 1212.56 L1203 1212.56 L1203.58 1212.56 L1204.17 1212.56 L1204.76 1212.56 L1205.34 1212.56 L1205.93 1212.56 L1206.52 1212.56 L1207.1 1212.56 L1207.69 1212.56 L1208.28 1212.56 L1208.86 1212.56 L1209.45 1212.56 L1210.03 1212.56 L1210.62 1212.56 L1211.21 1212.56 L1211.79 1212.56 L1212.38 1212.56 L1212.97 1212.56 L1213.55 1212.56 L1214.14 1212.56 L1214.73 1212.56 L1215.31 1212.56 L1215.9 1212.56 L1216.49 1212.56 L1217.07 1212.56 L1217.66 1212.56 L1218.24 1212.56 L1218.83 1212.56 L1219.42 1212.56 L1220 1212.56 L1220.59 1212.56 L1221.18 1212.56 L1221.76 1212.56 L1222.35 1212.56 L1222.94 1212.56 L1223.52 1212.56 L1224.11 1212.56 L1224.7 1212.56 L1225.28 1212.56 L1225.87 1212.56 L1226.45 1212.56 L1227.04 1212.56 L1227.63 1212.56 L1228.21 1212.56 L1228.8 1212.56 L1229.39 1212.56 L1229.97 1212.56 L1230.56 1212.56 L1231.15 1212.56 L1231.73 1212.56 L1232.32 1212.56 L1232.91 1212.56 L1233.49 1212.56 L1234.08 1212.56 L1234.66 1212.56 L1235.25 1212.56 L1235.84 1212.56 L1236.42 1212.56 L1237.01 1212.56 L1237.6 1212.56 L1238.18 1212.56 L1238.77 1212.56 L1239.36 1212.56 L1239.94 1212.56 L1240.53 1212.56 L1241.11 1212.56 L1241.7 1212.56 L1242.29 1212.56 L1242.87 1212.56 L1243.46 1212.56 L1244.05 1212.56 L1244.63 1212.56 L1245.22 1212.56 L1245.81 1212.56 L1246.39 1212.56 L1246.98 1212.56 L1247.57 1212.56 L1248.15 1212.56 L1248.74 1212.56 L1249.32 1212.56 L1249.91 1212.56 L1250.5 1212.56 L1251.08 1212.56 L1251.67 1212.56 L1252.26 1212.56 L1252.84 1212.56 L1253.43 1212.56 L1254.02 1212.56 L1254.6 1212.56 L1255.19 1212.56 L1255.78 1212.56 L1256.36 1212.56 L1256.95 1212.56 L1257.53 1212.56 L1258.12 1212.56 L1258.71 1212.56 L1259.29 1212.56 L1259.88 1212.56 L1260.47 1212.56 L1261.05 1212.56 L1261.64 1212.56 L1262.23 1212.56 L1262.81 1212.56 L1263.4 1212.56 L1263.98 1212.56 L1264.57 1212.56 L1265.16 1212.56 L1265.74 1212.56 L1266.33 1212.56 L1266.92 1212.56 L1267.5 1212.56 L1268.09 1212.56 L1268.68 1212.56 L1269.26 1212.56 L1269.85 1212.56 L1270.44 1212.56 L1271.02 1212.56 L1271.61 1212.56 L1272.19 1212.56 L1272.78 1212.56 L1273.37 1212.56 L1273.95 1212.56 L1274.54 1212.56 L1275.13 1212.56 L1275.71 1212.56 L1276.3 1212.56 L1276.89 1212.56 L1277.47 1212.56 L1278.06 1212.56 L1278.65 1212.56 L1279.23 1212.56 L1279.82 1212.56 L1280.4 1212.56 L1280.99 1212.56 L1281.58 1212.56 L1282.16 1212.56 L1282.75 1212.56 L1283.34 1212.56 L1283.92 1212.56 L1284.51 1212.56 L1285.1 1212.56 L1285.68 1212.56 L1286.27 1212.56 L1286.86 1212.56 L1287.44 1212.56 L1288.03 1212.56 L1288.61 1212.56 L1289.2 1212.56 L1289.79 1212.56 L1290.37 1212.56 L1290.96 1212.56 L1291.55 1212.56 L1292.13 1212.56 L1292.72 1212.56 L1293.31 1212.56 L1293.89 1212.56 L1294.48 1212.56 L1295.06 1212.56 L1295.65 1212.56 L1296.24 1212.56 L1296.82 1212.56 L1297.41 1212.56 L1298 1212.56 L1298.58 1212.56 L1299.17 1212.56 L1299.76 1212.56 L1300.34 1212.56 L1300.93 1212.56 L1301.52 1212.56 L1302.1 1212.56 L1302.69 1212.56 L1303.27 1212.56 L1303.86 1212.56 L1304.45 1212.56 L1305.03 1212.56 L1305.62 1212.56 L1306.21 1212.56 L1306.79 1212.56 L1307.38 1212.56 L1307.97 1212.56 L1308.55 1212.56 L1309.14 1212.56 L1309.73 1212.56 L1310.31 1212.56 L1310.9 1212.56 L1311.48 1212.56 L1312.07 1212.56 L1312.66 1212.56 L1313.24 1212.56 L1313.83 1212.56 L1314.42 1212.56 L1315 1212.56 L1315.59 1212.56 L1316.18 1212.56 L1316.76 1212.56 L1317.35 1212.56 L1317.93 1212.56 L1318.52 1212.56 L1319.11 1212.56 L1319.69 1212.56 L1320.28 1212.56 L1320.87 1212.56 L1321.45 1212.56 L1322.04 1212.56 L1322.63 1212.56 L1323.21 1212.56 L1323.8 1212.56 L1324.39 1212.56 L1324.97 1212.56 L1325.56 1212.56 L1326.14 1212.56 L1326.73 1212.56 L1327.32 1212.56 L1327.9 1212.56 L1328.49 1212.56 L1329.08 1212.56 L1329.66 1212.56 L1330.25 1212.56 L1330.84 1212.56 L1331.42 1212.56 L1332.01 1212.56 L1332.6 1212.56 L1333.18 1212.56 L1333.77 1212.56 L1334.35 1212.56 L1334.94 1212.56 L1335.53 1212.56 L1336.11 1212.56 L1336.7 1212.56 L1337.29 1212.56 L1337.87 1212.56 L1338.46 1212.56 L1339.05 1212.56 L1339.63 1212.56 L1340.22 1212.56 L1340.8 1212.56 L1341.39 1212.56 L1341.98 1212.56 L1342.56 1212.56 L1343.15 1212.56 L1343.74 1212.56 L1344.32 1212.56 L1344.91 1212.56 L1345.5 1212.56 L1346.08 1212.56 L1346.67 1212.56 L1347.26 1212.56 L1347.84 1212.56 L1348.43 1212.56 L1349.01 1212.56 L1349.6 1212.56 L1350.19 1212.56 L1350.77 1212.56 L1351.36 1212.56 L1351.95 1212.56 L1352.53 1212.56 L1353.12 1212.56 L1353.71 1212.56 L1354.29 1212.56 L1354.88 1212.56 L1355.47 1212.56 L1356.05 1212.56 L1356.64 1212.56 L1357.22 1212.56 L1357.81 1212.56 L1358.4 1212.56 L1358.98 1212.56 L1359.57 1212.56 L1360.16 1212.56 L1360.74 1212.56 L1361.33 1212.56 L1361.92 1212.56 L1362.5 1212.56 L1363.09 1212.56 L1363.68 1212.56 L1364.26 1212.56 L1364.85 1212.56 L1365.43 1212.56 L1366.02 1212.56 L1366.61 1212.56 L1367.19 1212.56 L1367.78 1212.56 L1368.37 1212.56 L1368.95 1212.56 L1369.54 1212.56 L1370.13 1212.56 L1370.71 1212.56 L1371.3 1212.56 L1371.88 1212.56 L1372.47 1212.56 L1373.06 1212.56 L1373.64 1212.56 L1374.23 1212.56 L1374.82 1212.56 L1375.4 1212.56 L1375.99 1212.56 L1376.58 1212.56 L1377.16 1212.56 L1377.75 1212.56 L1378.34 1212.56 L1378.92 1212.56 L1379.51 1212.56 L1380.09 1212.56 L1380.68 1212.56 L1381.27 1212.56 L1381.85 1212.56 L1382.44 1212.56 L1383.03 1212.56 L1383.61 1212.56 L1384.2 1212.56 L1384.79 1212.56 L1385.37 1212.56 L1385.96 1212.56 L1386.55 1212.56 L1387.13 1212.56 L1387.72 1212.56 L1388.3 1212.56 L1388.89 1212.56 L1389.48 1212.56 L1390.06 1212.56 L1390.65 1212.56 L1391.24 1212.56 L1391.82 1212.56 L1392.41 1212.56 L1393 1212.56 L1393.58 1212.56 L1394.17 1212.56 L1394.75 1212.56 L1395.34 1212.56 L1395.93 1212.56 L1396.51 1212.56 L1397.1 1212.56 L1397.69 1212.56 L1398.27 1212.56 L1398.86 1212.56 L1399.45 1212.56 L1400.03 1212.56 L1400.62 1212.56 L1401.21 1212.56 L1401.79 1212.56 L1402.38 1212.56 L1402.96 1212.56 L1403.55 1212.56 L1404.14 1212.56 L1404.72 1212.56 L1405.31 1212.56 L1405.9 1212.56 L1406.48 1212.56 L1407.07 1212.56 L1407.66 1212.56 L1408.24 1212.56 L1408.83 1212.56 L1409.42 1212.56 L1410 1212.56 L1410.59 1212.56 L1411.17 1212.56 L1411.76 1212.56 L1412.35 1212.56 L1412.93 1212.56 L1413.52 1212.56 L1414.11 1212.56 L1414.69 1212.56 L1415.28 1212.56 L1415.87 1212.56 L1416.45 1212.56 L1417.04 1212.56 L1417.63 1212.56 L1418.21 1212.56 L1418.8 1212.56 L1419.38 1212.56 L1419.97 1212.56 L1420.56 1212.56 L1421.14 1212.56 L1421.73 1212.56 L1422.32 1212.56 L1422.9 1212.56 L1423.49 1212.56 L1424.08 1212.56 L1424.66 1212.56 L1425.25 1212.56 L1425.83 1212.56 L1426.42 1212.56 L1427.01 1212.56 L1427.59 1212.56 L1428.18 1212.56 L1428.77 1212.56 L1429.35 1212.56 L1429.94 1212.56 L1430.53 1212.56 L1431.11 1212.56 L1431.7 1212.56 L1432.29 1212.56 L1432.87 1212.56 L1433.46 1212.56 L1434.04 1212.56 L1434.63 1212.56 L1435.22 1212.56 L1435.8 1212.56 L1436.39 1212.56 L1436.98 1212.56 L1437.56 1212.56 L1438.15 1212.56 L1438.74 1212.56 L1439.32 1212.56 L1439.91 1212.56 L1440.5 1212.56 L1441.08 1212.56 L1441.67 1212.56 L1442.25 1212.56 L1442.84 1212.56 L1443.43 1212.56 L1444.01 1212.56 L1444.6 1212.56 L1445.19 1212.56 L1445.77 1212.56 L1446.36 1212.56 L1446.95 1212.56 L1447.53 1212.56 L1448.12 1212.56 L1448.7 1212.56 L1449.29 1212.56 L1449.88 1212.56 L1450.46 1212.56 L1451.05 1212.56 L1451.64 1212.56 L1452.22 1212.56 L1452.81 1212.56 L1453.4 1212.56 L1453.98 1212.56 L1454.57 1212.56 L1455.16 1212.56 L1455.74 1212.56 L1456.33 1212.56 L1456.91 1212.56 L1457.5 1212.56 L1458.09 1212.56 L1458.67 1212.56 L1459.26 1212.56 L1459.85 1212.56 L1460.43 1212.56 L1461.02 1212.56 L1461.61 1212.56 L1462.19 1212.56 L1462.78 1212.56 L1463.37 1212.56 L1463.95 1212.56 L1464.54 1212.56 L1465.12 1212.56 L1465.71 1212.56 L1466.3 1212.56 L1466.88 1212.56 L1467.47 1212.56 L1468.06 1212.56 L1468.64 1212.56 L1469.23 1212.56 L1469.82 1212.56 L1470.4 1212.56 L1470.99 1212.56 L1471.57 1212.56 L1472.16 1212.56 L1472.75 1212.56 L1473.33 1212.56 L1473.92 1212.56 L1474.51 1212.56 L1475.09 1212.56 L1475.68 1212.56 L1476.27 1212.56 L1476.85 1212.56 L1477.44 1212.56 L1478.03 1212.56 L1478.61 1212.56 L1479.2 1212.56 L1479.78 1212.56 L1480.37 1212.56 L1480.96 1212.56 L1481.54 1212.56 L1482.13 1212.56 L1482.72 1212.56 L1483.3 1212.56 L1483.89 1212.56 L1484.48 1212.56 L1485.06 1212.56 L1485.65 1212.56 L1486.24 1212.56 L1486.82 1212.56 L1487.41 1212.56 L1487.99 1212.56 L1488.58 1212.56 L1489.17 1212.56 L1489.75 1212.56 L1490.34 1212.56 L1490.93 1212.56 L1491.51 1212.56 L1492.1 1212.56 L1492.69 1212.56 L1493.27 1212.56 L1493.86 1212.56 L1494.45 1212.56 L1495.03 1212.56 L1495.62 1212.56 L1496.2 1212.56 L1496.79 1212.56 L1497.38 1212.56 L1497.96 1212.56 L1498.55 1212.56 L1499.14 1212.56 L1499.72 1212.56 L1500.31 1212.56 L1500.9 1212.56 L1501.48 1212.56 L1502.07 1212.56 L1502.65 1212.56 L1503.24 1212.56 L1503.83 1212.56 L1504.41 1212.56 L1505 1212.56 L1505.59 1212.56 L1506.17 1212.56 L1506.76 1212.56 L1507.35 1212.56 L1507.93 1212.56 L1508.52 1212.56 L1509.11 1212.56 L1509.69 1212.56 L1510.28 1212.56 L1510.86 1212.56 L1511.45 1212.56 L1512.04 1212.56 L1512.62 1212.56 L1513.21 1212.56 L1513.8 1212.56 L1514.38 1212.56 L1514.97 1212.56 L1515.56 1212.56 L1516.14 1212.56 L1516.73 1212.56 L1517.32 1212.56 L1517.9 1212.56 L1518.49 1212.56 L1519.07 1212.56 L1519.66 1212.56 L1520.25 1212.56 L1520.83 1212.56 L1521.42 1212.56 L1522.01 1212.56 L1522.59 1212.56 L1523.18 1212.56 L1523.77 1212.56 L1524.35 1212.56 L1524.94 1212.56 L1525.52 1212.56 L1526.11 1212.56 L1526.7 1212.56 L1527.28 1212.56 L1527.87 1212.56 L1528.46 1212.56 L1529.04 1212.56 L1529.63 1212.56 L1530.22 1212.56 L1530.8 1212.56 L1531.39 1212.56 L1531.98 1212.56 L1532.56 1212.56 L1533.15 1212.56 L1533.73 1212.56 L1534.32 1212.56 L1534.91 1212.56 L1535.49 1212.56 L1536.08 1212.56 L1536.67 1212.56 L1537.25 1212.56 L1537.84 1212.56 L1538.43 1212.56 L1539.01 1212.56 L1539.6 1212.56 L1540.19 1212.56 L1540.77 1212.56 L1541.36 1212.56 L1541.94 1212.56 L1542.53 1212.56 L1543.12 1212.56 L1543.7 1212.56 L1544.29 1212.56 L1544.88 1212.56 L1545.46 1212.56 L1546.05 1212.56 L1546.64 1212.56 L1547.22 1212.56 L1547.81 1212.56 L1548.4 1212.56 L1548.98 1212.56 L1549.57 1212.56 L1550.15 1212.56 L1550.74 1212.56 L1551.33 1212.56 L1551.91 1212.56 L1552.5 1212.56 L1553.09 1212.56 L1553.67 1212.56 L1554.26 1212.56 L1554.85 1212.56 L1555.43 1212.56 L1556.02 1212.56 L1556.6 1212.56 L1557.19 1212.56 L1557.78 1212.56 L1558.36 1212.56 L1558.95 1212.56 L1559.54 1212.56 L1560.12 1212.56 L1560.71 1212.56 L1561.3 1212.56 L1561.88 1212.56 L1562.47 1212.56 L1563.06 1212.56 L1563.64 1212.56 L1564.23 1212.56 L1564.81 1212.56 L1565.4 1212.56 L1565.99 1212.56 L1566.57 1212.56 L1567.16 1212.56 L1567.75 1212.56 L1568.33 1212.56 L1568.92 1212.56 L1569.51 1212.56 L1570.09 1212.56 L1570.68 1212.56 L1571.27 1212.56 L1571.85 1212.56 L1572.44 1212.56 L1573.02 1212.56 L1573.61 1212.56 L1574.2 1212.56 L1574.78 1212.56 L1575.37 1212.56 L1575.96 1212.56 L1576.54 1212.56 L1577.13 1212.56 L1577.72 1212.56 L1578.3 1212.56 L1578.89 1212.56 L1579.47 1212.56 L1580.06 1212.56 L1580.65 1212.56 L1581.23 1212.56 L1581.82 1212.56 L1582.41 1212.56 L1582.99 1212.56 L1583.58 1212.56 L1584.17 1212.56 L1584.75 1212.56 L1585.34 1212.56 L1585.93 1212.56 L1586.51 1212.56 L1587.1 1212.56 L1587.68 1212.56 L1588.27 1212.56 L1588.86 1212.56 L1589.44 1212.56 L1590.03 1212.56 L1590.62 1212.56 L1591.2 1212.56 L1591.79 1212.56 L1592.38 1212.56 L1592.96 1212.56 L1593.55 1212.56 L1594.14 1212.56 L1594.72 1212.56 L1595.31 1212.56 L1595.89 1212.56 L1596.48 1212.56 L1597.07 1212.56 L1597.65 1212.56 L1598.24 1212.56 L1598.83 1212.56 L1599.41 1212.56 L1600 1212.56 L1600.59 1212.56 L1601.17 1212.56 L1601.76 1212.56 L1602.34 1212.56 L1602.93 1212.56 L1603.52 1212.56 L1604.1 1212.56 L1604.69 1212.56 L1605.28 1212.56 L1605.86 1212.56 L1606.45 1212.56 L1607.04 1212.56 L1607.62 1212.56 L1608.21 1212.56 L1608.8 1212.56 L1609.38 1212.56 L1609.97 1212.56 L1610.55 1212.56 L1611.14 1212.56 L1611.73 1212.56 L1612.31 1212.56 L1612.9 1212.56 L1613.49 1212.56 L1614.07 1212.56 L1614.66 1212.56 L1615.25 1212.56 L1615.83 1212.56 L1616.42 1212.56 L1617.01 1212.56 L1617.59 1212.56 L1618.18 1212.56 L1618.76 1212.56 L1619.35 1212.56 L1619.94 1212.56 L1620.52 1212.56 L1621.11 1212.56 L1621.7 1212.56 L1622.28 1212.56 L1622.87 1212.56 L1623.46 1212.56 L1624.04 1212.56 L1624.63 1212.56 L1625.22 1212.56 L1625.8 1212.56 L1626.39 1212.56 L1626.97 1212.56 L1627.56 1212.56 L1628.15 1212.56 L1628.73 1212.56 L1629.32 1212.56 L1629.91 1212.56 L1630.49 1212.56 L1631.08 1212.56 L1631.67 1212.56 L1632.25 1212.56 L1632.84 1212.56 L1633.42 1212.56 L1634.01 1212.56 L1634.6 1212.56 L1635.18 1212.56 L1635.77 1212.56 L1636.36 1212.56 L1636.94 1212.56 L1637.53 1212.56 L1638.12 1212.56 L1638.7 1212.56 L1639.29 1212.56 L1639.88 1212.56 L1640.46 1212.56 L1641.05 1212.56 L1641.63 1212.56 L1642.22 1212.56 L1642.81 1212.56 L1643.39 1212.56 L1643.98 1212.56 L1644.57 1212.56 L1645.15 1212.56 L1645.74 1212.56 L1646.33 1212.56 L1646.91 1212.56 L1647.5 1212.56 L1648.09 1212.56 L1648.67 1212.56 L1649.26 1212.56 L1649.84 1212.56 L1650.43 1212.56 L1651.02 1212.56 L1651.6 1212.56 L1652.19 1212.56 L1652.78 1212.56 L1653.36 1212.56 L1653.95 1212.56 L1654.54 1212.56 L1655.12 1212.56 L1655.71 1212.56 L1656.29 1212.56 L1656.88 1212.56 L1657.47 1212.56 L1658.05 1212.56 L1658.64 1212.56 L1659.23 1212.56 L1659.81 1212.56 L1660.4 1212.56 L1660.99 1212.56 L1661.57 1212.56 L1662.16 1212.56 L1662.75 1212.56 L1663.33 1212.56 L1663.92 1212.56 L1664.5 1212.56 L1665.09 1212.56 L1665.68 1212.56 L1666.26 1212.56 L1666.85 1212.56 L1667.44 1212.56 L1668.02 1212.56 L1668.61 1212.56 L1669.2 1212.56 L1669.78 1212.56 L1670.37 1212.56 L1670.96 1212.56 L1671.54 1212.56 L1672.13 1212.56 L1672.71 1212.56 L1673.3 1212.56 L1673.89 1212.56 L1674.47 1212.56 L1675.06 1212.56 L1675.65 1212.56 L1676.23 1212.56 L1676.82 1212.56 L1677.41 1212.56 L1677.99 1212.56 L1678.58 1212.56 L1679.17 1212.56 L1679.75 1212.56 L1680.34 1212.56 L1680.92 1212.56 L1681.51 1212.56 L1682.1 1212.56 L1682.68 1212.56 L1683.27 1212.56 L1683.86 1212.56 L1684.44 1212.56 L1685.03 1212.56 L1685.62 1212.56 L1686.2 1212.56 L1686.79 1212.56 L1687.37 1212.56 L1687.96 1212.56 L1688.55 1212.56 L1689.13 1212.56 L1689.72 1212.56 L1690.31 1212.56 L1690.89 1212.56 L1691.48 1212.56 L1692.07 1212.56 L1692.65 1212.56 L1693.24 1212.56 L1693.83 1212.56 L1694.41 1212.56 L1695 1212.56 L1695.58 1212.56 L1696.17 1212.56 L1696.76 1212.56 L1697.34 1212.56 L1697.93 1212.56 L1698.52 1212.56 L1699.1 1212.56 L1699.69 1212.56 L1700.28 1212.56 L1700.86 1212.56 L1701.45 1212.56 L1702.04 1212.56 L1702.62 1212.56 L1703.21 1212.56 L1703.79 1212.56 L1704.38 1212.56 L1704.97 1212.56 L1705.55 1212.56 L1706.14 1212.56 L1706.73 1212.56 L1707.31 1212.56 L1707.9 1212.56 L1708.49 1212.56 L1709.07 1212.56 L1709.66 1212.56 L1710.24 1212.56 L1710.83 1212.56 L1711.42 1212.56 L1712 1212.56 L1712.59 1212.56 L1713.18 1212.56 L1713.76 1212.56 L1714.35 1212.56 L1714.94 1212.56 L1715.52 1212.56 L1716.11 1212.56 L1716.7 1212.56 L1717.28 1212.56 L1717.87 1212.56 L1718.45 1212.56 L1719.04 1212.56 L1719.63 1212.56 L1720.21 1212.56 L1720.8 1212.56 L1721.39 1212.56 L1721.97 1212.56 L1722.56 1212.56 L1723.15 1212.56 L1723.73 1212.56 L1724.32 1212.56 L1724.91 1212.56 L1725.49 1212.56 L1726.08 1212.56 L1726.66 1212.56 L1727.25 1212.56 L1727.84 1212.56 L1728.42 1212.56 L1729.01 1212.56 L1729.6 1212.56 L1730.18 1212.56 L1730.77 1212.56 L1731.36 1212.56 L1731.94 1212.56 L1732.53 1212.56 L1733.11 1212.56 L1733.7 1212.56 L1734.29 1212.56 L1734.87 1212.56 L1735.46 1212.56 L1736.05 1212.56 L1736.63 1212.56 L1737.22 1212.56 L1737.81 1212.56 L1738.39 1212.56 L1738.98 1212.56 L1739.57 1212.56 L1740.15 1212.56 L1740.74 1212.56 L1741.32 1212.56 L1741.91 1212.56 L1742.5 1212.56 L1743.08 1212.56 L1743.67 1212.56 L1744.26 1212.56 L1744.84 1212.56 L1745.43 1212.56 L1746.02 1212.56 L1746.6 1212.56 L1747.19 1212.56 L1747.78 1212.56 L1748.36 1212.56 L1748.95 1212.56 L1749.53 1212.56 L1750.12 1212.56 L1750.71 1212.56 L1751.29 1212.56 L1751.88 1212.56 L1752.47 1212.56 L1753.05 1212.56 L1753.64 1212.56 L1754.23 1212.56 L1754.81 1212.56 L1755.4 1212.56 L1755.99 1212.56 L1756.57 1212.56 L1757.16 1212.56 L1757.74 1212.56 L1758.33 1212.56 L1758.92 1212.56 L1759.5 1212.56 L1760.09 1212.56 L1760.68 1212.56 L1761.26 1212.56 L1761.85 1212.56 L1762.44 1212.56 L1763.02 1212.56 L1763.61 1212.56 L1764.19 1212.56 L1764.78 1212.56 L1765.37 1212.56 L1765.95 1212.56 L1766.54 1212.56 L1767.13 1212.56 L1767.71 1212.56 L1768.3 1212.56 L1768.89 1212.56 L1769.47 1212.56 L1770.06 1212.56 L1770.65 1212.56 L1771.23 1212.56 L1771.82 1212.56 L1772.4 1212.56 L1772.99 1212.56 L1773.58 1212.56 L1774.16 1212.56 L1774.75 1212.56 L1775.34 1212.56 L1775.92 1212.56 L1776.51 1212.56 L1777.1 1212.56 L1777.68 1212.56 L1778.27 1212.56 L1778.86 1212.56 L1779.44 1212.56 L1780.03 1212.56 L1780.61 1212.56 L1781.2 1212.56 L1781.79 1212.56 L1782.37 1212.56 L1782.96 1212.56 L1783.55 1212.56 L1784.13 1212.56 L1784.72 1212.56 L1785.31 1212.56 L1785.89 1212.56 L1786.48 1212.56 L1787.06 1212.56 L1787.65 1212.56 L1788.24 1212.56 L1788.82 1212.56 L1789.41 1212.56 L1790 1212.56 L1790.58 1212.56 L1791.17 1212.56 L1791.76 1212.56 L1792.34 1212.56 L1792.93 1212.56 L1793.52 1212.56 L1794.1 1212.56 L1794.69 1212.56 L1795.27 1212.56 L1795.86 1212.56 L1796.45 1212.56 L1797.03 1212.56 L1797.62 1212.56 L1798.21 1212.56 L1798.79 1212.56 L1799.38 1212.56 L1799.97 1212.56 L1800.55 1212.56 L1801.14 1212.56 L1801.73 1212.56 L1802.31 1212.56 L1802.9 1212.56 L1803.48 1212.56 L1804.07 1212.56 L1804.66 1212.56 L1805.24 1212.56 L1805.83 1212.56 L1806.42 1212.56 L1807 1212.56 L1807.59 1212.56 L1808.18 1212.56 L1808.76 1212.56 L1809.35 1212.56 L1809.94 1212.56 L1810.52 1212.56 L1811.11 1212.56 L1811.69 1212.56 L1812.28 1212.56 L1812.87 1212.56 L1813.45 1212.56 L1814.04 1212.56 L1814.63 1212.56 L1815.21 1212.56 L1815.8 1212.56 L1816.39 1212.56 L1816.97 1212.56 L1817.56 1212.56 L1818.14 1212.56 L1818.73 1212.56 L1819.32 1212.56 L1819.9 1212.56 L1820.49 1212.56 L1821.08 1212.56 L1821.66 1212.56 L1822.25 1212.56 L1822.84 1212.56 L1823.42 1212.56 L1824.01 1212.56 L1824.6 1212.56 L1825.18 1212.56 L1825.77 1212.56 L1826.35 1212.56 L1826.94 1212.56 L1827.53 1212.56 L1828.11 1212.56 L1828.7 1212.56 L1829.29 1212.56 L1829.87 1212.56 L1830.46 1212.56 L1831.05 1212.56 L1831.63 1212.56 L1832.22 1212.56 L1832.81 1212.56 L1833.39 1212.56 L1833.98 1212.56 L1834.56 1212.56 L1835.15 1212.56 L1835.74 1212.56 L1836.32 1212.56 L1836.91 1212.56 L1837.5 1212.56 L1838.08 1212.56 L1838.67 1212.56 L1839.26 1212.56 L1839.84 1212.56 L1840.43 1212.56 L1841.01 1212.56 L1841.6 1212.56 L1842.19 1212.56 L1842.77 1212.56 L1843.36 1212.56 L1843.95 1212.56 L1844.53 1212.56 L1845.12 1212.56 L1845.71 1212.56 L1846.29 1212.56 L1846.88 1212.56 L1847.47 1212.56 L1848.05 1212.56 L1848.64 1212.56 L1849.22 1212.56 L1849.81 1212.56 L1850.4 1212.56 L1850.98 1212.56 L1851.57 1212.56 L1852.16 1212.56 L1852.74 1212.56 L1853.33 1212.56 L1853.92 1212.56 L1854.5 1212.56 L1855.09 1212.56 L1855.68 1212.56 L1856.26 1212.56 L1856.85 1212.56 L1857.43 1212.56 L1858.02 1212.56 L1858.61 1212.56 L1859.19 1212.56 L1859.78 1212.56 L1860.37 1212.56 L1860.95 1212.56 L1861.54 1212.56 L1862.13 1212.56 L1862.71 1212.56 L1863.3 1212.56 L1863.88 1212.56 L1864.47 1212.56 L1865.06 1212.56 L1865.64 1212.56 L1866.23 1212.56 L1866.82 1212.56 L1867.4 1212.56 L1867.99 1212.56 L1868.58 1212.56 L1869.16 1212.56 L1869.75 1212.56 L1870.34 1212.56 L1870.92 1212.56 L1871.51 1212.56 L1872.09 1212.56 L1872.68 1212.56 L1873.27 1212.56 L1873.85 1212.56 L1874.44 1212.56 L1875.03 1212.56 L1875.61 1212.56 L1876.2 1212.56 L1876.79 1212.56 L1877.37 1212.56 L1877.96 1212.56 L1878.55 1212.56 L1879.13 1212.56 L1879.72 1212.56 L1880.3 1212.56 L1880.89 1212.56 L1881.48 1212.56 L1882.06 1212.56 L1882.65 1212.56 L1883.24 1212.56 L1883.82 1212.56 L1884.41 1212.56 L1885 1212.56 L1885.58 1212.56 L1886.17 1212.56 L1886.76 1212.56 L1887.34 1212.56 L1887.93 1212.56 L1888.51 1212.56 L1889.1 1212.56 L1889.69 1212.56 L1890.27 1212.56 L1890.86 1212.56 L1891.45 1212.56 L1892.03 1212.56 L1892.62 1212.56 L1893.21 1212.56 L1893.79 1212.56 L1894.38 1212.56 L1894.96 1212.56 L1895.55 1212.56 L1896.14 1212.56 L1896.72 1212.56 L1897.31 1212.56 L1897.9 1212.56 L1898.48 1212.56 L1899.07 1212.56 L1899.66 1212.56 L1900.24 1212.56 L1900.83 1212.56 L1901.42 1212.56 L1902 1212.56 L1902.59 1212.56 L1903.17 1212.56 L1903.76 1212.56 L1904.35 1212.56 L1904.93 1212.56 L1905.52 1212.56 L1906.11 1212.56 L1906.69 1212.56 L1907.28 1212.56 L1907.87 1212.56 L1908.45 1212.56 L1909.04 1212.56 L1909.63 1212.56 L1910.21 1212.56 L1910.8 1212.56 L1911.38 1212.56 L1911.97 1212.56 L1912.56 1212.56 L1913.14 1212.56 L1913.73 1212.56 L1914.32 1212.56 L1914.9 1212.56 L1915.49 1212.56 L1916.08 1212.56 L1916.66 1212.56 L1917.25 1212.56 L1917.83 1212.56 L1918.42 1212.56 L1919.01 1212.56 L1919.59 1212.56 L1920.18 1212.56 L1920.77 1212.56 L1921.35 1212.56 L1921.94 1212.56 L1922.53 1212.56 L1923.11 1212.56 L1923.7 1212.56 L1924.29 1212.56 L1924.87 1212.56 L1925.46 1212.56 L1926.04 1212.56 L1926.63 1212.56 L1927.22 1212.56 L1927.8 1212.56 L1928.39 1212.56 L1928.98 1212.56 L1929.56 1212.56 L1930.15 1212.56 L1930.74 1212.56 L1931.32 1212.56 L1931.91 1212.56 L1932.5 1212.56 L1933.08 1212.56 L1933.67 1212.56 L1934.25 1212.56 L1934.84 1212.56 L1935.43 1212.56 L1936.01 1212.56 L1936.6 1212.56 L1937.19 1212.56 L1937.77 1212.56 L1938.36 1212.56 L1938.95 1212.56 L1939.53 1212.56 L1940.12 1212.56 L1940.71 1212.56 L1941.29 1212.56 L1941.88 1212.56 L1942.46 1212.56 L1943.05 1212.56 L1943.64 1212.56 L1944.22 1212.56 L1944.81 1212.56 L1945.4 1212.56 L1945.98 1212.56 L1946.57 1212.56 L1947.16 1212.56 L1947.74 1212.56 L1948.33 1212.56 L1948.91 1212.56 L1949.5 1212.56 L1950.09 1212.56 L1950.67 1212.56 L1951.26 1212.56 L1951.85 1212.56 L1952.43 1212.56 L1953.02 1212.56 L1953.61 1212.56 L1954.19 1212.56 L1954.78 1212.56 L1955.37 1212.56 L1955.95 1212.56 L1956.54 1212.56 L1957.12 1212.56 L1957.71 1212.56 L1958.3 1212.56 L1958.88 1212.56 L1959.47 1212.56 L1960.06 1212.56 L1960.64 1212.56 L1961.23 1212.56 L1961.82 1212.56 L1962.4 1212.56 L1962.99 1212.56 L1963.58 1212.56 L1964.16 1212.56 L1964.75 1212.56 L1965.33 1212.56 L1965.92 1212.56 L1966.51 1212.56 L1967.09 1212.56 L1967.68 1212.56 L1968.27 1212.56 L1968.85 1212.56 L1969.44 1212.56 L1970.03 1212.56 L1970.61 1212.56 L1971.2 1212.56 L1971.78 1212.56 L1972.37 1212.56 L1972.96 1212.56 L1973.54 1212.56 L1974.13 1212.56 L1974.72 1212.56 L1975.3 1212.56 L1975.89 1212.56 L1976.48 1212.56 L1977.06 1212.56 L1977.65 1212.56 L1978.24 1212.56 L1978.82 1212.56 L1979.41 1212.56 L1979.99 1212.56 L1980.58 1212.56 L1981.17 1212.56 L1981.75 1212.56 L1982.34 1212.56 L1982.93 1212.56 L1983.51 1212.56 L1984.1 1212.56 L1984.69 1212.56 L1985.27 1212.56 L1985.86 1212.56 L1986.45 1212.56 L1987.03 1212.56 L1987.62 1212.56 L1988.2 1212.56 L1988.79 1212.56 L1989.38 1212.56 L1989.96 1212.56 L1990.55 1212.56 L1991.14 1212.56 L1991.72 1212.56 L1992.31 1212.56 L1992.9 1212.56 L1993.48 1212.56 L1994.07 1212.56 L1994.65 1212.56 L1995.24 1212.56 L1995.83 1212.56 L1996.41 1212.56 L1997 1212.56 L1997.59 1212.56 L1998.17 1212.56 L1998.76 1212.56 L1999.35 1212.56 L1999.93 1212.56 L2000.52 1212.56 L2001.11 1212.56 L2001.69 1212.56 L2002.28 1212.56 L2002.86 1212.56 L2003.45 1212.56 L2004.04 1212.56 L2004.62 1212.56 L2005.21 1212.56 L2005.8 1212.56 L2006.38 1212.56 L2006.97 1212.56 L2007.56 1212.56 L2008.14 1212.56 L2008.73 1212.56 L2009.32 1212.56 L2009.9 1212.56 L2010.49 1212.56 L2011.07 1212.56 L2011.66 1212.56 L2012.25 1212.56 L2012.83 1212.56 L2013.42 1212.56 L2014.01 1212.56 L2014.59 1212.56 L2015.18 1212.56 L2015.77 1212.56 L2016.35 1212.56 L2016.94 1212.56 L2017.53 1212.56 L2018.11 1212.56 L2018.7 1212.56 L2019.28 1212.56 L2019.87 1212.56 L2020.46 1212.56 L2021.04 1212.56 L2021.63 1212.56 L2022.22 1212.56 L2022.8 1212.56 L2023.39 1212.56 L2023.98 1212.56 L2024.56 1212.56 L2025.15 1212.56 L2025.73 1212.56 L2026.32 1212.56 L2026.91 1212.56 L2027.49 1212.56 L2028.08 1212.56 L2028.67 1212.56 L2029.25 1212.56 L2029.84 1212.56 L2030.43 1212.56 L2031.01 1212.56 L2031.6 1212.56 L2032.19 1212.56 L2032.77 1212.56 L2033.36 1212.56 L2033.94 1212.56 L2034.53 1212.56 L2035.12 1212.56 L2035.7 1212.56 L2036.29 1212.56 L2036.88 1212.56 L2037.46 1212.56 L2038.05 1212.56 L2038.64 1212.56 L2039.22 1212.56 L2039.81 1212.56 L2040.4 1212.56 L2040.98 1212.56 L2041.57 1212.56 L2042.15 1212.56 L2042.74 1212.56 L2043.33 1212.56 L2043.91 1212.56 L2044.5 1212.56 L2045.09 1212.56 L2045.67 1212.56 L2046.26 1212.56 L2046.85 1212.56 L2047.43 1212.56 L2048.02 1212.56 L2048.6 1212.56 L2049.19 1212.56 L2049.78 1212.56 L2050.36 1212.56 L2050.95 1212.56 L2051.54 1212.56 L2052.12 1212.56 L2052.71 1212.56 L2053.3 1212.56 L2053.88 1212.56 L2054.47 1212.56 L2055.06 1212.56 L2055.64 1212.56 L2056.23 1212.56 L2056.81 1212.56 L2057.4 1212.56 L2057.99 1212.56 L2058.57 1212.56 L2059.16 1212.56 L2059.75 1212.56 L2060.33 1212.56 L2060.92 1212.56 L2061.51 1212.56 L2062.09 1212.56 L2062.68 1212.56 L2063.27 1212.56 L2063.85 1212.56 L2064.44 1212.56 L2065.02 1212.56 L2065.61 1212.56 L2066.2 1212.56 L2066.78 1212.56 L2067.37 1212.56 L2067.96 1212.56 L2068.54 1212.56 L2069.13 1212.56 L2069.72 1212.56 L2070.3 1212.56 L2070.89 1212.56 L2071.48 1212.56 L2072.06 1212.56 L2072.65 1212.56 L2073.23 1212.56 L2073.82 1212.56 L2074.41 1212.56 L2074.99 1212.56 L2075.58 1212.56 L2076.17 1212.56 L2076.75 1212.56 L2077.34 1212.56 L2077.93 1212.56 L2078.51 1212.56 L2079.1 1212.56 L2079.68 1212.56 L2080.27 1212.56 L2080.86 1212.56 L2081.44 1212.56 L2082.03 1212.56 L2082.62 1212.56 L2083.2 1212.56 L2083.79 1212.56 L2084.38 1212.56 L2084.96 1212.56 L2085.55 1212.56 L2086.14 1212.56 L2086.72 1212.56 L2087.31 1212.56 L2087.89 1212.56 L2088.48 1212.56 L2089.07 1212.56 L2089.65 1212.56 L2090.24 1212.56 L2090.83 1212.56 L2091.41 1212.56 L2092 1212.56 L2092.59 1212.56 L2093.17 1212.56 L2093.76 1212.56 L2094.35 1212.56 L2094.93 1212.56 L2095.52 1212.56 L2096.1 1212.56 L2096.69 1212.56 L2097.28 1212.56 L2097.86 1212.56 L2098.45 1212.56 L2099.04 1212.56 L2099.62 1212.56 L2100.21 1212.56 L2100.8 1212.56 L2101.38 1212.56 L2101.97 1212.56 L2102.55 1212.56 L2103.14 1212.56 L2103.73 1212.56 L2104.31 1212.56 L2104.9 1212.56 L2105.49 1212.56 L2106.07 1212.56 L2106.66 1212.56 L2107.25 1212.56 L2107.83 1212.56 L2108.42 1212.56 L2109.01 1212.56 L2109.59 1212.56 L2110.18 1212.56 L2110.76 1212.56 L2111.35 1212.56 L2111.94 1212.56 L2112.52 1212.56 L2113.11 1212.56 L2113.7 1212.56 L2114.28 1212.56 L2114.87 1212.56 L2115.46 1212.56 L2116.04 1212.56 L2116.63 1212.56 L2117.22 1212.56 L2117.8 1212.56 L2118.39 1212.56 L2118.97 1212.56 L2119.56 1212.56 L2120.15 1212.56 L2120.73 1212.56 L2121.32 1212.56 L2121.91 1212.56 L2122.49 1212.56 L2123.08 1212.56 L2123.67 1212.56 L2124.25 1212.56 L2124.84 1212.56 L2125.42 1212.56 L2126.01 1212.56 L2126.6 1212.56 L2127.18 1212.56 L2127.77 1212.56 L2128.36 1212.56 L2128.94 1212.56 L2129.53 1212.56 L2130.12 1212.56 L2130.7 1212.56 L2131.29 1212.56 L2131.88 1212.56 L2132.46 1212.56 L2133.05 1212.56 L2133.63 1212.56 L2134.22 1212.56 L2134.81 1212.56 L2135.39 1212.56 L2135.98 1212.56 L2136.57 1212.56 L2137.15 1212.56 L2137.74 1212.56 L2138.33 1212.56 L2138.91 1212.56 L2139.5 1212.56 L2140.09 1212.56 L2140.67 1212.56 L2141.26 1212.56 L2141.84 1212.56 L2142.43 1212.56 L2143.02 1212.56 L2143.6 1212.56 L2144.19 1212.56 L2144.78 1212.56 L2145.36 1212.56 L2145.95 1212.56 L2146.54 1212.56 L2147.12 1212.56 L2147.71 1212.56 L2148.3 1212.56 L2148.88 1212.56 L2149.47 1212.56 L2150.05 1212.56 L2150.64 1212.56 L2151.23 1212.56 L2151.81 1212.56 L2152.4 1212.56 L2152.99 1212.56 L2153.57 1212.56 L2154.16 1212.56 L2154.75 1212.56 L2155.33 1212.56 L2155.92 1212.56 L2156.5 1212.56 L2157.09 1212.56 L2157.68 1212.56 L2158.26 1212.56 L2158.26 1211.95 L2157.68 1211.95 L2157.09 1211.95 L2156.5 1211.95 L2155.92 1211.95 L2155.33 1211.95 L2154.75 1211.95 L2154.16 1211.95 L2153.57 1211.95 L2152.99 1211.95 L2152.4 1211.95 L2151.81 1211.95 L2151.23 1211.95 L2150.64 1211.95 L2150.05 1211.95 L2149.47 1211.95 L2148.88 1211.95 L2148.3 1211.95 L2147.71 1211.95 L2147.12 1211.95 L2146.54 1211.95 L2145.95 1211.95 L2145.36 1211.95 L2144.78 1211.95 L2144.19 1211.95 L2143.6 1211.95 L2143.02 1211.95 L2142.43 1211.95 L2141.84 1211.95 L2141.26 1211.95 L2140.67 1211.95 L2140.09 1211.95 L2139.5 1211.95 L2138.91 1211.95 L2138.33 1211.95 L2137.74 1211.95 L2137.15 1211.95 L2136.57 1211.95 L2135.98 1211.95 L2135.39 1211.95 L2134.81 1211.95 L2134.22 1211.95 L2133.63 1211.95 L2133.05 1211.95 L2132.46 1211.95 L2131.88 1211.95 L2131.29 1211.95 L2130.7 1211.95 L2130.12 1211.95 L2129.53 1211.95 L2128.94 1211.95 L2128.36 1211.95 L2127.77 1211.95 L2127.18 1211.95 L2126.6 1211.95 L2126.01 1211.95 L2125.42 1211.95 L2124.84 1211.95 L2124.25 1211.95 L2123.67 1211.95 L2123.08 1211.95 L2122.49 1211.95 L2121.91 1211.95 L2121.32 1211.95 L2120.73 1211.95 L2120.15 1211.95 L2119.56 1211.95 L2118.97 1211.95 L2118.39 1211.95 L2117.8 1211.95 L2117.22 1211.95 L2116.63 1211.95 L2116.04 1211.95 L2115.46 1211.95 L2114.87 1211.95 L2114.28 1211.95 L2113.7 1211.95 L2113.11 1211.95 L2112.52 1211.95 L2111.94 1211.95 L2111.35 1211.95 L2110.76 1211.95 L2110.18 1211.95 L2109.59 1211.95 L2109.01 1211.95 L2108.42 1211.95 L2107.83 1211.95 L2107.25 1211.95 L2106.66 1211.95 L2106.07 1211.95 L2105.49 1211.95 L2104.9 1211.95 L2104.31 1211.95 L2103.73 1211.95 L2103.14 1211.95 L2102.55 1211.95 L2101.97 1211.95 L2101.38 1211.95 L2100.8 1211.95 L2100.21 1211.95 L2099.62 1211.95 L2099.04 1211.95 L2098.45 1211.95 L2097.86 1211.95 L2097.28 1211.95 L2096.69 1211.95 L2096.1 1211.95 L2095.52 1211.95 L2094.93 1211.95 L2094.35 1211.95 L2093.76 1211.95 L2093.17 1211.95 L2092.59 1211.95 L2092 1211.95 L2091.41 1211.95 L2090.83 1211.95 L2090.24 1211.95 L2089.65 1211.95 L2089.07 1211.95 L2088.48 1211.95 L2087.89 1211.95 L2087.31 1211.95 L2086.72 1211.95 L2086.14 1211.95 L2085.55 1211.95 L2084.96 1211.95 L2084.38 1211.95 L2083.79 1211.95 L2083.2 1211.95 L2082.62 1211.95 L2082.03 1211.95 L2081.44 1211.95 L2080.86 1211.95 L2080.27 1211.95 L2079.68 1211.95 L2079.1 1211.95 L2078.51 1211.95 L2077.93 1211.95 L2077.34 1211.95 L2076.75 1211.95 L2076.17 1211.95 L2075.58 1211.95 L2074.99 1211.95 L2074.41 1211.95 L2073.82 1211.95 L2073.23 1211.95 L2072.65 1211.95 L2072.06 1211.95 L2071.48 1211.95 L2070.89 1211.95 L2070.3 1211.95 L2069.72 1211.95 L2069.13 1211.95 L2068.54 1211.95 L2067.96 1211.95 L2067.37 1211.95 L2066.78 1211.95 L2066.2 1211.95 L2065.61 1211.95 L2065.02 1211.95 L2064.44 1211.95 L2063.85 1211.95 L2063.27 1211.95 L2062.68 1211.95 L2062.09 1211.95 L2061.51 1211.95 L2060.92 1211.95 L2060.33 1211.95 L2059.75 1211.95 L2059.16 1211.95 L2058.57 1211.95 L2057.99 1211.95 L2057.4 1211.95 L2056.81 1211.95 L2056.23 1211.95 L2055.64 1211.95 L2055.06 1211.95 L2054.47 1211.95 L2053.88 1211.95 L2053.3 1211.95 L2052.71 1211.95 L2052.12 1211.95 L2051.54 1211.95 L2050.95 1211.95 L2050.36 1211.95 L2049.78 1211.95 L2049.19 1211.95 L2048.6 1211.95 L2048.02 1211.95 L2047.43 1211.95 L2046.85 1211.95 L2046.26 1211.95 L2045.67 1211.95 L2045.09 1211.95 L2044.5 1211.95 L2043.91 1211.95 L2043.33 1211.95 L2042.74 1211.95 L2042.15 1211.95 L2041.57 1211.95 L2040.98 1211.95 L2040.4 1211.95 L2039.81 1211.95 L2039.22 1211.95 L2038.64 1211.95 L2038.05 1211.95 L2037.46 1211.95 L2036.88 1211.95 L2036.29 1211.95 L2035.7 1211.95 L2035.12 1211.95 L2034.53 1211.95 L2033.94 1211.95 L2033.36 1211.95 L2032.77 1211.95 L2032.19 1211.95 L2031.6 1211.95 L2031.01 1211.95 L2030.43 1211.95 L2029.84 1211.95 L2029.25 1211.95 L2028.67 1211.95 L2028.08 1211.95 L2027.49 1211.95 L2026.91 1211.95 L2026.32 1211.95 L2025.73 1211.95 L2025.15 1211.95 L2024.56 1211.95 L2023.98 1211.95 L2023.39 1211.95 L2022.8 1211.95 L2022.22 1211.95 L2021.63 1211.95 L2021.04 1211.95 L2020.46 1211.95 L2019.87 1211.95 L2019.28 1211.95 L2018.7 1211.95 L2018.11 1211.95 L2017.53 1211.95 L2016.94 1211.95 L2016.35 1211.95 L2015.77 1211.95 L2015.18 1211.95 L2014.59 1211.95 L2014.01 1211.95 L2013.42 1211.95 L2012.83 1211.95 L2012.25 1211.95 L2011.66 1211.95 L2011.07 1211.95 L2010.49 1211.95 L2009.9 1211.95 L2009.32 1211.95 L2008.73 1211.95 L2008.14 1211.95 L2007.56 1211.95 L2006.97 1211.95 L2006.38 1211.95 L2005.8 1211.95 L2005.21 1211.95 L2004.62 1211.95 L2004.04 1211.95 L2003.45 1211.95 L2002.86 1211.95 L2002.28 1211.95 L2001.69 1211.95 L2001.11 1211.95 L2000.52 1211.95 L1999.93 1211.95 L1999.35 1211.95 L1998.76 1211.95 L1998.17 1211.95 L1997.59 1211.95 L1997 1211.95 L1996.41 1211.95 L1995.83 1211.95 L1995.24 1211.95 L1994.65 1211.95 L1994.07 1211.95 L1993.48 1211.95 L1992.9 1211.95 L1992.31 1211.95 L1991.72 1211.95 L1991.14 1211.95 L1990.55 1211.95 L1989.96 1211.95 L1989.38 1211.95 L1988.79 1211.95 L1988.2 1211.95 L1987.62 1211.95 L1987.03 1211.95 L1986.45 1211.95 L1985.86 1211.95 L1985.27 1211.95 L1984.69 1211.95 L1984.1 1211.95 L1983.51 1211.95 L1982.93 1211.95 L1982.34 1211.95 L1981.75 1211.95 L1981.17 1211.95 L1980.58 1211.95 L1979.99 1211.95 L1979.41 1211.95 L1978.82 1211.95 L1978.24 1211.95 L1977.65 1211.95 L1977.06 1211.95 L1976.48 1211.95 L1975.89 1211.95 L1975.3 1211.95 L1974.72 1211.95 L1974.13 1211.95 L1973.54 1211.95 L1972.96 1211.95 L1972.37 1211.95 L1971.78 1211.95 L1971.2 1211.95 L1970.61 1211.95 L1970.03 1211.95 L1969.44 1211.95 L1968.85 1211.95 L1968.27 1211.95 L1967.68 1211.95 L1967.09 1211.95 L1966.51 1211.95 L1965.92 1211.95 L1965.33 1211.95 L1964.75 1211.95 L1964.16 1211.95 L1963.58 1211.95 L1962.99 1211.95 L1962.4 1211.95 L1961.82 1211.95 L1961.23 1211.95 L1960.64 1211.95 L1960.06 1211.95 L1959.47 1211.95 L1958.88 1211.95 L1958.3 1211.95 L1957.71 1211.95 L1957.12 1211.95 L1956.54 1211.95 L1955.95 1211.95 L1955.37 1211.95 L1954.78 1211.95 L1954.19 1211.95 L1953.61 1211.95 L1953.02 1211.95 L1952.43 1211.95 L1951.85 1211.95 L1951.26 1211.95 L1950.67 1211.95 L1950.09 1211.95 L1949.5 1211.95 L1948.91 1211.95 L1948.33 1211.95 L1947.74 1211.95 L1947.16 1211.95 L1946.57 1211.95 L1945.98 1211.95 L1945.4 1211.95 L1944.81 1211.95 L1944.22 1211.95 L1943.64 1211.95 L1943.05 1211.95 L1942.46 1211.95 L1941.88 1211.95 L1941.29 1211.95 L1940.71 1211.95 L1940.12 1211.95 L1939.53 1211.95 L1938.95 1211.95 L1938.36 1211.95 L1937.77 1211.95 L1937.19 1211.95 L1936.6 1211.95 L1936.01 1211.95 L1935.43 1211.95 L1934.84 1211.95 L1934.25 1211.95 L1933.67 1211.95 L1933.08 1211.95 L1932.5 1211.95 L1931.91 1211.95 L1931.32 1211.95 L1930.74 1211.95 L1930.15 1211.95 L1929.56 1211.95 L1928.98 1211.95 L1928.39 1211.95 L1927.8 1211.95 L1927.22 1211.95 L1926.63 1211.95 L1926.04 1211.95 L1925.46 1211.95 L1924.87 1211.95 L1924.29 1211.95 L1923.7 1211.95 L1923.11 1211.95 L1922.53 1211.95 L1921.94 1211.95 L1921.35 1211.95 L1920.77 1211.95 L1920.18 1211.95 L1919.59 1211.95 L1919.01 1211.95 L1918.42 1211.95 L1917.83 1211.95 L1917.25 1211.95 L1916.66 1211.95 L1916.08 1211.95 L1915.49 1211.95 L1914.9 1211.95 L1914.32 1211.95 L1913.73 1211.95 L1913.14 1211.95 L1912.56 1211.95 L1911.97 1211.95 L1911.38 1211.95 L1910.8 1211.95 L1910.21 1211.95 L1909.63 1211.95 L1909.04 1211.95 L1908.45 1211.95 L1907.87 1211.95 L1907.28 1211.95 L1906.69 1211.95 L1906.11 1211.95 L1905.52 1211.95 L1904.93 1211.95 L1904.35 1211.95 L1903.76 1211.95 L1903.17 1211.95 L1902.59 1211.95 L1902 1211.95 L1901.42 1211.95 L1900.83 1211.95 L1900.24 1211.95 L1899.66 1211.95 L1899.07 1211.95 L1898.48 1211.95 L1897.9 1211.95 L1897.31 1211.95 L1896.72 1211.95 L1896.14 1211.95 L1895.55 1211.95 L1894.96 1211.95 L1894.38 1211.95 L1893.79 1211.95 L1893.21 1211.95 L1892.62 1211.95 L1892.03 1211.95 L1891.45 1211.95 L1890.86 1211.95 L1890.27 1211.95 L1889.69 1211.95 L1889.1 1211.95 L1888.51 1211.95 L1887.93 1211.95 L1887.34 1211.95 L1886.76 1211.95 L1886.17 1211.95 L1885.58 1211.95 L1885 1211.95 L1884.41 1211.95 L1883.82 1211.95 L1883.24 1211.95 L1882.65 1211.95 L1882.06 1211.95 L1881.48 1211.95 L1880.89 1211.95 L1880.3 1211.95 L1879.72 1211.95 L1879.13 1211.95 L1878.55 1211.95 L1877.96 1211.95 L1877.37 1211.95 L1876.79 1211.95 L1876.2 1211.95 L1875.61 1211.95 L1875.03 1211.95 L1874.44 1211.95 L1873.85 1211.95 L1873.27 1211.95 L1872.68 1211.95 L1872.09 1211.95 L1871.51 1211.95 L1870.92 1211.95 L1870.34 1211.95 L1869.75 1211.95 L1869.16 1211.95 L1868.58 1211.95 L1867.99 1211.95 L1867.4 1211.95 L1866.82 1211.95 L1866.23 1211.95 L1865.64 1211.95 L1865.06 1211.95 L1864.47 1211.95 L1863.88 1211.95 L1863.3 1211.95 L1862.71 1211.95 L1862.13 1211.95 L1861.54 1211.95 L1860.95 1211.95 L1860.37 1211.95 L1859.78 1211.95 L1859.19 1211.95 L1858.61 1211.95 L1858.02 1211.95 L1857.43 1211.95 L1856.85 1211.95 L1856.26 1211.95 L1855.68 1211.95 L1855.09 1211.95 L1854.5 1211.95 L1853.92 1211.95 L1853.33 1211.95 L1852.74 1211.95 L1852.16 1211.95 L1851.57 1211.95 L1850.98 1211.95 L1850.4 1211.95 L1849.81 1211.95 L1849.22 1211.95 L1848.64 1211.95 L1848.05 1211.95 L1847.47 1211.95 L1846.88 1211.95 L1846.29 1211.95 L1845.71 1211.95 L1845.12 1211.95 L1844.53 1211.95 L1843.95 1211.95 L1843.36 1211.95 L1842.77 1211.95 L1842.19 1211.95 L1841.6 1211.95 L1841.01 1211.95 L1840.43 1211.95 L1839.84 1211.95 L1839.26 1211.95 L1838.67 1211.95 L1838.08 1211.95 L1837.5 1211.95 L1836.91 1211.95 L1836.32 1211.95 L1835.74 1211.95 L1835.15 1211.95 L1834.56 1211.95 L1833.98 1211.95 L1833.39 1211.95 L1832.81 1211.95 L1832.22 1211.95 L1831.63 1211.95 L1831.05 1211.95 L1830.46 1211.95 L1829.87 1211.95 L1829.29 1211.95 L1828.7 1211.95 L1828.11 1211.95 L1827.53 1211.95 L1826.94 1211.95 L1826.35 1211.95 L1825.77 1211.95 L1825.18 1211.95 L1824.6 1211.95 L1824.01 1211.95 L1823.42 1211.95 L1822.84 1211.95 L1822.25 1211.95 L1821.66 1211.95 L1821.08 1211.95 L1820.49 1211.95 L1819.9 1211.95 L1819.32 1211.95 L1818.73 1211.95 L1818.14 1211.95 L1817.56 1211.95 L1816.97 1211.95 L1816.39 1211.95 L1815.8 1211.95 L1815.21 1211.95 L1814.63 1211.95 L1814.04 1211.95 L1813.45 1211.95 L1812.87 1211.95 L1812.28 1211.95 L1811.69 1211.95 L1811.11 1211.95 L1810.52 1211.95 L1809.94 1211.95 L1809.35 1211.95 L1808.76 1211.95 L1808.18 1211.95 L1807.59 1211.95 L1807 1211.95 L1806.42 1211.95 L1805.83 1211.95 L1805.24 1211.95 L1804.66 1211.95 L1804.07 1211.95 L1803.48 1211.95 L1802.9 1211.95 L1802.31 1211.95 L1801.73 1211.95 L1801.14 1211.95 L1800.55 1211.95 L1799.97 1211.95 L1799.38 1211.95 L1798.79 1211.95 L1798.21 1211.95 L1797.62 1211.95 L1797.03 1211.95 L1796.45 1211.95 L1795.86 1211.95 L1795.27 1211.95 L1794.69 1211.95 L1794.1 1211.95 L1793.52 1211.95 L1792.93 1211.95 L1792.34 1211.95 L1791.76 1211.95 L1791.17 1211.95 L1790.58 1211.95 L1790 1211.95 L1789.41 1211.95 L1788.82 1211.95 L1788.24 1211.95 L1787.65 1211.95 L1787.06 1211.95 L1786.48 1211.95 L1785.89 1211.95 L1785.31 1211.95 L1784.72 1211.95 L1784.13 1211.95 L1783.55 1211.95 L1782.96 1211.95 L1782.37 1211.95 L1781.79 1211.95 L1781.2 1211.95 L1780.61 1211.95 L1780.03 1211.95 L1779.44 1211.95 L1778.86 1211.95 L1778.27 1211.95 L1777.68 1211.95 L1777.1 1211.95 L1776.51 1211.95 L1775.92 1211.95 L1775.34 1211.95 L1774.75 1211.95 L1774.16 1211.95 L1773.58 1211.95 L1772.99 1211.95 L1772.4 1211.95 L1771.82 1211.95 L1771.23 1211.95 L1770.65 1211.95 L1770.06 1211.95 L1769.47 1211.95 L1768.89 1211.95 L1768.3 1211.95 L1767.71 1211.95 L1767.13 1211.95 L1766.54 1211.95 L1765.95 1211.95 L1765.37 1211.95 L1764.78 1211.95 L1764.19 1211.95 L1763.61 1211.95 L1763.02 1211.95 L1762.44 1211.95 L1761.85 1211.95 L1761.26 1211.95 L1760.68 1211.95 L1760.09 1211.95 L1759.5 1211.95 L1758.92 1211.95 L1758.33 1211.95 L1757.74 1211.95 L1757.16 1211.95 L1756.57 1211.95 L1755.99 1211.95 L1755.4 1211.95 L1754.81 1211.95 L1754.23 1211.95 L1753.64 1211.95 L1753.05 1211.95 L1752.47 1211.95 L1751.88 1211.95 L1751.29 1211.95 L1750.71 1211.95 L1750.12 1211.95 L1749.53 1211.95 L1748.95 1211.95 L1748.36 1211.95 L1747.78 1211.95 L1747.19 1211.95 L1746.6 1211.95 L1746.02 1211.95 L1745.43 1211.95 L1744.84 1211.95 L1744.26 1211.95 L1743.67 1211.95 L1743.08 1211.95 L1742.5 1211.95 L1741.91 1211.95 L1741.32 1211.95 L1740.74 1211.95 L1740.15 1211.95 L1739.57 1211.95 L1738.98 1211.95 L1738.39 1211.95 L1737.81 1211.95 L1737.22 1211.95 L1736.63 1211.95 L1736.05 1211.95 L1735.46 1211.95 L1734.87 1211.95 L1734.29 1211.95 L1733.7 1211.95 L1733.11 1211.95 L1732.53 1211.95 L1731.94 1211.95 L1731.36 1211.95 L1730.77 1211.95 L1730.18 1211.95 L1729.6 1211.95 L1729.01 1211.95 L1728.42 1211.95 L1727.84 1211.95 L1727.25 1211.95 L1726.66 1211.95 L1726.08 1211.95 L1725.49 1211.95 L1724.91 1211.95 L1724.32 1211.95 L1723.73 1211.95 L1723.15 1211.95 L1722.56 1211.95 L1721.97 1211.95 L1721.39 1211.95 L1720.8 1211.95 L1720.21 1211.95 L1719.63 1211.95 L1719.04 1211.95 L1718.45 1211.95 L1717.87 1211.95 L1717.28 1211.95 L1716.7 1211.95 L1716.11 1211.95 L1715.52 1211.95 L1714.94 1211.95 L1714.35 1211.95 L1713.76 1211.95 L1713.18 1211.95 L1712.59 1211.95 L1712 1211.95 L1711.42 1211.95 L1710.83 1211.95 L1710.24 1211.95 L1709.66 1211.95 L1709.07 1211.95 L1708.49 1211.95 L1707.9 1211.95 L1707.31 1211.95 L1706.73 1211.95 L1706.14 1211.95 L1705.55 1211.95 L1704.97 1211.95 L1704.38 1211.95 L1703.79 1211.95 L1703.21 1211.95 L1702.62 1211.95 L1702.04 1211.95 L1701.45 1211.95 L1700.86 1211.95 L1700.28 1211.95 L1699.69 1211.95 L1699.1 1211.95 L1698.52 1211.95 L1697.93 1211.95 L1697.34 1211.95 L1696.76 1211.95 L1696.17 1211.95 L1695.58 1211.95 L1695 1211.95 L1694.41 1211.95 L1693.83 1211.95 L1693.24 1211.95 L1692.65 1211.95 L1692.07 1211.95 L1691.48 1211.95 L1690.89 1211.95 L1690.31 1211.95 L1689.72 1211.95 L1689.13 1211.95 L1688.55 1211.95 L1687.96 1211.95 L1687.37 1211.95 L1686.79 1211.95 L1686.2 1211.95 L1685.62 1211.95 L1685.03 1211.95 L1684.44 1211.95 L1683.86 1211.95 L1683.27 1211.95 L1682.68 1211.95 L1682.1 1211.95 L1681.51 1211.95 L1680.92 1211.95 L1680.34 1211.95 L1679.75 1211.95 L1679.17 1211.95 L1678.58 1211.95 L1677.99 1211.95 L1677.41 1211.95 L1676.82 1211.95 L1676.23 1211.95 L1675.65 1211.95 L1675.06 1211.95 L1674.47 1211.95 L1673.89 1211.95 L1673.3 1211.95 L1672.71 1211.95 L1672.13 1211.95 L1671.54 1211.95 L1670.96 1211.95 L1670.37 1211.95 L1669.78 1211.95 L1669.2 1211.95 L1668.61 1211.95 L1668.02 1211.95 L1667.44 1211.95 L1666.85 1211.95 L1666.26 1211.95 L1665.68 1211.95 L1665.09 1211.95 L1664.5 1211.95 L1663.92 1211.95 L1663.33 1211.95 L1662.75 1211.95 L1662.16 1211.95 L1661.57 1211.95 L1660.99 1211.95 L1660.4 1211.95 L1659.81 1211.95 L1659.23 1211.95 L1658.64 1211.95 L1658.05 1211.95 L1657.47 1211.95 L1656.88 1211.95 L1656.29 1211.95 L1655.71 1211.95 L1655.12 1211.95 L1654.54 1211.95 L1653.95 1211.95 L1653.36 1211.95 L1652.78 1211.95 L1652.19 1211.95 L1651.6 1211.95 L1651.02 1211.95 L1650.43 1211.95 L1649.84 1211.95 L1649.26 1211.95 L1648.67 1211.95 L1648.09 1211.95 L1647.5 1211.95 L1646.91 1211.95 L1646.33 1211.95 L1645.74 1211.95 L1645.15 1211.95 L1644.57 1211.95 L1643.98 1211.95 L1643.39 1211.95 L1642.81 1211.95 L1642.22 1211.95 L1641.63 1211.95 L1641.05 1211.95 L1640.46 1211.95 L1639.88 1211.95 L1639.29 1211.95 L1638.7 1211.95 L1638.12 1211.95 L1637.53 1211.95 L1636.94 1211.95 L1636.36 1211.95 L1635.77 1211.95 L1635.18 1211.95 L1634.6 1211.95 L1634.01 1211.95 L1633.42 1211.95 L1632.84 1211.95 L1632.25 1211.95 L1631.67 1211.95 L1631.08 1211.95 L1630.49 1211.95 L1629.91 1211.95 L1629.32 1211.95 L1628.73 1211.95 L1628.15 1211.95 L1627.56 1211.95 L1626.97 1211.95 L1626.39 1211.95 L1625.8 1211.95 L1625.22 1211.95 L1624.63 1211.95 L1624.04 1211.95 L1623.46 1211.95 L1622.87 1211.95 L1622.28 1211.95 L1621.7 1211.95 L1621.11 1211.95 L1620.52 1211.95 L1619.94 1211.95 L1619.35 1211.95 L1618.76 1211.95 L1618.18 1211.95 L1617.59 1211.95 L1617.01 1211.95 L1616.42 1211.95 L1615.83 1211.95 L1615.25 1211.95 L1614.66 1211.95 L1614.07 1211.95 L1613.49 1211.95 L1612.9 1211.95 L1612.31 1211.95 L1611.73 1211.95 L1611.14 1211.95 L1610.55 1211.95 L1609.97 1211.95 L1609.38 1211.95 L1608.8 1211.95 L1608.21 1211.95 L1607.62 1211.95 L1607.04 1211.95 L1606.45 1211.95 L1605.86 1211.95 L1605.28 1211.95 L1604.69 1211.95 L1604.1 1211.95 L1603.52 1211.95 L1602.93 1211.95 L1602.34 1211.95 L1601.76 1211.95 L1601.17 1211.95 L1600.59 1211.95 L1600 1211.95 L1599.41 1211.95 L1598.83 1211.95 L1598.24 1211.95 L1597.65 1211.95 L1597.07 1211.95 L1596.48 1211.95 L1595.89 1211.95 L1595.31 1211.95 L1594.72 1211.95 L1594.14 1211.95 L1593.55 1211.95 L1592.96 1211.95 L1592.38 1211.95 L1591.79 1211.95 L1591.2 1211.95 L1590.62 1211.95 L1590.03 1211.95 L1589.44 1211.95 L1588.86 1211.95 L1588.27 1211.95 L1587.68 1211.95 L1587.1 1211.95 L1586.51 1211.95 L1585.93 1211.95 L1585.34 1211.95 L1584.75 1211.95 L1584.17 1211.95 L1583.58 1211.95 L1582.99 1211.95 L1582.41 1211.95 L1581.82 1211.95 L1581.23 1211.95 L1580.65 1211.95 L1580.06 1211.95 L1579.47 1211.95 L1578.89 1211.95 L1578.3 1211.95 L1577.72 1211.95 L1577.13 1211.95 L1576.54 1211.95 L1575.96 1211.95 L1575.37 1211.95 L1574.78 1211.95 L1574.2 1211.95 L1573.61 1211.95 L1573.02 1211.95 L1572.44 1211.95 L1571.85 1211.95 L1571.27 1211.95 L1570.68 1211.95 L1570.09 1211.95 L1569.51 1211.95 L1568.92 1211.95 L1568.33 1211.95 L1567.75 1211.95 L1567.16 1211.95 L1566.57 1211.95 L1565.99 1211.95 L1565.4 1211.95 L1564.81 1211.95 L1564.23 1211.95 L1563.64 1211.95 L1563.06 1211.95 L1562.47 1211.95 L1561.88 1211.95 L1561.3 1211.95 L1560.71 1211.95 L1560.12 1211.95 L1559.54 1211.95 L1558.95 1211.95 L1558.36 1211.95 L1557.78 1211.95 L1557.19 1211.95 L1556.6 1211.95 L1556.02 1211.95 L1555.43 1211.95 L1554.85 1211.95 L1554.26 1211.95 L1553.67 1211.95 L1553.09 1211.95 L1552.5 1211.95 L1551.91 1211.95 L1551.33 1211.95 L1550.74 1211.95 L1550.15 1211.95 L1549.57 1211.95 L1548.98 1211.95 L1548.4 1211.95 L1547.81 1211.95 L1547.22 1211.95 L1546.64 1211.95 L1546.05 1211.95 L1545.46 1211.95 L1544.88 1211.95 L1544.29 1211.95 L1543.7 1211.95 L1543.12 1211.95 L1542.53 1211.95 L1541.94 1211.95 L1541.36 1211.95 L1540.77 1211.95 L1540.19 1211.95 L1539.6 1211.95 L1539.01 1211.95 L1538.43 1211.95 L1537.84 1211.95 L1537.25 1211.95 L1536.67 1211.95 L1536.08 1211.95 L1535.49 1211.95 L1534.91 1211.95 L1534.32 1211.95 L1533.73 1211.95 L1533.15 1211.95 L1532.56 1211.95 L1531.98 1211.95 L1531.39 1211.95 L1530.8 1211.95 L1530.22 1211.95 L1529.63 1211.95 L1529.04 1211.95 L1528.46 1211.95 L1527.87 1211.95 L1527.28 1211.95 L1526.7 1211.95 L1526.11 1211.95 L1525.52 1211.95 L1524.94 1211.95 L1524.35 1211.95 L1523.77 1211.95 L1523.18 1211.95 L1522.59 1211.95 L1522.01 1211.95 L1521.42 1211.95 L1520.83 1211.95 L1520.25 1211.95 L1519.66 1211.95 L1519.07 1211.95 L1518.49 1211.95 L1517.9 1211.95 L1517.32 1211.95 L1516.73 1211.95 L1516.14 1211.95 L1515.56 1211.95 L1514.97 1211.95 L1514.38 1211.95 L1513.8 1211.95 L1513.21 1211.95 L1512.62 1211.95 L1512.04 1211.95 L1511.45 1211.95 L1510.86 1211.95 L1510.28 1211.95 L1509.69 1211.95 L1509.11 1211.95 L1508.52 1211.95 L1507.93 1211.95 L1507.35 1211.95 L1506.76 1211.95 L1506.17 1211.95 L1505.59 1211.95 L1505 1211.95 L1504.41 1211.95 L1503.83 1211.95 L1503.24 1211.95 L1502.65 1211.95 L1502.07 1211.95 L1501.48 1211.95 L1500.9 1211.95 L1500.31 1211.95 L1499.72 1211.95 L1499.14 1211.95 L1498.55 1211.95 L1497.96 1211.95 L1497.38 1211.95 L1496.79 1211.95 L1496.2 1211.95 L1495.62 1211.95 L1495.03 1211.95 L1494.45 1211.95 L1493.86 1211.95 L1493.27 1211.95 L1492.69 1211.95 L1492.1 1211.95 L1491.51 1211.95 L1490.93 1211.95 L1490.34 1211.95 L1489.75 1211.95 L1489.17 1211.95 L1488.58 1211.95 L1487.99 1211.95 L1487.41 1211.95 L1486.82 1211.95 L1486.24 1211.95 L1485.65 1211.95 L1485.06 1211.95 L1484.48 1211.95 L1483.89 1211.95 L1483.3 1211.95 L1482.72 1211.95 L1482.13 1211.95 L1481.54 1211.95 L1480.96 1211.95 L1480.37 1211.95 L1479.78 1211.95 L1479.2 1211.95 L1478.61 1211.95 L1478.03 1211.95 L1477.44 1211.95 L1476.85 1211.95 L1476.27 1211.95 L1475.68 1211.95 L1475.09 1211.95 L1474.51 1211.95 L1473.92 1211.95 L1473.33 1211.95 L1472.75 1211.95 L1472.16 1211.95 L1471.57 1211.95 L1470.99 1211.95 L1470.4 1211.95 L1469.82 1211.95 L1469.23 1211.95 L1468.64 1211.95 L1468.06 1211.95 L1467.47 1211.95 L1466.88 1211.95 L1466.3 1211.95 L1465.71 1211.95 L1465.12 1211.95 L1464.54 1211.95 L1463.95 1211.95 L1463.37 1211.95 L1462.78 1211.95 L1462.19 1211.95 L1461.61 1211.95 L1461.02 1211.95 L1460.43 1211.95 L1459.85 1211.95 L1459.26 1211.95 L1458.67 1211.95 L1458.09 1211.95 L1457.5 1211.95 L1456.91 1211.95 L1456.33 1211.95 L1455.74 1211.95 L1455.16 1211.95 L1454.57 1211.95 L1453.98 1211.95 L1453.4 1211.95 L1452.81 1211.95 L1452.22 1211.95 L1451.64 1211.95 L1451.05 1211.95 L1450.46 1211.95 L1449.88 1211.95 L1449.29 1211.95 L1448.7 1211.95 L1448.12 1211.95 L1447.53 1211.95 L1446.95 1211.95 L1446.36 1211.95 L1445.77 1211.95 L1445.19 1211.95 L1444.6 1211.95 L1444.01 1211.95 L1443.43 1211.95 L1442.84 1211.95 L1442.25 1211.95 L1441.67 1211.95 L1441.08 1211.95 L1440.5 1211.95 L1439.91 1211.95 L1439.32 1211.95 L1438.74 1211.95 L1438.15 1211.95 L1437.56 1211.95 L1436.98 1211.95 L1436.39 1211.95 L1435.8 1211.95 L1435.22 1211.95 L1434.63 1211.95 L1434.04 1211.95 L1433.46 1211.95 L1432.87 1211.95 L1432.29 1211.95 L1431.7 1211.95 L1431.11 1211.95 L1430.53 1211.95 L1429.94 1211.95 L1429.35 1211.95 L1428.77 1211.95 L1428.18 1211.95 L1427.59 1211.95 L1427.01 1211.95 L1426.42 1211.95 L1425.83 1211.95 L1425.25 1211.95 L1424.66 1211.95 L1424.08 1211.95 L1423.49 1211.95 L1422.9 1211.95 L1422.32 1211.95 L1421.73 1211.95 L1421.14 1211.95 L1420.56 1211.95 L1419.97 1211.95 L1419.38 1211.95 L1418.8 1211.95 L1418.21 1211.95 L1417.63 1211.95 L1417.04 1211.95 L1416.45 1211.95 L1415.87 1211.95 L1415.28 1211.95 L1414.69 1211.95 L1414.11 1211.95 L1413.52 1211.95 L1412.93 1211.95 L1412.35 1211.95 L1411.76 1211.95 L1411.17 1211.95 L1410.59 1211.95 L1410 1211.95 L1409.42 1211.95 L1408.83 1211.95 L1408.24 1211.95 L1407.66 1211.95 L1407.07 1211.95 L1406.48 1211.95 L1405.9 1211.95 L1405.31 1211.95 L1404.72 1211.95 L1404.14 1211.95 L1403.55 1211.95 L1402.96 1211.95 L1402.38 1211.95 L1401.79 1211.95 L1401.21 1211.95 L1400.62 1211.95 L1400.03 1211.95 L1399.45 1211.95 L1398.86 1211.95 L1398.27 1211.95 L1397.69 1211.95 L1397.1 1211.95 L1396.51 1211.95 L1395.93 1211.95 L1395.34 1211.95 L1394.75 1211.95 L1394.17 1211.95 L1393.58 1211.95 L1393 1211.95 L1392.41 1211.95 L1391.82 1211.95 L1391.24 1211.95 L1390.65 1211.95 L1390.06 1211.95 L1389.48 1211.95 L1388.89 1211.95 L1388.3 1211.95 L1387.72 1211.95 L1387.13 1211.95 L1386.55 1211.95 L1385.96 1211.95 L1385.37 1211.95 L1384.79 1211.95 L1384.2 1211.95 L1383.61 1211.95 L1383.03 1211.95 L1382.44 1211.95 L1381.85 1211.95 L1381.27 1211.95 L1380.68 1211.95 L1380.09 1211.95 L1379.51 1211.95 L1378.92 1211.95 L1378.34 1211.95 L1377.75 1211.95 L1377.16 1211.95 L1376.58 1211.95 L1375.99 1211.95 L1375.4 1211.95 L1374.82 1211.95 L1374.23 1211.95 L1373.64 1211.95 L1373.06 1211.95 L1372.47 1211.95 L1371.88 1211.95 L1371.3 1211.95 L1370.71 1211.95 L1370.13 1211.95 L1369.54 1211.95 L1368.95 1211.95 L1368.37 1211.95 L1367.78 1211.95 L1367.19 1211.95 L1366.61 1211.95 L1366.02 1211.95 L1365.43 1211.95 L1364.85 1211.95 L1364.26 1211.95 L1363.68 1211.95 L1363.09 1211.95 L1362.5 1211.95 L1361.92 1211.95 L1361.33 1211.95 L1360.74 1211.95 L1360.16 1211.95 L1359.57 1211.95 L1358.98 1211.95 L1358.4 1211.95 L1357.81 1211.95 L1357.22 1211.95 L1356.64 1211.95 L1356.05 1211.95 L1355.47 1211.95 L1354.88 1211.95 L1354.29 1211.95 L1353.71 1211.95 L1353.12 1211.95 L1352.53 1211.95 L1351.95 1211.95 L1351.36 1211.95 L1350.77 1211.95 L1350.19 1211.95 L1349.6 1211.95 L1349.01 1211.95 L1348.43 1211.95 L1347.84 1211.95 L1347.26 1211.95 L1346.67 1211.95 L1346.08 1211.95 L1345.5 1211.95 L1344.91 1211.95 L1344.32 1211.95 L1343.74 1211.95 L1343.15 1211.95 L1342.56 1211.95 L1341.98 1211.95 L1341.39 1211.95 L1340.8 1211.95 L1340.22 1211.95 L1339.63 1211.95 L1339.05 1211.95 L1338.46 1211.95 L1337.87 1211.95 L1337.29 1211.95 L1336.7 1211.95 L1336.11 1211.95 L1335.53 1211.95 L1334.94 1211.95 L1334.35 1211.95 L1333.77 1211.95 L1333.18 1211.95 L1332.6 1211.95 L1332.01 1211.95 L1331.42 1211.95 L1330.84 1211.95 L1330.25 1211.95 L1329.66 1211.95 L1329.08 1211.95 L1328.49 1211.95 L1327.9 1211.95 L1327.32 1211.95 L1326.73 1211.95 L1326.14 1211.95 L1325.56 1211.95 L1324.97 1211.95 L1324.39 1211.95 L1323.8 1211.95 L1323.21 1211.95 L1322.63 1211.95 L1322.04 1211.95 L1321.45 1211.95 L1320.87 1211.95 L1320.28 1211.95 L1319.69 1211.95 L1319.11 1211.95 L1318.52 1211.95 L1317.93 1211.95 L1317.35 1211.95 L1316.76 1211.95 L1316.18 1211.95 L1315.59 1211.95 L1315 1211.95 L1314.42 1211.95 L1313.83 1211.95 L1313.24 1211.95 L1312.66 1211.95 L1312.07 1211.95 L1311.48 1211.95 L1310.9 1211.95 L1310.31 1211.95 L1309.73 1211.95 L1309.14 1211.95 L1308.55 1211.95 L1307.97 1211.95 L1307.38 1211.95 L1306.79 1211.95 L1306.21 1211.95 L1305.62 1211.95 L1305.03 1211.95 L1304.45 1211.95 L1303.86 1211.95 L1303.27 1211.95 L1302.69 1211.95 L1302.1 1211.95 L1301.52 1211.95 L1300.93 1211.95 L1300.34 1211.95 L1299.76 1211.95 L1299.17 1211.95 L1298.58 1211.95 L1298 1211.95 L1297.41 1211.95 L1296.82 1211.95 L1296.24 1211.95 L1295.65 1211.95 L1295.06 1211.95 L1294.48 1211.95 L1293.89 1211.95 L1293.31 1211.95 L1292.72 1211.95 L1292.13 1211.95 L1291.55 1211.95 L1290.96 1211.95 L1290.37 1211.95 L1289.79 1211.95 L1289.2 1211.95 L1288.61 1211.95 L1288.03 1211.95 L1287.44 1211.95 L1286.86 1211.95 L1286.27 1211.95 L1285.68 1211.95 L1285.1 1211.95 L1284.51 1211.95 L1283.92 1211.95 L1283.34 1211.95 L1282.75 1211.95 L1282.16 1211.95 L1281.58 1211.95 L1280.99 1211.95 L1280.4 1211.95 L1279.82 1211.95 L1279.23 1211.95 L1278.65 1211.95 L1278.06 1211.95 L1277.47 1211.95 L1276.89 1211.95 L1276.3 1211.95 L1275.71 1211.95 L1275.13 1211.95 L1274.54 1211.95 L1273.95 1211.95 L1273.37 1211.95 L1272.78 1211.95 L1272.19 1211.95 L1271.61 1211.95 L1271.02 1211.95 L1270.44 1211.95 L1269.85 1211.95 L1269.26 1211.95 L1268.68 1211.95 L1268.09 1211.95 L1267.5 1211.95 L1266.92 1211.95 L1266.33 1211.95 L1265.74 1211.95 L1265.16 1211.95 L1264.57 1211.95 L1263.98 1211.95 L1263.4 1211.95 L1262.81 1211.95 L1262.23 1211.95 L1261.64 1211.95 L1261.05 1211.95 L1260.47 1211.95 L1259.88 1211.95 L1259.29 1211.95 L1258.71 1211.95 L1258.12 1211.95 L1257.53 1211.95 L1256.95 1211.95 L1256.36 1211.95 L1255.78 1211.95 L1255.19 1211.95 L1254.6 1211.95 L1254.02 1211.95 L1253.43 1211.95 L1252.84 1211.95 L1252.26 1211.95 L1251.67 1211.95 L1251.08 1211.95 L1250.5 1211.95 L1249.91 1211.95 L1249.32 1211.95 L1248.74 1211.95 L1248.15 1211.95 L1247.57 1211.95 L1246.98 1211.95 L1246.39 1211.95 L1245.81 1211.95 L1245.22 1211.95 L1244.63 1211.95 L1244.05 1211.95 L1243.46 1211.95 L1242.87 1211.95 L1242.29 1211.95 L1241.7 1211.95 L1241.11 1211.95 L1240.53 1211.95 L1239.94 1211.95 L1239.36 1211.95 L1238.77 1211.95 L1238.18 1211.95 L1237.6 1211.95 L1237.01 1211.95 L1236.42 1211.95 L1235.84 1211.95 L1235.25 1211.95 L1234.66 1211.95 L1234.08 1211.95 L1233.49 1211.95 L1232.91 1211.95 L1232.32 1211.95 L1231.73 1211.95 L1231.15 1211.95 L1230.56 1211.95 L1229.97 1211.95 L1229.39 1211.95 L1228.8 1211.95 L1228.21 1211.95 L1227.63 1211.95 L1227.04 1211.95 L1226.45 1211.95 L1225.87 1211.95 L1225.28 1211.95 L1224.7 1211.95 L1224.11 1211.95 L1223.52 1211.95 L1222.94 1211.95 L1222.35 1211.95 L1221.76 1211.95 L1221.18 1211.95 L1220.59 1211.95 L1220 1211.95 L1219.42 1211.95 L1218.83 1211.95 L1218.24 1211.95 L1217.66 1211.95 L1217.07 1211.95 L1216.49 1211.95 L1215.9 1211.95 L1215.31 1211.95 L1214.73 1211.95 L1214.14 1211.95 L1213.55 1211.95 L1212.97 1211.95 L1212.38 1211.95 L1211.79 1211.95 L1211.21 1211.95 L1210.62 1211.95 L1210.03 1211.95 L1209.45 1211.95 L1208.86 1211.95 L1208.28 1211.95 L1207.69 1211.95 L1207.1 1211.95 L1206.52 1211.95 L1205.93 1211.95 L1205.34 1211.95 L1204.76 1211.95 L1204.17 1211.95 L1203.58 1211.95 L1203 1211.95 L1202.41 1211.95 L1201.83 1211.95 L1201.24 1211.95 L1200.65 1211.95 L1200.07 1211.95 L1199.48 1211.95 L1198.89 1211.95 L1198.31 1211.95 L1197.72 1211.95 L1197.13 1211.95 L1196.55 1211.95 L1195.96 1211.95 L1195.37 1211.95 L1194.79 1211.95 L1194.2 1211.95 L1193.62 1211.95 L1193.03 1211.95 L1192.44 1211.95 L1191.86 1211.95 L1191.27 1211.95 L1190.68 1211.95 L1190.1 1211.95 L1189.51 1211.95 L1188.92 1211.95 L1188.34 1211.95 L1187.75 1211.95 L1187.16 1211.95 L1186.58 1211.95 L1185.99 1211.95 L1185.41 1211.95 L1184.82 1211.95 L1184.23 1211.95 L1183.65 1211.95 L1183.06 1211.95 L1182.47 1211.95 L1181.89 1211.95 L1181.3 1211.95 L1180.71 1211.95 L1180.13 1211.95 L1179.54 1211.95 L1178.96 1211.95 L1178.37 1211.95 L1177.78 1211.95 L1177.2 1211.95 L1176.61 1211.95 L1176.02 1211.95 L1175.44 1211.95 L1174.85 1211.95 L1174.26 1211.95 L1173.68 1211.95 L1173.09 1211.95 L1172.5 1211.95 L1171.92 1211.95 L1171.33 1211.95 L1170.75 1211.95 L1170.16 1211.95 L1169.57 1211.95 L1168.99 1211.95 L1168.4 1211.95 L1167.81 1211.95 L1167.23 1211.95 L1166.64 1211.95 L1166.05 1211.95 L1165.47 1211.95 L1164.88 1211.95 L1164.29 1211.95 L1163.71 1211.95 L1163.12 1211.95 L1162.54 1211.95 L1161.95 1211.95 L1161.36 1211.95 L1160.78 1211.95 L1160.19 1211.95 L1159.6 1211.95 L1159.02 1211.95 L1158.43 1211.95 L1157.84 1211.95 L1157.26 1211.95 L1156.67 1211.95 L1156.09 1211.95 L1155.5 1211.95 L1154.91 1211.95 L1154.33 1211.95 L1153.74 1211.95 L1153.15 1211.95 L1152.57 1211.95 L1151.98 1211.95 L1151.39 1211.95 L1150.81 1211.95 L1150.22 1211.95 L1149.63 1211.95 L1149.05 1211.95 L1148.46 1211.95 L1147.88 1211.95 L1147.29 1211.95 L1146.7 1211.95 L1146.12 1211.95 L1145.53 1211.95 L1144.94 1211.95 L1144.36 1211.95 L1143.77 1211.95 L1143.18 1211.95 L1142.6 1211.95 L1142.01 1211.95 L1141.42 1211.95 L1140.84 1211.95 L1140.25 1211.95 L1139.67 1211.95 L1139.08 1211.95 L1138.49 1211.95 L1137.91 1211.95 L1137.32 1211.95 L1136.73 1211.95 L1136.15 1211.95 L1135.56 1211.95 L1134.97 1211.95 L1134.39 1211.95 L1133.8 1211.95 L1133.21 1211.95 L1132.63 1211.95 L1132.04 1211.95 L1131.46 1211.95 L1130.87 1211.95 L1130.28 1211.95 L1129.7 1211.95 L1129.11 1211.95 L1128.52 1211.95 L1127.94 1211.95 L1127.35 1211.95 L1126.76 1211.95 L1126.18 1211.95 L1125.59 1211.95 L1125.01 1211.95 L1124.42 1211.95 L1123.83 1211.95 L1123.25 1211.95 L1122.66 1211.95 L1122.07 1211.95 L1121.49 1211.95 L1120.9 1211.95 L1120.31 1211.95 L1119.73 1211.95 L1119.14 1211.95 L1118.55 1211.95 L1117.97 1211.95 L1117.38 1211.95 L1116.8 1211.95 L1116.21 1211.95 L1115.62 1211.95 L1115.04 1211.95 L1114.45 1211.95 L1113.86 1211.95 L1113.28 1211.95 L1112.69 1211.95 L1112.1 1211.95 L1111.52 1211.95 L1110.93 1211.95 L1110.34 1211.95 L1109.76 1211.95 L1109.17 1211.95 L1108.59 1211.95 L1108 1211.95 L1107.41 1211.95 L1106.83 1211.95 L1106.24 1211.95 L1105.65 1211.95 L1105.07 1211.95 L1104.48 1211.95 L1103.89 1211.95 L1103.31 1211.95 L1102.72 1211.95 L1102.14 1211.95 L1101.55 1211.95 L1100.96 1211.95 L1100.38 1211.95 L1099.79 1211.95 L1099.2 1211.95 L1098.62 1211.95 L1098.03 1211.95 L1097.44 1211.95 L1096.86 1211.95 L1096.27 1211.95 L1095.68 1211.95 L1095.1 1211.95 L1094.51 1211.95 L1093.93 1211.95 L1093.34 1211.95 L1092.75 1211.95 L1092.17 1211.95 L1091.58 1211.95 L1090.99 1211.95 L1090.41 1211.95 L1089.82 1211.95 L1089.23 1211.95 L1088.65 1211.95 L1088.06 1211.95 L1087.47 1211.95 L1086.89 1211.95 L1086.3 1211.95 L1085.72 1211.95 L1085.13 1211.95 L1084.54 1211.95 L1083.96 1211.95 L1083.37 1211.95 L1082.78 1211.95 L1082.2 1211.95 L1081.61 1211.95 L1081.02 1211.95 L1080.44 1211.95 L1079.85 1211.95 L1079.26 1211.95 L1078.68 1211.95 L1078.09 1211.95 L1077.51 1211.95 L1076.92 1211.95 L1076.33 1211.95 L1075.75 1211.95 L1075.16 1211.95 L1074.57 1211.95 L1073.99 1211.95 L1073.4 1211.95 L1072.81 1211.95 L1072.23 1211.95 L1071.64 1211.95 L1071.06 1211.95 L1070.47 1211.95 L1069.88 1211.95 L1069.3 1211.95 L1068.71 1211.95 L1068.12 1211.95 L1067.54 1211.95 L1066.95 1211.95 L1066.36 1211.95 L1065.78 1211.95 L1065.19 1211.95 L1064.6 1211.95 L1064.02 1211.95 L1063.43 1211.95 L1062.85 1211.95 L1062.26 1211.95 L1061.67 1211.95 L1061.09 1211.95 L1060.5 1211.95 L1059.91 1211.95 L1059.33 1211.95 L1058.74 1211.95 L1058.15 1211.95 L1057.57 1211.95 L1056.98 1211.95 L1056.39 1211.95 L1055.81 1211.95 L1055.22 1211.95 L1054.64 1211.95 L1054.05 1211.95 L1053.46 1211.95 L1052.88 1211.95 L1052.29 1211.95 L1051.7 1211.95 L1051.12 1211.95 L1050.53 1211.95 L1049.94 1211.95 L1049.36 1211.95 L1048.77 1211.95 L1048.19 1211.95 L1047.6 1211.95 L1047.01 1211.95 L1046.43 1211.95 L1045.84 1211.95 L1045.25 1211.95 L1044.67 1211.95 L1044.08 1211.95 L1043.49 1211.95 L1042.91 1211.95 L1042.32 1211.95 L1041.73 1211.95 L1041.15 1211.95 L1040.56 1211.95 L1039.98 1211.95 L1039.39 1211.95 L1038.8 1211.95 L1038.22 1211.95 L1037.63 1211.95 L1037.04 1211.95 L1036.46 1211.95 L1035.87 1211.95 L1035.28 1211.95 L1034.7 1211.95 L1034.11 1211.95 L1033.52 1211.95 L1032.94 1211.95 L1032.35 1211.95 L1031.77 1211.95 L1031.18 1211.95 L1030.59 1211.95 L1030.01 1211.95 L1029.42 1211.95 L1028.83 1211.95 L1028.25 1211.95 L1027.66 1211.95 L1027.07 1211.95 L1026.49 1211.95 L1025.9 1211.95 L1025.32 1211.95 L1024.73 1211.95 L1024.14 1211.95 L1023.56 1211.95 L1022.97 1211.95 L1022.38 1211.95 L1021.8 1211.95 L1021.21 1211.95 L1020.62 1211.95 L1020.04 1211.95 L1019.45 1211.95 L1018.86 1211.95 L1018.28 1211.95 L1017.69 1211.95 L1017.11 1211.95 L1016.52 1211.95 L1015.93 1211.95 L1015.35 1211.95 L1014.76 1211.95 L1014.17 1211.95 L1013.59 1211.95 L1013 1211.95 L1012.41 1211.95 L1011.83 1211.95 L1011.24 1211.95 L1010.65 1211.95 L1010.07 1211.95 L1009.48 1211.95 L1008.9 1211.95 L1008.31 1211.95 L1007.72 1211.95 L1007.14 1211.95 L1006.55 1211.95 L1005.96 1211.95 L1005.38 1211.95 L1004.79 1211.95 L1004.2 1211.95 L1003.62 1211.95 L1003.03 1211.95 L1002.44 1211.95 L1001.86 1211.95 L1001.27 1211.95 L1000.69 1211.95 L1000.1 1211.95 L999.513 1211.95 L998.926 1211.95 L998.34 1211.95 L997.754 1211.95 L997.167 1211.95 L996.581 1211.95 L995.994 1211.95 L995.408 1211.95 L994.822 1211.95 L994.235 1211.95 L993.649 1211.95 L993.062 1211.95 L992.476 1211.95 L991.889 1211.95 L991.303 1211.95 L990.717 1211.95 L990.13 1211.95 L989.544 1211.95 L988.957 1211.95 L988.371 1211.95 L987.785 1211.95 L987.198 1211.95 L986.612 1211.95 L986.025 1211.95  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1212.26 986.612,1212.26 987.198,1212.26 987.785,1212.26 988.371,1212.26 988.957,1212.26 989.544,1212.26 990.13,1212.26 990.717,1212.26 991.303,1212.26 991.889,1212.26 992.476,1212.26 993.062,1212.26 993.649,1212.26 994.235,1212.26 994.822,1212.26 995.408,1212.26 995.994,1212.26 996.581,1212.26 997.167,1212.26 997.754,1212.26 998.34,1212.26 998.926,1212.26 999.513,1212.26 1000.1,1212.26 1000.69,1212.26 1001.27,1212.26 1001.86,1212.26 1002.44,1212.26 1003.03,1212.26 1003.62,1212.26 1004.2,1212.26 1004.79,1212.26 1005.38,1212.26 1005.96,1212.26 1006.55,1212.26 1007.14,1212.26 1007.72,1212.26 1008.31,1212.26 1008.9,1212.26 1009.48,1212.26 1010.07,1212.26 1010.65,1212.26 1011.24,1212.26 1011.83,1212.26 1012.41,1212.26 1013,1212.26 1013.59,1212.26 1014.17,1212.26 1014.76,1212.26 1015.35,1212.26 1015.93,1212.26 1016.52,1212.26 1017.11,1212.26 1017.69,1212.26 1018.28,1212.26 1018.86,1212.26 1019.45,1212.26 1020.04,1212.26 1020.62,1212.26 1021.21,1212.26 1021.8,1212.26 1022.38,1212.26 1022.97,1212.26 1023.56,1212.26 1024.14,1212.26 1024.73,1212.26 1025.32,1212.26 1025.9,1212.26 1026.49,1212.26 1027.07,1212.26 1027.66,1212.26 1028.25,1212.26 1028.83,1212.26 1029.42,1212.26 1030.01,1212.26 1030.59,1212.26 1031.18,1212.26 1031.77,1212.26 1032.35,1212.26 1032.94,1212.26 1033.52,1212.26 1034.11,1212.26 1034.7,1212.26 1035.28,1212.26 1035.87,1212.26 1036.46,1212.26 1037.04,1212.26 1037.63,1212.26 1038.22,1212.26 1038.8,1212.26 1039.39,1212.26 1039.98,1212.26 1040.56,1212.26 1041.15,1212.26 1041.73,1212.26 1042.32,1212.26 1042.91,1212.26 1043.49,1212.26 1044.08,1212.26 1044.67,1212.26 1045.25,1212.26 1045.84,1212.26 1046.43,1212.26 1047.01,1212.26 1047.6,1212.26 1048.19,1212.26 1048.77,1212.26 1049.36,1212.26 1049.94,1212.26 1050.53,1212.26 1051.12,1212.26 1051.7,1212.26 1052.29,1212.26 1052.88,1212.26 1053.46,1212.26 1054.05,1212.26 1054.64,1212.26 1055.22,1212.26 1055.81,1212.26 1056.39,1212.26 1056.98,1212.26 1057.57,1212.26 1058.15,1212.26 1058.74,1212.26 1059.33,1212.26 1059.91,1212.26 1060.5,1212.26 1061.09,1212.26 1061.67,1212.26 1062.26,1212.26 1062.85,1212.26 1063.43,1212.26 1064.02,1212.26 1064.6,1212.26 1065.19,1212.26 1065.78,1212.26 1066.36,1212.26 1066.95,1212.26 1067.54,1212.26 1068.12,1212.26 1068.71,1212.26 1069.3,1212.26 1069.88,1212.26 1070.47,1212.26 1071.06,1212.26 1071.64,1212.26 1072.23,1212.26 1072.81,1212.26 1073.4,1212.26 1073.99,1212.26 1074.57,1212.26 1075.16,1212.26 1075.75,1212.26 1076.33,1212.26 1076.92,1212.26 1077.51,1212.26 1078.09,1212.26 1078.68,1212.26 1079.26,1212.26 1079.85,1212.26 1080.44,1212.26 1081.02,1212.26 1081.61,1212.26 1082.2,1212.26 1082.78,1212.26 1083.37,1212.26 1083.96,1212.26 1084.54,1212.26 1085.13,1212.26 1085.72,1212.26 1086.3,1212.26 1086.89,1212.26 1087.47,1212.26 1088.06,1212.26 1088.65,1212.26 1089.23,1212.26 1089.82,1212.26 1090.41,1212.26 1090.99,1212.26 1091.58,1212.26 1092.17,1212.26 1092.75,1212.26 1093.34,1212.26 1093.93,1212.26 1094.51,1212.26 1095.1,1212.26 1095.68,1212.26 1096.27,1212.26 1096.86,1212.26 1097.44,1212.26 1098.03,1212.26 1098.62,1212.26 1099.2,1212.26 1099.79,1212.26 1100.38,1212.26 1100.96,1212.26 1101.55,1212.26 1102.14,1212.26 1102.72,1212.26 1103.31,1212.26 1103.89,1212.26 1104.48,1212.26 1105.07,1212.26 1105.65,1212.26 1106.24,1212.26 1106.83,1212.26 1107.41,1212.26 1108,1212.26 1108.59,1212.26 1109.17,1212.26 1109.76,1212.26 1110.34,1212.26 1110.93,1212.26 1111.52,1212.26 1112.1,1212.26 1112.69,1212.26 1113.28,1212.26 1113.86,1212.26 1114.45,1212.26 1115.04,1212.26 1115.62,1212.26 1116.21,1212.26 1116.8,1212.26 1117.38,1212.26 1117.97,1212.26 1118.55,1212.26 1119.14,1212.26 1119.73,1212.26 1120.31,1212.26 1120.9,1212.26 1121.49,1212.26 1122.07,1212.26 1122.66,1212.26 1123.25,1212.26 1123.83,1212.26 1124.42,1212.26 1125.01,1212.26 1125.59,1212.26 1126.18,1212.26 1126.76,1212.26 1127.35,1212.26 1127.94,1212.26 1128.52,1212.26 1129.11,1212.26 1129.7,1212.26 1130.28,1212.26 1130.87,1212.26 1131.46,1212.26 1132.04,1212.26 1132.63,1212.26 1133.21,1212.26 1133.8,1212.26 1134.39,1212.26 1134.97,1212.26 1135.56,1212.26 1136.15,1212.26 1136.73,1212.26 1137.32,1212.26 1137.91,1212.26 1138.49,1212.26 1139.08,1212.26 1139.67,1212.26 1140.25,1212.26 1140.84,1212.26 1141.42,1212.26 1142.01,1212.26 1142.6,1212.26 1143.18,1212.26 1143.77,1212.26 1144.36,1212.26 1144.94,1212.26 1145.53,1212.26 1146.12,1212.26 1146.7,1212.26 1147.29,1212.26 1147.88,1212.26 1148.46,1212.26 1149.05,1212.26 1149.63,1212.26 1150.22,1212.26 1150.81,1212.26 1151.39,1212.26 1151.98,1212.26 1152.57,1212.26 1153.15,1212.26 1153.74,1212.26 1154.33,1212.26 1154.91,1212.26 1155.5,1212.26 1156.09,1212.26 1156.67,1212.26 1157.26,1212.26 1157.84,1212.26 1158.43,1212.26 1159.02,1212.26 1159.6,1212.26 1160.19,1212.26 1160.78,1212.26 1161.36,1212.26 1161.95,1212.26 1162.54,1212.26 1163.12,1212.26 1163.71,1212.26 1164.29,1212.26 1164.88,1212.26 1165.47,1212.26 1166.05,1212.26 1166.64,1212.26 1167.23,1212.26 1167.81,1212.26 1168.4,1212.26 1168.99,1212.26 1169.57,1212.26 1170.16,1212.26 1170.75,1212.26 1171.33,1212.26 1171.92,1212.26 1172.5,1212.26 1173.09,1212.26 1173.68,1212.26 1174.26,1212.26 1174.85,1212.26 1175.44,1212.26 1176.02,1212.26 1176.61,1212.26 1177.2,1212.26 1177.78,1212.26 1178.37,1212.26 1178.96,1212.26 1179.54,1212.26 1180.13,1212.26 1180.71,1212.26 1181.3,1212.26 1181.89,1212.26 1182.47,1212.26 1183.06,1212.26 1183.65,1212.26 1184.23,1212.26 1184.82,1212.26 1185.41,1212.26 1185.99,1212.26 1186.58,1212.26 1187.16,1212.26 1187.75,1212.26 1188.34,1212.26 1188.92,1212.26 1189.51,1212.26 1190.1,1212.26 1190.68,1212.26 1191.27,1212.26 1191.86,1212.26 1192.44,1212.26 1193.03,1212.26 1193.62,1212.26 1194.2,1212.26 1194.79,1212.26 1195.37,1212.26 1195.96,1212.26 1196.55,1212.26 1197.13,1212.26 1197.72,1212.26 1198.31,1212.26 1198.89,1212.26 1199.48,1212.26 1200.07,1212.26 1200.65,1212.26 1201.24,1212.26 1201.83,1212.26 1202.41,1212.26 1203,1212.26 1203.58,1212.26 1204.17,1212.26 1204.76,1212.26 1205.34,1212.26 1205.93,1212.26 1206.52,1212.26 1207.1,1212.26 1207.69,1212.26 1208.28,1212.26 1208.86,1212.26 1209.45,1212.26 1210.03,1212.26 1210.62,1212.26 1211.21,1212.26 1211.79,1212.26 1212.38,1212.26 1212.97,1212.26 1213.55,1212.26 1214.14,1212.26 1214.73,1212.26 1215.31,1212.26 1215.9,1212.26 1216.49,1212.26 1217.07,1212.26 1217.66,1212.26 1218.24,1212.26 1218.83,1212.26 1219.42,1212.26 1220,1212.26 1220.59,1212.26 1221.18,1212.26 1221.76,1212.26 1222.35,1212.26 1222.94,1212.26 1223.52,1212.26 1224.11,1212.26 1224.7,1212.26 1225.28,1212.26 1225.87,1212.26 1226.45,1212.26 1227.04,1212.26 1227.63,1212.26 1228.21,1212.26 1228.8,1212.26 1229.39,1212.26 1229.97,1212.26 1230.56,1212.26 1231.15,1212.26 1231.73,1212.26 1232.32,1212.26 1232.91,1212.26 1233.49,1212.26 1234.08,1212.26 1234.66,1212.26 1235.25,1212.26 1235.84,1212.26 1236.42,1212.26 1237.01,1212.26 1237.6,1212.26 1238.18,1212.26 1238.77,1212.26 1239.36,1212.26 1239.94,1212.26 1240.53,1212.26 1241.11,1212.26 1241.7,1212.26 1242.29,1212.26 1242.87,1212.26 1243.46,1212.26 1244.05,1212.26 1244.63,1212.26 1245.22,1212.26 1245.81,1212.26 1246.39,1212.26 1246.98,1212.26 1247.57,1212.26 1248.15,1212.26 1248.74,1212.26 1249.32,1212.26 1249.91,1212.26 1250.5,1212.26 1251.08,1212.26 1251.67,1212.26 1252.26,1212.26 1252.84,1212.26 1253.43,1212.26 1254.02,1212.26 1254.6,1212.26 1255.19,1212.26 1255.78,1212.26 1256.36,1212.26 1256.95,1212.26 1257.53,1212.26 1258.12,1212.26 1258.71,1212.26 1259.29,1212.26 1259.88,1212.26 1260.47,1212.26 1261.05,1212.26 1261.64,1212.26 1262.23,1212.26 1262.81,1212.26 1263.4,1212.26 1263.98,1212.26 1264.57,1212.26 1265.16,1212.26 1265.74,1212.26 1266.33,1212.26 1266.92,1212.26 1267.5,1212.26 1268.09,1212.26 1268.68,1212.26 1269.26,1212.26 1269.85,1212.26 1270.44,1212.26 1271.02,1212.26 1271.61,1212.26 1272.19,1212.26 1272.78,1212.26 1273.37,1212.26 1273.95,1212.26 1274.54,1212.26 1275.13,1212.26 1275.71,1212.26 1276.3,1212.26 1276.89,1212.26 1277.47,1212.26 1278.06,1212.26 1278.65,1212.26 1279.23,1212.26 1279.82,1212.26 1280.4,1212.26 1280.99,1212.26 1281.58,1212.26 1282.16,1212.26 1282.75,1212.26 1283.34,1212.26 1283.92,1212.26 1284.51,1212.26 1285.1,1212.26 1285.68,1212.26 1286.27,1212.26 1286.86,1212.26 1287.44,1212.26 1288.03,1212.26 1288.61,1212.26 1289.2,1212.26 1289.79,1212.26 1290.37,1212.26 1290.96,1212.26 1291.55,1212.26 1292.13,1212.26 1292.72,1212.26 1293.31,1212.26 1293.89,1212.26 1294.48,1212.26 1295.06,1212.26 1295.65,1212.26 1296.24,1212.26 1296.82,1212.26 1297.41,1212.26 1298,1212.26 1298.58,1212.26 1299.17,1212.26 1299.76,1212.26 1300.34,1212.26 1300.93,1212.26 1301.52,1212.26 1302.1,1212.26 1302.69,1212.26 1303.27,1212.26 1303.86,1212.26 1304.45,1212.26 1305.03,1212.26 1305.62,1212.26 1306.21,1212.26 1306.79,1212.26 1307.38,1212.26 1307.97,1212.26 1308.55,1212.26 1309.14,1212.26 1309.73,1212.26 1310.31,1212.26 1310.9,1212.26 1311.48,1212.26 1312.07,1212.26 1312.66,1212.26 1313.24,1212.26 1313.83,1212.26 1314.42,1212.26 1315,1212.26 1315.59,1212.26 1316.18,1212.26 1316.76,1212.26 1317.35,1212.26 1317.93,1212.26 1318.52,1212.26 1319.11,1212.26 1319.69,1212.26 1320.28,1212.26 1320.87,1212.26 1321.45,1212.26 1322.04,1212.26 1322.63,1212.26 1323.21,1212.26 1323.8,1212.26 1324.39,1212.26 1324.97,1212.26 1325.56,1212.26 1326.14,1212.26 1326.73,1212.26 1327.32,1212.26 1327.9,1212.26 1328.49,1212.26 1329.08,1212.26 1329.66,1212.26 1330.25,1212.26 1330.84,1212.26 1331.42,1212.26 1332.01,1212.26 1332.6,1212.26 1333.18,1212.26 1333.77,1212.26 1334.35,1212.26 1334.94,1212.26 1335.53,1212.26 1336.11,1212.26 1336.7,1212.26 1337.29,1212.26 1337.87,1212.26 1338.46,1212.26 1339.05,1212.26 1339.63,1212.26 1340.22,1212.26 1340.8,1212.26 1341.39,1212.26 1341.98,1212.26 1342.56,1212.26 1343.15,1212.26 1343.74,1212.26 1344.32,1212.26 1344.91,1212.26 1345.5,1212.26 1346.08,1212.26 1346.67,1212.26 1347.26,1212.26 1347.84,1212.26 1348.43,1212.26 1349.01,1212.26 1349.6,1212.26 1350.19,1212.26 1350.77,1212.26 1351.36,1212.26 1351.95,1212.26 1352.53,1212.26 1353.12,1212.26 1353.71,1212.26 1354.29,1212.26 1354.88,1212.26 1355.47,1212.26 1356.05,1212.26 1356.64,1212.26 1357.22,1212.26 1357.81,1212.26 1358.4,1212.26 1358.98,1212.26 1359.57,1212.26 1360.16,1212.26 1360.74,1212.26 1361.33,1212.26 1361.92,1212.26 1362.5,1212.26 1363.09,1212.26 1363.68,1212.26 1364.26,1212.26 1364.85,1212.26 1365.43,1212.26 1366.02,1212.26 1366.61,1212.26 1367.19,1212.26 1367.78,1212.26 1368.37,1212.26 1368.95,1212.26 1369.54,1212.26 1370.13,1212.26 1370.71,1212.26 1371.3,1212.26 1371.88,1212.26 1372.47,1212.26 1373.06,1212.26 1373.64,1212.26 1374.23,1212.26 1374.82,1212.26 1375.4,1212.26 1375.99,1212.26 1376.58,1212.26 1377.16,1212.26 1377.75,1212.26 1378.34,1212.26 1378.92,1212.26 1379.51,1212.26 1380.09,1212.26 1380.68,1212.26 1381.27,1212.26 1381.85,1212.26 1382.44,1212.26 1383.03,1212.26 1383.61,1212.26 1384.2,1212.26 1384.79,1212.26 1385.37,1212.26 1385.96,1212.26 1386.55,1212.26 1387.13,1212.26 1387.72,1212.26 1388.3,1212.26 1388.89,1212.26 1389.48,1212.26 1390.06,1212.26 1390.65,1212.26 1391.24,1212.26 1391.82,1212.26 1392.41,1212.26 1393,1212.26 1393.58,1212.26 1394.17,1212.26 1394.75,1212.26 1395.34,1212.26 1395.93,1212.26 1396.51,1212.26 1397.1,1212.26 1397.69,1212.26 1398.27,1212.26 1398.86,1212.26 1399.45,1212.26 1400.03,1212.26 1400.62,1212.26 1401.21,1212.26 1401.79,1212.26 1402.38,1212.26 1402.96,1212.26 1403.55,1212.26 1404.14,1212.26 1404.72,1212.26 1405.31,1212.26 1405.9,1212.26 1406.48,1212.26 1407.07,1212.26 1407.66,1212.26 1408.24,1212.26 1408.83,1212.26 1409.42,1212.26 1410,1212.26 1410.59,1212.26 1411.17,1212.26 1411.76,1212.26 1412.35,1212.26 1412.93,1212.26 1413.52,1212.26 1414.11,1212.26 1414.69,1212.26 1415.28,1212.26 1415.87,1212.26 1416.45,1212.26 1417.04,1212.26 1417.63,1212.26 1418.21,1212.26 1418.8,1212.26 1419.38,1212.26 1419.97,1212.26 1420.56,1212.26 1421.14,1212.26 1421.73,1212.26 1422.32,1212.26 1422.9,1212.26 1423.49,1212.26 1424.08,1212.26 1424.66,1212.26 1425.25,1212.26 1425.83,1212.26 1426.42,1212.26 1427.01,1212.26 1427.59,1212.26 1428.18,1212.26 1428.77,1212.26 1429.35,1212.26 1429.94,1212.26 1430.53,1212.26 1431.11,1212.26 1431.7,1212.26 1432.29,1212.26 1432.87,1212.26 1433.46,1212.26 1434.04,1212.26 1434.63,1212.26 1435.22,1212.26 1435.8,1212.26 1436.39,1212.26 1436.98,1212.26 1437.56,1212.26 1438.15,1212.26 1438.74,1212.26 1439.32,1212.26 1439.91,1212.26 1440.5,1212.26 1441.08,1212.26 1441.67,1212.26 1442.25,1212.26 1442.84,1212.26 1443.43,1212.26 1444.01,1212.26 1444.6,1212.26 1445.19,1212.26 1445.77,1212.26 1446.36,1212.26 1446.95,1212.26 1447.53,1212.26 1448.12,1212.26 1448.7,1212.26 1449.29,1212.26 1449.88,1212.26 1450.46,1212.26 1451.05,1212.26 1451.64,1212.26 1452.22,1212.26 1452.81,1212.26 1453.4,1212.26 1453.98,1212.26 1454.57,1212.26 1455.16,1212.26 1455.74,1212.26 1456.33,1212.26 1456.91,1212.26 1457.5,1212.26 1458.09,1212.26 1458.67,1212.26 1459.26,1212.26 1459.85,1212.26 1460.43,1212.26 1461.02,1212.26 1461.61,1212.26 1462.19,1212.26 1462.78,1212.26 1463.37,1212.26 1463.95,1212.26 1464.54,1212.26 1465.12,1212.26 1465.71,1212.26 1466.3,1212.26 1466.88,1212.26 1467.47,1212.26 1468.06,1212.26 1468.64,1212.26 1469.23,1212.26 1469.82,1212.26 1470.4,1212.26 1470.99,1212.26 1471.57,1212.26 1472.16,1212.26 1472.75,1212.26 1473.33,1212.26 1473.92,1212.26 1474.51,1212.26 1475.09,1212.26 1475.68,1212.26 1476.27,1212.26 1476.85,1212.26 1477.44,1212.26 1478.03,1212.26 1478.61,1212.26 1479.2,1212.26 1479.78,1212.26 1480.37,1212.26 1480.96,1212.26 1481.54,1212.26 1482.13,1212.26 1482.72,1212.26 1483.3,1212.26 1483.89,1212.26 1484.48,1212.26 1485.06,1212.26 1485.65,1212.26 1486.24,1212.26 1486.82,1212.26 1487.41,1212.26 1487.99,1212.26 1488.58,1212.26 1489.17,1212.26 1489.75,1212.26 1490.34,1212.26 1490.93,1212.26 1491.51,1212.26 1492.1,1212.26 1492.69,1212.26 1493.27,1212.26 1493.86,1212.26 1494.45,1212.26 1495.03,1212.26 1495.62,1212.26 1496.2,1212.26 1496.79,1212.26 1497.38,1212.26 1497.96,1212.26 1498.55,1212.26 1499.14,1212.26 1499.72,1212.26 1500.31,1212.26 1500.9,1212.26 1501.48,1212.26 1502.07,1212.26 1502.65,1212.26 1503.24,1212.26 1503.83,1212.26 1504.41,1212.26 1505,1212.26 1505.59,1212.26 1506.17,1212.26 1506.76,1212.26 1507.35,1212.26 1507.93,1212.26 1508.52,1212.26 1509.11,1212.26 1509.69,1212.26 1510.28,1212.26 1510.86,1212.26 1511.45,1212.26 1512.04,1212.26 1512.62,1212.26 1513.21,1212.26 1513.8,1212.26 1514.38,1212.26 1514.97,1212.26 1515.56,1212.26 1516.14,1212.26 1516.73,1212.26 1517.32,1212.26 1517.9,1212.26 1518.49,1212.26 1519.07,1212.26 1519.66,1212.26 1520.25,1212.26 1520.83,1212.26 1521.42,1212.26 1522.01,1212.26 1522.59,1212.26 1523.18,1212.26 1523.77,1212.26 1524.35,1212.26 1524.94,1212.26 1525.52,1212.26 1526.11,1212.26 1526.7,1212.26 1527.28,1212.26 1527.87,1212.26 1528.46,1212.26 1529.04,1212.26 1529.63,1212.26 1530.22,1212.26 1530.8,1212.26 1531.39,1212.26 1531.98,1212.26 1532.56,1212.26 1533.15,1212.26 1533.73,1212.26 1534.32,1212.26 1534.91,1212.26 1535.49,1212.26 1536.08,1212.26 1536.67,1212.26 1537.25,1212.26 1537.84,1212.26 1538.43,1212.26 1539.01,1212.26 1539.6,1212.26 1540.19,1212.26 1540.77,1212.26 1541.36,1212.26 1541.94,1212.26 1542.53,1212.26 1543.12,1212.26 1543.7,1212.26 1544.29,1212.26 1544.88,1212.26 1545.46,1212.26 1546.05,1212.26 1546.64,1212.26 1547.22,1212.26 1547.81,1212.26 1548.4,1212.26 1548.98,1212.26 1549.57,1212.26 1550.15,1212.26 1550.74,1212.26 1551.33,1212.26 1551.91,1212.26 1552.5,1212.26 1553.09,1212.26 1553.67,1212.26 1554.26,1212.26 1554.85,1212.26 1555.43,1212.26 1556.02,1212.26 1556.6,1212.26 1557.19,1212.26 1557.78,1212.26 1558.36,1212.26 1558.95,1212.26 1559.54,1212.26 1560.12,1212.26 1560.71,1212.26 1561.3,1212.26 1561.88,1212.26 1562.47,1212.26 1563.06,1212.26 1563.64,1212.26 1564.23,1212.26 1564.81,1212.26 1565.4,1212.26 1565.99,1212.26 1566.57,1212.26 1567.16,1212.26 1567.75,1212.26 1568.33,1212.26 1568.92,1212.26 1569.51,1212.26 1570.09,1212.26 1570.68,1212.26 1571.27,1212.26 1571.85,1212.26 1572.44,1212.26 1573.02,1212.26 1573.61,1212.26 1574.2,1212.26 1574.78,1212.26 1575.37,1212.26 1575.96,1212.26 1576.54,1212.26 1577.13,1212.26 1577.72,1212.26 1578.3,1212.26 1578.89,1212.26 1579.47,1212.26 1580.06,1212.26 1580.65,1212.26 1581.23,1212.26 1581.82,1212.26 1582.41,1212.26 1582.99,1212.26 1583.58,1212.26 1584.17,1212.26 1584.75,1212.26 1585.34,1212.26 1585.93,1212.26 1586.51,1212.26 1587.1,1212.26 1587.68,1212.26 1588.27,1212.26 1588.86,1212.26 1589.44,1212.26 1590.03,1212.26 1590.62,1212.26 1591.2,1212.26 1591.79,1212.26 1592.38,1212.26 1592.96,1212.26 1593.55,1212.26 1594.14,1212.26 1594.72,1212.26 1595.31,1212.26 1595.89,1212.26 1596.48,1212.26 1597.07,1212.26 1597.65,1212.26 1598.24,1212.26 1598.83,1212.26 1599.41,1212.26 1600,1212.26 1600.59,1212.26 1601.17,1212.26 1601.76,1212.26 1602.34,1212.26 1602.93,1212.26 1603.52,1212.26 1604.1,1212.26 1604.69,1212.26 1605.28,1212.26 1605.86,1212.26 1606.45,1212.26 1607.04,1212.26 1607.62,1212.26 1608.21,1212.26 1608.8,1212.26 1609.38,1212.26 1609.97,1212.26 1610.55,1212.26 1611.14,1212.26 1611.73,1212.26 1612.31,1212.26 1612.9,1212.26 1613.49,1212.26 1614.07,1212.26 1614.66,1212.26 1615.25,1212.26 1615.83,1212.26 1616.42,1212.26 1617.01,1212.26 1617.59,1212.26 1618.18,1212.26 1618.76,1212.26 1619.35,1212.26 1619.94,1212.26 1620.52,1212.26 1621.11,1212.26 1621.7,1212.26 1622.28,1212.26 1622.87,1212.26 1623.46,1212.26 1624.04,1212.26 1624.63,1212.26 1625.22,1212.26 1625.8,1212.26 1626.39,1212.26 1626.97,1212.26 1627.56,1212.26 1628.15,1212.26 1628.73,1212.26 1629.32,1212.26 1629.91,1212.26 1630.49,1212.26 1631.08,1212.26 1631.67,1212.26 1632.25,1212.26 1632.84,1212.26 1633.42,1212.26 1634.01,1212.26 1634.6,1212.26 1635.18,1212.26 1635.77,1212.26 1636.36,1212.26 1636.94,1212.26 1637.53,1212.26 1638.12,1212.26 1638.7,1212.26 1639.29,1212.26 1639.88,1212.26 1640.46,1212.26 1641.05,1212.26 1641.63,1212.26 1642.22,1212.26 1642.81,1212.26 1643.39,1212.26 1643.98,1212.26 1644.57,1212.26 1645.15,1212.26 1645.74,1212.26 1646.33,1212.26 1646.91,1212.26 1647.5,1212.26 1648.09,1212.26 1648.67,1212.26 1649.26,1212.26 1649.84,1212.26 1650.43,1212.26 1651.02,1212.26 1651.6,1212.26 1652.19,1212.26 1652.78,1212.26 1653.36,1212.26 1653.95,1212.26 1654.54,1212.26 1655.12,1212.26 1655.71,1212.26 1656.29,1212.26 1656.88,1212.26 1657.47,1212.26 1658.05,1212.26 1658.64,1212.26 1659.23,1212.26 1659.81,1212.26 1660.4,1212.26 1660.99,1212.26 1661.57,1212.26 1662.16,1212.26 1662.75,1212.26 1663.33,1212.26 1663.92,1212.26 1664.5,1212.26 1665.09,1212.26 1665.68,1212.26 1666.26,1212.26 1666.85,1212.26 1667.44,1212.26 1668.02,1212.26 1668.61,1212.26 1669.2,1212.26 1669.78,1212.26 1670.37,1212.26 1670.96,1212.26 1671.54,1212.26 1672.13,1212.26 1672.71,1212.26 1673.3,1212.26 1673.89,1212.26 1674.47,1212.26 1675.06,1212.26 1675.65,1212.26 1676.23,1212.26 1676.82,1212.26 1677.41,1212.26 1677.99,1212.26 1678.58,1212.26 1679.17,1212.26 1679.75,1212.26 1680.34,1212.26 1680.92,1212.26 1681.51,1212.26 1682.1,1212.26 1682.68,1212.26 1683.27,1212.26 1683.86,1212.26 1684.44,1212.26 1685.03,1212.26 1685.62,1212.26 1686.2,1212.26 1686.79,1212.26 1687.37,1212.26 1687.96,1212.26 1688.55,1212.26 1689.13,1212.26 1689.72,1212.26 1690.31,1212.26 1690.89,1212.26 1691.48,1212.26 1692.07,1212.26 1692.65,1212.26 1693.24,1212.26 1693.83,1212.26 1694.41,1212.26 1695,1212.26 1695.58,1212.26 1696.17,1212.26 1696.76,1212.26 1697.34,1212.26 1697.93,1212.26 1698.52,1212.26 1699.1,1212.26 1699.69,1212.26 1700.28,1212.26 1700.86,1212.26 1701.45,1212.26 1702.04,1212.26 1702.62,1212.26 1703.21,1212.26 1703.79,1212.26 1704.38,1212.26 1704.97,1212.26 1705.55,1212.26 1706.14,1212.26 1706.73,1212.26 1707.31,1212.26 1707.9,1212.26 1708.49,1212.26 1709.07,1212.26 1709.66,1212.26 1710.24,1212.26 1710.83,1212.26 1711.42,1212.26 1712,1212.26 1712.59,1212.26 1713.18,1212.26 1713.76,1212.26 1714.35,1212.26 1714.94,1212.26 1715.52,1212.26 1716.11,1212.26 1716.7,1212.26 1717.28,1212.26 1717.87,1212.26 1718.45,1212.26 1719.04,1212.26 1719.63,1212.26 1720.21,1212.26 1720.8,1212.26 1721.39,1212.26 1721.97,1212.26 1722.56,1212.26 1723.15,1212.26 1723.73,1212.26 1724.32,1212.26 1724.91,1212.26 1725.49,1212.26 1726.08,1212.26 1726.66,1212.26 1727.25,1212.26 1727.84,1212.26 1728.42,1212.26 1729.01,1212.26 1729.6,1212.26 1730.18,1212.26 1730.77,1212.26 1731.36,1212.26 1731.94,1212.26 1732.53,1212.26 1733.11,1212.26 1733.7,1212.26 1734.29,1212.26 1734.87,1212.26 1735.46,1212.26 1736.05,1212.26 1736.63,1212.26 1737.22,1212.26 1737.81,1212.26 1738.39,1212.26 1738.98,1212.26 1739.57,1212.26 1740.15,1212.26 1740.74,1212.26 1741.32,1212.26 1741.91,1212.26 1742.5,1212.26 1743.08,1212.26 1743.67,1212.26 1744.26,1212.26 1744.84,1212.26 1745.43,1212.26 1746.02,1212.26 1746.6,1212.26 1747.19,1212.26 1747.78,1212.26 1748.36,1212.26 1748.95,1212.26 1749.53,1212.26 1750.12,1212.26 1750.71,1212.26 1751.29,1212.26 1751.88,1212.26 1752.47,1212.26 1753.05,1212.26 1753.64,1212.26 1754.23,1212.26 1754.81,1212.26 1755.4,1212.26 1755.99,1212.26 1756.57,1212.26 1757.16,1212.26 1757.74,1212.26 1758.33,1212.26 1758.92,1212.26 1759.5,1212.26 1760.09,1212.26 1760.68,1212.26 1761.26,1212.26 1761.85,1212.26 1762.44,1212.26 1763.02,1212.26 1763.61,1212.26 1764.19,1212.26 1764.78,1212.26 1765.37,1212.26 1765.95,1212.26 1766.54,1212.26 1767.13,1212.26 1767.71,1212.26 1768.3,1212.26 1768.89,1212.26 1769.47,1212.26 1770.06,1212.26 1770.65,1212.26 1771.23,1212.26 1771.82,1212.26 1772.4,1212.26 1772.99,1212.26 1773.58,1212.26 1774.16,1212.26 1774.75,1212.26 1775.34,1212.26 1775.92,1212.26 1776.51,1212.26 1777.1,1212.26 1777.68,1212.26 1778.27,1212.26 1778.86,1212.26 1779.44,1212.26 1780.03,1212.26 1780.61,1212.26 1781.2,1212.26 1781.79,1212.26 1782.37,1212.26 1782.96,1212.26 1783.55,1212.26 1784.13,1212.26 1784.72,1212.26 1785.31,1212.26 1785.89,1212.26 1786.48,1212.26 1787.06,1212.26 1787.65,1212.26 1788.24,1212.26 1788.82,1212.26 1789.41,1212.26 1790,1212.26 1790.58,1212.26 1791.17,1212.26 1791.76,1212.26 1792.34,1212.26 1792.93,1212.26 1793.52,1212.26 1794.1,1212.26 1794.69,1212.26 1795.27,1212.26 1795.86,1212.26 1796.45,1212.26 1797.03,1212.26 1797.62,1212.26 1798.21,1212.26 1798.79,1212.26 1799.38,1212.26 1799.97,1212.26 1800.55,1212.26 1801.14,1212.26 1801.73,1212.26 1802.31,1212.26 1802.9,1212.26 1803.48,1212.26 1804.07,1212.26 1804.66,1212.26 1805.24,1212.26 1805.83,1212.26 1806.42,1212.26 1807,1212.26 1807.59,1212.26 1808.18,1212.26 1808.76,1212.26 1809.35,1212.26 1809.94,1212.26 1810.52,1212.26 1811.11,1212.26 1811.69,1212.26 1812.28,1212.26 1812.87,1212.26 1813.45,1212.26 1814.04,1212.26 1814.63,1212.26 1815.21,1212.26 1815.8,1212.26 1816.39,1212.26 1816.97,1212.26 1817.56,1212.26 1818.14,1212.26 1818.73,1212.26 1819.32,1212.26 1819.9,1212.26 1820.49,1212.26 1821.08,1212.26 1821.66,1212.26 1822.25,1212.26 1822.84,1212.26 1823.42,1212.26 1824.01,1212.26 1824.6,1212.26 1825.18,1212.26 1825.77,1212.26 1826.35,1212.26 1826.94,1212.26 1827.53,1212.26 1828.11,1212.26 1828.7,1212.26 1829.29,1212.26 1829.87,1212.26 1830.46,1212.26 1831.05,1212.26 1831.63,1212.26 1832.22,1212.26 1832.81,1212.26 1833.39,1212.26 1833.98,1212.26 1834.56,1212.26 1835.15,1212.26 1835.74,1212.26 1836.32,1212.26 1836.91,1212.26 1837.5,1212.26 1838.08,1212.26 1838.67,1212.26 1839.26,1212.26 1839.84,1212.26 1840.43,1212.26 1841.01,1212.26 1841.6,1212.26 1842.19,1212.26 1842.77,1212.26 1843.36,1212.26 1843.95,1212.26 1844.53,1212.26 1845.12,1212.26 1845.71,1212.26 1846.29,1212.26 1846.88,1212.26 1847.47,1212.26 1848.05,1212.26 1848.64,1212.26 1849.22,1212.26 1849.81,1212.26 1850.4,1212.26 1850.98,1212.26 1851.57,1212.26 1852.16,1212.26 1852.74,1212.26 1853.33,1212.26 1853.92,1212.26 1854.5,1212.26 1855.09,1212.26 1855.68,1212.26 1856.26,1212.26 1856.85,1212.26 1857.43,1212.26 1858.02,1212.26 1858.61,1212.26 1859.19,1212.26 1859.78,1212.26 1860.37,1212.26 1860.95,1212.26 1861.54,1212.26 1862.13,1212.26 1862.71,1212.26 1863.3,1212.26 1863.88,1212.26 1864.47,1212.26 1865.06,1212.26 1865.64,1212.26 1866.23,1212.26 1866.82,1212.26 1867.4,1212.26 1867.99,1212.26 1868.58,1212.26 1869.16,1212.26 1869.75,1212.26 1870.34,1212.26 1870.92,1212.26 1871.51,1212.26 1872.09,1212.26 1872.68,1212.26 1873.27,1212.26 1873.85,1212.26 1874.44,1212.26 1875.03,1212.26 1875.61,1212.26 1876.2,1212.26 1876.79,1212.26 1877.37,1212.26 1877.96,1212.26 1878.55,1212.26 1879.13,1212.26 1879.72,1212.26 1880.3,1212.26 1880.89,1212.26 1881.48,1212.26 1882.06,1212.26 1882.65,1212.26 1883.24,1212.26 1883.82,1212.26 1884.41,1212.26 1885,1212.26 1885.58,1212.26 1886.17,1212.26 1886.76,1212.26 1887.34,1212.26 1887.93,1212.26 1888.51,1212.26 1889.1,1212.26 1889.69,1212.26 1890.27,1212.26 1890.86,1212.26 1891.45,1212.26 1892.03,1212.26 1892.62,1212.26 1893.21,1212.26 1893.79,1212.26 1894.38,1212.26 1894.96,1212.26 1895.55,1212.26 1896.14,1212.26 1896.72,1212.26 1897.31,1212.26 1897.9,1212.26 1898.48,1212.26 1899.07,1212.26 1899.66,1212.26 1900.24,1212.26 1900.83,1212.26 1901.42,1212.26 1902,1212.26 1902.59,1212.26 1903.17,1212.26 1903.76,1212.26 1904.35,1212.26 1904.93,1212.26 1905.52,1212.26 1906.11,1212.26 1906.69,1212.26 1907.28,1212.26 1907.87,1212.26 1908.45,1212.26 1909.04,1212.26 1909.63,1212.26 1910.21,1212.26 1910.8,1212.26 1911.38,1212.26 1911.97,1212.26 1912.56,1212.26 1913.14,1212.26 1913.73,1212.26 1914.32,1212.26 1914.9,1212.26 1915.49,1212.26 1916.08,1212.26 1916.66,1212.26 1917.25,1212.26 1917.83,1212.26 1918.42,1212.26 1919.01,1212.26 1919.59,1212.26 1920.18,1212.26 1920.77,1212.26 1921.35,1212.26 1921.94,1212.26 1922.53,1212.26 1923.11,1212.26 1923.7,1212.26 1924.29,1212.26 1924.87,1212.26 1925.46,1212.26 1926.04,1212.26 1926.63,1212.26 1927.22,1212.26 1927.8,1212.26 1928.39,1212.26 1928.98,1212.26 1929.56,1212.26 1930.15,1212.26 1930.74,1212.26 1931.32,1212.26 1931.91,1212.26 1932.5,1212.26 1933.08,1212.26 1933.67,1212.26 1934.25,1212.26 1934.84,1212.26 1935.43,1212.26 1936.01,1212.26 1936.6,1212.26 1937.19,1212.26 1937.77,1212.26 1938.36,1212.26 1938.95,1212.26 1939.53,1212.26 1940.12,1212.26 1940.71,1212.26 1941.29,1212.26 1941.88,1212.26 1942.46,1212.26 1943.05,1212.26 1943.64,1212.26 1944.22,1212.26 1944.81,1212.26 1945.4,1212.26 1945.98,1212.26 1946.57,1212.26 1947.16,1212.26 1947.74,1212.26 1948.33,1212.26 1948.91,1212.26 1949.5,1212.26 1950.09,1212.26 1950.67,1212.26 1951.26,1212.26 1951.85,1212.26 1952.43,1212.26 1953.02,1212.26 1953.61,1212.26 1954.19,1212.26 1954.78,1212.26 1955.37,1212.26 1955.95,1212.26 1956.54,1212.26 1957.12,1212.26 1957.71,1212.26 1958.3,1212.26 1958.88,1212.26 1959.47,1212.26 1960.06,1212.26 1960.64,1212.26 1961.23,1212.26 1961.82,1212.26 1962.4,1212.26 1962.99,1212.26 1963.58,1212.26 1964.16,1212.26 1964.75,1212.26 1965.33,1212.26 1965.92,1212.26 1966.51,1212.26 1967.09,1212.26 1967.68,1212.26 1968.27,1212.26 1968.85,1212.26 1969.44,1212.26 1970.03,1212.26 1970.61,1212.26 1971.2,1212.26 1971.78,1212.26 1972.37,1212.26 1972.96,1212.26 1973.54,1212.26 1974.13,1212.26 1974.72,1212.26 1975.3,1212.26 1975.89,1212.26 1976.48,1212.26 1977.06,1212.26 1977.65,1212.26 1978.24,1212.26 1978.82,1212.26 1979.41,1212.26 1979.99,1212.26 1980.58,1212.26 1981.17,1212.26 1981.75,1212.26 1982.34,1212.26 1982.93,1212.26 1983.51,1212.26 1984.1,1212.26 1984.69,1212.26 1985.27,1212.26 1985.86,1212.26 1986.45,1212.26 1987.03,1212.26 1987.62,1212.26 1988.2,1212.26 1988.79,1212.26 1989.38,1212.26 1989.96,1212.26 1990.55,1212.26 1991.14,1212.26 1991.72,1212.26 1992.31,1212.26 1992.9,1212.26 1993.48,1212.26 1994.07,1212.26 1994.65,1212.26 1995.24,1212.26 1995.83,1212.26 1996.41,1212.26 1997,1212.26 1997.59,1212.26 1998.17,1212.26 1998.76,1212.26 1999.35,1212.26 1999.93,1212.26 2000.52,1212.26 2001.11,1212.26 2001.69,1212.26 2002.28,1212.26 2002.86,1212.26 2003.45,1212.26 2004.04,1212.26 2004.62,1212.26 2005.21,1212.26 2005.8,1212.26 2006.38,1212.26 2006.97,1212.26 2007.56,1212.26 2008.14,1212.26 2008.73,1212.26 2009.32,1212.26 2009.9,1212.26 2010.49,1212.26 2011.07,1212.26 2011.66,1212.26 2012.25,1212.26 2012.83,1212.26 2013.42,1212.26 2014.01,1212.26 2014.59,1212.26 2015.18,1212.26 2015.77,1212.26 2016.35,1212.26 2016.94,1212.26 2017.53,1212.26 2018.11,1212.26 2018.7,1212.26 2019.28,1212.26 2019.87,1212.26 2020.46,1212.26 2021.04,1212.26 2021.63,1212.26 2022.22,1212.26 2022.8,1212.26 2023.39,1212.26 2023.98,1212.26 2024.56,1212.26 2025.15,1212.26 2025.73,1212.26 2026.32,1212.26 2026.91,1212.26 2027.49,1212.26 2028.08,1212.26 2028.67,1212.26 2029.25,1212.26 2029.84,1212.26 2030.43,1212.26 2031.01,1212.26 2031.6,1212.26 2032.19,1212.26 2032.77,1212.26 2033.36,1212.26 2033.94,1212.26 2034.53,1212.26 2035.12,1212.26 2035.7,1212.26 2036.29,1212.26 2036.88,1212.26 2037.46,1212.26 2038.05,1212.26 2038.64,1212.26 2039.22,1212.26 2039.81,1212.26 2040.4,1212.26 2040.98,1212.26 2041.57,1212.26 2042.15,1212.26 2042.74,1212.26 2043.33,1212.26 2043.91,1212.26 2044.5,1212.26 2045.09,1212.26 2045.67,1212.26 2046.26,1212.26 2046.85,1212.26 2047.43,1212.26 2048.02,1212.26 2048.6,1212.26 2049.19,1212.26 2049.78,1212.26 2050.36,1212.26 2050.95,1212.26 2051.54,1212.26 2052.12,1212.26 2052.71,1212.26 2053.3,1212.26 2053.88,1212.26 2054.47,1212.26 2055.06,1212.26 2055.64,1212.26 2056.23,1212.26 2056.81,1212.26 2057.4,1212.26 2057.99,1212.26 2058.57,1212.26 2059.16,1212.26 2059.75,1212.26 2060.33,1212.26 2060.92,1212.26 2061.51,1212.26 2062.09,1212.26 2062.68,1212.26 2063.27,1212.26 2063.85,1212.26 2064.44,1212.26 2065.02,1212.26 2065.61,1212.26 2066.2,1212.26 2066.78,1212.26 2067.37,1212.26 2067.96,1212.26 2068.54,1212.26 2069.13,1212.26 2069.72,1212.26 2070.3,1212.26 2070.89,1212.26 2071.48,1212.26 2072.06,1212.26 2072.65,1212.26 2073.23,1212.26 2073.82,1212.26 2074.41,1212.26 2074.99,1212.26 2075.58,1212.26 2076.17,1212.26 2076.75,1212.26 2077.34,1212.26 2077.93,1212.26 2078.51,1212.26 2079.1,1212.26 2079.68,1212.26 2080.27,1212.26 2080.86,1212.26 2081.44,1212.26 2082.03,1212.26 2082.62,1212.26 2083.2,1212.26 2083.79,1212.26 2084.38,1212.26 2084.96,1212.26 2085.55,1212.26 2086.14,1212.26 2086.72,1212.26 2087.31,1212.26 2087.89,1212.26 2088.48,1212.26 2089.07,1212.26 2089.65,1212.26 2090.24,1212.26 2090.83,1212.26 2091.41,1212.26 2092,1212.26 2092.59,1212.26 2093.17,1212.26 2093.76,1212.26 2094.35,1212.26 2094.93,1212.26 2095.52,1212.26 2096.1,1212.26 2096.69,1212.26 2097.28,1212.26 2097.86,1212.26 2098.45,1212.26 2099.04,1212.26 2099.62,1212.26 2100.21,1212.26 2100.8,1212.26 2101.38,1212.26 2101.97,1212.26 2102.55,1212.26 2103.14,1212.26 2103.73,1212.26 2104.31,1212.26 2104.9,1212.26 2105.49,1212.26 2106.07,1212.26 2106.66,1212.26 2107.25,1212.26 2107.83,1212.26 2108.42,1212.26 2109.01,1212.26 2109.59,1212.26 2110.18,1212.26 2110.76,1212.26 2111.35,1212.26 2111.94,1212.26 2112.52,1212.26 2113.11,1212.26 2113.7,1212.26 2114.28,1212.26 2114.87,1212.26 2115.46,1212.26 2116.04,1212.26 2116.63,1212.26 2117.22,1212.26 2117.8,1212.26 2118.39,1212.26 2118.97,1212.26 2119.56,1212.26 2120.15,1212.26 2120.73,1212.26 2121.32,1212.26 2121.91,1212.26 2122.49,1212.26 2123.08,1212.26 2123.67,1212.26 2124.25,1212.26 2124.84,1212.26 2125.42,1212.26 2126.01,1212.26 2126.6,1212.26 2127.18,1212.26 2127.77,1212.26 2128.36,1212.26 2128.94,1212.26 2129.53,1212.26 2130.12,1212.26 2130.7,1212.26 2131.29,1212.26 2131.88,1212.26 2132.46,1212.26 2133.05,1212.26 2133.63,1212.26 2134.22,1212.26 2134.81,1212.26 2135.39,1212.26 2135.98,1212.26 2136.57,1212.26 2137.15,1212.26 2137.74,1212.26 2138.33,1212.26 2138.91,1212.26 2139.5,1212.26 2140.09,1212.26 2140.67,1212.26 2141.26,1212.26 2141.84,1212.26 2142.43,1212.26 2143.02,1212.26 2143.6,1212.26 2144.19,1212.26 2144.78,1212.26 2145.36,1212.26 2145.95,1212.26 2146.54,1212.26 2147.12,1212.26 2147.71,1212.26 2148.3,1212.26 2148.88,1212.26 2149.47,1212.26 2150.05,1212.26 2150.64,1212.26 2151.23,1212.26 2151.81,1212.26 2152.4,1212.26 2152.99,1212.26 2153.57,1212.26 2154.16,1212.26 2154.75,1212.26 2155.33,1212.26 2155.92,1212.26 2156.5,1212.26 2157.09,1212.26 2157.68,1212.26 2158.26,1212.26 \"/>\n<path clip-path=\"url(#clip312)\" d=\"M986.025 1212.12 L986.612 1212.12 L987.198 1212.12 L987.785 1212.12 L988.371 1212.12 L988.957 1212.12 L989.544 1212.12 L990.13 1212.12 L990.717 1212.12 L991.303 1212.12 L991.889 1212.12 L992.476 1212.12 L993.062 1212.12 L993.649 1212.12 L994.235 1212.12 L994.822 1212.12 L995.408 1212.12 L995.994 1212.12 L996.581 1212.12 L997.167 1212.12 L997.754 1212.12 L998.34 1212.12 L998.926 1212.12 L999.513 1212.12 L1000.1 1212.12 L1000.69 1212.12 L1001.27 1212.12 L1001.86 1212.12 L1002.44 1212.12 L1003.03 1212.12 L1003.62 1212.12 L1004.2 1212.12 L1004.79 1212.12 L1005.38 1212.12 L1005.96 1212.12 L1006.55 1212.12 L1007.14 1212.12 L1007.72 1212.12 L1008.31 1212.12 L1008.9 1212.12 L1009.48 1212.12 L1010.07 1212.12 L1010.65 1212.12 L1011.24 1212.12 L1011.83 1212.12 L1012.41 1212.12 L1013 1212.12 L1013.59 1212.12 L1014.17 1212.12 L1014.76 1212.12 L1015.35 1212.12 L1015.93 1212.12 L1016.52 1212.12 L1017.11 1212.12 L1017.69 1212.12 L1018.28 1212.12 L1018.86 1212.12 L1019.45 1212.12 L1020.04 1212.12 L1020.62 1212.12 L1021.21 1212.12 L1021.8 1212.12 L1022.38 1212.12 L1022.97 1212.12 L1023.56 1212.12 L1024.14 1212.12 L1024.73 1212.12 L1025.32 1212.12 L1025.9 1212.12 L1026.49 1212.12 L1027.07 1212.12 L1027.66 1212.12 L1028.25 1212.12 L1028.83 1212.12 L1029.42 1212.12 L1030.01 1212.12 L1030.59 1212.12 L1031.18 1212.12 L1031.77 1212.12 L1032.35 1212.12 L1032.94 1212.12 L1033.52 1212.12 L1034.11 1212.12 L1034.7 1212.12 L1035.28 1212.12 L1035.87 1212.12 L1036.46 1212.12 L1037.04 1212.12 L1037.63 1212.12 L1038.22 1212.12 L1038.8 1212.12 L1039.39 1212.12 L1039.98 1212.12 L1040.56 1212.12 L1041.15 1212.12 L1041.73 1212.12 L1042.32 1212.12 L1042.91 1212.12 L1043.49 1212.12 L1044.08 1212.12 L1044.67 1212.12 L1045.25 1212.12 L1045.84 1212.12 L1046.43 1212.12 L1047.01 1212.12 L1047.6 1212.12 L1048.19 1212.12 L1048.77 1212.12 L1049.36 1212.12 L1049.94 1212.12 L1050.53 1212.12 L1051.12 1212.12 L1051.7 1212.12 L1052.29 1212.12 L1052.88 1212.12 L1053.46 1212.12 L1054.05 1212.12 L1054.64 1212.12 L1055.22 1212.12 L1055.81 1212.12 L1056.39 1212.12 L1056.98 1212.12 L1057.57 1212.12 L1058.15 1212.12 L1058.74 1212.12 L1059.33 1212.12 L1059.91 1212.12 L1060.5 1212.12 L1061.09 1212.12 L1061.67 1212.12 L1062.26 1212.12 L1062.85 1212.12 L1063.43 1212.12 L1064.02 1212.12 L1064.6 1212.12 L1065.19 1212.12 L1065.78 1212.12 L1066.36 1212.12 L1066.95 1212.12 L1067.54 1212.12 L1068.12 1212.12 L1068.71 1212.12 L1069.3 1212.12 L1069.88 1212.12 L1070.47 1212.12 L1071.06 1212.12 L1071.64 1212.12 L1072.23 1212.12 L1072.81 1212.12 L1073.4 1212.12 L1073.99 1212.12 L1074.57 1212.12 L1075.16 1212.12 L1075.75 1212.12 L1076.33 1212.12 L1076.92 1212.12 L1077.51 1212.12 L1078.09 1212.12 L1078.68 1212.12 L1079.26 1212.12 L1079.85 1212.12 L1080.44 1212.12 L1081.02 1212.12 L1081.61 1212.12 L1082.2 1212.12 L1082.78 1212.12 L1083.37 1212.12 L1083.96 1212.12 L1084.54 1212.12 L1085.13 1212.12 L1085.72 1212.12 L1086.3 1212.12 L1086.89 1212.12 L1087.47 1212.12 L1088.06 1212.12 L1088.65 1212.12 L1089.23 1212.12 L1089.82 1212.12 L1090.41 1212.12 L1090.99 1212.12 L1091.58 1212.12 L1092.17 1212.12 L1092.75 1212.12 L1093.34 1212.12 L1093.93 1212.12 L1094.51 1212.12 L1095.1 1212.12 L1095.68 1212.12 L1096.27 1212.12 L1096.86 1212.12 L1097.44 1212.12 L1098.03 1212.12 L1098.62 1212.12 L1099.2 1212.12 L1099.79 1212.12 L1100.38 1212.12 L1100.96 1212.12 L1101.55 1212.12 L1102.14 1212.12 L1102.72 1212.12 L1103.31 1212.12 L1103.89 1212.12 L1104.48 1212.12 L1105.07 1212.12 L1105.65 1212.12 L1106.24 1212.12 L1106.83 1212.12 L1107.41 1212.12 L1108 1212.12 L1108.59 1212.12 L1109.17 1212.12 L1109.76 1212.12 L1110.34 1212.12 L1110.93 1212.12 L1111.52 1212.12 L1112.1 1212.12 L1112.69 1212.12 L1113.28 1212.12 L1113.86 1212.12 L1114.45 1212.12 L1115.04 1212.12 L1115.62 1212.12 L1116.21 1212.12 L1116.8 1212.12 L1117.38 1212.12 L1117.97 1212.12 L1118.55 1212.12 L1119.14 1212.12 L1119.73 1212.12 L1120.31 1212.12 L1120.9 1212.12 L1121.49 1212.12 L1122.07 1212.12 L1122.66 1212.12 L1123.25 1212.12 L1123.83 1212.12 L1124.42 1212.12 L1125.01 1212.12 L1125.59 1212.12 L1126.18 1212.12 L1126.76 1212.12 L1127.35 1212.12 L1127.94 1212.12 L1128.52 1212.12 L1129.11 1212.12 L1129.7 1212.12 L1130.28 1212.12 L1130.87 1212.12 L1131.46 1212.12 L1132.04 1212.12 L1132.63 1212.12 L1133.21 1212.12 L1133.8 1212.12 L1134.39 1212.12 L1134.97 1212.12 L1135.56 1212.12 L1136.15 1212.12 L1136.73 1212.12 L1137.32 1212.12 L1137.91 1212.12 L1138.49 1212.12 L1139.08 1212.12 L1139.67 1212.12 L1140.25 1212.12 L1140.84 1212.12 L1141.42 1212.12 L1142.01 1212.12 L1142.6 1212.12 L1143.18 1212.12 L1143.77 1212.12 L1144.36 1212.12 L1144.94 1212.12 L1145.53 1212.12 L1146.12 1212.12 L1146.7 1212.12 L1147.29 1212.12 L1147.88 1212.12 L1148.46 1212.12 L1149.05 1212.12 L1149.63 1212.12 L1150.22 1212.12 L1150.81 1212.12 L1151.39 1212.12 L1151.98 1212.12 L1152.57 1212.12 L1153.15 1212.12 L1153.74 1212.12 L1154.33 1212.12 L1154.91 1212.12 L1155.5 1212.12 L1156.09 1212.12 L1156.67 1212.12 L1157.26 1212.12 L1157.84 1212.12 L1158.43 1212.12 L1159.02 1212.12 L1159.6 1212.12 L1160.19 1212.12 L1160.78 1212.12 L1161.36 1212.12 L1161.95 1212.12 L1162.54 1212.12 L1163.12 1212.12 L1163.71 1212.12 L1164.29 1212.12 L1164.88 1212.12 L1165.47 1212.12 L1166.05 1212.12 L1166.64 1212.12 L1167.23 1212.12 L1167.81 1212.12 L1168.4 1212.12 L1168.99 1212.12 L1169.57 1212.12 L1170.16 1212.12 L1170.75 1212.12 L1171.33 1212.12 L1171.92 1212.12 L1172.5 1212.12 L1173.09 1212.12 L1173.68 1212.12 L1174.26 1212.12 L1174.85 1212.12 L1175.44 1212.12 L1176.02 1212.12 L1176.61 1212.12 L1177.2 1212.12 L1177.78 1212.12 L1178.37 1212.12 L1178.96 1212.12 L1179.54 1212.12 L1180.13 1212.12 L1180.71 1212.12 L1181.3 1212.12 L1181.89 1212.12 L1182.47 1212.12 L1183.06 1212.12 L1183.65 1212.12 L1184.23 1212.12 L1184.82 1212.12 L1185.41 1212.12 L1185.99 1212.12 L1186.58 1212.12 L1187.16 1212.12 L1187.75 1212.12 L1188.34 1212.12 L1188.92 1212.12 L1189.51 1212.12 L1190.1 1212.12 L1190.68 1212.12 L1191.27 1212.12 L1191.86 1212.12 L1192.44 1212.12 L1193.03 1212.12 L1193.62 1212.12 L1194.2 1212.12 L1194.79 1212.12 L1195.37 1212.12 L1195.96 1212.12 L1196.55 1212.12 L1197.13 1212.12 L1197.72 1212.12 L1198.31 1212.12 L1198.89 1212.12 L1199.48 1212.12 L1200.07 1212.12 L1200.65 1212.12 L1201.24 1212.12 L1201.83 1212.12 L1202.41 1212.12 L1203 1212.12 L1203.58 1212.12 L1204.17 1212.12 L1204.76 1212.12 L1205.34 1212.12 L1205.93 1212.12 L1206.52 1212.12 L1207.1 1212.12 L1207.69 1212.12 L1208.28 1212.12 L1208.86 1212.12 L1209.45 1212.12 L1210.03 1212.12 L1210.62 1212.12 L1211.21 1212.12 L1211.79 1212.12 L1212.38 1212.12 L1212.97 1212.12 L1213.55 1212.12 L1214.14 1212.12 L1214.73 1212.12 L1215.31 1212.12 L1215.9 1212.12 L1216.49 1212.12 L1217.07 1212.12 L1217.66 1212.12 L1218.24 1212.12 L1218.83 1212.12 L1219.42 1212.12 L1220 1212.12 L1220.59 1212.12 L1221.18 1212.12 L1221.76 1212.12 L1222.35 1212.12 L1222.94 1212.12 L1223.52 1212.12 L1224.11 1212.12 L1224.7 1212.12 L1225.28 1212.12 L1225.87 1212.12 L1226.45 1212.12 L1227.04 1212.12 L1227.63 1212.12 L1228.21 1212.12 L1228.8 1212.12 L1229.39 1212.12 L1229.97 1212.12 L1230.56 1212.12 L1231.15 1212.12 L1231.73 1212.12 L1232.32 1212.12 L1232.91 1212.12 L1233.49 1212.12 L1234.08 1212.12 L1234.66 1212.12 L1235.25 1212.12 L1235.84 1212.12 L1236.42 1212.12 L1237.01 1212.12 L1237.6 1212.12 L1238.18 1212.12 L1238.77 1212.12 L1239.36 1212.12 L1239.94 1212.12 L1240.53 1212.12 L1241.11 1212.12 L1241.7 1212.12 L1242.29 1212.12 L1242.87 1212.12 L1243.46 1212.12 L1244.05 1212.12 L1244.63 1212.12 L1245.22 1212.12 L1245.81 1212.12 L1246.39 1212.12 L1246.98 1212.12 L1247.57 1212.12 L1248.15 1212.12 L1248.74 1212.12 L1249.32 1212.12 L1249.91 1212.12 L1250.5 1212.12 L1251.08 1212.12 L1251.67 1212.12 L1252.26 1212.12 L1252.84 1212.12 L1253.43 1212.12 L1254.02 1212.12 L1254.6 1212.12 L1255.19 1212.12 L1255.78 1212.12 L1256.36 1212.12 L1256.95 1212.12 L1257.53 1212.12 L1258.12 1212.12 L1258.71 1212.12 L1259.29 1212.12 L1259.88 1212.12 L1260.47 1212.12 L1261.05 1212.12 L1261.64 1212.12 L1262.23 1212.12 L1262.81 1212.12 L1263.4 1212.12 L1263.98 1212.12 L1264.57 1212.12 L1265.16 1212.12 L1265.74 1212.12 L1266.33 1212.12 L1266.92 1212.12 L1267.5 1212.12 L1268.09 1212.12 L1268.68 1212.12 L1269.26 1212.12 L1269.85 1212.12 L1270.44 1212.12 L1271.02 1212.12 L1271.61 1212.12 L1272.19 1212.12 L1272.78 1212.12 L1273.37 1212.12 L1273.95 1212.12 L1274.54 1212.12 L1275.13 1212.12 L1275.71 1212.12 L1276.3 1212.12 L1276.89 1212.12 L1277.47 1212.12 L1278.06 1212.12 L1278.65 1212.12 L1279.23 1212.12 L1279.82 1212.12 L1280.4 1212.12 L1280.99 1212.12 L1281.58 1212.12 L1282.16 1212.12 L1282.75 1212.12 L1283.34 1212.12 L1283.92 1212.12 L1284.51 1212.12 L1285.1 1212.12 L1285.68 1212.12 L1286.27 1212.12 L1286.86 1212.12 L1287.44 1212.12 L1288.03 1212.12 L1288.61 1212.12 L1289.2 1212.12 L1289.79 1212.12 L1290.37 1212.12 L1290.96 1212.12 L1291.55 1212.12 L1292.13 1212.12 L1292.72 1212.12 L1293.31 1212.12 L1293.89 1212.12 L1294.48 1212.12 L1295.06 1212.12 L1295.65 1212.12 L1296.24 1212.12 L1296.82 1212.12 L1297.41 1212.12 L1298 1212.12 L1298.58 1212.12 L1299.17 1212.12 L1299.76 1212.12 L1300.34 1212.12 L1300.93 1212.12 L1301.52 1212.12 L1302.1 1212.12 L1302.69 1212.12 L1303.27 1212.12 L1303.86 1212.12 L1304.45 1212.12 L1305.03 1212.12 L1305.62 1212.12 L1306.21 1212.12 L1306.79 1212.12 L1307.38 1212.12 L1307.97 1212.12 L1308.55 1212.12 L1309.14 1212.12 L1309.73 1212.12 L1310.31 1212.12 L1310.9 1212.12 L1311.48 1212.12 L1312.07 1212.12 L1312.66 1212.12 L1313.24 1212.12 L1313.83 1212.12 L1314.42 1212.12 L1315 1212.12 L1315.59 1212.12 L1316.18 1212.12 L1316.76 1212.12 L1317.35 1212.12 L1317.93 1212.12 L1318.52 1212.12 L1319.11 1212.12 L1319.69 1212.12 L1320.28 1212.12 L1320.87 1212.12 L1321.45 1212.12 L1322.04 1212.12 L1322.63 1212.12 L1323.21 1212.12 L1323.8 1212.12 L1324.39 1212.12 L1324.97 1212.12 L1325.56 1212.12 L1326.14 1212.12 L1326.73 1212.12 L1327.32 1212.12 L1327.9 1212.12 L1328.49 1212.12 L1329.08 1212.12 L1329.66 1212.12 L1330.25 1212.12 L1330.84 1212.12 L1331.42 1212.12 L1332.01 1212.12 L1332.6 1212.12 L1333.18 1212.12 L1333.77 1212.12 L1334.35 1212.12 L1334.94 1212.12 L1335.53 1212.12 L1336.11 1212.12 L1336.7 1212.12 L1337.29 1212.12 L1337.87 1212.12 L1338.46 1212.12 L1339.05 1212.12 L1339.63 1212.12 L1340.22 1212.12 L1340.8 1212.12 L1341.39 1212.12 L1341.98 1212.12 L1342.56 1212.12 L1343.15 1212.12 L1343.74 1212.12 L1344.32 1212.12 L1344.91 1212.12 L1345.5 1212.12 L1346.08 1212.12 L1346.67 1212.12 L1347.26 1212.12 L1347.84 1212.12 L1348.43 1212.12 L1349.01 1212.12 L1349.6 1212.12 L1350.19 1212.12 L1350.77 1212.12 L1351.36 1212.12 L1351.95 1212.12 L1352.53 1212.12 L1353.12 1212.12 L1353.71 1212.12 L1354.29 1212.12 L1354.88 1212.12 L1355.47 1212.12 L1356.05 1212.12 L1356.64 1212.12 L1357.22 1212.12 L1357.81 1212.12 L1358.4 1212.12 L1358.98 1212.12 L1359.57 1212.12 L1360.16 1212.12 L1360.74 1212.12 L1361.33 1212.12 L1361.92 1212.12 L1362.5 1212.12 L1363.09 1212.12 L1363.68 1212.12 L1364.26 1212.12 L1364.85 1212.12 L1365.43 1212.12 L1366.02 1212.12 L1366.61 1212.12 L1367.19 1212.12 L1367.78 1212.12 L1368.37 1212.12 L1368.95 1212.12 L1369.54 1212.12 L1370.13 1212.12 L1370.71 1212.12 L1371.3 1212.12 L1371.88 1212.12 L1372.47 1212.12 L1373.06 1212.12 L1373.64 1212.12 L1374.23 1212.12 L1374.82 1212.12 L1375.4 1212.12 L1375.99 1212.12 L1376.58 1212.12 L1377.16 1212.12 L1377.75 1212.12 L1378.34 1212.12 L1378.92 1212.12 L1379.51 1212.12 L1380.09 1212.12 L1380.68 1212.12 L1381.27 1212.12 L1381.85 1212.12 L1382.44 1212.12 L1383.03 1212.12 L1383.61 1212.12 L1384.2 1212.12 L1384.79 1212.12 L1385.37 1212.12 L1385.96 1212.12 L1386.55 1212.12 L1387.13 1212.12 L1387.72 1212.12 L1388.3 1212.12 L1388.89 1212.12 L1389.48 1212.12 L1390.06 1212.12 L1390.65 1212.12 L1391.24 1212.12 L1391.82 1212.12 L1392.41 1212.12 L1393 1212.12 L1393.58 1212.12 L1394.17 1212.12 L1394.75 1212.12 L1395.34 1212.12 L1395.93 1212.12 L1396.51 1212.12 L1397.1 1212.12 L1397.69 1212.12 L1398.27 1212.12 L1398.86 1212.12 L1399.45 1212.12 L1400.03 1212.12 L1400.62 1212.12 L1401.21 1212.12 L1401.79 1212.12 L1402.38 1212.12 L1402.96 1212.12 L1403.55 1212.12 L1404.14 1212.12 L1404.72 1212.12 L1405.31 1212.12 L1405.9 1212.12 L1406.48 1212.12 L1407.07 1212.12 L1407.66 1212.12 L1408.24 1212.12 L1408.83 1212.12 L1409.42 1212.12 L1410 1212.12 L1410.59 1212.12 L1411.17 1212.12 L1411.76 1212.12 L1412.35 1212.12 L1412.93 1212.12 L1413.52 1212.12 L1414.11 1212.12 L1414.69 1212.12 L1415.28 1212.12 L1415.87 1212.12 L1416.45 1212.12 L1417.04 1212.12 L1417.63 1212.12 L1418.21 1212.12 L1418.8 1212.12 L1419.38 1212.12 L1419.97 1212.12 L1420.56 1212.12 L1421.14 1212.12 L1421.73 1212.12 L1422.32 1212.12 L1422.9 1212.12 L1423.49 1212.12 L1424.08 1212.12 L1424.66 1212.12 L1425.25 1212.12 L1425.83 1212.12 L1426.42 1212.12 L1427.01 1212.12 L1427.59 1212.12 L1428.18 1212.12 L1428.77 1212.12 L1429.35 1212.12 L1429.94 1212.12 L1430.53 1212.12 L1431.11 1212.12 L1431.7 1212.12 L1432.29 1212.12 L1432.87 1212.12 L1433.46 1212.12 L1434.04 1212.12 L1434.63 1212.12 L1435.22 1212.12 L1435.8 1212.12 L1436.39 1212.12 L1436.98 1212.12 L1437.56 1212.12 L1438.15 1212.12 L1438.74 1212.12 L1439.32 1212.12 L1439.91 1212.12 L1440.5 1212.12 L1441.08 1212.12 L1441.67 1212.12 L1442.25 1212.12 L1442.84 1212.12 L1443.43 1212.12 L1444.01 1212.12 L1444.6 1212.12 L1445.19 1212.12 L1445.77 1212.12 L1446.36 1212.12 L1446.95 1212.12 L1447.53 1212.12 L1448.12 1212.12 L1448.7 1212.12 L1449.29 1212.12 L1449.88 1212.12 L1450.46 1212.12 L1451.05 1212.12 L1451.64 1212.12 L1452.22 1212.12 L1452.81 1212.12 L1453.4 1212.12 L1453.98 1212.12 L1454.57 1212.12 L1455.16 1212.12 L1455.74 1212.12 L1456.33 1212.12 L1456.91 1212.12 L1457.5 1212.12 L1458.09 1212.12 L1458.67 1212.12 L1459.26 1212.12 L1459.85 1212.12 L1460.43 1212.12 L1461.02 1212.12 L1461.61 1212.12 L1462.19 1212.12 L1462.78 1212.12 L1463.37 1212.12 L1463.95 1212.12 L1464.54 1212.12 L1465.12 1212.12 L1465.71 1212.12 L1466.3 1212.12 L1466.88 1212.12 L1467.47 1212.12 L1468.06 1212.12 L1468.64 1212.12 L1469.23 1212.12 L1469.82 1212.12 L1470.4 1212.12 L1470.99 1212.12 L1471.57 1212.12 L1472.16 1212.12 L1472.75 1212.12 L1473.33 1212.12 L1473.92 1212.12 L1474.51 1212.12 L1475.09 1212.12 L1475.68 1212.12 L1476.27 1212.12 L1476.85 1212.12 L1477.44 1212.12 L1478.03 1212.12 L1478.61 1212.12 L1479.2 1212.12 L1479.78 1212.12 L1480.37 1212.12 L1480.96 1212.12 L1481.54 1212.12 L1482.13 1212.12 L1482.72 1212.12 L1483.3 1212.12 L1483.89 1212.12 L1484.48 1212.12 L1485.06 1212.12 L1485.65 1212.12 L1486.24 1212.12 L1486.82 1212.12 L1487.41 1212.12 L1487.99 1212.12 L1488.58 1212.12 L1489.17 1212.12 L1489.75 1212.12 L1490.34 1212.12 L1490.93 1212.12 L1491.51 1212.12 L1492.1 1212.12 L1492.69 1212.12 L1493.27 1212.12 L1493.86 1212.12 L1494.45 1212.12 L1495.03 1212.12 L1495.62 1212.12 L1496.2 1212.12 L1496.79 1212.12 L1497.38 1212.12 L1497.96 1212.12 L1498.55 1212.12 L1499.14 1212.12 L1499.72 1212.12 L1500.31 1212.12 L1500.9 1212.12 L1501.48 1212.12 L1502.07 1212.12 L1502.65 1212.12 L1503.24 1212.12 L1503.83 1212.12 L1504.41 1212.12 L1505 1212.12 L1505.59 1212.12 L1506.17 1212.12 L1506.76 1212.12 L1507.35 1212.12 L1507.93 1212.12 L1508.52 1212.12 L1509.11 1212.12 L1509.69 1212.12 L1510.28 1212.12 L1510.86 1212.12 L1511.45 1212.12 L1512.04 1212.12 L1512.62 1212.12 L1513.21 1212.12 L1513.8 1212.12 L1514.38 1212.12 L1514.97 1212.12 L1515.56 1212.12 L1516.14 1212.12 L1516.73 1212.12 L1517.32 1212.12 L1517.9 1212.12 L1518.49 1212.12 L1519.07 1212.12 L1519.66 1212.12 L1520.25 1212.12 L1520.83 1212.12 L1521.42 1212.12 L1522.01 1212.12 L1522.59 1212.12 L1523.18 1212.12 L1523.77 1212.12 L1524.35 1212.12 L1524.94 1212.12 L1525.52 1212.12 L1526.11 1212.12 L1526.7 1212.12 L1527.28 1212.12 L1527.87 1212.12 L1528.46 1212.12 L1529.04 1212.12 L1529.63 1212.12 L1530.22 1212.12 L1530.8 1212.12 L1531.39 1212.12 L1531.98 1212.12 L1532.56 1212.12 L1533.15 1212.12 L1533.73 1212.12 L1534.32 1212.12 L1534.91 1212.12 L1535.49 1212.12 L1536.08 1212.12 L1536.67 1212.12 L1537.25 1212.12 L1537.84 1212.12 L1538.43 1212.12 L1539.01 1212.12 L1539.6 1212.12 L1540.19 1212.12 L1540.77 1212.12 L1541.36 1212.12 L1541.94 1212.12 L1542.53 1212.12 L1543.12 1212.12 L1543.7 1212.12 L1544.29 1212.12 L1544.88 1212.12 L1545.46 1212.12 L1546.05 1212.12 L1546.64 1212.12 L1547.22 1212.12 L1547.81 1212.12 L1548.4 1212.12 L1548.98 1212.12 L1549.57 1212.12 L1550.15 1212.12 L1550.74 1212.12 L1551.33 1212.12 L1551.91 1212.12 L1552.5 1212.12 L1553.09 1212.12 L1553.67 1212.12 L1554.26 1212.12 L1554.85 1212.12 L1555.43 1212.12 L1556.02 1212.12 L1556.6 1212.12 L1557.19 1212.12 L1557.78 1212.12 L1558.36 1212.12 L1558.95 1212.12 L1559.54 1212.12 L1560.12 1212.12 L1560.71 1212.12 L1561.3 1212.12 L1561.88 1212.12 L1562.47 1212.12 L1563.06 1212.12 L1563.64 1212.12 L1564.23 1212.12 L1564.81 1212.12 L1565.4 1212.12 L1565.99 1212.12 L1566.57 1212.12 L1567.16 1212.12 L1567.75 1212.12 L1568.33 1212.12 L1568.92 1212.12 L1569.51 1212.12 L1570.09 1212.12 L1570.68 1212.12 L1571.27 1212.12 L1571.85 1212.12 L1572.44 1212.12 L1573.02 1212.12 L1573.61 1212.12 L1574.2 1212.12 L1574.78 1212.12 L1575.37 1212.12 L1575.96 1212.12 L1576.54 1212.12 L1577.13 1212.12 L1577.72 1212.12 L1578.3 1212.12 L1578.89 1212.12 L1579.47 1212.12 L1580.06 1212.12 L1580.65 1212.12 L1581.23 1212.12 L1581.82 1212.12 L1582.41 1212.12 L1582.99 1212.12 L1583.58 1212.12 L1584.17 1212.12 L1584.75 1212.12 L1585.34 1212.12 L1585.93 1212.12 L1586.51 1212.12 L1587.1 1212.12 L1587.68 1212.12 L1588.27 1212.12 L1588.86 1212.12 L1589.44 1212.12 L1590.03 1212.12 L1590.62 1212.12 L1591.2 1212.12 L1591.79 1212.12 L1592.38 1212.12 L1592.96 1212.12 L1593.55 1212.12 L1594.14 1212.12 L1594.72 1212.12 L1595.31 1212.12 L1595.89 1212.12 L1596.48 1212.12 L1597.07 1212.12 L1597.65 1212.12 L1598.24 1212.12 L1598.83 1212.12 L1599.41 1212.12 L1600 1212.12 L1600.59 1212.12 L1601.17 1212.12 L1601.76 1212.12 L1602.34 1212.12 L1602.93 1212.12 L1603.52 1212.12 L1604.1 1212.12 L1604.69 1212.12 L1605.28 1212.12 L1605.86 1212.12 L1606.45 1212.12 L1607.04 1212.12 L1607.62 1212.12 L1608.21 1212.12 L1608.8 1212.12 L1609.38 1212.12 L1609.97 1212.12 L1610.55 1212.12 L1611.14 1212.12 L1611.73 1212.12 L1612.31 1212.12 L1612.9 1212.12 L1613.49 1212.12 L1614.07 1212.12 L1614.66 1212.12 L1615.25 1212.12 L1615.83 1212.12 L1616.42 1212.12 L1617.01 1212.12 L1617.59 1212.12 L1618.18 1212.12 L1618.76 1212.12 L1619.35 1212.12 L1619.94 1212.12 L1620.52 1212.12 L1621.11 1212.12 L1621.7 1212.12 L1622.28 1212.12 L1622.87 1212.12 L1623.46 1212.12 L1624.04 1212.12 L1624.63 1212.12 L1625.22 1212.12 L1625.8 1212.12 L1626.39 1212.12 L1626.97 1212.12 L1627.56 1212.12 L1628.15 1212.12 L1628.73 1212.12 L1629.32 1212.12 L1629.91 1212.12 L1630.49 1212.12 L1631.08 1212.12 L1631.67 1212.12 L1632.25 1212.12 L1632.84 1212.12 L1633.42 1212.12 L1634.01 1212.12 L1634.6 1212.12 L1635.18 1212.12 L1635.77 1212.12 L1636.36 1212.12 L1636.94 1212.12 L1637.53 1212.12 L1638.12 1212.12 L1638.7 1212.12 L1639.29 1212.12 L1639.88 1212.12 L1640.46 1212.12 L1641.05 1212.12 L1641.63 1212.12 L1642.22 1212.12 L1642.81 1212.12 L1643.39 1212.12 L1643.98 1212.12 L1644.57 1212.12 L1645.15 1212.12 L1645.74 1212.12 L1646.33 1212.12 L1646.91 1212.12 L1647.5 1212.12 L1648.09 1212.12 L1648.67 1212.12 L1649.26 1212.12 L1649.84 1212.12 L1650.43 1212.12 L1651.02 1212.12 L1651.6 1212.12 L1652.19 1212.12 L1652.78 1212.12 L1653.36 1212.12 L1653.95 1212.12 L1654.54 1212.12 L1655.12 1212.12 L1655.71 1212.12 L1656.29 1212.12 L1656.88 1212.12 L1657.47 1212.12 L1658.05 1212.12 L1658.64 1212.12 L1659.23 1212.12 L1659.81 1212.12 L1660.4 1212.12 L1660.99 1212.12 L1661.57 1212.12 L1662.16 1212.12 L1662.75 1212.12 L1663.33 1212.12 L1663.92 1212.12 L1664.5 1212.12 L1665.09 1212.12 L1665.68 1212.12 L1666.26 1212.12 L1666.85 1212.12 L1667.44 1212.12 L1668.02 1212.12 L1668.61 1212.12 L1669.2 1212.12 L1669.78 1212.12 L1670.37 1212.12 L1670.96 1212.12 L1671.54 1212.12 L1672.13 1212.12 L1672.71 1212.12 L1673.3 1212.12 L1673.89 1212.12 L1674.47 1212.12 L1675.06 1212.12 L1675.65 1212.12 L1676.23 1212.12 L1676.82 1212.12 L1677.41 1212.12 L1677.99 1212.12 L1678.58 1212.12 L1679.17 1212.12 L1679.75 1212.12 L1680.34 1212.12 L1680.92 1212.12 L1681.51 1212.12 L1682.1 1212.12 L1682.68 1212.12 L1683.27 1212.12 L1683.86 1212.12 L1684.44 1212.12 L1685.03 1212.12 L1685.62 1212.12 L1686.2 1212.12 L1686.79 1212.12 L1687.37 1212.12 L1687.96 1212.12 L1688.55 1212.12 L1689.13 1212.12 L1689.72 1212.12 L1690.31 1212.12 L1690.89 1212.12 L1691.48 1212.12 L1692.07 1212.12 L1692.65 1212.12 L1693.24 1212.12 L1693.83 1212.12 L1694.41 1212.12 L1695 1212.12 L1695.58 1212.12 L1696.17 1212.12 L1696.76 1212.12 L1697.34 1212.12 L1697.93 1212.12 L1698.52 1212.12 L1699.1 1212.12 L1699.69 1212.12 L1700.28 1212.12 L1700.86 1212.12 L1701.45 1212.12 L1702.04 1212.12 L1702.62 1212.12 L1703.21 1212.12 L1703.79 1212.12 L1704.38 1212.12 L1704.97 1212.12 L1705.55 1212.12 L1706.14 1212.12 L1706.73 1212.12 L1707.31 1212.12 L1707.9 1212.12 L1708.49 1212.12 L1709.07 1212.12 L1709.66 1212.12 L1710.24 1212.12 L1710.83 1212.12 L1711.42 1212.12 L1712 1212.12 L1712.59 1212.12 L1713.18 1212.12 L1713.76 1212.12 L1714.35 1212.12 L1714.94 1212.12 L1715.52 1212.12 L1716.11 1212.12 L1716.7 1212.12 L1717.28 1212.12 L1717.87 1212.12 L1718.45 1212.12 L1719.04 1212.12 L1719.63 1212.12 L1720.21 1212.12 L1720.8 1212.12 L1721.39 1212.12 L1721.97 1212.12 L1722.56 1212.12 L1723.15 1212.12 L1723.73 1212.12 L1724.32 1212.12 L1724.91 1212.12 L1725.49 1212.12 L1726.08 1212.12 L1726.66 1212.12 L1727.25 1212.12 L1727.84 1212.12 L1728.42 1212.12 L1729.01 1212.12 L1729.6 1212.12 L1730.18 1212.12 L1730.77 1212.12 L1731.36 1212.12 L1731.94 1212.12 L1732.53 1212.12 L1733.11 1212.12 L1733.7 1212.12 L1734.29 1212.12 L1734.87 1212.12 L1735.46 1212.12 L1736.05 1212.12 L1736.63 1212.12 L1737.22 1212.12 L1737.81 1212.12 L1738.39 1212.12 L1738.98 1212.12 L1739.57 1212.12 L1740.15 1212.12 L1740.74 1212.12 L1741.32 1212.12 L1741.91 1212.12 L1742.5 1212.12 L1743.08 1212.12 L1743.67 1212.12 L1744.26 1212.12 L1744.84 1212.12 L1745.43 1212.12 L1746.02 1212.12 L1746.6 1212.12 L1747.19 1212.12 L1747.78 1212.12 L1748.36 1212.12 L1748.95 1212.12 L1749.53 1212.12 L1750.12 1212.12 L1750.71 1212.12 L1751.29 1212.12 L1751.88 1212.12 L1752.47 1212.12 L1753.05 1212.12 L1753.64 1212.12 L1754.23 1212.12 L1754.81 1212.12 L1755.4 1212.12 L1755.99 1212.12 L1756.57 1212.12 L1757.16 1212.12 L1757.74 1212.12 L1758.33 1212.12 L1758.92 1212.12 L1759.5 1212.12 L1760.09 1212.12 L1760.68 1212.12 L1761.26 1212.12 L1761.85 1212.12 L1762.44 1212.12 L1763.02 1212.12 L1763.61 1212.12 L1764.19 1212.12 L1764.78 1212.12 L1765.37 1212.12 L1765.95 1212.12 L1766.54 1212.12 L1767.13 1212.12 L1767.71 1212.12 L1768.3 1212.12 L1768.89 1212.12 L1769.47 1212.12 L1770.06 1212.12 L1770.65 1212.12 L1771.23 1212.12 L1771.82 1212.12 L1772.4 1212.12 L1772.99 1212.12 L1773.58 1212.12 L1774.16 1212.12 L1774.75 1212.12 L1775.34 1212.12 L1775.92 1212.12 L1776.51 1212.12 L1777.1 1212.12 L1777.68 1212.12 L1778.27 1212.12 L1778.86 1212.12 L1779.44 1212.12 L1780.03 1212.12 L1780.61 1212.12 L1781.2 1212.12 L1781.79 1212.12 L1782.37 1212.12 L1782.96 1212.12 L1783.55 1212.12 L1784.13 1212.12 L1784.72 1212.12 L1785.31 1212.12 L1785.89 1212.12 L1786.48 1212.12 L1787.06 1212.12 L1787.65 1212.12 L1788.24 1212.12 L1788.82 1212.12 L1789.41 1212.12 L1790 1212.12 L1790.58 1212.12 L1791.17 1212.12 L1791.76 1212.12 L1792.34 1212.12 L1792.93 1212.12 L1793.52 1212.12 L1794.1 1212.12 L1794.69 1212.12 L1795.27 1212.12 L1795.86 1212.12 L1796.45 1212.12 L1797.03 1212.12 L1797.62 1212.12 L1798.21 1212.12 L1798.79 1212.12 L1799.38 1212.12 L1799.97 1212.12 L1800.55 1212.12 L1801.14 1212.12 L1801.73 1212.12 L1802.31 1212.12 L1802.9 1212.12 L1803.48 1212.12 L1804.07 1212.12 L1804.66 1212.12 L1805.24 1212.12 L1805.83 1212.12 L1806.42 1212.12 L1807 1212.12 L1807.59 1212.12 L1808.18 1212.12 L1808.76 1212.12 L1809.35 1212.12 L1809.94 1212.12 L1810.52 1212.12 L1811.11 1212.12 L1811.69 1212.12 L1812.28 1212.12 L1812.87 1212.12 L1813.45 1212.12 L1814.04 1212.12 L1814.63 1212.12 L1815.21 1212.12 L1815.8 1212.12 L1816.39 1212.12 L1816.97 1212.12 L1817.56 1212.12 L1818.14 1212.12 L1818.73 1212.12 L1819.32 1212.12 L1819.9 1212.12 L1820.49 1212.12 L1821.08 1212.12 L1821.66 1212.12 L1822.25 1212.12 L1822.84 1212.12 L1823.42 1212.12 L1824.01 1212.12 L1824.6 1212.12 L1825.18 1212.12 L1825.77 1212.12 L1826.35 1212.12 L1826.94 1212.12 L1827.53 1212.12 L1828.11 1212.12 L1828.7 1212.12 L1829.29 1212.12 L1829.87 1212.12 L1830.46 1212.12 L1831.05 1212.12 L1831.63 1212.12 L1832.22 1212.12 L1832.81 1212.12 L1833.39 1212.12 L1833.98 1212.12 L1834.56 1212.12 L1835.15 1212.12 L1835.74 1212.12 L1836.32 1212.12 L1836.91 1212.12 L1837.5 1212.12 L1838.08 1212.12 L1838.67 1212.12 L1839.26 1212.12 L1839.84 1212.12 L1840.43 1212.12 L1841.01 1212.12 L1841.6 1212.12 L1842.19 1212.12 L1842.77 1212.12 L1843.36 1212.12 L1843.95 1212.12 L1844.53 1212.12 L1845.12 1212.12 L1845.71 1212.12 L1846.29 1212.12 L1846.88 1212.12 L1847.47 1212.12 L1848.05 1212.12 L1848.64 1212.12 L1849.22 1212.12 L1849.81 1212.12 L1850.4 1212.12 L1850.98 1212.12 L1851.57 1212.12 L1852.16 1212.12 L1852.74 1212.12 L1853.33 1212.12 L1853.92 1212.12 L1854.5 1212.12 L1855.09 1212.12 L1855.68 1212.12 L1856.26 1212.12 L1856.85 1212.12 L1857.43 1212.12 L1858.02 1212.12 L1858.61 1212.12 L1859.19 1212.12 L1859.78 1212.12 L1860.37 1212.12 L1860.95 1212.12 L1861.54 1212.12 L1862.13 1212.12 L1862.71 1212.12 L1863.3 1212.12 L1863.88 1212.12 L1864.47 1212.12 L1865.06 1212.12 L1865.64 1212.12 L1866.23 1212.12 L1866.82 1212.12 L1867.4 1212.12 L1867.99 1212.12 L1868.58 1212.12 L1869.16 1212.12 L1869.75 1212.12 L1870.34 1212.12 L1870.92 1212.12 L1871.51 1212.12 L1872.09 1212.12 L1872.68 1212.12 L1873.27 1212.12 L1873.85 1212.12 L1874.44 1212.12 L1875.03 1212.12 L1875.61 1212.12 L1876.2 1212.12 L1876.79 1212.12 L1877.37 1212.12 L1877.96 1212.12 L1878.55 1212.12 L1879.13 1212.12 L1879.72 1212.12 L1880.3 1212.12 L1880.89 1212.12 L1881.48 1212.12 L1882.06 1212.12 L1882.65 1212.12 L1883.24 1212.12 L1883.82 1212.12 L1884.41 1212.12 L1885 1212.12 L1885.58 1212.12 L1886.17 1212.12 L1886.76 1212.12 L1887.34 1212.12 L1887.93 1212.12 L1888.51 1212.12 L1889.1 1212.12 L1889.69 1212.12 L1890.27 1212.12 L1890.86 1212.12 L1891.45 1212.12 L1892.03 1212.12 L1892.62 1212.12 L1893.21 1212.12 L1893.79 1212.12 L1894.38 1212.12 L1894.96 1212.12 L1895.55 1212.12 L1896.14 1212.12 L1896.72 1212.12 L1897.31 1212.12 L1897.9 1212.12 L1898.48 1212.12 L1899.07 1212.12 L1899.66 1212.12 L1900.24 1212.12 L1900.83 1212.12 L1901.42 1212.12 L1902 1212.12 L1902.59 1212.12 L1903.17 1212.12 L1903.76 1212.12 L1904.35 1212.12 L1904.93 1212.12 L1905.52 1212.12 L1906.11 1212.12 L1906.69 1212.12 L1907.28 1212.12 L1907.87 1212.12 L1908.45 1212.12 L1909.04 1212.12 L1909.63 1212.12 L1910.21 1212.12 L1910.8 1212.12 L1911.38 1212.12 L1911.97 1212.12 L1912.56 1212.12 L1913.14 1212.12 L1913.73 1212.12 L1914.32 1212.12 L1914.9 1212.12 L1915.49 1212.12 L1916.08 1212.12 L1916.66 1212.12 L1917.25 1212.12 L1917.83 1212.12 L1918.42 1212.12 L1919.01 1212.12 L1919.59 1212.12 L1920.18 1212.12 L1920.77 1212.12 L1921.35 1212.12 L1921.94 1212.12 L1922.53 1212.12 L1923.11 1212.12 L1923.7 1212.12 L1924.29 1212.12 L1924.87 1212.12 L1925.46 1212.12 L1926.04 1212.12 L1926.63 1212.12 L1927.22 1212.12 L1927.8 1212.12 L1928.39 1212.12 L1928.98 1212.12 L1929.56 1212.12 L1930.15 1212.12 L1930.74 1212.12 L1931.32 1212.12 L1931.91 1212.12 L1932.5 1212.12 L1933.08 1212.12 L1933.67 1212.12 L1934.25 1212.12 L1934.84 1212.12 L1935.43 1212.12 L1936.01 1212.12 L1936.6 1212.12 L1937.19 1212.12 L1937.77 1212.12 L1938.36 1212.12 L1938.95 1212.12 L1939.53 1212.12 L1940.12 1212.12 L1940.71 1212.12 L1941.29 1212.12 L1941.88 1212.12 L1942.46 1212.12 L1943.05 1212.12 L1943.64 1212.12 L1944.22 1212.12 L1944.81 1212.12 L1945.4 1212.12 L1945.98 1212.12 L1946.57 1212.12 L1947.16 1212.12 L1947.74 1212.12 L1948.33 1212.12 L1948.91 1212.12 L1949.5 1212.12 L1950.09 1212.12 L1950.67 1212.12 L1951.26 1212.12 L1951.85 1212.12 L1952.43 1212.12 L1953.02 1212.12 L1953.61 1212.12 L1954.19 1212.12 L1954.78 1212.12 L1955.37 1212.12 L1955.95 1212.12 L1956.54 1212.12 L1957.12 1212.12 L1957.71 1212.12 L1958.3 1212.12 L1958.88 1212.12 L1959.47 1212.12 L1960.06 1212.12 L1960.64 1212.12 L1961.23 1212.12 L1961.82 1212.12 L1962.4 1212.12 L1962.99 1212.12 L1963.58 1212.12 L1964.16 1212.12 L1964.75 1212.12 L1965.33 1212.12 L1965.92 1212.12 L1966.51 1212.12 L1967.09 1212.12 L1967.68 1212.12 L1968.27 1212.12 L1968.85 1212.12 L1969.44 1212.12 L1970.03 1212.12 L1970.61 1212.12 L1971.2 1212.12 L1971.78 1212.12 L1972.37 1212.12 L1972.96 1212.12 L1973.54 1212.12 L1974.13 1212.12 L1974.72 1212.12 L1975.3 1212.12 L1975.89 1212.12 L1976.48 1212.12 L1977.06 1212.12 L1977.65 1212.12 L1978.24 1212.12 L1978.82 1212.12 L1979.41 1212.12 L1979.99 1212.12 L1980.58 1212.12 L1981.17 1212.12 L1981.75 1212.12 L1982.34 1212.12 L1982.93 1212.12 L1983.51 1212.12 L1984.1 1212.12 L1984.69 1212.12 L1985.27 1212.12 L1985.86 1212.12 L1986.45 1212.12 L1987.03 1212.12 L1987.62 1212.12 L1988.2 1212.12 L1988.79 1212.12 L1989.38 1212.12 L1989.96 1212.12 L1990.55 1212.12 L1991.14 1212.12 L1991.72 1212.12 L1992.31 1212.12 L1992.9 1212.12 L1993.48 1212.12 L1994.07 1212.12 L1994.65 1212.12 L1995.24 1212.12 L1995.83 1212.12 L1996.41 1212.12 L1997 1212.12 L1997.59 1212.12 L1998.17 1212.12 L1998.76 1212.12 L1999.35 1212.12 L1999.93 1212.12 L2000.52 1212.12 L2001.11 1212.12 L2001.69 1212.12 L2002.28 1212.12 L2002.86 1212.12 L2003.45 1212.12 L2004.04 1212.12 L2004.62 1212.12 L2005.21 1212.12 L2005.8 1212.12 L2006.38 1212.12 L2006.97 1212.12 L2007.56 1212.12 L2008.14 1212.12 L2008.73 1212.12 L2009.32 1212.12 L2009.9 1212.12 L2010.49 1212.12 L2011.07 1212.12 L2011.66 1212.12 L2012.25 1212.12 L2012.83 1212.12 L2013.42 1212.12 L2014.01 1212.12 L2014.59 1212.12 L2015.18 1212.12 L2015.77 1212.12 L2016.35 1212.12 L2016.94 1212.12 L2017.53 1212.12 L2018.11 1212.12 L2018.7 1212.12 L2019.28 1212.12 L2019.87 1212.12 L2020.46 1212.12 L2021.04 1212.12 L2021.63 1212.12 L2022.22 1212.12 L2022.8 1212.12 L2023.39 1212.12 L2023.98 1212.12 L2024.56 1212.12 L2025.15 1212.12 L2025.73 1212.12 L2026.32 1212.12 L2026.91 1212.12 L2027.49 1212.12 L2028.08 1212.12 L2028.67 1212.12 L2029.25 1212.12 L2029.84 1212.12 L2030.43 1212.12 L2031.01 1212.12 L2031.6 1212.12 L2032.19 1212.12 L2032.77 1212.12 L2033.36 1212.12 L2033.94 1212.12 L2034.53 1212.12 L2035.12 1212.12 L2035.7 1212.12 L2036.29 1212.12 L2036.88 1212.12 L2037.46 1212.12 L2038.05 1212.12 L2038.64 1212.12 L2039.22 1212.12 L2039.81 1212.12 L2040.4 1212.12 L2040.98 1212.12 L2041.57 1212.12 L2042.15 1212.12 L2042.74 1212.12 L2043.33 1212.12 L2043.91 1212.12 L2044.5 1212.12 L2045.09 1212.12 L2045.67 1212.12 L2046.26 1212.12 L2046.85 1212.12 L2047.43 1212.12 L2048.02 1212.12 L2048.6 1212.12 L2049.19 1212.12 L2049.78 1212.12 L2050.36 1212.12 L2050.95 1212.12 L2051.54 1212.12 L2052.12 1212.12 L2052.71 1212.12 L2053.3 1212.12 L2053.88 1212.12 L2054.47 1212.12 L2055.06 1212.12 L2055.64 1212.12 L2056.23 1212.12 L2056.81 1212.12 L2057.4 1212.12 L2057.99 1212.12 L2058.57 1212.12 L2059.16 1212.12 L2059.75 1212.12 L2060.33 1212.12 L2060.92 1212.12 L2061.51 1212.12 L2062.09 1212.12 L2062.68 1212.12 L2063.27 1212.12 L2063.85 1212.12 L2064.44 1212.12 L2065.02 1212.12 L2065.61 1212.12 L2066.2 1212.12 L2066.78 1212.12 L2067.37 1212.12 L2067.96 1212.12 L2068.54 1212.12 L2069.13 1212.12 L2069.72 1212.12 L2070.3 1212.12 L2070.89 1212.12 L2071.48 1212.12 L2072.06 1212.12 L2072.65 1212.12 L2073.23 1212.12 L2073.82 1212.12 L2074.41 1212.12 L2074.99 1212.12 L2075.58 1212.12 L2076.17 1212.12 L2076.75 1212.12 L2077.34 1212.12 L2077.93 1212.12 L2078.51 1212.12 L2079.1 1212.12 L2079.68 1212.12 L2080.27 1212.12 L2080.86 1212.12 L2081.44 1212.12 L2082.03 1212.12 L2082.62 1212.12 L2083.2 1212.12 L2083.79 1212.12 L2084.38 1212.12 L2084.96 1212.12 L2085.55 1212.12 L2086.14 1212.12 L2086.72 1212.12 L2087.31 1212.12 L2087.89 1212.12 L2088.48 1212.12 L2089.07 1212.12 L2089.65 1212.12 L2090.24 1212.12 L2090.83 1212.12 L2091.41 1212.12 L2092 1212.12 L2092.59 1212.12 L2093.17 1212.12 L2093.76 1212.12 L2094.35 1212.12 L2094.93 1212.12 L2095.52 1212.12 L2096.1 1212.12 L2096.69 1212.12 L2097.28 1212.12 L2097.86 1212.12 L2098.45 1212.12 L2099.04 1212.12 L2099.62 1212.12 L2100.21 1212.12 L2100.8 1212.12 L2101.38 1212.12 L2101.97 1212.12 L2102.55 1212.12 L2103.14 1212.12 L2103.73 1212.12 L2104.31 1212.12 L2104.9 1212.12 L2105.49 1212.12 L2106.07 1212.12 L2106.66 1212.12 L2107.25 1212.12 L2107.83 1212.12 L2108.42 1212.12 L2109.01 1212.12 L2109.59 1212.12 L2110.18 1212.12 L2110.76 1212.12 L2111.35 1212.12 L2111.94 1212.12 L2112.52 1212.12 L2113.11 1212.12 L2113.7 1212.12 L2114.28 1212.12 L2114.87 1212.12 L2115.46 1212.12 L2116.04 1212.12 L2116.63 1212.12 L2117.22 1212.12 L2117.8 1212.12 L2118.39 1212.12 L2118.97 1212.12 L2119.56 1212.12 L2120.15 1212.12 L2120.73 1212.12 L2121.32 1212.12 L2121.91 1212.12 L2122.49 1212.12 L2123.08 1212.12 L2123.67 1212.12 L2124.25 1212.12 L2124.84 1212.12 L2125.42 1212.12 L2126.01 1212.12 L2126.6 1212.12 L2127.18 1212.12 L2127.77 1212.12 L2128.36 1212.12 L2128.94 1212.12 L2129.53 1212.12 L2130.12 1212.12 L2130.7 1212.12 L2131.29 1212.12 L2131.88 1212.12 L2132.46 1212.12 L2133.05 1212.12 L2133.63 1212.12 L2134.22 1212.12 L2134.81 1212.12 L2135.39 1212.12 L2135.98 1212.12 L2136.57 1212.12 L2137.15 1212.12 L2137.74 1212.12 L2138.33 1212.12 L2138.91 1212.12 L2139.5 1212.12 L2140.09 1212.12 L2140.67 1212.12 L2141.26 1212.12 L2141.84 1212.12 L2142.43 1212.12 L2143.02 1212.12 L2143.6 1212.12 L2144.19 1212.12 L2144.78 1212.12 L2145.36 1212.12 L2145.95 1212.12 L2146.54 1212.12 L2147.12 1212.12 L2147.71 1212.12 L2148.3 1212.12 L2148.88 1212.12 L2149.47 1212.12 L2150.05 1212.12 L2150.64 1212.12 L2151.23 1212.12 L2151.81 1212.12 L2152.4 1212.12 L2152.99 1212.12 L2153.57 1212.12 L2154.16 1212.12 L2154.75 1212.12 L2155.33 1212.12 L2155.92 1212.12 L2156.5 1212.12 L2157.09 1212.12 L2157.68 1212.12 L2158.26 1212.12 L2158.26 1211.85 L2157.68 1211.85 L2157.09 1211.85 L2156.5 1211.85 L2155.92 1211.85 L2155.33 1211.85 L2154.75 1211.85 L2154.16 1211.85 L2153.57 1211.85 L2152.99 1211.85 L2152.4 1211.85 L2151.81 1211.85 L2151.23 1211.85 L2150.64 1211.85 L2150.05 1211.85 L2149.47 1211.85 L2148.88 1211.85 L2148.3 1211.85 L2147.71 1211.85 L2147.12 1211.85 L2146.54 1211.85 L2145.95 1211.85 L2145.36 1211.85 L2144.78 1211.85 L2144.19 1211.85 L2143.6 1211.85 L2143.02 1211.85 L2142.43 1211.85 L2141.84 1211.85 L2141.26 1211.85 L2140.67 1211.85 L2140.09 1211.85 L2139.5 1211.85 L2138.91 1211.85 L2138.33 1211.85 L2137.74 1211.85 L2137.15 1211.85 L2136.57 1211.85 L2135.98 1211.85 L2135.39 1211.85 L2134.81 1211.85 L2134.22 1211.85 L2133.63 1211.85 L2133.05 1211.85 L2132.46 1211.85 L2131.88 1211.85 L2131.29 1211.85 L2130.7 1211.85 L2130.12 1211.85 L2129.53 1211.85 L2128.94 1211.85 L2128.36 1211.85 L2127.77 1211.85 L2127.18 1211.85 L2126.6 1211.85 L2126.01 1211.85 L2125.42 1211.85 L2124.84 1211.85 L2124.25 1211.85 L2123.67 1211.85 L2123.08 1211.85 L2122.49 1211.85 L2121.91 1211.85 L2121.32 1211.85 L2120.73 1211.85 L2120.15 1211.85 L2119.56 1211.85 L2118.97 1211.85 L2118.39 1211.85 L2117.8 1211.85 L2117.22 1211.85 L2116.63 1211.85 L2116.04 1211.85 L2115.46 1211.85 L2114.87 1211.85 L2114.28 1211.85 L2113.7 1211.85 L2113.11 1211.85 L2112.52 1211.85 L2111.94 1211.85 L2111.35 1211.85 L2110.76 1211.85 L2110.18 1211.85 L2109.59 1211.85 L2109.01 1211.85 L2108.42 1211.85 L2107.83 1211.85 L2107.25 1211.85 L2106.66 1211.85 L2106.07 1211.85 L2105.49 1211.85 L2104.9 1211.85 L2104.31 1211.85 L2103.73 1211.85 L2103.14 1211.85 L2102.55 1211.85 L2101.97 1211.85 L2101.38 1211.85 L2100.8 1211.85 L2100.21 1211.85 L2099.62 1211.85 L2099.04 1211.85 L2098.45 1211.85 L2097.86 1211.85 L2097.28 1211.85 L2096.69 1211.85 L2096.1 1211.85 L2095.52 1211.85 L2094.93 1211.85 L2094.35 1211.85 L2093.76 1211.85 L2093.17 1211.85 L2092.59 1211.85 L2092 1211.85 L2091.41 1211.85 L2090.83 1211.85 L2090.24 1211.85 L2089.65 1211.85 L2089.07 1211.85 L2088.48 1211.85 L2087.89 1211.85 L2087.31 1211.85 L2086.72 1211.85 L2086.14 1211.85 L2085.55 1211.85 L2084.96 1211.85 L2084.38 1211.85 L2083.79 1211.85 L2083.2 1211.85 L2082.62 1211.85 L2082.03 1211.85 L2081.44 1211.85 L2080.86 1211.85 L2080.27 1211.85 L2079.68 1211.85 L2079.1 1211.85 L2078.51 1211.85 L2077.93 1211.85 L2077.34 1211.85 L2076.75 1211.85 L2076.17 1211.85 L2075.58 1211.85 L2074.99 1211.85 L2074.41 1211.85 L2073.82 1211.85 L2073.23 1211.85 L2072.65 1211.85 L2072.06 1211.85 L2071.48 1211.85 L2070.89 1211.85 L2070.3 1211.85 L2069.72 1211.85 L2069.13 1211.85 L2068.54 1211.85 L2067.96 1211.85 L2067.37 1211.85 L2066.78 1211.85 L2066.2 1211.85 L2065.61 1211.85 L2065.02 1211.85 L2064.44 1211.85 L2063.85 1211.85 L2063.27 1211.85 L2062.68 1211.85 L2062.09 1211.85 L2061.51 1211.85 L2060.92 1211.85 L2060.33 1211.85 L2059.75 1211.85 L2059.16 1211.85 L2058.57 1211.85 L2057.99 1211.85 L2057.4 1211.85 L2056.81 1211.85 L2056.23 1211.85 L2055.64 1211.85 L2055.06 1211.85 L2054.47 1211.85 L2053.88 1211.85 L2053.3 1211.85 L2052.71 1211.85 L2052.12 1211.85 L2051.54 1211.85 L2050.95 1211.85 L2050.36 1211.85 L2049.78 1211.85 L2049.19 1211.85 L2048.6 1211.85 L2048.02 1211.85 L2047.43 1211.85 L2046.85 1211.85 L2046.26 1211.85 L2045.67 1211.85 L2045.09 1211.85 L2044.5 1211.85 L2043.91 1211.85 L2043.33 1211.85 L2042.74 1211.85 L2042.15 1211.85 L2041.57 1211.85 L2040.98 1211.85 L2040.4 1211.85 L2039.81 1211.85 L2039.22 1211.85 L2038.64 1211.85 L2038.05 1211.85 L2037.46 1211.85 L2036.88 1211.85 L2036.29 1211.85 L2035.7 1211.85 L2035.12 1211.85 L2034.53 1211.85 L2033.94 1211.85 L2033.36 1211.85 L2032.77 1211.85 L2032.19 1211.85 L2031.6 1211.85 L2031.01 1211.85 L2030.43 1211.85 L2029.84 1211.85 L2029.25 1211.85 L2028.67 1211.85 L2028.08 1211.85 L2027.49 1211.85 L2026.91 1211.85 L2026.32 1211.85 L2025.73 1211.85 L2025.15 1211.85 L2024.56 1211.85 L2023.98 1211.85 L2023.39 1211.85 L2022.8 1211.85 L2022.22 1211.85 L2021.63 1211.85 L2021.04 1211.85 L2020.46 1211.85 L2019.87 1211.85 L2019.28 1211.85 L2018.7 1211.85 L2018.11 1211.85 L2017.53 1211.85 L2016.94 1211.85 L2016.35 1211.85 L2015.77 1211.85 L2015.18 1211.85 L2014.59 1211.85 L2014.01 1211.85 L2013.42 1211.85 L2012.83 1211.85 L2012.25 1211.85 L2011.66 1211.85 L2011.07 1211.85 L2010.49 1211.85 L2009.9 1211.85 L2009.32 1211.85 L2008.73 1211.85 L2008.14 1211.85 L2007.56 1211.85 L2006.97 1211.85 L2006.38 1211.85 L2005.8 1211.85 L2005.21 1211.85 L2004.62 1211.85 L2004.04 1211.85 L2003.45 1211.85 L2002.86 1211.85 L2002.28 1211.85 L2001.69 1211.85 L2001.11 1211.85 L2000.52 1211.85 L1999.93 1211.85 L1999.35 1211.85 L1998.76 1211.85 L1998.17 1211.85 L1997.59 1211.85 L1997 1211.85 L1996.41 1211.85 L1995.83 1211.85 L1995.24 1211.85 L1994.65 1211.85 L1994.07 1211.85 L1993.48 1211.85 L1992.9 1211.85 L1992.31 1211.85 L1991.72 1211.85 L1991.14 1211.85 L1990.55 1211.85 L1989.96 1211.85 L1989.38 1211.85 L1988.79 1211.85 L1988.2 1211.85 L1987.62 1211.85 L1987.03 1211.85 L1986.45 1211.85 L1985.86 1211.85 L1985.27 1211.85 L1984.69 1211.85 L1984.1 1211.85 L1983.51 1211.85 L1982.93 1211.85 L1982.34 1211.85 L1981.75 1211.85 L1981.17 1211.85 L1980.58 1211.85 L1979.99 1211.85 L1979.41 1211.85 L1978.82 1211.85 L1978.24 1211.85 L1977.65 1211.85 L1977.06 1211.85 L1976.48 1211.85 L1975.89 1211.85 L1975.3 1211.85 L1974.72 1211.85 L1974.13 1211.85 L1973.54 1211.85 L1972.96 1211.85 L1972.37 1211.85 L1971.78 1211.85 L1971.2 1211.85 L1970.61 1211.85 L1970.03 1211.85 L1969.44 1211.85 L1968.85 1211.85 L1968.27 1211.85 L1967.68 1211.85 L1967.09 1211.85 L1966.51 1211.85 L1965.92 1211.85 L1965.33 1211.85 L1964.75 1211.85 L1964.16 1211.85 L1963.58 1211.85 L1962.99 1211.85 L1962.4 1211.85 L1961.82 1211.85 L1961.23 1211.85 L1960.64 1211.85 L1960.06 1211.85 L1959.47 1211.85 L1958.88 1211.85 L1958.3 1211.85 L1957.71 1211.85 L1957.12 1211.85 L1956.54 1211.85 L1955.95 1211.85 L1955.37 1211.85 L1954.78 1211.85 L1954.19 1211.85 L1953.61 1211.85 L1953.02 1211.85 L1952.43 1211.85 L1951.85 1211.85 L1951.26 1211.85 L1950.67 1211.85 L1950.09 1211.85 L1949.5 1211.85 L1948.91 1211.85 L1948.33 1211.85 L1947.74 1211.85 L1947.16 1211.85 L1946.57 1211.85 L1945.98 1211.85 L1945.4 1211.85 L1944.81 1211.85 L1944.22 1211.85 L1943.64 1211.85 L1943.05 1211.85 L1942.46 1211.85 L1941.88 1211.85 L1941.29 1211.85 L1940.71 1211.85 L1940.12 1211.85 L1939.53 1211.85 L1938.95 1211.85 L1938.36 1211.85 L1937.77 1211.85 L1937.19 1211.85 L1936.6 1211.85 L1936.01 1211.85 L1935.43 1211.85 L1934.84 1211.85 L1934.25 1211.85 L1933.67 1211.85 L1933.08 1211.85 L1932.5 1211.85 L1931.91 1211.85 L1931.32 1211.85 L1930.74 1211.85 L1930.15 1211.85 L1929.56 1211.85 L1928.98 1211.85 L1928.39 1211.85 L1927.8 1211.85 L1927.22 1211.85 L1926.63 1211.85 L1926.04 1211.85 L1925.46 1211.85 L1924.87 1211.85 L1924.29 1211.85 L1923.7 1211.85 L1923.11 1211.85 L1922.53 1211.85 L1921.94 1211.85 L1921.35 1211.85 L1920.77 1211.85 L1920.18 1211.85 L1919.59 1211.85 L1919.01 1211.85 L1918.42 1211.85 L1917.83 1211.85 L1917.25 1211.85 L1916.66 1211.85 L1916.08 1211.85 L1915.49 1211.85 L1914.9 1211.85 L1914.32 1211.85 L1913.73 1211.85 L1913.14 1211.85 L1912.56 1211.85 L1911.97 1211.85 L1911.38 1211.85 L1910.8 1211.85 L1910.21 1211.85 L1909.63 1211.85 L1909.04 1211.85 L1908.45 1211.85 L1907.87 1211.85 L1907.28 1211.85 L1906.69 1211.85 L1906.11 1211.85 L1905.52 1211.85 L1904.93 1211.85 L1904.35 1211.85 L1903.76 1211.85 L1903.17 1211.85 L1902.59 1211.85 L1902 1211.85 L1901.42 1211.85 L1900.83 1211.85 L1900.24 1211.85 L1899.66 1211.85 L1899.07 1211.85 L1898.48 1211.85 L1897.9 1211.85 L1897.31 1211.85 L1896.72 1211.85 L1896.14 1211.85 L1895.55 1211.85 L1894.96 1211.85 L1894.38 1211.85 L1893.79 1211.85 L1893.21 1211.85 L1892.62 1211.85 L1892.03 1211.85 L1891.45 1211.85 L1890.86 1211.85 L1890.27 1211.85 L1889.69 1211.85 L1889.1 1211.85 L1888.51 1211.85 L1887.93 1211.85 L1887.34 1211.85 L1886.76 1211.85 L1886.17 1211.85 L1885.58 1211.85 L1885 1211.85 L1884.41 1211.85 L1883.82 1211.85 L1883.24 1211.85 L1882.65 1211.85 L1882.06 1211.85 L1881.48 1211.85 L1880.89 1211.85 L1880.3 1211.85 L1879.72 1211.85 L1879.13 1211.85 L1878.55 1211.85 L1877.96 1211.85 L1877.37 1211.85 L1876.79 1211.85 L1876.2 1211.85 L1875.61 1211.85 L1875.03 1211.85 L1874.44 1211.85 L1873.85 1211.85 L1873.27 1211.85 L1872.68 1211.85 L1872.09 1211.85 L1871.51 1211.85 L1870.92 1211.85 L1870.34 1211.85 L1869.75 1211.85 L1869.16 1211.85 L1868.58 1211.85 L1867.99 1211.85 L1867.4 1211.85 L1866.82 1211.85 L1866.23 1211.85 L1865.64 1211.85 L1865.06 1211.85 L1864.47 1211.85 L1863.88 1211.85 L1863.3 1211.85 L1862.71 1211.85 L1862.13 1211.85 L1861.54 1211.85 L1860.95 1211.85 L1860.37 1211.85 L1859.78 1211.85 L1859.19 1211.85 L1858.61 1211.85 L1858.02 1211.85 L1857.43 1211.85 L1856.85 1211.85 L1856.26 1211.85 L1855.68 1211.85 L1855.09 1211.85 L1854.5 1211.85 L1853.92 1211.85 L1853.33 1211.85 L1852.74 1211.85 L1852.16 1211.85 L1851.57 1211.85 L1850.98 1211.85 L1850.4 1211.85 L1849.81 1211.85 L1849.22 1211.85 L1848.64 1211.85 L1848.05 1211.85 L1847.47 1211.85 L1846.88 1211.85 L1846.29 1211.85 L1845.71 1211.85 L1845.12 1211.85 L1844.53 1211.85 L1843.95 1211.85 L1843.36 1211.85 L1842.77 1211.85 L1842.19 1211.85 L1841.6 1211.85 L1841.01 1211.85 L1840.43 1211.85 L1839.84 1211.85 L1839.26 1211.85 L1838.67 1211.85 L1838.08 1211.85 L1837.5 1211.85 L1836.91 1211.85 L1836.32 1211.85 L1835.74 1211.85 L1835.15 1211.85 L1834.56 1211.85 L1833.98 1211.85 L1833.39 1211.85 L1832.81 1211.85 L1832.22 1211.85 L1831.63 1211.85 L1831.05 1211.85 L1830.46 1211.85 L1829.87 1211.85 L1829.29 1211.85 L1828.7 1211.85 L1828.11 1211.85 L1827.53 1211.85 L1826.94 1211.85 L1826.35 1211.85 L1825.77 1211.85 L1825.18 1211.85 L1824.6 1211.85 L1824.01 1211.85 L1823.42 1211.85 L1822.84 1211.85 L1822.25 1211.85 L1821.66 1211.85 L1821.08 1211.85 L1820.49 1211.85 L1819.9 1211.85 L1819.32 1211.85 L1818.73 1211.85 L1818.14 1211.85 L1817.56 1211.85 L1816.97 1211.85 L1816.39 1211.85 L1815.8 1211.85 L1815.21 1211.85 L1814.63 1211.85 L1814.04 1211.85 L1813.45 1211.85 L1812.87 1211.85 L1812.28 1211.85 L1811.69 1211.85 L1811.11 1211.85 L1810.52 1211.85 L1809.94 1211.85 L1809.35 1211.85 L1808.76 1211.85 L1808.18 1211.85 L1807.59 1211.85 L1807 1211.85 L1806.42 1211.85 L1805.83 1211.85 L1805.24 1211.85 L1804.66 1211.85 L1804.07 1211.85 L1803.48 1211.85 L1802.9 1211.85 L1802.31 1211.85 L1801.73 1211.85 L1801.14 1211.85 L1800.55 1211.85 L1799.97 1211.85 L1799.38 1211.85 L1798.79 1211.85 L1798.21 1211.85 L1797.62 1211.85 L1797.03 1211.85 L1796.45 1211.85 L1795.86 1211.85 L1795.27 1211.85 L1794.69 1211.85 L1794.1 1211.85 L1793.52 1211.85 L1792.93 1211.85 L1792.34 1211.85 L1791.76 1211.85 L1791.17 1211.85 L1790.58 1211.85 L1790 1211.85 L1789.41 1211.85 L1788.82 1211.85 L1788.24 1211.85 L1787.65 1211.85 L1787.06 1211.85 L1786.48 1211.85 L1785.89 1211.85 L1785.31 1211.85 L1784.72 1211.85 L1784.13 1211.85 L1783.55 1211.85 L1782.96 1211.85 L1782.37 1211.85 L1781.79 1211.85 L1781.2 1211.85 L1780.61 1211.85 L1780.03 1211.85 L1779.44 1211.85 L1778.86 1211.85 L1778.27 1211.85 L1777.68 1211.85 L1777.1 1211.85 L1776.51 1211.85 L1775.92 1211.85 L1775.34 1211.85 L1774.75 1211.85 L1774.16 1211.85 L1773.58 1211.85 L1772.99 1211.85 L1772.4 1211.85 L1771.82 1211.85 L1771.23 1211.85 L1770.65 1211.85 L1770.06 1211.85 L1769.47 1211.85 L1768.89 1211.85 L1768.3 1211.85 L1767.71 1211.85 L1767.13 1211.85 L1766.54 1211.85 L1765.95 1211.85 L1765.37 1211.85 L1764.78 1211.85 L1764.19 1211.85 L1763.61 1211.85 L1763.02 1211.85 L1762.44 1211.85 L1761.85 1211.85 L1761.26 1211.85 L1760.68 1211.85 L1760.09 1211.85 L1759.5 1211.85 L1758.92 1211.85 L1758.33 1211.85 L1757.74 1211.85 L1757.16 1211.85 L1756.57 1211.85 L1755.99 1211.85 L1755.4 1211.85 L1754.81 1211.85 L1754.23 1211.85 L1753.64 1211.85 L1753.05 1211.85 L1752.47 1211.85 L1751.88 1211.85 L1751.29 1211.85 L1750.71 1211.85 L1750.12 1211.85 L1749.53 1211.85 L1748.95 1211.85 L1748.36 1211.85 L1747.78 1211.85 L1747.19 1211.85 L1746.6 1211.85 L1746.02 1211.85 L1745.43 1211.85 L1744.84 1211.85 L1744.26 1211.85 L1743.67 1211.85 L1743.08 1211.85 L1742.5 1211.85 L1741.91 1211.85 L1741.32 1211.85 L1740.74 1211.85 L1740.15 1211.85 L1739.57 1211.85 L1738.98 1211.85 L1738.39 1211.85 L1737.81 1211.85 L1737.22 1211.85 L1736.63 1211.85 L1736.05 1211.85 L1735.46 1211.85 L1734.87 1211.85 L1734.29 1211.85 L1733.7 1211.85 L1733.11 1211.85 L1732.53 1211.85 L1731.94 1211.85 L1731.36 1211.85 L1730.77 1211.85 L1730.18 1211.85 L1729.6 1211.85 L1729.01 1211.85 L1728.42 1211.85 L1727.84 1211.85 L1727.25 1211.85 L1726.66 1211.85 L1726.08 1211.85 L1725.49 1211.85 L1724.91 1211.85 L1724.32 1211.85 L1723.73 1211.85 L1723.15 1211.85 L1722.56 1211.85 L1721.97 1211.85 L1721.39 1211.85 L1720.8 1211.85 L1720.21 1211.85 L1719.63 1211.85 L1719.04 1211.85 L1718.45 1211.85 L1717.87 1211.85 L1717.28 1211.85 L1716.7 1211.85 L1716.11 1211.85 L1715.52 1211.85 L1714.94 1211.85 L1714.35 1211.85 L1713.76 1211.85 L1713.18 1211.85 L1712.59 1211.85 L1712 1211.85 L1711.42 1211.85 L1710.83 1211.85 L1710.24 1211.85 L1709.66 1211.85 L1709.07 1211.85 L1708.49 1211.85 L1707.9 1211.85 L1707.31 1211.85 L1706.73 1211.85 L1706.14 1211.85 L1705.55 1211.85 L1704.97 1211.85 L1704.38 1211.85 L1703.79 1211.85 L1703.21 1211.85 L1702.62 1211.85 L1702.04 1211.85 L1701.45 1211.85 L1700.86 1211.85 L1700.28 1211.85 L1699.69 1211.85 L1699.1 1211.85 L1698.52 1211.85 L1697.93 1211.85 L1697.34 1211.85 L1696.76 1211.85 L1696.17 1211.85 L1695.58 1211.85 L1695 1211.85 L1694.41 1211.85 L1693.83 1211.85 L1693.24 1211.85 L1692.65 1211.85 L1692.07 1211.85 L1691.48 1211.85 L1690.89 1211.85 L1690.31 1211.85 L1689.72 1211.85 L1689.13 1211.85 L1688.55 1211.85 L1687.96 1211.85 L1687.37 1211.85 L1686.79 1211.85 L1686.2 1211.85 L1685.62 1211.85 L1685.03 1211.85 L1684.44 1211.85 L1683.86 1211.85 L1683.27 1211.85 L1682.68 1211.85 L1682.1 1211.85 L1681.51 1211.85 L1680.92 1211.85 L1680.34 1211.85 L1679.75 1211.85 L1679.17 1211.85 L1678.58 1211.85 L1677.99 1211.85 L1677.41 1211.85 L1676.82 1211.85 L1676.23 1211.85 L1675.65 1211.85 L1675.06 1211.85 L1674.47 1211.85 L1673.89 1211.85 L1673.3 1211.85 L1672.71 1211.85 L1672.13 1211.85 L1671.54 1211.85 L1670.96 1211.85 L1670.37 1211.85 L1669.78 1211.85 L1669.2 1211.85 L1668.61 1211.85 L1668.02 1211.85 L1667.44 1211.85 L1666.85 1211.85 L1666.26 1211.85 L1665.68 1211.85 L1665.09 1211.85 L1664.5 1211.85 L1663.92 1211.85 L1663.33 1211.85 L1662.75 1211.85 L1662.16 1211.85 L1661.57 1211.85 L1660.99 1211.85 L1660.4 1211.85 L1659.81 1211.85 L1659.23 1211.85 L1658.64 1211.85 L1658.05 1211.85 L1657.47 1211.85 L1656.88 1211.85 L1656.29 1211.85 L1655.71 1211.85 L1655.12 1211.85 L1654.54 1211.85 L1653.95 1211.85 L1653.36 1211.85 L1652.78 1211.85 L1652.19 1211.85 L1651.6 1211.85 L1651.02 1211.85 L1650.43 1211.85 L1649.84 1211.85 L1649.26 1211.85 L1648.67 1211.85 L1648.09 1211.85 L1647.5 1211.85 L1646.91 1211.85 L1646.33 1211.85 L1645.74 1211.85 L1645.15 1211.85 L1644.57 1211.85 L1643.98 1211.85 L1643.39 1211.85 L1642.81 1211.85 L1642.22 1211.85 L1641.63 1211.85 L1641.05 1211.85 L1640.46 1211.85 L1639.88 1211.85 L1639.29 1211.85 L1638.7 1211.85 L1638.12 1211.85 L1637.53 1211.85 L1636.94 1211.85 L1636.36 1211.85 L1635.77 1211.85 L1635.18 1211.85 L1634.6 1211.85 L1634.01 1211.85 L1633.42 1211.85 L1632.84 1211.85 L1632.25 1211.85 L1631.67 1211.85 L1631.08 1211.85 L1630.49 1211.85 L1629.91 1211.85 L1629.32 1211.85 L1628.73 1211.85 L1628.15 1211.85 L1627.56 1211.85 L1626.97 1211.85 L1626.39 1211.85 L1625.8 1211.85 L1625.22 1211.85 L1624.63 1211.85 L1624.04 1211.85 L1623.46 1211.85 L1622.87 1211.85 L1622.28 1211.85 L1621.7 1211.85 L1621.11 1211.85 L1620.52 1211.85 L1619.94 1211.85 L1619.35 1211.85 L1618.76 1211.85 L1618.18 1211.85 L1617.59 1211.85 L1617.01 1211.85 L1616.42 1211.85 L1615.83 1211.85 L1615.25 1211.85 L1614.66 1211.85 L1614.07 1211.85 L1613.49 1211.85 L1612.9 1211.85 L1612.31 1211.85 L1611.73 1211.85 L1611.14 1211.85 L1610.55 1211.85 L1609.97 1211.85 L1609.38 1211.85 L1608.8 1211.85 L1608.21 1211.85 L1607.62 1211.85 L1607.04 1211.85 L1606.45 1211.85 L1605.86 1211.85 L1605.28 1211.85 L1604.69 1211.85 L1604.1 1211.85 L1603.52 1211.85 L1602.93 1211.85 L1602.34 1211.85 L1601.76 1211.85 L1601.17 1211.85 L1600.59 1211.85 L1600 1211.85 L1599.41 1211.85 L1598.83 1211.85 L1598.24 1211.85 L1597.65 1211.85 L1597.07 1211.85 L1596.48 1211.85 L1595.89 1211.85 L1595.31 1211.85 L1594.72 1211.85 L1594.14 1211.85 L1593.55 1211.85 L1592.96 1211.85 L1592.38 1211.85 L1591.79 1211.85 L1591.2 1211.85 L1590.62 1211.85 L1590.03 1211.85 L1589.44 1211.85 L1588.86 1211.85 L1588.27 1211.85 L1587.68 1211.85 L1587.1 1211.85 L1586.51 1211.85 L1585.93 1211.85 L1585.34 1211.85 L1584.75 1211.85 L1584.17 1211.85 L1583.58 1211.85 L1582.99 1211.85 L1582.41 1211.85 L1581.82 1211.85 L1581.23 1211.85 L1580.65 1211.85 L1580.06 1211.85 L1579.47 1211.85 L1578.89 1211.85 L1578.3 1211.85 L1577.72 1211.85 L1577.13 1211.85 L1576.54 1211.85 L1575.96 1211.85 L1575.37 1211.85 L1574.78 1211.85 L1574.2 1211.85 L1573.61 1211.85 L1573.02 1211.85 L1572.44 1211.85 L1571.85 1211.85 L1571.27 1211.85 L1570.68 1211.85 L1570.09 1211.85 L1569.51 1211.85 L1568.92 1211.85 L1568.33 1211.85 L1567.75 1211.85 L1567.16 1211.85 L1566.57 1211.85 L1565.99 1211.85 L1565.4 1211.85 L1564.81 1211.85 L1564.23 1211.85 L1563.64 1211.85 L1563.06 1211.85 L1562.47 1211.85 L1561.88 1211.85 L1561.3 1211.85 L1560.71 1211.85 L1560.12 1211.85 L1559.54 1211.85 L1558.95 1211.85 L1558.36 1211.85 L1557.78 1211.85 L1557.19 1211.85 L1556.6 1211.85 L1556.02 1211.85 L1555.43 1211.85 L1554.85 1211.85 L1554.26 1211.85 L1553.67 1211.85 L1553.09 1211.85 L1552.5 1211.85 L1551.91 1211.85 L1551.33 1211.85 L1550.74 1211.85 L1550.15 1211.85 L1549.57 1211.85 L1548.98 1211.85 L1548.4 1211.85 L1547.81 1211.85 L1547.22 1211.85 L1546.64 1211.85 L1546.05 1211.85 L1545.46 1211.85 L1544.88 1211.85 L1544.29 1211.85 L1543.7 1211.85 L1543.12 1211.85 L1542.53 1211.85 L1541.94 1211.85 L1541.36 1211.85 L1540.77 1211.85 L1540.19 1211.85 L1539.6 1211.85 L1539.01 1211.85 L1538.43 1211.85 L1537.84 1211.85 L1537.25 1211.85 L1536.67 1211.85 L1536.08 1211.85 L1535.49 1211.85 L1534.91 1211.85 L1534.32 1211.85 L1533.73 1211.85 L1533.15 1211.85 L1532.56 1211.85 L1531.98 1211.85 L1531.39 1211.85 L1530.8 1211.85 L1530.22 1211.85 L1529.63 1211.85 L1529.04 1211.85 L1528.46 1211.85 L1527.87 1211.85 L1527.28 1211.85 L1526.7 1211.85 L1526.11 1211.85 L1525.52 1211.85 L1524.94 1211.85 L1524.35 1211.85 L1523.77 1211.85 L1523.18 1211.85 L1522.59 1211.85 L1522.01 1211.85 L1521.42 1211.85 L1520.83 1211.85 L1520.25 1211.85 L1519.66 1211.85 L1519.07 1211.85 L1518.49 1211.85 L1517.9 1211.85 L1517.32 1211.85 L1516.73 1211.85 L1516.14 1211.85 L1515.56 1211.85 L1514.97 1211.85 L1514.38 1211.85 L1513.8 1211.85 L1513.21 1211.85 L1512.62 1211.85 L1512.04 1211.85 L1511.45 1211.85 L1510.86 1211.85 L1510.28 1211.85 L1509.69 1211.85 L1509.11 1211.85 L1508.52 1211.85 L1507.93 1211.85 L1507.35 1211.85 L1506.76 1211.85 L1506.17 1211.85 L1505.59 1211.85 L1505 1211.85 L1504.41 1211.85 L1503.83 1211.85 L1503.24 1211.85 L1502.65 1211.85 L1502.07 1211.85 L1501.48 1211.85 L1500.9 1211.85 L1500.31 1211.85 L1499.72 1211.85 L1499.14 1211.85 L1498.55 1211.85 L1497.96 1211.85 L1497.38 1211.85 L1496.79 1211.85 L1496.2 1211.85 L1495.62 1211.85 L1495.03 1211.85 L1494.45 1211.85 L1493.86 1211.85 L1493.27 1211.85 L1492.69 1211.85 L1492.1 1211.85 L1491.51 1211.85 L1490.93 1211.85 L1490.34 1211.85 L1489.75 1211.85 L1489.17 1211.85 L1488.58 1211.85 L1487.99 1211.85 L1487.41 1211.85 L1486.82 1211.85 L1486.24 1211.85 L1485.65 1211.85 L1485.06 1211.85 L1484.48 1211.85 L1483.89 1211.85 L1483.3 1211.85 L1482.72 1211.85 L1482.13 1211.85 L1481.54 1211.85 L1480.96 1211.85 L1480.37 1211.85 L1479.78 1211.85 L1479.2 1211.85 L1478.61 1211.85 L1478.03 1211.85 L1477.44 1211.85 L1476.85 1211.85 L1476.27 1211.85 L1475.68 1211.85 L1475.09 1211.85 L1474.51 1211.85 L1473.92 1211.85 L1473.33 1211.85 L1472.75 1211.85 L1472.16 1211.85 L1471.57 1211.85 L1470.99 1211.85 L1470.4 1211.85 L1469.82 1211.85 L1469.23 1211.85 L1468.64 1211.85 L1468.06 1211.85 L1467.47 1211.85 L1466.88 1211.85 L1466.3 1211.85 L1465.71 1211.85 L1465.12 1211.85 L1464.54 1211.85 L1463.95 1211.85 L1463.37 1211.85 L1462.78 1211.85 L1462.19 1211.85 L1461.61 1211.85 L1461.02 1211.85 L1460.43 1211.85 L1459.85 1211.85 L1459.26 1211.85 L1458.67 1211.85 L1458.09 1211.85 L1457.5 1211.85 L1456.91 1211.85 L1456.33 1211.85 L1455.74 1211.85 L1455.16 1211.85 L1454.57 1211.85 L1453.98 1211.85 L1453.4 1211.85 L1452.81 1211.85 L1452.22 1211.85 L1451.64 1211.85 L1451.05 1211.85 L1450.46 1211.85 L1449.88 1211.85 L1449.29 1211.85 L1448.7 1211.85 L1448.12 1211.85 L1447.53 1211.85 L1446.95 1211.85 L1446.36 1211.85 L1445.77 1211.85 L1445.19 1211.85 L1444.6 1211.85 L1444.01 1211.85 L1443.43 1211.85 L1442.84 1211.85 L1442.25 1211.85 L1441.67 1211.85 L1441.08 1211.85 L1440.5 1211.85 L1439.91 1211.85 L1439.32 1211.85 L1438.74 1211.85 L1438.15 1211.85 L1437.56 1211.85 L1436.98 1211.85 L1436.39 1211.85 L1435.8 1211.85 L1435.22 1211.85 L1434.63 1211.85 L1434.04 1211.85 L1433.46 1211.85 L1432.87 1211.85 L1432.29 1211.85 L1431.7 1211.85 L1431.11 1211.85 L1430.53 1211.85 L1429.94 1211.85 L1429.35 1211.85 L1428.77 1211.85 L1428.18 1211.85 L1427.59 1211.85 L1427.01 1211.85 L1426.42 1211.85 L1425.83 1211.85 L1425.25 1211.85 L1424.66 1211.85 L1424.08 1211.85 L1423.49 1211.85 L1422.9 1211.85 L1422.32 1211.85 L1421.73 1211.85 L1421.14 1211.85 L1420.56 1211.85 L1419.97 1211.85 L1419.38 1211.85 L1418.8 1211.85 L1418.21 1211.85 L1417.63 1211.85 L1417.04 1211.85 L1416.45 1211.85 L1415.87 1211.85 L1415.28 1211.85 L1414.69 1211.85 L1414.11 1211.85 L1413.52 1211.85 L1412.93 1211.85 L1412.35 1211.85 L1411.76 1211.85 L1411.17 1211.85 L1410.59 1211.85 L1410 1211.85 L1409.42 1211.85 L1408.83 1211.85 L1408.24 1211.85 L1407.66 1211.85 L1407.07 1211.85 L1406.48 1211.85 L1405.9 1211.85 L1405.31 1211.85 L1404.72 1211.85 L1404.14 1211.85 L1403.55 1211.85 L1402.96 1211.85 L1402.38 1211.85 L1401.79 1211.85 L1401.21 1211.85 L1400.62 1211.85 L1400.03 1211.85 L1399.45 1211.85 L1398.86 1211.85 L1398.27 1211.85 L1397.69 1211.85 L1397.1 1211.85 L1396.51 1211.85 L1395.93 1211.85 L1395.34 1211.85 L1394.75 1211.85 L1394.17 1211.85 L1393.58 1211.85 L1393 1211.85 L1392.41 1211.85 L1391.82 1211.85 L1391.24 1211.85 L1390.65 1211.85 L1390.06 1211.85 L1389.48 1211.85 L1388.89 1211.85 L1388.3 1211.85 L1387.72 1211.85 L1387.13 1211.85 L1386.55 1211.85 L1385.96 1211.85 L1385.37 1211.85 L1384.79 1211.85 L1384.2 1211.85 L1383.61 1211.85 L1383.03 1211.85 L1382.44 1211.85 L1381.85 1211.85 L1381.27 1211.85 L1380.68 1211.85 L1380.09 1211.85 L1379.51 1211.85 L1378.92 1211.85 L1378.34 1211.85 L1377.75 1211.85 L1377.16 1211.85 L1376.58 1211.85 L1375.99 1211.85 L1375.4 1211.85 L1374.82 1211.85 L1374.23 1211.85 L1373.64 1211.85 L1373.06 1211.85 L1372.47 1211.85 L1371.88 1211.85 L1371.3 1211.85 L1370.71 1211.85 L1370.13 1211.85 L1369.54 1211.85 L1368.95 1211.85 L1368.37 1211.85 L1367.78 1211.85 L1367.19 1211.85 L1366.61 1211.85 L1366.02 1211.85 L1365.43 1211.85 L1364.85 1211.85 L1364.26 1211.85 L1363.68 1211.85 L1363.09 1211.85 L1362.5 1211.85 L1361.92 1211.85 L1361.33 1211.85 L1360.74 1211.85 L1360.16 1211.85 L1359.57 1211.85 L1358.98 1211.85 L1358.4 1211.85 L1357.81 1211.85 L1357.22 1211.85 L1356.64 1211.85 L1356.05 1211.85 L1355.47 1211.85 L1354.88 1211.85 L1354.29 1211.85 L1353.71 1211.85 L1353.12 1211.85 L1352.53 1211.85 L1351.95 1211.85 L1351.36 1211.85 L1350.77 1211.85 L1350.19 1211.85 L1349.6 1211.85 L1349.01 1211.85 L1348.43 1211.85 L1347.84 1211.85 L1347.26 1211.85 L1346.67 1211.85 L1346.08 1211.85 L1345.5 1211.85 L1344.91 1211.85 L1344.32 1211.85 L1343.74 1211.85 L1343.15 1211.85 L1342.56 1211.85 L1341.98 1211.85 L1341.39 1211.85 L1340.8 1211.85 L1340.22 1211.85 L1339.63 1211.85 L1339.05 1211.85 L1338.46 1211.85 L1337.87 1211.85 L1337.29 1211.85 L1336.7 1211.85 L1336.11 1211.85 L1335.53 1211.85 L1334.94 1211.85 L1334.35 1211.85 L1333.77 1211.85 L1333.18 1211.85 L1332.6 1211.85 L1332.01 1211.85 L1331.42 1211.85 L1330.84 1211.85 L1330.25 1211.85 L1329.66 1211.85 L1329.08 1211.85 L1328.49 1211.85 L1327.9 1211.85 L1327.32 1211.85 L1326.73 1211.85 L1326.14 1211.85 L1325.56 1211.85 L1324.97 1211.85 L1324.39 1211.85 L1323.8 1211.85 L1323.21 1211.85 L1322.63 1211.85 L1322.04 1211.85 L1321.45 1211.85 L1320.87 1211.85 L1320.28 1211.85 L1319.69 1211.85 L1319.11 1211.85 L1318.52 1211.85 L1317.93 1211.85 L1317.35 1211.85 L1316.76 1211.85 L1316.18 1211.85 L1315.59 1211.85 L1315 1211.85 L1314.42 1211.85 L1313.83 1211.85 L1313.24 1211.85 L1312.66 1211.85 L1312.07 1211.85 L1311.48 1211.85 L1310.9 1211.85 L1310.31 1211.85 L1309.73 1211.85 L1309.14 1211.85 L1308.55 1211.85 L1307.97 1211.85 L1307.38 1211.85 L1306.79 1211.85 L1306.21 1211.85 L1305.62 1211.85 L1305.03 1211.85 L1304.45 1211.85 L1303.86 1211.85 L1303.27 1211.85 L1302.69 1211.85 L1302.1 1211.85 L1301.52 1211.85 L1300.93 1211.85 L1300.34 1211.85 L1299.76 1211.85 L1299.17 1211.85 L1298.58 1211.85 L1298 1211.85 L1297.41 1211.85 L1296.82 1211.85 L1296.24 1211.85 L1295.65 1211.85 L1295.06 1211.85 L1294.48 1211.85 L1293.89 1211.85 L1293.31 1211.85 L1292.72 1211.85 L1292.13 1211.85 L1291.55 1211.85 L1290.96 1211.85 L1290.37 1211.85 L1289.79 1211.85 L1289.2 1211.85 L1288.61 1211.85 L1288.03 1211.85 L1287.44 1211.85 L1286.86 1211.85 L1286.27 1211.85 L1285.68 1211.85 L1285.1 1211.85 L1284.51 1211.85 L1283.92 1211.85 L1283.34 1211.85 L1282.75 1211.85 L1282.16 1211.85 L1281.58 1211.85 L1280.99 1211.85 L1280.4 1211.85 L1279.82 1211.85 L1279.23 1211.85 L1278.65 1211.85 L1278.06 1211.85 L1277.47 1211.85 L1276.89 1211.85 L1276.3 1211.85 L1275.71 1211.85 L1275.13 1211.85 L1274.54 1211.85 L1273.95 1211.85 L1273.37 1211.85 L1272.78 1211.85 L1272.19 1211.85 L1271.61 1211.85 L1271.02 1211.85 L1270.44 1211.85 L1269.85 1211.85 L1269.26 1211.85 L1268.68 1211.85 L1268.09 1211.85 L1267.5 1211.85 L1266.92 1211.85 L1266.33 1211.85 L1265.74 1211.85 L1265.16 1211.85 L1264.57 1211.85 L1263.98 1211.85 L1263.4 1211.85 L1262.81 1211.85 L1262.23 1211.85 L1261.64 1211.85 L1261.05 1211.85 L1260.47 1211.85 L1259.88 1211.85 L1259.29 1211.85 L1258.71 1211.85 L1258.12 1211.85 L1257.53 1211.85 L1256.95 1211.85 L1256.36 1211.85 L1255.78 1211.85 L1255.19 1211.85 L1254.6 1211.85 L1254.02 1211.85 L1253.43 1211.85 L1252.84 1211.85 L1252.26 1211.85 L1251.67 1211.85 L1251.08 1211.85 L1250.5 1211.85 L1249.91 1211.85 L1249.32 1211.85 L1248.74 1211.85 L1248.15 1211.85 L1247.57 1211.85 L1246.98 1211.85 L1246.39 1211.85 L1245.81 1211.85 L1245.22 1211.85 L1244.63 1211.85 L1244.05 1211.85 L1243.46 1211.85 L1242.87 1211.85 L1242.29 1211.85 L1241.7 1211.85 L1241.11 1211.85 L1240.53 1211.85 L1239.94 1211.85 L1239.36 1211.85 L1238.77 1211.85 L1238.18 1211.85 L1237.6 1211.85 L1237.01 1211.85 L1236.42 1211.85 L1235.84 1211.85 L1235.25 1211.85 L1234.66 1211.85 L1234.08 1211.85 L1233.49 1211.85 L1232.91 1211.85 L1232.32 1211.85 L1231.73 1211.85 L1231.15 1211.85 L1230.56 1211.85 L1229.97 1211.85 L1229.39 1211.85 L1228.8 1211.85 L1228.21 1211.85 L1227.63 1211.85 L1227.04 1211.85 L1226.45 1211.85 L1225.87 1211.85 L1225.28 1211.85 L1224.7 1211.85 L1224.11 1211.85 L1223.52 1211.85 L1222.94 1211.85 L1222.35 1211.85 L1221.76 1211.85 L1221.18 1211.85 L1220.59 1211.85 L1220 1211.85 L1219.42 1211.85 L1218.83 1211.85 L1218.24 1211.85 L1217.66 1211.85 L1217.07 1211.85 L1216.49 1211.85 L1215.9 1211.85 L1215.31 1211.85 L1214.73 1211.85 L1214.14 1211.85 L1213.55 1211.85 L1212.97 1211.85 L1212.38 1211.85 L1211.79 1211.85 L1211.21 1211.85 L1210.62 1211.85 L1210.03 1211.85 L1209.45 1211.85 L1208.86 1211.85 L1208.28 1211.85 L1207.69 1211.85 L1207.1 1211.85 L1206.52 1211.85 L1205.93 1211.85 L1205.34 1211.85 L1204.76 1211.85 L1204.17 1211.85 L1203.58 1211.85 L1203 1211.85 L1202.41 1211.85 L1201.83 1211.85 L1201.24 1211.85 L1200.65 1211.85 L1200.07 1211.85 L1199.48 1211.85 L1198.89 1211.85 L1198.31 1211.85 L1197.72 1211.85 L1197.13 1211.85 L1196.55 1211.85 L1195.96 1211.85 L1195.37 1211.85 L1194.79 1211.85 L1194.2 1211.85 L1193.62 1211.85 L1193.03 1211.85 L1192.44 1211.85 L1191.86 1211.85 L1191.27 1211.85 L1190.68 1211.85 L1190.1 1211.85 L1189.51 1211.85 L1188.92 1211.85 L1188.34 1211.85 L1187.75 1211.85 L1187.16 1211.85 L1186.58 1211.85 L1185.99 1211.85 L1185.41 1211.85 L1184.82 1211.85 L1184.23 1211.85 L1183.65 1211.85 L1183.06 1211.85 L1182.47 1211.85 L1181.89 1211.85 L1181.3 1211.85 L1180.71 1211.85 L1180.13 1211.85 L1179.54 1211.85 L1178.96 1211.85 L1178.37 1211.85 L1177.78 1211.85 L1177.2 1211.85 L1176.61 1211.85 L1176.02 1211.85 L1175.44 1211.85 L1174.85 1211.85 L1174.26 1211.85 L1173.68 1211.85 L1173.09 1211.85 L1172.5 1211.85 L1171.92 1211.85 L1171.33 1211.85 L1170.75 1211.85 L1170.16 1211.85 L1169.57 1211.85 L1168.99 1211.85 L1168.4 1211.85 L1167.81 1211.85 L1167.23 1211.85 L1166.64 1211.85 L1166.05 1211.85 L1165.47 1211.85 L1164.88 1211.85 L1164.29 1211.85 L1163.71 1211.85 L1163.12 1211.85 L1162.54 1211.85 L1161.95 1211.85 L1161.36 1211.85 L1160.78 1211.85 L1160.19 1211.85 L1159.6 1211.85 L1159.02 1211.85 L1158.43 1211.85 L1157.84 1211.85 L1157.26 1211.85 L1156.67 1211.85 L1156.09 1211.85 L1155.5 1211.85 L1154.91 1211.85 L1154.33 1211.85 L1153.74 1211.85 L1153.15 1211.85 L1152.57 1211.85 L1151.98 1211.85 L1151.39 1211.85 L1150.81 1211.85 L1150.22 1211.85 L1149.63 1211.85 L1149.05 1211.85 L1148.46 1211.85 L1147.88 1211.85 L1147.29 1211.85 L1146.7 1211.85 L1146.12 1211.85 L1145.53 1211.85 L1144.94 1211.85 L1144.36 1211.85 L1143.77 1211.85 L1143.18 1211.85 L1142.6 1211.85 L1142.01 1211.85 L1141.42 1211.85 L1140.84 1211.85 L1140.25 1211.85 L1139.67 1211.85 L1139.08 1211.85 L1138.49 1211.85 L1137.91 1211.85 L1137.32 1211.85 L1136.73 1211.85 L1136.15 1211.85 L1135.56 1211.85 L1134.97 1211.85 L1134.39 1211.85 L1133.8 1211.85 L1133.21 1211.85 L1132.63 1211.85 L1132.04 1211.85 L1131.46 1211.85 L1130.87 1211.85 L1130.28 1211.85 L1129.7 1211.85 L1129.11 1211.85 L1128.52 1211.85 L1127.94 1211.85 L1127.35 1211.85 L1126.76 1211.85 L1126.18 1211.85 L1125.59 1211.85 L1125.01 1211.85 L1124.42 1211.85 L1123.83 1211.85 L1123.25 1211.85 L1122.66 1211.85 L1122.07 1211.85 L1121.49 1211.85 L1120.9 1211.85 L1120.31 1211.85 L1119.73 1211.85 L1119.14 1211.85 L1118.55 1211.85 L1117.97 1211.85 L1117.38 1211.85 L1116.8 1211.85 L1116.21 1211.85 L1115.62 1211.85 L1115.04 1211.85 L1114.45 1211.85 L1113.86 1211.85 L1113.28 1211.85 L1112.69 1211.85 L1112.1 1211.85 L1111.52 1211.85 L1110.93 1211.85 L1110.34 1211.85 L1109.76 1211.85 L1109.17 1211.85 L1108.59 1211.85 L1108 1211.85 L1107.41 1211.85 L1106.83 1211.85 L1106.24 1211.85 L1105.65 1211.85 L1105.07 1211.85 L1104.48 1211.85 L1103.89 1211.85 L1103.31 1211.85 L1102.72 1211.85 L1102.14 1211.85 L1101.55 1211.85 L1100.96 1211.85 L1100.38 1211.85 L1099.79 1211.85 L1099.2 1211.85 L1098.62 1211.85 L1098.03 1211.85 L1097.44 1211.85 L1096.86 1211.85 L1096.27 1211.85 L1095.68 1211.85 L1095.1 1211.85 L1094.51 1211.85 L1093.93 1211.85 L1093.34 1211.85 L1092.75 1211.85 L1092.17 1211.85 L1091.58 1211.85 L1090.99 1211.85 L1090.41 1211.85 L1089.82 1211.85 L1089.23 1211.85 L1088.65 1211.85 L1088.06 1211.85 L1087.47 1211.85 L1086.89 1211.85 L1086.3 1211.85 L1085.72 1211.85 L1085.13 1211.85 L1084.54 1211.85 L1083.96 1211.85 L1083.37 1211.85 L1082.78 1211.85 L1082.2 1211.85 L1081.61 1211.85 L1081.02 1211.85 L1080.44 1211.85 L1079.85 1211.85 L1079.26 1211.85 L1078.68 1211.85 L1078.09 1211.85 L1077.51 1211.85 L1076.92 1211.85 L1076.33 1211.85 L1075.75 1211.85 L1075.16 1211.85 L1074.57 1211.85 L1073.99 1211.85 L1073.4 1211.85 L1072.81 1211.85 L1072.23 1211.85 L1071.64 1211.85 L1071.06 1211.85 L1070.47 1211.85 L1069.88 1211.85 L1069.3 1211.85 L1068.71 1211.85 L1068.12 1211.85 L1067.54 1211.85 L1066.95 1211.85 L1066.36 1211.85 L1065.78 1211.85 L1065.19 1211.85 L1064.6 1211.85 L1064.02 1211.85 L1063.43 1211.85 L1062.85 1211.85 L1062.26 1211.85 L1061.67 1211.85 L1061.09 1211.85 L1060.5 1211.85 L1059.91 1211.85 L1059.33 1211.85 L1058.74 1211.85 L1058.15 1211.85 L1057.57 1211.85 L1056.98 1211.85 L1056.39 1211.85 L1055.81 1211.85 L1055.22 1211.85 L1054.64 1211.85 L1054.05 1211.85 L1053.46 1211.85 L1052.88 1211.85 L1052.29 1211.85 L1051.7 1211.85 L1051.12 1211.85 L1050.53 1211.85 L1049.94 1211.85 L1049.36 1211.85 L1048.77 1211.85 L1048.19 1211.85 L1047.6 1211.85 L1047.01 1211.85 L1046.43 1211.85 L1045.84 1211.85 L1045.25 1211.85 L1044.67 1211.85 L1044.08 1211.85 L1043.49 1211.85 L1042.91 1211.85 L1042.32 1211.85 L1041.73 1211.85 L1041.15 1211.85 L1040.56 1211.85 L1039.98 1211.85 L1039.39 1211.85 L1038.8 1211.85 L1038.22 1211.85 L1037.63 1211.85 L1037.04 1211.85 L1036.46 1211.85 L1035.87 1211.85 L1035.28 1211.85 L1034.7 1211.85 L1034.11 1211.85 L1033.52 1211.85 L1032.94 1211.85 L1032.35 1211.85 L1031.77 1211.85 L1031.18 1211.85 L1030.59 1211.85 L1030.01 1211.85 L1029.42 1211.85 L1028.83 1211.85 L1028.25 1211.85 L1027.66 1211.85 L1027.07 1211.85 L1026.49 1211.85 L1025.9 1211.85 L1025.32 1211.85 L1024.73 1211.85 L1024.14 1211.85 L1023.56 1211.85 L1022.97 1211.85 L1022.38 1211.85 L1021.8 1211.85 L1021.21 1211.85 L1020.62 1211.85 L1020.04 1211.85 L1019.45 1211.85 L1018.86 1211.85 L1018.28 1211.85 L1017.69 1211.85 L1017.11 1211.85 L1016.52 1211.85 L1015.93 1211.85 L1015.35 1211.85 L1014.76 1211.85 L1014.17 1211.85 L1013.59 1211.85 L1013 1211.85 L1012.41 1211.85 L1011.83 1211.85 L1011.24 1211.85 L1010.65 1211.85 L1010.07 1211.85 L1009.48 1211.85 L1008.9 1211.85 L1008.31 1211.85 L1007.72 1211.85 L1007.14 1211.85 L1006.55 1211.85 L1005.96 1211.85 L1005.38 1211.85 L1004.79 1211.85 L1004.2 1211.85 L1003.62 1211.85 L1003.03 1211.85 L1002.44 1211.85 L1001.86 1211.85 L1001.27 1211.85 L1000.69 1211.85 L1000.1 1211.85 L999.513 1211.85 L998.926 1211.85 L998.34 1211.85 L997.754 1211.85 L997.167 1211.85 L996.581 1211.85 L995.994 1211.85 L995.408 1211.85 L994.822 1211.85 L994.235 1211.85 L993.649 1211.85 L993.062 1211.85 L992.476 1211.85 L991.889 1211.85 L991.303 1211.85 L990.717 1211.85 L990.13 1211.85 L989.544 1211.85 L988.957 1211.85 L988.371 1211.85 L987.785 1211.85 L987.198 1211.85 L986.612 1211.85 L986.025 1211.85  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1211.99 986.612,1211.99 987.198,1211.99 987.785,1211.99 988.371,1211.99 988.957,1211.99 989.544,1211.99 990.13,1211.99 990.717,1211.99 991.303,1211.99 991.889,1211.99 992.476,1211.99 993.062,1211.99 993.649,1211.99 994.235,1211.99 994.822,1211.99 995.408,1211.99 995.994,1211.99 996.581,1211.99 997.167,1211.99 997.754,1211.99 998.34,1211.99 998.926,1211.99 999.513,1211.99 1000.1,1211.99 1000.69,1211.99 1001.27,1211.99 1001.86,1211.99 1002.44,1211.99 1003.03,1211.99 1003.62,1211.99 1004.2,1211.99 1004.79,1211.99 1005.38,1211.99 1005.96,1211.99 1006.55,1211.99 1007.14,1211.99 1007.72,1211.99 1008.31,1211.99 1008.9,1211.99 1009.48,1211.99 1010.07,1211.99 1010.65,1211.99 1011.24,1211.99 1011.83,1211.99 1012.41,1211.99 1013,1211.99 1013.59,1211.99 1014.17,1211.99 1014.76,1211.99 1015.35,1211.99 1015.93,1211.99 1016.52,1211.99 1017.11,1211.99 1017.69,1211.99 1018.28,1211.99 1018.86,1211.99 1019.45,1211.99 1020.04,1211.99 1020.62,1211.99 1021.21,1211.99 1021.8,1211.99 1022.38,1211.99 1022.97,1211.99 1023.56,1211.99 1024.14,1211.99 1024.73,1211.99 1025.32,1211.99 1025.9,1211.99 1026.49,1211.99 1027.07,1211.99 1027.66,1211.99 1028.25,1211.99 1028.83,1211.99 1029.42,1211.99 1030.01,1211.99 1030.59,1211.99 1031.18,1211.99 1031.77,1211.99 1032.35,1211.99 1032.94,1211.99 1033.52,1211.99 1034.11,1211.99 1034.7,1211.99 1035.28,1211.99 1035.87,1211.99 1036.46,1211.99 1037.04,1211.99 1037.63,1211.99 1038.22,1211.99 1038.8,1211.99 1039.39,1211.99 1039.98,1211.99 1040.56,1211.99 1041.15,1211.99 1041.73,1211.99 1042.32,1211.99 1042.91,1211.99 1043.49,1211.99 1044.08,1211.99 1044.67,1211.99 1045.25,1211.99 1045.84,1211.99 1046.43,1211.99 1047.01,1211.99 1047.6,1211.99 1048.19,1211.99 1048.77,1211.99 1049.36,1211.99 1049.94,1211.99 1050.53,1211.99 1051.12,1211.99 1051.7,1211.99 1052.29,1211.99 1052.88,1211.99 1053.46,1211.99 1054.05,1211.99 1054.64,1211.99 1055.22,1211.99 1055.81,1211.99 1056.39,1211.99 1056.98,1211.99 1057.57,1211.99 1058.15,1211.99 1058.74,1211.99 1059.33,1211.99 1059.91,1211.99 1060.5,1211.99 1061.09,1211.99 1061.67,1211.99 1062.26,1211.99 1062.85,1211.99 1063.43,1211.99 1064.02,1211.99 1064.6,1211.99 1065.19,1211.99 1065.78,1211.99 1066.36,1211.99 1066.95,1211.99 1067.54,1211.99 1068.12,1211.99 1068.71,1211.99 1069.3,1211.99 1069.88,1211.99 1070.47,1211.99 1071.06,1211.99 1071.64,1211.99 1072.23,1211.99 1072.81,1211.99 1073.4,1211.99 1073.99,1211.99 1074.57,1211.99 1075.16,1211.99 1075.75,1211.99 1076.33,1211.99 1076.92,1211.99 1077.51,1211.99 1078.09,1211.99 1078.68,1211.99 1079.26,1211.99 1079.85,1211.99 1080.44,1211.99 1081.02,1211.99 1081.61,1211.99 1082.2,1211.99 1082.78,1211.99 1083.37,1211.99 1083.96,1211.99 1084.54,1211.99 1085.13,1211.99 1085.72,1211.99 1086.3,1211.99 1086.89,1211.99 1087.47,1211.99 1088.06,1211.99 1088.65,1211.99 1089.23,1211.99 1089.82,1211.99 1090.41,1211.99 1090.99,1211.99 1091.58,1211.99 1092.17,1211.99 1092.75,1211.99 1093.34,1211.99 1093.93,1211.99 1094.51,1211.99 1095.1,1211.99 1095.68,1211.99 1096.27,1211.99 1096.86,1211.99 1097.44,1211.99 1098.03,1211.99 1098.62,1211.99 1099.2,1211.99 1099.79,1211.99 1100.38,1211.99 1100.96,1211.99 1101.55,1211.99 1102.14,1211.99 1102.72,1211.99 1103.31,1211.99 1103.89,1211.99 1104.48,1211.99 1105.07,1211.99 1105.65,1211.99 1106.24,1211.99 1106.83,1211.99 1107.41,1211.99 1108,1211.99 1108.59,1211.99 1109.17,1211.99 1109.76,1211.99 1110.34,1211.99 1110.93,1211.99 1111.52,1211.99 1112.1,1211.99 1112.69,1211.99 1113.28,1211.99 1113.86,1211.99 1114.45,1211.99 1115.04,1211.99 1115.62,1211.99 1116.21,1211.99 1116.8,1211.99 1117.38,1211.99 1117.97,1211.99 1118.55,1211.99 1119.14,1211.99 1119.73,1211.99 1120.31,1211.99 1120.9,1211.99 1121.49,1211.99 1122.07,1211.99 1122.66,1211.99 1123.25,1211.99 1123.83,1211.99 1124.42,1211.99 1125.01,1211.99 1125.59,1211.99 1126.18,1211.99 1126.76,1211.99 1127.35,1211.99 1127.94,1211.99 1128.52,1211.99 1129.11,1211.99 1129.7,1211.99 1130.28,1211.99 1130.87,1211.99 1131.46,1211.99 1132.04,1211.99 1132.63,1211.99 1133.21,1211.99 1133.8,1211.99 1134.39,1211.99 1134.97,1211.99 1135.56,1211.99 1136.15,1211.99 1136.73,1211.99 1137.32,1211.99 1137.91,1211.99 1138.49,1211.99 1139.08,1211.99 1139.67,1211.99 1140.25,1211.99 1140.84,1211.99 1141.42,1211.99 1142.01,1211.99 1142.6,1211.99 1143.18,1211.99 1143.77,1211.99 1144.36,1211.99 1144.94,1211.99 1145.53,1211.99 1146.12,1211.99 1146.7,1211.99 1147.29,1211.99 1147.88,1211.99 1148.46,1211.99 1149.05,1211.99 1149.63,1211.99 1150.22,1211.99 1150.81,1211.99 1151.39,1211.99 1151.98,1211.99 1152.57,1211.99 1153.15,1211.99 1153.74,1211.99 1154.33,1211.99 1154.91,1211.99 1155.5,1211.99 1156.09,1211.99 1156.67,1211.99 1157.26,1211.99 1157.84,1211.99 1158.43,1211.99 1159.02,1211.99 1159.6,1211.99 1160.19,1211.99 1160.78,1211.99 1161.36,1211.99 1161.95,1211.99 1162.54,1211.99 1163.12,1211.99 1163.71,1211.99 1164.29,1211.99 1164.88,1211.99 1165.47,1211.99 1166.05,1211.99 1166.64,1211.99 1167.23,1211.99 1167.81,1211.99 1168.4,1211.99 1168.99,1211.99 1169.57,1211.99 1170.16,1211.99 1170.75,1211.99 1171.33,1211.99 1171.92,1211.99 1172.5,1211.99 1173.09,1211.99 1173.68,1211.99 1174.26,1211.99 1174.85,1211.99 1175.44,1211.99 1176.02,1211.99 1176.61,1211.99 1177.2,1211.99 1177.78,1211.99 1178.37,1211.99 1178.96,1211.99 1179.54,1211.99 1180.13,1211.99 1180.71,1211.99 1181.3,1211.99 1181.89,1211.99 1182.47,1211.99 1183.06,1211.99 1183.65,1211.99 1184.23,1211.99 1184.82,1211.99 1185.41,1211.99 1185.99,1211.99 1186.58,1211.99 1187.16,1211.99 1187.75,1211.99 1188.34,1211.99 1188.92,1211.99 1189.51,1211.99 1190.1,1211.99 1190.68,1211.99 1191.27,1211.99 1191.86,1211.99 1192.44,1211.99 1193.03,1211.99 1193.62,1211.99 1194.2,1211.99 1194.79,1211.99 1195.37,1211.99 1195.96,1211.99 1196.55,1211.99 1197.13,1211.99 1197.72,1211.99 1198.31,1211.99 1198.89,1211.99 1199.48,1211.99 1200.07,1211.99 1200.65,1211.99 1201.24,1211.99 1201.83,1211.99 1202.41,1211.99 1203,1211.99 1203.58,1211.99 1204.17,1211.99 1204.76,1211.99 1205.34,1211.99 1205.93,1211.99 1206.52,1211.99 1207.1,1211.99 1207.69,1211.99 1208.28,1211.99 1208.86,1211.99 1209.45,1211.99 1210.03,1211.99 1210.62,1211.99 1211.21,1211.99 1211.79,1211.99 1212.38,1211.99 1212.97,1211.99 1213.55,1211.99 1214.14,1211.99 1214.73,1211.99 1215.31,1211.99 1215.9,1211.99 1216.49,1211.99 1217.07,1211.99 1217.66,1211.99 1218.24,1211.99 1218.83,1211.99 1219.42,1211.99 1220,1211.99 1220.59,1211.99 1221.18,1211.99 1221.76,1211.99 1222.35,1211.99 1222.94,1211.99 1223.52,1211.99 1224.11,1211.99 1224.7,1211.99 1225.28,1211.99 1225.87,1211.99 1226.45,1211.99 1227.04,1211.99 1227.63,1211.99 1228.21,1211.99 1228.8,1211.99 1229.39,1211.99 1229.97,1211.99 1230.56,1211.99 1231.15,1211.99 1231.73,1211.99 1232.32,1211.99 1232.91,1211.99 1233.49,1211.99 1234.08,1211.99 1234.66,1211.99 1235.25,1211.99 1235.84,1211.99 1236.42,1211.99 1237.01,1211.99 1237.6,1211.99 1238.18,1211.99 1238.77,1211.99 1239.36,1211.99 1239.94,1211.99 1240.53,1211.99 1241.11,1211.99 1241.7,1211.99 1242.29,1211.99 1242.87,1211.99 1243.46,1211.99 1244.05,1211.99 1244.63,1211.99 1245.22,1211.99 1245.81,1211.99 1246.39,1211.99 1246.98,1211.99 1247.57,1211.99 1248.15,1211.99 1248.74,1211.99 1249.32,1211.99 1249.91,1211.99 1250.5,1211.99 1251.08,1211.99 1251.67,1211.99 1252.26,1211.99 1252.84,1211.99 1253.43,1211.99 1254.02,1211.99 1254.6,1211.99 1255.19,1211.99 1255.78,1211.99 1256.36,1211.99 1256.95,1211.99 1257.53,1211.99 1258.12,1211.99 1258.71,1211.99 1259.29,1211.99 1259.88,1211.99 1260.47,1211.99 1261.05,1211.99 1261.64,1211.99 1262.23,1211.99 1262.81,1211.99 1263.4,1211.99 1263.98,1211.99 1264.57,1211.99 1265.16,1211.99 1265.74,1211.99 1266.33,1211.99 1266.92,1211.99 1267.5,1211.99 1268.09,1211.99 1268.68,1211.99 1269.26,1211.99 1269.85,1211.99 1270.44,1211.99 1271.02,1211.99 1271.61,1211.99 1272.19,1211.99 1272.78,1211.99 1273.37,1211.99 1273.95,1211.99 1274.54,1211.99 1275.13,1211.99 1275.71,1211.99 1276.3,1211.99 1276.89,1211.99 1277.47,1211.99 1278.06,1211.99 1278.65,1211.99 1279.23,1211.99 1279.82,1211.99 1280.4,1211.99 1280.99,1211.99 1281.58,1211.99 1282.16,1211.99 1282.75,1211.99 1283.34,1211.99 1283.92,1211.99 1284.51,1211.99 1285.1,1211.99 1285.68,1211.99 1286.27,1211.99 1286.86,1211.99 1287.44,1211.99 1288.03,1211.99 1288.61,1211.99 1289.2,1211.99 1289.79,1211.99 1290.37,1211.99 1290.96,1211.99 1291.55,1211.99 1292.13,1211.99 1292.72,1211.99 1293.31,1211.99 1293.89,1211.99 1294.48,1211.99 1295.06,1211.99 1295.65,1211.99 1296.24,1211.99 1296.82,1211.99 1297.41,1211.99 1298,1211.99 1298.58,1211.99 1299.17,1211.99 1299.76,1211.99 1300.34,1211.99 1300.93,1211.99 1301.52,1211.99 1302.1,1211.99 1302.69,1211.99 1303.27,1211.99 1303.86,1211.99 1304.45,1211.99 1305.03,1211.99 1305.62,1211.99 1306.21,1211.99 1306.79,1211.99 1307.38,1211.99 1307.97,1211.99 1308.55,1211.99 1309.14,1211.99 1309.73,1211.99 1310.31,1211.99 1310.9,1211.99 1311.48,1211.99 1312.07,1211.99 1312.66,1211.99 1313.24,1211.99 1313.83,1211.99 1314.42,1211.99 1315,1211.99 1315.59,1211.99 1316.18,1211.99 1316.76,1211.99 1317.35,1211.99 1317.93,1211.99 1318.52,1211.99 1319.11,1211.99 1319.69,1211.99 1320.28,1211.99 1320.87,1211.99 1321.45,1211.99 1322.04,1211.99 1322.63,1211.99 1323.21,1211.99 1323.8,1211.99 1324.39,1211.99 1324.97,1211.99 1325.56,1211.99 1326.14,1211.99 1326.73,1211.99 1327.32,1211.99 1327.9,1211.99 1328.49,1211.99 1329.08,1211.99 1329.66,1211.99 1330.25,1211.99 1330.84,1211.99 1331.42,1211.99 1332.01,1211.99 1332.6,1211.99 1333.18,1211.99 1333.77,1211.99 1334.35,1211.99 1334.94,1211.99 1335.53,1211.99 1336.11,1211.99 1336.7,1211.99 1337.29,1211.99 1337.87,1211.99 1338.46,1211.99 1339.05,1211.99 1339.63,1211.99 1340.22,1211.99 1340.8,1211.99 1341.39,1211.99 1341.98,1211.99 1342.56,1211.99 1343.15,1211.99 1343.74,1211.99 1344.32,1211.99 1344.91,1211.99 1345.5,1211.99 1346.08,1211.99 1346.67,1211.99 1347.26,1211.99 1347.84,1211.99 1348.43,1211.99 1349.01,1211.99 1349.6,1211.99 1350.19,1211.99 1350.77,1211.99 1351.36,1211.99 1351.95,1211.99 1352.53,1211.99 1353.12,1211.99 1353.71,1211.99 1354.29,1211.99 1354.88,1211.99 1355.47,1211.99 1356.05,1211.99 1356.64,1211.99 1357.22,1211.99 1357.81,1211.99 1358.4,1211.99 1358.98,1211.99 1359.57,1211.99 1360.16,1211.99 1360.74,1211.99 1361.33,1211.99 1361.92,1211.99 1362.5,1211.99 1363.09,1211.99 1363.68,1211.99 1364.26,1211.99 1364.85,1211.99 1365.43,1211.99 1366.02,1211.99 1366.61,1211.99 1367.19,1211.99 1367.78,1211.99 1368.37,1211.99 1368.95,1211.99 1369.54,1211.99 1370.13,1211.99 1370.71,1211.99 1371.3,1211.99 1371.88,1211.99 1372.47,1211.99 1373.06,1211.99 1373.64,1211.99 1374.23,1211.99 1374.82,1211.99 1375.4,1211.99 1375.99,1211.99 1376.58,1211.99 1377.16,1211.99 1377.75,1211.99 1378.34,1211.99 1378.92,1211.99 1379.51,1211.99 1380.09,1211.99 1380.68,1211.99 1381.27,1211.99 1381.85,1211.99 1382.44,1211.99 1383.03,1211.99 1383.61,1211.99 1384.2,1211.99 1384.79,1211.99 1385.37,1211.99 1385.96,1211.99 1386.55,1211.99 1387.13,1211.99 1387.72,1211.99 1388.3,1211.99 1388.89,1211.99 1389.48,1211.99 1390.06,1211.99 1390.65,1211.99 1391.24,1211.99 1391.82,1211.99 1392.41,1211.99 1393,1211.99 1393.58,1211.99 1394.17,1211.99 1394.75,1211.99 1395.34,1211.99 1395.93,1211.99 1396.51,1211.99 1397.1,1211.99 1397.69,1211.99 1398.27,1211.99 1398.86,1211.99 1399.45,1211.99 1400.03,1211.99 1400.62,1211.99 1401.21,1211.99 1401.79,1211.99 1402.38,1211.99 1402.96,1211.99 1403.55,1211.99 1404.14,1211.99 1404.72,1211.99 1405.31,1211.99 1405.9,1211.99 1406.48,1211.99 1407.07,1211.99 1407.66,1211.99 1408.24,1211.99 1408.83,1211.99 1409.42,1211.99 1410,1211.99 1410.59,1211.99 1411.17,1211.99 1411.76,1211.99 1412.35,1211.99 1412.93,1211.99 1413.52,1211.99 1414.11,1211.99 1414.69,1211.99 1415.28,1211.99 1415.87,1211.99 1416.45,1211.99 1417.04,1211.99 1417.63,1211.99 1418.21,1211.99 1418.8,1211.99 1419.38,1211.99 1419.97,1211.99 1420.56,1211.99 1421.14,1211.99 1421.73,1211.99 1422.32,1211.99 1422.9,1211.99 1423.49,1211.99 1424.08,1211.99 1424.66,1211.99 1425.25,1211.99 1425.83,1211.99 1426.42,1211.99 1427.01,1211.99 1427.59,1211.99 1428.18,1211.99 1428.77,1211.99 1429.35,1211.99 1429.94,1211.99 1430.53,1211.99 1431.11,1211.99 1431.7,1211.99 1432.29,1211.99 1432.87,1211.99 1433.46,1211.99 1434.04,1211.99 1434.63,1211.99 1435.22,1211.99 1435.8,1211.99 1436.39,1211.99 1436.98,1211.99 1437.56,1211.99 1438.15,1211.99 1438.74,1211.99 1439.32,1211.99 1439.91,1211.99 1440.5,1211.99 1441.08,1211.99 1441.67,1211.99 1442.25,1211.99 1442.84,1211.99 1443.43,1211.99 1444.01,1211.99 1444.6,1211.99 1445.19,1211.99 1445.77,1211.99 1446.36,1211.99 1446.95,1211.99 1447.53,1211.99 1448.12,1211.99 1448.7,1211.99 1449.29,1211.99 1449.88,1211.99 1450.46,1211.99 1451.05,1211.99 1451.64,1211.99 1452.22,1211.99 1452.81,1211.99 1453.4,1211.99 1453.98,1211.99 1454.57,1211.99 1455.16,1211.99 1455.74,1211.99 1456.33,1211.99 1456.91,1211.99 1457.5,1211.99 1458.09,1211.99 1458.67,1211.99 1459.26,1211.99 1459.85,1211.99 1460.43,1211.99 1461.02,1211.99 1461.61,1211.99 1462.19,1211.99 1462.78,1211.99 1463.37,1211.99 1463.95,1211.99 1464.54,1211.99 1465.12,1211.99 1465.71,1211.99 1466.3,1211.99 1466.88,1211.99 1467.47,1211.99 1468.06,1211.99 1468.64,1211.99 1469.23,1211.99 1469.82,1211.99 1470.4,1211.99 1470.99,1211.99 1471.57,1211.99 1472.16,1211.99 1472.75,1211.99 1473.33,1211.99 1473.92,1211.99 1474.51,1211.99 1475.09,1211.99 1475.68,1211.99 1476.27,1211.99 1476.85,1211.99 1477.44,1211.99 1478.03,1211.99 1478.61,1211.99 1479.2,1211.99 1479.78,1211.99 1480.37,1211.99 1480.96,1211.99 1481.54,1211.99 1482.13,1211.99 1482.72,1211.99 1483.3,1211.99 1483.89,1211.99 1484.48,1211.99 1485.06,1211.99 1485.65,1211.99 1486.24,1211.99 1486.82,1211.99 1487.41,1211.99 1487.99,1211.99 1488.58,1211.99 1489.17,1211.99 1489.75,1211.99 1490.34,1211.99 1490.93,1211.99 1491.51,1211.99 1492.1,1211.99 1492.69,1211.99 1493.27,1211.99 1493.86,1211.99 1494.45,1211.99 1495.03,1211.99 1495.62,1211.99 1496.2,1211.99 1496.79,1211.99 1497.38,1211.99 1497.96,1211.99 1498.55,1211.99 1499.14,1211.99 1499.72,1211.99 1500.31,1211.99 1500.9,1211.99 1501.48,1211.99 1502.07,1211.99 1502.65,1211.99 1503.24,1211.99 1503.83,1211.99 1504.41,1211.99 1505,1211.99 1505.59,1211.99 1506.17,1211.99 1506.76,1211.99 1507.35,1211.99 1507.93,1211.99 1508.52,1211.99 1509.11,1211.99 1509.69,1211.99 1510.28,1211.99 1510.86,1211.99 1511.45,1211.99 1512.04,1211.99 1512.62,1211.99 1513.21,1211.99 1513.8,1211.99 1514.38,1211.99 1514.97,1211.99 1515.56,1211.99 1516.14,1211.99 1516.73,1211.99 1517.32,1211.99 1517.9,1211.99 1518.49,1211.99 1519.07,1211.99 1519.66,1211.99 1520.25,1211.99 1520.83,1211.99 1521.42,1211.99 1522.01,1211.99 1522.59,1211.99 1523.18,1211.99 1523.77,1211.99 1524.35,1211.99 1524.94,1211.99 1525.52,1211.99 1526.11,1211.99 1526.7,1211.99 1527.28,1211.99 1527.87,1211.99 1528.46,1211.99 1529.04,1211.99 1529.63,1211.99 1530.22,1211.99 1530.8,1211.99 1531.39,1211.99 1531.98,1211.99 1532.56,1211.99 1533.15,1211.99 1533.73,1211.99 1534.32,1211.99 1534.91,1211.99 1535.49,1211.99 1536.08,1211.99 1536.67,1211.99 1537.25,1211.99 1537.84,1211.99 1538.43,1211.99 1539.01,1211.99 1539.6,1211.99 1540.19,1211.99 1540.77,1211.99 1541.36,1211.99 1541.94,1211.99 1542.53,1211.99 1543.12,1211.99 1543.7,1211.99 1544.29,1211.99 1544.88,1211.99 1545.46,1211.99 1546.05,1211.99 1546.64,1211.99 1547.22,1211.99 1547.81,1211.99 1548.4,1211.99 1548.98,1211.99 1549.57,1211.99 1550.15,1211.99 1550.74,1211.99 1551.33,1211.99 1551.91,1211.99 1552.5,1211.99 1553.09,1211.99 1553.67,1211.99 1554.26,1211.99 1554.85,1211.99 1555.43,1211.99 1556.02,1211.99 1556.6,1211.99 1557.19,1211.99 1557.78,1211.99 1558.36,1211.99 1558.95,1211.99 1559.54,1211.99 1560.12,1211.99 1560.71,1211.99 1561.3,1211.99 1561.88,1211.99 1562.47,1211.99 1563.06,1211.99 1563.64,1211.99 1564.23,1211.99 1564.81,1211.99 1565.4,1211.99 1565.99,1211.99 1566.57,1211.99 1567.16,1211.99 1567.75,1211.99 1568.33,1211.99 1568.92,1211.99 1569.51,1211.99 1570.09,1211.99 1570.68,1211.99 1571.27,1211.99 1571.85,1211.99 1572.44,1211.99 1573.02,1211.99 1573.61,1211.99 1574.2,1211.99 1574.78,1211.99 1575.37,1211.99 1575.96,1211.99 1576.54,1211.99 1577.13,1211.99 1577.72,1211.99 1578.3,1211.99 1578.89,1211.99 1579.47,1211.99 1580.06,1211.99 1580.65,1211.99 1581.23,1211.99 1581.82,1211.99 1582.41,1211.99 1582.99,1211.99 1583.58,1211.99 1584.17,1211.99 1584.75,1211.99 1585.34,1211.99 1585.93,1211.99 1586.51,1211.99 1587.1,1211.99 1587.68,1211.99 1588.27,1211.99 1588.86,1211.99 1589.44,1211.99 1590.03,1211.99 1590.62,1211.99 1591.2,1211.99 1591.79,1211.99 1592.38,1211.99 1592.96,1211.99 1593.55,1211.99 1594.14,1211.99 1594.72,1211.99 1595.31,1211.99 1595.89,1211.99 1596.48,1211.99 1597.07,1211.99 1597.65,1211.99 1598.24,1211.99 1598.83,1211.99 1599.41,1211.99 1600,1211.99 1600.59,1211.99 1601.17,1211.99 1601.76,1211.99 1602.34,1211.99 1602.93,1211.99 1603.52,1211.99 1604.1,1211.99 1604.69,1211.99 1605.28,1211.99 1605.86,1211.99 1606.45,1211.99 1607.04,1211.99 1607.62,1211.99 1608.21,1211.99 1608.8,1211.99 1609.38,1211.99 1609.97,1211.99 1610.55,1211.99 1611.14,1211.99 1611.73,1211.99 1612.31,1211.99 1612.9,1211.99 1613.49,1211.99 1614.07,1211.99 1614.66,1211.99 1615.25,1211.99 1615.83,1211.99 1616.42,1211.99 1617.01,1211.99 1617.59,1211.99 1618.18,1211.99 1618.76,1211.99 1619.35,1211.99 1619.94,1211.99 1620.52,1211.99 1621.11,1211.99 1621.7,1211.99 1622.28,1211.99 1622.87,1211.99 1623.46,1211.99 1624.04,1211.99 1624.63,1211.99 1625.22,1211.99 1625.8,1211.99 1626.39,1211.99 1626.97,1211.99 1627.56,1211.99 1628.15,1211.99 1628.73,1211.99 1629.32,1211.99 1629.91,1211.99 1630.49,1211.99 1631.08,1211.99 1631.67,1211.99 1632.25,1211.99 1632.84,1211.99 1633.42,1211.99 1634.01,1211.99 1634.6,1211.99 1635.18,1211.99 1635.77,1211.99 1636.36,1211.99 1636.94,1211.99 1637.53,1211.99 1638.12,1211.99 1638.7,1211.99 1639.29,1211.99 1639.88,1211.99 1640.46,1211.99 1641.05,1211.99 1641.63,1211.99 1642.22,1211.99 1642.81,1211.99 1643.39,1211.99 1643.98,1211.99 1644.57,1211.99 1645.15,1211.99 1645.74,1211.99 1646.33,1211.99 1646.91,1211.99 1647.5,1211.99 1648.09,1211.99 1648.67,1211.99 1649.26,1211.99 1649.84,1211.99 1650.43,1211.99 1651.02,1211.99 1651.6,1211.99 1652.19,1211.99 1652.78,1211.99 1653.36,1211.99 1653.95,1211.99 1654.54,1211.99 1655.12,1211.99 1655.71,1211.99 1656.29,1211.99 1656.88,1211.99 1657.47,1211.99 1658.05,1211.99 1658.64,1211.99 1659.23,1211.99 1659.81,1211.99 1660.4,1211.99 1660.99,1211.99 1661.57,1211.99 1662.16,1211.99 1662.75,1211.99 1663.33,1211.99 1663.92,1211.99 1664.5,1211.99 1665.09,1211.99 1665.68,1211.99 1666.26,1211.99 1666.85,1211.99 1667.44,1211.99 1668.02,1211.99 1668.61,1211.99 1669.2,1211.99 1669.78,1211.99 1670.37,1211.99 1670.96,1211.99 1671.54,1211.99 1672.13,1211.99 1672.71,1211.99 1673.3,1211.99 1673.89,1211.99 1674.47,1211.99 1675.06,1211.99 1675.65,1211.99 1676.23,1211.99 1676.82,1211.99 1677.41,1211.99 1677.99,1211.99 1678.58,1211.99 1679.17,1211.99 1679.75,1211.99 1680.34,1211.99 1680.92,1211.99 1681.51,1211.99 1682.1,1211.99 1682.68,1211.99 1683.27,1211.99 1683.86,1211.99 1684.44,1211.99 1685.03,1211.99 1685.62,1211.99 1686.2,1211.99 1686.79,1211.99 1687.37,1211.99 1687.96,1211.99 1688.55,1211.99 1689.13,1211.99 1689.72,1211.99 1690.31,1211.99 1690.89,1211.99 1691.48,1211.99 1692.07,1211.99 1692.65,1211.99 1693.24,1211.99 1693.83,1211.99 1694.41,1211.99 1695,1211.99 1695.58,1211.99 1696.17,1211.99 1696.76,1211.99 1697.34,1211.99 1697.93,1211.99 1698.52,1211.99 1699.1,1211.99 1699.69,1211.99 1700.28,1211.99 1700.86,1211.99 1701.45,1211.99 1702.04,1211.99 1702.62,1211.99 1703.21,1211.99 1703.79,1211.99 1704.38,1211.99 1704.97,1211.99 1705.55,1211.99 1706.14,1211.99 1706.73,1211.99 1707.31,1211.99 1707.9,1211.99 1708.49,1211.99 1709.07,1211.99 1709.66,1211.99 1710.24,1211.99 1710.83,1211.99 1711.42,1211.99 1712,1211.99 1712.59,1211.99 1713.18,1211.99 1713.76,1211.99 1714.35,1211.99 1714.94,1211.99 1715.52,1211.99 1716.11,1211.99 1716.7,1211.99 1717.28,1211.99 1717.87,1211.99 1718.45,1211.99 1719.04,1211.99 1719.63,1211.99 1720.21,1211.99 1720.8,1211.99 1721.39,1211.99 1721.97,1211.99 1722.56,1211.99 1723.15,1211.99 1723.73,1211.99 1724.32,1211.99 1724.91,1211.99 1725.49,1211.99 1726.08,1211.99 1726.66,1211.99 1727.25,1211.99 1727.84,1211.99 1728.42,1211.99 1729.01,1211.99 1729.6,1211.99 1730.18,1211.99 1730.77,1211.99 1731.36,1211.99 1731.94,1211.99 1732.53,1211.99 1733.11,1211.99 1733.7,1211.99 1734.29,1211.99 1734.87,1211.99 1735.46,1211.99 1736.05,1211.99 1736.63,1211.99 1737.22,1211.99 1737.81,1211.99 1738.39,1211.99 1738.98,1211.99 1739.57,1211.99 1740.15,1211.99 1740.74,1211.99 1741.32,1211.99 1741.91,1211.99 1742.5,1211.99 1743.08,1211.99 1743.67,1211.99 1744.26,1211.99 1744.84,1211.99 1745.43,1211.99 1746.02,1211.99 1746.6,1211.99 1747.19,1211.99 1747.78,1211.99 1748.36,1211.99 1748.95,1211.99 1749.53,1211.99 1750.12,1211.99 1750.71,1211.99 1751.29,1211.99 1751.88,1211.99 1752.47,1211.99 1753.05,1211.99 1753.64,1211.99 1754.23,1211.99 1754.81,1211.99 1755.4,1211.99 1755.99,1211.99 1756.57,1211.99 1757.16,1211.99 1757.74,1211.99 1758.33,1211.99 1758.92,1211.99 1759.5,1211.99 1760.09,1211.99 1760.68,1211.99 1761.26,1211.99 1761.85,1211.99 1762.44,1211.99 1763.02,1211.99 1763.61,1211.99 1764.19,1211.99 1764.78,1211.99 1765.37,1211.99 1765.95,1211.99 1766.54,1211.99 1767.13,1211.99 1767.71,1211.99 1768.3,1211.99 1768.89,1211.99 1769.47,1211.99 1770.06,1211.99 1770.65,1211.99 1771.23,1211.99 1771.82,1211.99 1772.4,1211.99 1772.99,1211.99 1773.58,1211.99 1774.16,1211.99 1774.75,1211.99 1775.34,1211.99 1775.92,1211.99 1776.51,1211.99 1777.1,1211.99 1777.68,1211.99 1778.27,1211.99 1778.86,1211.99 1779.44,1211.99 1780.03,1211.99 1780.61,1211.99 1781.2,1211.99 1781.79,1211.99 1782.37,1211.99 1782.96,1211.99 1783.55,1211.99 1784.13,1211.99 1784.72,1211.99 1785.31,1211.99 1785.89,1211.99 1786.48,1211.99 1787.06,1211.99 1787.65,1211.99 1788.24,1211.99 1788.82,1211.99 1789.41,1211.99 1790,1211.99 1790.58,1211.99 1791.17,1211.99 1791.76,1211.99 1792.34,1211.99 1792.93,1211.99 1793.52,1211.99 1794.1,1211.99 1794.69,1211.99 1795.27,1211.99 1795.86,1211.99 1796.45,1211.99 1797.03,1211.99 1797.62,1211.99 1798.21,1211.99 1798.79,1211.99 1799.38,1211.99 1799.97,1211.99 1800.55,1211.99 1801.14,1211.99 1801.73,1211.99 1802.31,1211.99 1802.9,1211.99 1803.48,1211.99 1804.07,1211.99 1804.66,1211.99 1805.24,1211.99 1805.83,1211.99 1806.42,1211.99 1807,1211.99 1807.59,1211.99 1808.18,1211.99 1808.76,1211.99 1809.35,1211.99 1809.94,1211.99 1810.52,1211.99 1811.11,1211.99 1811.69,1211.99 1812.28,1211.99 1812.87,1211.99 1813.45,1211.99 1814.04,1211.99 1814.63,1211.99 1815.21,1211.99 1815.8,1211.99 1816.39,1211.99 1816.97,1211.99 1817.56,1211.99 1818.14,1211.99 1818.73,1211.99 1819.32,1211.99 1819.9,1211.99 1820.49,1211.99 1821.08,1211.99 1821.66,1211.99 1822.25,1211.99 1822.84,1211.99 1823.42,1211.99 1824.01,1211.99 1824.6,1211.99 1825.18,1211.99 1825.77,1211.99 1826.35,1211.99 1826.94,1211.99 1827.53,1211.99 1828.11,1211.99 1828.7,1211.99 1829.29,1211.99 1829.87,1211.99 1830.46,1211.99 1831.05,1211.99 1831.63,1211.99 1832.22,1211.99 1832.81,1211.99 1833.39,1211.99 1833.98,1211.99 1834.56,1211.99 1835.15,1211.99 1835.74,1211.99 1836.32,1211.99 1836.91,1211.99 1837.5,1211.99 1838.08,1211.99 1838.67,1211.99 1839.26,1211.99 1839.84,1211.99 1840.43,1211.99 1841.01,1211.99 1841.6,1211.99 1842.19,1211.99 1842.77,1211.99 1843.36,1211.99 1843.95,1211.99 1844.53,1211.99 1845.12,1211.99 1845.71,1211.99 1846.29,1211.99 1846.88,1211.99 1847.47,1211.99 1848.05,1211.99 1848.64,1211.99 1849.22,1211.99 1849.81,1211.99 1850.4,1211.99 1850.98,1211.99 1851.57,1211.99 1852.16,1211.99 1852.74,1211.99 1853.33,1211.99 1853.92,1211.99 1854.5,1211.99 1855.09,1211.99 1855.68,1211.99 1856.26,1211.99 1856.85,1211.99 1857.43,1211.99 1858.02,1211.99 1858.61,1211.99 1859.19,1211.99 1859.78,1211.99 1860.37,1211.99 1860.95,1211.99 1861.54,1211.99 1862.13,1211.99 1862.71,1211.99 1863.3,1211.99 1863.88,1211.99 1864.47,1211.99 1865.06,1211.99 1865.64,1211.99 1866.23,1211.99 1866.82,1211.99 1867.4,1211.99 1867.99,1211.99 1868.58,1211.99 1869.16,1211.99 1869.75,1211.99 1870.34,1211.99 1870.92,1211.99 1871.51,1211.99 1872.09,1211.99 1872.68,1211.99 1873.27,1211.99 1873.85,1211.99 1874.44,1211.99 1875.03,1211.99 1875.61,1211.99 1876.2,1211.99 1876.79,1211.99 1877.37,1211.99 1877.96,1211.99 1878.55,1211.99 1879.13,1211.99 1879.72,1211.99 1880.3,1211.99 1880.89,1211.99 1881.48,1211.99 1882.06,1211.99 1882.65,1211.99 1883.24,1211.99 1883.82,1211.99 1884.41,1211.99 1885,1211.99 1885.58,1211.99 1886.17,1211.99 1886.76,1211.99 1887.34,1211.99 1887.93,1211.99 1888.51,1211.99 1889.1,1211.99 1889.69,1211.99 1890.27,1211.99 1890.86,1211.99 1891.45,1211.99 1892.03,1211.99 1892.62,1211.99 1893.21,1211.99 1893.79,1211.99 1894.38,1211.99 1894.96,1211.99 1895.55,1211.99 1896.14,1211.99 1896.72,1211.99 1897.31,1211.99 1897.9,1211.99 1898.48,1211.99 1899.07,1211.99 1899.66,1211.99 1900.24,1211.99 1900.83,1211.99 1901.42,1211.99 1902,1211.99 1902.59,1211.99 1903.17,1211.99 1903.76,1211.99 1904.35,1211.99 1904.93,1211.99 1905.52,1211.99 1906.11,1211.99 1906.69,1211.99 1907.28,1211.99 1907.87,1211.99 1908.45,1211.99 1909.04,1211.99 1909.63,1211.99 1910.21,1211.99 1910.8,1211.99 1911.38,1211.99 1911.97,1211.99 1912.56,1211.99 1913.14,1211.99 1913.73,1211.99 1914.32,1211.99 1914.9,1211.99 1915.49,1211.99 1916.08,1211.99 1916.66,1211.99 1917.25,1211.99 1917.83,1211.99 1918.42,1211.99 1919.01,1211.99 1919.59,1211.99 1920.18,1211.99 1920.77,1211.99 1921.35,1211.99 1921.94,1211.99 1922.53,1211.99 1923.11,1211.99 1923.7,1211.99 1924.29,1211.99 1924.87,1211.99 1925.46,1211.99 1926.04,1211.99 1926.63,1211.99 1927.22,1211.99 1927.8,1211.99 1928.39,1211.99 1928.98,1211.99 1929.56,1211.99 1930.15,1211.99 1930.74,1211.99 1931.32,1211.99 1931.91,1211.99 1932.5,1211.99 1933.08,1211.99 1933.67,1211.99 1934.25,1211.99 1934.84,1211.99 1935.43,1211.99 1936.01,1211.99 1936.6,1211.99 1937.19,1211.99 1937.77,1211.99 1938.36,1211.99 1938.95,1211.99 1939.53,1211.99 1940.12,1211.99 1940.71,1211.99 1941.29,1211.99 1941.88,1211.99 1942.46,1211.99 1943.05,1211.99 1943.64,1211.99 1944.22,1211.99 1944.81,1211.99 1945.4,1211.99 1945.98,1211.99 1946.57,1211.99 1947.16,1211.99 1947.74,1211.99 1948.33,1211.99 1948.91,1211.99 1949.5,1211.99 1950.09,1211.99 1950.67,1211.99 1951.26,1211.99 1951.85,1211.99 1952.43,1211.99 1953.02,1211.99 1953.61,1211.99 1954.19,1211.99 1954.78,1211.99 1955.37,1211.99 1955.95,1211.99 1956.54,1211.99 1957.12,1211.99 1957.71,1211.99 1958.3,1211.99 1958.88,1211.99 1959.47,1211.99 1960.06,1211.99 1960.64,1211.99 1961.23,1211.99 1961.82,1211.99 1962.4,1211.99 1962.99,1211.99 1963.58,1211.99 1964.16,1211.99 1964.75,1211.99 1965.33,1211.99 1965.92,1211.99 1966.51,1211.99 1967.09,1211.99 1967.68,1211.99 1968.27,1211.99 1968.85,1211.99 1969.44,1211.99 1970.03,1211.99 1970.61,1211.99 1971.2,1211.99 1971.78,1211.99 1972.37,1211.99 1972.96,1211.99 1973.54,1211.99 1974.13,1211.99 1974.72,1211.99 1975.3,1211.99 1975.89,1211.99 1976.48,1211.99 1977.06,1211.99 1977.65,1211.99 1978.24,1211.99 1978.82,1211.99 1979.41,1211.99 1979.99,1211.99 1980.58,1211.99 1981.17,1211.99 1981.75,1211.99 1982.34,1211.99 1982.93,1211.99 1983.51,1211.99 1984.1,1211.99 1984.69,1211.99 1985.27,1211.99 1985.86,1211.99 1986.45,1211.99 1987.03,1211.99 1987.62,1211.99 1988.2,1211.99 1988.79,1211.99 1989.38,1211.99 1989.96,1211.99 1990.55,1211.99 1991.14,1211.99 1991.72,1211.99 1992.31,1211.99 1992.9,1211.99 1993.48,1211.99 1994.07,1211.99 1994.65,1211.99 1995.24,1211.99 1995.83,1211.99 1996.41,1211.99 1997,1211.99 1997.59,1211.99 1998.17,1211.99 1998.76,1211.99 1999.35,1211.99 1999.93,1211.99 2000.52,1211.99 2001.11,1211.99 2001.69,1211.99 2002.28,1211.99 2002.86,1211.99 2003.45,1211.99 2004.04,1211.99 2004.62,1211.99 2005.21,1211.99 2005.8,1211.99 2006.38,1211.99 2006.97,1211.99 2007.56,1211.99 2008.14,1211.99 2008.73,1211.99 2009.32,1211.99 2009.9,1211.99 2010.49,1211.99 2011.07,1211.99 2011.66,1211.99 2012.25,1211.99 2012.83,1211.99 2013.42,1211.99 2014.01,1211.99 2014.59,1211.99 2015.18,1211.99 2015.77,1211.99 2016.35,1211.99 2016.94,1211.99 2017.53,1211.99 2018.11,1211.99 2018.7,1211.99 2019.28,1211.99 2019.87,1211.99 2020.46,1211.99 2021.04,1211.99 2021.63,1211.99 2022.22,1211.99 2022.8,1211.99 2023.39,1211.99 2023.98,1211.99 2024.56,1211.99 2025.15,1211.99 2025.73,1211.99 2026.32,1211.99 2026.91,1211.99 2027.49,1211.99 2028.08,1211.99 2028.67,1211.99 2029.25,1211.99 2029.84,1211.99 2030.43,1211.99 2031.01,1211.99 2031.6,1211.99 2032.19,1211.99 2032.77,1211.99 2033.36,1211.99 2033.94,1211.99 2034.53,1211.99 2035.12,1211.99 2035.7,1211.99 2036.29,1211.99 2036.88,1211.99 2037.46,1211.99 2038.05,1211.99 2038.64,1211.99 2039.22,1211.99 2039.81,1211.99 2040.4,1211.99 2040.98,1211.99 2041.57,1211.99 2042.15,1211.99 2042.74,1211.99 2043.33,1211.99 2043.91,1211.99 2044.5,1211.99 2045.09,1211.99 2045.67,1211.99 2046.26,1211.99 2046.85,1211.99 2047.43,1211.99 2048.02,1211.99 2048.6,1211.99 2049.19,1211.99 2049.78,1211.99 2050.36,1211.99 2050.95,1211.99 2051.54,1211.99 2052.12,1211.99 2052.71,1211.99 2053.3,1211.99 2053.88,1211.99 2054.47,1211.99 2055.06,1211.99 2055.64,1211.99 2056.23,1211.99 2056.81,1211.99 2057.4,1211.99 2057.99,1211.99 2058.57,1211.99 2059.16,1211.99 2059.75,1211.99 2060.33,1211.99 2060.92,1211.99 2061.51,1211.99 2062.09,1211.99 2062.68,1211.99 2063.27,1211.99 2063.85,1211.99 2064.44,1211.99 2065.02,1211.99 2065.61,1211.99 2066.2,1211.99 2066.78,1211.99 2067.37,1211.99 2067.96,1211.99 2068.54,1211.99 2069.13,1211.99 2069.72,1211.99 2070.3,1211.99 2070.89,1211.99 2071.48,1211.99 2072.06,1211.99 2072.65,1211.99 2073.23,1211.99 2073.82,1211.99 2074.41,1211.99 2074.99,1211.99 2075.58,1211.99 2076.17,1211.99 2076.75,1211.99 2077.34,1211.99 2077.93,1211.99 2078.51,1211.99 2079.1,1211.99 2079.68,1211.99 2080.27,1211.99 2080.86,1211.99 2081.44,1211.99 2082.03,1211.99 2082.62,1211.99 2083.2,1211.99 2083.79,1211.99 2084.38,1211.99 2084.96,1211.99 2085.55,1211.99 2086.14,1211.99 2086.72,1211.99 2087.31,1211.99 2087.89,1211.99 2088.48,1211.99 2089.07,1211.99 2089.65,1211.99 2090.24,1211.99 2090.83,1211.99 2091.41,1211.99 2092,1211.99 2092.59,1211.99 2093.17,1211.99 2093.76,1211.99 2094.35,1211.99 2094.93,1211.99 2095.52,1211.99 2096.1,1211.99 2096.69,1211.99 2097.28,1211.99 2097.86,1211.99 2098.45,1211.99 2099.04,1211.99 2099.62,1211.99 2100.21,1211.99 2100.8,1211.99 2101.38,1211.99 2101.97,1211.99 2102.55,1211.99 2103.14,1211.99 2103.73,1211.99 2104.31,1211.99 2104.9,1211.99 2105.49,1211.99 2106.07,1211.99 2106.66,1211.99 2107.25,1211.99 2107.83,1211.99 2108.42,1211.99 2109.01,1211.99 2109.59,1211.99 2110.18,1211.99 2110.76,1211.99 2111.35,1211.99 2111.94,1211.99 2112.52,1211.99 2113.11,1211.99 2113.7,1211.99 2114.28,1211.99 2114.87,1211.99 2115.46,1211.99 2116.04,1211.99 2116.63,1211.99 2117.22,1211.99 2117.8,1211.99 2118.39,1211.99 2118.97,1211.99 2119.56,1211.99 2120.15,1211.99 2120.73,1211.99 2121.32,1211.99 2121.91,1211.99 2122.49,1211.99 2123.08,1211.99 2123.67,1211.99 2124.25,1211.99 2124.84,1211.99 2125.42,1211.99 2126.01,1211.99 2126.6,1211.99 2127.18,1211.99 2127.77,1211.99 2128.36,1211.99 2128.94,1211.99 2129.53,1211.99 2130.12,1211.99 2130.7,1211.99 2131.29,1211.99 2131.88,1211.99 2132.46,1211.99 2133.05,1211.99 2133.63,1211.99 2134.22,1211.99 2134.81,1211.99 2135.39,1211.99 2135.98,1211.99 2136.57,1211.99 2137.15,1211.99 2137.74,1211.99 2138.33,1211.99 2138.91,1211.99 2139.5,1211.99 2140.09,1211.99 2140.67,1211.99 2141.26,1211.99 2141.84,1211.99 2142.43,1211.99 2143.02,1211.99 2143.6,1211.99 2144.19,1211.99 2144.78,1211.99 2145.36,1211.99 2145.95,1211.99 2146.54,1211.99 2147.12,1211.99 2147.71,1211.99 2148.3,1211.99 2148.88,1211.99 2149.47,1211.99 2150.05,1211.99 2150.64,1211.99 2151.23,1211.99 2151.81,1211.99 2152.4,1211.99 2152.99,1211.99 2153.57,1211.99 2154.16,1211.99 2154.75,1211.99 2155.33,1211.99 2155.92,1211.99 2156.5,1211.99 2157.09,1211.99 2157.68,1211.99 2158.26,1211.99 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.98,1195.67 1399.43,899.083 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1227.83 985.439,1195.67 2158.26,1195.67 2158.26,1227.83 985.439,1227.83 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip310)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip310)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip313\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip313)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-8122.62 164.91,-8903.13 165.469,-8354.17 166.029,-9052.18 166.588,-9682.55 167.147,-10249.6 167.706,-10757.6 168.266,-11210.1 168.825,-11611 169.384,-11963.4 169.943,-12270.7 170.503,-12535.8 171.062,-12065.5 171.621,-12279.6 172.18,-12458.3 172.74,-12604.1 173.299,-12719.3 173.858,-12797.2 174.417,-12395.2 174.977,-12436.6 175.536,-12461.1 176.095,-12085.2 176.655,-12075.3 177.214,-12041.3 177.773,-11989.6 178.332,-11925 178.892,-11850.6 179.451,-11754.9 180.01,-11414 180.569,-11092.4 181.129,-10785.3 181.688,-10483.8 182.247,-10184.8 182.806,-9714.89 183.366,-9560.56 183.925,-9407.96 184.484,-9242.88 185.043,-8818.76 185.603,-8650.35 186.162,-8489.51 186.721,-8212.34 187.28,-7943.62 187.84,-7794.2 188.399,-7350.89 188.958,-7211.91 189.517,-6893.3 190.077,-6675.25 190.636,-6533.69 191.195,-6394.2 191.754,-6099.52 192.314,-5961.59 192.873,-5826.68 193.432,-5500.61 193.991,-5314.01 194.551,-5139.98 195.11,-4894.99 195.669,-4498.87 196.228,-4282.29 196.788,-4128.04 197.347,-4029.16 197.906,-3930.43 198.465,-3832.09 199.025,-3684.07 199.584,-3542.7 200.143,-3402.33 200.702,-3186.33 201.262,-3102.67 201.821,-3019.66 202.38,-2937.17 202.939,-2779.18 203.499,-2623.97 204.058,-2549.02 204.617,-2335.98 205.176,-2270.91 205.736,-2136.47 206.295,-2037.19 206.854,-1908.32 207.413,-1848.17 207.973,-1759.72 208.532,-1642.53 209.091,-1530.23 209.65,-1448.07 210.21,-1342.38 210.769,-1208.53 211.328,-1137.29 211.887,-1067.8 212.447,-972.997 213.006,-880.401 213.565,-844.369 214.124,-782.246 214.684,-695.867 215.243,-613.65 215.802,-585.255 216.361,-533.509 216.921,-481.127 217.48,-354.475 218.039,-306.51 218.598,-258.95 219.158,-165.613 219.717,-74.428 220.276,-34.3623 220.835,-15.707 221.395,23.6886 221.954,104.885 222.513,203.146 223.072,195.734 223.632,232.268 224.191,268.307 224.75,263.435 225.309,341.043 225.869,352.327 226.428,448.061 226.987,495.472 227.546,564.706 228.106,570.262 228.665,611.073 229.224,672.426 229.783,653.959 230.343,673.227 230.902,695.468 231.461,677.351 232.02,677.625 232.58,662.467 233.139,688.644 233.698,711.679 234.257,713.625 234.817,718.381 235.376,721.954 235.935,729.23 236.494,737.622 237.054,739.264 237.613,761.914 238.172,765.066 238.731,825.733 239.291,844.437 239.85,842.56 240.409,843.396 240.968,879.161 241.528,912.895 242.087,911.563 242.646,893.791 243.205,891.064 243.765,928.268 244.324,926.385 244.883,943.555 245.442,1012.72 246.002,1005.86 246.561,1000.18 247.12,993.727 247.679,995.631 248.239,1029.36 248.798,1043.45 249.357,1069.41 249.916,1080.81 250.476,1090.18 251.035,1104.57 251.594,1081.72 252.153,1074.81 252.713,1101.17 253.272,1093.24 253.831,1087.22 254.39,1080.95 254.95,1111.39 255.509,1138.89 256.068,1161.97 256.627,1147.94 257.187,1119.2 257.746,1111.98 258.305,1119.72 258.864,1111.36 259.424,1139.14 259.983,1145.02 260.542,1135.03 261.101,1139.22 261.661,1113.61 262.22,1140.56 262.779,1147.27 263.338,1099.64 263.898,1125.56 264.457,1099.59 265.016,1094.1 265.575,1106.02 266.135,1098.89 266.694,1129.93 267.253,1137.18 267.812,1158.09 268.372,1181.6 268.931,1207.55 269.49,1164.37 270.049,1169.42 270.609,1174.52 271.168,1163.52 271.727,1171.37 272.286,1162.05 272.846,1165.58 273.405,1172.86 273.964,1146.82 274.523,1120.49 275.083,1113.21 275.642,1088.76 276.201,1118.85 276.76,1126.66 277.32,1135.76 277.879,1112.13 278.438,1085.16 278.997,1111.09 279.557,1120.05 280.116,1143.75 280.675,1153.11 281.234,1140.35 281.794,1115.78 282.353,1121.78 282.912,1111.84 283.471,1136.99 284.031,1109.72 284.59,1101.75 285.149,1142.29 285.708,1077.5 286.268,1057.93 286.827,1053.54 287.386,1045.1 287.945,1091.46 288.505,1100.49 289.064,1110.58 289.623,1136.22 290.182,1139.68 290.742,1111.52 291.301,1101.6 291.86,1108.63 292.419,1117.87 292.979,1124.33 293.538,1114 294.097,1136.19 294.656,1077.32 295.216,1082.24 295.775,1070.93 296.334,1061.57 296.893,1035.35 297.453,1030.05 298.012,1026.55 298.571,1037.21 299.13,1048.36 299.69,1022.16 300.249,1017.24 300.808,980.15 301.368,980.886 301.927,977.764 302.486,988.852 303.045,970.259 303.605,981.72 304.164,941.805 304.723,939.02 305.282,919.199 305.842,932.485 306.401,932.972 306.96,931.058 307.519,948.448 308.079,960.323 308.638,945.109 309.197,1023.57 309.756,1000.86 310.316,997.843 310.875,1012.2 311.434,1025.05 311.993,1069.32 312.553,1079.8 313.112,1052.95 313.671,1032.16 314.23,1024.96 314.79,1033.42 315.349,1009.92 315.908,1017.92 316.467,1027.84 317.027,1057.08 317.586,1066.18 318.145,1071 318.704,1045.9 319.264,1068.96 319.823,1011.63 320.382,1007.19 320.941,1032.48 321.501,1057.6 322.06,1079.96 322.619,1138.1 323.178,1058.65 323.738,1029.47 324.297,988.323 324.856,999.386 325.415,1058.68 325.975,1033.52 326.534,1058.26 327.093,1050.45 327.652,1074.46 328.212,1015.88 328.771,1025.81 329.33,1014.66 329.889,1023.57 330.449,1000.09 331.008,975.305 331.567,984.664 332.126,962.206 332.686,956.21 333.245,952.147 333.804,965.906 334.363,946.648 334.923,944.618 335.482,1003.07 336.041,1013.98 336.6,1022.59 337.16,1015.1 337.719,1007.37 338.278,982.875 338.837,974.483 339.397,982.96 339.956,1007.34 340.515,1032 341.074,1055.21 341.634,1045.17 342.193,1036.17 342.752,1042.48 343.311,1030.2 343.871,1020.73 344.43,1011.58 344.989,1019.54 345.548,991.37 346.108,969.247 346.667,980.276 347.226,989.863 347.785,1015.39 348.345,968.651 348.904,993.196 349.463,982.161 350.022,992.06 350.582,968.261 351.141,976.545 351.7,953.824 352.259,979.111 352.819,968.994 353.378,944.087 353.937,955.907 354.496,949.532 355.056,958.336 355.615,916.875 356.174,911.184 356.733,919.483 357.293,899.675 357.852,894.805 358.411,893.173 358.97,905.035 359.53,884.249 360.089,896.987 360.648,895.93 361.207,909.6 361.767,888.308 362.326,902.709 362.885,886.003 363.444,853.126 364.004,836.056 364.563,836.97 365.122,867.253 365.681,848.167 366.241,831.852 366.8,836.63 367.359,848.288 367.918,860.996 368.478,842.777 369.037,854.327 369.596,835.195 370.155,868.231 370.715,828.107 371.274,825.444 371.833,824.508 372.392,822.544 372.952,834.908 373.511,815.7 374.07,816.644 374.629,801.91 375.189,799.386 375.748,816.969 376.307,799.851 376.866,815.027 377.426,796.768 377.985,781.34 378.544,800.689 379.103,783.019 379.663,774.047 380.222,776.683 380.781,778.201 381.34,793.961 381.9,808.271 382.459,803.603 383.018,822.624 383.577,836.083 384.137,834.278 384.696,830.902 385.255,797.65 385.814,815.383 386.374,815.156 386.933,865.009 387.492,875.688 388.051,822.31 388.611,866.638 389.17,879.083 389.729,906.282 390.288,896.517 390.848,907.877 391.407,902.186 391.966,895.951 392.525,905.491 393.085,916.59 393.644,927.797 394.203,908.404 394.762,902.774 395.322,915.019 395.881,925.734 396.44,916.636 396.999,893.066 397.559,854.196 398.118,849.979 398.677,830.572 399.236,825.942 399.796,824.61 400.355,825.827 400.914,802.948 401.473,817.611 402.033,815.432 402.592,849.11 403.151,829.209 403.71,793.198 404.27,825.604 404.829,823.826 405.388,837.536 405.947,849.534 406.507,862.767 407.066,861.133 407.625,809.836 408.184,792.91 408.744,776.362 409.303,759.472 409.862,743.279 410.421,778.094 410.981,776.133 411.54,795.475 412.099,792.791 412.658,808.719 413.218,839.376 413.777,867.995 414.336,879.054 414.895,857.524 415.455,868.653 416.014,862.972 416.573,830.548 417.132,792.157 417.692,804.633 418.251,783.741 418.81,801.174 419.369,778.81 419.929,779.43 420.488,780.701 421.047,764.684 421.606,765.379 422.166,767.165 422.725,783.544 423.284,783.738 423.843,784.866 424.403,785.783 424.962,800.272 425.521,785.489 426.08,769.523 426.64,753.319 427.199,768.463 427.758,785.871 428.318,785.513 428.877,787.913 429.436,797.911 429.995,797.345 430.555,763.114 431.114,762.959 431.673,811.985 432.232,795.7 432.792,779.937 433.351,781.053 433.91,791.249 434.469,809.457 435.029,807.596 435.588,772.265 436.147,784.168 436.706,769.965 437.266,755.89 437.825,756.903 438.384,713.917 438.943,734.822 439.503,751.65 440.062,752.465 440.621,753.999 441.18,788.56 441.74,804.65 442.299,820.487 442.858,784.294 443.417,799.79 443.977,847.121 444.536,822.927 445.095,816.309 445.654,781.576 446.214,763.459 446.773,776.838 447.332,743.951 447.891,745.408 448.451,748.216 449.01,746.151 449.569,715.074 450.128,733.129 450.688,750.011 451.247,719.601 451.806,671.149 452.365,709.866 452.925,744.689 453.484,761.057 454.043,743.284 454.602,741.918 455.162,744.158 455.721,744.26 456.28,745.94 456.839,764.581 457.399,796.129 457.958,809.878 458.517,807.209 459.076,791.275 459.636,738.608 460.195,740.592 460.754,724.3 461.313,711.272 461.873,698.589 462.432,718.139 462.991,736.152 463.55,774.395 464.11,771.488 464.669,790.482 465.228,757.808 465.787,741.924 466.347,772.205 466.906,768.598 467.465,768.99 468.024,764.307 468.584,759.63 469.143,776.409 469.702,777.056 470.261,806.534 470.821,821.848 471.38,816.051 471.939,812.916 472.498,824.535 473.058,801.174 473.617,800.049 474.176,798.781 474.735,829.648 475.295,857.477 475.854,870.397 476.413,866.228 476.972,842.144 477.532,855.115 478.091,834.838 478.65,813.977 479.209,824.378 479.769,835.734 480.328,862.432 480.887,854.325 481.446,863.073 482.006,874.134 482.565,917.471 483.124,891.663 483.683,864.551 484.243,825.654 484.802,801.885 485.361,763.842 485.92,793.734 486.48,787.651 487.039,752.114 487.598,748.814 488.157,748.222 488.717,731.185 489.276,696.807 489.835,634.413 490.394,657.001 490.954,630.592 491.513,680.477 492.072,682.278 492.631,670.593 493.191,673.394 493.75,660.678 494.309,699.752 494.868,698.955 495.428,621.648 495.987,608.634 496.546,614.4 497.105,618.045 497.665,605.364 498.224,663.564 498.783,635.328 499.342,624.161 499.902,628.504 500.461,637.825 501.02,663.77 501.579,652.058 502.139,674.264 502.698,677.39 503.257,693.953 503.816,729.198 504.376,761.663 504.935,759.972 505.494,774.874 506.053,757.884 506.613,756.581 507.172,754.733 507.731,754.505 508.29,802.213 508.85,814.552 509.409,796.438 509.968,794.473 510.527,810.452 511.087,821.29 511.646,815.188 512.205,828.82 512.764,807.479 513.324,803.207 513.883,797.55 514.442,794.696 515.001,777.567 515.561,773.03 516.12,752.183 516.679,748.264 517.238,744.037 517.798,744.927 518.357,743.945 518.916,774.031 519.475,772.615 520.035,767.794 520.594,763.257 521.153,757.092 521.712,832.311 522.272,844.388 522.831,836.67 523.39,828.531 523.949,839.459 524.509,783.362 525.068,781.322 525.627,748.23 526.186,748.167 526.746,747.885 527.305,758.744 527.864,723.771 528.423,774.197 528.983,770.673 529.542,768.629 530.101,782.72 530.66,780.284 531.22,760.026 531.779,743.514 532.338,740.831 532.897,723.686 533.457,742.093 534.016,741.068 534.575,739.231 535.134,719.677 535.694,721.198 536.253,724.312 536.812,707.796 537.371,725.603 537.931,739.365 538.49,774.245 539.049,771.454 539.608,734.471 540.168,719.033 540.727,731.839 541.286,763.797 541.845,743.25 542.405,777.146 542.964,790.294 543.523,792.353 544.082,754.569 544.642,768.444 545.201,763.08 545.76,757.708 546.319,709.129 546.879,697.186 547.438,646.294 547.997,669.553 548.556,654.696 549.116,672.815 549.675,625.162 550.234,632.31 550.793,655.198 551.353,658.172 551.912,660.704 552.471,677.398 553.031,648.586 553.59,664.948 554.149,666.337 554.708,672.313 555.268,677.432 555.827,658.622 556.386,646.246 556.945,684.156 557.505,688.256 558.064,675.692 558.623,675.199 559.182,691.996 559.742,740.408 560.301,738.223 560.86,703.773 561.419,686.941 561.979,688.623 562.538,654.995 563.097,660.561 563.656,647.116 564.216,678.225 564.775,681.968 565.334,682.584 565.893,667.729 566.453,672.347 567.012,639.486 567.571,646.036 568.13,666.717 568.69,686.721 569.249,703.232 569.808,704.253 570.367,672.149 570.927,656.777 571.486,640.449 572.045,677.604 572.604,675.731 573.164,664.372 573.723,650.713 574.282,673.514 574.841,706.974 575.401,691.801 575.96,709.574 576.519,697.418 577.078,701.508 577.638,704.837 578.197,672.287 578.756,692.455 579.315,709.914 579.875,693.154 580.434,690.751 580.993,691.565 581.552,663.005 582.112,678.375 582.671,711.392 583.23,743.729 583.789,743.209 584.349,773.265 584.908,787.079 585.467,781.515 586.026,791.972 586.586,787.71 587.145,816.848 587.704,794.062 588.263,808.029 588.823,820.147 589.382,782.685 589.941,794.769 590.5,790.95 591.06,768.642 591.619,747.024 592.178,733.48 592.737,686.039 593.297,668.788 593.856,656.111 594.415,659.216 594.974,661.197 595.534,666.484 596.093,665.236 596.652,700.587 597.211,765.136 597.771,766.036 598.33,810.559 598.889,852.52 599.448,856.524 600.008,848.149 600.567,826.857 601.126,823.426 601.685,819.051 602.245,761.956 602.804,743.476 603.363,742.847 603.922,743.836 604.482,742.949 605.041,789.506 605.6,819.393 606.159,814.276 606.719,838.859 607.278,832.756 607.837,808.055 608.396,833.262 608.956,854.214 609.515,861.526 610.074,837.273 610.633,815.159 611.193,814.605 611.752,839.921 612.311,820.026 612.87,780.743 613.43,759.394 613.989,771.932 614.548,784.017 615.107,796.166 615.667,759.134 616.226,759.757 616.785,739.277 617.344,735.808 617.904,748.635 618.463,791.136 619.022,800.527 619.581,797.041 620.141,759.336 620.7,805.613 621.259,816.865 621.818,813.823 622.378,790.433 622.937,738.143 623.496,736.244 624.055,783.577 624.615,762.686 625.174,756.588 625.733,719.218 626.292,746.518 626.852,693.455 627.411,677.291 627.97,692.134 628.529,643.022 629.089,661.501 629.648,681.586 630.207,686.523 630.766,689.953 631.326,705.573 631.885,705.426 632.444,675.291 633.003,677.497 633.563,663.23 634.122,669.041 634.681,654.864 635.24,656.064 635.8,658.416 636.359,630.306 636.918,616.966 637.477,622.49 638.037,657.421 638.596,679.263 639.155,675.81 639.714,643.694 640.274,630.06 640.833,633.173 641.392,653.529 641.951,654.987 642.511,658.094 643.07,691.275 643.629,661.544 644.188,679.92 644.748,694.477 645.307,681.688 645.866,683.636 646.425,729.675 646.985,692.907 647.544,645.334 648.103,683.268 648.662,701.706 649.222,684.403 649.781,637.284 650.34,675.603 650.899,646.67 651.459,673.353 652.018,708.34 652.577,709.964 653.136,693.684 653.696,695.389 654.255,695.687 654.814,696.361 655.373,693.662 655.933,689.695 656.492,672.601 657.051,657.094 657.61,628.521 658.17,631.819 658.729,621.608 659.288,639.962 659.847,645.914 660.407,648.417 660.966,639.758 661.525,597.016 662.084,635.448 662.644,641.721 663.203,632.179 663.762,636.178 664.321,639.361 664.881,642.407 665.44,611.238 665.999,648.377 666.558,689.24 667.118,673.057 667.677,625.665 668.236,618.075 668.795,622.809 669.355,642.88 669.914,681.851 670.473,699.971 671.032,713.141 671.592,696.207 672.151,697.322 672.71,695.989 673.269,712.982 673.829,727.983 674.388,731.851 674.947,732.541 675.506,716.449 676.066,698.749 676.625,699.055 677.184,716.942 677.743,699.86 678.303,698.444 678.862,699.429 679.421,699.976 679.981,679.844 680.54,682.815 681.099,698.559 681.658,699.441 682.218,717.074 682.777,732.841 683.336,729.146 683.895,774.873 684.455,787.076 685.014,780.725 685.573,764.271 686.132,764.648 686.692,761.371 687.251,754.376 687.81,782.259 688.369,824.765 688.929,798.468 689.488,793.989 690.047,754.955 690.606,781.289 691.166,760.531 691.725,741.948 692.284,739.266 692.843,737.59 693.403,737.055 693.962,738.24 694.521,717.853 695.08,732.316 695.64,766.77 696.199,748.147 696.758,730.452 697.317,715.405 697.877,714.768 698.436,698.069 698.995,714.551 699.554,710.987 700.114,741.387 700.673,736.697 701.232,720.139 701.791,714.929 702.351,695.552 702.91,680.665 703.469,699.494 704.028,665.648 704.588,684.195 705.147,681.652 705.706,681.228 706.265,714.185 706.825,712.078 707.384,695.303 707.943,710.117 708.502,726.032 709.062,759.691 709.621,773.323 710.18,770.548 710.739,765.677 711.299,742.557 711.858,722.42 712.417,717.978 712.976,714.739 713.536,701.11 714.095,686.939 714.654,705.944 715.213,701.016 715.773,684.733 716.332,683.297 716.891,681.89 717.45,682.457 718.01,633.108 718.569,634.419 719.128,651.42 719.687,639.232 720.247,624.149 720.806,629.349 721.365,633.482 721.924,632.797 722.484,648.83 723.043,649.444 723.602,668.112 724.161,702.768 724.721,703.488 725.28,670.243 725.839,703.907 726.398,718.77 726.958,717.357 727.517,733.257 728.076,698.841 728.635,683.394 729.195,653.325 729.754,657.569 730.313,674.125 730.872,692.133 731.432,643.321 731.991,632.972 732.55,637.926 733.109,607.981 733.669,629.781 734.228,603.246 734.787,625.14 735.346,630.21 735.906,634.352 736.465,619.565 737.024,624.507 737.583,642.949 738.143,665.676 738.702,668.913 739.261,703.553 739.82,754.536 740.38,782.018 740.939,777.559 741.498,743.977 742.057,710.254 742.617,692.753 743.176,709.153 743.735,723.898 744.294,688.406 744.854,658.123 745.413,644.004 745.972,662.371 746.531,664.563 747.091,697.042 747.65,709.734 748.209,678.265 748.768,663.587 749.328,661.256 749.887,695.054 750.446,664.254 751.005,697.402 751.565,696.32 752.124,710.86 752.683,740.396 753.242,721.785 753.802,685.801 754.361,684.621 754.92,687.451 755.479,703.813 756.039,655.631 756.598,676.494 757.157,627.328 757.716,616.034 758.276,635.179 758.835,636.877 759.394,642.089 759.953,627.003 760.513,645.826 761.072,613.061 761.631,616.404 762.19,634.234 762.75,636.958 763.309,656.148 763.868,694.931 764.427,723.811 764.987,705.635 765.546,688.674 766.105,688.645 766.664,675.392 767.224,705.009 767.783,705.761 768.342,704.681 768.901,735.232 769.461,763.368 770.02,757.124 770.579,750.886 771.138,730.264 771.698,762.009 772.257,795.623 772.816,771.959 773.375,736.947 773.935,722.114 774.494,722.089 775.053,707.102 775.612,670.93 776.172,658.777 776.731,677.591 777.29,674.923 777.849,693.315 778.409,695.346 778.968,691.968 779.527,676.814 780.086,692.842 780.646,710.877 781.205,708.163 781.764,705.43 782.323,705.493 782.883,673.364 783.442,689.897 784.001,692.17 784.56,691.487 785.12,709.599 785.679,678.87 786.238,679.523 786.797,680.496 787.357,699.465 787.916,713.176 788.475,726.286 789.034,722.043 789.594,706.266 790.153,720.587 790.712,717.096 791.271,698.963 791.831,700.179 792.39,681.634 792.949,700.17 793.508,697.122 794.068,695.964 794.627,675.604 795.186,676.518 795.745,677.762 796.305,708.945 796.864,707.286 797.423,722.753 797.982,686.501 798.542,688.706 799.101,688.944 799.66,690.065 800.219,739.877 800.779,771.481 801.338,767.612 801.897,799.659 802.456,791.745 803.016,789.848 803.575,799.504 804.134,794.255 804.693,772.198 805.253,751.102 805.812,764.671 806.371,778.878 806.931,774.74 807.49,702.857 808.049,717.381 808.608,731.882 809.168,728.437 809.727,711.067 810.286,711.712 810.845,711.016 811.405,691.126 811.964,704.701 812.523,687.693 813.082,653.279 813.642,672.574 814.201,670.768 814.76,640.899 815.319,674.438 815.879,678.647 816.438,698.099 816.997,711.946 817.556,693.504 818.116,691.673 818.675,662.075 819.234,696.768 819.793,680.23 820.353,693.522 820.912,691.112 821.471,691.462 822.03,690.933 822.59,704.41 823.149,733.569 823.708,749.503 824.267,731.545 824.827,749.111 825.386,746.066 825.945,711.091 826.504,709.716 827.064,695.084 827.623,678.14 828.182,679.585 828.741,693.573 829.301,677.076 829.86,690.309 830.419,674.478 830.978,675.948 831.538,707.077 832.097,726.049 832.656,706.63 833.215,719.575 833.775,718.593 834.334,734.123 834.893,680.501 835.452,697.631 836.012,678.111 836.571,676.885 837.13,693.962 837.689,661.83 838.249,629.345 838.808,668.198 839.367,705.066 839.926,735.472 840.486,751.478 841.045,734.488 841.604,715.147 842.163,666.779 842.723,650.966 843.282,669.195 843.841,688.159 844.4,704.282 844.96,721.688 845.519,704.073 846.078,720.031 846.637,700.917 847.197,698.748 847.756,697.762 848.315,647.113 848.874,663.538 849.434,662.984 849.993,663.738 850.552,680.063 851.111,696.335 851.671,683.009 852.23,712.976 852.789,714.799 853.348,698.912 853.908,717.09 854.467,748.014 855.026,744.537 855.585,708.67 856.145,660.158 856.704,696.085 857.263,681.645 857.822,699.313 858.382,695.585 858.941,707.718 859.5,670.282 860.059,654.142 860.619,675.919 861.178,680.897 861.737,700.488 862.296,684.243 862.856,699.824 863.415,650.829 863.974,621.931 864.533,625.397 865.093,610.811 865.652,598.127 866.211,582.851 866.77,604.234 867.33,593.776 867.889,616.587 868.448,624.306 869.007,644.366 869.567,647.251 870.126,648.542 870.685,701.001 871.244,700.932 871.804,702.049 872.363,714.338 872.922,715.243 873.481,697.93 874.041,682.283 874.6,732.517 875.159,731.121 875.718,711.085 876.278,708.917 876.837,724.805 877.396,720.112 877.955,735.555 878.515,716.055 879.074,746.682 879.633,695.701 880.192,696.05 880.752,665.597 881.311,632.721 881.87,622.445 882.429,658.692 882.989,660.35 883.548,694.701 884.107,695.685 884.666,697.095 885.226,698.933 885.785,729.754 886.344,760.363 886.903,708.098 887.463,753.602 888.022,765.947 888.581,776.343 889.14,789.478 889.7,786.152 890.259,783.302 890.818,762.921 891.377,742.336 891.937,772.13 892.496,767.04 893.055,780.375 893.614,757.941 894.174,722.836 894.733,705.907 895.292,704.688 895.851,690.269 896.411,707.876 896.97,707.594 897.529,689.601 898.088,722.593 898.648,720.307 899.207,732.604 899.766,732.733 900.325,680.469 900.885,660.663 901.444,644.91 902.003,696.778 902.562,711.668 903.122,692.223 903.681,710.886 904.24,693.257 904.799,676.676 905.359,680.363 905.918,664.241 906.477,665.618 907.036,699.099 907.596,668.177 908.155,637.547 908.714,675.061 909.273,709.063 909.833,691.547 910.392,707.514 910.951,702.439 911.51,700.146 912.07,698.881 912.629,716.405 913.188,717.485 913.747,779.175 914.307,772.374 914.866,752.913 915.425,716.286 915.984,695.827 916.544,695.566 917.103,676.614 917.662,678.838 918.221,693.644 918.781,693.496 919.34,692.133 919.899,661.883 920.458,614.033 921.018,665.412 921.577,665.883 922.136,666.891 922.695,686.444 923.255,705.332 923.814,688.591 924.373,721.557 924.932,702.249 925.492,685.832 926.051,683.137 926.61,702.317 927.169,698.659 927.729,698.514 928.288,668.091 928.847,652.195 929.406,652.871 929.966,653.131 930.525,655.523 931.084,655.26 931.644,656.755 932.203,658.045 932.762,624.085 933.321,582.03 933.881,600.689 934.44,637.805 934.999,654.371 935.558,637.82 936.118,645.863 936.677,675.183 937.236,658.16 937.795,691.651 938.355,689.912 938.914,693.053 939.473,670.756 940.032,673.072 940.592,659.138 941.151,660.816 941.71,663.421 942.269,679.708 942.829,665.504 943.388,632.697 943.947,632.477 944.506,634.787 945.066,619.411 945.625,620.528 946.184,622.307 946.743,589.817 947.303,579.173 947.862,580.622 948.421,557.862 948.98,595.9 949.54,597.644 950.099,616.346 950.658,620.85 951.217,602.744 951.777,589.168 952.336,595.646 952.895,599.724 953.454,603.194 954.014,609.425 954.573,612.551 955.132,618.385 955.691,603.492 956.251,594.129 956.81,604.06 957.369,638.401 957.928,627.942 958.488,629.09 959.047,632.036 959.606,632.099 960.165,654.6 960.725,659.662 961.284,662.451 961.843,696.847 962.402,695.381 962.962,681.956 963.521,651.62 964.08,606.092 964.639,605.303 965.199,642.513 965.758,642.933 966.317,633.143 966.876,619.852 967.436,629.079 967.995,649.133 968.554,636.218 969.113,636.664 969.673,638.151 970.232,655.713 970.791,673.709 971.35,661.096 971.91,663.754 972.469,646.068 973.028,679.069 973.587,649.482 974.147,622.583 974.706,645.555 975.265,675.365 975.824,660.432 976.384,661.823 976.943,660.469 977.502,696.647 978.061,725.57 978.621,708.273 979.18,673.433 979.739,673 980.298,656.306 980.858,659.691 981.417,644.019 981.976,677.945 982.535,682.843 983.095,686.614 983.654,719.875 984.213,720.401 984.772,703.102 985.332,684.55 985.891,682.61 986.45,665.289 987.009,667.942 987.569,667.339 988.128,652.269 988.687,683.996 989.246,667.326 989.806,681.783 990.365,686.786 990.924,671.189 991.483,690.274 992.043,656.483 992.602,653.424 993.161,671.101 993.72,686.669 994.28,671.588 994.839,655.338 995.398,656.999 995.957,674.256 996.517,690.593 997.076,692.682 997.635,676.923 998.194,711.623 998.754,706.881 999.313,722.228 999.872,736.12 1000.43,733.933 1000.99,699.534 1001.55,701.347 1002.11,700.805 1002.67,731.38 1003.23,743.573 1003.79,724.658 1004.35,721.449 1004.91,723.189 1005.46,739.312 1006.02,719.023 1006.58,721.653 1007.14,734.25 1007.7,811.586 1008.26,803.152 1008.82,779.77 1009.38,758.881 1009.94,802.041 1010.5,812.436 1011.06,775.878 1011.62,755.024 1012.18,736.361 1012.73,720.595 1013.29,718.238 1013.85,749.658 1014.41,714.082 1014.97,712.922 1015.53,728.194 1016.09,740.009 1016.65,740.111 1017.21,736.651 1017.77,764.084 1018.33,743.121 1018.89,723.319 1019.45,674.166 1020.01,658.524 1020.56,661.436 1021.12,663.656 1021.68,683.993 1022.24,665.313 1022.8,671.93 1023.36,676.044 1023.92,676.227 1024.48,664.286 1025.04,632.987 1025.6,621.525 1026.16,625.567 1026.72,647.368 1027.28,631.293 1027.83,634.288 1028.39,635.409 1028.95,654.553 1029.51,670.04 1030.07,672.321 1030.63,660.315 1031.19,677.438 1031.75,663.244 1032.31,635.041 1032.87,669.439 1033.43,670.484 1033.99,685.637 1034.55,705.847 1035.1,736.407 1035.66,750.071 1036.22,759.735 1036.78,736.293 1037.34,698.225 1037.9,667.235 1038.46,671.276 1039.02,671.878 1039.58,637.719 1040.14,655.012 1040.7,641.998 1041.26,659.761 1041.82,660.625 1042.38,658.44 1042.93,641.628 1043.49,640.379 1044.05,658.647 1044.61,640.88 1045.17,627.527 1045.73,596.373 1046.29,583.79 1046.85,572.153 1047.41,595.297 1047.97,611.379 1048.53,648.033 1049.09,681.518 1049.65,679.248 1050.2,708.321 1050.76,673.564 1051.32,675.11 1051.88,694.145 1052.44,675.665 1053,725.802 1053.56,771.9 1054.12,783.321 1054.68,762.164 1055.24,742.012 1055.8,722.803 1056.36,734.605 1056.92,732.7 1057.48,727.654 1058.03,678.214 1058.59,694.167 1059.15,723.531 1059.71,735.636 1060.27,764.363 1060.83,773.144 1061.39,753.396 1061.95,732.795 1062.51,716.773 1063.07,745.89 1063.63,757.091 1064.19,766.812 1064.75,746.66 1065.3,741.759 1065.86,719.771 1066.42,720.862 1066.98,733.687 1067.54,766.566 1068.1,792.948 1068.66,771.331 1069.22,751.516 1069.78,747.185 1070.34,712.246 1070.9,724.773 1071.46,719.727 1072.02,731.469 1072.57,711.377 1073.13,678.436 1073.69,678.679 1074.25,712.511 1074.81,708.793 1075.37,724.488 1075.93,724.987 1076.49,723.962 1077.05,719.857 1077.61,715.728 1078.17,711.729 1078.73,675.564 1079.29,671.407 1079.85,669.565 1080.4,683.652 1080.96,666.777 1081.52,649.625 1082.08,635.197 1082.64,685.009 1083.2,722.471 1083.76,755.438 1084.32,674.285 1084.88,692.833 1085.44,708.117 1086,689.508 1086.56,691.942 1087.12,712.361 1087.67,696.277 1088.23,711.173 1088.79,691.088 1089.35,703.194 1089.91,717.458 1090.47,699.792 1091.03,711.706 1091.59,695.821 1092.15,679.899 1092.71,713.554 1093.27,742.448 1093.83,725.807 1094.39,722.405 1094.94,689.182 1095.5,673.977 1096.06,703.071 1096.62,702.99 1097.18,689.016 1097.74,658.057 1098.3,662.518 1098.86,649.547 1099.42,668.181 1099.98,654.112 1100.54,659.429 1101.1,674.871 1101.66,690.786 1102.22,705.295 1102.77,672.982 1103.33,674.006 1103.89,659.813 1104.45,642.974 1105.01,675.656 1105.57,645.876 1106.13,628.998 1106.69,599.401 1107.25,602.119 1107.81,605.646 1108.37,644.441 1108.93,660.033 1109.49,660.91 1110.04,660.444 1110.6,661.55 1111.16,646.214 1111.72,648.023 1112.28,647.556 1112.84,682.451 1113.4,682.195 1113.96,680.348 1114.52,681.499 1115.08,698.124 1115.64,697.371 1116.2,711.359 1116.76,712.956 1117.31,714.798 1117.87,700.812 1118.43,682.449 1118.99,669.121 1119.55,669.489 1120.11,705.704 1120.67,704.544 1121.23,751.281 1121.79,718.322 1122.35,701.048 1122.91,716.519 1123.47,684.107 1124.03,684.581 1124.59,718.12 1125.14,750.88 1125.7,729.419 1126.26,726.584 1126.82,741.75 1127.38,739.587 1127.94,767.687 1128.5,730.627 1129.06,729.178 1129.62,694.682 1130.18,708.989 1130.74,708.024 1131.3,726.853 1131.86,706.778 1132.41,687.174 1132.97,684.707 1133.53,680.211 1134.09,679.594 1134.65,681.433 1135.21,683.7 1135.77,699.92 1136.33,682.306 1136.89,648.492 1137.45,665.233 1138.01,699.332 1138.57,761.718 1139.13,725.577 1139.68,752.673 1140.24,747.531 1140.8,732.377 1141.36,731.149 1141.92,760.736 1142.48,772.232 1143.04,748.846 1143.6,713.018 1144.16,712.399 1144.72,711.278 1145.28,660.598 1145.84,675.847 1146.4,676.116 1146.96,728.312 1147.51,741.896 1148.07,756.909 1148.63,754.088 1149.19,702.462 1149.75,716.517 1150.31,728.356 1150.87,692.574 1151.43,676.628 1151.99,676.391 1152.55,630.992 1153.11,613.638 1153.67,598.945 1154.23,586.841 1154.78,596.692 1155.34,599.69 1155.9,607.367 1156.46,579.236 1157.02,584.551 1157.58,600.469 1158.14,592.546 1158.7,630.209 1159.26,630.368 1159.82,665.835 1160.38,650.81 1160.94,638.069 1161.5,625.426 1162.05,611.845 1162.61,613.838 1163.17,619.122 1163.73,605.147 1164.29,595.557 1164.85,617.367 1165.41,621.721 1165.97,646.264 1166.53,679.45 1167.09,694.422 1167.65,691.641 1168.21,691.41 1168.77,686.776 1169.33,672.603 1169.88,656.717 1170.44,658.865 1171,710.496 1171.56,727.238 1172.12,739.773 1172.68,752.767 1173.24,746.29 1173.8,773.936 1174.36,770.719 1174.92,766.292 1175.48,810.822 1176.04,803.668 1176.6,802.34 1177.15,779.024 1177.71,774.399 1178.27,756.437 1178.83,753.383 1179.39,734.883 1179.95,733.578 1180.51,734.066 1181.07,702.634 1181.63,702.15 1182.19,701.412 1182.75,669.843 1183.31,656.75 1183.87,673.425 1184.43,673.533 1184.98,659.382 1185.54,663.665 1186.1,694.679 1186.66,677.215 1187.22,676.789 1187.78,723.026 1188.34,719.165 1188.9,689.892 1189.46,708.911 1190.02,697.635 1190.58,664.345 1191.14,696.727 1191.7,698.244 1192.25,726.104 1192.81,723.186 1193.37,722.489 1193.93,705.654 1194.49,701.058 1195.05,699.444 1195.61,745.332 1196.17,725.984 1196.73,743.468 1197.29,738.331 1197.85,751.699 1198.41,748.79 1198.97,697.519 1199.52,714.947 1200.08,712.644 1200.64,694.233 1201.2,659.085 1201.76,692.981 1202.32,694.34 1202.88,709.871 1203.44,709.24 1204,722.41 1204.56,714.756 1205.12,712.235 1205.68,728.557 1206.24,675.973 1206.8,642.622 1207.35,660.532 1207.91,645.877 1208.47,651.652 1209.03,618.667 1209.59,655.051 1210.15,654.808 1210.71,657.173 1211.27,671.981 1211.83,690.01 1212.39,672.313 1212.95,687.584 1213.51,687.921 1214.07,701.913 1214.62,683.255 1215.18,654.665 1215.74,642.136 1216.3,641.365 1216.86,686.46 1217.42,706.833 1217.98,675.354 1218.54,642.795 1219.1,611.364 1219.66,616.574 1220.22,604.26 1220.78,594.561 1221.34,645.164 1221.89,663.382 1222.45,662.846 1223.01,677.167 1223.57,694.861 1224.13,696.178 1224.69,694.319 1225.25,727.125 1225.81,739.697 1226.37,737.475 1226.93,718.874 1227.49,735.723 1228.05,749.148 1228.61,744.236 1229.17,743.404 1229.72,723.342 1230.28,687.781 1230.84,688.747 1231.4,723.602 1231.96,671.083 1232.52,673.436 1233.08,677 1233.64,675.093 1234.2,674.627 1234.76,657.608 1235.32,658.276 1235.88,644.124 1236.44,678.045 1236.99,706.675 1237.55,738.731 1238.11,707.055 1238.67,708.041 1239.23,689.277 1239.79,704.426 1240.35,700.728 1240.91,715.275 1241.47,728.753 1242.03,693.111 1242.59,743.768 1243.15,708.612 1243.71,690.029 1244.26,688.46 1244.82,719.702 1245.38,700.564 1245.94,717.172 1246.5,715.436 1247.06,713.27 1247.62,729.575 1248.18,746.639 1248.74,745.29 1249.3,743.59 1249.86,723.742 1250.42,702.541 1250.98,737.978 1251.54,722.4 1252.09,686.34 1252.65,719.864 1253.21,752.109 1253.77,763.59 1254.33,762.59 1254.89,760.756 1255.45,788.246 1256.01,765.478 1256.57,762.675 1257.13,771.618 1257.69,781.367 1258.25,743.345 1258.81,738.758 1259.36,752.204 1259.92,750.493 1260.48,731.415 1261.04,723.453 1261.6,720.28 1262.16,701.607 1262.72,700.702 1263.28,699.541 1263.84,693.612 1264.4,692.622 1264.96,679.367 1265.52,665.107 1266.08,667.809 1266.63,689.061 1267.19,651.285 1267.75,652.356 1268.31,653.917 1268.87,642.407 1269.43,644.412 1269.99,644.468 1270.55,646.93 1271.11,617.965 1271.67,639.166 1272.23,659.469 1272.79,677.367 1273.35,662.061 1273.91,664.114 1274.46,648.239 1275.02,665.458 1275.58,668.074 1276.14,650.996 1276.7,654.761 1277.26,674.722 1277.82,692.67 1278.38,659.889 1278.94,664.276 1279.5,633.233 1280.06,618.473 1280.62,621.945 1281.18,643.047 1281.73,644.53 1282.29,645.269 1282.85,631.558 1283.41,652.567 1283.97,638.518 1284.53,627.564 1285.09,695.528 1285.65,678.051 1286.21,661.013 1286.77,678.659 1287.33,679.307 1287.89,680.662 1288.45,694.179 1289,690.538 1289.56,685.504 1290.12,696.351 1290.68,683.335 1291.24,683.588 1291.8,666.244 1292.36,668.568 1292.92,671.741 1293.48,639.904 1294.04,623.395 1294.6,644.402 1295.16,646.938 1295.72,665.332 1296.28,650.824 1296.83,605.525 1297.39,641.44 1297.95,628.611 1298.51,600.98 1299.07,575.556 1299.63,599.556 1300.19,619.026 1300.75,590.92 1301.31,579.161 1301.87,618.556 1302.43,591.82 1302.99,583.374 1303.55,591.268 1304.1,597.283 1304.66,619.345 1305.22,609.215 1305.78,596.795 1306.34,601.297 1306.9,667.522 1307.46,669.574 1308.02,671.866 1308.58,657.86 1309.14,658.998 1309.7,695.115 1310.26,695.446 1310.82,710.037 1311.38,712.026 1311.93,744.704 1312.49,755.012 1313.05,733.664 1313.61,698.252 1314.17,732.28 1314.73,728.816 1315.29,722.684 1315.85,718.886 1316.41,716.862 1316.97,731.186 1317.53,728.954 1318.09,729.954 1318.65,709.342 1319.2,721.914 1319.76,755.345 1320.32,733.573 1320.88,762.743 1321.44,763.609 1322,761.016 1322.56,726.071 1323.12,738.778 1323.68,715.051 1324.24,711.861 1324.8,694.878 1325.36,691.502 1325.92,708.113 1326.47,738.808 1327.03,749.912 1327.59,745.13 1328.15,741.732 1328.71,721.963 1329.27,704.466 1329.83,689.854 1330.39,691.421 1330.95,679.277 1331.51,668.305 1332.07,670.395 1332.63,657.989 1333.19,614.607 1333.75,585.708 1334.3,586.17 1334.86,592.784 1335.42,615.912 1335.98,620.943 1336.54,607.324 1337.1,581.286 1337.66,603.558 1338.22,589.817 1338.78,578.141 1339.34,582.265 1339.9,591.264 1340.46,642.513 1341.02,646.484 1341.57,665.818 1342.13,617.303 1342.69,640.984 1343.25,640.125 1343.81,624.636 1344.37,644.635 1344.93,627.708 1345.49,630.202 1346.05,601.787 1346.61,577.206 1347.17,584.707 1347.73,604.145 1348.29,609.414 1348.84,632.631 1349.4,653.672 1349.96,655.636 1350.52,656.531 1351.08,644.035 1351.64,645.892 1352.2,714.691 1352.76,726.492 1353.32,692.865 1353.88,692.35 1354.44,695.928 1355,662.533 1355.56,675.52 1356.12,677.891 1356.67,676.521 1357.23,642.462 1357.79,630.352 1358.35,665.535 1358.91,681.008 1359.47,696.768 1360.03,745.108 1360.59,757.246 1361.15,754.655 1361.71,750.947 1362.27,779.323 1362.83,789.58 1363.39,798.765 1363.94,760.903 1364.5,804.615 1365.06,816.84 1365.62,793.78 1366.18,788.756 1366.74,800.074 1367.3,824.862 1367.86,879.218 1368.42,868.872 1368.98,858.611 1369.54,816.802 1370.1,789.664 1370.66,798.071 1371.21,776.123 1371.77,758.511 1372.33,754.308 1372.89,752.713 1373.45,766.091 1374.01,743.753 1374.57,721.408 1375.13,734.614 1375.69,746.584 1376.25,741.333 1376.81,719.979 1377.37,733.542 1377.93,664.447 1378.49,667.006 1379.04,667.354 1379.6,635.071 1380.16,623.136 1380.72,625.816 1381.28,614.311 1381.84,634.895 1382.4,672.669 1382.96,672.034 1383.52,686.169 1384.08,687.142 1384.64,722.28 1385.2,738.927 1385.76,751.057 1386.31,749.654 1386.87,781.923 1387.43,792.333 1387.99,820.745 1388.55,765.393 1389.11,740.953 1389.67,721.471 1390.23,709.438 1390.79,691.926 1391.35,676.63 1391.91,708.165 1392.47,675.703 1393.03,692.63 1393.58,675.517 1394.14,693.798 1394.7,708.993 1395.26,723.519 1395.82,716.737 1396.38,682.731 1396.94,651.123 1397.5,684.744 1398.06,718.957 1398.62,750.029 1399.18,728.02 1399.74,742.133 1400.3,724.985 1400.86,754.689 1401.41,771.856 1401.97,750.289 1402.53,730.555 1403.09,728.923 1403.65,728.403 1404.21,743.817 1404.77,743.563 1405.33,738.914 1405.89,736.209 1406.45,749.55 1407.01,764.842 1407.57,791.097 1408.13,770.222 1408.68,752.287 1409.24,751.718 1409.8,734.551 1410.36,698.032 1410.92,700.257 1411.48,746.943 1412.04,711.86 1412.6,708.218 1413.16,756.99 1413.72,739.688 1414.28,738.814 1414.84,732.653 1415.4,743.839 1415.95,725.017 1416.51,706.233 1417.07,675.27 1417.63,673.849 1418.19,641.63 1418.75,631.58 1419.31,635.748 1419.87,654.642 1420.43,671.813 1420.99,640.585 1421.55,645.51 1422.11,650.54 1422.67,634.949 1423.23,654.03 1423.78,655.509 1424.34,691.962 1424.9,670.609 1425.46,669.323 1426.02,702.475 1426.58,718.607 1427.14,698.589 1427.7,715.026 1428.26,696.956 1428.82,678.359 1429.38,662.09 1429.94,684.418 1430.5,686.055 1431.05,688.097 1431.61,722.225 1432.17,671.26 1432.73,638.767 1433.29,591.634 1433.85,580.835 1434.41,602.895 1434.97,572.097 1435.53,577.404 1436.09,565.3 1436.65,555.525 1437.21,595.486 1437.77,647.393 1438.33,632.219 1438.88,631.92 1439.44,633.668 1440,649.477 1440.56,682.953 1441.12,653.784 1441.68,607.031 1442.24,612.576 1442.8,614.363 1443.36,632.373 1443.92,633.992 1444.48,620.482 1445.04,607.116 1445.6,595.16 1446.15,635.819 1446.71,638.48 1447.27,656.237 1447.83,659.896 1448.39,662.346 1448.95,634.117 1449.51,667.514 1450.07,636.432 1450.63,624.278 1451.19,647.084 1451.75,645.961 1452.31,632.13 1452.87,634.98 1453.42,653.832 1453.98,673.705 1454.54,674.205 1455.1,674.649 1455.66,694.371 1456.22,709.632 1456.78,693.572 1457.34,690.663 1457.9,656.828 1458.46,674.359 1459.02,658.001 1459.58,676.581 1460.14,662.101 1460.7,646.412 1461.25,677.738 1461.81,681.329 1462.37,665.989 1462.93,716.53 1463.49,664.692 1464.05,665.122 1464.61,666.033 1465.17,648.24 1465.73,601.544 1466.29,606.374 1466.85,616.523 1467.41,605.038 1467.97,628.323 1468.52,630.938 1469.08,650.323 1469.64,620.01 1470.2,640.386 1470.76,628.283 1471.32,597.825 1471.88,604.484 1472.44,640.515 1473,609.276 1473.56,616.036 1474.12,637.623 1474.68,656.878 1475.24,657.072 1475.79,643.378 1476.35,630.804 1476.91,669.015 1477.47,669.594 1478.03,668.147 1478.59,652.189 1479.15,622.831 1479.71,641.724 1480.27,676.895 1480.83,677.941 1481.39,677.192 1481.95,692.553 1482.51,661.002 1483.07,663.003 1483.62,647.145 1484.18,652.494 1484.74,640.17 1485.3,659.455 1485.86,660.128 1486.42,676.571 1486.98,677.409 1487.54,693.771 1488.1,678.546 1488.66,680.97 1489.22,660.807 1489.78,676.771 1490.34,707.141 1490.89,722.86 1491.45,733.061 1492.01,699.785 1492.57,702.659 1493.13,685.661 1493.69,684.716 1494.25,766.321 1494.81,741.789 1495.37,751.965 1495.93,733.272 1496.49,730.648 1497.05,730.056 1497.61,744.841 1498.16,723.684 1498.72,706.783 1499.28,708.545 1499.84,690.248 1500.4,690.801 1500.96,722.179 1501.52,718.814 1502.08,731.361 1502.64,715.179 1503.2,715.441 1503.76,699.493 1504.32,713.597 1504.88,710.012 1505.44,730.101 1505.99,711.428 1506.55,741.091 1507.11,740.231 1507.67,722.016 1508.23,698.513 1508.79,666.01 1509.35,665.438 1509.91,682.367 1510.47,681.266 1511.03,682.9 1511.59,699.531 1512.15,701.161 1512.71,703.004 1513.26,731.794 1513.82,747.372 1514.38,742.257 1514.94,743.116 1515.5,738.825 1516.06,671.415 1516.62,673.372 1517.18,637.149 1517.74,643.096 1518.3,646.423 1518.86,680.977 1519.42,680.818 1519.98,680.964 1520.53,683.198 1521.09,668.855 1521.65,748.081 1522.21,758.655 1522.77,751.557 1523.33,711.453 1523.89,708.266 1524.45,706.326 1525.01,702.084 1525.57,733.215 1526.13,713.076 1526.69,725.746 1527.25,740.777 1527.81,738.472 1528.36,735.168 1528.92,733.73 1529.48,715.92 1530.04,715.919 1530.6,666.135 1531.16,647.061 1531.72,632.986 1532.28,715.431 1532.84,681.901 1533.4,699.154 1533.96,682.24 1534.52,682.221 1535.08,683.388 1535.63,683.323 1536.19,682.319 1536.75,667.365 1537.31,684.698 1537.87,680.21 1538.43,695.532 1538.99,711.361 1539.55,726.213 1540.11,706.586 1540.67,705.97 1541.23,737.678 1541.79,721.647 1542.35,687.459 1542.9,688.975 1543.46,689.571 1544.02,690.246 1544.58,674.087 1545.14,676.222 1545.7,675.403 1546.26,640.282 1546.82,657.381 1547.38,688.079 1547.94,670.72 1548.5,656.365 1549.06,639.745 1549.62,639.301 1550.18,655.161 1550.73,654.361 1551.29,639.023 1551.85,625.394 1552.41,643.759 1552.97,664.114 1553.53,648.787 1554.09,617.675 1554.65,621.549 1555.21,590.46 1555.77,611.788 1556.33,649.448 1556.89,635.213 1557.45,640.221 1558,596.751 1558.56,597.413 1559.12,588.676 1559.68,606.925 1560.24,628.485 1560.8,647.227 1561.36,617.69 1561.92,623.423 1562.48,643.41 1563.04,642.554 1563.6,624.655 1564.16,623.023 1564.72,596.559 1565.28,619.337 1565.83,652.243 1566.39,619.059 1566.95,639.662 1567.51,626.543 1568.07,643.48 1568.63,678.139 1569.19,676.839 1569.75,754.828 1570.31,718.191 1570.87,715.538 1571.43,744.906 1571.99,740.117 1572.55,701.881 1573.1,732.009 1573.66,697.665 1574.22,682.073 1574.78,683.487 1575.34,679.739 1575.9,648.986 1576.46,655.002 1577.02,642.799 1577.58,630.114 1578.14,612.945 1578.7,618.258 1579.26,589.252 1579.82,626.471 1580.37,631.795 1580.93,616.373 1581.49,616.267 1582.05,635.166 1582.61,622.457 1583.17,626.245 1583.73,628.676 1584.29,649.021 1584.85,679.105 1585.41,663.917 1585.97,713.246 1586.53,710.09 1587.09,754.264 1587.65,751.122 1588.2,748.799 1588.76,775.304 1589.32,773.951 1589.88,754.114 1590.44,734.245 1591,730.669 1591.56,743.785 1592.12,723.225 1592.68,704.95 1593.24,708.356 1593.8,694.209 1594.36,693.333 1594.92,695.391 1595.47,696.077 1596.03,679.291 1596.59,660.408 1597.15,679.997 1597.71,682.217 1598.27,731.079 1598.83,730.264 1599.39,742.772 1599.95,743.686 1600.51,759.993 1601.07,788.771 1601.63,766.069 1602.19,765.637 1602.74,778.186 1603.3,756.342 1603.86,754.967 1604.42,751.019 1604.98,734.267 1605.54,745.73 1606.1,725.326 1606.66,721.509 1607.22,719.27 1607.78,750.547 1608.34,777.896 1608.9,727.175 1609.46,710.511 1610.02,674.462 1610.57,709.671 1611.13,722.884 1611.69,705.835 1612.25,685.904 1612.81,686.56 1613.37,641.376 1613.93,639.308 1614.49,639.763 1615.05,640.853 1615.61,676.357 1616.17,691.375 1616.73,655.266 1617.29,639.249 1617.84,659.82 1618.4,645.699 1618.96,634.978 1619.52,687.787 1620.08,685.231 1620.64,668.973 1621.2,669.542 1621.76,670.363 1622.32,656.336 1622.88,654.476 1623.44,685.396 1624,668.487 1624.56,653.964 1625.11,671.76 1625.67,672.941 1626.23,655.213 1626.79,654.213 1627.35,654.936 1627.91,673.242 1628.47,673.457 1629.03,657.659 1629.59,695.989 1630.15,696.964 1630.71,663.012 1631.27,698.553 1631.83,697.346 1632.39,711.188 1632.94,707.16 1633.5,704.466 1634.06,703.001 1634.62,686.898 1635.18,705.851 1635.74,684.111 1636.3,685.597 1636.86,670.329 1637.42,703.906 1637.98,719.385 1638.54,717.343 1639.1,702.233 1639.66,719.797 1640.21,703.498 1640.77,748.926 1641.33,760.55 1641.89,739.056 1642.45,688.483 1643.01,691.259 1643.57,691.738 1644.13,689.471 1644.69,658.244 1645.25,644.71 1645.81,664.986 1646.37,669.256 1646.93,653.478 1647.48,717.791 1648.04,716.894 1648.6,700.813 1649.16,668.513 1649.72,686.508 1650.28,732.986 1650.84,765.056 1651.4,779.151 1651.96,790.006 1652.52,803.073 1653.08,814.361 1653.64,791.45 1654.2,784.691 1654.76,795.868 1655.31,790.41 1655.87,786.893 1656.43,764.173 1656.99,729.29 1657.55,730.316 1658.11,709.203 1658.67,675.272 1659.23,694.042 1659.79,708.399 1660.35,707.099 1660.91,677.276 1661.47,697.623 1662.03,711.831 1662.58,756.568 1663.14,754.313 1663.7,750.027 1664.26,748.645 1664.82,693.218 1665.38,645.869 1665.94,679.503 1666.5,696.179 1667.06,694.126 1667.62,681.475 1668.18,667.938 1668.74,653.677 1669.3,656.162 1669.85,654.442 1670.41,655.938 1670.97,674.764 1671.53,693.847 1672.09,712.434 1672.65,690.461 1673.21,673.99 1673.77,690.58 1674.33,721.687 1674.89,736.055 1675.45,683.05 1676.01,680.979 1676.57,681.592 1677.13,699.464 1677.68,695.858 1678.24,674.829 1678.8,719.243 1679.36,715.663 1679.92,746.678 1680.48,723.806 1681.04,705.556 1681.6,703.927 1682.16,705.147 1682.72,702.32 1683.28,604.681 1683.84,558.737 1684.4,612.683 1684.95,613.957 1685.51,636.962 1686.07,643.708 1686.63,647.763 1687.19,652.529 1687.75,637.772 1688.31,610.457 1688.87,645.5 1689.43,676.157 1689.99,678.012 1690.55,679.251 1691.11,681.159 1691.67,664.986 1692.23,702.002 1692.78,681.129 1693.34,682.222 1693.9,677.733 1694.46,645.216 1695.02,631.309 1695.58,621.565 1696.14,641.199 1696.7,678.239 1697.26,682.858 1697.82,666.924 1698.38,669.392 1698.94,667.188 1699.5,680.846 1700.05,716.758 1700.61,683.188 1701.17,697.027 1701.73,713.168 1702.29,715.723 1702.85,699.037 1703.41,746.899 1703.97,778.256 1704.53,755.36 1705.09,781.224 1705.65,757.773 1706.21,752.385 1706.77,733.759 1707.32,748.048 1707.88,762.94 1708.44,741.582 1709,704.794 1709.56,685.864 1710.12,687.804 1710.68,653.861 1711.24,675.09 1711.8,661.327 1712.36,646.49 1712.92,631.357 1713.48,648.343 1714.04,678.606 1714.6,679.466 1715.15,614.896 1715.71,605.199 1716.27,625.781 1716.83,614.188 1717.39,615.47 1717.95,617.804 1718.51,586.81 1719.07,590.155 1719.63,594.386 1720.19,615.253 1720.75,638.03 1721.31,622.516 1721.87,638.705 1722.42,611.291 1722.98,616.955 1723.54,621.561 1724.1,624.079 1724.66,613.073 1725.22,615.215 1725.78,640.257 1726.34,674.267 1726.9,663.932 1727.46,677.115 1728.02,691.553 1728.58,674.113 1729.14,688.563 1729.69,672.601 1730.25,689.44 1730.81,708.077 1731.37,706.144 1731.93,658.516 1732.49,625.457 1733.05,641.152 1733.61,615.421 1734.17,619.843 1734.73,625.91 1735.29,645.835 1735.85,647.297 1736.41,648.268 1736.97,665.595 1737.52,646.181 1738.08,633.986 1738.64,604.476 1739.2,577.715 1739.76,586.087 1740.32,574.191 1740.88,576.949 1741.44,570.03 1742,641.836 1742.56,662.961 1743.12,665.237 1743.68,671.025 1744.24,672.578 1744.79,721.465 1745.35,702.074 1745.91,702.32 1746.47,718.632 1747.03,702.273 1747.59,698.696 1748.15,729.751 1748.71,732.287 1749.27,728.085 1749.83,713.271 1750.39,791.026 1750.95,782.486 1751.51,761.96 1752.06,773.037 1752.62,767.459 1753.18,745.182 1753.74,755.184 1754.3,765.371 1754.86,726.879 1755.42,724.716 1755.98,674.905 1756.54,658.959 1757.1,678.946 1757.66,696.661 1758.22,694.291 1758.78,711.103 1759.34,713.474 1759.89,727.619 1760.45,712.184 1761.01,710.215 1761.57,724.919 1762.13,736.27 1762.69,764.694 1763.25,765.329 1763.81,762.781 1764.37,739.319 1764.93,735.825 1765.49,729.373 1766.05,692.804 1766.61,710.362 1767.16,693.414 1767.72,692.412 1768.28,675.092 1768.84,676.873 1769.4,695.237 1769.96,727.47 1770.52,724.803 1771.08,723.591 1771.64,718.199 1772.2,749.878 1772.76,777.821 1773.32,753.331 1773.88,765.647 1774.43,778.895 1774.99,772.654 1775.55,752.676 1776.11,780.861 1776.67,790.008 1777.23,817.17 1777.79,741.952 1778.35,752.267 1778.91,750.741 1779.47,764.437 1780.03,743.774 1780.59,739.705 1781.15,754.535 1781.71,716.287 1782.26,716.738 1782.82,714.213 1783.38,710.571 1783.94,705.966 1784.5,702.923 1785.06,684.392 1785.62,702.293 1786.18,687.809 1786.74,684.027 1787.3,667.603 1787.86,666.452 1788.42,649.948 1788.98,620.366 1789.53,642.274 1790.09,662.107 1790.65,679.876 1791.21,666.886 1791.77,601.546 1792.33,556.295 1792.89,581.605 1793.45,592.666 1794.01,612.818 1794.57,633.54 1795.13,620.157 1795.69,638.02 1796.25,623.498 1796.8,610.838 1797.36,613.641 1797.92,598.158 1798.48,588.225 1799.04,594.64 1799.6,599.946 1800.16,621.004 1800.72,624.662 1801.28,640.815 1801.84,610.836 1802.4,567.07 1802.96,620.641 1803.52,625.388 1804.08,615.115 1804.63,618.273 1805.19,603.616 1805.75,590.518 1806.31,596.511 1806.87,602.395 1807.43,621.38 1807.99,573.398 1808.55,580.564 1809.11,602.943 1809.67,607.264 1810.23,659.624 1810.79,625.719 1811.35,645.616 1811.9,634.327 1812.46,623.082 1813.02,643.377 1813.58,676.339 1814.14,706.646 1814.7,687.873 1815.26,704.757 1815.82,705.616 1816.38,720.618 1816.94,735.308 1817.5,731.378 1818.06,730.287 1818.62,712.654 1819.18,696.349 1819.73,678.045 1820.29,681.173 1820.85,682.206 1821.41,668.445 1821.97,680.267 1822.53,697.766 1823.09,728.131 1823.65,759.024 1824.21,756.259 1824.77,723.274 1825.33,736.835 1825.89,764.322 1826.45,763.105 1827,806.788 1827.56,817.458 1828.12,812.592 1828.68,775.039 1829.24,756.726 1829.8,784.398 1830.36,777.091 1830.92,766.781 1831.48,792.603 1832.04,783.991 1832.6,777.588 1833.16,788.762 1833.72,767.15 1834.27,760.442 1834.83,758.103 1835.39,752.853 1835.95,745.895 1836.51,742.141 1837.07,736.876 1837.63,703.794 1838.19,684.839 \"/>\n<path clip-path=\"url(#clip313)\" d=\"M720.247 691.633 L720.806 691.633 L721.365 691.633 L721.924 691.633 L722.484 691.633 L723.043 691.633 L723.602 691.633 L724.161 691.633 L724.721 691.633 L725.28 691.633 L725.839 691.633 L726.398 691.633 L726.958 691.633 L727.517 691.633 L728.076 691.633 L728.635 691.633 L729.195 691.633 L729.754 691.633 L730.313 691.633 L730.872 691.633 L731.432 691.633 L731.991 691.633 L732.55 691.633 L733.109 691.633 L733.669 691.633 L734.228 691.633 L734.787 691.633 L735.346 691.633 L735.906 691.633 L736.465 691.633 L737.024 691.633 L737.583 691.633 L738.143 691.633 L738.702 691.633 L739.261 691.633 L739.82 691.633 L740.38 691.633 L740.939 691.633 L741.498 691.633 L742.057 691.633 L742.617 691.633 L743.176 691.633 L743.735 691.633 L744.294 691.633 L744.854 691.633 L745.413 691.633 L745.972 691.633 L746.531 691.633 L747.091 691.633 L747.65 691.633 L748.209 691.633 L748.768 691.633 L749.328 691.633 L749.887 691.633 L750.446 691.633 L751.005 691.633 L751.565 691.633 L752.124 691.633 L752.683 691.633 L753.242 691.633 L753.802 691.633 L754.361 691.633 L754.92 691.633 L755.479 691.633 L756.039 691.633 L756.598 691.633 L757.157 691.633 L757.716 691.633 L758.276 691.633 L758.835 691.633 L759.394 691.633 L759.953 691.633 L760.513 691.633 L761.072 691.633 L761.631 691.633 L762.19 691.633 L762.75 691.633 L763.309 691.633 L763.868 691.633 L764.427 691.633 L764.987 691.633 L765.546 691.633 L766.105 691.633 L766.664 691.633 L767.224 691.633 L767.783 691.633 L768.342 691.633 L768.901 691.633 L769.461 691.633 L770.02 691.633 L770.579 691.633 L771.138 691.633 L771.698 691.633 L772.257 691.633 L772.816 691.633 L773.375 691.633 L773.935 691.633 L774.494 691.633 L775.053 691.633 L775.612 691.633 L776.172 691.633 L776.731 691.633 L777.29 691.633 L777.849 691.633 L778.409 691.633 L778.968 691.633 L779.527 691.633 L780.086 691.633 L780.646 691.633 L781.205 691.633 L781.764 691.633 L782.323 691.633 L782.883 691.633 L783.442 691.633 L784.001 691.633 L784.56 691.633 L785.12 691.633 L785.679 691.633 L786.238 691.633 L786.797 691.633 L787.357 691.633 L787.916 691.633 L788.475 691.633 L789.034 691.633 L789.594 691.633 L790.153 691.633 L790.712 691.633 L791.271 691.633 L791.831 691.633 L792.39 691.633 L792.949 691.633 L793.508 691.633 L794.068 691.633 L794.627 691.633 L795.186 691.633 L795.745 691.633 L796.305 691.633 L796.864 691.633 L797.423 691.633 L797.982 691.633 L798.542 691.633 L799.101 691.633 L799.66 691.633 L800.219 691.633 L800.779 691.633 L801.338 691.633 L801.897 691.633 L802.456 691.633 L803.016 691.633 L803.575 691.633 L804.134 691.633 L804.693 691.633 L805.253 691.633 L805.812 691.633 L806.371 691.633 L806.931 691.633 L807.49 691.633 L808.049 691.633 L808.608 691.633 L809.168 691.633 L809.727 691.633 L810.286 691.633 L810.845 691.633 L811.405 691.633 L811.964 691.633 L812.523 691.633 L813.082 691.633 L813.642 691.633 L814.201 691.633 L814.76 691.633 L815.319 691.633 L815.879 691.633 L816.438 691.633 L816.997 691.633 L817.556 691.633 L818.116 691.633 L818.675 691.633 L819.234 691.633 L819.793 691.633 L820.353 691.633 L820.912 691.633 L821.471 691.633 L822.03 691.633 L822.59 691.633 L823.149 691.633 L823.708 691.633 L824.267 691.633 L824.827 691.633 L825.386 691.633 L825.945 691.633 L826.504 691.633 L827.064 691.633 L827.623 691.633 L828.182 691.633 L828.741 691.633 L829.301 691.633 L829.86 691.633 L830.419 691.633 L830.978 691.633 L831.538 691.633 L832.097 691.633 L832.656 691.633 L833.215 691.633 L833.775 691.633 L834.334 691.633 L834.893 691.633 L835.452 691.633 L836.012 691.633 L836.571 691.633 L837.13 691.633 L837.689 691.633 L838.249 691.633 L838.808 691.633 L839.367 691.633 L839.926 691.633 L840.486 691.633 L841.045 691.633 L841.604 691.633 L842.163 691.633 L842.723 691.633 L843.282 691.633 L843.841 691.633 L844.4 691.633 L844.96 691.633 L845.519 691.633 L846.078 691.633 L846.637 691.633 L847.197 691.633 L847.756 691.633 L848.315 691.633 L848.874 691.633 L849.434 691.633 L849.993 691.633 L850.552 691.633 L851.111 691.633 L851.671 691.633 L852.23 691.633 L852.789 691.633 L853.348 691.633 L853.908 691.633 L854.467 691.633 L855.026 691.633 L855.585 691.633 L856.145 691.633 L856.704 691.633 L857.263 691.633 L857.822 691.633 L858.382 691.633 L858.941 691.633 L859.5 691.633 L860.059 691.633 L860.619 691.633 L861.178 691.633 L861.737 691.633 L862.296 691.633 L862.856 691.633 L863.415 691.633 L863.974 691.633 L864.533 691.633 L865.093 691.633 L865.652 691.633 L866.211 691.633 L866.77 691.633 L867.33 691.633 L867.889 691.633 L868.448 691.633 L869.007 691.633 L869.567 691.633 L870.126 691.633 L870.685 691.633 L871.244 691.633 L871.804 691.633 L872.363 691.633 L872.922 691.633 L873.481 691.633 L874.041 691.633 L874.6 691.633 L875.159 691.633 L875.718 691.633 L876.278 691.633 L876.837 691.633 L877.396 691.633 L877.955 691.633 L878.515 691.633 L879.074 691.633 L879.633 691.633 L880.192 691.633 L880.752 691.633 L881.311 691.633 L881.87 691.633 L882.429 691.633 L882.989 691.633 L883.548 691.633 L884.107 691.633 L884.666 691.633 L885.226 691.633 L885.785 691.633 L886.344 691.633 L886.903 691.633 L887.463 691.633 L888.022 691.633 L888.581 691.633 L889.14 691.633 L889.7 691.633 L890.259 691.633 L890.818 691.633 L891.377 691.633 L891.937 691.633 L892.496 691.633 L893.055 691.633 L893.614 691.633 L894.174 691.633 L894.733 691.633 L895.292 691.633 L895.851 691.633 L896.411 691.633 L896.97 691.633 L897.529 691.633 L898.088 691.633 L898.648 691.633 L899.207 691.633 L899.766 691.633 L900.325 691.633 L900.885 691.633 L901.444 691.633 L902.003 691.633 L902.562 691.633 L903.122 691.633 L903.681 691.633 L904.24 691.633 L904.799 691.633 L905.359 691.633 L905.918 691.633 L906.477 691.633 L907.036 691.633 L907.596 691.633 L908.155 691.633 L908.714 691.633 L909.273 691.633 L909.833 691.633 L910.392 691.633 L910.951 691.633 L911.51 691.633 L912.07 691.633 L912.629 691.633 L913.188 691.633 L913.747 691.633 L914.307 691.633 L914.866 691.633 L915.425 691.633 L915.984 691.633 L916.544 691.633 L917.103 691.633 L917.662 691.633 L918.221 691.633 L918.781 691.633 L919.34 691.633 L919.899 691.633 L920.458 691.633 L921.018 691.633 L921.577 691.633 L922.136 691.633 L922.695 691.633 L923.255 691.633 L923.814 691.633 L924.373 691.633 L924.932 691.633 L925.492 691.633 L926.051 691.633 L926.61 691.633 L927.169 691.633 L927.729 691.633 L928.288 691.633 L928.847 691.633 L929.406 691.633 L929.966 691.633 L930.525 691.633 L931.084 691.633 L931.644 691.633 L932.203 691.633 L932.762 691.633 L933.321 691.633 L933.881 691.633 L934.44 691.633 L934.999 691.633 L935.558 691.633 L936.118 691.633 L936.677 691.633 L937.236 691.633 L937.795 691.633 L938.355 691.633 L938.914 691.633 L939.473 691.633 L940.032 691.633 L940.592 691.633 L941.151 691.633 L941.71 691.633 L942.269 691.633 L942.829 691.633 L943.388 691.633 L943.947 691.633 L944.506 691.633 L945.066 691.633 L945.625 691.633 L946.184 691.633 L946.743 691.633 L947.303 691.633 L947.862 691.633 L948.421 691.633 L948.98 691.633 L949.54 691.633 L950.099 691.633 L950.658 691.633 L951.217 691.633 L951.777 691.633 L952.336 691.633 L952.895 691.633 L953.454 691.633 L954.014 691.633 L954.573 691.633 L955.132 691.633 L955.691 691.633 L956.251 691.633 L956.81 691.633 L957.369 691.633 L957.928 691.633 L958.488 691.633 L959.047 691.633 L959.606 691.633 L960.165 691.633 L960.725 691.633 L961.284 691.633 L961.843 691.633 L962.402 691.633 L962.962 691.633 L963.521 691.633 L964.08 691.633 L964.639 691.633 L965.199 691.633 L965.758 691.633 L966.317 691.633 L966.876 691.633 L967.436 691.633 L967.995 691.633 L968.554 691.633 L969.113 691.633 L969.673 691.633 L970.232 691.633 L970.791 691.633 L971.35 691.633 L971.91 691.633 L972.469 691.633 L973.028 691.633 L973.587 691.633 L974.147 691.633 L974.706 691.633 L975.265 691.633 L975.824 691.633 L976.384 691.633 L976.943 691.633 L977.502 691.633 L978.061 691.633 L978.621 691.633 L979.18 691.633 L979.739 691.633 L980.298 691.633 L980.858 691.633 L981.417 691.633 L981.976 691.633 L982.535 691.633 L983.095 691.633 L983.654 691.633 L984.213 691.633 L984.772 691.633 L985.332 691.633 L985.891 691.633 L986.45 691.633 L987.009 691.633 L987.569 691.633 L988.128 691.633 L988.687 691.633 L989.246 691.633 L989.806 691.633 L990.365 691.633 L990.924 691.633 L991.483 691.633 L992.043 691.633 L992.602 691.633 L993.161 691.633 L993.72 691.633 L994.28 691.633 L994.839 691.633 L995.398 691.633 L995.957 691.633 L996.517 691.633 L997.076 691.633 L997.635 691.633 L998.194 691.633 L998.754 691.633 L999.313 691.633 L999.872 691.633 L1000.43 691.633 L1000.99 691.633 L1001.55 691.633 L1002.11 691.633 L1002.67 691.633 L1003.23 691.633 L1003.79 691.633 L1004.35 691.633 L1004.91 691.633 L1005.46 691.633 L1006.02 691.633 L1006.58 691.633 L1007.14 691.633 L1007.7 691.633 L1008.26 691.633 L1008.82 691.633 L1009.38 691.633 L1009.94 691.633 L1010.5 691.633 L1011.06 691.633 L1011.62 691.633 L1012.18 691.633 L1012.73 691.633 L1013.29 691.633 L1013.85 691.633 L1014.41 691.633 L1014.97 691.633 L1015.53 691.633 L1016.09 691.633 L1016.65 691.633 L1017.21 691.633 L1017.77 691.633 L1018.33 691.633 L1018.89 691.633 L1019.45 691.633 L1020.01 691.633 L1020.56 691.633 L1021.12 691.633 L1021.68 691.633 L1022.24 691.633 L1022.8 691.633 L1023.36 691.633 L1023.92 691.633 L1024.48 691.633 L1025.04 691.633 L1025.6 691.633 L1026.16 691.633 L1026.72 691.633 L1027.28 691.633 L1027.83 691.633 L1028.39 691.633 L1028.95 691.633 L1029.51 691.633 L1030.07 691.633 L1030.63 691.633 L1031.19 691.633 L1031.75 691.633 L1032.31 691.633 L1032.87 691.633 L1033.43 691.633 L1033.99 691.633 L1034.55 691.633 L1035.1 691.633 L1035.66 691.633 L1036.22 691.633 L1036.78 691.633 L1037.34 691.633 L1037.9 691.633 L1038.46 691.633 L1039.02 691.633 L1039.58 691.633 L1040.14 691.633 L1040.7 691.633 L1041.26 691.633 L1041.82 691.633 L1042.38 691.633 L1042.93 691.633 L1043.49 691.633 L1044.05 691.633 L1044.61 691.633 L1045.17 691.633 L1045.73 691.633 L1046.29 691.633 L1046.85 691.633 L1047.41 691.633 L1047.97 691.633 L1048.53 691.633 L1049.09 691.633 L1049.65 691.633 L1050.2 691.633 L1050.76 691.633 L1051.32 691.633 L1051.88 691.633 L1052.44 691.633 L1053 691.633 L1053.56 691.633 L1054.12 691.633 L1054.68 691.633 L1055.24 691.633 L1055.8 691.633 L1056.36 691.633 L1056.92 691.633 L1057.48 691.633 L1058.03 691.633 L1058.59 691.633 L1059.15 691.633 L1059.71 691.633 L1060.27 691.633 L1060.83 691.633 L1061.39 691.633 L1061.95 691.633 L1062.51 691.633 L1063.07 691.633 L1063.63 691.633 L1064.19 691.633 L1064.75 691.633 L1065.3 691.633 L1065.86 691.633 L1066.42 691.633 L1066.98 691.633 L1067.54 691.633 L1068.1 691.633 L1068.66 691.633 L1069.22 691.633 L1069.78 691.633 L1070.34 691.633 L1070.9 691.633 L1071.46 691.633 L1072.02 691.633 L1072.57 691.633 L1073.13 691.633 L1073.69 691.633 L1074.25 691.633 L1074.81 691.633 L1075.37 691.633 L1075.93 691.633 L1076.49 691.633 L1077.05 691.633 L1077.61 691.633 L1078.17 691.633 L1078.73 691.633 L1079.29 691.633 L1079.85 691.633 L1080.4 691.633 L1080.96 691.633 L1081.52 691.633 L1082.08 691.633 L1082.64 691.633 L1083.2 691.633 L1083.76 691.633 L1084.32 691.633 L1084.88 691.633 L1085.44 691.633 L1086 691.633 L1086.56 691.633 L1087.12 691.633 L1087.67 691.633 L1088.23 691.633 L1088.79 691.633 L1089.35 691.633 L1089.91 691.633 L1090.47 691.633 L1091.03 691.633 L1091.59 691.633 L1092.15 691.633 L1092.71 691.633 L1093.27 691.633 L1093.83 691.633 L1094.39 691.633 L1094.94 691.633 L1095.5 691.633 L1096.06 691.633 L1096.62 691.633 L1097.18 691.633 L1097.74 691.633 L1098.3 691.633 L1098.86 691.633 L1099.42 691.633 L1099.98 691.633 L1100.54 691.633 L1101.1 691.633 L1101.66 691.633 L1102.22 691.633 L1102.77 691.633 L1103.33 691.633 L1103.89 691.633 L1104.45 691.633 L1105.01 691.633 L1105.57 691.633 L1106.13 691.633 L1106.69 691.633 L1107.25 691.633 L1107.81 691.633 L1108.37 691.633 L1108.93 691.633 L1109.49 691.633 L1110.04 691.633 L1110.6 691.633 L1111.16 691.633 L1111.72 691.633 L1112.28 691.633 L1112.84 691.633 L1113.4 691.633 L1113.96 691.633 L1114.52 691.633 L1115.08 691.633 L1115.64 691.633 L1116.2 691.633 L1116.76 691.633 L1117.31 691.633 L1117.87 691.633 L1118.43 691.633 L1118.99 691.633 L1119.55 691.633 L1120.11 691.633 L1120.67 691.633 L1121.23 691.633 L1121.79 691.633 L1122.35 691.633 L1122.91 691.633 L1123.47 691.633 L1124.03 691.633 L1124.59 691.633 L1125.14 691.633 L1125.7 691.633 L1126.26 691.633 L1126.82 691.633 L1127.38 691.633 L1127.94 691.633 L1128.5 691.633 L1129.06 691.633 L1129.62 691.633 L1130.18 691.633 L1130.74 691.633 L1131.3 691.633 L1131.86 691.633 L1132.41 691.633 L1132.97 691.633 L1133.53 691.633 L1134.09 691.633 L1134.65 691.633 L1135.21 691.633 L1135.77 691.633 L1136.33 691.633 L1136.89 691.633 L1137.45 691.633 L1138.01 691.633 L1138.57 691.633 L1139.13 691.633 L1139.68 691.633 L1140.24 691.633 L1140.8 691.633 L1141.36 691.633 L1141.92 691.633 L1142.48 691.633 L1143.04 691.633 L1143.6 691.633 L1144.16 691.633 L1144.72 691.633 L1145.28 691.633 L1145.84 691.633 L1146.4 691.633 L1146.96 691.633 L1147.51 691.633 L1148.07 691.633 L1148.63 691.633 L1149.19 691.633 L1149.75 691.633 L1150.31 691.633 L1150.87 691.633 L1151.43 691.633 L1151.99 691.633 L1152.55 691.633 L1153.11 691.633 L1153.67 691.633 L1154.23 691.633 L1154.78 691.633 L1155.34 691.633 L1155.9 691.633 L1156.46 691.633 L1157.02 691.633 L1157.58 691.633 L1158.14 691.633 L1158.7 691.633 L1159.26 691.633 L1159.82 691.633 L1160.38 691.633 L1160.94 691.633 L1161.5 691.633 L1162.05 691.633 L1162.61 691.633 L1163.17 691.633 L1163.73 691.633 L1164.29 691.633 L1164.85 691.633 L1165.41 691.633 L1165.97 691.633 L1166.53 691.633 L1167.09 691.633 L1167.65 691.633 L1168.21 691.633 L1168.77 691.633 L1169.33 691.633 L1169.88 691.633 L1170.44 691.633 L1171 691.633 L1171.56 691.633 L1172.12 691.633 L1172.68 691.633 L1173.24 691.633 L1173.8 691.633 L1174.36 691.633 L1174.92 691.633 L1175.48 691.633 L1176.04 691.633 L1176.6 691.633 L1177.15 691.633 L1177.71 691.633 L1178.27 691.633 L1178.83 691.633 L1179.39 691.633 L1179.95 691.633 L1180.51 691.633 L1181.07 691.633 L1181.63 691.633 L1182.19 691.633 L1182.75 691.633 L1183.31 691.633 L1183.87 691.633 L1184.43 691.633 L1184.98 691.633 L1185.54 691.633 L1186.1 691.633 L1186.66 691.633 L1187.22 691.633 L1187.78 691.633 L1188.34 691.633 L1188.9 691.633 L1189.46 691.633 L1190.02 691.633 L1190.58 691.633 L1191.14 691.633 L1191.7 691.633 L1192.25 691.633 L1192.81 691.633 L1193.37 691.633 L1193.93 691.633 L1194.49 691.633 L1195.05 691.633 L1195.61 691.633 L1196.17 691.633 L1196.73 691.633 L1197.29 691.633 L1197.85 691.633 L1198.41 691.633 L1198.97 691.633 L1199.52 691.633 L1200.08 691.633 L1200.64 691.633 L1201.2 691.633 L1201.76 691.633 L1202.32 691.633 L1202.88 691.633 L1203.44 691.633 L1204 691.633 L1204.56 691.633 L1205.12 691.633 L1205.68 691.633 L1206.24 691.633 L1206.8 691.633 L1207.35 691.633 L1207.91 691.633 L1208.47 691.633 L1209.03 691.633 L1209.59 691.633 L1210.15 691.633 L1210.71 691.633 L1211.27 691.633 L1211.83 691.633 L1212.39 691.633 L1212.95 691.633 L1213.51 691.633 L1214.07 691.633 L1214.62 691.633 L1215.18 691.633 L1215.74 691.633 L1216.3 691.633 L1216.86 691.633 L1217.42 691.633 L1217.98 691.633 L1218.54 691.633 L1219.1 691.633 L1219.66 691.633 L1220.22 691.633 L1220.78 691.633 L1221.34 691.633 L1221.89 691.633 L1222.45 691.633 L1223.01 691.633 L1223.57 691.633 L1224.13 691.633 L1224.69 691.633 L1225.25 691.633 L1225.81 691.633 L1226.37 691.633 L1226.93 691.633 L1227.49 691.633 L1228.05 691.633 L1228.61 691.633 L1229.17 691.633 L1229.72 691.633 L1230.28 691.633 L1230.84 691.633 L1231.4 691.633 L1231.96 691.633 L1232.52 691.633 L1233.08 691.633 L1233.64 691.633 L1234.2 691.633 L1234.76 691.633 L1235.32 691.633 L1235.88 691.633 L1236.44 691.633 L1236.99 691.633 L1237.55 691.633 L1238.11 691.633 L1238.67 691.633 L1239.23 691.633 L1239.79 691.633 L1240.35 691.633 L1240.91 691.633 L1241.47 691.633 L1242.03 691.633 L1242.59 691.633 L1243.15 691.633 L1243.71 691.633 L1244.26 691.633 L1244.82 691.633 L1245.38 691.633 L1245.94 691.633 L1246.5 691.633 L1247.06 691.633 L1247.62 691.633 L1248.18 691.633 L1248.74 691.633 L1249.3 691.633 L1249.86 691.633 L1250.42 691.633 L1250.98 691.633 L1251.54 691.633 L1252.09 691.633 L1252.65 691.633 L1253.21 691.633 L1253.77 691.633 L1254.33 691.633 L1254.89 691.633 L1255.45 691.633 L1256.01 691.633 L1256.57 691.633 L1257.13 691.633 L1257.69 691.633 L1258.25 691.633 L1258.81 691.633 L1259.36 691.633 L1259.92 691.633 L1260.48 691.633 L1261.04 691.633 L1261.6 691.633 L1262.16 691.633 L1262.72 691.633 L1263.28 691.633 L1263.84 691.633 L1264.4 691.633 L1264.96 691.633 L1265.52 691.633 L1266.08 691.633 L1266.63 691.633 L1267.19 691.633 L1267.75 691.633 L1268.31 691.633 L1268.87 691.633 L1269.43 691.633 L1269.99 691.633 L1270.55 691.633 L1271.11 691.633 L1271.67 691.633 L1272.23 691.633 L1272.79 691.633 L1273.35 691.633 L1273.91 691.633 L1274.46 691.633 L1275.02 691.633 L1275.58 691.633 L1276.14 691.633 L1276.7 691.633 L1277.26 691.633 L1277.82 691.633 L1278.38 691.633 L1278.94 691.633 L1279.5 691.633 L1280.06 691.633 L1280.62 691.633 L1281.18 691.633 L1281.73 691.633 L1282.29 691.633 L1282.85 691.633 L1283.41 691.633 L1283.97 691.633 L1284.53 691.633 L1285.09 691.633 L1285.65 691.633 L1286.21 691.633 L1286.77 691.633 L1287.33 691.633 L1287.89 691.633 L1288.45 691.633 L1289 691.633 L1289.56 691.633 L1290.12 691.633 L1290.68 691.633 L1291.24 691.633 L1291.8 691.633 L1292.36 691.633 L1292.92 691.633 L1293.48 691.633 L1294.04 691.633 L1294.6 691.633 L1295.16 691.633 L1295.72 691.633 L1296.28 691.633 L1296.83 691.633 L1297.39 691.633 L1297.95 691.633 L1298.51 691.633 L1299.07 691.633 L1299.63 691.633 L1300.19 691.633 L1300.75 691.633 L1301.31 691.633 L1301.87 691.633 L1302.43 691.633 L1302.99 691.633 L1303.55 691.633 L1304.1 691.633 L1304.66 691.633 L1305.22 691.633 L1305.78 691.633 L1306.34 691.633 L1306.9 691.633 L1307.46 691.633 L1308.02 691.633 L1308.58 691.633 L1309.14 691.633 L1309.7 691.633 L1310.26 691.633 L1310.82 691.633 L1311.38 691.633 L1311.93 691.633 L1312.49 691.633 L1313.05 691.633 L1313.61 691.633 L1314.17 691.633 L1314.73 691.633 L1315.29 691.633 L1315.85 691.633 L1316.41 691.633 L1316.97 691.633 L1317.53 691.633 L1318.09 691.633 L1318.65 691.633 L1319.2 691.633 L1319.76 691.633 L1320.32 691.633 L1320.88 691.633 L1321.44 691.633 L1322 691.633 L1322.56 691.633 L1323.12 691.633 L1323.68 691.633 L1324.24 691.633 L1324.8 691.633 L1325.36 691.633 L1325.92 691.633 L1326.47 691.633 L1327.03 691.633 L1327.59 691.633 L1328.15 691.633 L1328.71 691.633 L1329.27 691.633 L1329.83 691.633 L1330.39 691.633 L1330.95 691.633 L1331.51 691.633 L1332.07 691.633 L1332.63 691.633 L1333.19 691.633 L1333.75 691.633 L1334.3 691.633 L1334.86 691.633 L1335.42 691.633 L1335.98 691.633 L1336.54 691.633 L1337.1 691.633 L1337.66 691.633 L1338.22 691.633 L1338.78 691.633 L1339.34 691.633 L1339.9 691.633 L1340.46 691.633 L1341.02 691.633 L1341.57 691.633 L1342.13 691.633 L1342.69 691.633 L1343.25 691.633 L1343.81 691.633 L1344.37 691.633 L1344.93 691.633 L1345.49 691.633 L1346.05 691.633 L1346.61 691.633 L1347.17 691.633 L1347.73 691.633 L1348.29 691.633 L1348.84 691.633 L1349.4 691.633 L1349.96 691.633 L1350.52 691.633 L1351.08 691.633 L1351.64 691.633 L1352.2 691.633 L1352.76 691.633 L1353.32 691.633 L1353.88 691.633 L1354.44 691.633 L1355 691.633 L1355.56 691.633 L1356.12 691.633 L1356.67 691.633 L1357.23 691.633 L1357.79 691.633 L1358.35 691.633 L1358.91 691.633 L1359.47 691.633 L1360.03 691.633 L1360.59 691.633 L1361.15 691.633 L1361.71 691.633 L1362.27 691.633 L1362.83 691.633 L1363.39 691.633 L1363.94 691.633 L1364.5 691.633 L1365.06 691.633 L1365.62 691.633 L1366.18 691.633 L1366.74 691.633 L1367.3 691.633 L1367.86 691.633 L1368.42 691.633 L1368.98 691.633 L1369.54 691.633 L1370.1 691.633 L1370.66 691.633 L1371.21 691.633 L1371.77 691.633 L1372.33 691.633 L1372.89 691.633 L1373.45 691.633 L1374.01 691.633 L1374.57 691.633 L1375.13 691.633 L1375.69 691.633 L1376.25 691.633 L1376.81 691.633 L1377.37 691.633 L1377.93 691.633 L1378.49 691.633 L1379.04 691.633 L1379.6 691.633 L1380.16 691.633 L1380.72 691.633 L1381.28 691.633 L1381.84 691.633 L1382.4 691.633 L1382.96 691.633 L1383.52 691.633 L1384.08 691.633 L1384.64 691.633 L1385.2 691.633 L1385.76 691.633 L1386.31 691.633 L1386.87 691.633 L1387.43 691.633 L1387.99 691.633 L1388.55 691.633 L1389.11 691.633 L1389.67 691.633 L1390.23 691.633 L1390.79 691.633 L1391.35 691.633 L1391.91 691.633 L1392.47 691.633 L1393.03 691.633 L1393.58 691.633 L1394.14 691.633 L1394.7 691.633 L1395.26 691.633 L1395.82 691.633 L1396.38 691.633 L1396.94 691.633 L1397.5 691.633 L1398.06 691.633 L1398.62 691.633 L1399.18 691.633 L1399.74 691.633 L1400.3 691.633 L1400.86 691.633 L1401.41 691.633 L1401.97 691.633 L1402.53 691.633 L1403.09 691.633 L1403.65 691.633 L1404.21 691.633 L1404.77 691.633 L1405.33 691.633 L1405.89 691.633 L1406.45 691.633 L1407.01 691.633 L1407.57 691.633 L1408.13 691.633 L1408.68 691.633 L1409.24 691.633 L1409.8 691.633 L1410.36 691.633 L1410.92 691.633 L1411.48 691.633 L1412.04 691.633 L1412.6 691.633 L1413.16 691.633 L1413.72 691.633 L1414.28 691.633 L1414.84 691.633 L1415.4 691.633 L1415.95 691.633 L1416.51 691.633 L1417.07 691.633 L1417.63 691.633 L1418.19 691.633 L1418.75 691.633 L1419.31 691.633 L1419.87 691.633 L1420.43 691.633 L1420.99 691.633 L1421.55 691.633 L1422.11 691.633 L1422.67 691.633 L1423.23 691.633 L1423.78 691.633 L1424.34 691.633 L1424.9 691.633 L1425.46 691.633 L1426.02 691.633 L1426.58 691.633 L1427.14 691.633 L1427.7 691.633 L1428.26 691.633 L1428.82 691.633 L1429.38 691.633 L1429.94 691.633 L1430.5 691.633 L1431.05 691.633 L1431.61 691.633 L1432.17 691.633 L1432.73 691.633 L1433.29 691.633 L1433.85 691.633 L1434.41 691.633 L1434.97 691.633 L1435.53 691.633 L1436.09 691.633 L1436.65 691.633 L1437.21 691.633 L1437.77 691.633 L1438.33 691.633 L1438.88 691.633 L1439.44 691.633 L1440 691.633 L1440.56 691.633 L1441.12 691.633 L1441.68 691.633 L1442.24 691.633 L1442.8 691.633 L1443.36 691.633 L1443.92 691.633 L1444.48 691.633 L1445.04 691.633 L1445.6 691.633 L1446.15 691.633 L1446.71 691.633 L1447.27 691.633 L1447.83 691.633 L1448.39 691.633 L1448.95 691.633 L1449.51 691.633 L1450.07 691.633 L1450.63 691.633 L1451.19 691.633 L1451.75 691.633 L1452.31 691.633 L1452.87 691.633 L1453.42 691.633 L1453.98 691.633 L1454.54 691.633 L1455.1 691.633 L1455.66 691.633 L1456.22 691.633 L1456.78 691.633 L1457.34 691.633 L1457.9 691.633 L1458.46 691.633 L1459.02 691.633 L1459.58 691.633 L1460.14 691.633 L1460.7 691.633 L1461.25 691.633 L1461.81 691.633 L1462.37 691.633 L1462.93 691.633 L1463.49 691.633 L1464.05 691.633 L1464.61 691.633 L1465.17 691.633 L1465.73 691.633 L1466.29 691.633 L1466.85 691.633 L1467.41 691.633 L1467.97 691.633 L1468.52 691.633 L1469.08 691.633 L1469.64 691.633 L1470.2 691.633 L1470.76 691.633 L1471.32 691.633 L1471.88 691.633 L1472.44 691.633 L1473 691.633 L1473.56 691.633 L1474.12 691.633 L1474.68 691.633 L1475.24 691.633 L1475.79 691.633 L1476.35 691.633 L1476.91 691.633 L1477.47 691.633 L1478.03 691.633 L1478.59 691.633 L1479.15 691.633 L1479.71 691.633 L1480.27 691.633 L1480.83 691.633 L1481.39 691.633 L1481.95 691.633 L1482.51 691.633 L1483.07 691.633 L1483.62 691.633 L1484.18 691.633 L1484.74 691.633 L1485.3 691.633 L1485.86 691.633 L1486.42 691.633 L1486.98 691.633 L1487.54 691.633 L1488.1 691.633 L1488.66 691.633 L1489.22 691.633 L1489.78 691.633 L1490.34 691.633 L1490.89 691.633 L1491.45 691.633 L1492.01 691.633 L1492.57 691.633 L1493.13 691.633 L1493.69 691.633 L1494.25 691.633 L1494.81 691.633 L1495.37 691.633 L1495.93 691.633 L1496.49 691.633 L1497.05 691.633 L1497.61 691.633 L1498.16 691.633 L1498.72 691.633 L1499.28 691.633 L1499.84 691.633 L1500.4 691.633 L1500.96 691.633 L1501.52 691.633 L1502.08 691.633 L1502.64 691.633 L1503.2 691.633 L1503.76 691.633 L1504.32 691.633 L1504.88 691.633 L1505.44 691.633 L1505.99 691.633 L1506.55 691.633 L1507.11 691.633 L1507.67 691.633 L1508.23 691.633 L1508.79 691.633 L1509.35 691.633 L1509.91 691.633 L1510.47 691.633 L1511.03 691.633 L1511.59 691.633 L1512.15 691.633 L1512.71 691.633 L1513.26 691.633 L1513.82 691.633 L1514.38 691.633 L1514.94 691.633 L1515.5 691.633 L1516.06 691.633 L1516.62 691.633 L1517.18 691.633 L1517.74 691.633 L1518.3 691.633 L1518.86 691.633 L1519.42 691.633 L1519.98 691.633 L1520.53 691.633 L1521.09 691.633 L1521.65 691.633 L1522.21 691.633 L1522.77 691.633 L1523.33 691.633 L1523.89 691.633 L1524.45 691.633 L1525.01 691.633 L1525.57 691.633 L1526.13 691.633 L1526.69 691.633 L1527.25 691.633 L1527.81 691.633 L1528.36 691.633 L1528.92 691.633 L1529.48 691.633 L1530.04 691.633 L1530.6 691.633 L1531.16 691.633 L1531.72 691.633 L1532.28 691.633 L1532.84 691.633 L1533.4 691.633 L1533.96 691.633 L1534.52 691.633 L1535.08 691.633 L1535.63 691.633 L1536.19 691.633 L1536.75 691.633 L1537.31 691.633 L1537.87 691.633 L1538.43 691.633 L1538.99 691.633 L1539.55 691.633 L1540.11 691.633 L1540.67 691.633 L1541.23 691.633 L1541.79 691.633 L1542.35 691.633 L1542.9 691.633 L1543.46 691.633 L1544.02 691.633 L1544.58 691.633 L1545.14 691.633 L1545.7 691.633 L1546.26 691.633 L1546.82 691.633 L1547.38 691.633 L1547.94 691.633 L1548.5 691.633 L1549.06 691.633 L1549.62 691.633 L1550.18 691.633 L1550.73 691.633 L1551.29 691.633 L1551.85 691.633 L1552.41 691.633 L1552.97 691.633 L1553.53 691.633 L1554.09 691.633 L1554.65 691.633 L1555.21 691.633 L1555.77 691.633 L1556.33 691.633 L1556.89 691.633 L1557.45 691.633 L1558 691.633 L1558.56 691.633 L1559.12 691.633 L1559.68 691.633 L1560.24 691.633 L1560.8 691.633 L1561.36 691.633 L1561.92 691.633 L1562.48 691.633 L1563.04 691.633 L1563.6 691.633 L1564.16 691.633 L1564.72 691.633 L1565.28 691.633 L1565.83 691.633 L1566.39 691.633 L1566.95 691.633 L1567.51 691.633 L1568.07 691.633 L1568.63 691.633 L1569.19 691.633 L1569.75 691.633 L1570.31 691.633 L1570.87 691.633 L1571.43 691.633 L1571.99 691.633 L1572.55 691.633 L1573.1 691.633 L1573.66 691.633 L1574.22 691.633 L1574.78 691.633 L1575.34 691.633 L1575.9 691.633 L1576.46 691.633 L1577.02 691.633 L1577.58 691.633 L1578.14 691.633 L1578.7 691.633 L1579.26 691.633 L1579.82 691.633 L1580.37 691.633 L1580.93 691.633 L1581.49 691.633 L1582.05 691.633 L1582.61 691.633 L1583.17 691.633 L1583.73 691.633 L1584.29 691.633 L1584.85 691.633 L1585.41 691.633 L1585.97 691.633 L1586.53 691.633 L1587.09 691.633 L1587.65 691.633 L1588.2 691.633 L1588.76 691.633 L1589.32 691.633 L1589.88 691.633 L1590.44 691.633 L1591 691.633 L1591.56 691.633 L1592.12 691.633 L1592.68 691.633 L1593.24 691.633 L1593.8 691.633 L1594.36 691.633 L1594.92 691.633 L1595.47 691.633 L1596.03 691.633 L1596.59 691.633 L1597.15 691.633 L1597.71 691.633 L1598.27 691.633 L1598.83 691.633 L1599.39 691.633 L1599.95 691.633 L1600.51 691.633 L1601.07 691.633 L1601.63 691.633 L1602.19 691.633 L1602.74 691.633 L1603.3 691.633 L1603.86 691.633 L1604.42 691.633 L1604.98 691.633 L1605.54 691.633 L1606.1 691.633 L1606.66 691.633 L1607.22 691.633 L1607.78 691.633 L1608.34 691.633 L1608.9 691.633 L1609.46 691.633 L1610.02 691.633 L1610.57 691.633 L1611.13 691.633 L1611.69 691.633 L1612.25 691.633 L1612.81 691.633 L1613.37 691.633 L1613.93 691.633 L1614.49 691.633 L1615.05 691.633 L1615.61 691.633 L1616.17 691.633 L1616.73 691.633 L1617.29 691.633 L1617.84 691.633 L1618.4 691.633 L1618.96 691.633 L1619.52 691.633 L1620.08 691.633 L1620.64 691.633 L1621.2 691.633 L1621.76 691.633 L1622.32 691.633 L1622.88 691.633 L1623.44 691.633 L1624 691.633 L1624.56 691.633 L1625.11 691.633 L1625.67 691.633 L1626.23 691.633 L1626.79 691.633 L1627.35 691.633 L1627.91 691.633 L1628.47 691.633 L1629.03 691.633 L1629.59 691.633 L1630.15 691.633 L1630.71 691.633 L1631.27 691.633 L1631.83 691.633 L1632.39 691.633 L1632.94 691.633 L1633.5 691.633 L1634.06 691.633 L1634.62 691.633 L1635.18 691.633 L1635.74 691.633 L1636.3 691.633 L1636.86 691.633 L1637.42 691.633 L1637.98 691.633 L1638.54 691.633 L1639.1 691.633 L1639.66 691.633 L1640.21 691.633 L1640.77 691.633 L1641.33 691.633 L1641.89 691.633 L1642.45 691.633 L1643.01 691.633 L1643.57 691.633 L1644.13 691.633 L1644.69 691.633 L1645.25 691.633 L1645.81 691.633 L1646.37 691.633 L1646.93 691.633 L1647.48 691.633 L1648.04 691.633 L1648.6 691.633 L1649.16 691.633 L1649.72 691.633 L1650.28 691.633 L1650.84 691.633 L1651.4 691.633 L1651.96 691.633 L1652.52 691.633 L1653.08 691.633 L1653.64 691.633 L1654.2 691.633 L1654.76 691.633 L1655.31 691.633 L1655.87 691.633 L1656.43 691.633 L1656.99 691.633 L1657.55 691.633 L1658.11 691.633 L1658.67 691.633 L1659.23 691.633 L1659.79 691.633 L1660.35 691.633 L1660.91 691.633 L1661.47 691.633 L1662.03 691.633 L1662.58 691.633 L1663.14 691.633 L1663.7 691.633 L1664.26 691.633 L1664.82 691.633 L1665.38 691.633 L1665.94 691.633 L1666.5 691.633 L1667.06 691.633 L1667.62 691.633 L1668.18 691.633 L1668.74 691.633 L1669.3 691.633 L1669.85 691.633 L1670.41 691.633 L1670.97 691.633 L1671.53 691.633 L1672.09 691.633 L1672.65 691.633 L1673.21 691.633 L1673.77 691.633 L1674.33 691.633 L1674.89 691.633 L1675.45 691.633 L1676.01 691.633 L1676.57 691.633 L1677.13 691.633 L1677.68 691.633 L1678.24 691.633 L1678.8 691.633 L1679.36 691.633 L1679.92 691.633 L1680.48 691.633 L1681.04 691.633 L1681.6 691.633 L1682.16 691.633 L1682.72 691.633 L1683.28 691.633 L1683.84 691.633 L1684.4 691.633 L1684.95 691.633 L1685.51 691.633 L1686.07 691.633 L1686.63 691.633 L1687.19 691.633 L1687.75 691.633 L1688.31 691.633 L1688.87 691.633 L1689.43 691.633 L1689.99 691.633 L1690.55 691.633 L1691.11 691.633 L1691.67 691.633 L1692.23 691.633 L1692.78 691.633 L1693.34 691.633 L1693.9 691.633 L1694.46 691.633 L1695.02 691.633 L1695.58 691.633 L1696.14 691.633 L1696.7 691.633 L1697.26 691.633 L1697.82 691.633 L1698.38 691.633 L1698.94 691.633 L1699.5 691.633 L1700.05 691.633 L1700.61 691.633 L1701.17 691.633 L1701.73 691.633 L1702.29 691.633 L1702.85 691.633 L1703.41 691.633 L1703.97 691.633 L1704.53 691.633 L1705.09 691.633 L1705.65 691.633 L1706.21 691.633 L1706.77 691.633 L1707.32 691.633 L1707.88 691.633 L1708.44 691.633 L1709 691.633 L1709.56 691.633 L1710.12 691.633 L1710.68 691.633 L1711.24 691.633 L1711.8 691.633 L1712.36 691.633 L1712.92 691.633 L1713.48 691.633 L1714.04 691.633 L1714.6 691.633 L1715.15 691.633 L1715.71 691.633 L1716.27 691.633 L1716.83 691.633 L1717.39 691.633 L1717.95 691.633 L1718.51 691.633 L1719.07 691.633 L1719.63 691.633 L1720.19 691.633 L1720.75 691.633 L1721.31 691.633 L1721.87 691.633 L1722.42 691.633 L1722.98 691.633 L1723.54 691.633 L1724.1 691.633 L1724.66 691.633 L1725.22 691.633 L1725.78 691.633 L1726.34 691.633 L1726.9 691.633 L1727.46 691.633 L1728.02 691.633 L1728.58 691.633 L1729.14 691.633 L1729.69 691.633 L1730.25 691.633 L1730.81 691.633 L1731.37 691.633 L1731.93 691.633 L1732.49 691.633 L1733.05 691.633 L1733.61 691.633 L1734.17 691.633 L1734.73 691.633 L1735.29 691.633 L1735.85 691.633 L1736.41 691.633 L1736.97 691.633 L1737.52 691.633 L1738.08 691.633 L1738.64 691.633 L1739.2 691.633 L1739.76 691.633 L1740.32 691.633 L1740.88 691.633 L1741.44 691.633 L1742 691.633 L1742.56 691.633 L1743.12 691.633 L1743.68 691.633 L1744.24 691.633 L1744.79 691.633 L1745.35 691.633 L1745.91 691.633 L1746.47 691.633 L1747.03 691.633 L1747.59 691.633 L1748.15 691.633 L1748.71 691.633 L1749.27 691.633 L1749.83 691.633 L1750.39 691.633 L1750.95 691.633 L1751.51 691.633 L1752.06 691.633 L1752.62 691.633 L1753.18 691.633 L1753.74 691.633 L1754.3 691.633 L1754.86 691.633 L1755.42 691.633 L1755.98 691.633 L1756.54 691.633 L1757.1 691.633 L1757.66 691.633 L1758.22 691.633 L1758.78 691.633 L1759.34 691.633 L1759.89 691.633 L1760.45 691.633 L1761.01 691.633 L1761.57 691.633 L1762.13 691.633 L1762.69 691.633 L1763.25 691.633 L1763.81 691.633 L1764.37 691.633 L1764.93 691.633 L1765.49 691.633 L1766.05 691.633 L1766.61 691.633 L1767.16 691.633 L1767.72 691.633 L1768.28 691.633 L1768.84 691.633 L1769.4 691.633 L1769.96 691.633 L1770.52 691.633 L1771.08 691.633 L1771.64 691.633 L1772.2 691.633 L1772.76 691.633 L1773.32 691.633 L1773.88 691.633 L1774.43 691.633 L1774.99 691.633 L1775.55 691.633 L1776.11 691.633 L1776.67 691.633 L1777.23 691.633 L1777.79 691.633 L1778.35 691.633 L1778.91 691.633 L1779.47 691.633 L1780.03 691.633 L1780.59 691.633 L1781.15 691.633 L1781.71 691.633 L1782.26 691.633 L1782.82 691.633 L1783.38 691.633 L1783.94 691.633 L1784.5 691.633 L1785.06 691.633 L1785.62 691.633 L1786.18 691.633 L1786.74 691.633 L1787.3 691.633 L1787.86 691.633 L1788.42 691.633 L1788.98 691.633 L1789.53 691.633 L1790.09 691.633 L1790.65 691.633 L1791.21 691.633 L1791.77 691.633 L1792.33 691.633 L1792.89 691.633 L1793.45 691.633 L1794.01 691.633 L1794.57 691.633 L1795.13 691.633 L1795.69 691.633 L1796.25 691.633 L1796.8 691.633 L1797.36 691.633 L1797.92 691.633 L1798.48 691.633 L1799.04 691.633 L1799.6 691.633 L1800.16 691.633 L1800.72 691.633 L1801.28 691.633 L1801.84 691.633 L1802.4 691.633 L1802.96 691.633 L1803.52 691.633 L1804.08 691.633 L1804.63 691.633 L1805.19 691.633 L1805.75 691.633 L1806.31 691.633 L1806.87 691.633 L1807.43 691.633 L1807.99 691.633 L1808.55 691.633 L1809.11 691.633 L1809.67 691.633 L1810.23 691.633 L1810.79 691.633 L1811.35 691.633 L1811.9 691.633 L1812.46 691.633 L1813.02 691.633 L1813.58 691.633 L1814.14 691.633 L1814.7 691.633 L1815.26 691.633 L1815.82 691.633 L1816.38 691.633 L1816.94 691.633 L1817.5 691.633 L1818.06 691.633 L1818.62 691.633 L1819.18 691.633 L1819.73 691.633 L1820.29 691.633 L1820.85 691.633 L1821.41 691.633 L1821.97 691.633 L1822.53 691.633 L1823.09 691.633 L1823.65 691.633 L1824.21 691.633 L1824.77 691.633 L1825.33 691.633 L1825.89 691.633 L1826.45 691.633 L1827 691.633 L1827.56 691.633 L1828.12 691.633 L1828.68 691.633 L1829.24 691.633 L1829.8 691.633 L1830.36 691.633 L1830.92 691.633 L1831.48 691.633 L1832.04 691.633 L1832.6 691.633 L1833.16 691.633 L1833.72 691.633 L1834.27 691.633 L1834.83 691.633 L1835.39 691.633 L1835.95 691.633 L1836.51 691.633 L1837.07 691.633 L1837.63 691.633 L1838.19 691.633 L1838.19 683.368 L1837.63 683.368 L1837.07 683.368 L1836.51 683.368 L1835.95 683.368 L1835.39 683.368 L1834.83 683.368 L1834.27 683.368 L1833.72 683.368 L1833.16 683.368 L1832.6 683.368 L1832.04 683.368 L1831.48 683.368 L1830.92 683.368 L1830.36 683.368 L1829.8 683.368 L1829.24 683.368 L1828.68 683.368 L1828.12 683.368 L1827.56 683.368 L1827 683.368 L1826.45 683.368 L1825.89 683.368 L1825.33 683.368 L1824.77 683.368 L1824.21 683.368 L1823.65 683.368 L1823.09 683.368 L1822.53 683.368 L1821.97 683.368 L1821.41 683.368 L1820.85 683.368 L1820.29 683.368 L1819.73 683.368 L1819.18 683.368 L1818.62 683.368 L1818.06 683.368 L1817.5 683.368 L1816.94 683.368 L1816.38 683.368 L1815.82 683.368 L1815.26 683.368 L1814.7 683.368 L1814.14 683.368 L1813.58 683.368 L1813.02 683.368 L1812.46 683.368 L1811.9 683.368 L1811.35 683.368 L1810.79 683.368 L1810.23 683.368 L1809.67 683.368 L1809.11 683.368 L1808.55 683.368 L1807.99 683.368 L1807.43 683.368 L1806.87 683.368 L1806.31 683.368 L1805.75 683.368 L1805.19 683.368 L1804.63 683.368 L1804.08 683.368 L1803.52 683.368 L1802.96 683.368 L1802.4 683.368 L1801.84 683.368 L1801.28 683.368 L1800.72 683.368 L1800.16 683.368 L1799.6 683.368 L1799.04 683.368 L1798.48 683.368 L1797.92 683.368 L1797.36 683.368 L1796.8 683.368 L1796.25 683.368 L1795.69 683.368 L1795.13 683.368 L1794.57 683.368 L1794.01 683.368 L1793.45 683.368 L1792.89 683.368 L1792.33 683.368 L1791.77 683.368 L1791.21 683.368 L1790.65 683.368 L1790.09 683.368 L1789.53 683.368 L1788.98 683.368 L1788.42 683.368 L1787.86 683.368 L1787.3 683.368 L1786.74 683.368 L1786.18 683.368 L1785.62 683.368 L1785.06 683.368 L1784.5 683.368 L1783.94 683.368 L1783.38 683.368 L1782.82 683.368 L1782.26 683.368 L1781.71 683.368 L1781.15 683.368 L1780.59 683.368 L1780.03 683.368 L1779.47 683.368 L1778.91 683.368 L1778.35 683.368 L1777.79 683.368 L1777.23 683.368 L1776.67 683.368 L1776.11 683.368 L1775.55 683.368 L1774.99 683.368 L1774.43 683.368 L1773.88 683.368 L1773.32 683.368 L1772.76 683.368 L1772.2 683.368 L1771.64 683.368 L1771.08 683.368 L1770.52 683.368 L1769.96 683.368 L1769.4 683.368 L1768.84 683.368 L1768.28 683.368 L1767.72 683.368 L1767.16 683.368 L1766.61 683.368 L1766.05 683.368 L1765.49 683.368 L1764.93 683.368 L1764.37 683.368 L1763.81 683.368 L1763.25 683.368 L1762.69 683.368 L1762.13 683.368 L1761.57 683.368 L1761.01 683.368 L1760.45 683.368 L1759.89 683.368 L1759.34 683.368 L1758.78 683.368 L1758.22 683.368 L1757.66 683.368 L1757.1 683.368 L1756.54 683.368 L1755.98 683.368 L1755.42 683.368 L1754.86 683.368 L1754.3 683.368 L1753.74 683.368 L1753.18 683.368 L1752.62 683.368 L1752.06 683.368 L1751.51 683.368 L1750.95 683.368 L1750.39 683.368 L1749.83 683.368 L1749.27 683.368 L1748.71 683.368 L1748.15 683.368 L1747.59 683.368 L1747.03 683.368 L1746.47 683.368 L1745.91 683.368 L1745.35 683.368 L1744.79 683.368 L1744.24 683.368 L1743.68 683.368 L1743.12 683.368 L1742.56 683.368 L1742 683.368 L1741.44 683.368 L1740.88 683.368 L1740.32 683.368 L1739.76 683.368 L1739.2 683.368 L1738.64 683.368 L1738.08 683.368 L1737.52 683.368 L1736.97 683.368 L1736.41 683.368 L1735.85 683.368 L1735.29 683.368 L1734.73 683.368 L1734.17 683.368 L1733.61 683.368 L1733.05 683.368 L1732.49 683.368 L1731.93 683.368 L1731.37 683.368 L1730.81 683.368 L1730.25 683.368 L1729.69 683.368 L1729.14 683.368 L1728.58 683.368 L1728.02 683.368 L1727.46 683.368 L1726.9 683.368 L1726.34 683.368 L1725.78 683.368 L1725.22 683.368 L1724.66 683.368 L1724.1 683.368 L1723.54 683.368 L1722.98 683.368 L1722.42 683.368 L1721.87 683.368 L1721.31 683.368 L1720.75 683.368 L1720.19 683.368 L1719.63 683.368 L1719.07 683.368 L1718.51 683.368 L1717.95 683.368 L1717.39 683.368 L1716.83 683.368 L1716.27 683.368 L1715.71 683.368 L1715.15 683.368 L1714.6 683.368 L1714.04 683.368 L1713.48 683.368 L1712.92 683.368 L1712.36 683.368 L1711.8 683.368 L1711.24 683.368 L1710.68 683.368 L1710.12 683.368 L1709.56 683.368 L1709 683.368 L1708.44 683.368 L1707.88 683.368 L1707.32 683.368 L1706.77 683.368 L1706.21 683.368 L1705.65 683.368 L1705.09 683.368 L1704.53 683.368 L1703.97 683.368 L1703.41 683.368 L1702.85 683.368 L1702.29 683.368 L1701.73 683.368 L1701.17 683.368 L1700.61 683.368 L1700.05 683.368 L1699.5 683.368 L1698.94 683.368 L1698.38 683.368 L1697.82 683.368 L1697.26 683.368 L1696.7 683.368 L1696.14 683.368 L1695.58 683.368 L1695.02 683.368 L1694.46 683.368 L1693.9 683.368 L1693.34 683.368 L1692.78 683.368 L1692.23 683.368 L1691.67 683.368 L1691.11 683.368 L1690.55 683.368 L1689.99 683.368 L1689.43 683.368 L1688.87 683.368 L1688.31 683.368 L1687.75 683.368 L1687.19 683.368 L1686.63 683.368 L1686.07 683.368 L1685.51 683.368 L1684.95 683.368 L1684.4 683.368 L1683.84 683.368 L1683.28 683.368 L1682.72 683.368 L1682.16 683.368 L1681.6 683.368 L1681.04 683.368 L1680.48 683.368 L1679.92 683.368 L1679.36 683.368 L1678.8 683.368 L1678.24 683.368 L1677.68 683.368 L1677.13 683.368 L1676.57 683.368 L1676.01 683.368 L1675.45 683.368 L1674.89 683.368 L1674.33 683.368 L1673.77 683.368 L1673.21 683.368 L1672.65 683.368 L1672.09 683.368 L1671.53 683.368 L1670.97 683.368 L1670.41 683.368 L1669.85 683.368 L1669.3 683.368 L1668.74 683.368 L1668.18 683.368 L1667.62 683.368 L1667.06 683.368 L1666.5 683.368 L1665.94 683.368 L1665.38 683.368 L1664.82 683.368 L1664.26 683.368 L1663.7 683.368 L1663.14 683.368 L1662.58 683.368 L1662.03 683.368 L1661.47 683.368 L1660.91 683.368 L1660.35 683.368 L1659.79 683.368 L1659.23 683.368 L1658.67 683.368 L1658.11 683.368 L1657.55 683.368 L1656.99 683.368 L1656.43 683.368 L1655.87 683.368 L1655.31 683.368 L1654.76 683.368 L1654.2 683.368 L1653.64 683.368 L1653.08 683.368 L1652.52 683.368 L1651.96 683.368 L1651.4 683.368 L1650.84 683.368 L1650.28 683.368 L1649.72 683.368 L1649.16 683.368 L1648.6 683.368 L1648.04 683.368 L1647.48 683.368 L1646.93 683.368 L1646.37 683.368 L1645.81 683.368 L1645.25 683.368 L1644.69 683.368 L1644.13 683.368 L1643.57 683.368 L1643.01 683.368 L1642.45 683.368 L1641.89 683.368 L1641.33 683.368 L1640.77 683.368 L1640.21 683.368 L1639.66 683.368 L1639.1 683.368 L1638.54 683.368 L1637.98 683.368 L1637.42 683.368 L1636.86 683.368 L1636.3 683.368 L1635.74 683.368 L1635.18 683.368 L1634.62 683.368 L1634.06 683.368 L1633.5 683.368 L1632.94 683.368 L1632.39 683.368 L1631.83 683.368 L1631.27 683.368 L1630.71 683.368 L1630.15 683.368 L1629.59 683.368 L1629.03 683.368 L1628.47 683.368 L1627.91 683.368 L1627.35 683.368 L1626.79 683.368 L1626.23 683.368 L1625.67 683.368 L1625.11 683.368 L1624.56 683.368 L1624 683.368 L1623.44 683.368 L1622.88 683.368 L1622.32 683.368 L1621.76 683.368 L1621.2 683.368 L1620.64 683.368 L1620.08 683.368 L1619.52 683.368 L1618.96 683.368 L1618.4 683.368 L1617.84 683.368 L1617.29 683.368 L1616.73 683.368 L1616.17 683.368 L1615.61 683.368 L1615.05 683.368 L1614.49 683.368 L1613.93 683.368 L1613.37 683.368 L1612.81 683.368 L1612.25 683.368 L1611.69 683.368 L1611.13 683.368 L1610.57 683.368 L1610.02 683.368 L1609.46 683.368 L1608.9 683.368 L1608.34 683.368 L1607.78 683.368 L1607.22 683.368 L1606.66 683.368 L1606.1 683.368 L1605.54 683.368 L1604.98 683.368 L1604.42 683.368 L1603.86 683.368 L1603.3 683.368 L1602.74 683.368 L1602.19 683.368 L1601.63 683.368 L1601.07 683.368 L1600.51 683.368 L1599.95 683.368 L1599.39 683.368 L1598.83 683.368 L1598.27 683.368 L1597.71 683.368 L1597.15 683.368 L1596.59 683.368 L1596.03 683.368 L1595.47 683.368 L1594.92 683.368 L1594.36 683.368 L1593.8 683.368 L1593.24 683.368 L1592.68 683.368 L1592.12 683.368 L1591.56 683.368 L1591 683.368 L1590.44 683.368 L1589.88 683.368 L1589.32 683.368 L1588.76 683.368 L1588.2 683.368 L1587.65 683.368 L1587.09 683.368 L1586.53 683.368 L1585.97 683.368 L1585.41 683.368 L1584.85 683.368 L1584.29 683.368 L1583.73 683.368 L1583.17 683.368 L1582.61 683.368 L1582.05 683.368 L1581.49 683.368 L1580.93 683.368 L1580.37 683.368 L1579.82 683.368 L1579.26 683.368 L1578.7 683.368 L1578.14 683.368 L1577.58 683.368 L1577.02 683.368 L1576.46 683.368 L1575.9 683.368 L1575.34 683.368 L1574.78 683.368 L1574.22 683.368 L1573.66 683.368 L1573.1 683.368 L1572.55 683.368 L1571.99 683.368 L1571.43 683.368 L1570.87 683.368 L1570.31 683.368 L1569.75 683.368 L1569.19 683.368 L1568.63 683.368 L1568.07 683.368 L1567.51 683.368 L1566.95 683.368 L1566.39 683.368 L1565.83 683.368 L1565.28 683.368 L1564.72 683.368 L1564.16 683.368 L1563.6 683.368 L1563.04 683.368 L1562.48 683.368 L1561.92 683.368 L1561.36 683.368 L1560.8 683.368 L1560.24 683.368 L1559.68 683.368 L1559.12 683.368 L1558.56 683.368 L1558 683.368 L1557.45 683.368 L1556.89 683.368 L1556.33 683.368 L1555.77 683.368 L1555.21 683.368 L1554.65 683.368 L1554.09 683.368 L1553.53 683.368 L1552.97 683.368 L1552.41 683.368 L1551.85 683.368 L1551.29 683.368 L1550.73 683.368 L1550.18 683.368 L1549.62 683.368 L1549.06 683.368 L1548.5 683.368 L1547.94 683.368 L1547.38 683.368 L1546.82 683.368 L1546.26 683.368 L1545.7 683.368 L1545.14 683.368 L1544.58 683.368 L1544.02 683.368 L1543.46 683.368 L1542.9 683.368 L1542.35 683.368 L1541.79 683.368 L1541.23 683.368 L1540.67 683.368 L1540.11 683.368 L1539.55 683.368 L1538.99 683.368 L1538.43 683.368 L1537.87 683.368 L1537.31 683.368 L1536.75 683.368 L1536.19 683.368 L1535.63 683.368 L1535.08 683.368 L1534.52 683.368 L1533.96 683.368 L1533.4 683.368 L1532.84 683.368 L1532.28 683.368 L1531.72 683.368 L1531.16 683.368 L1530.6 683.368 L1530.04 683.368 L1529.48 683.368 L1528.92 683.368 L1528.36 683.368 L1527.81 683.368 L1527.25 683.368 L1526.69 683.368 L1526.13 683.368 L1525.57 683.368 L1525.01 683.368 L1524.45 683.368 L1523.89 683.368 L1523.33 683.368 L1522.77 683.368 L1522.21 683.368 L1521.65 683.368 L1521.09 683.368 L1520.53 683.368 L1519.98 683.368 L1519.42 683.368 L1518.86 683.368 L1518.3 683.368 L1517.74 683.368 L1517.18 683.368 L1516.62 683.368 L1516.06 683.368 L1515.5 683.368 L1514.94 683.368 L1514.38 683.368 L1513.82 683.368 L1513.26 683.368 L1512.71 683.368 L1512.15 683.368 L1511.59 683.368 L1511.03 683.368 L1510.47 683.368 L1509.91 683.368 L1509.35 683.368 L1508.79 683.368 L1508.23 683.368 L1507.67 683.368 L1507.11 683.368 L1506.55 683.368 L1505.99 683.368 L1505.44 683.368 L1504.88 683.368 L1504.32 683.368 L1503.76 683.368 L1503.2 683.368 L1502.64 683.368 L1502.08 683.368 L1501.52 683.368 L1500.96 683.368 L1500.4 683.368 L1499.84 683.368 L1499.28 683.368 L1498.72 683.368 L1498.16 683.368 L1497.61 683.368 L1497.05 683.368 L1496.49 683.368 L1495.93 683.368 L1495.37 683.368 L1494.81 683.368 L1494.25 683.368 L1493.69 683.368 L1493.13 683.368 L1492.57 683.368 L1492.01 683.368 L1491.45 683.368 L1490.89 683.368 L1490.34 683.368 L1489.78 683.368 L1489.22 683.368 L1488.66 683.368 L1488.1 683.368 L1487.54 683.368 L1486.98 683.368 L1486.42 683.368 L1485.86 683.368 L1485.3 683.368 L1484.74 683.368 L1484.18 683.368 L1483.62 683.368 L1483.07 683.368 L1482.51 683.368 L1481.95 683.368 L1481.39 683.368 L1480.83 683.368 L1480.27 683.368 L1479.71 683.368 L1479.15 683.368 L1478.59 683.368 L1478.03 683.368 L1477.47 683.368 L1476.91 683.368 L1476.35 683.368 L1475.79 683.368 L1475.24 683.368 L1474.68 683.368 L1474.12 683.368 L1473.56 683.368 L1473 683.368 L1472.44 683.368 L1471.88 683.368 L1471.32 683.368 L1470.76 683.368 L1470.2 683.368 L1469.64 683.368 L1469.08 683.368 L1468.52 683.368 L1467.97 683.368 L1467.41 683.368 L1466.85 683.368 L1466.29 683.368 L1465.73 683.368 L1465.17 683.368 L1464.61 683.368 L1464.05 683.368 L1463.49 683.368 L1462.93 683.368 L1462.37 683.368 L1461.81 683.368 L1461.25 683.368 L1460.7 683.368 L1460.14 683.368 L1459.58 683.368 L1459.02 683.368 L1458.46 683.368 L1457.9 683.368 L1457.34 683.368 L1456.78 683.368 L1456.22 683.368 L1455.66 683.368 L1455.1 683.368 L1454.54 683.368 L1453.98 683.368 L1453.42 683.368 L1452.87 683.368 L1452.31 683.368 L1451.75 683.368 L1451.19 683.368 L1450.63 683.368 L1450.07 683.368 L1449.51 683.368 L1448.95 683.368 L1448.39 683.368 L1447.83 683.368 L1447.27 683.368 L1446.71 683.368 L1446.15 683.368 L1445.6 683.368 L1445.04 683.368 L1444.48 683.368 L1443.92 683.368 L1443.36 683.368 L1442.8 683.368 L1442.24 683.368 L1441.68 683.368 L1441.12 683.368 L1440.56 683.368 L1440 683.368 L1439.44 683.368 L1438.88 683.368 L1438.33 683.368 L1437.77 683.368 L1437.21 683.368 L1436.65 683.368 L1436.09 683.368 L1435.53 683.368 L1434.97 683.368 L1434.41 683.368 L1433.85 683.368 L1433.29 683.368 L1432.73 683.368 L1432.17 683.368 L1431.61 683.368 L1431.05 683.368 L1430.5 683.368 L1429.94 683.368 L1429.38 683.368 L1428.82 683.368 L1428.26 683.368 L1427.7 683.368 L1427.14 683.368 L1426.58 683.368 L1426.02 683.368 L1425.46 683.368 L1424.9 683.368 L1424.34 683.368 L1423.78 683.368 L1423.23 683.368 L1422.67 683.368 L1422.11 683.368 L1421.55 683.368 L1420.99 683.368 L1420.43 683.368 L1419.87 683.368 L1419.31 683.368 L1418.75 683.368 L1418.19 683.368 L1417.63 683.368 L1417.07 683.368 L1416.51 683.368 L1415.95 683.368 L1415.4 683.368 L1414.84 683.368 L1414.28 683.368 L1413.72 683.368 L1413.16 683.368 L1412.6 683.368 L1412.04 683.368 L1411.48 683.368 L1410.92 683.368 L1410.36 683.368 L1409.8 683.368 L1409.24 683.368 L1408.68 683.368 L1408.13 683.368 L1407.57 683.368 L1407.01 683.368 L1406.45 683.368 L1405.89 683.368 L1405.33 683.368 L1404.77 683.368 L1404.21 683.368 L1403.65 683.368 L1403.09 683.368 L1402.53 683.368 L1401.97 683.368 L1401.41 683.368 L1400.86 683.368 L1400.3 683.368 L1399.74 683.368 L1399.18 683.368 L1398.62 683.368 L1398.06 683.368 L1397.5 683.368 L1396.94 683.368 L1396.38 683.368 L1395.82 683.368 L1395.26 683.368 L1394.7 683.368 L1394.14 683.368 L1393.58 683.368 L1393.03 683.368 L1392.47 683.368 L1391.91 683.368 L1391.35 683.368 L1390.79 683.368 L1390.23 683.368 L1389.67 683.368 L1389.11 683.368 L1388.55 683.368 L1387.99 683.368 L1387.43 683.368 L1386.87 683.368 L1386.31 683.368 L1385.76 683.368 L1385.2 683.368 L1384.64 683.368 L1384.08 683.368 L1383.52 683.368 L1382.96 683.368 L1382.4 683.368 L1381.84 683.368 L1381.28 683.368 L1380.72 683.368 L1380.16 683.368 L1379.6 683.368 L1379.04 683.368 L1378.49 683.368 L1377.93 683.368 L1377.37 683.368 L1376.81 683.368 L1376.25 683.368 L1375.69 683.368 L1375.13 683.368 L1374.57 683.368 L1374.01 683.368 L1373.45 683.368 L1372.89 683.368 L1372.33 683.368 L1371.77 683.368 L1371.21 683.368 L1370.66 683.368 L1370.1 683.368 L1369.54 683.368 L1368.98 683.368 L1368.42 683.368 L1367.86 683.368 L1367.3 683.368 L1366.74 683.368 L1366.18 683.368 L1365.62 683.368 L1365.06 683.368 L1364.5 683.368 L1363.94 683.368 L1363.39 683.368 L1362.83 683.368 L1362.27 683.368 L1361.71 683.368 L1361.15 683.368 L1360.59 683.368 L1360.03 683.368 L1359.47 683.368 L1358.91 683.368 L1358.35 683.368 L1357.79 683.368 L1357.23 683.368 L1356.67 683.368 L1356.12 683.368 L1355.56 683.368 L1355 683.368 L1354.44 683.368 L1353.88 683.368 L1353.32 683.368 L1352.76 683.368 L1352.2 683.368 L1351.64 683.368 L1351.08 683.368 L1350.52 683.368 L1349.96 683.368 L1349.4 683.368 L1348.84 683.368 L1348.29 683.368 L1347.73 683.368 L1347.17 683.368 L1346.61 683.368 L1346.05 683.368 L1345.49 683.368 L1344.93 683.368 L1344.37 683.368 L1343.81 683.368 L1343.25 683.368 L1342.69 683.368 L1342.13 683.368 L1341.57 683.368 L1341.02 683.368 L1340.46 683.368 L1339.9 683.368 L1339.34 683.368 L1338.78 683.368 L1338.22 683.368 L1337.66 683.368 L1337.1 683.368 L1336.54 683.368 L1335.98 683.368 L1335.42 683.368 L1334.86 683.368 L1334.3 683.368 L1333.75 683.368 L1333.19 683.368 L1332.63 683.368 L1332.07 683.368 L1331.51 683.368 L1330.95 683.368 L1330.39 683.368 L1329.83 683.368 L1329.27 683.368 L1328.71 683.368 L1328.15 683.368 L1327.59 683.368 L1327.03 683.368 L1326.47 683.368 L1325.92 683.368 L1325.36 683.368 L1324.8 683.368 L1324.24 683.368 L1323.68 683.368 L1323.12 683.368 L1322.56 683.368 L1322 683.368 L1321.44 683.368 L1320.88 683.368 L1320.32 683.368 L1319.76 683.368 L1319.2 683.368 L1318.65 683.368 L1318.09 683.368 L1317.53 683.368 L1316.97 683.368 L1316.41 683.368 L1315.85 683.368 L1315.29 683.368 L1314.73 683.368 L1314.17 683.368 L1313.61 683.368 L1313.05 683.368 L1312.49 683.368 L1311.93 683.368 L1311.38 683.368 L1310.82 683.368 L1310.26 683.368 L1309.7 683.368 L1309.14 683.368 L1308.58 683.368 L1308.02 683.368 L1307.46 683.368 L1306.9 683.368 L1306.34 683.368 L1305.78 683.368 L1305.22 683.368 L1304.66 683.368 L1304.1 683.368 L1303.55 683.368 L1302.99 683.368 L1302.43 683.368 L1301.87 683.368 L1301.31 683.368 L1300.75 683.368 L1300.19 683.368 L1299.63 683.368 L1299.07 683.368 L1298.51 683.368 L1297.95 683.368 L1297.39 683.368 L1296.83 683.368 L1296.28 683.368 L1295.72 683.368 L1295.16 683.368 L1294.6 683.368 L1294.04 683.368 L1293.48 683.368 L1292.92 683.368 L1292.36 683.368 L1291.8 683.368 L1291.24 683.368 L1290.68 683.368 L1290.12 683.368 L1289.56 683.368 L1289 683.368 L1288.45 683.368 L1287.89 683.368 L1287.33 683.368 L1286.77 683.368 L1286.21 683.368 L1285.65 683.368 L1285.09 683.368 L1284.53 683.368 L1283.97 683.368 L1283.41 683.368 L1282.85 683.368 L1282.29 683.368 L1281.73 683.368 L1281.18 683.368 L1280.62 683.368 L1280.06 683.368 L1279.5 683.368 L1278.94 683.368 L1278.38 683.368 L1277.82 683.368 L1277.26 683.368 L1276.7 683.368 L1276.14 683.368 L1275.58 683.368 L1275.02 683.368 L1274.46 683.368 L1273.91 683.368 L1273.35 683.368 L1272.79 683.368 L1272.23 683.368 L1271.67 683.368 L1271.11 683.368 L1270.55 683.368 L1269.99 683.368 L1269.43 683.368 L1268.87 683.368 L1268.31 683.368 L1267.75 683.368 L1267.19 683.368 L1266.63 683.368 L1266.08 683.368 L1265.52 683.368 L1264.96 683.368 L1264.4 683.368 L1263.84 683.368 L1263.28 683.368 L1262.72 683.368 L1262.16 683.368 L1261.6 683.368 L1261.04 683.368 L1260.48 683.368 L1259.92 683.368 L1259.36 683.368 L1258.81 683.368 L1258.25 683.368 L1257.69 683.368 L1257.13 683.368 L1256.57 683.368 L1256.01 683.368 L1255.45 683.368 L1254.89 683.368 L1254.33 683.368 L1253.77 683.368 L1253.21 683.368 L1252.65 683.368 L1252.09 683.368 L1251.54 683.368 L1250.98 683.368 L1250.42 683.368 L1249.86 683.368 L1249.3 683.368 L1248.74 683.368 L1248.18 683.368 L1247.62 683.368 L1247.06 683.368 L1246.5 683.368 L1245.94 683.368 L1245.38 683.368 L1244.82 683.368 L1244.26 683.368 L1243.71 683.368 L1243.15 683.368 L1242.59 683.368 L1242.03 683.368 L1241.47 683.368 L1240.91 683.368 L1240.35 683.368 L1239.79 683.368 L1239.23 683.368 L1238.67 683.368 L1238.11 683.368 L1237.55 683.368 L1236.99 683.368 L1236.44 683.368 L1235.88 683.368 L1235.32 683.368 L1234.76 683.368 L1234.2 683.368 L1233.64 683.368 L1233.08 683.368 L1232.52 683.368 L1231.96 683.368 L1231.4 683.368 L1230.84 683.368 L1230.28 683.368 L1229.72 683.368 L1229.17 683.368 L1228.61 683.368 L1228.05 683.368 L1227.49 683.368 L1226.93 683.368 L1226.37 683.368 L1225.81 683.368 L1225.25 683.368 L1224.69 683.368 L1224.13 683.368 L1223.57 683.368 L1223.01 683.368 L1222.45 683.368 L1221.89 683.368 L1221.34 683.368 L1220.78 683.368 L1220.22 683.368 L1219.66 683.368 L1219.1 683.368 L1218.54 683.368 L1217.98 683.368 L1217.42 683.368 L1216.86 683.368 L1216.3 683.368 L1215.74 683.368 L1215.18 683.368 L1214.62 683.368 L1214.07 683.368 L1213.51 683.368 L1212.95 683.368 L1212.39 683.368 L1211.83 683.368 L1211.27 683.368 L1210.71 683.368 L1210.15 683.368 L1209.59 683.368 L1209.03 683.368 L1208.47 683.368 L1207.91 683.368 L1207.35 683.368 L1206.8 683.368 L1206.24 683.368 L1205.68 683.368 L1205.12 683.368 L1204.56 683.368 L1204 683.368 L1203.44 683.368 L1202.88 683.368 L1202.32 683.368 L1201.76 683.368 L1201.2 683.368 L1200.64 683.368 L1200.08 683.368 L1199.52 683.368 L1198.97 683.368 L1198.41 683.368 L1197.85 683.368 L1197.29 683.368 L1196.73 683.368 L1196.17 683.368 L1195.61 683.368 L1195.05 683.368 L1194.49 683.368 L1193.93 683.368 L1193.37 683.368 L1192.81 683.368 L1192.25 683.368 L1191.7 683.368 L1191.14 683.368 L1190.58 683.368 L1190.02 683.368 L1189.46 683.368 L1188.9 683.368 L1188.34 683.368 L1187.78 683.368 L1187.22 683.368 L1186.66 683.368 L1186.1 683.368 L1185.54 683.368 L1184.98 683.368 L1184.43 683.368 L1183.87 683.368 L1183.31 683.368 L1182.75 683.368 L1182.19 683.368 L1181.63 683.368 L1181.07 683.368 L1180.51 683.368 L1179.95 683.368 L1179.39 683.368 L1178.83 683.368 L1178.27 683.368 L1177.71 683.368 L1177.15 683.368 L1176.6 683.368 L1176.04 683.368 L1175.48 683.368 L1174.92 683.368 L1174.36 683.368 L1173.8 683.368 L1173.24 683.368 L1172.68 683.368 L1172.12 683.368 L1171.56 683.368 L1171 683.368 L1170.44 683.368 L1169.88 683.368 L1169.33 683.368 L1168.77 683.368 L1168.21 683.368 L1167.65 683.368 L1167.09 683.368 L1166.53 683.368 L1165.97 683.368 L1165.41 683.368 L1164.85 683.368 L1164.29 683.368 L1163.73 683.368 L1163.17 683.368 L1162.61 683.368 L1162.05 683.368 L1161.5 683.368 L1160.94 683.368 L1160.38 683.368 L1159.82 683.368 L1159.26 683.368 L1158.7 683.368 L1158.14 683.368 L1157.58 683.368 L1157.02 683.368 L1156.46 683.368 L1155.9 683.368 L1155.34 683.368 L1154.78 683.368 L1154.23 683.368 L1153.67 683.368 L1153.11 683.368 L1152.55 683.368 L1151.99 683.368 L1151.43 683.368 L1150.87 683.368 L1150.31 683.368 L1149.75 683.368 L1149.19 683.368 L1148.63 683.368 L1148.07 683.368 L1147.51 683.368 L1146.96 683.368 L1146.4 683.368 L1145.84 683.368 L1145.28 683.368 L1144.72 683.368 L1144.16 683.368 L1143.6 683.368 L1143.04 683.368 L1142.48 683.368 L1141.92 683.368 L1141.36 683.368 L1140.8 683.368 L1140.24 683.368 L1139.68 683.368 L1139.13 683.368 L1138.57 683.368 L1138.01 683.368 L1137.45 683.368 L1136.89 683.368 L1136.33 683.368 L1135.77 683.368 L1135.21 683.368 L1134.65 683.368 L1134.09 683.368 L1133.53 683.368 L1132.97 683.368 L1132.41 683.368 L1131.86 683.368 L1131.3 683.368 L1130.74 683.368 L1130.18 683.368 L1129.62 683.368 L1129.06 683.368 L1128.5 683.368 L1127.94 683.368 L1127.38 683.368 L1126.82 683.368 L1126.26 683.368 L1125.7 683.368 L1125.14 683.368 L1124.59 683.368 L1124.03 683.368 L1123.47 683.368 L1122.91 683.368 L1122.35 683.368 L1121.79 683.368 L1121.23 683.368 L1120.67 683.368 L1120.11 683.368 L1119.55 683.368 L1118.99 683.368 L1118.43 683.368 L1117.87 683.368 L1117.31 683.368 L1116.76 683.368 L1116.2 683.368 L1115.64 683.368 L1115.08 683.368 L1114.52 683.368 L1113.96 683.368 L1113.4 683.368 L1112.84 683.368 L1112.28 683.368 L1111.72 683.368 L1111.16 683.368 L1110.6 683.368 L1110.04 683.368 L1109.49 683.368 L1108.93 683.368 L1108.37 683.368 L1107.81 683.368 L1107.25 683.368 L1106.69 683.368 L1106.13 683.368 L1105.57 683.368 L1105.01 683.368 L1104.45 683.368 L1103.89 683.368 L1103.33 683.368 L1102.77 683.368 L1102.22 683.368 L1101.66 683.368 L1101.1 683.368 L1100.54 683.368 L1099.98 683.368 L1099.42 683.368 L1098.86 683.368 L1098.3 683.368 L1097.74 683.368 L1097.18 683.368 L1096.62 683.368 L1096.06 683.368 L1095.5 683.368 L1094.94 683.368 L1094.39 683.368 L1093.83 683.368 L1093.27 683.368 L1092.71 683.368 L1092.15 683.368 L1091.59 683.368 L1091.03 683.368 L1090.47 683.368 L1089.91 683.368 L1089.35 683.368 L1088.79 683.368 L1088.23 683.368 L1087.67 683.368 L1087.12 683.368 L1086.56 683.368 L1086 683.368 L1085.44 683.368 L1084.88 683.368 L1084.32 683.368 L1083.76 683.368 L1083.2 683.368 L1082.64 683.368 L1082.08 683.368 L1081.52 683.368 L1080.96 683.368 L1080.4 683.368 L1079.85 683.368 L1079.29 683.368 L1078.73 683.368 L1078.17 683.368 L1077.61 683.368 L1077.05 683.368 L1076.49 683.368 L1075.93 683.368 L1075.37 683.368 L1074.81 683.368 L1074.25 683.368 L1073.69 683.368 L1073.13 683.368 L1072.57 683.368 L1072.02 683.368 L1071.46 683.368 L1070.9 683.368 L1070.34 683.368 L1069.78 683.368 L1069.22 683.368 L1068.66 683.368 L1068.1 683.368 L1067.54 683.368 L1066.98 683.368 L1066.42 683.368 L1065.86 683.368 L1065.3 683.368 L1064.75 683.368 L1064.19 683.368 L1063.63 683.368 L1063.07 683.368 L1062.51 683.368 L1061.95 683.368 L1061.39 683.368 L1060.83 683.368 L1060.27 683.368 L1059.71 683.368 L1059.15 683.368 L1058.59 683.368 L1058.03 683.368 L1057.48 683.368 L1056.92 683.368 L1056.36 683.368 L1055.8 683.368 L1055.24 683.368 L1054.68 683.368 L1054.12 683.368 L1053.56 683.368 L1053 683.368 L1052.44 683.368 L1051.88 683.368 L1051.32 683.368 L1050.76 683.368 L1050.2 683.368 L1049.65 683.368 L1049.09 683.368 L1048.53 683.368 L1047.97 683.368 L1047.41 683.368 L1046.85 683.368 L1046.29 683.368 L1045.73 683.368 L1045.17 683.368 L1044.61 683.368 L1044.05 683.368 L1043.49 683.368 L1042.93 683.368 L1042.38 683.368 L1041.82 683.368 L1041.26 683.368 L1040.7 683.368 L1040.14 683.368 L1039.58 683.368 L1039.02 683.368 L1038.46 683.368 L1037.9 683.368 L1037.34 683.368 L1036.78 683.368 L1036.22 683.368 L1035.66 683.368 L1035.1 683.368 L1034.55 683.368 L1033.99 683.368 L1033.43 683.368 L1032.87 683.368 L1032.31 683.368 L1031.75 683.368 L1031.19 683.368 L1030.63 683.368 L1030.07 683.368 L1029.51 683.368 L1028.95 683.368 L1028.39 683.368 L1027.83 683.368 L1027.28 683.368 L1026.72 683.368 L1026.16 683.368 L1025.6 683.368 L1025.04 683.368 L1024.48 683.368 L1023.92 683.368 L1023.36 683.368 L1022.8 683.368 L1022.24 683.368 L1021.68 683.368 L1021.12 683.368 L1020.56 683.368 L1020.01 683.368 L1019.45 683.368 L1018.89 683.368 L1018.33 683.368 L1017.77 683.368 L1017.21 683.368 L1016.65 683.368 L1016.09 683.368 L1015.53 683.368 L1014.97 683.368 L1014.41 683.368 L1013.85 683.368 L1013.29 683.368 L1012.73 683.368 L1012.18 683.368 L1011.62 683.368 L1011.06 683.368 L1010.5 683.368 L1009.94 683.368 L1009.38 683.368 L1008.82 683.368 L1008.26 683.368 L1007.7 683.368 L1007.14 683.368 L1006.58 683.368 L1006.02 683.368 L1005.46 683.368 L1004.91 683.368 L1004.35 683.368 L1003.79 683.368 L1003.23 683.368 L1002.67 683.368 L1002.11 683.368 L1001.55 683.368 L1000.99 683.368 L1000.43 683.368 L999.872 683.368 L999.313 683.368 L998.754 683.368 L998.194 683.368 L997.635 683.368 L997.076 683.368 L996.517 683.368 L995.957 683.368 L995.398 683.368 L994.839 683.368 L994.28 683.368 L993.72 683.368 L993.161 683.368 L992.602 683.368 L992.043 683.368 L991.483 683.368 L990.924 683.368 L990.365 683.368 L989.806 683.368 L989.246 683.368 L988.687 683.368 L988.128 683.368 L987.569 683.368 L987.009 683.368 L986.45 683.368 L985.891 683.368 L985.332 683.368 L984.772 683.368 L984.213 683.368 L983.654 683.368 L983.095 683.368 L982.535 683.368 L981.976 683.368 L981.417 683.368 L980.858 683.368 L980.298 683.368 L979.739 683.368 L979.18 683.368 L978.621 683.368 L978.061 683.368 L977.502 683.368 L976.943 683.368 L976.384 683.368 L975.824 683.368 L975.265 683.368 L974.706 683.368 L974.147 683.368 L973.587 683.368 L973.028 683.368 L972.469 683.368 L971.91 683.368 L971.35 683.368 L970.791 683.368 L970.232 683.368 L969.673 683.368 L969.113 683.368 L968.554 683.368 L967.995 683.368 L967.436 683.368 L966.876 683.368 L966.317 683.368 L965.758 683.368 L965.199 683.368 L964.639 683.368 L964.08 683.368 L963.521 683.368 L962.962 683.368 L962.402 683.368 L961.843 683.368 L961.284 683.368 L960.725 683.368 L960.165 683.368 L959.606 683.368 L959.047 683.368 L958.488 683.368 L957.928 683.368 L957.369 683.368 L956.81 683.368 L956.251 683.368 L955.691 683.368 L955.132 683.368 L954.573 683.368 L954.014 683.368 L953.454 683.368 L952.895 683.368 L952.336 683.368 L951.777 683.368 L951.217 683.368 L950.658 683.368 L950.099 683.368 L949.54 683.368 L948.98 683.368 L948.421 683.368 L947.862 683.368 L947.303 683.368 L946.743 683.368 L946.184 683.368 L945.625 683.368 L945.066 683.368 L944.506 683.368 L943.947 683.368 L943.388 683.368 L942.829 683.368 L942.269 683.368 L941.71 683.368 L941.151 683.368 L940.592 683.368 L940.032 683.368 L939.473 683.368 L938.914 683.368 L938.355 683.368 L937.795 683.368 L937.236 683.368 L936.677 683.368 L936.118 683.368 L935.558 683.368 L934.999 683.368 L934.44 683.368 L933.881 683.368 L933.321 683.368 L932.762 683.368 L932.203 683.368 L931.644 683.368 L931.084 683.368 L930.525 683.368 L929.966 683.368 L929.406 683.368 L928.847 683.368 L928.288 683.368 L927.729 683.368 L927.169 683.368 L926.61 683.368 L926.051 683.368 L925.492 683.368 L924.932 683.368 L924.373 683.368 L923.814 683.368 L923.255 683.368 L922.695 683.368 L922.136 683.368 L921.577 683.368 L921.018 683.368 L920.458 683.368 L919.899 683.368 L919.34 683.368 L918.781 683.368 L918.221 683.368 L917.662 683.368 L917.103 683.368 L916.544 683.368 L915.984 683.368 L915.425 683.368 L914.866 683.368 L914.307 683.368 L913.747 683.368 L913.188 683.368 L912.629 683.368 L912.07 683.368 L911.51 683.368 L910.951 683.368 L910.392 683.368 L909.833 683.368 L909.273 683.368 L908.714 683.368 L908.155 683.368 L907.596 683.368 L907.036 683.368 L906.477 683.368 L905.918 683.368 L905.359 683.368 L904.799 683.368 L904.24 683.368 L903.681 683.368 L903.122 683.368 L902.562 683.368 L902.003 683.368 L901.444 683.368 L900.885 683.368 L900.325 683.368 L899.766 683.368 L899.207 683.368 L898.648 683.368 L898.088 683.368 L897.529 683.368 L896.97 683.368 L896.411 683.368 L895.851 683.368 L895.292 683.368 L894.733 683.368 L894.174 683.368 L893.614 683.368 L893.055 683.368 L892.496 683.368 L891.937 683.368 L891.377 683.368 L890.818 683.368 L890.259 683.368 L889.7 683.368 L889.14 683.368 L888.581 683.368 L888.022 683.368 L887.463 683.368 L886.903 683.368 L886.344 683.368 L885.785 683.368 L885.226 683.368 L884.666 683.368 L884.107 683.368 L883.548 683.368 L882.989 683.368 L882.429 683.368 L881.87 683.368 L881.311 683.368 L880.752 683.368 L880.192 683.368 L879.633 683.368 L879.074 683.368 L878.515 683.368 L877.955 683.368 L877.396 683.368 L876.837 683.368 L876.278 683.368 L875.718 683.368 L875.159 683.368 L874.6 683.368 L874.041 683.368 L873.481 683.368 L872.922 683.368 L872.363 683.368 L871.804 683.368 L871.244 683.368 L870.685 683.368 L870.126 683.368 L869.567 683.368 L869.007 683.368 L868.448 683.368 L867.889 683.368 L867.33 683.368 L866.77 683.368 L866.211 683.368 L865.652 683.368 L865.093 683.368 L864.533 683.368 L863.974 683.368 L863.415 683.368 L862.856 683.368 L862.296 683.368 L861.737 683.368 L861.178 683.368 L860.619 683.368 L860.059 683.368 L859.5 683.368 L858.941 683.368 L858.382 683.368 L857.822 683.368 L857.263 683.368 L856.704 683.368 L856.145 683.368 L855.585 683.368 L855.026 683.368 L854.467 683.368 L853.908 683.368 L853.348 683.368 L852.789 683.368 L852.23 683.368 L851.671 683.368 L851.111 683.368 L850.552 683.368 L849.993 683.368 L849.434 683.368 L848.874 683.368 L848.315 683.368 L847.756 683.368 L847.197 683.368 L846.637 683.368 L846.078 683.368 L845.519 683.368 L844.96 683.368 L844.4 683.368 L843.841 683.368 L843.282 683.368 L842.723 683.368 L842.163 683.368 L841.604 683.368 L841.045 683.368 L840.486 683.368 L839.926 683.368 L839.367 683.368 L838.808 683.368 L838.249 683.368 L837.689 683.368 L837.13 683.368 L836.571 683.368 L836.012 683.368 L835.452 683.368 L834.893 683.368 L834.334 683.368 L833.775 683.368 L833.215 683.368 L832.656 683.368 L832.097 683.368 L831.538 683.368 L830.978 683.368 L830.419 683.368 L829.86 683.368 L829.301 683.368 L828.741 683.368 L828.182 683.368 L827.623 683.368 L827.064 683.368 L826.504 683.368 L825.945 683.368 L825.386 683.368 L824.827 683.368 L824.267 683.368 L823.708 683.368 L823.149 683.368 L822.59 683.368 L822.03 683.368 L821.471 683.368 L820.912 683.368 L820.353 683.368 L819.793 683.368 L819.234 683.368 L818.675 683.368 L818.116 683.368 L817.556 683.368 L816.997 683.368 L816.438 683.368 L815.879 683.368 L815.319 683.368 L814.76 683.368 L814.201 683.368 L813.642 683.368 L813.082 683.368 L812.523 683.368 L811.964 683.368 L811.405 683.368 L810.845 683.368 L810.286 683.368 L809.727 683.368 L809.168 683.368 L808.608 683.368 L808.049 683.368 L807.49 683.368 L806.931 683.368 L806.371 683.368 L805.812 683.368 L805.253 683.368 L804.693 683.368 L804.134 683.368 L803.575 683.368 L803.016 683.368 L802.456 683.368 L801.897 683.368 L801.338 683.368 L800.779 683.368 L800.219 683.368 L799.66 683.368 L799.101 683.368 L798.542 683.368 L797.982 683.368 L797.423 683.368 L796.864 683.368 L796.305 683.368 L795.745 683.368 L795.186 683.368 L794.627 683.368 L794.068 683.368 L793.508 683.368 L792.949 683.368 L792.39 683.368 L791.831 683.368 L791.271 683.368 L790.712 683.368 L790.153 683.368 L789.594 683.368 L789.034 683.368 L788.475 683.368 L787.916 683.368 L787.357 683.368 L786.797 683.368 L786.238 683.368 L785.679 683.368 L785.12 683.368 L784.56 683.368 L784.001 683.368 L783.442 683.368 L782.883 683.368 L782.323 683.368 L781.764 683.368 L781.205 683.368 L780.646 683.368 L780.086 683.368 L779.527 683.368 L778.968 683.368 L778.409 683.368 L777.849 683.368 L777.29 683.368 L776.731 683.368 L776.172 683.368 L775.612 683.368 L775.053 683.368 L774.494 683.368 L773.935 683.368 L773.375 683.368 L772.816 683.368 L772.257 683.368 L771.698 683.368 L771.138 683.368 L770.579 683.368 L770.02 683.368 L769.461 683.368 L768.901 683.368 L768.342 683.368 L767.783 683.368 L767.224 683.368 L766.664 683.368 L766.105 683.368 L765.546 683.368 L764.987 683.368 L764.427 683.368 L763.868 683.368 L763.309 683.368 L762.75 683.368 L762.19 683.368 L761.631 683.368 L761.072 683.368 L760.513 683.368 L759.953 683.368 L759.394 683.368 L758.835 683.368 L758.276 683.368 L757.716 683.368 L757.157 683.368 L756.598 683.368 L756.039 683.368 L755.479 683.368 L754.92 683.368 L754.361 683.368 L753.802 683.368 L753.242 683.368 L752.683 683.368 L752.124 683.368 L751.565 683.368 L751.005 683.368 L750.446 683.368 L749.887 683.368 L749.328 683.368 L748.768 683.368 L748.209 683.368 L747.65 683.368 L747.091 683.368 L746.531 683.368 L745.972 683.368 L745.413 683.368 L744.854 683.368 L744.294 683.368 L743.735 683.368 L743.176 683.368 L742.617 683.368 L742.057 683.368 L741.498 683.368 L740.939 683.368 L740.38 683.368 L739.82 683.368 L739.261 683.368 L738.702 683.368 L738.143 683.368 L737.583 683.368 L737.024 683.368 L736.465 683.368 L735.906 683.368 L735.346 683.368 L734.787 683.368 L734.228 683.368 L733.669 683.368 L733.109 683.368 L732.55 683.368 L731.991 683.368 L731.432 683.368 L730.872 683.368 L730.313 683.368 L729.754 683.368 L729.195 683.368 L728.635 683.368 L728.076 683.368 L727.517 683.368 L726.958 683.368 L726.398 683.368 L725.839 683.368 L725.28 683.368 L724.721 683.368 L724.161 683.368 L723.602 683.368 L723.043 683.368 L722.484 683.368 L721.924 683.368 L721.365 683.368 L720.806 683.368 L720.247 683.368  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,687.501 720.806,687.501 721.365,687.501 721.924,687.501 722.484,687.501 723.043,687.501 723.602,687.501 724.161,687.501 724.721,687.501 725.28,687.501 725.839,687.501 726.398,687.501 726.958,687.501 727.517,687.501 728.076,687.501 728.635,687.501 729.195,687.501 729.754,687.501 730.313,687.501 730.872,687.501 731.432,687.501 731.991,687.501 732.55,687.501 733.109,687.501 733.669,687.501 734.228,687.501 734.787,687.501 735.346,687.501 735.906,687.501 736.465,687.501 737.024,687.501 737.583,687.501 738.143,687.501 738.702,687.501 739.261,687.501 739.82,687.501 740.38,687.501 740.939,687.501 741.498,687.501 742.057,687.501 742.617,687.501 743.176,687.501 743.735,687.501 744.294,687.501 744.854,687.501 745.413,687.501 745.972,687.501 746.531,687.501 747.091,687.501 747.65,687.501 748.209,687.501 748.768,687.501 749.328,687.501 749.887,687.501 750.446,687.501 751.005,687.501 751.565,687.501 752.124,687.501 752.683,687.501 753.242,687.501 753.802,687.501 754.361,687.501 754.92,687.501 755.479,687.501 756.039,687.501 756.598,687.501 757.157,687.501 757.716,687.501 758.276,687.501 758.835,687.501 759.394,687.501 759.953,687.501 760.513,687.501 761.072,687.501 761.631,687.501 762.19,687.501 762.75,687.501 763.309,687.501 763.868,687.501 764.427,687.501 764.987,687.501 765.546,687.501 766.105,687.501 766.664,687.501 767.224,687.501 767.783,687.501 768.342,687.501 768.901,687.501 769.461,687.501 770.02,687.501 770.579,687.501 771.138,687.501 771.698,687.501 772.257,687.501 772.816,687.501 773.375,687.501 773.935,687.501 774.494,687.501 775.053,687.501 775.612,687.501 776.172,687.501 776.731,687.501 777.29,687.501 777.849,687.501 778.409,687.501 778.968,687.501 779.527,687.501 780.086,687.501 780.646,687.501 781.205,687.501 781.764,687.501 782.323,687.501 782.883,687.501 783.442,687.501 784.001,687.501 784.56,687.501 785.12,687.501 785.679,687.501 786.238,687.501 786.797,687.501 787.357,687.501 787.916,687.501 788.475,687.501 789.034,687.501 789.594,687.501 790.153,687.501 790.712,687.501 791.271,687.501 791.831,687.501 792.39,687.501 792.949,687.501 793.508,687.501 794.068,687.501 794.627,687.501 795.186,687.501 795.745,687.501 796.305,687.501 796.864,687.501 797.423,687.501 797.982,687.501 798.542,687.501 799.101,687.501 799.66,687.501 800.219,687.501 800.779,687.501 801.338,687.501 801.897,687.501 802.456,687.501 803.016,687.501 803.575,687.501 804.134,687.501 804.693,687.501 805.253,687.501 805.812,687.501 806.371,687.501 806.931,687.501 807.49,687.501 808.049,687.501 808.608,687.501 809.168,687.501 809.727,687.501 810.286,687.501 810.845,687.501 811.405,687.501 811.964,687.501 812.523,687.501 813.082,687.501 813.642,687.501 814.201,687.501 814.76,687.501 815.319,687.501 815.879,687.501 816.438,687.501 816.997,687.501 817.556,687.501 818.116,687.501 818.675,687.501 819.234,687.501 819.793,687.501 820.353,687.501 820.912,687.501 821.471,687.501 822.03,687.501 822.59,687.501 823.149,687.501 823.708,687.501 824.267,687.501 824.827,687.501 825.386,687.501 825.945,687.501 826.504,687.501 827.064,687.501 827.623,687.501 828.182,687.501 828.741,687.501 829.301,687.501 829.86,687.501 830.419,687.501 830.978,687.501 831.538,687.501 832.097,687.501 832.656,687.501 833.215,687.501 833.775,687.501 834.334,687.501 834.893,687.501 835.452,687.501 836.012,687.501 836.571,687.501 837.13,687.501 837.689,687.501 838.249,687.501 838.808,687.501 839.367,687.501 839.926,687.501 840.486,687.501 841.045,687.501 841.604,687.501 842.163,687.501 842.723,687.501 843.282,687.501 843.841,687.501 844.4,687.501 844.96,687.501 845.519,687.501 846.078,687.501 846.637,687.501 847.197,687.501 847.756,687.501 848.315,687.501 848.874,687.501 849.434,687.501 849.993,687.501 850.552,687.501 851.111,687.501 851.671,687.501 852.23,687.501 852.789,687.501 853.348,687.501 853.908,687.501 854.467,687.501 855.026,687.501 855.585,687.501 856.145,687.501 856.704,687.501 857.263,687.501 857.822,687.501 858.382,687.501 858.941,687.501 859.5,687.501 860.059,687.501 860.619,687.501 861.178,687.501 861.737,687.501 862.296,687.501 862.856,687.501 863.415,687.501 863.974,687.501 864.533,687.501 865.093,687.501 865.652,687.501 866.211,687.501 866.77,687.501 867.33,687.501 867.889,687.501 868.448,687.501 869.007,687.501 869.567,687.501 870.126,687.501 870.685,687.501 871.244,687.501 871.804,687.501 872.363,687.501 872.922,687.501 873.481,687.501 874.041,687.501 874.6,687.501 875.159,687.501 875.718,687.501 876.278,687.501 876.837,687.501 877.396,687.501 877.955,687.501 878.515,687.501 879.074,687.501 879.633,687.501 880.192,687.501 880.752,687.501 881.311,687.501 881.87,687.501 882.429,687.501 882.989,687.501 883.548,687.501 884.107,687.501 884.666,687.501 885.226,687.501 885.785,687.501 886.344,687.501 886.903,687.501 887.463,687.501 888.022,687.501 888.581,687.501 889.14,687.501 889.7,687.501 890.259,687.501 890.818,687.501 891.377,687.501 891.937,687.501 892.496,687.501 893.055,687.501 893.614,687.501 894.174,687.501 894.733,687.501 895.292,687.501 895.851,687.501 896.411,687.501 896.97,687.501 897.529,687.501 898.088,687.501 898.648,687.501 899.207,687.501 899.766,687.501 900.325,687.501 900.885,687.501 901.444,687.501 902.003,687.501 902.562,687.501 903.122,687.501 903.681,687.501 904.24,687.501 904.799,687.501 905.359,687.501 905.918,687.501 906.477,687.501 907.036,687.501 907.596,687.501 908.155,687.501 908.714,687.501 909.273,687.501 909.833,687.501 910.392,687.501 910.951,687.501 911.51,687.501 912.07,687.501 912.629,687.501 913.188,687.501 913.747,687.501 914.307,687.501 914.866,687.501 915.425,687.501 915.984,687.501 916.544,687.501 917.103,687.501 917.662,687.501 918.221,687.501 918.781,687.501 919.34,687.501 919.899,687.501 920.458,687.501 921.018,687.501 921.577,687.501 922.136,687.501 922.695,687.501 923.255,687.501 923.814,687.501 924.373,687.501 924.932,687.501 925.492,687.501 926.051,687.501 926.61,687.501 927.169,687.501 927.729,687.501 928.288,687.501 928.847,687.501 929.406,687.501 929.966,687.501 930.525,687.501 931.084,687.501 931.644,687.501 932.203,687.501 932.762,687.501 933.321,687.501 933.881,687.501 934.44,687.501 934.999,687.501 935.558,687.501 936.118,687.501 936.677,687.501 937.236,687.501 937.795,687.501 938.355,687.501 938.914,687.501 939.473,687.501 940.032,687.501 940.592,687.501 941.151,687.501 941.71,687.501 942.269,687.501 942.829,687.501 943.388,687.501 943.947,687.501 944.506,687.501 945.066,687.501 945.625,687.501 946.184,687.501 946.743,687.501 947.303,687.501 947.862,687.501 948.421,687.501 948.98,687.501 949.54,687.501 950.099,687.501 950.658,687.501 951.217,687.501 951.777,687.501 952.336,687.501 952.895,687.501 953.454,687.501 954.014,687.501 954.573,687.501 955.132,687.501 955.691,687.501 956.251,687.501 956.81,687.501 957.369,687.501 957.928,687.501 958.488,687.501 959.047,687.501 959.606,687.501 960.165,687.501 960.725,687.501 961.284,687.501 961.843,687.501 962.402,687.501 962.962,687.501 963.521,687.501 964.08,687.501 964.639,687.501 965.199,687.501 965.758,687.501 966.317,687.501 966.876,687.501 967.436,687.501 967.995,687.501 968.554,687.501 969.113,687.501 969.673,687.501 970.232,687.501 970.791,687.501 971.35,687.501 971.91,687.501 972.469,687.501 973.028,687.501 973.587,687.501 974.147,687.501 974.706,687.501 975.265,687.501 975.824,687.501 976.384,687.501 976.943,687.501 977.502,687.501 978.061,687.501 978.621,687.501 979.18,687.501 979.739,687.501 980.298,687.501 980.858,687.501 981.417,687.501 981.976,687.501 982.535,687.501 983.095,687.501 983.654,687.501 984.213,687.501 984.772,687.501 985.332,687.501 985.891,687.501 986.45,687.501 987.009,687.501 987.569,687.501 988.128,687.501 988.687,687.501 989.246,687.501 989.806,687.501 990.365,687.501 990.924,687.501 991.483,687.501 992.043,687.501 992.602,687.501 993.161,687.501 993.72,687.501 994.28,687.501 994.839,687.501 995.398,687.501 995.957,687.501 996.517,687.501 997.076,687.501 997.635,687.501 998.194,687.501 998.754,687.501 999.313,687.501 999.872,687.501 1000.43,687.501 1000.99,687.501 1001.55,687.501 1002.11,687.501 1002.67,687.501 1003.23,687.501 1003.79,687.501 1004.35,687.501 1004.91,687.501 1005.46,687.501 1006.02,687.501 1006.58,687.501 1007.14,687.501 1007.7,687.501 1008.26,687.501 1008.82,687.501 1009.38,687.501 1009.94,687.501 1010.5,687.501 1011.06,687.501 1011.62,687.501 1012.18,687.501 1012.73,687.501 1013.29,687.501 1013.85,687.501 1014.41,687.501 1014.97,687.501 1015.53,687.501 1016.09,687.501 1016.65,687.501 1017.21,687.501 1017.77,687.501 1018.33,687.501 1018.89,687.501 1019.45,687.501 1020.01,687.501 1020.56,687.501 1021.12,687.501 1021.68,687.501 1022.24,687.501 1022.8,687.501 1023.36,687.501 1023.92,687.501 1024.48,687.501 1025.04,687.501 1025.6,687.501 1026.16,687.501 1026.72,687.501 1027.28,687.501 1027.83,687.501 1028.39,687.501 1028.95,687.501 1029.51,687.501 1030.07,687.501 1030.63,687.501 1031.19,687.501 1031.75,687.501 1032.31,687.501 1032.87,687.501 1033.43,687.501 1033.99,687.501 1034.55,687.501 1035.1,687.501 1035.66,687.501 1036.22,687.501 1036.78,687.501 1037.34,687.501 1037.9,687.501 1038.46,687.501 1039.02,687.501 1039.58,687.501 1040.14,687.501 1040.7,687.501 1041.26,687.501 1041.82,687.501 1042.38,687.501 1042.93,687.501 1043.49,687.501 1044.05,687.501 1044.61,687.501 1045.17,687.501 1045.73,687.501 1046.29,687.501 1046.85,687.501 1047.41,687.501 1047.97,687.501 1048.53,687.501 1049.09,687.501 1049.65,687.501 1050.2,687.501 1050.76,687.501 1051.32,687.501 1051.88,687.501 1052.44,687.501 1053,687.501 1053.56,687.501 1054.12,687.501 1054.68,687.501 1055.24,687.501 1055.8,687.501 1056.36,687.501 1056.92,687.501 1057.48,687.501 1058.03,687.501 1058.59,687.501 1059.15,687.501 1059.71,687.501 1060.27,687.501 1060.83,687.501 1061.39,687.501 1061.95,687.501 1062.51,687.501 1063.07,687.501 1063.63,687.501 1064.19,687.501 1064.75,687.501 1065.3,687.501 1065.86,687.501 1066.42,687.501 1066.98,687.501 1067.54,687.501 1068.1,687.501 1068.66,687.501 1069.22,687.501 1069.78,687.501 1070.34,687.501 1070.9,687.501 1071.46,687.501 1072.02,687.501 1072.57,687.501 1073.13,687.501 1073.69,687.501 1074.25,687.501 1074.81,687.501 1075.37,687.501 1075.93,687.501 1076.49,687.501 1077.05,687.501 1077.61,687.501 1078.17,687.501 1078.73,687.501 1079.29,687.501 1079.85,687.501 1080.4,687.501 1080.96,687.501 1081.52,687.501 1082.08,687.501 1082.64,687.501 1083.2,687.501 1083.76,687.501 1084.32,687.501 1084.88,687.501 1085.44,687.501 1086,687.501 1086.56,687.501 1087.12,687.501 1087.67,687.501 1088.23,687.501 1088.79,687.501 1089.35,687.501 1089.91,687.501 1090.47,687.501 1091.03,687.501 1091.59,687.501 1092.15,687.501 1092.71,687.501 1093.27,687.501 1093.83,687.501 1094.39,687.501 1094.94,687.501 1095.5,687.501 1096.06,687.501 1096.62,687.501 1097.18,687.501 1097.74,687.501 1098.3,687.501 1098.86,687.501 1099.42,687.501 1099.98,687.501 1100.54,687.501 1101.1,687.501 1101.66,687.501 1102.22,687.501 1102.77,687.501 1103.33,687.501 1103.89,687.501 1104.45,687.501 1105.01,687.501 1105.57,687.501 1106.13,687.501 1106.69,687.501 1107.25,687.501 1107.81,687.501 1108.37,687.501 1108.93,687.501 1109.49,687.501 1110.04,687.501 1110.6,687.501 1111.16,687.501 1111.72,687.501 1112.28,687.501 1112.84,687.501 1113.4,687.501 1113.96,687.501 1114.52,687.501 1115.08,687.501 1115.64,687.501 1116.2,687.501 1116.76,687.501 1117.31,687.501 1117.87,687.501 1118.43,687.501 1118.99,687.501 1119.55,687.501 1120.11,687.501 1120.67,687.501 1121.23,687.501 1121.79,687.501 1122.35,687.501 1122.91,687.501 1123.47,687.501 1124.03,687.501 1124.59,687.501 1125.14,687.501 1125.7,687.501 1126.26,687.501 1126.82,687.501 1127.38,687.501 1127.94,687.501 1128.5,687.501 1129.06,687.501 1129.62,687.501 1130.18,687.501 1130.74,687.501 1131.3,687.501 1131.86,687.501 1132.41,687.501 1132.97,687.501 1133.53,687.501 1134.09,687.501 1134.65,687.501 1135.21,687.501 1135.77,687.501 1136.33,687.501 1136.89,687.501 1137.45,687.501 1138.01,687.501 1138.57,687.501 1139.13,687.501 1139.68,687.501 1140.24,687.501 1140.8,687.501 1141.36,687.501 1141.92,687.501 1142.48,687.501 1143.04,687.501 1143.6,687.501 1144.16,687.501 1144.72,687.501 1145.28,687.501 1145.84,687.501 1146.4,687.501 1146.96,687.501 1147.51,687.501 1148.07,687.501 1148.63,687.501 1149.19,687.501 1149.75,687.501 1150.31,687.501 1150.87,687.501 1151.43,687.501 1151.99,687.501 1152.55,687.501 1153.11,687.501 1153.67,687.501 1154.23,687.501 1154.78,687.501 1155.34,687.501 1155.9,687.501 1156.46,687.501 1157.02,687.501 1157.58,687.501 1158.14,687.501 1158.7,687.501 1159.26,687.501 1159.82,687.501 1160.38,687.501 1160.94,687.501 1161.5,687.501 1162.05,687.501 1162.61,687.501 1163.17,687.501 1163.73,687.501 1164.29,687.501 1164.85,687.501 1165.41,687.501 1165.97,687.501 1166.53,687.501 1167.09,687.501 1167.65,687.501 1168.21,687.501 1168.77,687.501 1169.33,687.501 1169.88,687.501 1170.44,687.501 1171,687.501 1171.56,687.501 1172.12,687.501 1172.68,687.501 1173.24,687.501 1173.8,687.501 1174.36,687.501 1174.92,687.501 1175.48,687.501 1176.04,687.501 1176.6,687.501 1177.15,687.501 1177.71,687.501 1178.27,687.501 1178.83,687.501 1179.39,687.501 1179.95,687.501 1180.51,687.501 1181.07,687.501 1181.63,687.501 1182.19,687.501 1182.75,687.501 1183.31,687.501 1183.87,687.501 1184.43,687.501 1184.98,687.501 1185.54,687.501 1186.1,687.501 1186.66,687.501 1187.22,687.501 1187.78,687.501 1188.34,687.501 1188.9,687.501 1189.46,687.501 1190.02,687.501 1190.58,687.501 1191.14,687.501 1191.7,687.501 1192.25,687.501 1192.81,687.501 1193.37,687.501 1193.93,687.501 1194.49,687.501 1195.05,687.501 1195.61,687.501 1196.17,687.501 1196.73,687.501 1197.29,687.501 1197.85,687.501 1198.41,687.501 1198.97,687.501 1199.52,687.501 1200.08,687.501 1200.64,687.501 1201.2,687.501 1201.76,687.501 1202.32,687.501 1202.88,687.501 1203.44,687.501 1204,687.501 1204.56,687.501 1205.12,687.501 1205.68,687.501 1206.24,687.501 1206.8,687.501 1207.35,687.501 1207.91,687.501 1208.47,687.501 1209.03,687.501 1209.59,687.501 1210.15,687.501 1210.71,687.501 1211.27,687.501 1211.83,687.501 1212.39,687.501 1212.95,687.501 1213.51,687.501 1214.07,687.501 1214.62,687.501 1215.18,687.501 1215.74,687.501 1216.3,687.501 1216.86,687.501 1217.42,687.501 1217.98,687.501 1218.54,687.501 1219.1,687.501 1219.66,687.501 1220.22,687.501 1220.78,687.501 1221.34,687.501 1221.89,687.501 1222.45,687.501 1223.01,687.501 1223.57,687.501 1224.13,687.501 1224.69,687.501 1225.25,687.501 1225.81,687.501 1226.37,687.501 1226.93,687.501 1227.49,687.501 1228.05,687.501 1228.61,687.501 1229.17,687.501 1229.72,687.501 1230.28,687.501 1230.84,687.501 1231.4,687.501 1231.96,687.501 1232.52,687.501 1233.08,687.501 1233.64,687.501 1234.2,687.501 1234.76,687.501 1235.32,687.501 1235.88,687.501 1236.44,687.501 1236.99,687.501 1237.55,687.501 1238.11,687.501 1238.67,687.501 1239.23,687.501 1239.79,687.501 1240.35,687.501 1240.91,687.501 1241.47,687.501 1242.03,687.501 1242.59,687.501 1243.15,687.501 1243.71,687.501 1244.26,687.501 1244.82,687.501 1245.38,687.501 1245.94,687.501 1246.5,687.501 1247.06,687.501 1247.62,687.501 1248.18,687.501 1248.74,687.501 1249.3,687.501 1249.86,687.501 1250.42,687.501 1250.98,687.501 1251.54,687.501 1252.09,687.501 1252.65,687.501 1253.21,687.501 1253.77,687.501 1254.33,687.501 1254.89,687.501 1255.45,687.501 1256.01,687.501 1256.57,687.501 1257.13,687.501 1257.69,687.501 1258.25,687.501 1258.81,687.501 1259.36,687.501 1259.92,687.501 1260.48,687.501 1261.04,687.501 1261.6,687.501 1262.16,687.501 1262.72,687.501 1263.28,687.501 1263.84,687.501 1264.4,687.501 1264.96,687.501 1265.52,687.501 1266.08,687.501 1266.63,687.501 1267.19,687.501 1267.75,687.501 1268.31,687.501 1268.87,687.501 1269.43,687.501 1269.99,687.501 1270.55,687.501 1271.11,687.501 1271.67,687.501 1272.23,687.501 1272.79,687.501 1273.35,687.501 1273.91,687.501 1274.46,687.501 1275.02,687.501 1275.58,687.501 1276.14,687.501 1276.7,687.501 1277.26,687.501 1277.82,687.501 1278.38,687.501 1278.94,687.501 1279.5,687.501 1280.06,687.501 1280.62,687.501 1281.18,687.501 1281.73,687.501 1282.29,687.501 1282.85,687.501 1283.41,687.501 1283.97,687.501 1284.53,687.501 1285.09,687.501 1285.65,687.501 1286.21,687.501 1286.77,687.501 1287.33,687.501 1287.89,687.501 1288.45,687.501 1289,687.501 1289.56,687.501 1290.12,687.501 1290.68,687.501 1291.24,687.501 1291.8,687.501 1292.36,687.501 1292.92,687.501 1293.48,687.501 1294.04,687.501 1294.6,687.501 1295.16,687.501 1295.72,687.501 1296.28,687.501 1296.83,687.501 1297.39,687.501 1297.95,687.501 1298.51,687.501 1299.07,687.501 1299.63,687.501 1300.19,687.501 1300.75,687.501 1301.31,687.501 1301.87,687.501 1302.43,687.501 1302.99,687.501 1303.55,687.501 1304.1,687.501 1304.66,687.501 1305.22,687.501 1305.78,687.501 1306.34,687.501 1306.9,687.501 1307.46,687.501 1308.02,687.501 1308.58,687.501 1309.14,687.501 1309.7,687.501 1310.26,687.501 1310.82,687.501 1311.38,687.501 1311.93,687.501 1312.49,687.501 1313.05,687.501 1313.61,687.501 1314.17,687.501 1314.73,687.501 1315.29,687.501 1315.85,687.501 1316.41,687.501 1316.97,687.501 1317.53,687.501 1318.09,687.501 1318.65,687.501 1319.2,687.501 1319.76,687.501 1320.32,687.501 1320.88,687.501 1321.44,687.501 1322,687.501 1322.56,687.501 1323.12,687.501 1323.68,687.501 1324.24,687.501 1324.8,687.501 1325.36,687.501 1325.92,687.501 1326.47,687.501 1327.03,687.501 1327.59,687.501 1328.15,687.501 1328.71,687.501 1329.27,687.501 1329.83,687.501 1330.39,687.501 1330.95,687.501 1331.51,687.501 1332.07,687.501 1332.63,687.501 1333.19,687.501 1333.75,687.501 1334.3,687.501 1334.86,687.501 1335.42,687.501 1335.98,687.501 1336.54,687.501 1337.1,687.501 1337.66,687.501 1338.22,687.501 1338.78,687.501 1339.34,687.501 1339.9,687.501 1340.46,687.501 1341.02,687.501 1341.57,687.501 1342.13,687.501 1342.69,687.501 1343.25,687.501 1343.81,687.501 1344.37,687.501 1344.93,687.501 1345.49,687.501 1346.05,687.501 1346.61,687.501 1347.17,687.501 1347.73,687.501 1348.29,687.501 1348.84,687.501 1349.4,687.501 1349.96,687.501 1350.52,687.501 1351.08,687.501 1351.64,687.501 1352.2,687.501 1352.76,687.501 1353.32,687.501 1353.88,687.501 1354.44,687.501 1355,687.501 1355.56,687.501 1356.12,687.501 1356.67,687.501 1357.23,687.501 1357.79,687.501 1358.35,687.501 1358.91,687.501 1359.47,687.501 1360.03,687.501 1360.59,687.501 1361.15,687.501 1361.71,687.501 1362.27,687.501 1362.83,687.501 1363.39,687.501 1363.94,687.501 1364.5,687.501 1365.06,687.501 1365.62,687.501 1366.18,687.501 1366.74,687.501 1367.3,687.501 1367.86,687.501 1368.42,687.501 1368.98,687.501 1369.54,687.501 1370.1,687.501 1370.66,687.501 1371.21,687.501 1371.77,687.501 1372.33,687.501 1372.89,687.501 1373.45,687.501 1374.01,687.501 1374.57,687.501 1375.13,687.501 1375.69,687.501 1376.25,687.501 1376.81,687.501 1377.37,687.501 1377.93,687.501 1378.49,687.501 1379.04,687.501 1379.6,687.501 1380.16,687.501 1380.72,687.501 1381.28,687.501 1381.84,687.501 1382.4,687.501 1382.96,687.501 1383.52,687.501 1384.08,687.501 1384.64,687.501 1385.2,687.501 1385.76,687.501 1386.31,687.501 1386.87,687.501 1387.43,687.501 1387.99,687.501 1388.55,687.501 1389.11,687.501 1389.67,687.501 1390.23,687.501 1390.79,687.501 1391.35,687.501 1391.91,687.501 1392.47,687.501 1393.03,687.501 1393.58,687.501 1394.14,687.501 1394.7,687.501 1395.26,687.501 1395.82,687.501 1396.38,687.501 1396.94,687.501 1397.5,687.501 1398.06,687.501 1398.62,687.501 1399.18,687.501 1399.74,687.501 1400.3,687.501 1400.86,687.501 1401.41,687.501 1401.97,687.501 1402.53,687.501 1403.09,687.501 1403.65,687.501 1404.21,687.501 1404.77,687.501 1405.33,687.501 1405.89,687.501 1406.45,687.501 1407.01,687.501 1407.57,687.501 1408.13,687.501 1408.68,687.501 1409.24,687.501 1409.8,687.501 1410.36,687.501 1410.92,687.501 1411.48,687.501 1412.04,687.501 1412.6,687.501 1413.16,687.501 1413.72,687.501 1414.28,687.501 1414.84,687.501 1415.4,687.501 1415.95,687.501 1416.51,687.501 1417.07,687.501 1417.63,687.501 1418.19,687.501 1418.75,687.501 1419.31,687.501 1419.87,687.501 1420.43,687.501 1420.99,687.501 1421.55,687.501 1422.11,687.501 1422.67,687.501 1423.23,687.501 1423.78,687.501 1424.34,687.501 1424.9,687.501 1425.46,687.501 1426.02,687.501 1426.58,687.501 1427.14,687.501 1427.7,687.501 1428.26,687.501 1428.82,687.501 1429.38,687.501 1429.94,687.501 1430.5,687.501 1431.05,687.501 1431.61,687.501 1432.17,687.501 1432.73,687.501 1433.29,687.501 1433.85,687.501 1434.41,687.501 1434.97,687.501 1435.53,687.501 1436.09,687.501 1436.65,687.501 1437.21,687.501 1437.77,687.501 1438.33,687.501 1438.88,687.501 1439.44,687.501 1440,687.501 1440.56,687.501 1441.12,687.501 1441.68,687.501 1442.24,687.501 1442.8,687.501 1443.36,687.501 1443.92,687.501 1444.48,687.501 1445.04,687.501 1445.6,687.501 1446.15,687.501 1446.71,687.501 1447.27,687.501 1447.83,687.501 1448.39,687.501 1448.95,687.501 1449.51,687.501 1450.07,687.501 1450.63,687.501 1451.19,687.501 1451.75,687.501 1452.31,687.501 1452.87,687.501 1453.42,687.501 1453.98,687.501 1454.54,687.501 1455.1,687.501 1455.66,687.501 1456.22,687.501 1456.78,687.501 1457.34,687.501 1457.9,687.501 1458.46,687.501 1459.02,687.501 1459.58,687.501 1460.14,687.501 1460.7,687.501 1461.25,687.501 1461.81,687.501 1462.37,687.501 1462.93,687.501 1463.49,687.501 1464.05,687.501 1464.61,687.501 1465.17,687.501 1465.73,687.501 1466.29,687.501 1466.85,687.501 1467.41,687.501 1467.97,687.501 1468.52,687.501 1469.08,687.501 1469.64,687.501 1470.2,687.501 1470.76,687.501 1471.32,687.501 1471.88,687.501 1472.44,687.501 1473,687.501 1473.56,687.501 1474.12,687.501 1474.68,687.501 1475.24,687.501 1475.79,687.501 1476.35,687.501 1476.91,687.501 1477.47,687.501 1478.03,687.501 1478.59,687.501 1479.15,687.501 1479.71,687.501 1480.27,687.501 1480.83,687.501 1481.39,687.501 1481.95,687.501 1482.51,687.501 1483.07,687.501 1483.62,687.501 1484.18,687.501 1484.74,687.501 1485.3,687.501 1485.86,687.501 1486.42,687.501 1486.98,687.501 1487.54,687.501 1488.1,687.501 1488.66,687.501 1489.22,687.501 1489.78,687.501 1490.34,687.501 1490.89,687.501 1491.45,687.501 1492.01,687.501 1492.57,687.501 1493.13,687.501 1493.69,687.501 1494.25,687.501 1494.81,687.501 1495.37,687.501 1495.93,687.501 1496.49,687.501 1497.05,687.501 1497.61,687.501 1498.16,687.501 1498.72,687.501 1499.28,687.501 1499.84,687.501 1500.4,687.501 1500.96,687.501 1501.52,687.501 1502.08,687.501 1502.64,687.501 1503.2,687.501 1503.76,687.501 1504.32,687.501 1504.88,687.501 1505.44,687.501 1505.99,687.501 1506.55,687.501 1507.11,687.501 1507.67,687.501 1508.23,687.501 1508.79,687.501 1509.35,687.501 1509.91,687.501 1510.47,687.501 1511.03,687.501 1511.59,687.501 1512.15,687.501 1512.71,687.501 1513.26,687.501 1513.82,687.501 1514.38,687.501 1514.94,687.501 1515.5,687.501 1516.06,687.501 1516.62,687.501 1517.18,687.501 1517.74,687.501 1518.3,687.501 1518.86,687.501 1519.42,687.501 1519.98,687.501 1520.53,687.501 1521.09,687.501 1521.65,687.501 1522.21,687.501 1522.77,687.501 1523.33,687.501 1523.89,687.501 1524.45,687.501 1525.01,687.501 1525.57,687.501 1526.13,687.501 1526.69,687.501 1527.25,687.501 1527.81,687.501 1528.36,687.501 1528.92,687.501 1529.48,687.501 1530.04,687.501 1530.6,687.501 1531.16,687.501 1531.72,687.501 1532.28,687.501 1532.84,687.501 1533.4,687.501 1533.96,687.501 1534.52,687.501 1535.08,687.501 1535.63,687.501 1536.19,687.501 1536.75,687.501 1537.31,687.501 1537.87,687.501 1538.43,687.501 1538.99,687.501 1539.55,687.501 1540.11,687.501 1540.67,687.501 1541.23,687.501 1541.79,687.501 1542.35,687.501 1542.9,687.501 1543.46,687.501 1544.02,687.501 1544.58,687.501 1545.14,687.501 1545.7,687.501 1546.26,687.501 1546.82,687.501 1547.38,687.501 1547.94,687.501 1548.5,687.501 1549.06,687.501 1549.62,687.501 1550.18,687.501 1550.73,687.501 1551.29,687.501 1551.85,687.501 1552.41,687.501 1552.97,687.501 1553.53,687.501 1554.09,687.501 1554.65,687.501 1555.21,687.501 1555.77,687.501 1556.33,687.501 1556.89,687.501 1557.45,687.501 1558,687.501 1558.56,687.501 1559.12,687.501 1559.68,687.501 1560.24,687.501 1560.8,687.501 1561.36,687.501 1561.92,687.501 1562.48,687.501 1563.04,687.501 1563.6,687.501 1564.16,687.501 1564.72,687.501 1565.28,687.501 1565.83,687.501 1566.39,687.501 1566.95,687.501 1567.51,687.501 1568.07,687.501 1568.63,687.501 1569.19,687.501 1569.75,687.501 1570.31,687.501 1570.87,687.501 1571.43,687.501 1571.99,687.501 1572.55,687.501 1573.1,687.501 1573.66,687.501 1574.22,687.501 1574.78,687.501 1575.34,687.501 1575.9,687.501 1576.46,687.501 1577.02,687.501 1577.58,687.501 1578.14,687.501 1578.7,687.501 1579.26,687.501 1579.82,687.501 1580.37,687.501 1580.93,687.501 1581.49,687.501 1582.05,687.501 1582.61,687.501 1583.17,687.501 1583.73,687.501 1584.29,687.501 1584.85,687.501 1585.41,687.501 1585.97,687.501 1586.53,687.501 1587.09,687.501 1587.65,687.501 1588.2,687.501 1588.76,687.501 1589.32,687.501 1589.88,687.501 1590.44,687.501 1591,687.501 1591.56,687.501 1592.12,687.501 1592.68,687.501 1593.24,687.501 1593.8,687.501 1594.36,687.501 1594.92,687.501 1595.47,687.501 1596.03,687.501 1596.59,687.501 1597.15,687.501 1597.71,687.501 1598.27,687.501 1598.83,687.501 1599.39,687.501 1599.95,687.501 1600.51,687.501 1601.07,687.501 1601.63,687.501 1602.19,687.501 1602.74,687.501 1603.3,687.501 1603.86,687.501 1604.42,687.501 1604.98,687.501 1605.54,687.501 1606.1,687.501 1606.66,687.501 1607.22,687.501 1607.78,687.501 1608.34,687.501 1608.9,687.501 1609.46,687.501 1610.02,687.501 1610.57,687.501 1611.13,687.501 1611.69,687.501 1612.25,687.501 1612.81,687.501 1613.37,687.501 1613.93,687.501 1614.49,687.501 1615.05,687.501 1615.61,687.501 1616.17,687.501 1616.73,687.501 1617.29,687.501 1617.84,687.501 1618.4,687.501 1618.96,687.501 1619.52,687.501 1620.08,687.501 1620.64,687.501 1621.2,687.501 1621.76,687.501 1622.32,687.501 1622.88,687.501 1623.44,687.501 1624,687.501 1624.56,687.501 1625.11,687.501 1625.67,687.501 1626.23,687.501 1626.79,687.501 1627.35,687.501 1627.91,687.501 1628.47,687.501 1629.03,687.501 1629.59,687.501 1630.15,687.501 1630.71,687.501 1631.27,687.501 1631.83,687.501 1632.39,687.501 1632.94,687.501 1633.5,687.501 1634.06,687.501 1634.62,687.501 1635.18,687.501 1635.74,687.501 1636.3,687.501 1636.86,687.501 1637.42,687.501 1637.98,687.501 1638.54,687.501 1639.1,687.501 1639.66,687.501 1640.21,687.501 1640.77,687.501 1641.33,687.501 1641.89,687.501 1642.45,687.501 1643.01,687.501 1643.57,687.501 1644.13,687.501 1644.69,687.501 1645.25,687.501 1645.81,687.501 1646.37,687.501 1646.93,687.501 1647.48,687.501 1648.04,687.501 1648.6,687.501 1649.16,687.501 1649.72,687.501 1650.28,687.501 1650.84,687.501 1651.4,687.501 1651.96,687.501 1652.52,687.501 1653.08,687.501 1653.64,687.501 1654.2,687.501 1654.76,687.501 1655.31,687.501 1655.87,687.501 1656.43,687.501 1656.99,687.501 1657.55,687.501 1658.11,687.501 1658.67,687.501 1659.23,687.501 1659.79,687.501 1660.35,687.501 1660.91,687.501 1661.47,687.501 1662.03,687.501 1662.58,687.501 1663.14,687.501 1663.7,687.501 1664.26,687.501 1664.82,687.501 1665.38,687.501 1665.94,687.501 1666.5,687.501 1667.06,687.501 1667.62,687.501 1668.18,687.501 1668.74,687.501 1669.3,687.501 1669.85,687.501 1670.41,687.501 1670.97,687.501 1671.53,687.501 1672.09,687.501 1672.65,687.501 1673.21,687.501 1673.77,687.501 1674.33,687.501 1674.89,687.501 1675.45,687.501 1676.01,687.501 1676.57,687.501 1677.13,687.501 1677.68,687.501 1678.24,687.501 1678.8,687.501 1679.36,687.501 1679.92,687.501 1680.48,687.501 1681.04,687.501 1681.6,687.501 1682.16,687.501 1682.72,687.501 1683.28,687.501 1683.84,687.501 1684.4,687.501 1684.95,687.501 1685.51,687.501 1686.07,687.501 1686.63,687.501 1687.19,687.501 1687.75,687.501 1688.31,687.501 1688.87,687.501 1689.43,687.501 1689.99,687.501 1690.55,687.501 1691.11,687.501 1691.67,687.501 1692.23,687.501 1692.78,687.501 1693.34,687.501 1693.9,687.501 1694.46,687.501 1695.02,687.501 1695.58,687.501 1696.14,687.501 1696.7,687.501 1697.26,687.501 1697.82,687.501 1698.38,687.501 1698.94,687.501 1699.5,687.501 1700.05,687.501 1700.61,687.501 1701.17,687.501 1701.73,687.501 1702.29,687.501 1702.85,687.501 1703.41,687.501 1703.97,687.501 1704.53,687.501 1705.09,687.501 1705.65,687.501 1706.21,687.501 1706.77,687.501 1707.32,687.501 1707.88,687.501 1708.44,687.501 1709,687.501 1709.56,687.501 1710.12,687.501 1710.68,687.501 1711.24,687.501 1711.8,687.501 1712.36,687.501 1712.92,687.501 1713.48,687.501 1714.04,687.501 1714.6,687.501 1715.15,687.501 1715.71,687.501 1716.27,687.501 1716.83,687.501 1717.39,687.501 1717.95,687.501 1718.51,687.501 1719.07,687.501 1719.63,687.501 1720.19,687.501 1720.75,687.501 1721.31,687.501 1721.87,687.501 1722.42,687.501 1722.98,687.501 1723.54,687.501 1724.1,687.501 1724.66,687.501 1725.22,687.501 1725.78,687.501 1726.34,687.501 1726.9,687.501 1727.46,687.501 1728.02,687.501 1728.58,687.501 1729.14,687.501 1729.69,687.501 1730.25,687.501 1730.81,687.501 1731.37,687.501 1731.93,687.501 1732.49,687.501 1733.05,687.501 1733.61,687.501 1734.17,687.501 1734.73,687.501 1735.29,687.501 1735.85,687.501 1736.41,687.501 1736.97,687.501 1737.52,687.501 1738.08,687.501 1738.64,687.501 1739.2,687.501 1739.76,687.501 1740.32,687.501 1740.88,687.501 1741.44,687.501 1742,687.501 1742.56,687.501 1743.12,687.501 1743.68,687.501 1744.24,687.501 1744.79,687.501 1745.35,687.501 1745.91,687.501 1746.47,687.501 1747.03,687.501 1747.59,687.501 1748.15,687.501 1748.71,687.501 1749.27,687.501 1749.83,687.501 1750.39,687.501 1750.95,687.501 1751.51,687.501 1752.06,687.501 1752.62,687.501 1753.18,687.501 1753.74,687.501 1754.3,687.501 1754.86,687.501 1755.42,687.501 1755.98,687.501 1756.54,687.501 1757.1,687.501 1757.66,687.501 1758.22,687.501 1758.78,687.501 1759.34,687.501 1759.89,687.501 1760.45,687.501 1761.01,687.501 1761.57,687.501 1762.13,687.501 1762.69,687.501 1763.25,687.501 1763.81,687.501 1764.37,687.501 1764.93,687.501 1765.49,687.501 1766.05,687.501 1766.61,687.501 1767.16,687.501 1767.72,687.501 1768.28,687.501 1768.84,687.501 1769.4,687.501 1769.96,687.501 1770.52,687.501 1771.08,687.501 1771.64,687.501 1772.2,687.501 1772.76,687.501 1773.32,687.501 1773.88,687.501 1774.43,687.501 1774.99,687.501 1775.55,687.501 1776.11,687.501 1776.67,687.501 1777.23,687.501 1777.79,687.501 1778.35,687.501 1778.91,687.501 1779.47,687.501 1780.03,687.501 1780.59,687.501 1781.15,687.501 1781.71,687.501 1782.26,687.501 1782.82,687.501 1783.38,687.501 1783.94,687.501 1784.5,687.501 1785.06,687.501 1785.62,687.501 1786.18,687.501 1786.74,687.501 1787.3,687.501 1787.86,687.501 1788.42,687.501 1788.98,687.501 1789.53,687.501 1790.09,687.501 1790.65,687.501 1791.21,687.501 1791.77,687.501 1792.33,687.501 1792.89,687.501 1793.45,687.501 1794.01,687.501 1794.57,687.501 1795.13,687.501 1795.69,687.501 1796.25,687.501 1796.8,687.501 1797.36,687.501 1797.92,687.501 1798.48,687.501 1799.04,687.501 1799.6,687.501 1800.16,687.501 1800.72,687.501 1801.28,687.501 1801.84,687.501 1802.4,687.501 1802.96,687.501 1803.52,687.501 1804.08,687.501 1804.63,687.501 1805.19,687.501 1805.75,687.501 1806.31,687.501 1806.87,687.501 1807.43,687.501 1807.99,687.501 1808.55,687.501 1809.11,687.501 1809.67,687.501 1810.23,687.501 1810.79,687.501 1811.35,687.501 1811.9,687.501 1812.46,687.501 1813.02,687.501 1813.58,687.501 1814.14,687.501 1814.7,687.501 1815.26,687.501 1815.82,687.501 1816.38,687.501 1816.94,687.501 1817.5,687.501 1818.06,687.501 1818.62,687.501 1819.18,687.501 1819.73,687.501 1820.29,687.501 1820.85,687.501 1821.41,687.501 1821.97,687.501 1822.53,687.501 1823.09,687.501 1823.65,687.501 1824.21,687.501 1824.77,687.501 1825.33,687.501 1825.89,687.501 1826.45,687.501 1827,687.501 1827.56,687.501 1828.12,687.501 1828.68,687.501 1829.24,687.501 1829.8,687.501 1830.36,687.501 1830.92,687.501 1831.48,687.501 1832.04,687.501 1832.6,687.501 1833.16,687.501 1833.72,687.501 1834.27,687.501 1834.83,687.501 1835.39,687.501 1835.95,687.501 1836.51,687.501 1837.07,687.501 1837.63,687.501 1838.19,687.501 \"/>\n<path clip-path=\"url(#clip313)\" d=\"M720.247 685.613 L720.806 685.613 L721.365 685.613 L721.924 685.613 L722.484 685.613 L723.043 685.613 L723.602 685.613 L724.161 685.613 L724.721 685.613 L725.28 685.613 L725.839 685.613 L726.398 685.613 L726.958 685.613 L727.517 685.613 L728.076 685.613 L728.635 685.613 L729.195 685.613 L729.754 685.613 L730.313 685.613 L730.872 685.613 L731.432 685.613 L731.991 685.613 L732.55 685.613 L733.109 685.613 L733.669 685.613 L734.228 685.613 L734.787 685.613 L735.346 685.613 L735.906 685.613 L736.465 685.613 L737.024 685.613 L737.583 685.613 L738.143 685.613 L738.702 685.613 L739.261 685.613 L739.82 685.613 L740.38 685.613 L740.939 685.613 L741.498 685.613 L742.057 685.613 L742.617 685.613 L743.176 685.613 L743.735 685.613 L744.294 685.613 L744.854 685.613 L745.413 685.613 L745.972 685.613 L746.531 685.613 L747.091 685.613 L747.65 685.613 L748.209 685.613 L748.768 685.613 L749.328 685.613 L749.887 685.613 L750.446 685.613 L751.005 685.613 L751.565 685.613 L752.124 685.613 L752.683 685.613 L753.242 685.613 L753.802 685.613 L754.361 685.613 L754.92 685.613 L755.479 685.613 L756.039 685.613 L756.598 685.613 L757.157 685.613 L757.716 685.613 L758.276 685.613 L758.835 685.613 L759.394 685.613 L759.953 685.613 L760.513 685.613 L761.072 685.613 L761.631 685.613 L762.19 685.613 L762.75 685.613 L763.309 685.613 L763.868 685.613 L764.427 685.613 L764.987 685.613 L765.546 685.613 L766.105 685.613 L766.664 685.613 L767.224 685.613 L767.783 685.613 L768.342 685.613 L768.901 685.613 L769.461 685.613 L770.02 685.613 L770.579 685.613 L771.138 685.613 L771.698 685.613 L772.257 685.613 L772.816 685.613 L773.375 685.613 L773.935 685.613 L774.494 685.613 L775.053 685.613 L775.612 685.613 L776.172 685.613 L776.731 685.613 L777.29 685.613 L777.849 685.613 L778.409 685.613 L778.968 685.613 L779.527 685.613 L780.086 685.613 L780.646 685.613 L781.205 685.613 L781.764 685.613 L782.323 685.613 L782.883 685.613 L783.442 685.613 L784.001 685.613 L784.56 685.613 L785.12 685.613 L785.679 685.613 L786.238 685.613 L786.797 685.613 L787.357 685.613 L787.916 685.613 L788.475 685.613 L789.034 685.613 L789.594 685.613 L790.153 685.613 L790.712 685.613 L791.271 685.613 L791.831 685.613 L792.39 685.613 L792.949 685.613 L793.508 685.613 L794.068 685.613 L794.627 685.613 L795.186 685.613 L795.745 685.613 L796.305 685.613 L796.864 685.613 L797.423 685.613 L797.982 685.613 L798.542 685.613 L799.101 685.613 L799.66 685.613 L800.219 685.613 L800.779 685.613 L801.338 685.613 L801.897 685.613 L802.456 685.613 L803.016 685.613 L803.575 685.613 L804.134 685.613 L804.693 685.613 L805.253 685.613 L805.812 685.613 L806.371 685.613 L806.931 685.613 L807.49 685.613 L808.049 685.613 L808.608 685.613 L809.168 685.613 L809.727 685.613 L810.286 685.613 L810.845 685.613 L811.405 685.613 L811.964 685.613 L812.523 685.613 L813.082 685.613 L813.642 685.613 L814.201 685.613 L814.76 685.613 L815.319 685.613 L815.879 685.613 L816.438 685.613 L816.997 685.613 L817.556 685.613 L818.116 685.613 L818.675 685.613 L819.234 685.613 L819.793 685.613 L820.353 685.613 L820.912 685.613 L821.471 685.613 L822.03 685.613 L822.59 685.613 L823.149 685.613 L823.708 685.613 L824.267 685.613 L824.827 685.613 L825.386 685.613 L825.945 685.613 L826.504 685.613 L827.064 685.613 L827.623 685.613 L828.182 685.613 L828.741 685.613 L829.301 685.613 L829.86 685.613 L830.419 685.613 L830.978 685.613 L831.538 685.613 L832.097 685.613 L832.656 685.613 L833.215 685.613 L833.775 685.613 L834.334 685.613 L834.893 685.613 L835.452 685.613 L836.012 685.613 L836.571 685.613 L837.13 685.613 L837.689 685.613 L838.249 685.613 L838.808 685.613 L839.367 685.613 L839.926 685.613 L840.486 685.613 L841.045 685.613 L841.604 685.613 L842.163 685.613 L842.723 685.613 L843.282 685.613 L843.841 685.613 L844.4 685.613 L844.96 685.613 L845.519 685.613 L846.078 685.613 L846.637 685.613 L847.197 685.613 L847.756 685.613 L848.315 685.613 L848.874 685.613 L849.434 685.613 L849.993 685.613 L850.552 685.613 L851.111 685.613 L851.671 685.613 L852.23 685.613 L852.789 685.613 L853.348 685.613 L853.908 685.613 L854.467 685.613 L855.026 685.613 L855.585 685.613 L856.145 685.613 L856.704 685.613 L857.263 685.613 L857.822 685.613 L858.382 685.613 L858.941 685.613 L859.5 685.613 L860.059 685.613 L860.619 685.613 L861.178 685.613 L861.737 685.613 L862.296 685.613 L862.856 685.613 L863.415 685.613 L863.974 685.613 L864.533 685.613 L865.093 685.613 L865.652 685.613 L866.211 685.613 L866.77 685.613 L867.33 685.613 L867.889 685.613 L868.448 685.613 L869.007 685.613 L869.567 685.613 L870.126 685.613 L870.685 685.613 L871.244 685.613 L871.804 685.613 L872.363 685.613 L872.922 685.613 L873.481 685.613 L874.041 685.613 L874.6 685.613 L875.159 685.613 L875.718 685.613 L876.278 685.613 L876.837 685.613 L877.396 685.613 L877.955 685.613 L878.515 685.613 L879.074 685.613 L879.633 685.613 L880.192 685.613 L880.752 685.613 L881.311 685.613 L881.87 685.613 L882.429 685.613 L882.989 685.613 L883.548 685.613 L884.107 685.613 L884.666 685.613 L885.226 685.613 L885.785 685.613 L886.344 685.613 L886.903 685.613 L887.463 685.613 L888.022 685.613 L888.581 685.613 L889.14 685.613 L889.7 685.613 L890.259 685.613 L890.818 685.613 L891.377 685.613 L891.937 685.613 L892.496 685.613 L893.055 685.613 L893.614 685.613 L894.174 685.613 L894.733 685.613 L895.292 685.613 L895.851 685.613 L896.411 685.613 L896.97 685.613 L897.529 685.613 L898.088 685.613 L898.648 685.613 L899.207 685.613 L899.766 685.613 L900.325 685.613 L900.885 685.613 L901.444 685.613 L902.003 685.613 L902.562 685.613 L903.122 685.613 L903.681 685.613 L904.24 685.613 L904.799 685.613 L905.359 685.613 L905.918 685.613 L906.477 685.613 L907.036 685.613 L907.596 685.613 L908.155 685.613 L908.714 685.613 L909.273 685.613 L909.833 685.613 L910.392 685.613 L910.951 685.613 L911.51 685.613 L912.07 685.613 L912.629 685.613 L913.188 685.613 L913.747 685.613 L914.307 685.613 L914.866 685.613 L915.425 685.613 L915.984 685.613 L916.544 685.613 L917.103 685.613 L917.662 685.613 L918.221 685.613 L918.781 685.613 L919.34 685.613 L919.899 685.613 L920.458 685.613 L921.018 685.613 L921.577 685.613 L922.136 685.613 L922.695 685.613 L923.255 685.613 L923.814 685.613 L924.373 685.613 L924.932 685.613 L925.492 685.613 L926.051 685.613 L926.61 685.613 L927.169 685.613 L927.729 685.613 L928.288 685.613 L928.847 685.613 L929.406 685.613 L929.966 685.613 L930.525 685.613 L931.084 685.613 L931.644 685.613 L932.203 685.613 L932.762 685.613 L933.321 685.613 L933.881 685.613 L934.44 685.613 L934.999 685.613 L935.558 685.613 L936.118 685.613 L936.677 685.613 L937.236 685.613 L937.795 685.613 L938.355 685.613 L938.914 685.613 L939.473 685.613 L940.032 685.613 L940.592 685.613 L941.151 685.613 L941.71 685.613 L942.269 685.613 L942.829 685.613 L943.388 685.613 L943.947 685.613 L944.506 685.613 L945.066 685.613 L945.625 685.613 L946.184 685.613 L946.743 685.613 L947.303 685.613 L947.862 685.613 L948.421 685.613 L948.98 685.613 L949.54 685.613 L950.099 685.613 L950.658 685.613 L951.217 685.613 L951.777 685.613 L952.336 685.613 L952.895 685.613 L953.454 685.613 L954.014 685.613 L954.573 685.613 L955.132 685.613 L955.691 685.613 L956.251 685.613 L956.81 685.613 L957.369 685.613 L957.928 685.613 L958.488 685.613 L959.047 685.613 L959.606 685.613 L960.165 685.613 L960.725 685.613 L961.284 685.613 L961.843 685.613 L962.402 685.613 L962.962 685.613 L963.521 685.613 L964.08 685.613 L964.639 685.613 L965.199 685.613 L965.758 685.613 L966.317 685.613 L966.876 685.613 L967.436 685.613 L967.995 685.613 L968.554 685.613 L969.113 685.613 L969.673 685.613 L970.232 685.613 L970.791 685.613 L971.35 685.613 L971.91 685.613 L972.469 685.613 L973.028 685.613 L973.587 685.613 L974.147 685.613 L974.706 685.613 L975.265 685.613 L975.824 685.613 L976.384 685.613 L976.943 685.613 L977.502 685.613 L978.061 685.613 L978.621 685.613 L979.18 685.613 L979.739 685.613 L980.298 685.613 L980.858 685.613 L981.417 685.613 L981.976 685.613 L982.535 685.613 L983.095 685.613 L983.654 685.613 L984.213 685.613 L984.772 685.613 L985.332 685.613 L985.891 685.613 L986.45 685.613 L987.009 685.613 L987.569 685.613 L988.128 685.613 L988.687 685.613 L989.246 685.613 L989.806 685.613 L990.365 685.613 L990.924 685.613 L991.483 685.613 L992.043 685.613 L992.602 685.613 L993.161 685.613 L993.72 685.613 L994.28 685.613 L994.839 685.613 L995.398 685.613 L995.957 685.613 L996.517 685.613 L997.076 685.613 L997.635 685.613 L998.194 685.613 L998.754 685.613 L999.313 685.613 L999.872 685.613 L1000.43 685.613 L1000.99 685.613 L1001.55 685.613 L1002.11 685.613 L1002.67 685.613 L1003.23 685.613 L1003.79 685.613 L1004.35 685.613 L1004.91 685.613 L1005.46 685.613 L1006.02 685.613 L1006.58 685.613 L1007.14 685.613 L1007.7 685.613 L1008.26 685.613 L1008.82 685.613 L1009.38 685.613 L1009.94 685.613 L1010.5 685.613 L1011.06 685.613 L1011.62 685.613 L1012.18 685.613 L1012.73 685.613 L1013.29 685.613 L1013.85 685.613 L1014.41 685.613 L1014.97 685.613 L1015.53 685.613 L1016.09 685.613 L1016.65 685.613 L1017.21 685.613 L1017.77 685.613 L1018.33 685.613 L1018.89 685.613 L1019.45 685.613 L1020.01 685.613 L1020.56 685.613 L1021.12 685.613 L1021.68 685.613 L1022.24 685.613 L1022.8 685.613 L1023.36 685.613 L1023.92 685.613 L1024.48 685.613 L1025.04 685.613 L1025.6 685.613 L1026.16 685.613 L1026.72 685.613 L1027.28 685.613 L1027.83 685.613 L1028.39 685.613 L1028.95 685.613 L1029.51 685.613 L1030.07 685.613 L1030.63 685.613 L1031.19 685.613 L1031.75 685.613 L1032.31 685.613 L1032.87 685.613 L1033.43 685.613 L1033.99 685.613 L1034.55 685.613 L1035.1 685.613 L1035.66 685.613 L1036.22 685.613 L1036.78 685.613 L1037.34 685.613 L1037.9 685.613 L1038.46 685.613 L1039.02 685.613 L1039.58 685.613 L1040.14 685.613 L1040.7 685.613 L1041.26 685.613 L1041.82 685.613 L1042.38 685.613 L1042.93 685.613 L1043.49 685.613 L1044.05 685.613 L1044.61 685.613 L1045.17 685.613 L1045.73 685.613 L1046.29 685.613 L1046.85 685.613 L1047.41 685.613 L1047.97 685.613 L1048.53 685.613 L1049.09 685.613 L1049.65 685.613 L1050.2 685.613 L1050.76 685.613 L1051.32 685.613 L1051.88 685.613 L1052.44 685.613 L1053 685.613 L1053.56 685.613 L1054.12 685.613 L1054.68 685.613 L1055.24 685.613 L1055.8 685.613 L1056.36 685.613 L1056.92 685.613 L1057.48 685.613 L1058.03 685.613 L1058.59 685.613 L1059.15 685.613 L1059.71 685.613 L1060.27 685.613 L1060.83 685.613 L1061.39 685.613 L1061.95 685.613 L1062.51 685.613 L1063.07 685.613 L1063.63 685.613 L1064.19 685.613 L1064.75 685.613 L1065.3 685.613 L1065.86 685.613 L1066.42 685.613 L1066.98 685.613 L1067.54 685.613 L1068.1 685.613 L1068.66 685.613 L1069.22 685.613 L1069.78 685.613 L1070.34 685.613 L1070.9 685.613 L1071.46 685.613 L1072.02 685.613 L1072.57 685.613 L1073.13 685.613 L1073.69 685.613 L1074.25 685.613 L1074.81 685.613 L1075.37 685.613 L1075.93 685.613 L1076.49 685.613 L1077.05 685.613 L1077.61 685.613 L1078.17 685.613 L1078.73 685.613 L1079.29 685.613 L1079.85 685.613 L1080.4 685.613 L1080.96 685.613 L1081.52 685.613 L1082.08 685.613 L1082.64 685.613 L1083.2 685.613 L1083.76 685.613 L1084.32 685.613 L1084.88 685.613 L1085.44 685.613 L1086 685.613 L1086.56 685.613 L1087.12 685.613 L1087.67 685.613 L1088.23 685.613 L1088.79 685.613 L1089.35 685.613 L1089.91 685.613 L1090.47 685.613 L1091.03 685.613 L1091.59 685.613 L1092.15 685.613 L1092.71 685.613 L1093.27 685.613 L1093.83 685.613 L1094.39 685.613 L1094.94 685.613 L1095.5 685.613 L1096.06 685.613 L1096.62 685.613 L1097.18 685.613 L1097.74 685.613 L1098.3 685.613 L1098.86 685.613 L1099.42 685.613 L1099.98 685.613 L1100.54 685.613 L1101.1 685.613 L1101.66 685.613 L1102.22 685.613 L1102.77 685.613 L1103.33 685.613 L1103.89 685.613 L1104.45 685.613 L1105.01 685.613 L1105.57 685.613 L1106.13 685.613 L1106.69 685.613 L1107.25 685.613 L1107.81 685.613 L1108.37 685.613 L1108.93 685.613 L1109.49 685.613 L1110.04 685.613 L1110.6 685.613 L1111.16 685.613 L1111.72 685.613 L1112.28 685.613 L1112.84 685.613 L1113.4 685.613 L1113.96 685.613 L1114.52 685.613 L1115.08 685.613 L1115.64 685.613 L1116.2 685.613 L1116.76 685.613 L1117.31 685.613 L1117.87 685.613 L1118.43 685.613 L1118.99 685.613 L1119.55 685.613 L1120.11 685.613 L1120.67 685.613 L1121.23 685.613 L1121.79 685.613 L1122.35 685.613 L1122.91 685.613 L1123.47 685.613 L1124.03 685.613 L1124.59 685.613 L1125.14 685.613 L1125.7 685.613 L1126.26 685.613 L1126.82 685.613 L1127.38 685.613 L1127.94 685.613 L1128.5 685.613 L1129.06 685.613 L1129.62 685.613 L1130.18 685.613 L1130.74 685.613 L1131.3 685.613 L1131.86 685.613 L1132.41 685.613 L1132.97 685.613 L1133.53 685.613 L1134.09 685.613 L1134.65 685.613 L1135.21 685.613 L1135.77 685.613 L1136.33 685.613 L1136.89 685.613 L1137.45 685.613 L1138.01 685.613 L1138.57 685.613 L1139.13 685.613 L1139.68 685.613 L1140.24 685.613 L1140.8 685.613 L1141.36 685.613 L1141.92 685.613 L1142.48 685.613 L1143.04 685.613 L1143.6 685.613 L1144.16 685.613 L1144.72 685.613 L1145.28 685.613 L1145.84 685.613 L1146.4 685.613 L1146.96 685.613 L1147.51 685.613 L1148.07 685.613 L1148.63 685.613 L1149.19 685.613 L1149.75 685.613 L1150.31 685.613 L1150.87 685.613 L1151.43 685.613 L1151.99 685.613 L1152.55 685.613 L1153.11 685.613 L1153.67 685.613 L1154.23 685.613 L1154.78 685.613 L1155.34 685.613 L1155.9 685.613 L1156.46 685.613 L1157.02 685.613 L1157.58 685.613 L1158.14 685.613 L1158.7 685.613 L1159.26 685.613 L1159.82 685.613 L1160.38 685.613 L1160.94 685.613 L1161.5 685.613 L1162.05 685.613 L1162.61 685.613 L1163.17 685.613 L1163.73 685.613 L1164.29 685.613 L1164.85 685.613 L1165.41 685.613 L1165.97 685.613 L1166.53 685.613 L1167.09 685.613 L1167.65 685.613 L1168.21 685.613 L1168.77 685.613 L1169.33 685.613 L1169.88 685.613 L1170.44 685.613 L1171 685.613 L1171.56 685.613 L1172.12 685.613 L1172.68 685.613 L1173.24 685.613 L1173.8 685.613 L1174.36 685.613 L1174.92 685.613 L1175.48 685.613 L1176.04 685.613 L1176.6 685.613 L1177.15 685.613 L1177.71 685.613 L1178.27 685.613 L1178.83 685.613 L1179.39 685.613 L1179.95 685.613 L1180.51 685.613 L1181.07 685.613 L1181.63 685.613 L1182.19 685.613 L1182.75 685.613 L1183.31 685.613 L1183.87 685.613 L1184.43 685.613 L1184.98 685.613 L1185.54 685.613 L1186.1 685.613 L1186.66 685.613 L1187.22 685.613 L1187.78 685.613 L1188.34 685.613 L1188.9 685.613 L1189.46 685.613 L1190.02 685.613 L1190.58 685.613 L1191.14 685.613 L1191.7 685.613 L1192.25 685.613 L1192.81 685.613 L1193.37 685.613 L1193.93 685.613 L1194.49 685.613 L1195.05 685.613 L1195.61 685.613 L1196.17 685.613 L1196.73 685.613 L1197.29 685.613 L1197.85 685.613 L1198.41 685.613 L1198.97 685.613 L1199.52 685.613 L1200.08 685.613 L1200.64 685.613 L1201.2 685.613 L1201.76 685.613 L1202.32 685.613 L1202.88 685.613 L1203.44 685.613 L1204 685.613 L1204.56 685.613 L1205.12 685.613 L1205.68 685.613 L1206.24 685.613 L1206.8 685.613 L1207.35 685.613 L1207.91 685.613 L1208.47 685.613 L1209.03 685.613 L1209.59 685.613 L1210.15 685.613 L1210.71 685.613 L1211.27 685.613 L1211.83 685.613 L1212.39 685.613 L1212.95 685.613 L1213.51 685.613 L1214.07 685.613 L1214.62 685.613 L1215.18 685.613 L1215.74 685.613 L1216.3 685.613 L1216.86 685.613 L1217.42 685.613 L1217.98 685.613 L1218.54 685.613 L1219.1 685.613 L1219.66 685.613 L1220.22 685.613 L1220.78 685.613 L1221.34 685.613 L1221.89 685.613 L1222.45 685.613 L1223.01 685.613 L1223.57 685.613 L1224.13 685.613 L1224.69 685.613 L1225.25 685.613 L1225.81 685.613 L1226.37 685.613 L1226.93 685.613 L1227.49 685.613 L1228.05 685.613 L1228.61 685.613 L1229.17 685.613 L1229.72 685.613 L1230.28 685.613 L1230.84 685.613 L1231.4 685.613 L1231.96 685.613 L1232.52 685.613 L1233.08 685.613 L1233.64 685.613 L1234.2 685.613 L1234.76 685.613 L1235.32 685.613 L1235.88 685.613 L1236.44 685.613 L1236.99 685.613 L1237.55 685.613 L1238.11 685.613 L1238.67 685.613 L1239.23 685.613 L1239.79 685.613 L1240.35 685.613 L1240.91 685.613 L1241.47 685.613 L1242.03 685.613 L1242.59 685.613 L1243.15 685.613 L1243.71 685.613 L1244.26 685.613 L1244.82 685.613 L1245.38 685.613 L1245.94 685.613 L1246.5 685.613 L1247.06 685.613 L1247.62 685.613 L1248.18 685.613 L1248.74 685.613 L1249.3 685.613 L1249.86 685.613 L1250.42 685.613 L1250.98 685.613 L1251.54 685.613 L1252.09 685.613 L1252.65 685.613 L1253.21 685.613 L1253.77 685.613 L1254.33 685.613 L1254.89 685.613 L1255.45 685.613 L1256.01 685.613 L1256.57 685.613 L1257.13 685.613 L1257.69 685.613 L1258.25 685.613 L1258.81 685.613 L1259.36 685.613 L1259.92 685.613 L1260.48 685.613 L1261.04 685.613 L1261.6 685.613 L1262.16 685.613 L1262.72 685.613 L1263.28 685.613 L1263.84 685.613 L1264.4 685.613 L1264.96 685.613 L1265.52 685.613 L1266.08 685.613 L1266.63 685.613 L1267.19 685.613 L1267.75 685.613 L1268.31 685.613 L1268.87 685.613 L1269.43 685.613 L1269.99 685.613 L1270.55 685.613 L1271.11 685.613 L1271.67 685.613 L1272.23 685.613 L1272.79 685.613 L1273.35 685.613 L1273.91 685.613 L1274.46 685.613 L1275.02 685.613 L1275.58 685.613 L1276.14 685.613 L1276.7 685.613 L1277.26 685.613 L1277.82 685.613 L1278.38 685.613 L1278.94 685.613 L1279.5 685.613 L1280.06 685.613 L1280.62 685.613 L1281.18 685.613 L1281.73 685.613 L1282.29 685.613 L1282.85 685.613 L1283.41 685.613 L1283.97 685.613 L1284.53 685.613 L1285.09 685.613 L1285.65 685.613 L1286.21 685.613 L1286.77 685.613 L1287.33 685.613 L1287.89 685.613 L1288.45 685.613 L1289 685.613 L1289.56 685.613 L1290.12 685.613 L1290.68 685.613 L1291.24 685.613 L1291.8 685.613 L1292.36 685.613 L1292.92 685.613 L1293.48 685.613 L1294.04 685.613 L1294.6 685.613 L1295.16 685.613 L1295.72 685.613 L1296.28 685.613 L1296.83 685.613 L1297.39 685.613 L1297.95 685.613 L1298.51 685.613 L1299.07 685.613 L1299.63 685.613 L1300.19 685.613 L1300.75 685.613 L1301.31 685.613 L1301.87 685.613 L1302.43 685.613 L1302.99 685.613 L1303.55 685.613 L1304.1 685.613 L1304.66 685.613 L1305.22 685.613 L1305.78 685.613 L1306.34 685.613 L1306.9 685.613 L1307.46 685.613 L1308.02 685.613 L1308.58 685.613 L1309.14 685.613 L1309.7 685.613 L1310.26 685.613 L1310.82 685.613 L1311.38 685.613 L1311.93 685.613 L1312.49 685.613 L1313.05 685.613 L1313.61 685.613 L1314.17 685.613 L1314.73 685.613 L1315.29 685.613 L1315.85 685.613 L1316.41 685.613 L1316.97 685.613 L1317.53 685.613 L1318.09 685.613 L1318.65 685.613 L1319.2 685.613 L1319.76 685.613 L1320.32 685.613 L1320.88 685.613 L1321.44 685.613 L1322 685.613 L1322.56 685.613 L1323.12 685.613 L1323.68 685.613 L1324.24 685.613 L1324.8 685.613 L1325.36 685.613 L1325.92 685.613 L1326.47 685.613 L1327.03 685.613 L1327.59 685.613 L1328.15 685.613 L1328.71 685.613 L1329.27 685.613 L1329.83 685.613 L1330.39 685.613 L1330.95 685.613 L1331.51 685.613 L1332.07 685.613 L1332.63 685.613 L1333.19 685.613 L1333.75 685.613 L1334.3 685.613 L1334.86 685.613 L1335.42 685.613 L1335.98 685.613 L1336.54 685.613 L1337.1 685.613 L1337.66 685.613 L1338.22 685.613 L1338.78 685.613 L1339.34 685.613 L1339.9 685.613 L1340.46 685.613 L1341.02 685.613 L1341.57 685.613 L1342.13 685.613 L1342.69 685.613 L1343.25 685.613 L1343.81 685.613 L1344.37 685.613 L1344.93 685.613 L1345.49 685.613 L1346.05 685.613 L1346.61 685.613 L1347.17 685.613 L1347.73 685.613 L1348.29 685.613 L1348.84 685.613 L1349.4 685.613 L1349.96 685.613 L1350.52 685.613 L1351.08 685.613 L1351.64 685.613 L1352.2 685.613 L1352.76 685.613 L1353.32 685.613 L1353.88 685.613 L1354.44 685.613 L1355 685.613 L1355.56 685.613 L1356.12 685.613 L1356.67 685.613 L1357.23 685.613 L1357.79 685.613 L1358.35 685.613 L1358.91 685.613 L1359.47 685.613 L1360.03 685.613 L1360.59 685.613 L1361.15 685.613 L1361.71 685.613 L1362.27 685.613 L1362.83 685.613 L1363.39 685.613 L1363.94 685.613 L1364.5 685.613 L1365.06 685.613 L1365.62 685.613 L1366.18 685.613 L1366.74 685.613 L1367.3 685.613 L1367.86 685.613 L1368.42 685.613 L1368.98 685.613 L1369.54 685.613 L1370.1 685.613 L1370.66 685.613 L1371.21 685.613 L1371.77 685.613 L1372.33 685.613 L1372.89 685.613 L1373.45 685.613 L1374.01 685.613 L1374.57 685.613 L1375.13 685.613 L1375.69 685.613 L1376.25 685.613 L1376.81 685.613 L1377.37 685.613 L1377.93 685.613 L1378.49 685.613 L1379.04 685.613 L1379.6 685.613 L1380.16 685.613 L1380.72 685.613 L1381.28 685.613 L1381.84 685.613 L1382.4 685.613 L1382.96 685.613 L1383.52 685.613 L1384.08 685.613 L1384.64 685.613 L1385.2 685.613 L1385.76 685.613 L1386.31 685.613 L1386.87 685.613 L1387.43 685.613 L1387.99 685.613 L1388.55 685.613 L1389.11 685.613 L1389.67 685.613 L1390.23 685.613 L1390.79 685.613 L1391.35 685.613 L1391.91 685.613 L1392.47 685.613 L1393.03 685.613 L1393.58 685.613 L1394.14 685.613 L1394.7 685.613 L1395.26 685.613 L1395.82 685.613 L1396.38 685.613 L1396.94 685.613 L1397.5 685.613 L1398.06 685.613 L1398.62 685.613 L1399.18 685.613 L1399.74 685.613 L1400.3 685.613 L1400.86 685.613 L1401.41 685.613 L1401.97 685.613 L1402.53 685.613 L1403.09 685.613 L1403.65 685.613 L1404.21 685.613 L1404.77 685.613 L1405.33 685.613 L1405.89 685.613 L1406.45 685.613 L1407.01 685.613 L1407.57 685.613 L1408.13 685.613 L1408.68 685.613 L1409.24 685.613 L1409.8 685.613 L1410.36 685.613 L1410.92 685.613 L1411.48 685.613 L1412.04 685.613 L1412.6 685.613 L1413.16 685.613 L1413.72 685.613 L1414.28 685.613 L1414.84 685.613 L1415.4 685.613 L1415.95 685.613 L1416.51 685.613 L1417.07 685.613 L1417.63 685.613 L1418.19 685.613 L1418.75 685.613 L1419.31 685.613 L1419.87 685.613 L1420.43 685.613 L1420.99 685.613 L1421.55 685.613 L1422.11 685.613 L1422.67 685.613 L1423.23 685.613 L1423.78 685.613 L1424.34 685.613 L1424.9 685.613 L1425.46 685.613 L1426.02 685.613 L1426.58 685.613 L1427.14 685.613 L1427.7 685.613 L1428.26 685.613 L1428.82 685.613 L1429.38 685.613 L1429.94 685.613 L1430.5 685.613 L1431.05 685.613 L1431.61 685.613 L1432.17 685.613 L1432.73 685.613 L1433.29 685.613 L1433.85 685.613 L1434.41 685.613 L1434.97 685.613 L1435.53 685.613 L1436.09 685.613 L1436.65 685.613 L1437.21 685.613 L1437.77 685.613 L1438.33 685.613 L1438.88 685.613 L1439.44 685.613 L1440 685.613 L1440.56 685.613 L1441.12 685.613 L1441.68 685.613 L1442.24 685.613 L1442.8 685.613 L1443.36 685.613 L1443.92 685.613 L1444.48 685.613 L1445.04 685.613 L1445.6 685.613 L1446.15 685.613 L1446.71 685.613 L1447.27 685.613 L1447.83 685.613 L1448.39 685.613 L1448.95 685.613 L1449.51 685.613 L1450.07 685.613 L1450.63 685.613 L1451.19 685.613 L1451.75 685.613 L1452.31 685.613 L1452.87 685.613 L1453.42 685.613 L1453.98 685.613 L1454.54 685.613 L1455.1 685.613 L1455.66 685.613 L1456.22 685.613 L1456.78 685.613 L1457.34 685.613 L1457.9 685.613 L1458.46 685.613 L1459.02 685.613 L1459.58 685.613 L1460.14 685.613 L1460.7 685.613 L1461.25 685.613 L1461.81 685.613 L1462.37 685.613 L1462.93 685.613 L1463.49 685.613 L1464.05 685.613 L1464.61 685.613 L1465.17 685.613 L1465.73 685.613 L1466.29 685.613 L1466.85 685.613 L1467.41 685.613 L1467.97 685.613 L1468.52 685.613 L1469.08 685.613 L1469.64 685.613 L1470.2 685.613 L1470.76 685.613 L1471.32 685.613 L1471.88 685.613 L1472.44 685.613 L1473 685.613 L1473.56 685.613 L1474.12 685.613 L1474.68 685.613 L1475.24 685.613 L1475.79 685.613 L1476.35 685.613 L1476.91 685.613 L1477.47 685.613 L1478.03 685.613 L1478.59 685.613 L1479.15 685.613 L1479.71 685.613 L1480.27 685.613 L1480.83 685.613 L1481.39 685.613 L1481.95 685.613 L1482.51 685.613 L1483.07 685.613 L1483.62 685.613 L1484.18 685.613 L1484.74 685.613 L1485.3 685.613 L1485.86 685.613 L1486.42 685.613 L1486.98 685.613 L1487.54 685.613 L1488.1 685.613 L1488.66 685.613 L1489.22 685.613 L1489.78 685.613 L1490.34 685.613 L1490.89 685.613 L1491.45 685.613 L1492.01 685.613 L1492.57 685.613 L1493.13 685.613 L1493.69 685.613 L1494.25 685.613 L1494.81 685.613 L1495.37 685.613 L1495.93 685.613 L1496.49 685.613 L1497.05 685.613 L1497.61 685.613 L1498.16 685.613 L1498.72 685.613 L1499.28 685.613 L1499.84 685.613 L1500.4 685.613 L1500.96 685.613 L1501.52 685.613 L1502.08 685.613 L1502.64 685.613 L1503.2 685.613 L1503.76 685.613 L1504.32 685.613 L1504.88 685.613 L1505.44 685.613 L1505.99 685.613 L1506.55 685.613 L1507.11 685.613 L1507.67 685.613 L1508.23 685.613 L1508.79 685.613 L1509.35 685.613 L1509.91 685.613 L1510.47 685.613 L1511.03 685.613 L1511.59 685.613 L1512.15 685.613 L1512.71 685.613 L1513.26 685.613 L1513.82 685.613 L1514.38 685.613 L1514.94 685.613 L1515.5 685.613 L1516.06 685.613 L1516.62 685.613 L1517.18 685.613 L1517.74 685.613 L1518.3 685.613 L1518.86 685.613 L1519.42 685.613 L1519.98 685.613 L1520.53 685.613 L1521.09 685.613 L1521.65 685.613 L1522.21 685.613 L1522.77 685.613 L1523.33 685.613 L1523.89 685.613 L1524.45 685.613 L1525.01 685.613 L1525.57 685.613 L1526.13 685.613 L1526.69 685.613 L1527.25 685.613 L1527.81 685.613 L1528.36 685.613 L1528.92 685.613 L1529.48 685.613 L1530.04 685.613 L1530.6 685.613 L1531.16 685.613 L1531.72 685.613 L1532.28 685.613 L1532.84 685.613 L1533.4 685.613 L1533.96 685.613 L1534.52 685.613 L1535.08 685.613 L1535.63 685.613 L1536.19 685.613 L1536.75 685.613 L1537.31 685.613 L1537.87 685.613 L1538.43 685.613 L1538.99 685.613 L1539.55 685.613 L1540.11 685.613 L1540.67 685.613 L1541.23 685.613 L1541.79 685.613 L1542.35 685.613 L1542.9 685.613 L1543.46 685.613 L1544.02 685.613 L1544.58 685.613 L1545.14 685.613 L1545.7 685.613 L1546.26 685.613 L1546.82 685.613 L1547.38 685.613 L1547.94 685.613 L1548.5 685.613 L1549.06 685.613 L1549.62 685.613 L1550.18 685.613 L1550.73 685.613 L1551.29 685.613 L1551.85 685.613 L1552.41 685.613 L1552.97 685.613 L1553.53 685.613 L1554.09 685.613 L1554.65 685.613 L1555.21 685.613 L1555.77 685.613 L1556.33 685.613 L1556.89 685.613 L1557.45 685.613 L1558 685.613 L1558.56 685.613 L1559.12 685.613 L1559.68 685.613 L1560.24 685.613 L1560.8 685.613 L1561.36 685.613 L1561.92 685.613 L1562.48 685.613 L1563.04 685.613 L1563.6 685.613 L1564.16 685.613 L1564.72 685.613 L1565.28 685.613 L1565.83 685.613 L1566.39 685.613 L1566.95 685.613 L1567.51 685.613 L1568.07 685.613 L1568.63 685.613 L1569.19 685.613 L1569.75 685.613 L1570.31 685.613 L1570.87 685.613 L1571.43 685.613 L1571.99 685.613 L1572.55 685.613 L1573.1 685.613 L1573.66 685.613 L1574.22 685.613 L1574.78 685.613 L1575.34 685.613 L1575.9 685.613 L1576.46 685.613 L1577.02 685.613 L1577.58 685.613 L1578.14 685.613 L1578.7 685.613 L1579.26 685.613 L1579.82 685.613 L1580.37 685.613 L1580.93 685.613 L1581.49 685.613 L1582.05 685.613 L1582.61 685.613 L1583.17 685.613 L1583.73 685.613 L1584.29 685.613 L1584.85 685.613 L1585.41 685.613 L1585.97 685.613 L1586.53 685.613 L1587.09 685.613 L1587.65 685.613 L1588.2 685.613 L1588.76 685.613 L1589.32 685.613 L1589.88 685.613 L1590.44 685.613 L1591 685.613 L1591.56 685.613 L1592.12 685.613 L1592.68 685.613 L1593.24 685.613 L1593.8 685.613 L1594.36 685.613 L1594.92 685.613 L1595.47 685.613 L1596.03 685.613 L1596.59 685.613 L1597.15 685.613 L1597.71 685.613 L1598.27 685.613 L1598.83 685.613 L1599.39 685.613 L1599.95 685.613 L1600.51 685.613 L1601.07 685.613 L1601.63 685.613 L1602.19 685.613 L1602.74 685.613 L1603.3 685.613 L1603.86 685.613 L1604.42 685.613 L1604.98 685.613 L1605.54 685.613 L1606.1 685.613 L1606.66 685.613 L1607.22 685.613 L1607.78 685.613 L1608.34 685.613 L1608.9 685.613 L1609.46 685.613 L1610.02 685.613 L1610.57 685.613 L1611.13 685.613 L1611.69 685.613 L1612.25 685.613 L1612.81 685.613 L1613.37 685.613 L1613.93 685.613 L1614.49 685.613 L1615.05 685.613 L1615.61 685.613 L1616.17 685.613 L1616.73 685.613 L1617.29 685.613 L1617.84 685.613 L1618.4 685.613 L1618.96 685.613 L1619.52 685.613 L1620.08 685.613 L1620.64 685.613 L1621.2 685.613 L1621.76 685.613 L1622.32 685.613 L1622.88 685.613 L1623.44 685.613 L1624 685.613 L1624.56 685.613 L1625.11 685.613 L1625.67 685.613 L1626.23 685.613 L1626.79 685.613 L1627.35 685.613 L1627.91 685.613 L1628.47 685.613 L1629.03 685.613 L1629.59 685.613 L1630.15 685.613 L1630.71 685.613 L1631.27 685.613 L1631.83 685.613 L1632.39 685.613 L1632.94 685.613 L1633.5 685.613 L1634.06 685.613 L1634.62 685.613 L1635.18 685.613 L1635.74 685.613 L1636.3 685.613 L1636.86 685.613 L1637.42 685.613 L1637.98 685.613 L1638.54 685.613 L1639.1 685.613 L1639.66 685.613 L1640.21 685.613 L1640.77 685.613 L1641.33 685.613 L1641.89 685.613 L1642.45 685.613 L1643.01 685.613 L1643.57 685.613 L1644.13 685.613 L1644.69 685.613 L1645.25 685.613 L1645.81 685.613 L1646.37 685.613 L1646.93 685.613 L1647.48 685.613 L1648.04 685.613 L1648.6 685.613 L1649.16 685.613 L1649.72 685.613 L1650.28 685.613 L1650.84 685.613 L1651.4 685.613 L1651.96 685.613 L1652.52 685.613 L1653.08 685.613 L1653.64 685.613 L1654.2 685.613 L1654.76 685.613 L1655.31 685.613 L1655.87 685.613 L1656.43 685.613 L1656.99 685.613 L1657.55 685.613 L1658.11 685.613 L1658.67 685.613 L1659.23 685.613 L1659.79 685.613 L1660.35 685.613 L1660.91 685.613 L1661.47 685.613 L1662.03 685.613 L1662.58 685.613 L1663.14 685.613 L1663.7 685.613 L1664.26 685.613 L1664.82 685.613 L1665.38 685.613 L1665.94 685.613 L1666.5 685.613 L1667.06 685.613 L1667.62 685.613 L1668.18 685.613 L1668.74 685.613 L1669.3 685.613 L1669.85 685.613 L1670.41 685.613 L1670.97 685.613 L1671.53 685.613 L1672.09 685.613 L1672.65 685.613 L1673.21 685.613 L1673.77 685.613 L1674.33 685.613 L1674.89 685.613 L1675.45 685.613 L1676.01 685.613 L1676.57 685.613 L1677.13 685.613 L1677.68 685.613 L1678.24 685.613 L1678.8 685.613 L1679.36 685.613 L1679.92 685.613 L1680.48 685.613 L1681.04 685.613 L1681.6 685.613 L1682.16 685.613 L1682.72 685.613 L1683.28 685.613 L1683.84 685.613 L1684.4 685.613 L1684.95 685.613 L1685.51 685.613 L1686.07 685.613 L1686.63 685.613 L1687.19 685.613 L1687.75 685.613 L1688.31 685.613 L1688.87 685.613 L1689.43 685.613 L1689.99 685.613 L1690.55 685.613 L1691.11 685.613 L1691.67 685.613 L1692.23 685.613 L1692.78 685.613 L1693.34 685.613 L1693.9 685.613 L1694.46 685.613 L1695.02 685.613 L1695.58 685.613 L1696.14 685.613 L1696.7 685.613 L1697.26 685.613 L1697.82 685.613 L1698.38 685.613 L1698.94 685.613 L1699.5 685.613 L1700.05 685.613 L1700.61 685.613 L1701.17 685.613 L1701.73 685.613 L1702.29 685.613 L1702.85 685.613 L1703.41 685.613 L1703.97 685.613 L1704.53 685.613 L1705.09 685.613 L1705.65 685.613 L1706.21 685.613 L1706.77 685.613 L1707.32 685.613 L1707.88 685.613 L1708.44 685.613 L1709 685.613 L1709.56 685.613 L1710.12 685.613 L1710.68 685.613 L1711.24 685.613 L1711.8 685.613 L1712.36 685.613 L1712.92 685.613 L1713.48 685.613 L1714.04 685.613 L1714.6 685.613 L1715.15 685.613 L1715.71 685.613 L1716.27 685.613 L1716.83 685.613 L1717.39 685.613 L1717.95 685.613 L1718.51 685.613 L1719.07 685.613 L1719.63 685.613 L1720.19 685.613 L1720.75 685.613 L1721.31 685.613 L1721.87 685.613 L1722.42 685.613 L1722.98 685.613 L1723.54 685.613 L1724.1 685.613 L1724.66 685.613 L1725.22 685.613 L1725.78 685.613 L1726.34 685.613 L1726.9 685.613 L1727.46 685.613 L1728.02 685.613 L1728.58 685.613 L1729.14 685.613 L1729.69 685.613 L1730.25 685.613 L1730.81 685.613 L1731.37 685.613 L1731.93 685.613 L1732.49 685.613 L1733.05 685.613 L1733.61 685.613 L1734.17 685.613 L1734.73 685.613 L1735.29 685.613 L1735.85 685.613 L1736.41 685.613 L1736.97 685.613 L1737.52 685.613 L1738.08 685.613 L1738.64 685.613 L1739.2 685.613 L1739.76 685.613 L1740.32 685.613 L1740.88 685.613 L1741.44 685.613 L1742 685.613 L1742.56 685.613 L1743.12 685.613 L1743.68 685.613 L1744.24 685.613 L1744.79 685.613 L1745.35 685.613 L1745.91 685.613 L1746.47 685.613 L1747.03 685.613 L1747.59 685.613 L1748.15 685.613 L1748.71 685.613 L1749.27 685.613 L1749.83 685.613 L1750.39 685.613 L1750.95 685.613 L1751.51 685.613 L1752.06 685.613 L1752.62 685.613 L1753.18 685.613 L1753.74 685.613 L1754.3 685.613 L1754.86 685.613 L1755.42 685.613 L1755.98 685.613 L1756.54 685.613 L1757.1 685.613 L1757.66 685.613 L1758.22 685.613 L1758.78 685.613 L1759.34 685.613 L1759.89 685.613 L1760.45 685.613 L1761.01 685.613 L1761.57 685.613 L1762.13 685.613 L1762.69 685.613 L1763.25 685.613 L1763.81 685.613 L1764.37 685.613 L1764.93 685.613 L1765.49 685.613 L1766.05 685.613 L1766.61 685.613 L1767.16 685.613 L1767.72 685.613 L1768.28 685.613 L1768.84 685.613 L1769.4 685.613 L1769.96 685.613 L1770.52 685.613 L1771.08 685.613 L1771.64 685.613 L1772.2 685.613 L1772.76 685.613 L1773.32 685.613 L1773.88 685.613 L1774.43 685.613 L1774.99 685.613 L1775.55 685.613 L1776.11 685.613 L1776.67 685.613 L1777.23 685.613 L1777.79 685.613 L1778.35 685.613 L1778.91 685.613 L1779.47 685.613 L1780.03 685.613 L1780.59 685.613 L1781.15 685.613 L1781.71 685.613 L1782.26 685.613 L1782.82 685.613 L1783.38 685.613 L1783.94 685.613 L1784.5 685.613 L1785.06 685.613 L1785.62 685.613 L1786.18 685.613 L1786.74 685.613 L1787.3 685.613 L1787.86 685.613 L1788.42 685.613 L1788.98 685.613 L1789.53 685.613 L1790.09 685.613 L1790.65 685.613 L1791.21 685.613 L1791.77 685.613 L1792.33 685.613 L1792.89 685.613 L1793.45 685.613 L1794.01 685.613 L1794.57 685.613 L1795.13 685.613 L1795.69 685.613 L1796.25 685.613 L1796.8 685.613 L1797.36 685.613 L1797.92 685.613 L1798.48 685.613 L1799.04 685.613 L1799.6 685.613 L1800.16 685.613 L1800.72 685.613 L1801.28 685.613 L1801.84 685.613 L1802.4 685.613 L1802.96 685.613 L1803.52 685.613 L1804.08 685.613 L1804.63 685.613 L1805.19 685.613 L1805.75 685.613 L1806.31 685.613 L1806.87 685.613 L1807.43 685.613 L1807.99 685.613 L1808.55 685.613 L1809.11 685.613 L1809.67 685.613 L1810.23 685.613 L1810.79 685.613 L1811.35 685.613 L1811.9 685.613 L1812.46 685.613 L1813.02 685.613 L1813.58 685.613 L1814.14 685.613 L1814.7 685.613 L1815.26 685.613 L1815.82 685.613 L1816.38 685.613 L1816.94 685.613 L1817.5 685.613 L1818.06 685.613 L1818.62 685.613 L1819.18 685.613 L1819.73 685.613 L1820.29 685.613 L1820.85 685.613 L1821.41 685.613 L1821.97 685.613 L1822.53 685.613 L1823.09 685.613 L1823.65 685.613 L1824.21 685.613 L1824.77 685.613 L1825.33 685.613 L1825.89 685.613 L1826.45 685.613 L1827 685.613 L1827.56 685.613 L1828.12 685.613 L1828.68 685.613 L1829.24 685.613 L1829.8 685.613 L1830.36 685.613 L1830.92 685.613 L1831.48 685.613 L1832.04 685.613 L1832.6 685.613 L1833.16 685.613 L1833.72 685.613 L1834.27 685.613 L1834.83 685.613 L1835.39 685.613 L1835.95 685.613 L1836.51 685.613 L1837.07 685.613 L1837.63 685.613 L1838.19 685.613 L1838.19 682.014 L1837.63 682.014 L1837.07 682.014 L1836.51 682.014 L1835.95 682.014 L1835.39 682.014 L1834.83 682.014 L1834.27 682.014 L1833.72 682.014 L1833.16 682.014 L1832.6 682.014 L1832.04 682.014 L1831.48 682.014 L1830.92 682.014 L1830.36 682.014 L1829.8 682.014 L1829.24 682.014 L1828.68 682.014 L1828.12 682.014 L1827.56 682.014 L1827 682.014 L1826.45 682.014 L1825.89 682.014 L1825.33 682.014 L1824.77 682.014 L1824.21 682.014 L1823.65 682.014 L1823.09 682.014 L1822.53 682.014 L1821.97 682.014 L1821.41 682.014 L1820.85 682.014 L1820.29 682.014 L1819.73 682.014 L1819.18 682.014 L1818.62 682.014 L1818.06 682.014 L1817.5 682.014 L1816.94 682.014 L1816.38 682.014 L1815.82 682.014 L1815.26 682.014 L1814.7 682.014 L1814.14 682.014 L1813.58 682.014 L1813.02 682.014 L1812.46 682.014 L1811.9 682.014 L1811.35 682.014 L1810.79 682.014 L1810.23 682.014 L1809.67 682.014 L1809.11 682.014 L1808.55 682.014 L1807.99 682.014 L1807.43 682.014 L1806.87 682.014 L1806.31 682.014 L1805.75 682.014 L1805.19 682.014 L1804.63 682.014 L1804.08 682.014 L1803.52 682.014 L1802.96 682.014 L1802.4 682.014 L1801.84 682.014 L1801.28 682.014 L1800.72 682.014 L1800.16 682.014 L1799.6 682.014 L1799.04 682.014 L1798.48 682.014 L1797.92 682.014 L1797.36 682.014 L1796.8 682.014 L1796.25 682.014 L1795.69 682.014 L1795.13 682.014 L1794.57 682.014 L1794.01 682.014 L1793.45 682.014 L1792.89 682.014 L1792.33 682.014 L1791.77 682.014 L1791.21 682.014 L1790.65 682.014 L1790.09 682.014 L1789.53 682.014 L1788.98 682.014 L1788.42 682.014 L1787.86 682.014 L1787.3 682.014 L1786.74 682.014 L1786.18 682.014 L1785.62 682.014 L1785.06 682.014 L1784.5 682.014 L1783.94 682.014 L1783.38 682.014 L1782.82 682.014 L1782.26 682.014 L1781.71 682.014 L1781.15 682.014 L1780.59 682.014 L1780.03 682.014 L1779.47 682.014 L1778.91 682.014 L1778.35 682.014 L1777.79 682.014 L1777.23 682.014 L1776.67 682.014 L1776.11 682.014 L1775.55 682.014 L1774.99 682.014 L1774.43 682.014 L1773.88 682.014 L1773.32 682.014 L1772.76 682.014 L1772.2 682.014 L1771.64 682.014 L1771.08 682.014 L1770.52 682.014 L1769.96 682.014 L1769.4 682.014 L1768.84 682.014 L1768.28 682.014 L1767.72 682.014 L1767.16 682.014 L1766.61 682.014 L1766.05 682.014 L1765.49 682.014 L1764.93 682.014 L1764.37 682.014 L1763.81 682.014 L1763.25 682.014 L1762.69 682.014 L1762.13 682.014 L1761.57 682.014 L1761.01 682.014 L1760.45 682.014 L1759.89 682.014 L1759.34 682.014 L1758.78 682.014 L1758.22 682.014 L1757.66 682.014 L1757.1 682.014 L1756.54 682.014 L1755.98 682.014 L1755.42 682.014 L1754.86 682.014 L1754.3 682.014 L1753.74 682.014 L1753.18 682.014 L1752.62 682.014 L1752.06 682.014 L1751.51 682.014 L1750.95 682.014 L1750.39 682.014 L1749.83 682.014 L1749.27 682.014 L1748.71 682.014 L1748.15 682.014 L1747.59 682.014 L1747.03 682.014 L1746.47 682.014 L1745.91 682.014 L1745.35 682.014 L1744.79 682.014 L1744.24 682.014 L1743.68 682.014 L1743.12 682.014 L1742.56 682.014 L1742 682.014 L1741.44 682.014 L1740.88 682.014 L1740.32 682.014 L1739.76 682.014 L1739.2 682.014 L1738.64 682.014 L1738.08 682.014 L1737.52 682.014 L1736.97 682.014 L1736.41 682.014 L1735.85 682.014 L1735.29 682.014 L1734.73 682.014 L1734.17 682.014 L1733.61 682.014 L1733.05 682.014 L1732.49 682.014 L1731.93 682.014 L1731.37 682.014 L1730.81 682.014 L1730.25 682.014 L1729.69 682.014 L1729.14 682.014 L1728.58 682.014 L1728.02 682.014 L1727.46 682.014 L1726.9 682.014 L1726.34 682.014 L1725.78 682.014 L1725.22 682.014 L1724.66 682.014 L1724.1 682.014 L1723.54 682.014 L1722.98 682.014 L1722.42 682.014 L1721.87 682.014 L1721.31 682.014 L1720.75 682.014 L1720.19 682.014 L1719.63 682.014 L1719.07 682.014 L1718.51 682.014 L1717.95 682.014 L1717.39 682.014 L1716.83 682.014 L1716.27 682.014 L1715.71 682.014 L1715.15 682.014 L1714.6 682.014 L1714.04 682.014 L1713.48 682.014 L1712.92 682.014 L1712.36 682.014 L1711.8 682.014 L1711.24 682.014 L1710.68 682.014 L1710.12 682.014 L1709.56 682.014 L1709 682.014 L1708.44 682.014 L1707.88 682.014 L1707.32 682.014 L1706.77 682.014 L1706.21 682.014 L1705.65 682.014 L1705.09 682.014 L1704.53 682.014 L1703.97 682.014 L1703.41 682.014 L1702.85 682.014 L1702.29 682.014 L1701.73 682.014 L1701.17 682.014 L1700.61 682.014 L1700.05 682.014 L1699.5 682.014 L1698.94 682.014 L1698.38 682.014 L1697.82 682.014 L1697.26 682.014 L1696.7 682.014 L1696.14 682.014 L1695.58 682.014 L1695.02 682.014 L1694.46 682.014 L1693.9 682.014 L1693.34 682.014 L1692.78 682.014 L1692.23 682.014 L1691.67 682.014 L1691.11 682.014 L1690.55 682.014 L1689.99 682.014 L1689.43 682.014 L1688.87 682.014 L1688.31 682.014 L1687.75 682.014 L1687.19 682.014 L1686.63 682.014 L1686.07 682.014 L1685.51 682.014 L1684.95 682.014 L1684.4 682.014 L1683.84 682.014 L1683.28 682.014 L1682.72 682.014 L1682.16 682.014 L1681.6 682.014 L1681.04 682.014 L1680.48 682.014 L1679.92 682.014 L1679.36 682.014 L1678.8 682.014 L1678.24 682.014 L1677.68 682.014 L1677.13 682.014 L1676.57 682.014 L1676.01 682.014 L1675.45 682.014 L1674.89 682.014 L1674.33 682.014 L1673.77 682.014 L1673.21 682.014 L1672.65 682.014 L1672.09 682.014 L1671.53 682.014 L1670.97 682.014 L1670.41 682.014 L1669.85 682.014 L1669.3 682.014 L1668.74 682.014 L1668.18 682.014 L1667.62 682.014 L1667.06 682.014 L1666.5 682.014 L1665.94 682.014 L1665.38 682.014 L1664.82 682.014 L1664.26 682.014 L1663.7 682.014 L1663.14 682.014 L1662.58 682.014 L1662.03 682.014 L1661.47 682.014 L1660.91 682.014 L1660.35 682.014 L1659.79 682.014 L1659.23 682.014 L1658.67 682.014 L1658.11 682.014 L1657.55 682.014 L1656.99 682.014 L1656.43 682.014 L1655.87 682.014 L1655.31 682.014 L1654.76 682.014 L1654.2 682.014 L1653.64 682.014 L1653.08 682.014 L1652.52 682.014 L1651.96 682.014 L1651.4 682.014 L1650.84 682.014 L1650.28 682.014 L1649.72 682.014 L1649.16 682.014 L1648.6 682.014 L1648.04 682.014 L1647.48 682.014 L1646.93 682.014 L1646.37 682.014 L1645.81 682.014 L1645.25 682.014 L1644.69 682.014 L1644.13 682.014 L1643.57 682.014 L1643.01 682.014 L1642.45 682.014 L1641.89 682.014 L1641.33 682.014 L1640.77 682.014 L1640.21 682.014 L1639.66 682.014 L1639.1 682.014 L1638.54 682.014 L1637.98 682.014 L1637.42 682.014 L1636.86 682.014 L1636.3 682.014 L1635.74 682.014 L1635.18 682.014 L1634.62 682.014 L1634.06 682.014 L1633.5 682.014 L1632.94 682.014 L1632.39 682.014 L1631.83 682.014 L1631.27 682.014 L1630.71 682.014 L1630.15 682.014 L1629.59 682.014 L1629.03 682.014 L1628.47 682.014 L1627.91 682.014 L1627.35 682.014 L1626.79 682.014 L1626.23 682.014 L1625.67 682.014 L1625.11 682.014 L1624.56 682.014 L1624 682.014 L1623.44 682.014 L1622.88 682.014 L1622.32 682.014 L1621.76 682.014 L1621.2 682.014 L1620.64 682.014 L1620.08 682.014 L1619.52 682.014 L1618.96 682.014 L1618.4 682.014 L1617.84 682.014 L1617.29 682.014 L1616.73 682.014 L1616.17 682.014 L1615.61 682.014 L1615.05 682.014 L1614.49 682.014 L1613.93 682.014 L1613.37 682.014 L1612.81 682.014 L1612.25 682.014 L1611.69 682.014 L1611.13 682.014 L1610.57 682.014 L1610.02 682.014 L1609.46 682.014 L1608.9 682.014 L1608.34 682.014 L1607.78 682.014 L1607.22 682.014 L1606.66 682.014 L1606.1 682.014 L1605.54 682.014 L1604.98 682.014 L1604.42 682.014 L1603.86 682.014 L1603.3 682.014 L1602.74 682.014 L1602.19 682.014 L1601.63 682.014 L1601.07 682.014 L1600.51 682.014 L1599.95 682.014 L1599.39 682.014 L1598.83 682.014 L1598.27 682.014 L1597.71 682.014 L1597.15 682.014 L1596.59 682.014 L1596.03 682.014 L1595.47 682.014 L1594.92 682.014 L1594.36 682.014 L1593.8 682.014 L1593.24 682.014 L1592.68 682.014 L1592.12 682.014 L1591.56 682.014 L1591 682.014 L1590.44 682.014 L1589.88 682.014 L1589.32 682.014 L1588.76 682.014 L1588.2 682.014 L1587.65 682.014 L1587.09 682.014 L1586.53 682.014 L1585.97 682.014 L1585.41 682.014 L1584.85 682.014 L1584.29 682.014 L1583.73 682.014 L1583.17 682.014 L1582.61 682.014 L1582.05 682.014 L1581.49 682.014 L1580.93 682.014 L1580.37 682.014 L1579.82 682.014 L1579.26 682.014 L1578.7 682.014 L1578.14 682.014 L1577.58 682.014 L1577.02 682.014 L1576.46 682.014 L1575.9 682.014 L1575.34 682.014 L1574.78 682.014 L1574.22 682.014 L1573.66 682.014 L1573.1 682.014 L1572.55 682.014 L1571.99 682.014 L1571.43 682.014 L1570.87 682.014 L1570.31 682.014 L1569.75 682.014 L1569.19 682.014 L1568.63 682.014 L1568.07 682.014 L1567.51 682.014 L1566.95 682.014 L1566.39 682.014 L1565.83 682.014 L1565.28 682.014 L1564.72 682.014 L1564.16 682.014 L1563.6 682.014 L1563.04 682.014 L1562.48 682.014 L1561.92 682.014 L1561.36 682.014 L1560.8 682.014 L1560.24 682.014 L1559.68 682.014 L1559.12 682.014 L1558.56 682.014 L1558 682.014 L1557.45 682.014 L1556.89 682.014 L1556.33 682.014 L1555.77 682.014 L1555.21 682.014 L1554.65 682.014 L1554.09 682.014 L1553.53 682.014 L1552.97 682.014 L1552.41 682.014 L1551.85 682.014 L1551.29 682.014 L1550.73 682.014 L1550.18 682.014 L1549.62 682.014 L1549.06 682.014 L1548.5 682.014 L1547.94 682.014 L1547.38 682.014 L1546.82 682.014 L1546.26 682.014 L1545.7 682.014 L1545.14 682.014 L1544.58 682.014 L1544.02 682.014 L1543.46 682.014 L1542.9 682.014 L1542.35 682.014 L1541.79 682.014 L1541.23 682.014 L1540.67 682.014 L1540.11 682.014 L1539.55 682.014 L1538.99 682.014 L1538.43 682.014 L1537.87 682.014 L1537.31 682.014 L1536.75 682.014 L1536.19 682.014 L1535.63 682.014 L1535.08 682.014 L1534.52 682.014 L1533.96 682.014 L1533.4 682.014 L1532.84 682.014 L1532.28 682.014 L1531.72 682.014 L1531.16 682.014 L1530.6 682.014 L1530.04 682.014 L1529.48 682.014 L1528.92 682.014 L1528.36 682.014 L1527.81 682.014 L1527.25 682.014 L1526.69 682.014 L1526.13 682.014 L1525.57 682.014 L1525.01 682.014 L1524.45 682.014 L1523.89 682.014 L1523.33 682.014 L1522.77 682.014 L1522.21 682.014 L1521.65 682.014 L1521.09 682.014 L1520.53 682.014 L1519.98 682.014 L1519.42 682.014 L1518.86 682.014 L1518.3 682.014 L1517.74 682.014 L1517.18 682.014 L1516.62 682.014 L1516.06 682.014 L1515.5 682.014 L1514.94 682.014 L1514.38 682.014 L1513.82 682.014 L1513.26 682.014 L1512.71 682.014 L1512.15 682.014 L1511.59 682.014 L1511.03 682.014 L1510.47 682.014 L1509.91 682.014 L1509.35 682.014 L1508.79 682.014 L1508.23 682.014 L1507.67 682.014 L1507.11 682.014 L1506.55 682.014 L1505.99 682.014 L1505.44 682.014 L1504.88 682.014 L1504.32 682.014 L1503.76 682.014 L1503.2 682.014 L1502.64 682.014 L1502.08 682.014 L1501.52 682.014 L1500.96 682.014 L1500.4 682.014 L1499.84 682.014 L1499.28 682.014 L1498.72 682.014 L1498.16 682.014 L1497.61 682.014 L1497.05 682.014 L1496.49 682.014 L1495.93 682.014 L1495.37 682.014 L1494.81 682.014 L1494.25 682.014 L1493.69 682.014 L1493.13 682.014 L1492.57 682.014 L1492.01 682.014 L1491.45 682.014 L1490.89 682.014 L1490.34 682.014 L1489.78 682.014 L1489.22 682.014 L1488.66 682.014 L1488.1 682.014 L1487.54 682.014 L1486.98 682.014 L1486.42 682.014 L1485.86 682.014 L1485.3 682.014 L1484.74 682.014 L1484.18 682.014 L1483.62 682.014 L1483.07 682.014 L1482.51 682.014 L1481.95 682.014 L1481.39 682.014 L1480.83 682.014 L1480.27 682.014 L1479.71 682.014 L1479.15 682.014 L1478.59 682.014 L1478.03 682.014 L1477.47 682.014 L1476.91 682.014 L1476.35 682.014 L1475.79 682.014 L1475.24 682.014 L1474.68 682.014 L1474.12 682.014 L1473.56 682.014 L1473 682.014 L1472.44 682.014 L1471.88 682.014 L1471.32 682.014 L1470.76 682.014 L1470.2 682.014 L1469.64 682.014 L1469.08 682.014 L1468.52 682.014 L1467.97 682.014 L1467.41 682.014 L1466.85 682.014 L1466.29 682.014 L1465.73 682.014 L1465.17 682.014 L1464.61 682.014 L1464.05 682.014 L1463.49 682.014 L1462.93 682.014 L1462.37 682.014 L1461.81 682.014 L1461.25 682.014 L1460.7 682.014 L1460.14 682.014 L1459.58 682.014 L1459.02 682.014 L1458.46 682.014 L1457.9 682.014 L1457.34 682.014 L1456.78 682.014 L1456.22 682.014 L1455.66 682.014 L1455.1 682.014 L1454.54 682.014 L1453.98 682.014 L1453.42 682.014 L1452.87 682.014 L1452.31 682.014 L1451.75 682.014 L1451.19 682.014 L1450.63 682.014 L1450.07 682.014 L1449.51 682.014 L1448.95 682.014 L1448.39 682.014 L1447.83 682.014 L1447.27 682.014 L1446.71 682.014 L1446.15 682.014 L1445.6 682.014 L1445.04 682.014 L1444.48 682.014 L1443.92 682.014 L1443.36 682.014 L1442.8 682.014 L1442.24 682.014 L1441.68 682.014 L1441.12 682.014 L1440.56 682.014 L1440 682.014 L1439.44 682.014 L1438.88 682.014 L1438.33 682.014 L1437.77 682.014 L1437.21 682.014 L1436.65 682.014 L1436.09 682.014 L1435.53 682.014 L1434.97 682.014 L1434.41 682.014 L1433.85 682.014 L1433.29 682.014 L1432.73 682.014 L1432.17 682.014 L1431.61 682.014 L1431.05 682.014 L1430.5 682.014 L1429.94 682.014 L1429.38 682.014 L1428.82 682.014 L1428.26 682.014 L1427.7 682.014 L1427.14 682.014 L1426.58 682.014 L1426.02 682.014 L1425.46 682.014 L1424.9 682.014 L1424.34 682.014 L1423.78 682.014 L1423.23 682.014 L1422.67 682.014 L1422.11 682.014 L1421.55 682.014 L1420.99 682.014 L1420.43 682.014 L1419.87 682.014 L1419.31 682.014 L1418.75 682.014 L1418.19 682.014 L1417.63 682.014 L1417.07 682.014 L1416.51 682.014 L1415.95 682.014 L1415.4 682.014 L1414.84 682.014 L1414.28 682.014 L1413.72 682.014 L1413.16 682.014 L1412.6 682.014 L1412.04 682.014 L1411.48 682.014 L1410.92 682.014 L1410.36 682.014 L1409.8 682.014 L1409.24 682.014 L1408.68 682.014 L1408.13 682.014 L1407.57 682.014 L1407.01 682.014 L1406.45 682.014 L1405.89 682.014 L1405.33 682.014 L1404.77 682.014 L1404.21 682.014 L1403.65 682.014 L1403.09 682.014 L1402.53 682.014 L1401.97 682.014 L1401.41 682.014 L1400.86 682.014 L1400.3 682.014 L1399.74 682.014 L1399.18 682.014 L1398.62 682.014 L1398.06 682.014 L1397.5 682.014 L1396.94 682.014 L1396.38 682.014 L1395.82 682.014 L1395.26 682.014 L1394.7 682.014 L1394.14 682.014 L1393.58 682.014 L1393.03 682.014 L1392.47 682.014 L1391.91 682.014 L1391.35 682.014 L1390.79 682.014 L1390.23 682.014 L1389.67 682.014 L1389.11 682.014 L1388.55 682.014 L1387.99 682.014 L1387.43 682.014 L1386.87 682.014 L1386.31 682.014 L1385.76 682.014 L1385.2 682.014 L1384.64 682.014 L1384.08 682.014 L1383.52 682.014 L1382.96 682.014 L1382.4 682.014 L1381.84 682.014 L1381.28 682.014 L1380.72 682.014 L1380.16 682.014 L1379.6 682.014 L1379.04 682.014 L1378.49 682.014 L1377.93 682.014 L1377.37 682.014 L1376.81 682.014 L1376.25 682.014 L1375.69 682.014 L1375.13 682.014 L1374.57 682.014 L1374.01 682.014 L1373.45 682.014 L1372.89 682.014 L1372.33 682.014 L1371.77 682.014 L1371.21 682.014 L1370.66 682.014 L1370.1 682.014 L1369.54 682.014 L1368.98 682.014 L1368.42 682.014 L1367.86 682.014 L1367.3 682.014 L1366.74 682.014 L1366.18 682.014 L1365.62 682.014 L1365.06 682.014 L1364.5 682.014 L1363.94 682.014 L1363.39 682.014 L1362.83 682.014 L1362.27 682.014 L1361.71 682.014 L1361.15 682.014 L1360.59 682.014 L1360.03 682.014 L1359.47 682.014 L1358.91 682.014 L1358.35 682.014 L1357.79 682.014 L1357.23 682.014 L1356.67 682.014 L1356.12 682.014 L1355.56 682.014 L1355 682.014 L1354.44 682.014 L1353.88 682.014 L1353.32 682.014 L1352.76 682.014 L1352.2 682.014 L1351.64 682.014 L1351.08 682.014 L1350.52 682.014 L1349.96 682.014 L1349.4 682.014 L1348.84 682.014 L1348.29 682.014 L1347.73 682.014 L1347.17 682.014 L1346.61 682.014 L1346.05 682.014 L1345.49 682.014 L1344.93 682.014 L1344.37 682.014 L1343.81 682.014 L1343.25 682.014 L1342.69 682.014 L1342.13 682.014 L1341.57 682.014 L1341.02 682.014 L1340.46 682.014 L1339.9 682.014 L1339.34 682.014 L1338.78 682.014 L1338.22 682.014 L1337.66 682.014 L1337.1 682.014 L1336.54 682.014 L1335.98 682.014 L1335.42 682.014 L1334.86 682.014 L1334.3 682.014 L1333.75 682.014 L1333.19 682.014 L1332.63 682.014 L1332.07 682.014 L1331.51 682.014 L1330.95 682.014 L1330.39 682.014 L1329.83 682.014 L1329.27 682.014 L1328.71 682.014 L1328.15 682.014 L1327.59 682.014 L1327.03 682.014 L1326.47 682.014 L1325.92 682.014 L1325.36 682.014 L1324.8 682.014 L1324.24 682.014 L1323.68 682.014 L1323.12 682.014 L1322.56 682.014 L1322 682.014 L1321.44 682.014 L1320.88 682.014 L1320.32 682.014 L1319.76 682.014 L1319.2 682.014 L1318.65 682.014 L1318.09 682.014 L1317.53 682.014 L1316.97 682.014 L1316.41 682.014 L1315.85 682.014 L1315.29 682.014 L1314.73 682.014 L1314.17 682.014 L1313.61 682.014 L1313.05 682.014 L1312.49 682.014 L1311.93 682.014 L1311.38 682.014 L1310.82 682.014 L1310.26 682.014 L1309.7 682.014 L1309.14 682.014 L1308.58 682.014 L1308.02 682.014 L1307.46 682.014 L1306.9 682.014 L1306.34 682.014 L1305.78 682.014 L1305.22 682.014 L1304.66 682.014 L1304.1 682.014 L1303.55 682.014 L1302.99 682.014 L1302.43 682.014 L1301.87 682.014 L1301.31 682.014 L1300.75 682.014 L1300.19 682.014 L1299.63 682.014 L1299.07 682.014 L1298.51 682.014 L1297.95 682.014 L1297.39 682.014 L1296.83 682.014 L1296.28 682.014 L1295.72 682.014 L1295.16 682.014 L1294.6 682.014 L1294.04 682.014 L1293.48 682.014 L1292.92 682.014 L1292.36 682.014 L1291.8 682.014 L1291.24 682.014 L1290.68 682.014 L1290.12 682.014 L1289.56 682.014 L1289 682.014 L1288.45 682.014 L1287.89 682.014 L1287.33 682.014 L1286.77 682.014 L1286.21 682.014 L1285.65 682.014 L1285.09 682.014 L1284.53 682.014 L1283.97 682.014 L1283.41 682.014 L1282.85 682.014 L1282.29 682.014 L1281.73 682.014 L1281.18 682.014 L1280.62 682.014 L1280.06 682.014 L1279.5 682.014 L1278.94 682.014 L1278.38 682.014 L1277.82 682.014 L1277.26 682.014 L1276.7 682.014 L1276.14 682.014 L1275.58 682.014 L1275.02 682.014 L1274.46 682.014 L1273.91 682.014 L1273.35 682.014 L1272.79 682.014 L1272.23 682.014 L1271.67 682.014 L1271.11 682.014 L1270.55 682.014 L1269.99 682.014 L1269.43 682.014 L1268.87 682.014 L1268.31 682.014 L1267.75 682.014 L1267.19 682.014 L1266.63 682.014 L1266.08 682.014 L1265.52 682.014 L1264.96 682.014 L1264.4 682.014 L1263.84 682.014 L1263.28 682.014 L1262.72 682.014 L1262.16 682.014 L1261.6 682.014 L1261.04 682.014 L1260.48 682.014 L1259.92 682.014 L1259.36 682.014 L1258.81 682.014 L1258.25 682.014 L1257.69 682.014 L1257.13 682.014 L1256.57 682.014 L1256.01 682.014 L1255.45 682.014 L1254.89 682.014 L1254.33 682.014 L1253.77 682.014 L1253.21 682.014 L1252.65 682.014 L1252.09 682.014 L1251.54 682.014 L1250.98 682.014 L1250.42 682.014 L1249.86 682.014 L1249.3 682.014 L1248.74 682.014 L1248.18 682.014 L1247.62 682.014 L1247.06 682.014 L1246.5 682.014 L1245.94 682.014 L1245.38 682.014 L1244.82 682.014 L1244.26 682.014 L1243.71 682.014 L1243.15 682.014 L1242.59 682.014 L1242.03 682.014 L1241.47 682.014 L1240.91 682.014 L1240.35 682.014 L1239.79 682.014 L1239.23 682.014 L1238.67 682.014 L1238.11 682.014 L1237.55 682.014 L1236.99 682.014 L1236.44 682.014 L1235.88 682.014 L1235.32 682.014 L1234.76 682.014 L1234.2 682.014 L1233.64 682.014 L1233.08 682.014 L1232.52 682.014 L1231.96 682.014 L1231.4 682.014 L1230.84 682.014 L1230.28 682.014 L1229.72 682.014 L1229.17 682.014 L1228.61 682.014 L1228.05 682.014 L1227.49 682.014 L1226.93 682.014 L1226.37 682.014 L1225.81 682.014 L1225.25 682.014 L1224.69 682.014 L1224.13 682.014 L1223.57 682.014 L1223.01 682.014 L1222.45 682.014 L1221.89 682.014 L1221.34 682.014 L1220.78 682.014 L1220.22 682.014 L1219.66 682.014 L1219.1 682.014 L1218.54 682.014 L1217.98 682.014 L1217.42 682.014 L1216.86 682.014 L1216.3 682.014 L1215.74 682.014 L1215.18 682.014 L1214.62 682.014 L1214.07 682.014 L1213.51 682.014 L1212.95 682.014 L1212.39 682.014 L1211.83 682.014 L1211.27 682.014 L1210.71 682.014 L1210.15 682.014 L1209.59 682.014 L1209.03 682.014 L1208.47 682.014 L1207.91 682.014 L1207.35 682.014 L1206.8 682.014 L1206.24 682.014 L1205.68 682.014 L1205.12 682.014 L1204.56 682.014 L1204 682.014 L1203.44 682.014 L1202.88 682.014 L1202.32 682.014 L1201.76 682.014 L1201.2 682.014 L1200.64 682.014 L1200.08 682.014 L1199.52 682.014 L1198.97 682.014 L1198.41 682.014 L1197.85 682.014 L1197.29 682.014 L1196.73 682.014 L1196.17 682.014 L1195.61 682.014 L1195.05 682.014 L1194.49 682.014 L1193.93 682.014 L1193.37 682.014 L1192.81 682.014 L1192.25 682.014 L1191.7 682.014 L1191.14 682.014 L1190.58 682.014 L1190.02 682.014 L1189.46 682.014 L1188.9 682.014 L1188.34 682.014 L1187.78 682.014 L1187.22 682.014 L1186.66 682.014 L1186.1 682.014 L1185.54 682.014 L1184.98 682.014 L1184.43 682.014 L1183.87 682.014 L1183.31 682.014 L1182.75 682.014 L1182.19 682.014 L1181.63 682.014 L1181.07 682.014 L1180.51 682.014 L1179.95 682.014 L1179.39 682.014 L1178.83 682.014 L1178.27 682.014 L1177.71 682.014 L1177.15 682.014 L1176.6 682.014 L1176.04 682.014 L1175.48 682.014 L1174.92 682.014 L1174.36 682.014 L1173.8 682.014 L1173.24 682.014 L1172.68 682.014 L1172.12 682.014 L1171.56 682.014 L1171 682.014 L1170.44 682.014 L1169.88 682.014 L1169.33 682.014 L1168.77 682.014 L1168.21 682.014 L1167.65 682.014 L1167.09 682.014 L1166.53 682.014 L1165.97 682.014 L1165.41 682.014 L1164.85 682.014 L1164.29 682.014 L1163.73 682.014 L1163.17 682.014 L1162.61 682.014 L1162.05 682.014 L1161.5 682.014 L1160.94 682.014 L1160.38 682.014 L1159.82 682.014 L1159.26 682.014 L1158.7 682.014 L1158.14 682.014 L1157.58 682.014 L1157.02 682.014 L1156.46 682.014 L1155.9 682.014 L1155.34 682.014 L1154.78 682.014 L1154.23 682.014 L1153.67 682.014 L1153.11 682.014 L1152.55 682.014 L1151.99 682.014 L1151.43 682.014 L1150.87 682.014 L1150.31 682.014 L1149.75 682.014 L1149.19 682.014 L1148.63 682.014 L1148.07 682.014 L1147.51 682.014 L1146.96 682.014 L1146.4 682.014 L1145.84 682.014 L1145.28 682.014 L1144.72 682.014 L1144.16 682.014 L1143.6 682.014 L1143.04 682.014 L1142.48 682.014 L1141.92 682.014 L1141.36 682.014 L1140.8 682.014 L1140.24 682.014 L1139.68 682.014 L1139.13 682.014 L1138.57 682.014 L1138.01 682.014 L1137.45 682.014 L1136.89 682.014 L1136.33 682.014 L1135.77 682.014 L1135.21 682.014 L1134.65 682.014 L1134.09 682.014 L1133.53 682.014 L1132.97 682.014 L1132.41 682.014 L1131.86 682.014 L1131.3 682.014 L1130.74 682.014 L1130.18 682.014 L1129.62 682.014 L1129.06 682.014 L1128.5 682.014 L1127.94 682.014 L1127.38 682.014 L1126.82 682.014 L1126.26 682.014 L1125.7 682.014 L1125.14 682.014 L1124.59 682.014 L1124.03 682.014 L1123.47 682.014 L1122.91 682.014 L1122.35 682.014 L1121.79 682.014 L1121.23 682.014 L1120.67 682.014 L1120.11 682.014 L1119.55 682.014 L1118.99 682.014 L1118.43 682.014 L1117.87 682.014 L1117.31 682.014 L1116.76 682.014 L1116.2 682.014 L1115.64 682.014 L1115.08 682.014 L1114.52 682.014 L1113.96 682.014 L1113.4 682.014 L1112.84 682.014 L1112.28 682.014 L1111.72 682.014 L1111.16 682.014 L1110.6 682.014 L1110.04 682.014 L1109.49 682.014 L1108.93 682.014 L1108.37 682.014 L1107.81 682.014 L1107.25 682.014 L1106.69 682.014 L1106.13 682.014 L1105.57 682.014 L1105.01 682.014 L1104.45 682.014 L1103.89 682.014 L1103.33 682.014 L1102.77 682.014 L1102.22 682.014 L1101.66 682.014 L1101.1 682.014 L1100.54 682.014 L1099.98 682.014 L1099.42 682.014 L1098.86 682.014 L1098.3 682.014 L1097.74 682.014 L1097.18 682.014 L1096.62 682.014 L1096.06 682.014 L1095.5 682.014 L1094.94 682.014 L1094.39 682.014 L1093.83 682.014 L1093.27 682.014 L1092.71 682.014 L1092.15 682.014 L1091.59 682.014 L1091.03 682.014 L1090.47 682.014 L1089.91 682.014 L1089.35 682.014 L1088.79 682.014 L1088.23 682.014 L1087.67 682.014 L1087.12 682.014 L1086.56 682.014 L1086 682.014 L1085.44 682.014 L1084.88 682.014 L1084.32 682.014 L1083.76 682.014 L1083.2 682.014 L1082.64 682.014 L1082.08 682.014 L1081.52 682.014 L1080.96 682.014 L1080.4 682.014 L1079.85 682.014 L1079.29 682.014 L1078.73 682.014 L1078.17 682.014 L1077.61 682.014 L1077.05 682.014 L1076.49 682.014 L1075.93 682.014 L1075.37 682.014 L1074.81 682.014 L1074.25 682.014 L1073.69 682.014 L1073.13 682.014 L1072.57 682.014 L1072.02 682.014 L1071.46 682.014 L1070.9 682.014 L1070.34 682.014 L1069.78 682.014 L1069.22 682.014 L1068.66 682.014 L1068.1 682.014 L1067.54 682.014 L1066.98 682.014 L1066.42 682.014 L1065.86 682.014 L1065.3 682.014 L1064.75 682.014 L1064.19 682.014 L1063.63 682.014 L1063.07 682.014 L1062.51 682.014 L1061.95 682.014 L1061.39 682.014 L1060.83 682.014 L1060.27 682.014 L1059.71 682.014 L1059.15 682.014 L1058.59 682.014 L1058.03 682.014 L1057.48 682.014 L1056.92 682.014 L1056.36 682.014 L1055.8 682.014 L1055.24 682.014 L1054.68 682.014 L1054.12 682.014 L1053.56 682.014 L1053 682.014 L1052.44 682.014 L1051.88 682.014 L1051.32 682.014 L1050.76 682.014 L1050.2 682.014 L1049.65 682.014 L1049.09 682.014 L1048.53 682.014 L1047.97 682.014 L1047.41 682.014 L1046.85 682.014 L1046.29 682.014 L1045.73 682.014 L1045.17 682.014 L1044.61 682.014 L1044.05 682.014 L1043.49 682.014 L1042.93 682.014 L1042.38 682.014 L1041.82 682.014 L1041.26 682.014 L1040.7 682.014 L1040.14 682.014 L1039.58 682.014 L1039.02 682.014 L1038.46 682.014 L1037.9 682.014 L1037.34 682.014 L1036.78 682.014 L1036.22 682.014 L1035.66 682.014 L1035.1 682.014 L1034.55 682.014 L1033.99 682.014 L1033.43 682.014 L1032.87 682.014 L1032.31 682.014 L1031.75 682.014 L1031.19 682.014 L1030.63 682.014 L1030.07 682.014 L1029.51 682.014 L1028.95 682.014 L1028.39 682.014 L1027.83 682.014 L1027.28 682.014 L1026.72 682.014 L1026.16 682.014 L1025.6 682.014 L1025.04 682.014 L1024.48 682.014 L1023.92 682.014 L1023.36 682.014 L1022.8 682.014 L1022.24 682.014 L1021.68 682.014 L1021.12 682.014 L1020.56 682.014 L1020.01 682.014 L1019.45 682.014 L1018.89 682.014 L1018.33 682.014 L1017.77 682.014 L1017.21 682.014 L1016.65 682.014 L1016.09 682.014 L1015.53 682.014 L1014.97 682.014 L1014.41 682.014 L1013.85 682.014 L1013.29 682.014 L1012.73 682.014 L1012.18 682.014 L1011.62 682.014 L1011.06 682.014 L1010.5 682.014 L1009.94 682.014 L1009.38 682.014 L1008.82 682.014 L1008.26 682.014 L1007.7 682.014 L1007.14 682.014 L1006.58 682.014 L1006.02 682.014 L1005.46 682.014 L1004.91 682.014 L1004.35 682.014 L1003.79 682.014 L1003.23 682.014 L1002.67 682.014 L1002.11 682.014 L1001.55 682.014 L1000.99 682.014 L1000.43 682.014 L999.872 682.014 L999.313 682.014 L998.754 682.014 L998.194 682.014 L997.635 682.014 L997.076 682.014 L996.517 682.014 L995.957 682.014 L995.398 682.014 L994.839 682.014 L994.28 682.014 L993.72 682.014 L993.161 682.014 L992.602 682.014 L992.043 682.014 L991.483 682.014 L990.924 682.014 L990.365 682.014 L989.806 682.014 L989.246 682.014 L988.687 682.014 L988.128 682.014 L987.569 682.014 L987.009 682.014 L986.45 682.014 L985.891 682.014 L985.332 682.014 L984.772 682.014 L984.213 682.014 L983.654 682.014 L983.095 682.014 L982.535 682.014 L981.976 682.014 L981.417 682.014 L980.858 682.014 L980.298 682.014 L979.739 682.014 L979.18 682.014 L978.621 682.014 L978.061 682.014 L977.502 682.014 L976.943 682.014 L976.384 682.014 L975.824 682.014 L975.265 682.014 L974.706 682.014 L974.147 682.014 L973.587 682.014 L973.028 682.014 L972.469 682.014 L971.91 682.014 L971.35 682.014 L970.791 682.014 L970.232 682.014 L969.673 682.014 L969.113 682.014 L968.554 682.014 L967.995 682.014 L967.436 682.014 L966.876 682.014 L966.317 682.014 L965.758 682.014 L965.199 682.014 L964.639 682.014 L964.08 682.014 L963.521 682.014 L962.962 682.014 L962.402 682.014 L961.843 682.014 L961.284 682.014 L960.725 682.014 L960.165 682.014 L959.606 682.014 L959.047 682.014 L958.488 682.014 L957.928 682.014 L957.369 682.014 L956.81 682.014 L956.251 682.014 L955.691 682.014 L955.132 682.014 L954.573 682.014 L954.014 682.014 L953.454 682.014 L952.895 682.014 L952.336 682.014 L951.777 682.014 L951.217 682.014 L950.658 682.014 L950.099 682.014 L949.54 682.014 L948.98 682.014 L948.421 682.014 L947.862 682.014 L947.303 682.014 L946.743 682.014 L946.184 682.014 L945.625 682.014 L945.066 682.014 L944.506 682.014 L943.947 682.014 L943.388 682.014 L942.829 682.014 L942.269 682.014 L941.71 682.014 L941.151 682.014 L940.592 682.014 L940.032 682.014 L939.473 682.014 L938.914 682.014 L938.355 682.014 L937.795 682.014 L937.236 682.014 L936.677 682.014 L936.118 682.014 L935.558 682.014 L934.999 682.014 L934.44 682.014 L933.881 682.014 L933.321 682.014 L932.762 682.014 L932.203 682.014 L931.644 682.014 L931.084 682.014 L930.525 682.014 L929.966 682.014 L929.406 682.014 L928.847 682.014 L928.288 682.014 L927.729 682.014 L927.169 682.014 L926.61 682.014 L926.051 682.014 L925.492 682.014 L924.932 682.014 L924.373 682.014 L923.814 682.014 L923.255 682.014 L922.695 682.014 L922.136 682.014 L921.577 682.014 L921.018 682.014 L920.458 682.014 L919.899 682.014 L919.34 682.014 L918.781 682.014 L918.221 682.014 L917.662 682.014 L917.103 682.014 L916.544 682.014 L915.984 682.014 L915.425 682.014 L914.866 682.014 L914.307 682.014 L913.747 682.014 L913.188 682.014 L912.629 682.014 L912.07 682.014 L911.51 682.014 L910.951 682.014 L910.392 682.014 L909.833 682.014 L909.273 682.014 L908.714 682.014 L908.155 682.014 L907.596 682.014 L907.036 682.014 L906.477 682.014 L905.918 682.014 L905.359 682.014 L904.799 682.014 L904.24 682.014 L903.681 682.014 L903.122 682.014 L902.562 682.014 L902.003 682.014 L901.444 682.014 L900.885 682.014 L900.325 682.014 L899.766 682.014 L899.207 682.014 L898.648 682.014 L898.088 682.014 L897.529 682.014 L896.97 682.014 L896.411 682.014 L895.851 682.014 L895.292 682.014 L894.733 682.014 L894.174 682.014 L893.614 682.014 L893.055 682.014 L892.496 682.014 L891.937 682.014 L891.377 682.014 L890.818 682.014 L890.259 682.014 L889.7 682.014 L889.14 682.014 L888.581 682.014 L888.022 682.014 L887.463 682.014 L886.903 682.014 L886.344 682.014 L885.785 682.014 L885.226 682.014 L884.666 682.014 L884.107 682.014 L883.548 682.014 L882.989 682.014 L882.429 682.014 L881.87 682.014 L881.311 682.014 L880.752 682.014 L880.192 682.014 L879.633 682.014 L879.074 682.014 L878.515 682.014 L877.955 682.014 L877.396 682.014 L876.837 682.014 L876.278 682.014 L875.718 682.014 L875.159 682.014 L874.6 682.014 L874.041 682.014 L873.481 682.014 L872.922 682.014 L872.363 682.014 L871.804 682.014 L871.244 682.014 L870.685 682.014 L870.126 682.014 L869.567 682.014 L869.007 682.014 L868.448 682.014 L867.889 682.014 L867.33 682.014 L866.77 682.014 L866.211 682.014 L865.652 682.014 L865.093 682.014 L864.533 682.014 L863.974 682.014 L863.415 682.014 L862.856 682.014 L862.296 682.014 L861.737 682.014 L861.178 682.014 L860.619 682.014 L860.059 682.014 L859.5 682.014 L858.941 682.014 L858.382 682.014 L857.822 682.014 L857.263 682.014 L856.704 682.014 L856.145 682.014 L855.585 682.014 L855.026 682.014 L854.467 682.014 L853.908 682.014 L853.348 682.014 L852.789 682.014 L852.23 682.014 L851.671 682.014 L851.111 682.014 L850.552 682.014 L849.993 682.014 L849.434 682.014 L848.874 682.014 L848.315 682.014 L847.756 682.014 L847.197 682.014 L846.637 682.014 L846.078 682.014 L845.519 682.014 L844.96 682.014 L844.4 682.014 L843.841 682.014 L843.282 682.014 L842.723 682.014 L842.163 682.014 L841.604 682.014 L841.045 682.014 L840.486 682.014 L839.926 682.014 L839.367 682.014 L838.808 682.014 L838.249 682.014 L837.689 682.014 L837.13 682.014 L836.571 682.014 L836.012 682.014 L835.452 682.014 L834.893 682.014 L834.334 682.014 L833.775 682.014 L833.215 682.014 L832.656 682.014 L832.097 682.014 L831.538 682.014 L830.978 682.014 L830.419 682.014 L829.86 682.014 L829.301 682.014 L828.741 682.014 L828.182 682.014 L827.623 682.014 L827.064 682.014 L826.504 682.014 L825.945 682.014 L825.386 682.014 L824.827 682.014 L824.267 682.014 L823.708 682.014 L823.149 682.014 L822.59 682.014 L822.03 682.014 L821.471 682.014 L820.912 682.014 L820.353 682.014 L819.793 682.014 L819.234 682.014 L818.675 682.014 L818.116 682.014 L817.556 682.014 L816.997 682.014 L816.438 682.014 L815.879 682.014 L815.319 682.014 L814.76 682.014 L814.201 682.014 L813.642 682.014 L813.082 682.014 L812.523 682.014 L811.964 682.014 L811.405 682.014 L810.845 682.014 L810.286 682.014 L809.727 682.014 L809.168 682.014 L808.608 682.014 L808.049 682.014 L807.49 682.014 L806.931 682.014 L806.371 682.014 L805.812 682.014 L805.253 682.014 L804.693 682.014 L804.134 682.014 L803.575 682.014 L803.016 682.014 L802.456 682.014 L801.897 682.014 L801.338 682.014 L800.779 682.014 L800.219 682.014 L799.66 682.014 L799.101 682.014 L798.542 682.014 L797.982 682.014 L797.423 682.014 L796.864 682.014 L796.305 682.014 L795.745 682.014 L795.186 682.014 L794.627 682.014 L794.068 682.014 L793.508 682.014 L792.949 682.014 L792.39 682.014 L791.831 682.014 L791.271 682.014 L790.712 682.014 L790.153 682.014 L789.594 682.014 L789.034 682.014 L788.475 682.014 L787.916 682.014 L787.357 682.014 L786.797 682.014 L786.238 682.014 L785.679 682.014 L785.12 682.014 L784.56 682.014 L784.001 682.014 L783.442 682.014 L782.883 682.014 L782.323 682.014 L781.764 682.014 L781.205 682.014 L780.646 682.014 L780.086 682.014 L779.527 682.014 L778.968 682.014 L778.409 682.014 L777.849 682.014 L777.29 682.014 L776.731 682.014 L776.172 682.014 L775.612 682.014 L775.053 682.014 L774.494 682.014 L773.935 682.014 L773.375 682.014 L772.816 682.014 L772.257 682.014 L771.698 682.014 L771.138 682.014 L770.579 682.014 L770.02 682.014 L769.461 682.014 L768.901 682.014 L768.342 682.014 L767.783 682.014 L767.224 682.014 L766.664 682.014 L766.105 682.014 L765.546 682.014 L764.987 682.014 L764.427 682.014 L763.868 682.014 L763.309 682.014 L762.75 682.014 L762.19 682.014 L761.631 682.014 L761.072 682.014 L760.513 682.014 L759.953 682.014 L759.394 682.014 L758.835 682.014 L758.276 682.014 L757.716 682.014 L757.157 682.014 L756.598 682.014 L756.039 682.014 L755.479 682.014 L754.92 682.014 L754.361 682.014 L753.802 682.014 L753.242 682.014 L752.683 682.014 L752.124 682.014 L751.565 682.014 L751.005 682.014 L750.446 682.014 L749.887 682.014 L749.328 682.014 L748.768 682.014 L748.209 682.014 L747.65 682.014 L747.091 682.014 L746.531 682.014 L745.972 682.014 L745.413 682.014 L744.854 682.014 L744.294 682.014 L743.735 682.014 L743.176 682.014 L742.617 682.014 L742.057 682.014 L741.498 682.014 L740.939 682.014 L740.38 682.014 L739.82 682.014 L739.261 682.014 L738.702 682.014 L738.143 682.014 L737.583 682.014 L737.024 682.014 L736.465 682.014 L735.906 682.014 L735.346 682.014 L734.787 682.014 L734.228 682.014 L733.669 682.014 L733.109 682.014 L732.55 682.014 L731.991 682.014 L731.432 682.014 L730.872 682.014 L730.313 682.014 L729.754 682.014 L729.195 682.014 L728.635 682.014 L728.076 682.014 L727.517 682.014 L726.958 682.014 L726.398 682.014 L725.839 682.014 L725.28 682.014 L724.721 682.014 L724.161 682.014 L723.602 682.014 L723.043 682.014 L722.484 682.014 L721.924 682.014 L721.365 682.014 L720.806 682.014 L720.247 682.014  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.873 720.806,683.873 721.365,683.873 721.924,683.873 722.484,683.873 723.043,683.873 723.602,683.873 724.161,683.873 724.721,683.873 725.28,683.873 725.839,683.873 726.398,683.873 726.958,683.873 727.517,683.873 728.076,683.873 728.635,683.873 729.195,683.873 729.754,683.873 730.313,683.873 730.872,683.873 731.432,683.873 731.991,683.873 732.55,683.873 733.109,683.873 733.669,683.873 734.228,683.873 734.787,683.873 735.346,683.873 735.906,683.873 736.465,683.873 737.024,683.873 737.583,683.873 738.143,683.873 738.702,683.873 739.261,683.873 739.82,683.873 740.38,683.873 740.939,683.873 741.498,683.873 742.057,683.873 742.617,683.873 743.176,683.873 743.735,683.873 744.294,683.873 744.854,683.873 745.413,683.873 745.972,683.873 746.531,683.873 747.091,683.873 747.65,683.873 748.209,683.873 748.768,683.873 749.328,683.873 749.887,683.873 750.446,683.873 751.005,683.873 751.565,683.873 752.124,683.873 752.683,683.873 753.242,683.873 753.802,683.873 754.361,683.873 754.92,683.873 755.479,683.873 756.039,683.873 756.598,683.873 757.157,683.873 757.716,683.873 758.276,683.873 758.835,683.873 759.394,683.873 759.953,683.873 760.513,683.873 761.072,683.873 761.631,683.873 762.19,683.873 762.75,683.873 763.309,683.873 763.868,683.873 764.427,683.873 764.987,683.873 765.546,683.873 766.105,683.873 766.664,683.873 767.224,683.873 767.783,683.873 768.342,683.873 768.901,683.873 769.461,683.873 770.02,683.873 770.579,683.873 771.138,683.873 771.698,683.873 772.257,683.873 772.816,683.873 773.375,683.873 773.935,683.873 774.494,683.873 775.053,683.873 775.612,683.873 776.172,683.873 776.731,683.873 777.29,683.873 777.849,683.873 778.409,683.873 778.968,683.873 779.527,683.873 780.086,683.873 780.646,683.873 781.205,683.873 781.764,683.873 782.323,683.873 782.883,683.873 783.442,683.873 784.001,683.873 784.56,683.873 785.12,683.873 785.679,683.873 786.238,683.873 786.797,683.873 787.357,683.873 787.916,683.873 788.475,683.873 789.034,683.873 789.594,683.873 790.153,683.873 790.712,683.873 791.271,683.873 791.831,683.873 792.39,683.873 792.949,683.873 793.508,683.873 794.068,683.873 794.627,683.873 795.186,683.873 795.745,683.873 796.305,683.873 796.864,683.873 797.423,683.873 797.982,683.873 798.542,683.873 799.101,683.873 799.66,683.873 800.219,683.873 800.779,683.873 801.338,683.873 801.897,683.873 802.456,683.873 803.016,683.873 803.575,683.873 804.134,683.873 804.693,683.873 805.253,683.873 805.812,683.873 806.371,683.873 806.931,683.873 807.49,683.873 808.049,683.873 808.608,683.873 809.168,683.873 809.727,683.873 810.286,683.873 810.845,683.873 811.405,683.873 811.964,683.873 812.523,683.873 813.082,683.873 813.642,683.873 814.201,683.873 814.76,683.873 815.319,683.873 815.879,683.873 816.438,683.873 816.997,683.873 817.556,683.873 818.116,683.873 818.675,683.873 819.234,683.873 819.793,683.873 820.353,683.873 820.912,683.873 821.471,683.873 822.03,683.873 822.59,683.873 823.149,683.873 823.708,683.873 824.267,683.873 824.827,683.873 825.386,683.873 825.945,683.873 826.504,683.873 827.064,683.873 827.623,683.873 828.182,683.873 828.741,683.873 829.301,683.873 829.86,683.873 830.419,683.873 830.978,683.873 831.538,683.873 832.097,683.873 832.656,683.873 833.215,683.873 833.775,683.873 834.334,683.873 834.893,683.873 835.452,683.873 836.012,683.873 836.571,683.873 837.13,683.873 837.689,683.873 838.249,683.873 838.808,683.873 839.367,683.873 839.926,683.873 840.486,683.873 841.045,683.873 841.604,683.873 842.163,683.873 842.723,683.873 843.282,683.873 843.841,683.873 844.4,683.873 844.96,683.873 845.519,683.873 846.078,683.873 846.637,683.873 847.197,683.873 847.756,683.873 848.315,683.873 848.874,683.873 849.434,683.873 849.993,683.873 850.552,683.873 851.111,683.873 851.671,683.873 852.23,683.873 852.789,683.873 853.348,683.873 853.908,683.873 854.467,683.873 855.026,683.873 855.585,683.873 856.145,683.873 856.704,683.873 857.263,683.873 857.822,683.873 858.382,683.873 858.941,683.873 859.5,683.873 860.059,683.873 860.619,683.873 861.178,683.873 861.737,683.873 862.296,683.873 862.856,683.873 863.415,683.873 863.974,683.873 864.533,683.873 865.093,683.873 865.652,683.873 866.211,683.873 866.77,683.873 867.33,683.873 867.889,683.873 868.448,683.873 869.007,683.873 869.567,683.873 870.126,683.873 870.685,683.873 871.244,683.873 871.804,683.873 872.363,683.873 872.922,683.873 873.481,683.873 874.041,683.873 874.6,683.873 875.159,683.873 875.718,683.873 876.278,683.873 876.837,683.873 877.396,683.873 877.955,683.873 878.515,683.873 879.074,683.873 879.633,683.873 880.192,683.873 880.752,683.873 881.311,683.873 881.87,683.873 882.429,683.873 882.989,683.873 883.548,683.873 884.107,683.873 884.666,683.873 885.226,683.873 885.785,683.873 886.344,683.873 886.903,683.873 887.463,683.873 888.022,683.873 888.581,683.873 889.14,683.873 889.7,683.873 890.259,683.873 890.818,683.873 891.377,683.873 891.937,683.873 892.496,683.873 893.055,683.873 893.614,683.873 894.174,683.873 894.733,683.873 895.292,683.873 895.851,683.873 896.411,683.873 896.97,683.873 897.529,683.873 898.088,683.873 898.648,683.873 899.207,683.873 899.766,683.873 900.325,683.873 900.885,683.873 901.444,683.873 902.003,683.873 902.562,683.873 903.122,683.873 903.681,683.873 904.24,683.873 904.799,683.873 905.359,683.873 905.918,683.873 906.477,683.873 907.036,683.873 907.596,683.873 908.155,683.873 908.714,683.873 909.273,683.873 909.833,683.873 910.392,683.873 910.951,683.873 911.51,683.873 912.07,683.873 912.629,683.873 913.188,683.873 913.747,683.873 914.307,683.873 914.866,683.873 915.425,683.873 915.984,683.873 916.544,683.873 917.103,683.873 917.662,683.873 918.221,683.873 918.781,683.873 919.34,683.873 919.899,683.873 920.458,683.873 921.018,683.873 921.577,683.873 922.136,683.873 922.695,683.873 923.255,683.873 923.814,683.873 924.373,683.873 924.932,683.873 925.492,683.873 926.051,683.873 926.61,683.873 927.169,683.873 927.729,683.873 928.288,683.873 928.847,683.873 929.406,683.873 929.966,683.873 930.525,683.873 931.084,683.873 931.644,683.873 932.203,683.873 932.762,683.873 933.321,683.873 933.881,683.873 934.44,683.873 934.999,683.873 935.558,683.873 936.118,683.873 936.677,683.873 937.236,683.873 937.795,683.873 938.355,683.873 938.914,683.873 939.473,683.873 940.032,683.873 940.592,683.873 941.151,683.873 941.71,683.873 942.269,683.873 942.829,683.873 943.388,683.873 943.947,683.873 944.506,683.873 945.066,683.873 945.625,683.873 946.184,683.873 946.743,683.873 947.303,683.873 947.862,683.873 948.421,683.873 948.98,683.873 949.54,683.873 950.099,683.873 950.658,683.873 951.217,683.873 951.777,683.873 952.336,683.873 952.895,683.873 953.454,683.873 954.014,683.873 954.573,683.873 955.132,683.873 955.691,683.873 956.251,683.873 956.81,683.873 957.369,683.873 957.928,683.873 958.488,683.873 959.047,683.873 959.606,683.873 960.165,683.873 960.725,683.873 961.284,683.873 961.843,683.873 962.402,683.873 962.962,683.873 963.521,683.873 964.08,683.873 964.639,683.873 965.199,683.873 965.758,683.873 966.317,683.873 966.876,683.873 967.436,683.873 967.995,683.873 968.554,683.873 969.113,683.873 969.673,683.873 970.232,683.873 970.791,683.873 971.35,683.873 971.91,683.873 972.469,683.873 973.028,683.873 973.587,683.873 974.147,683.873 974.706,683.873 975.265,683.873 975.824,683.873 976.384,683.873 976.943,683.873 977.502,683.873 978.061,683.873 978.621,683.873 979.18,683.873 979.739,683.873 980.298,683.873 980.858,683.873 981.417,683.873 981.976,683.873 982.535,683.873 983.095,683.873 983.654,683.873 984.213,683.873 984.772,683.873 985.332,683.873 985.891,683.873 986.45,683.873 987.009,683.873 987.569,683.873 988.128,683.873 988.687,683.873 989.246,683.873 989.806,683.873 990.365,683.873 990.924,683.873 991.483,683.873 992.043,683.873 992.602,683.873 993.161,683.873 993.72,683.873 994.28,683.873 994.839,683.873 995.398,683.873 995.957,683.873 996.517,683.873 997.076,683.873 997.635,683.873 998.194,683.873 998.754,683.873 999.313,683.873 999.872,683.873 1000.43,683.873 1000.99,683.873 1001.55,683.873 1002.11,683.873 1002.67,683.873 1003.23,683.873 1003.79,683.873 1004.35,683.873 1004.91,683.873 1005.46,683.873 1006.02,683.873 1006.58,683.873 1007.14,683.873 1007.7,683.873 1008.26,683.873 1008.82,683.873 1009.38,683.873 1009.94,683.873 1010.5,683.873 1011.06,683.873 1011.62,683.873 1012.18,683.873 1012.73,683.873 1013.29,683.873 1013.85,683.873 1014.41,683.873 1014.97,683.873 1015.53,683.873 1016.09,683.873 1016.65,683.873 1017.21,683.873 1017.77,683.873 1018.33,683.873 1018.89,683.873 1019.45,683.873 1020.01,683.873 1020.56,683.873 1021.12,683.873 1021.68,683.873 1022.24,683.873 1022.8,683.873 1023.36,683.873 1023.92,683.873 1024.48,683.873 1025.04,683.873 1025.6,683.873 1026.16,683.873 1026.72,683.873 1027.28,683.873 1027.83,683.873 1028.39,683.873 1028.95,683.873 1029.51,683.873 1030.07,683.873 1030.63,683.873 1031.19,683.873 1031.75,683.873 1032.31,683.873 1032.87,683.873 1033.43,683.873 1033.99,683.873 1034.55,683.873 1035.1,683.873 1035.66,683.873 1036.22,683.873 1036.78,683.873 1037.34,683.873 1037.9,683.873 1038.46,683.873 1039.02,683.873 1039.58,683.873 1040.14,683.873 1040.7,683.873 1041.26,683.873 1041.82,683.873 1042.38,683.873 1042.93,683.873 1043.49,683.873 1044.05,683.873 1044.61,683.873 1045.17,683.873 1045.73,683.873 1046.29,683.873 1046.85,683.873 1047.41,683.873 1047.97,683.873 1048.53,683.873 1049.09,683.873 1049.65,683.873 1050.2,683.873 1050.76,683.873 1051.32,683.873 1051.88,683.873 1052.44,683.873 1053,683.873 1053.56,683.873 1054.12,683.873 1054.68,683.873 1055.24,683.873 1055.8,683.873 1056.36,683.873 1056.92,683.873 1057.48,683.873 1058.03,683.873 1058.59,683.873 1059.15,683.873 1059.71,683.873 1060.27,683.873 1060.83,683.873 1061.39,683.873 1061.95,683.873 1062.51,683.873 1063.07,683.873 1063.63,683.873 1064.19,683.873 1064.75,683.873 1065.3,683.873 1065.86,683.873 1066.42,683.873 1066.98,683.873 1067.54,683.873 1068.1,683.873 1068.66,683.873 1069.22,683.873 1069.78,683.873 1070.34,683.873 1070.9,683.873 1071.46,683.873 1072.02,683.873 1072.57,683.873 1073.13,683.873 1073.69,683.873 1074.25,683.873 1074.81,683.873 1075.37,683.873 1075.93,683.873 1076.49,683.873 1077.05,683.873 1077.61,683.873 1078.17,683.873 1078.73,683.873 1079.29,683.873 1079.85,683.873 1080.4,683.873 1080.96,683.873 1081.52,683.873 1082.08,683.873 1082.64,683.873 1083.2,683.873 1083.76,683.873 1084.32,683.873 1084.88,683.873 1085.44,683.873 1086,683.873 1086.56,683.873 1087.12,683.873 1087.67,683.873 1088.23,683.873 1088.79,683.873 1089.35,683.873 1089.91,683.873 1090.47,683.873 1091.03,683.873 1091.59,683.873 1092.15,683.873 1092.71,683.873 1093.27,683.873 1093.83,683.873 1094.39,683.873 1094.94,683.873 1095.5,683.873 1096.06,683.873 1096.62,683.873 1097.18,683.873 1097.74,683.873 1098.3,683.873 1098.86,683.873 1099.42,683.873 1099.98,683.873 1100.54,683.873 1101.1,683.873 1101.66,683.873 1102.22,683.873 1102.77,683.873 1103.33,683.873 1103.89,683.873 1104.45,683.873 1105.01,683.873 1105.57,683.873 1106.13,683.873 1106.69,683.873 1107.25,683.873 1107.81,683.873 1108.37,683.873 1108.93,683.873 1109.49,683.873 1110.04,683.873 1110.6,683.873 1111.16,683.873 1111.72,683.873 1112.28,683.873 1112.84,683.873 1113.4,683.873 1113.96,683.873 1114.52,683.873 1115.08,683.873 1115.64,683.873 1116.2,683.873 1116.76,683.873 1117.31,683.873 1117.87,683.873 1118.43,683.873 1118.99,683.873 1119.55,683.873 1120.11,683.873 1120.67,683.873 1121.23,683.873 1121.79,683.873 1122.35,683.873 1122.91,683.873 1123.47,683.873 1124.03,683.873 1124.59,683.873 1125.14,683.873 1125.7,683.873 1126.26,683.873 1126.82,683.873 1127.38,683.873 1127.94,683.873 1128.5,683.873 1129.06,683.873 1129.62,683.873 1130.18,683.873 1130.74,683.873 1131.3,683.873 1131.86,683.873 1132.41,683.873 1132.97,683.873 1133.53,683.873 1134.09,683.873 1134.65,683.873 1135.21,683.873 1135.77,683.873 1136.33,683.873 1136.89,683.873 1137.45,683.873 1138.01,683.873 1138.57,683.873 1139.13,683.873 1139.68,683.873 1140.24,683.873 1140.8,683.873 1141.36,683.873 1141.92,683.873 1142.48,683.873 1143.04,683.873 1143.6,683.873 1144.16,683.873 1144.72,683.873 1145.28,683.873 1145.84,683.873 1146.4,683.873 1146.96,683.873 1147.51,683.873 1148.07,683.873 1148.63,683.873 1149.19,683.873 1149.75,683.873 1150.31,683.873 1150.87,683.873 1151.43,683.873 1151.99,683.873 1152.55,683.873 1153.11,683.873 1153.67,683.873 1154.23,683.873 1154.78,683.873 1155.34,683.873 1155.9,683.873 1156.46,683.873 1157.02,683.873 1157.58,683.873 1158.14,683.873 1158.7,683.873 1159.26,683.873 1159.82,683.873 1160.38,683.873 1160.94,683.873 1161.5,683.873 1162.05,683.873 1162.61,683.873 1163.17,683.873 1163.73,683.873 1164.29,683.873 1164.85,683.873 1165.41,683.873 1165.97,683.873 1166.53,683.873 1167.09,683.873 1167.65,683.873 1168.21,683.873 1168.77,683.873 1169.33,683.873 1169.88,683.873 1170.44,683.873 1171,683.873 1171.56,683.873 1172.12,683.873 1172.68,683.873 1173.24,683.873 1173.8,683.873 1174.36,683.873 1174.92,683.873 1175.48,683.873 1176.04,683.873 1176.6,683.873 1177.15,683.873 1177.71,683.873 1178.27,683.873 1178.83,683.873 1179.39,683.873 1179.95,683.873 1180.51,683.873 1181.07,683.873 1181.63,683.873 1182.19,683.873 1182.75,683.873 1183.31,683.873 1183.87,683.873 1184.43,683.873 1184.98,683.873 1185.54,683.873 1186.1,683.873 1186.66,683.873 1187.22,683.873 1187.78,683.873 1188.34,683.873 1188.9,683.873 1189.46,683.873 1190.02,683.873 1190.58,683.873 1191.14,683.873 1191.7,683.873 1192.25,683.873 1192.81,683.873 1193.37,683.873 1193.93,683.873 1194.49,683.873 1195.05,683.873 1195.61,683.873 1196.17,683.873 1196.73,683.873 1197.29,683.873 1197.85,683.873 1198.41,683.873 1198.97,683.873 1199.52,683.873 1200.08,683.873 1200.64,683.873 1201.2,683.873 1201.76,683.873 1202.32,683.873 1202.88,683.873 1203.44,683.873 1204,683.873 1204.56,683.873 1205.12,683.873 1205.68,683.873 1206.24,683.873 1206.8,683.873 1207.35,683.873 1207.91,683.873 1208.47,683.873 1209.03,683.873 1209.59,683.873 1210.15,683.873 1210.71,683.873 1211.27,683.873 1211.83,683.873 1212.39,683.873 1212.95,683.873 1213.51,683.873 1214.07,683.873 1214.62,683.873 1215.18,683.873 1215.74,683.873 1216.3,683.873 1216.86,683.873 1217.42,683.873 1217.98,683.873 1218.54,683.873 1219.1,683.873 1219.66,683.873 1220.22,683.873 1220.78,683.873 1221.34,683.873 1221.89,683.873 1222.45,683.873 1223.01,683.873 1223.57,683.873 1224.13,683.873 1224.69,683.873 1225.25,683.873 1225.81,683.873 1226.37,683.873 1226.93,683.873 1227.49,683.873 1228.05,683.873 1228.61,683.873 1229.17,683.873 1229.72,683.873 1230.28,683.873 1230.84,683.873 1231.4,683.873 1231.96,683.873 1232.52,683.873 1233.08,683.873 1233.64,683.873 1234.2,683.873 1234.76,683.873 1235.32,683.873 1235.88,683.873 1236.44,683.873 1236.99,683.873 1237.55,683.873 1238.11,683.873 1238.67,683.873 1239.23,683.873 1239.79,683.873 1240.35,683.873 1240.91,683.873 1241.47,683.873 1242.03,683.873 1242.59,683.873 1243.15,683.873 1243.71,683.873 1244.26,683.873 1244.82,683.873 1245.38,683.873 1245.94,683.873 1246.5,683.873 1247.06,683.873 1247.62,683.873 1248.18,683.873 1248.74,683.873 1249.3,683.873 1249.86,683.873 1250.42,683.873 1250.98,683.873 1251.54,683.873 1252.09,683.873 1252.65,683.873 1253.21,683.873 1253.77,683.873 1254.33,683.873 1254.89,683.873 1255.45,683.873 1256.01,683.873 1256.57,683.873 1257.13,683.873 1257.69,683.873 1258.25,683.873 1258.81,683.873 1259.36,683.873 1259.92,683.873 1260.48,683.873 1261.04,683.873 1261.6,683.873 1262.16,683.873 1262.72,683.873 1263.28,683.873 1263.84,683.873 1264.4,683.873 1264.96,683.873 1265.52,683.873 1266.08,683.873 1266.63,683.873 1267.19,683.873 1267.75,683.873 1268.31,683.873 1268.87,683.873 1269.43,683.873 1269.99,683.873 1270.55,683.873 1271.11,683.873 1271.67,683.873 1272.23,683.873 1272.79,683.873 1273.35,683.873 1273.91,683.873 1274.46,683.873 1275.02,683.873 1275.58,683.873 1276.14,683.873 1276.7,683.873 1277.26,683.873 1277.82,683.873 1278.38,683.873 1278.94,683.873 1279.5,683.873 1280.06,683.873 1280.62,683.873 1281.18,683.873 1281.73,683.873 1282.29,683.873 1282.85,683.873 1283.41,683.873 1283.97,683.873 1284.53,683.873 1285.09,683.873 1285.65,683.873 1286.21,683.873 1286.77,683.873 1287.33,683.873 1287.89,683.873 1288.45,683.873 1289,683.873 1289.56,683.873 1290.12,683.873 1290.68,683.873 1291.24,683.873 1291.8,683.873 1292.36,683.873 1292.92,683.873 1293.48,683.873 1294.04,683.873 1294.6,683.873 1295.16,683.873 1295.72,683.873 1296.28,683.873 1296.83,683.873 1297.39,683.873 1297.95,683.873 1298.51,683.873 1299.07,683.873 1299.63,683.873 1300.19,683.873 1300.75,683.873 1301.31,683.873 1301.87,683.873 1302.43,683.873 1302.99,683.873 1303.55,683.873 1304.1,683.873 1304.66,683.873 1305.22,683.873 1305.78,683.873 1306.34,683.873 1306.9,683.873 1307.46,683.873 1308.02,683.873 1308.58,683.873 1309.14,683.873 1309.7,683.873 1310.26,683.873 1310.82,683.873 1311.38,683.873 1311.93,683.873 1312.49,683.873 1313.05,683.873 1313.61,683.873 1314.17,683.873 1314.73,683.873 1315.29,683.873 1315.85,683.873 1316.41,683.873 1316.97,683.873 1317.53,683.873 1318.09,683.873 1318.65,683.873 1319.2,683.873 1319.76,683.873 1320.32,683.873 1320.88,683.873 1321.44,683.873 1322,683.873 1322.56,683.873 1323.12,683.873 1323.68,683.873 1324.24,683.873 1324.8,683.873 1325.36,683.873 1325.92,683.873 1326.47,683.873 1327.03,683.873 1327.59,683.873 1328.15,683.873 1328.71,683.873 1329.27,683.873 1329.83,683.873 1330.39,683.873 1330.95,683.873 1331.51,683.873 1332.07,683.873 1332.63,683.873 1333.19,683.873 1333.75,683.873 1334.3,683.873 1334.86,683.873 1335.42,683.873 1335.98,683.873 1336.54,683.873 1337.1,683.873 1337.66,683.873 1338.22,683.873 1338.78,683.873 1339.34,683.873 1339.9,683.873 1340.46,683.873 1341.02,683.873 1341.57,683.873 1342.13,683.873 1342.69,683.873 1343.25,683.873 1343.81,683.873 1344.37,683.873 1344.93,683.873 1345.49,683.873 1346.05,683.873 1346.61,683.873 1347.17,683.873 1347.73,683.873 1348.29,683.873 1348.84,683.873 1349.4,683.873 1349.96,683.873 1350.52,683.873 1351.08,683.873 1351.64,683.873 1352.2,683.873 1352.76,683.873 1353.32,683.873 1353.88,683.873 1354.44,683.873 1355,683.873 1355.56,683.873 1356.12,683.873 1356.67,683.873 1357.23,683.873 1357.79,683.873 1358.35,683.873 1358.91,683.873 1359.47,683.873 1360.03,683.873 1360.59,683.873 1361.15,683.873 1361.71,683.873 1362.27,683.873 1362.83,683.873 1363.39,683.873 1363.94,683.873 1364.5,683.873 1365.06,683.873 1365.62,683.873 1366.18,683.873 1366.74,683.873 1367.3,683.873 1367.86,683.873 1368.42,683.873 1368.98,683.873 1369.54,683.873 1370.1,683.873 1370.66,683.873 1371.21,683.873 1371.77,683.873 1372.33,683.873 1372.89,683.873 1373.45,683.873 1374.01,683.873 1374.57,683.873 1375.13,683.873 1375.69,683.873 1376.25,683.873 1376.81,683.873 1377.37,683.873 1377.93,683.873 1378.49,683.873 1379.04,683.873 1379.6,683.873 1380.16,683.873 1380.72,683.873 1381.28,683.873 1381.84,683.873 1382.4,683.873 1382.96,683.873 1383.52,683.873 1384.08,683.873 1384.64,683.873 1385.2,683.873 1385.76,683.873 1386.31,683.873 1386.87,683.873 1387.43,683.873 1387.99,683.873 1388.55,683.873 1389.11,683.873 1389.67,683.873 1390.23,683.873 1390.79,683.873 1391.35,683.873 1391.91,683.873 1392.47,683.873 1393.03,683.873 1393.58,683.873 1394.14,683.873 1394.7,683.873 1395.26,683.873 1395.82,683.873 1396.38,683.873 1396.94,683.873 1397.5,683.873 1398.06,683.873 1398.62,683.873 1399.18,683.873 1399.74,683.873 1400.3,683.873 1400.86,683.873 1401.41,683.873 1401.97,683.873 1402.53,683.873 1403.09,683.873 1403.65,683.873 1404.21,683.873 1404.77,683.873 1405.33,683.873 1405.89,683.873 1406.45,683.873 1407.01,683.873 1407.57,683.873 1408.13,683.873 1408.68,683.873 1409.24,683.873 1409.8,683.873 1410.36,683.873 1410.92,683.873 1411.48,683.873 1412.04,683.873 1412.6,683.873 1413.16,683.873 1413.72,683.873 1414.28,683.873 1414.84,683.873 1415.4,683.873 1415.95,683.873 1416.51,683.873 1417.07,683.873 1417.63,683.873 1418.19,683.873 1418.75,683.873 1419.31,683.873 1419.87,683.873 1420.43,683.873 1420.99,683.873 1421.55,683.873 1422.11,683.873 1422.67,683.873 1423.23,683.873 1423.78,683.873 1424.34,683.873 1424.9,683.873 1425.46,683.873 1426.02,683.873 1426.58,683.873 1427.14,683.873 1427.7,683.873 1428.26,683.873 1428.82,683.873 1429.38,683.873 1429.94,683.873 1430.5,683.873 1431.05,683.873 1431.61,683.873 1432.17,683.873 1432.73,683.873 1433.29,683.873 1433.85,683.873 1434.41,683.873 1434.97,683.873 1435.53,683.873 1436.09,683.873 1436.65,683.873 1437.21,683.873 1437.77,683.873 1438.33,683.873 1438.88,683.873 1439.44,683.873 1440,683.873 1440.56,683.873 1441.12,683.873 1441.68,683.873 1442.24,683.873 1442.8,683.873 1443.36,683.873 1443.92,683.873 1444.48,683.873 1445.04,683.873 1445.6,683.873 1446.15,683.873 1446.71,683.873 1447.27,683.873 1447.83,683.873 1448.39,683.873 1448.95,683.873 1449.51,683.873 1450.07,683.873 1450.63,683.873 1451.19,683.873 1451.75,683.873 1452.31,683.873 1452.87,683.873 1453.42,683.873 1453.98,683.873 1454.54,683.873 1455.1,683.873 1455.66,683.873 1456.22,683.873 1456.78,683.873 1457.34,683.873 1457.9,683.873 1458.46,683.873 1459.02,683.873 1459.58,683.873 1460.14,683.873 1460.7,683.873 1461.25,683.873 1461.81,683.873 1462.37,683.873 1462.93,683.873 1463.49,683.873 1464.05,683.873 1464.61,683.873 1465.17,683.873 1465.73,683.873 1466.29,683.873 1466.85,683.873 1467.41,683.873 1467.97,683.873 1468.52,683.873 1469.08,683.873 1469.64,683.873 1470.2,683.873 1470.76,683.873 1471.32,683.873 1471.88,683.873 1472.44,683.873 1473,683.873 1473.56,683.873 1474.12,683.873 1474.68,683.873 1475.24,683.873 1475.79,683.873 1476.35,683.873 1476.91,683.873 1477.47,683.873 1478.03,683.873 1478.59,683.873 1479.15,683.873 1479.71,683.873 1480.27,683.873 1480.83,683.873 1481.39,683.873 1481.95,683.873 1482.51,683.873 1483.07,683.873 1483.62,683.873 1484.18,683.873 1484.74,683.873 1485.3,683.873 1485.86,683.873 1486.42,683.873 1486.98,683.873 1487.54,683.873 1488.1,683.873 1488.66,683.873 1489.22,683.873 1489.78,683.873 1490.34,683.873 1490.89,683.873 1491.45,683.873 1492.01,683.873 1492.57,683.873 1493.13,683.873 1493.69,683.873 1494.25,683.873 1494.81,683.873 1495.37,683.873 1495.93,683.873 1496.49,683.873 1497.05,683.873 1497.61,683.873 1498.16,683.873 1498.72,683.873 1499.28,683.873 1499.84,683.873 1500.4,683.873 1500.96,683.873 1501.52,683.873 1502.08,683.873 1502.64,683.873 1503.2,683.873 1503.76,683.873 1504.32,683.873 1504.88,683.873 1505.44,683.873 1505.99,683.873 1506.55,683.873 1507.11,683.873 1507.67,683.873 1508.23,683.873 1508.79,683.873 1509.35,683.873 1509.91,683.873 1510.47,683.873 1511.03,683.873 1511.59,683.873 1512.15,683.873 1512.71,683.873 1513.26,683.873 1513.82,683.873 1514.38,683.873 1514.94,683.873 1515.5,683.873 1516.06,683.873 1516.62,683.873 1517.18,683.873 1517.74,683.873 1518.3,683.873 1518.86,683.873 1519.42,683.873 1519.98,683.873 1520.53,683.873 1521.09,683.873 1521.65,683.873 1522.21,683.873 1522.77,683.873 1523.33,683.873 1523.89,683.873 1524.45,683.873 1525.01,683.873 1525.57,683.873 1526.13,683.873 1526.69,683.873 1527.25,683.873 1527.81,683.873 1528.36,683.873 1528.92,683.873 1529.48,683.873 1530.04,683.873 1530.6,683.873 1531.16,683.873 1531.72,683.873 1532.28,683.873 1532.84,683.873 1533.4,683.873 1533.96,683.873 1534.52,683.873 1535.08,683.873 1535.63,683.873 1536.19,683.873 1536.75,683.873 1537.31,683.873 1537.87,683.873 1538.43,683.873 1538.99,683.873 1539.55,683.873 1540.11,683.873 1540.67,683.873 1541.23,683.873 1541.79,683.873 1542.35,683.873 1542.9,683.873 1543.46,683.873 1544.02,683.873 1544.58,683.873 1545.14,683.873 1545.7,683.873 1546.26,683.873 1546.82,683.873 1547.38,683.873 1547.94,683.873 1548.5,683.873 1549.06,683.873 1549.62,683.873 1550.18,683.873 1550.73,683.873 1551.29,683.873 1551.85,683.873 1552.41,683.873 1552.97,683.873 1553.53,683.873 1554.09,683.873 1554.65,683.873 1555.21,683.873 1555.77,683.873 1556.33,683.873 1556.89,683.873 1557.45,683.873 1558,683.873 1558.56,683.873 1559.12,683.873 1559.68,683.873 1560.24,683.873 1560.8,683.873 1561.36,683.873 1561.92,683.873 1562.48,683.873 1563.04,683.873 1563.6,683.873 1564.16,683.873 1564.72,683.873 1565.28,683.873 1565.83,683.873 1566.39,683.873 1566.95,683.873 1567.51,683.873 1568.07,683.873 1568.63,683.873 1569.19,683.873 1569.75,683.873 1570.31,683.873 1570.87,683.873 1571.43,683.873 1571.99,683.873 1572.55,683.873 1573.1,683.873 1573.66,683.873 1574.22,683.873 1574.78,683.873 1575.34,683.873 1575.9,683.873 1576.46,683.873 1577.02,683.873 1577.58,683.873 1578.14,683.873 1578.7,683.873 1579.26,683.873 1579.82,683.873 1580.37,683.873 1580.93,683.873 1581.49,683.873 1582.05,683.873 1582.61,683.873 1583.17,683.873 1583.73,683.873 1584.29,683.873 1584.85,683.873 1585.41,683.873 1585.97,683.873 1586.53,683.873 1587.09,683.873 1587.65,683.873 1588.2,683.873 1588.76,683.873 1589.32,683.873 1589.88,683.873 1590.44,683.873 1591,683.873 1591.56,683.873 1592.12,683.873 1592.68,683.873 1593.24,683.873 1593.8,683.873 1594.36,683.873 1594.92,683.873 1595.47,683.873 1596.03,683.873 1596.59,683.873 1597.15,683.873 1597.71,683.873 1598.27,683.873 1598.83,683.873 1599.39,683.873 1599.95,683.873 1600.51,683.873 1601.07,683.873 1601.63,683.873 1602.19,683.873 1602.74,683.873 1603.3,683.873 1603.86,683.873 1604.42,683.873 1604.98,683.873 1605.54,683.873 1606.1,683.873 1606.66,683.873 1607.22,683.873 1607.78,683.873 1608.34,683.873 1608.9,683.873 1609.46,683.873 1610.02,683.873 1610.57,683.873 1611.13,683.873 1611.69,683.873 1612.25,683.873 1612.81,683.873 1613.37,683.873 1613.93,683.873 1614.49,683.873 1615.05,683.873 1615.61,683.873 1616.17,683.873 1616.73,683.873 1617.29,683.873 1617.84,683.873 1618.4,683.873 1618.96,683.873 1619.52,683.873 1620.08,683.873 1620.64,683.873 1621.2,683.873 1621.76,683.873 1622.32,683.873 1622.88,683.873 1623.44,683.873 1624,683.873 1624.56,683.873 1625.11,683.873 1625.67,683.873 1626.23,683.873 1626.79,683.873 1627.35,683.873 1627.91,683.873 1628.47,683.873 1629.03,683.873 1629.59,683.873 1630.15,683.873 1630.71,683.873 1631.27,683.873 1631.83,683.873 1632.39,683.873 1632.94,683.873 1633.5,683.873 1634.06,683.873 1634.62,683.873 1635.18,683.873 1635.74,683.873 1636.3,683.873 1636.86,683.873 1637.42,683.873 1637.98,683.873 1638.54,683.873 1639.1,683.873 1639.66,683.873 1640.21,683.873 1640.77,683.873 1641.33,683.873 1641.89,683.873 1642.45,683.873 1643.01,683.873 1643.57,683.873 1644.13,683.873 1644.69,683.873 1645.25,683.873 1645.81,683.873 1646.37,683.873 1646.93,683.873 1647.48,683.873 1648.04,683.873 1648.6,683.873 1649.16,683.873 1649.72,683.873 1650.28,683.873 1650.84,683.873 1651.4,683.873 1651.96,683.873 1652.52,683.873 1653.08,683.873 1653.64,683.873 1654.2,683.873 1654.76,683.873 1655.31,683.873 1655.87,683.873 1656.43,683.873 1656.99,683.873 1657.55,683.873 1658.11,683.873 1658.67,683.873 1659.23,683.873 1659.79,683.873 1660.35,683.873 1660.91,683.873 1661.47,683.873 1662.03,683.873 1662.58,683.873 1663.14,683.873 1663.7,683.873 1664.26,683.873 1664.82,683.873 1665.38,683.873 1665.94,683.873 1666.5,683.873 1667.06,683.873 1667.62,683.873 1668.18,683.873 1668.74,683.873 1669.3,683.873 1669.85,683.873 1670.41,683.873 1670.97,683.873 1671.53,683.873 1672.09,683.873 1672.65,683.873 1673.21,683.873 1673.77,683.873 1674.33,683.873 1674.89,683.873 1675.45,683.873 1676.01,683.873 1676.57,683.873 1677.13,683.873 1677.68,683.873 1678.24,683.873 1678.8,683.873 1679.36,683.873 1679.92,683.873 1680.48,683.873 1681.04,683.873 1681.6,683.873 1682.16,683.873 1682.72,683.873 1683.28,683.873 1683.84,683.873 1684.4,683.873 1684.95,683.873 1685.51,683.873 1686.07,683.873 1686.63,683.873 1687.19,683.873 1687.75,683.873 1688.31,683.873 1688.87,683.873 1689.43,683.873 1689.99,683.873 1690.55,683.873 1691.11,683.873 1691.67,683.873 1692.23,683.873 1692.78,683.873 1693.34,683.873 1693.9,683.873 1694.46,683.873 1695.02,683.873 1695.58,683.873 1696.14,683.873 1696.7,683.873 1697.26,683.873 1697.82,683.873 1698.38,683.873 1698.94,683.873 1699.5,683.873 1700.05,683.873 1700.61,683.873 1701.17,683.873 1701.73,683.873 1702.29,683.873 1702.85,683.873 1703.41,683.873 1703.97,683.873 1704.53,683.873 1705.09,683.873 1705.65,683.873 1706.21,683.873 1706.77,683.873 1707.32,683.873 1707.88,683.873 1708.44,683.873 1709,683.873 1709.56,683.873 1710.12,683.873 1710.68,683.873 1711.24,683.873 1711.8,683.873 1712.36,683.873 1712.92,683.873 1713.48,683.873 1714.04,683.873 1714.6,683.873 1715.15,683.873 1715.71,683.873 1716.27,683.873 1716.83,683.873 1717.39,683.873 1717.95,683.873 1718.51,683.873 1719.07,683.873 1719.63,683.873 1720.19,683.873 1720.75,683.873 1721.31,683.873 1721.87,683.873 1722.42,683.873 1722.98,683.873 1723.54,683.873 1724.1,683.873 1724.66,683.873 1725.22,683.873 1725.78,683.873 1726.34,683.873 1726.9,683.873 1727.46,683.873 1728.02,683.873 1728.58,683.873 1729.14,683.873 1729.69,683.873 1730.25,683.873 1730.81,683.873 1731.37,683.873 1731.93,683.873 1732.49,683.873 1733.05,683.873 1733.61,683.873 1734.17,683.873 1734.73,683.873 1735.29,683.873 1735.85,683.873 1736.41,683.873 1736.97,683.873 1737.52,683.873 1738.08,683.873 1738.64,683.873 1739.2,683.873 1739.76,683.873 1740.32,683.873 1740.88,683.873 1741.44,683.873 1742,683.873 1742.56,683.873 1743.12,683.873 1743.68,683.873 1744.24,683.873 1744.79,683.873 1745.35,683.873 1745.91,683.873 1746.47,683.873 1747.03,683.873 1747.59,683.873 1748.15,683.873 1748.71,683.873 1749.27,683.873 1749.83,683.873 1750.39,683.873 1750.95,683.873 1751.51,683.873 1752.06,683.873 1752.62,683.873 1753.18,683.873 1753.74,683.873 1754.3,683.873 1754.86,683.873 1755.42,683.873 1755.98,683.873 1756.54,683.873 1757.1,683.873 1757.66,683.873 1758.22,683.873 1758.78,683.873 1759.34,683.873 1759.89,683.873 1760.45,683.873 1761.01,683.873 1761.57,683.873 1762.13,683.873 1762.69,683.873 1763.25,683.873 1763.81,683.873 1764.37,683.873 1764.93,683.873 1765.49,683.873 1766.05,683.873 1766.61,683.873 1767.16,683.873 1767.72,683.873 1768.28,683.873 1768.84,683.873 1769.4,683.873 1769.96,683.873 1770.52,683.873 1771.08,683.873 1771.64,683.873 1772.2,683.873 1772.76,683.873 1773.32,683.873 1773.88,683.873 1774.43,683.873 1774.99,683.873 1775.55,683.873 1776.11,683.873 1776.67,683.873 1777.23,683.873 1777.79,683.873 1778.35,683.873 1778.91,683.873 1779.47,683.873 1780.03,683.873 1780.59,683.873 1781.15,683.873 1781.71,683.873 1782.26,683.873 1782.82,683.873 1783.38,683.873 1783.94,683.873 1784.5,683.873 1785.06,683.873 1785.62,683.873 1786.18,683.873 1786.74,683.873 1787.3,683.873 1787.86,683.873 1788.42,683.873 1788.98,683.873 1789.53,683.873 1790.09,683.873 1790.65,683.873 1791.21,683.873 1791.77,683.873 1792.33,683.873 1792.89,683.873 1793.45,683.873 1794.01,683.873 1794.57,683.873 1795.13,683.873 1795.69,683.873 1796.25,683.873 1796.8,683.873 1797.36,683.873 1797.92,683.873 1798.48,683.873 1799.04,683.873 1799.6,683.873 1800.16,683.873 1800.72,683.873 1801.28,683.873 1801.84,683.873 1802.4,683.873 1802.96,683.873 1803.52,683.873 1804.08,683.873 1804.63,683.873 1805.19,683.873 1805.75,683.873 1806.31,683.873 1806.87,683.873 1807.43,683.873 1807.99,683.873 1808.55,683.873 1809.11,683.873 1809.67,683.873 1810.23,683.873 1810.79,683.873 1811.35,683.873 1811.9,683.873 1812.46,683.873 1813.02,683.873 1813.58,683.873 1814.14,683.873 1814.7,683.873 1815.26,683.873 1815.82,683.873 1816.38,683.873 1816.94,683.873 1817.5,683.873 1818.06,683.873 1818.62,683.873 1819.18,683.873 1819.73,683.873 1820.29,683.873 1820.85,683.873 1821.41,683.873 1821.97,683.873 1822.53,683.873 1823.09,683.873 1823.65,683.873 1824.21,683.873 1824.77,683.873 1825.33,683.873 1825.89,683.873 1826.45,683.873 1827,683.873 1827.56,683.873 1828.12,683.873 1828.68,683.873 1829.24,683.873 1829.8,683.873 1830.36,683.873 1830.92,683.873 1831.48,683.873 1832.04,683.873 1832.6,683.873 1833.16,683.873 1833.72,683.873 1834.27,683.873 1834.83,683.873 1835.39,683.873 1835.95,683.873 1836.51,683.873 1837.07,683.873 1837.63,683.873 1838.19,683.873 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.034799304975681 ± 0.020805526765192376\nProjected Energy: -4.016538646016482 ± (0.008758112355488734, 0.009359984411646316)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.514238</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.5249e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">2.0018e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">1.059e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.283e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.695e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.766e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
