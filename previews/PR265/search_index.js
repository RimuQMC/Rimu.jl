var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip450\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip450)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip451\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip450)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip452\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.83 2211.02,1260.83 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.36 2211.02,1003.36 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.891 2211.02,745.891 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.423 2211.02,488.423 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,230.955 2211.02,230.955 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.83 423.181,1260.83 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.36 423.181,1003.36 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.891 423.181,745.891 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.423 423.181,488.423 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,230.955 423.181,230.955 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M356.339 1246.63 Q352.728 1246.63 350.899 1250.19 Q349.094 1253.73 349.094 1260.86 Q349.094 1267.97 350.899 1271.53 Q352.728 1275.07 356.339 1275.07 Q359.973 1275.07 361.779 1271.53 Q363.608 1267.97 363.608 1260.86 Q363.608 1253.73 361.779 1250.19 Q359.973 1246.63 356.339 1246.63 M356.339 1242.92 Q362.149 1242.92 365.205 1247.53 Q368.284 1252.11 368.284 1260.86 Q368.284 1269.59 365.205 1274.2 Q362.149 1278.78 356.339 1278.78 Q350.529 1278.78 347.45 1274.2 Q344.395 1269.59 344.395 1260.86 Q344.395 1252.11 347.45 1247.53 Q350.529 1242.92 356.339 1242.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M290.043 1016.7 L306.363 1016.7 L306.363 1020.64 L284.418 1020.64 L284.418 1016.7 Q287.08 1013.95 291.664 1009.32 Q296.27 1004.67 297.451 1003.32 Q299.696 1000.8 300.576 999.065 Q301.478 997.306 301.478 995.616 Q301.478 992.862 299.534 991.125 Q297.613 989.389 294.511 989.389 Q292.312 989.389 289.858 990.153 Q287.427 990.917 284.65 992.468 L284.65 987.746 Q287.474 986.612 289.927 986.033 Q292.381 985.454 294.418 985.454 Q299.789 985.454 302.983 988.139 Q306.177 990.824 306.177 995.315 Q306.177 997.445 305.367 999.366 Q304.58 1001.26 302.474 1003.86 Q301.895 1004.53 298.793 1007.75 Q295.691 1010.94 290.043 1016.7 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M316.224 986.079 L334.58 986.079 L334.58 990.014 L320.506 990.014 L320.506 998.486 Q321.524 998.139 322.543 997.977 Q323.562 997.792 324.58 997.792 Q330.367 997.792 333.747 1000.96 Q337.126 1004.13 337.126 1009.55 Q337.126 1015.13 333.654 1018.23 Q330.182 1021.31 323.862 1021.31 Q321.687 1021.31 319.418 1020.94 Q317.173 1020.57 314.765 1019.83 L314.765 1015.13 Q316.849 1016.26 319.071 1016.82 Q321.293 1017.38 323.77 1017.38 Q327.774 1017.38 330.112 1015.27 Q332.45 1013.16 332.45 1009.55 Q332.45 1005.94 330.112 1003.83 Q327.774 1001.73 323.77 1001.73 Q321.895 1001.73 320.02 1002.14 Q318.168 1002.56 316.224 1003.44 L316.224 986.079 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M356.339 989.158 Q352.728 989.158 350.899 992.723 Q349.094 996.264 349.094 1003.39 Q349.094 1010.5 350.899 1014.07 Q352.728 1017.61 356.339 1017.61 Q359.973 1017.61 361.779 1014.07 Q363.608 1010.5 363.608 1003.39 Q363.608 996.264 361.779 992.723 Q359.973 989.158 356.339 989.158 M356.339 985.454 Q362.149 985.454 365.205 990.061 Q368.284 994.644 368.284 1003.39 Q368.284 1012.12 365.205 1016.73 Q362.149 1021.31 356.339 1021.31 Q350.529 1021.31 347.45 1016.73 Q344.395 1012.12 344.395 1003.39 Q344.395 994.644 347.45 990.061 Q350.529 985.454 356.339 985.454 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M286.062 728.611 L304.418 728.611 L304.418 732.546 L290.344 732.546 L290.344 741.018 Q291.363 740.671 292.381 740.509 Q293.4 740.324 294.418 740.324 Q300.205 740.324 303.585 743.495 Q306.964 746.666 306.964 752.083 Q306.964 757.662 303.492 760.764 Q300.02 763.842 293.701 763.842 Q291.525 763.842 289.256 763.472 Q287.011 763.102 284.603 762.361 L284.603 757.662 Q286.687 758.796 288.909 759.352 Q291.131 759.907 293.608 759.907 Q297.613 759.907 299.951 757.801 Q302.288 755.694 302.288 752.083 Q302.288 748.472 299.951 746.366 Q297.613 744.259 293.608 744.259 Q291.733 744.259 289.858 744.676 Q288.006 745.092 286.062 745.972 L286.062 728.611 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M326.177 731.69 Q322.566 731.69 320.737 735.254 Q318.932 738.796 318.932 745.926 Q318.932 753.032 320.737 756.597 Q322.566 760.139 326.177 760.139 Q329.811 760.139 331.617 756.597 Q333.446 753.032 333.446 745.926 Q333.446 738.796 331.617 735.254 Q329.811 731.69 326.177 731.69 M326.177 727.986 Q331.987 727.986 335.043 732.592 Q338.122 737.176 338.122 745.926 Q338.122 754.653 335.043 759.259 Q331.987 763.842 326.177 763.842 Q320.367 763.842 317.288 759.259 Q314.233 754.653 314.233 745.926 Q314.233 737.176 317.288 732.592 Q320.367 727.986 326.177 727.986 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M356.339 731.69 Q352.728 731.69 350.899 735.254 Q349.094 738.796 349.094 745.926 Q349.094 753.032 350.899 756.597 Q352.728 760.139 356.339 760.139 Q359.973 760.139 361.779 756.597 Q363.608 753.032 363.608 745.926 Q363.608 738.796 361.779 735.254 Q359.973 731.69 356.339 731.69 M356.339 727.986 Q362.149 727.986 365.205 732.592 Q368.284 737.176 368.284 745.926 Q368.284 754.653 365.205 759.259 Q362.149 763.842 356.339 763.842 Q350.529 763.842 347.45 759.259 Q344.395 754.653 344.395 745.926 Q344.395 737.176 347.45 732.592 Q350.529 727.986 356.339 727.986 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M284.835 471.143 L307.057 471.143 L307.057 473.134 L294.511 505.703 L289.627 505.703 L301.432 475.078 L284.835 475.078 L284.835 471.143 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M316.224 471.143 L334.58 471.143 L334.58 475.078 L320.506 475.078 L320.506 483.55 Q321.524 483.203 322.543 483.041 Q323.562 482.856 324.58 482.856 Q330.367 482.856 333.747 486.027 Q337.126 489.198 337.126 494.615 Q337.126 500.194 333.654 503.295 Q330.182 506.374 323.862 506.374 Q321.687 506.374 319.418 506.004 Q317.173 505.633 314.765 504.893 L314.765 500.194 Q316.849 501.328 319.071 501.883 Q321.293 502.439 323.77 502.439 Q327.774 502.439 330.112 500.332 Q332.45 498.226 332.45 494.615 Q332.45 491.004 330.112 488.897 Q327.774 486.791 323.77 486.791 Q321.895 486.791 320.02 487.208 Q318.168 487.624 316.224 488.504 L316.224 471.143 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M356.339 474.222 Q352.728 474.222 350.899 477.786 Q349.094 481.328 349.094 488.458 Q349.094 495.564 350.899 499.129 Q352.728 502.67 356.339 502.67 Q359.973 502.67 361.779 499.129 Q363.608 495.564 363.608 488.458 Q363.608 481.328 361.779 477.786 Q359.973 474.222 356.339 474.222 M356.339 470.518 Q362.149 470.518 365.205 475.124 Q368.284 479.708 368.284 488.458 Q368.284 497.184 365.205 501.791 Q362.149 506.374 356.339 506.374 Q350.529 506.374 347.45 501.791 Q344.395 497.184 344.395 488.458 Q344.395 479.708 347.45 475.124 Q350.529 470.518 356.339 470.518 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M256.664 244.3 L264.303 244.3 L264.303 217.934 L255.992 219.601 L255.992 215.341 L264.256 213.675 L268.932 213.675 L268.932 244.3 L276.571 244.3 L276.571 248.235 L256.664 248.235 L256.664 244.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M296.015 216.753 Q292.404 216.753 290.576 220.318 Q288.77 223.86 288.77 230.989 Q288.77 238.096 290.576 241.661 Q292.404 245.202 296.015 245.202 Q299.65 245.202 301.455 241.661 Q303.284 238.096 303.284 230.989 Q303.284 223.86 301.455 220.318 Q299.65 216.753 296.015 216.753 M296.015 213.05 Q301.826 213.05 304.881 217.656 Q307.96 222.239 307.96 230.989 Q307.96 239.716 304.881 244.323 Q301.826 248.906 296.015 248.906 Q290.205 248.906 287.127 244.323 Q284.071 239.716 284.071 230.989 Q284.071 222.239 287.127 217.656 Q290.205 213.05 296.015 213.05 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M326.177 216.753 Q322.566 216.753 320.737 220.318 Q318.932 223.86 318.932 230.989 Q318.932 238.096 320.737 241.661 Q322.566 245.202 326.177 245.202 Q329.811 245.202 331.617 241.661 Q333.446 238.096 333.446 230.989 Q333.446 223.86 331.617 220.318 Q329.811 216.753 326.177 216.753 M326.177 213.05 Q331.987 213.05 335.043 217.656 Q338.122 222.239 338.122 230.989 Q338.122 239.716 335.043 244.323 Q331.987 248.906 326.177 248.906 Q320.367 248.906 317.288 244.323 Q314.233 239.716 314.233 230.989 Q314.233 222.239 317.288 217.656 Q320.367 213.05 326.177 213.05 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M356.339 216.753 Q352.728 216.753 350.899 220.318 Q349.094 223.86 349.094 230.989 Q349.094 238.096 350.899 241.661 Q352.728 245.202 356.339 245.202 Q359.973 245.202 361.779 241.661 Q363.608 238.096 363.608 230.989 Q363.608 223.86 361.779 220.318 Q359.973 216.753 356.339 216.753 M356.339 213.05 Q362.149 213.05 365.205 217.656 Q368.284 222.239 368.284 230.989 Q368.284 239.716 365.205 244.323 Q362.149 248.906 356.339 248.906 Q350.529 248.906 347.45 244.323 Q344.395 239.716 344.395 230.989 Q344.395 222.239 347.45 217.656 Q350.529 213.05 356.339 213.05 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip452)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,230.955 4017.76,230.955 \"/>\n<polyline clip-path=\"url(#clip452)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1249.42 456.554,1249.34 457.123,1249.16 457.691,1248.89 458.259,1248.61 458.828,1248.26 459.396,1247.83 459.964,1247.34 460.533,1245.74 461.101,1245.11 461.669,1244.4 462.238,1243.59 462.806,1242.71 463.375,1241.74 463.943,1240.66 464.511,1236.41 465.08,1235.15 465.648,1233.81 466.216,1231.33 466.785,1229.79 467.353,1228.1 467.921,1224.22 468.49,1222.32 469.058,1220.28 469.626,1217.04 470.195,1214.69 470.763,1212.19 471.331,1209.49 471.9,1206.61 472.468,1203.58 473.036,1200.37 473.605,1194.93 474.173,1191.46 474.741,1185.61 475.31,1181.64 475.878,1177.36 476.446,1171.89 477.015,1167.29 477.583,1161.53 478.152,1156.56 478.72,1151.35 479.288,1143.87 479.857,1137.24 480.425,1130.44 480.993,1124.31 481.562,1117.11 482.13,1110.65 482.698,1101.9 483.267,1091.01 483.835,1083.94 484.403,1074.73 484.972,1066.4 485.54,1057.77 486.108,1047.02 486.677,1038.14 487.245,1029.19 487.813,1020.16 488.382,1010.03 488.95,1000.64 489.518,990.261 490.087,980.686 490.655,972.102 491.224,962.363 491.792,950.521 492.36,939.73 492.929,929.905 493.497,916.834 494.065,907.923 494.634,898.123 495.202,890.11 495.77,878.951 496.339,868.751 496.907,859.554 497.475,849.237 498.044,837.939 498.612,826.63 499.18,815.452 499.749,806.43 500.317,796.313 500.885,786.129 501.454,777.209 502.022,768.253 502.59,758.355 503.159,749.428 503.727,739.531 504.295,729.715 504.864,720.898 505.432,709.016 506.001,698.224 506.569,687.704 507.137,678.441 507.706,670.309 508.274,658.024 508.842,650.052 509.411,640.058 509.979,631.133 510.547,621.454 511.116,613.973 511.684,606.669 512.252,598.217 512.821,587.874 513.389,577.744 513.957,566.671 514.526,558.764 515.094,550.101 515.662,543.575 516.231,536.12 516.799,528.721 517.367,519.505 517.936,511.57 518.504,505.944 519.072,499.181 519.641,492.646 520.209,487.36 520.778,481.046 521.346,472.874 521.914,463.724 522.483,458.284 523.051,453.759 523.619,449.482 524.188,444.995 524.756,440.597 525.324,435.222 525.893,428.891 526.461,424.716 527.029,418.876 527.598,414.847 528.166,408.113 528.734,403.601 529.303,398.368 529.871,394.988 530.439,392.778 531.008,387.312 531.576,379.128 532.144,376.557 532.713,373.972 533.281,369.253 533.85,365.874 534.418,363.295 534.986,358.847 535.555,355.411 536.123,352.28 536.691,349.219 537.26,345.301 537.828,342.323 538.396,340.496 538.965,339.595 539.533,337.893 540.101,335.863 540.67,333.035 541.238,330.033 541.806,328.239 542.375,326.448 542.943,322.679 543.511,321.152 544.08,318.48 544.648,316.006 545.216,313.648 545.785,310.454 546.353,307.128 546.921,304.97 547.49,303.988 548.058,298.668 548.627,296.906 549.195,296.148 549.763,294.585 550.332,292.978 550.9,292.51 551.468,292.079 552.037,291.208 552.605,288.549 553.173,288.078 553.742,288.702 554.31,287.062 554.878,285.501 555.447,285.93 556.015,284.143 556.583,282.621 557.152,282.241 557.72,282.615 558.288,283.218 558.857,278.18 559.425,277.622 559.993,273.894 560.562,272.732 561.13,270.599 561.698,269.518 562.267,267.254 562.835,265.234 563.404,262.331 563.972,264.809 564.54,265.897 565.109,266.75 565.677,267.582 566.245,265.339 566.814,267.17 567.382,267.076 567.95,266.756 568.519,264.288 569.087,264.247 569.655,260.88 570.224,260.73 570.792,262.967 571.36,261.852 571.929,261.437 572.497,261.336 573.065,259.126 573.634,258.994 574.202,257.871 574.77,258.897 575.339,257.85 575.907,256.646 576.476,256.658 577.044,258.947 577.612,256.581 578.181,256.575 578.749,257.768 579.317,255.709 579.886,256.768 580.454,256.585 581.022,256.32 581.591,258.46 582.159,259.049 582.727,258.694 583.296,258.373 583.864,258.15 584.432,258.712 585.001,257.091 585.569,255.666 586.137,255.41 586.706,255.896 587.274,255.667 587.842,255.293 588.411,253.476 588.979,250.053 589.547,248.875 590.116,249.853 590.684,251.75 591.253,249.421 591.821,247.138 592.389,247.169 592.958,247.988 593.526,248.038 594.094,245.77 594.663,245.868 595.231,243.753 595.799,246.191 596.368,245.327 596.936,245.561 597.504,243.462 598.073,245.705 598.641,246.776 599.209,246.514 599.778,245.302 600.346,242.198 600.914,241.581 601.483,242.858 602.051,243.142 602.619,243.181 603.188,244.258 603.756,242.113 604.325,243.151 604.893,242.264 605.461,243.439 606.03,243.549 606.598,243.882 607.166,243.875 607.735,243.667 608.303,243.574 608.871,245.586 609.44,245.292 610.008,244.109 610.576,245.178 611.145,244.953 611.713,242.568 612.281,242.334 612.85,241.221 613.418,242.287 613.986,241.276 614.555,241.422 615.123,240.417 615.691,241.709 616.26,241.359 616.828,240.437 617.396,240.285 617.965,240.3 618.533,239.171 619.102,240.3 619.67,240.52 620.238,241.66 620.807,241.608 621.375,241.618 621.943,241.489 622.512,240.306 623.08,241.217 623.648,237.971 624.217,242.257 624.785,239.174 625.353,237.157 625.922,238.157 626.49,238.21 627.058,239.177 627.627,239.055 628.195,239.227 628.763,237.172 629.332,235.2 629.9,236.338 630.468,234.434 631.037,234.843 631.605,235.816 632.173,232.911 632.742,234.34 633.31,232.792 633.879,233.025 634.447,232.763 635.015,233.347 635.584,234.842 636.152,234.102 636.72,234.599 637.289,235.063 637.857,234.448 638.425,232.733 638.994,232.069 639.562,233.485 640.13,232.944 640.699,230.321 641.267,228.962 641.835,229.488 642.404,227.091 642.972,227.823 643.54,229.663 644.109,229.152 644.677,228.888 645.245,232.642 645.814,234.035 646.382,235.437 646.951,235.642 647.519,236.051 648.087,235.402 648.656,237.845 649.224,235.788 649.792,236.067 650.361,235.394 650.929,235.643 651.497,236.775 652.066,236.737 652.634,236.967 653.202,237.144 653.771,236.404 654.339,234.544 654.907,230.536 655.476,229.814 656.044,228.599 656.612,232.291 657.181,232.837 657.749,234.175 658.317,234.659 658.886,236.022 659.454,235.406 660.022,234.827 660.591,236.119 661.159,235.409 661.728,233.668 662.296,234.03 662.864,232.365 663.433,237.022 664.001,237.245 664.569,238.52 665.138,236.605 665.706,236.761 666.274,236.965 666.843,237.099 667.411,236.14 667.979,237.588 668.548,236.519 669.116,237.518 669.684,236.614 670.253,234.62 670.821,234.871 671.389,233.107 671.958,234.528 672.526,233.739 673.094,234.422 673.663,236.813 674.231,236.22 674.799,236.215 675.368,237.486 675.936,238.611 676.505,239.556 677.073,238.529 677.641,239.452 678.21,239.315 678.778,239.29 679.346,239.108 679.915,239.932 680.483,239.743 681.051,239.483 681.62,238.337 682.188,238.215 682.756,237.969 683.325,239.781 683.893,238.651 684.461,238.555 685.03,237.346 685.598,238.573 686.166,236.395 686.735,236.184 687.303,234.195 687.871,235.35 688.44,233.555 689.008,232.561 689.577,230.757 690.145,230.78 690.713,232.109 691.282,232.535 691.85,234.033 692.418,234.99 692.987,235.058 693.555,234.405 694.123,234.361 694.692,234.322 695.26,235.573 695.828,235.614 696.397,233.831 696.965,234.744 697.533,235.911 698.102,235.735 698.67,233.879 699.238,233.869 699.807,234.953 700.375,236.1 700.943,234.833 701.512,232.629 702.08,230.733 702.648,230.078 703.217,232.541 703.785,231.891 704.354,232.08 704.922,232.334 705.49,233.469 706.059,236.629 706.627,234.378 707.195,232.408 707.764,230.571 708.332,230.698 708.9,229.802 709.469,230.384 710.037,230.711 710.605,232.267 711.174,233.547 711.742,235.895 712.31,237.845 712.879,237.522 713.447,237.27 714.015,235.003 714.584,237.292 715.152,236.017 715.72,234.959 716.289,234.883 716.857,235.96 717.425,233.992 717.994,234.012 718.562,234.04 719.131,233.099 719.699,233.265 720.267,232.311 720.836,233.388 721.404,234.579 721.972,233.449 722.541,233.628 723.109,234.866 723.677,234.498 724.246,236.73 724.814,237.482 725.382,237.346 725.951,237.888 726.519,237.708 727.087,240.427 727.656,237.652 728.224,237.461 728.792,236.077 729.361,234.857 729.929,234.769 730.497,235.814 731.066,235.552 731.634,234.391 732.203,235.328 732.771,235.143 733.339,234.068 733.908,233.963 734.476,232.877 735.044,230.893 735.613,230.966 736.181,231.209 736.749,232.481 737.318,228.555 737.886,228.066 738.454,227.653 739.023,228.059 739.591,227.508 740.159,226.841 740.728,227.4 741.296,226.975 741.864,228.596 742.433,232.278 743.001,231.156 743.569,232.512 744.138,233.714 744.706,234.972 745.274,235.036 745.843,233.682 746.411,232.478 746.98,231.425 747.548,230.346 748.116,229.457 748.685,230.856 749.253,231.234 749.821,231.381 750.39,230.663 750.958,230.825 751.526,231.025 752.095,229.091 752.663,229.421 753.231,228.738 753.8,227.051 754.368,227.625 754.936,229.009 755.505,230.393 756.073,232.669 756.641,231.761 757.21,231.762 757.778,229.678 758.346,230.029 758.915,227.231 759.483,229.783 760.052,227.014 760.62,225.499 761.188,227.02 761.757,227.61 762.325,228.171 762.893,227.682 763.462,230.323 764.03,231.628 764.598,232.859 765.167,233.029 765.735,233.077 766.303,232.396 766.872,231.576 767.44,232.682 768.008,232.836 768.577,233.885 769.145,234.953 769.713,239.894 770.282,238.467 770.85,237.116 771.418,236.954 771.987,238.872 772.555,240.282 773.123,239.719 773.692,240.448 774.26,239.901 774.829,238.514 775.397,237.157 775.965,235.71 776.534,234.674 777.102,234.36 777.67,234.035 778.239,233.691 778.807,232.374 779.375,231.357 779.944,230.508 780.512,232.713 781.08,232.793 781.649,231.656 782.217,232.657 782.785,233.636 783.354,234.581 783.922,233.702 784.49,234.611 785.059,233.329 785.627,233.251 786.195,231.173 786.764,230.184 787.332,229.323 787.9,229.671 788.469,227.8 789.037,228.247 789.606,231.718 790.174,231.926 790.742,232.032 791.311,232.194 791.879,232.019 792.447,231.145 793.016,231.229 793.584,231.359 794.152,231.477 794.721,232.661 795.289,237.623 795.857,237.069 796.426,234.735 796.994,233.573 797.562,230.395 798.131,232.65 798.699,233.882 799.267,235.658 799.836,237.405 800.404,237.901 800.972,236.654 801.541,236.111 802.109,235.827 802.678,236.483 803.246,236.332 803.814,235.869 804.383,234.591 804.951,236.374 805.519,235.822 806.088,237.779 806.656,237.569 807.224,238.184 807.793,234.725 808.361,234.65 808.929,234.609 809.498,234.421 810.066,234.31 810.634,233.129 811.203,232.822 811.771,231.634 812.339,231.646 812.908,234.423 813.476,234.196 814.044,231.879 814.613,231.709 815.181,229.581 815.749,228.546 816.318,231.784 816.886,231.828 817.455,231.783 818.023,236.021 818.591,234.522 819.16,236.186 819.728,235.569 820.296,234.476 820.865,234.514 821.433,234.418 822.001,235.016 822.57,232.677 823.138,232.599 823.706,232.371 824.275,232.232 824.843,230.023 825.411,229.845 825.98,230.922 826.548,231.02 827.116,229.87 827.685,227.974 828.253,230.069 828.821,229.165 829.39,231.345 829.958,231.326 830.526,231.016 831.095,231.996 831.663,230.771 832.232,232.799 832.8,233.708 833.368,232.626 833.937,233.732 834.505,233.622 835.073,232.37 835.642,234.175 836.21,233.914 836.778,235.592 837.347,234.257 837.915,232.966 838.483,232.654 839.052,230.247 839.62,230.179 840.188,229.001 840.757,230.116 841.325,230.26 841.893,229.371 842.462,226.489 843.03,226.797 843.598,224.987 844.167,224.213 844.735,223.665 845.304,225.322 845.872,226.073 846.44,227.424 847.009,226.59 847.577,228.914 848.145,229.106 848.714,227.195 849.282,228.365 849.85,228.552 850.419,229.043 850.987,230.515 851.555,228.436 852.124,229.566 852.692,227.571 853.26,228.126 853.829,227.459 854.397,226.863 854.965,226.246 855.534,225.562 856.102,226.361 856.67,227.915 857.239,227.149 857.807,228.435 858.375,227.555 858.944,229.07 859.512,229.455 860.081,229.618 860.649,227.766 861.217,228.045 861.786,228.546 862.354,231.891 862.922,229.766 863.491,228.916 864.059,229.122 864.627,230.481 865.196,228.747 865.764,227.034 866.332,227.762 866.901,228.186 867.469,226.352 868.037,228.887 868.606,229.269 869.174,230.526 869.742,228.545 870.311,231.042 870.879,234.172 871.447,235.034 872.016,235.955 872.584,237.695 873.152,239.33 873.721,240.248 874.289,237.698 874.858,237.341 875.426,237.117 875.994,236.841 876.563,235.544 877.131,235.288 877.699,237.319 878.268,236.024 878.836,234.813 879.404,231.533 879.973,232.482 880.541,233.351 881.109,234.539 881.678,234.339 882.246,233.302 882.814,235.241 883.383,233.794 883.951,234.548 884.519,234.364 885.088,235.371 885.656,232.969 886.224,233.097 886.793,235.177 887.361,235.936 887.93,236.704 888.498,234.224 889.066,233.178 889.635,233.956 890.203,234.979 890.771,233.823 891.34,232.573 891.908,233.49 892.476,232.252 893.045,235.265 893.613,235.061 894.181,233.87 894.75,233.762 895.318,233.746 895.886,234.715 896.455,236.632 897.023,236.213 897.591,233.635 898.16,233.393 898.728,235.075 899.296,235.593 899.865,236.4 900.433,233.844 901.001,235.486 901.57,235.188 902.138,235.689 902.707,236.369 903.275,235.828 903.843,235.459 904.412,234.148 904.98,234.826 905.548,235.438 906.117,234.87 906.685,232.757 907.253,230.486 907.822,228.474 908.39,225.498 908.958,226.707 909.527,224.769 910.095,224.099 910.663,223.503 911.232,221.957 911.8,222.444 912.368,223.076 912.937,221.503 913.505,222.2 914.073,222.775 914.642,225.257 915.21,226.688 915.779,227.824 916.347,228.039 916.915,228.237 917.484,226.27 918.052,225.678 918.62,225.002 919.189,225.316 919.757,224.576 920.325,226.1 920.894,226.474 921.462,228.927 922.03,232.031 922.599,228.664 923.167,231.98 923.735,231.107 924.304,230.131 924.872,232.181 925.44,230.916 926.009,230.798 926.577,229.853 927.145,230.961 927.714,231.909 928.282,232.914 928.85,232.684 929.419,230.42 929.987,231.542 930.556,231.426 931.124,232.369 931.692,232.14 932.261,232.044 932.829,234.055 933.397,232.821 933.966,232.694 934.534,232.519 935.102,232.599 935.671,234.494 936.239,235.193 936.807,234.755 937.376,235.79 937.944,237.368 938.512,237.02 939.081,236.654 939.649,237.423 940.217,235.931 940.786,236.604 941.354,237.127 941.922,236.711 942.491,236.209 943.059,233.834 943.627,234.485 944.196,233.189 944.764,232.91 945.333,231.635 945.901,231.495 946.469,231.402 947.038,229.401 947.606,228.625 948.174,230.835 948.743,230.586 949.311,230.569 949.879,231.585 950.448,232.483 951.016,228.357 951.584,228.596 952.153,228.68 952.721,229.699 953.289,229.816 953.858,229.739 954.426,230.743 954.994,231.664 955.563,231.635 956.131,231.558 956.699,230.597 957.268,229.32 957.836,229.372 958.405,228.434 958.973,225.623 959.541,223.961 960.11,224.817 960.678,228.52 961.246,229.698 961.815,229.925 962.383,230.146 962.951,231.205 963.52,231.249 964.088,232.33 964.656,232.214 965.225,230.186 965.793,229.092 966.361,229.305 966.93,228.594 967.498,227.75 968.066,227.917 968.635,229.294 969.203,230.538 969.771,231.799 970.34,231.916 970.908,232.094 971.476,232.115 972.045,228.975 972.613,228.122 973.182,228.232 973.75,226.349 974.318,227.81 974.887,227.255 975.455,228.791 976.023,231.207 976.592,232.203 977.16,232.069 977.728,230.777 978.297,230.846 978.865,227.937 979.433,229.153 980.002,228.476 980.57,225.675 981.138,226.052 981.707,227.447 982.275,227.838 982.843,229.352 983.412,231.725 983.98,230.753 984.548,231.861 985.117,231.873 985.685,231.876 986.253,230.951 986.822,229.993 987.39,230.209 987.959,232.165 988.527,231.233 989.095,231.509 989.664,232.661 990.232,231.659 990.8,231.688 991.369,230.776 991.937,229.873 992.505,227.89 993.074,228.009 993.642,230.489 994.21,231.604 994.779,233.688 995.347,235.661 995.915,236.448 996.484,235.973 997.052,234.598 997.62,232.524 998.189,233.546 998.757,231.177 999.325,231.297 999.894,229.137 1000.46,229.264 1001.03,228.411 1001.6,228.422 1002.17,229.434 1002.74,226.758 1003.3,226.137 1003.87,225.644 1004.44,224.092 1005.01,224.511 1005.58,225.957 1006.15,225.26 1006.71,226.869 1007.28,227.437 1007.85,227.954 1008.42,228.347 1008.99,231.644 1009.56,232.609 1010.12,233.546 1010.69,233.519 1011.26,233.458 1011.83,234.624 1012.4,234.557 1012.97,233.55 1013.53,233.464 1014.1,233.431 1014.67,236.488 1015.24,237.234 1015.81,237.152 1016.38,234.635 1016.94,235.439 1017.51,239.326 1018.08,237.89 1018.65,238.608 1019.22,237.886 1019.79,235.44 1020.35,236.052 1020.92,234.568 1021.49,233.235 1022.06,232.157 1022.63,233.951 1023.2,234.795 1023.76,236.523 1024.33,236.157 1024.9,235.661 1025.47,234.355 1026.04,235.057 1026.61,233.676 1027.17,231.698 1027.74,232.816 1028.31,233.66 1028.88,231.183 1029.45,232.174 1030.02,232.118 1030.58,231.925 1031.15,231.821 1031.72,233.672 1032.29,234.384 1032.86,233.047 1033.43,234.024 1033.99,233.743 1034.56,232.52 1035.13,232.459 1035.7,233.253 1036.27,235.868 1036.84,238.646 1037.4,237.835 1037.97,236.235 1038.54,236.777 1039.11,236.403 1039.68,234.838 1040.25,235.44 1040.81,235.086 1041.38,234.453 1041.95,234.096 1042.52,233.685 1043.09,233.228 1043.66,234.017 1044.22,232.445 1044.79,233.239 1045.36,231.043 1045.93,229.754 1046.5,227.74 1047.07,229.775 1047.63,228.499 1048.2,229.588 1048.77,228.495 1049.34,228.631 1049.91,228.833 1050.48,230.837 1051.05,229.671 1051.61,230.672 1052.18,229.836 1052.75,229.76 1053.32,230.73 1053.89,229.482 1054.46,229.262 1055.02,228.258 1055.59,230.644 1056.16,228.482 1056.73,226.628 1057.3,226.869 1057.87,226.842 1058.43,227.069 1059,229.31 1059.57,230.59 1060.14,231.531 1060.71,231.387 1061.28,231.037 1061.84,228.819 1062.41,228.809 1062.98,229.775 1063.55,229.933 1064.12,230.218 1064.69,232.267 1065.25,233.01 1065.82,233.815 1066.39,233.641 1066.96,234.333 1067.53,235.042 1068.1,233.61 1068.66,231.437 1069.23,231.219 1069.8,231.921 1070.37,230.624 1070.94,229.725 1071.51,227.578 1072.07,228.587 1072.64,228.569 1073.21,227.776 1073.78,228.903 1074.35,233.313 1074.92,231.81 1075.48,232.671 1076.05,232.325 1076.62,233.18 1077.19,233.033 1077.76,232.807 1078.33,231.593 1078.89,231.599 1079.46,231.545 1080.03,232.605 1080.6,232.489 1081.17,233.319 1081.74,231.97 1082.3,231.704 1082.87,231.49 1083.44,231.208 1084.01,232.097 1084.58,231.721 1085.15,230.632 1085.71,230.55 1086.28,228.601 1086.85,226.703 1087.42,225.955 1087.99,226.242 1088.56,227.463 1089.12,225.423 1089.69,223.741 1090.26,224.157 1090.83,224.799 1091.4,223.3 1091.97,223.916 1092.53,223.475 1093.1,223.911 1093.67,225.526 1094.24,226.037 1094.81,233.342 1095.38,232.105 1095.94,231.871 1096.51,230.931 1097.08,231.014 1097.65,231.183 1098.22,231.093 1098.79,231.241 1099.35,230.228 1099.92,230.316 1100.49,231.286 1101.06,230.229 1101.63,231.332 1102.2,231.448 1102.76,231.451 1103.33,230.286 1103.9,230.351 1104.47,230.601 1105.04,230.687 1105.61,232.758 1106.17,233.63 1106.74,233.588 1107.31,233.12 1107.88,230.825 1108.45,231.876 1109.02,231.697 1109.58,233.786 1110.15,232.363 1110.72,232.321 1111.29,232.035 1111.86,231.971 1112.43,233.793 1112.99,234.557 1113.56,235.495 1114.13,234.078 1114.7,233.004 1115.27,227.764 1115.84,228.121 1116.4,231.521 1116.97,229.565 1117.54,228.659 1118.11,231.93 1118.68,231.841 1119.25,231.942 1119.81,230.797 1120.38,230.713 1120.95,230.679 1121.52,231.801 1122.09,231.468 1122.66,230.521 1123.23,230.488 1123.79,231.572 1124.36,230.798 1124.93,231.861 1125.5,231.829 1126.07,230.615 1126.64,230.845 1127.2,231.818 1127.77,232.919 1128.34,233.966 1128.91,232.617 1129.48,233.603 1130.05,231.157 1130.61,230.142 1131.18,227.325 1131.75,226.419 1132.32,224.576 1132.89,223.85 1133.46,225.19 1134.02,224.551 1134.59,223.86 1135.16,223.342 1135.73,224.907 1136.3,223.21 1136.87,223.691 1137.43,225.37 1138,223.849 1138.57,224.39 1139.14,224.06 1139.71,229.831 1140.28,230.154 1140.84,227.34 1141.41,228.561 1141.98,230.899 1142.55,230.94 1143.12,229.874 1143.69,229.071 1144.25,230.355 1144.82,229.401 1145.39,229.686 1145.96,231.88 1146.53,229.919 1147.1,228.928 1147.66,230.163 1148.23,231.419 1148.8,229.313 1149.37,230.679 1149.94,228.917 1150.51,229.165 1151.07,229.569 1151.64,229.812 1152.21,230.044 1152.78,233.321 1153.35,234.154 1153.92,231.092 1154.48,229.195 1155.05,229.324 1155.62,229.421 1156.19,230.785 1156.76,230.975 1157.33,232.259 1157.89,230.053 1158.46,230.121 1159.03,231.256 1159.6,228.42 1160.17,228.788 1160.74,230.032 1161.3,230.218 1161.87,231.432 1162.44,232.475 1163.01,231.547 1163.58,230.511 1164.15,230.641 1164.71,230.846 1165.28,230.021 1165.85,231.432 1166.42,230.638 1166.99,231.701 1167.56,233.05 1168.12,232.125 1168.69,230.013 1169.26,228.982 1169.83,229.303 1170.4,229.6 1170.97,229.741 1171.53,226.214 1172.1,225.697 1172.67,226.252 1173.24,226.877 1173.81,225.352 1174.38,224.972 1174.94,227.776 1175.51,228.172 1176.08,229.427 1176.65,229.895 1177.22,231.294 1177.79,231.455 1178.35,233.346 1178.92,231.181 1179.49,232.554 1180.06,233.717 1180.63,234.672 1181.2,235.488 1181.76,233.444 1182.33,233.466 1182.9,232.748 1183.47,235.784 1184.04,235.542 1184.61,236.47 1185.17,235.222 1185.74,236.18 1186.31,236.038 1186.88,235.615 1187.45,235.288 1188.02,235.254 1188.58,236.099 1189.15,235.965 1189.72,236.792 1190.29,236.361 1190.86,239.214 1191.43,236.627 1192,234.382 1192.56,235.169 1193.13,234.875 1193.7,233.566 1194.27,233.444 1194.84,233.347 1195.41,234.357 1195.97,232.217 1196.54,232.28 1197.11,232.005 1197.68,236.127 1198.25,236.466 1198.82,233.957 1199.38,234.708 1199.95,235.254 1200.52,233.977 1201.09,233.439 1201.66,234.105 1202.23,234.789 1202.79,236.693 1203.36,236.391 1203.93,235.773 1204.5,234.096 1205.07,234.7 1205.64,233.522 1206.2,233.495 1206.77,232.155 1207.34,231.083 1207.91,230.204 1208.48,229.451 1209.05,229.743 1209.61,231.021 1210.18,232.125 1210.75,231.109 1211.32,234.172 1211.89,234.854 1212.46,230.325 1213.02,231.414 1213.59,231.279 1214.16,233.398 1214.73,232.179 1215.3,231.105 1215.87,230.232 1216.43,230.275 1217,229.209 1217.57,230.324 1218.14,230.376 1218.71,228.465 1219.28,229.535 1219.84,229.683 1220.41,230.739 1220.98,228.688 1221.55,229.917 1222.12,231.126 1222.69,230.056 1223.25,229.799 1223.82,231.873 1224.39,229.924 1224.96,231.16 1225.53,231.029 1226.1,229.041 1226.66,230.296 1227.23,228.276 1227.8,229.732 1228.37,227.973 1228.94,226.093 1229.51,225.315 1230.07,224.672 1230.64,225.153 1231.21,223.63 1231.78,224.115 1232.35,225.531 1232.92,226.922 1233.48,226.135 1234.05,226.594 1234.62,225.69 1235.19,228.903 1235.76,232.108 1236.33,233.024 1236.89,231.911 1237.46,232.936 1238.03,231.826 1238.6,232.891 1239.17,232.645 1239.74,233.611 1240.3,231.466 1240.87,233.322 1241.44,233.138 1242.01,233.048 1242.58,234.067 1243.15,233.939 1243.71,231.728 1244.28,231.717 1244.85,232.429 1245.42,232.165 1245.99,232.35 1246.56,232.325 1247.12,231.175 1247.69,233.069 1248.26,232.916 1248.83,231.795 1249.4,231.81 1249.97,232.816 1250.53,233.01 1251.1,232.907 1251.67,231.719 1252.24,230.606 1252.81,232.523 1253.38,233.438 1253.94,233.147 1254.51,232.848 1255.08,231.64 1255.65,234.789 1256.22,234.64 1256.79,233.549 1257.35,233.369 1257.92,233.238 1258.49,231.849 1259.06,232.653 1259.63,231.496 1260.2,230.425 1260.76,228.3 1261.33,228.443 1261.9,227.67 1262.47,227.765 1263.04,227.934 1263.61,230.216 1264.18,229.971 1264.74,228.146 1265.31,230.537 1265.88,227.602 1266.45,227.953 1267.02,229.286 1267.59,228.303 1268.15,226.52 1268.72,227.879 1269.29,230.275 1269.86,230.332 1270.43,228.17 1271,228.362 1271.56,228.621 1272.13,227.848 1272.7,229.128 1273.27,228.006 1273.84,225.227 1274.41,225.63 1274.97,225.176 1275.54,225.561 1276.11,225.73 1276.68,227.3 1277.25,227.541 1277.82,227.588 1278.38,229.67 1278.95,228.648 1279.52,225.97 1280.09,224.293 1280.66,227.617 1281.23,230.836 1281.79,230.831 1282.36,230.793 1282.93,231.068 1283.5,230.303 1284.07,228.268 1284.64,228.388 1285.2,229.692 1285.77,229.919 1286.34,229.264 1286.91,229.448 1287.48,231.689 1288.05,233.738 1288.61,231.739 1289.18,229.747 1289.75,229.91 1290.32,228.91 1290.89,232.393 1291.46,229.531 1292.02,230.691 1292.59,229.799 1293.16,230.801 1293.73,235.066 1294.3,235.956 1294.87,235.532 1295.43,235.349 1296,234.029 1296.57,232.978 1297.14,228.779 1297.71,228.073 1298.28,230.303 1298.84,230.396 1299.41,234.715 1299.98,236.395 1300.55,237.874 1301.12,236.632 1301.69,236.048 1302.25,234.785 1302.82,235.721 1303.39,235.337 1303.96,235.102 1304.53,234.782 1305.1,233.681 1305.66,233.385 1306.23,231.283 1306.8,231.343 1307.37,232.221 1307.94,231.06 1308.51,230.839 1309.07,233.97 1309.64,234.638 1310.21,235.307 1310.78,236.166 1311.35,235.832 1311.92,234.414 1312.48,233.189 1313.05,232.229 1313.62,233.066 1314.19,233.837 1314.76,232.511 1315.33,232.638 1315.89,230.353 1316.46,230.337 1317.03,231.347 1317.6,228.215 1318.17,228.552 1318.74,230.859 1319.3,230.123 1319.87,228.06 1320.44,227.253 1321.01,229.699 1321.58,227.998 1322.15,230.221 1322.71,230.22 1323.28,233.338 1323.85,235.184 1324.42,235.88 1324.99,232.185 1325.56,231.94 1326.12,232.076 1326.69,232.176 1327.26,233.093 1327.83,231.916 1328.4,229.847 1328.97,229.706 1329.53,231.786 1330.1,230.768 1330.67,228.783 1331.24,231.025 1331.81,230.957 1332.38,229.993 1332.94,228.031 1333.51,229.061 1334.08,229.174 1334.65,230.468 1335.22,230.498 1335.79,231.643 1336.36,230.562 1336.92,229.405 1337.49,226.423 1338.06,228.881 1338.63,227.952 1339.2,229.262 1339.77,230.508 1340.33,230.263 1340.9,229.181 1341.47,228.436 1342.04,228.654 1342.61,227.975 1343.18,227.256 1343.74,225.534 1344.31,227.005 1344.88,227.479 1345.45,227.651 1346.02,231.154 1346.59,230.151 1347.15,231.27 1347.72,232.221 1348.29,231.129 1348.86,233.109 1349.43,234.212 1350,231.886 1350.56,232.884 1351.13,233.9 1351.7,233.834 1352.27,233.579 1352.84,232.183 1353.41,231.902 1353.97,229.664 1354.54,229.478 1355.11,229.739 1355.68,231.905 1356.25,231.705 1356.82,232.676 1357.38,232.51 1357.95,232.52 1358.52,230.277 1359.09,229.319 1359.66,227.467 1360.23,229.741 1360.79,231.788 1361.36,232.676 1361.93,231.733 1362.5,232.836 1363.07,231.562 1363.64,230.75 1364.2,232.916 1364.77,232.625 1365.34,233.486 1365.91,232.169 1366.48,231.057 1367.05,230.04 1367.61,233.226 1368.18,235.222 1368.75,235.955 1369.32,235.689 1369.89,235.365 1370.46,234.017 1371.02,233.704 1371.59,234.509 1372.16,233.27 1372.73,234.015 1373.3,234.712 1373.87,233.364 1374.43,233.396 1375,233.252 1375.57,231.803 1376.14,234.924 1376.71,235.777 1377.28,235.395 1377.84,234.858 1378.41,237.734 1378.98,236.323 1379.55,237.046 1380.12,236.404 1380.69,236.783 1381.25,234.205 1381.82,234.752 1382.39,237.448 1382.96,235.807 1383.53,235.38 1384.1,235.995 1384.66,234.513 1385.23,235.292 1385.8,234.022 1386.37,231.663 1386.94,230.44 1387.51,228.286 1388.07,228.555 1388.64,233.6 1389.21,232.311 1389.78,232.944 1390.35,232.438 1390.92,231.158 1391.48,230.965 1392.05,229.87 1392.62,229.797 1393.19,229.863 1393.76,227.895 1394.33,227.031 1394.89,229.104 1395.46,228.763 1396.03,227.764 1396.6,225.692 1397.17,226.087 1397.74,226.276 1398.3,225.611 1398.87,227.798 1399.44,228.901 1400.01,228.95 1400.58,229.02 1401.15,228.125 1401.71,228.28 1402.28,228.323 1402.85,231.623 1403.42,232.712 1403.99,229.36 1404.56,232.574 1405.13,234.376 1405.69,235.145 1406.26,231.563 1406.83,232.414 1407.4,230.429 1407.97,230.382 1408.54,230.411 1409.1,232.327 1409.67,236.095 1410.24,235.661 1410.81,233.941 1411.38,233.695 1411.95,233.499 1412.51,232.184 1413.08,230.862 1413.65,229.768 1414.22,231.918 1414.79,230.601 1415.36,230.425 1415.92,227.084 1416.49,226.249 1417.06,226.585 1417.63,227.797 1418.2,226.834 1418.77,228.023 1419.33,227.02 1419.9,225.988 1420.47,224.238 1421.04,227.603 1421.61,228.719 1422.18,225.748 1422.74,226.035 1423.31,228.035 1423.88,228.243 1424.45,228.391 1425.02,229.577 1425.59,228.778 1426.15,229.975 1426.72,229.096 1427.29,226.328 1427.86,224.635 1428.43,229.052 1429,226.865 1429.56,227.149 1430.13,227.307 1430.7,227.383 1431.27,226.43 1431.84,224.832 1432.41,227.389 1432.97,227.664 1433.54,230.096 1434.11,230.145 1434.68,232.532 1435.25,233.322 1435.82,234.198 1436.38,235.797 1436.95,233.33 1437.52,231.783 1438.09,231.725 1438.66,230.852 1439.23,229.974 1439.79,232.234 1440.36,233.26 1440.93,233.304 1441.5,232.189 1442.07,229.04 1442.64,227.101 1443.2,224.166 1443.77,223.828 1444.34,223.335 1444.91,224.798 1445.48,227.496 1446.05,226.715 1446.61,227.064 1447.18,226.315 1447.75,226.818 1448.32,226.086 1448.89,224.445 1449.46,227.042 1450.02,228.522 1450.59,230.982 1451.16,233.099 1451.73,233.061 1452.3,233.054 1452.87,233.916 1453.43,233.562 1454,231.49 1454.57,230.368 1455.14,230.245 1455.71,231.325 1456.28,231.223 1456.84,232.383 1457.41,231.367 1457.98,229.33 1458.55,230.72 1459.12,232.723 1459.69,231.722 1460.25,233.852 1460.82,235.686 1461.39,234.48 1461.96,232.424 1462.53,230.162 1463.1,231.226 1463.66,232.282 1464.23,231.127 1464.8,231.317 1465.37,230.373 1465.94,230.596 1466.51,229.903 1467.07,228.048 1467.64,228.251 1468.21,229.733 1468.78,235.061 1469.35,235.904 1469.92,236.676 1470.48,238.415 1471.05,236.89 1471.62,234.319 1472.19,234.029 1472.76,232.858 1473.33,235.798 1473.89,234.319 1474.46,235.076 1475.03,234.7 1475.6,232.357 1476.17,232.396 1476.74,232.305 1477.31,233.145 1477.87,233.612 1478.44,234.386 1479.01,234.086 1479.58,233.848 1480.15,232.79 1480.72,231.557 1481.28,230.488 1481.85,231.458 1482.42,231.256 1482.99,233.215 1483.56,234.221 1484.13,235.849 1484.69,234.452 1485.26,235.174 1485.83,234.994 1486.4,233.684 1486.97,228.394 1487.54,227.693 1488.1,227 1488.67,227.109 1489.24,228.556 1489.81,228.654 1490.38,227.921 1490.95,225.888 1491.51,228.247 1492.08,228.402 1492.65,228.453 1493.22,229.6 1493.79,230.778 1494.36,231.759 1494.92,231.585 1495.49,230.437 1496.06,230.292 1496.63,230.281 1497.2,228.057 1497.77,229.366 1498.33,231.41 1498.9,231.192 1499.47,231.237 1500.04,232.23 1500.61,233.121 1501.18,232.877 1501.74,231.928 1502.31,230.976 1502.88,231.099 1503.45,231.154 1504.02,232.145 1504.59,232.161 1505.15,229.721 1505.72,230.938 1506.29,232.161 1506.86,232.137 1507.43,230.858 1508,230.962 1508.56,230.954 1509.13,231.877 1509.7,230.671 1510.27,231.516 1510.84,232.619 1511.41,232.375 1511.97,232.535 1512.54,231.346 1513.11,230.252 1513.68,232.215 1514.25,232.078 1514.82,232.175 1515.38,231.128 1515.95,230.15 1516.52,229.217 1517.09,229.315 1517.66,230.371 1518.23,230.414 1518.79,230.248 1519.36,231.362 1519.93,231.4 1520.5,231.352 1521.07,231.271 1521.64,231.23 1522.2,231.151 1522.77,230.925 1523.34,230.046 1523.91,227.978 1524.48,228.94 1525.05,227.977 1525.61,227.304 1526.18,228.278 1526.75,228.376 1527.32,228.54 1527.89,228.559 1528.46,228.942 1529.02,228.042 1529.59,230.514 1530.16,229.492 1530.73,230.37 1531.3,230.307 1531.87,230.599 1532.43,229.721 1533,228.846 1533.57,230.98 1534.14,232.004 1534.71,232.216 1535.28,232.157 1535.84,234.112 1536.41,237.064 1536.98,238.654 1537.55,239.241 1538.12,238.729 1538.69,239.123 1539.25,239.368 1539.82,239.66 1540.39,238.749 1540.96,238.215 1541.53,236.47 1542.1,235.792 1542.66,236.456 1543.23,235.867 1543.8,235.573 1544.37,235.224 1544.94,235.675 1545.51,235.228 1546.08,233.773 1546.64,234.416 1547.21,233.078 1547.78,234.804 1548.35,232.323 1548.92,232.098 1549.49,232.804 1550.05,232.452 1550.62,232.436 1551.19,232.291 1551.76,232.002 1552.33,232.018 1552.9,231.847 1553.46,231.589 1554.03,232.308 1554.6,232.232 1555.17,228.862 1555.74,227.852 1556.31,225.984 1556.87,223.01 1557.44,224.247 1558.01,224.646 1558.58,224.883 1559.15,223.943 1559.72,224.211 1560.28,224.6 1560.85,225.842 1561.42,222.188 1561.99,221.905 1562.56,222.36 1563.13,223.164 1563.69,223.56 1564.26,224.015 1564.83,224.396 1565.4,225.671 1565.97,225.959 1566.54,227.402 1567.1,226.591 1567.67,227.019 1568.24,225.119 1568.81,228.569 1569.38,228.853 1569.95,231.194 1570.51,231.366 1571.08,232.366 1571.65,231.266 1572.22,230.242 1572.79,232.362 1573.36,231.128 1573.92,230.884 1574.49,230.142 1575.06,229.277 1575.63,227.584 1576.2,226.618 1576.77,227.046 1577.33,226.259 1577.9,226.783 1578.47,227.967 1579.04,228.205 1579.61,228.268 1580.18,228.503 1580.74,230.921 1581.31,229.921 1581.88,230.183 1582.45,229.357 1583.02,229.433 1583.59,228.406 1584.15,227.972 1584.72,228.189 1585.29,228.438 1585.86,229.685 1586.43,230.95 1587,231.079 1587.56,230.307 1588.13,229.423 1588.7,227.624 1589.27,226.986 1589.84,227.426 1590.41,225.824 1590.97,225.122 1591.54,227.686 1592.11,229.077 1592.68,230.426 1593.25,232.67 1593.82,235.773 1594.38,237.737 1594.95,238.283 1595.52,237.782 1596.09,234.279 1596.66,234.919 1597.23,233.594 1597.79,235.242 1598.36,234.01 1598.93,233.795 1599.5,233.626 1600.07,235.57 1600.64,236.145 1601.2,238.759 1601.77,236.24 1602.34,236.937 1602.91,236.489 1603.48,236.242 1604.05,234.688 1604.61,231.31 1605.18,230.61 1605.75,228.531 1606.32,227.851 1606.89,229.19 1607.46,228.323 1608.02,230.597 1608.59,229.457 1609.16,231.617 1609.73,232.564 1610.3,232.396 1610.87,232.406 1611.43,233.25 1612,230.882 1612.57,231.863 1613.14,232.011 1613.71,231.995 1614.28,235.12 1614.84,235.589 1615.41,237.215 1615.98,236.626 1616.55,234.159 1617.12,235.147 1617.69,235.077 1618.26,234.815 1618.82,234.55 1619.39,234.571 1619.96,234.321 1620.53,234.029 1621.1,233.429 1621.67,232.146 1622.23,232.101 1622.8,232.299 1623.37,232.162 1623.94,232.972 1624.51,230.65 1625.08,231.659 1625.64,231.466 1626.21,231.538 1626.78,233.354 1627.35,233.197 1627.92,231.992 1628.49,232.825 1629.05,233.585 1629.62,235.367 1630.19,234.892 1630.76,235.49 1631.33,238.132 1631.9,236.537 1632.46,235.686 1633.03,235.064 1633.6,233.732 1634.17,232.474 1634.74,230.112 1635.31,230.159 1635.87,231.039 1636.44,230.886 1637.01,229.813 1637.58,230.759 1638.15,230.548 1638.72,230.362 1639.28,231.412 1639.85,229.29 1640.42,230.737 1640.99,228.638 1641.56,228.641 1642.13,231.791 1642.69,231.686 1643.26,230.556 1643.83,229.416 1644.4,228.323 1644.97,230.639 1645.54,231.735 1646.1,232.62 1646.67,233.522 1647.24,235.359 1647.81,234.963 1648.38,234.396 1648.95,233.908 1649.51,232.443 1650.08,232.077 1650.65,230.878 1651.22,229.675 1651.79,230.881 1652.36,230.693 1652.92,230.528 1653.49,229.719 1654.06,230.517 1654.63,228.058 1655.2,228.191 1655.77,227.145 1656.33,226.389 1656.9,226.614 1657.47,226.766 1658.04,225.913 1658.61,224.971 1659.18,226.367 1659.74,226.577 1660.31,226.576 1660.88,226.873 1661.45,226.334 1662.02,227.533 1662.59,227.654 1663.15,227.689 1663.72,227.922 1664.29,228.107 1664.86,228.34 1665.43,228.521 1666,229.876 1666.56,230.105 1667.13,231.103 1667.7,231.049 1668.27,229.878 1668.84,230.055 1669.41,233.186 1669.97,234.141 1670.54,232.748 1671.11,233.474 1671.68,233.323 1672.25,234.138 1672.82,232.739 1673.38,231.493 1673.95,232.826 1674.52,233.722 1675.09,233.645 1675.66,232.424 1676.23,233.353 1676.79,234.299 1677.36,234.062 1677.93,233.904 1678.5,232.542 1679.07,230.353 1679.64,230.399 1680.2,230.35 1680.77,231.238 1681.34,229.188 1681.91,228.102 1682.48,227.939 1683.05,227.13 1683.61,228.264 1684.18,228.338 1684.75,229.617 1685.32,229.597 1685.89,227.675 1686.46,227.895 1687.02,228.245 1687.59,228.289 1688.16,227.24 1688.73,227.433 1689.3,229.784 1689.87,228.593 1690.44,228.554 1691,227.597 1691.57,228.952 1692.14,227.796 1692.71,226.815 1693.28,225.154 1693.85,223.713 1694.41,224.195 1694.98,223.626 1695.55,223.309 1696.12,222.921 1696.69,223.791 1697.26,224.346 1697.82,224.94 1698.39,225.229 1698.96,223.599 1699.53,224.137 1700.1,227.892 1700.67,227.977 1701.23,226.204 1701.8,226.478 1702.37,226.829 1702.94,228.172 1703.51,232.694 1704.08,232.832 1704.64,232.647 1705.21,233.589 1705.78,232.631 1706.35,233.837 1706.92,233.981 1707.49,232.95 1708.05,231.963 1708.62,234.083 1709.19,231.802 1709.76,232.091 1710.33,233.279 1710.9,235.215 1711.46,233.92 1712.03,231.877 1712.6,228.67 1713.17,228.949 1713.74,227.189 1714.31,227.607 1714.87,227.78 1715.44,227.025 1716.01,227.375 1716.58,228.828 1717.15,228.963 1717.72,231.183 1718.28,228.376 1718.85,228.598 1719.42,229.819 1719.99,230.79 1720.56,230.97 1721.13,231.203 1721.69,231.316 1722.26,231.372 1722.83,229.421 1723.4,229.897 1723.97,230.097 1724.54,229.213 1725.1,229.646 1725.67,231.06 1726.24,230.027 1726.81,230.081 1727.38,232.454 1727.95,232.597 1728.51,232.579 1729.08,232.875 1729.65,234.024 1730.22,232.721 1730.79,231.828 1731.36,231.983 1731.92,229.989 1732.49,229.027 1733.06,230.198 1733.63,230.387 1734.2,232.644 1734.77,230.605 1735.33,228.553 1735.9,228.778 1736.47,230.097 1737.04,230.145 1737.61,229.441 1738.18,228.869 1738.74,230.068 1739.31,234.334 1739.88,234.313 1740.45,234.272 1741.02,233.158 1741.59,231.119 1742.15,232.32 1742.72,231.255 1743.29,231.418 1743.86,229.629 1744.43,232.129 1745,231.921 1745.56,229.983 1746.13,233.362 1746.7,232.174 1747.27,232.095 1747.84,233.251 1748.41,233.128 1748.97,233.138 1749.54,236.021 1750.11,235.694 1750.68,235.552 1751.25,234.167 1751.82,233.844 1752.38,234.801 1752.95,233.534 1753.52,233.393 1754.09,232.284 1754.66,232.149 1755.23,233.249 1755.79,233.289 1756.36,235.264 1756.93,235.04 1757.5,234.919 1758.07,233.681 1758.64,234.411 1759.21,231.402 1759.77,231.267 1760.34,231.198 1760.91,233.205 1761.48,229.927 1762.05,230.118 1762.62,230.169 1763.18,229.286 1763.75,229.16 1764.32,231.496 1764.89,230.455 1765.46,229.449 1766.03,227.485 1766.59,225.821 1767.16,228.5 1767.73,229.539 1768.3,229.721 1768.87,229.815 1769.44,231.032 1770,232.303 1770.57,233.153 1771.14,233.177 1771.71,232.134 1772.28,234.202 1772.85,233.077 1773.41,230.95 1773.98,229.847 1774.55,229.97 1775.12,230.076 1775.69,228.119 1776.26,227.328 1776.82,225.634 1777.39,225.028 1777.96,225.375 1778.53,227.94 1779.1,227.191 1779.67,227.381 1780.23,227.654 1780.8,225.89 1781.37,228.439 1781.94,229.555 1782.51,228.72 1783.08,227.963 1783.64,225.948 1784.21,227.56 1784.78,229.737 1785.35,229.982 1785.92,229.952 1786.49,229.906 1787.05,231.158 1787.62,231.158 1788.19,232.518 1788.76,231.609 1789.33,231.714 1789.9,235.006 1790.46,236.006 1791.03,234.619 1791.6,232.23 1792.17,233.53 1792.74,232.466 1793.31,230.483 1793.87,231.74 1794.44,229.58 1795.01,227.679 1795.58,226.765 1796.15,228.146 1796.72,229.426 1797.28,229.701 1797.85,231.081 1798.42,230.318 1798.99,232.577 1799.56,231.433 1800.13,232.693 1800.69,231.564 1801.26,230.438 1801.83,230.853 1802.4,231.92 1802.97,230.622 1803.54,231.8 1804.1,231.022 1804.67,232.335 1805.24,232.339 1805.81,233.401 1806.38,233.354 1806.95,233.325 1807.51,234.277 1808.08,231.176 1808.65,232.36 1809.22,233.625 1809.79,234.525 1810.36,234.391 1810.92,233.169 1811.49,232.007 1812.06,232.133 1812.63,232.064 1813.2,231.791 1813.77,232.626 1814.33,232.65 1814.9,232.639 1815.47,234.546 1816.04,234.43 1816.61,234.394 1817.18,234.325 1817.74,232.972 1818.31,232.955 1818.88,234.054 1819.45,235.024 1820.02,230.674 1820.59,231.66 1821.15,232.608 1821.72,232.563 1822.29,234.406 1822.86,232.942 1823.43,232.69 1824,234.45 1824.56,236.344 1825.13,235.878 1825.7,236.628 1826.27,236.157 1826.84,235.734 1827.41,237.369 1827.97,237.067 1828.54,236.388 1829.11,235.096 1829.68,234.827 1830.25,234.436 1830.82,232.058 1831.39,234.095 1831.95,234.81 1832.52,233.575 1833.09,235.246 1833.66,238.913 1834.23,238.18 1834.8,236.539 1835.36,236.114 1835.93,238.964 1836.5,239.19 1837.07,236.344 1837.64,236.01 1838.21,235.52 1838.77,238.086 1839.34,237.313 1839.91,236.814 1840.48,236.222 1841.05,233.547 1841.62,233.155 1842.18,231.741 1842.75,231.239 1843.32,230.042 1843.89,227.691 1844.46,228.715 1845.03,228.695 1845.59,228.746 1846.16,231.906 1846.73,232.591 1847.3,231.071 1847.87,228.915 1848.44,225.798 1849,225.958 1849.57,227.267 1850.14,226.342 1850.71,229.7 1851.28,229.588 1851.85,230.506 1852.41,230.459 1852.98,230.449 1853.55,229.343 1854.12,230.583 1854.69,229.402 1855.26,229.733 1855.82,229.746 1856.39,230.789 1856.96,231.743 1857.53,231.501 1858.1,231.027 1858.67,228.826 1859.23,228.856 1859.8,228.954 1860.37,227.859 1860.94,226.969 1861.51,225.96 1862.08,224.933 1862.64,225.238 1863.21,224.372 1863.78,225.033 1864.35,225.433 1864.92,225.987 1865.49,228.553 1866.05,227.721 1866.62,229.689 1867.19,228.657 1867.76,228.623 1868.33,230.031 1868.9,228.993 1869.46,227.881 1870.03,225.831 1870.6,225.933 1871.17,225.017 1871.74,225.427 1872.31,227.9 1872.87,230.311 1873.44,230.545 1874.01,230.808 1874.58,229.965 1875.15,233.206 1875.72,231.918 1876.28,232.922 1876.85,232.641 1877.42,230.643 1877.99,229.605 1878.56,229.806 1879.13,229.074 1879.69,229.207 1880.26,228.286 1880.83,229.381 1881.4,228.216 1881.97,228.564 1882.54,228.854 1883.1,227.083 1883.67,227.202 1884.24,230.453 1884.81,229.517 1885.38,231.676 1885.95,231.606 1886.51,230.517 1887.08,231.542 1887.65,232.665 1888.22,232.388 1888.79,234.333 1889.36,236.192 1889.92,235.938 1890.49,236.566 1891.06,237.059 1891.63,235.681 1892.2,235.383 1892.77,236.145 1893.33,236.632 1893.9,236.214 1894.47,237.675 1895.04,237.009 1895.61,235.345 1896.18,234.845 1896.74,236.568 1897.31,235.966 1897.88,233.669 1898.45,233.492 1899.02,233.112 1899.59,234.911 1900.16,232.532 1900.72,230.456 1901.29,230.472 1901.86,229.405 1902.43,228.557 1903,230.625 1903.57,230.592 1904.13,232.645 1904.7,233.392 1905.27,231.052 1905.84,229.806 1906.41,229.614 1906.98,230.666 1907.54,229.348 1908.11,231.536 1908.68,231.455 1909.25,233.317 1909.82,231.803 1910.39,232.675 1910.95,230.46 1911.52,230.334 1912.09,230.418 1912.66,230.27 1913.23,229.284 1913.8,229.206 1914.36,230.188 1914.93,231.069 1915.5,227.814 1916.07,224.995 1916.64,224.367 1917.21,223.782 1917.77,224.24 1918.34,223.405 1918.91,223.983 1919.48,224.513 1920.05,225.939 1920.62,224.388 1921.18,224.947 1921.75,223.393 1922.32,224.842 1922.89,225.148 1923.46,226.55 1924.03,224.843 1924.59,226.337 1925.16,223.588 1925.73,225.43 1926.3,227.018 1926.87,225.22 1927.44,224.587 1928,227.101 1928.57,224.107 1929.14,226.718 1929.71,226.935 1930.28,229.091 1930.85,228.032 1931.41,230.349 1931.98,232.65 1932.55,234.559 1933.12,232.289 1933.69,231.322 1934.26,232.416 1934.82,232.482 1935.39,233.535 1935.96,234.415 1936.53,233.205 1937.1,231.886 1937.67,231.786 1938.23,231.871 1938.8,233.008 1939.37,234.98 1939.94,234.93 1940.51,234.779 1941.08,237.665 1941.64,239.534 1942.21,240.112 1942.78,241.442 1943.35,242.705 1943.92,242.988 1944.49,241.111 1945.05,240.375 1945.62,242.633 1946.19,241.736 1946.76,239.777 1947.33,238.052 1947.9,236.235 1948.46,235.824 1949.03,237.279 1949.6,236.639 1950.17,235.072 1950.74,234.611 1951.31,233.209 1951.87,232.176 1952.44,230.817 1953.01,228.777 1953.58,226.609 1954.15,227.673 1954.72,224.777 1955.28,225.836 1955.85,226.197 1956.42,223.408 1956.99,222.685 1957.56,221.189 1958.13,222.836 1958.69,221.328 1959.26,221.88 1959.83,222.516 1960.4,222.061 1960.97,221.637 1961.54,224.34 1962.1,224.845 1962.67,225.19 1963.24,223.612 1963.81,223.065 1964.38,224.587 1964.95,224.088 1965.51,223.58 1966.08,225.08 1966.65,224.471 1967.22,224.85 1967.79,227.544 1968.36,227.937 1968.92,230.245 1969.49,232.367 1970.06,232.498 1970.63,233.427 1971.2,235.426 1971.77,236.113 1972.34,234.769 1972.9,234.313 1973.47,232.02 1974.04,232.048 1974.61,229.015 1975.18,226.99 1975.75,226.268 1976.31,225.558 1976.88,223.924 1977.45,224.417 1978.02,225.096 1978.59,224.768 1979.16,226.46 1979.72,227.034 1980.29,226.382 1980.86,226.933 1981.43,227.583 1982,227.82 1982.57,231.122 1983.13,229.359 1983.7,228.66 1984.27,229.964 1984.84,230.09 1985.41,231.134 1985.98,229.314 1986.54,230.451 1987.11,230.74 1987.68,231.786 1988.25,231.594 1988.82,230.518 1989.39,229.684 1989.95,230.766 1990.52,233.05 1991.09,232.053 1991.66,235.409 1992.23,234.147 1992.8,233.963 1993.36,233.859 1993.93,234.059 1994.5,235.048 1995.07,234.796 1995.64,234.693 1996.21,233.338 1996.77,234.538 1997.34,233.166 1997.91,233.078 1998.48,233.233 1999.05,232.102 1999.62,232.212 2000.18,230.164 2000.75,227.338 2001.32,229.606 2001.89,230.837 2002.46,228.796 2003.03,227.923 2003.59,226.168 2004.16,227.501 2004.73,225.995 2005.3,226.518 2005.87,225.933 2006.44,227.421 2007,228.859 2007.57,228.97 2008.14,230.3 2008.71,227.184 2009.28,226.463 2009.85,227.738 2010.41,228.042 2010.98,229.465 2011.55,231.548 2012.12,232.401 2012.69,233.564 2013.26,233.293 2013.82,234.24 2014.39,237.016 2014.96,237.841 2015.53,235.363 2016.1,235.298 2016.67,234.057 2017.23,233.82 2017.8,233.542 2018.37,231.541 2018.94,232.527 2019.51,232.529 2020.08,234.52 2020.64,232.163 2021.21,231.137 2021.78,230.125 2022.35,232.287 2022.92,231.311 2023.49,230.323 2024.05,229.495 2024.62,229.701 2025.19,230.894 2025.76,228.827 2026.33,228.877 2026.9,232.323 2027.46,232.295 2028.03,234.247 2028.6,232.889 2029.17,231.917 2029.74,234.901 2030.31,233.654 2030.87,236.568 2031.44,238.374 2032.01,237.069 2032.58,236.544 2033.15,236.14 2033.72,235.887 2034.28,236.633 2034.85,236.25 2035.42,235.136 2035.99,233.946 2036.56,234.902 2037.13,235.712 2037.69,235.348 2038.26,237.015 2038.83,238.478 2039.4,235.879 2039.97,235.413 2040.54,235.039 2041.11,234.788 2041.67,234.594 2042.24,234.641 2042.81,234.432 2043.38,233.181 2043.95,233.052 2044.52,232.779 2045.08,232.62 2045.65,232.448 2046.22,232.251 2046.79,231.927 2047.36,232.153 2047.93,232.001 2048.49,232.01 2049.06,233.102 2049.63,232.819 2050.2,235.641 2050.77,235.094 2051.34,234.807 2051.9,232.404 2052.47,233.394 2053.04,234.138 2053.61,235 2054.18,236.655 2054.75,233.971 2055.31,233.54 2055.88,232.13 2056.45,233.216 2057.02,234.007 2057.59,233.607 2058.16,234.569 2058.72,234.983 2059.29,232.437 2059.86,230.18 2060.43,232.058 2061,231.815 2061.57,231.529 2062.13,231.403 2062.7,230.065 2063.27,229.817 2063.84,228.865 2064.41,227.986 2064.98,224.147 2065.54,224.597 2066.11,223.898 2066.68,224.17 2067.25,225.422 2067.82,225.908 2068.39,229.087 2068.95,228.247 2069.52,228.226 2070.09,227.222 2070.66,224.379 2071.23,225.922 2071.8,225.214 2072.36,224.598 2072.93,222.753 2073.5,224.519 2074.07,226.027 2074.64,226.463 2075.21,228.84 2075.77,227.998 2076.34,227.197 2076.91,225.338 2077.48,225.761 2078.05,226.242 2078.62,226.855 2079.18,228.364 2079.75,229.668 2080.32,227.857 2080.89,228.064 2081.46,227.167 2082.03,228.283 2082.59,227.492 2083.16,228.86 2083.73,228.898 2084.3,231.192 2084.87,232.12 2085.44,232.334 2086,231.194 2086.57,233.366 2087.14,233.18 2087.71,234.092 2088.28,231.848 2088.85,231.908 2089.41,231.888 2089.98,230.775 2090.55,231.914 2091.12,230.859 2091.69,230.815 2092.26,231.918 2092.82,230.919 2093.39,231.891 2093.96,230.786 2094.53,232.791 2095.1,230.579 2095.67,233.781 2096.23,234.609 2096.8,237.285 2097.37,236.887 2097.94,233.5 2098.51,234.503 2099.08,236.143 2099.64,233.823 2100.21,232.673 2100.78,232.658 2101.35,230.531 2101.92,230.46 2102.49,230.405 2103.05,230.411 2103.62,231.526 2104.19,231.657 2104.76,227.508 2105.33,227.784 2105.9,228.106 2106.46,226.145 2107.03,228.513 2107.6,228.597 2108.17,227.853 2108.74,228.076 2109.31,227.306 2109.87,227.35 2110.44,229.726 2111.01,229.606 2111.58,229.675 2112.15,230.72 2112.72,229.681 2113.29,229.567 2113.85,228.665 2114.42,226.86 2114.99,228.228 2115.56,228.433 2116.13,227.577 2116.7,227.879 2117.26,229.162 2117.83,231.293 2118.4,233.332 2118.97,232.312 2119.54,231.178 2120.11,231.196 2120.67,234.324 2121.24,234.055 2121.81,231.838 2122.38,230.778 2122.95,229.875 2123.52,230.932 2124.08,232.952 2124.65,233.777 2125.22,233.738 2125.79,233.33 2126.36,235.419 2126.93,233.02 2127.49,232.828 2128.06,231.791 2128.63,233.739 2129.2,233.533 2129.77,232.445 2130.34,232.238 2130.9,233.036 2131.47,230.759 2132.04,229.705 2132.61,231.889 2133.18,235.968 2133.75,236.581 2134.31,235.214 2134.88,234.75 2135.45,233.473 2136.02,233.276 2136.59,233.28 2137.16,234.146 2137.72,234.844 2138.29,232.622 2138.86,232.393 2139.43,232.162 2140,230.974 2140.57,229.862 2141.13,227.763 2141.7,227.899 2142.27,226.183 2142.84,225.514 2143.41,224.935 2143.98,222.373 2144.54,223.806 2145.11,223.291 2145.68,225.017 2146.25,222.442 2146.82,219.895 2147.39,220.793 2147.95,223.746 2148.52,226.365 2149.09,223.663 2149.66,225.392 2150.23,227.714 2150.8,228.116 2151.36,230.415 2151.93,230.676 2152.5,229.774 2153.07,230.8 2153.64,230.068 2154.21,227.088 2154.77,228.536 2155.34,226.737 2155.91,228.139 2156.48,227.307 2157.05,227.657 2157.62,228.857 2158.18,229.052 2158.75,229.194 2159.32,230.471 2159.89,229.676 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip450)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip450)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip450)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip450)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.034 ± 0.025\n  with uncertainty of ± 0.0022970838609968733\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01492 ± (0.001745, 0.00191896) (MC)\n  95% confidence interval: [-4.01874, -4.0114]) (MC)\n  linear error propagation: -4.01512 ± 0.00195369\n  |δ_y| = |0.00192979| (≤ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.014920759787795, val_l = 0.0038148495506993285, val_u = 0.0035241893350130837)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip480\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip480)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip481\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip480)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip482\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1141.89 2211.02,1141.89 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,977.673 2211.02,977.673 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,813.452 2211.02,813.452 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,649.23 2211.02,649.23 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,485.009 2211.02,485.009 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,320.788 2211.02,320.788 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1141.89 365.751,1141.89 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,977.673 365.751,977.673 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,813.452 365.751,813.452 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,649.23 365.751,649.23 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,485.009 365.751,485.009 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,320.788 365.751,320.788 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M298.909 1127.69 Q295.298 1127.69 293.469 1131.26 Q291.664 1134.8 291.664 1141.93 Q291.664 1149.04 293.469 1152.6 Q295.298 1156.14 298.909 1156.14 Q302.543 1156.14 304.349 1152.6 Q306.177 1149.04 306.177 1141.93 Q306.177 1134.8 304.349 1131.26 Q302.543 1127.69 298.909 1127.69 M298.909 1123.99 Q304.719 1123.99 307.775 1128.6 Q310.853 1133.18 310.853 1141.93 Q310.853 1150.66 307.775 1155.26 Q304.719 1159.85 298.909 1159.85 Q293.099 1159.85 290.02 1155.26 Q286.964 1150.66 286.964 1141.93 Q286.964 1133.18 290.02 1128.6 Q293.099 1123.99 298.909 1123.99 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M259.557 991.018 L267.196 991.018 L267.196 964.652 L258.886 966.319 L258.886 962.059 L267.15 960.393 L271.826 960.393 L271.826 991.018 L279.465 991.018 L279.465 994.953 L259.557 994.953 L259.557 991.018 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M298.909 963.471 Q295.298 963.471 293.469 967.036 Q291.664 970.578 291.664 977.707 Q291.664 984.814 293.469 988.379 Q295.298 991.92 298.909 991.92 Q302.543 991.92 304.349 988.379 Q306.177 984.814 306.177 977.707 Q306.177 970.578 304.349 967.036 Q302.543 963.471 298.909 963.471 M298.909 959.768 Q304.719 959.768 307.775 964.374 Q310.853 968.958 310.853 977.707 Q310.853 986.434 307.775 991.041 Q304.719 995.624 298.909 995.624 Q293.099 995.624 290.02 991.041 Q286.964 986.434 286.964 977.707 Q286.964 968.958 290.02 964.374 Q293.099 959.768 298.909 959.768 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M262.775 826.796 L279.094 826.796 L279.094 830.732 L257.15 830.732 L257.15 826.796 Q259.812 824.042 264.395 819.412 Q269.002 814.759 270.182 813.417 Q272.428 810.894 273.307 809.158 Q274.21 807.398 274.21 805.708 Q274.21 802.954 272.266 801.218 Q270.344 799.482 267.242 799.482 Q265.043 799.482 262.59 800.246 Q260.159 801.009 257.381 802.56 L257.381 797.838 Q260.205 796.704 262.659 796.125 Q265.113 795.547 267.15 795.547 Q272.52 795.547 275.715 798.232 Q278.909 800.917 278.909 805.408 Q278.909 807.537 278.099 809.458 Q277.312 811.357 275.205 813.949 Q274.627 814.62 271.525 817.838 Q268.423 821.032 262.775 826.796 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M298.909 799.25 Q295.298 799.25 293.469 802.815 Q291.664 806.357 291.664 813.486 Q291.664 820.593 293.469 824.157 Q295.298 827.699 298.909 827.699 Q302.543 827.699 304.349 824.157 Q306.177 820.593 306.177 813.486 Q306.177 806.357 304.349 802.815 Q302.543 799.25 298.909 799.25 M298.909 795.547 Q304.719 795.547 307.775 800.153 Q310.853 804.736 310.853 813.486 Q310.853 822.213 307.775 826.819 Q304.719 831.403 298.909 831.403 Q293.099 831.403 290.02 826.819 Q286.964 822.213 286.964 813.486 Q286.964 804.736 290.02 800.153 Q293.099 795.547 298.909 795.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M272.914 647.876 Q276.27 648.594 278.145 650.862 Q280.043 653.131 280.043 656.464 Q280.043 661.58 276.525 664.381 Q273.006 667.182 266.525 667.182 Q264.349 667.182 262.034 666.742 Q259.742 666.325 257.289 665.469 L257.289 660.955 Q259.233 662.089 261.548 662.668 Q263.863 663.246 266.386 663.246 Q270.784 663.246 273.076 661.51 Q275.39 659.774 275.39 656.464 Q275.39 653.408 273.238 651.695 Q271.108 649.959 267.289 649.959 L263.261 649.959 L263.261 646.117 L267.474 646.117 Q270.923 646.117 272.752 644.751 Q274.58 643.362 274.58 640.77 Q274.58 638.108 272.682 636.696 Q270.807 635.26 267.289 635.26 Q265.367 635.26 263.168 635.677 Q260.969 636.094 258.33 636.973 L258.33 632.807 Q260.992 632.066 263.307 631.696 Q265.645 631.325 267.705 631.325 Q273.029 631.325 276.131 633.756 Q279.233 636.163 279.233 640.284 Q279.233 643.154 277.59 645.145 Q275.946 647.112 272.914 647.876 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M298.909 635.029 Q295.298 635.029 293.469 638.594 Q291.664 642.135 291.664 649.265 Q291.664 656.371 293.469 659.936 Q295.298 663.478 298.909 663.478 Q302.543 663.478 304.349 659.936 Q306.177 656.371 306.177 649.265 Q306.177 642.135 304.349 638.594 Q302.543 635.029 298.909 635.029 M298.909 631.325 Q304.719 631.325 307.775 635.932 Q310.853 640.515 310.853 649.265 Q310.853 657.992 307.775 662.598 Q304.719 667.182 298.909 667.182 Q293.099 667.182 290.02 662.598 Q286.964 657.992 286.964 649.265 Q286.964 640.515 290.02 635.932 Q293.099 631.325 298.909 631.325 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M271.594 471.803 L259.789 490.252 L271.594 490.252 L271.594 471.803 M270.367 467.729 L276.247 467.729 L276.247 490.252 L281.177 490.252 L281.177 494.141 L276.247 494.141 L276.247 502.289 L271.594 502.289 L271.594 494.141 L255.992 494.141 L255.992 489.627 L270.367 467.729 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M298.909 470.808 Q295.298 470.808 293.469 474.372 Q291.664 477.914 291.664 485.044 Q291.664 492.15 293.469 495.715 Q295.298 499.257 298.909 499.257 Q302.543 499.257 304.349 495.715 Q306.177 492.15 306.177 485.044 Q306.177 477.914 304.349 474.372 Q302.543 470.808 298.909 470.808 M298.909 467.104 Q304.719 467.104 307.775 471.71 Q310.853 476.294 310.853 485.044 Q310.853 493.77 307.775 498.377 Q304.719 502.96 298.909 502.96 Q293.099 502.96 290.02 498.377 Q286.964 493.77 286.964 485.044 Q286.964 476.294 290.02 471.71 Q293.099 467.104 298.909 467.104 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M258.793 303.508 L277.15 303.508 L277.15 307.443 L263.076 307.443 L263.076 315.915 Q264.094 315.568 265.113 315.406 Q266.131 315.221 267.15 315.221 Q272.937 315.221 276.316 318.392 Q279.696 321.563 279.696 326.98 Q279.696 332.558 276.224 335.66 Q272.752 338.739 266.432 338.739 Q264.256 338.739 261.988 338.369 Q259.742 337.998 257.335 337.258 L257.335 332.558 Q259.418 333.693 261.641 334.248 Q263.863 334.804 266.34 334.804 Q270.344 334.804 272.682 332.697 Q275.02 330.591 275.02 326.98 Q275.02 323.369 272.682 321.262 Q270.344 319.156 266.34 319.156 Q264.465 319.156 262.59 319.572 Q260.738 319.989 258.793 320.869 L258.793 303.508 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M298.909 306.586 Q295.298 306.586 293.469 310.151 Q291.664 313.693 291.664 320.822 Q291.664 327.929 293.469 331.494 Q295.298 335.035 298.909 335.035 Q302.543 335.035 304.349 331.494 Q306.177 327.929 306.177 320.822 Q306.177 313.693 304.349 310.151 Q302.543 306.586 298.909 306.586 M298.909 302.883 Q304.719 302.883 307.775 307.489 Q310.853 312.072 310.853 320.822 Q310.853 329.549 307.775 334.156 Q304.719 338.739 298.909 338.739 Q293.099 338.739 290.02 334.156 Q286.964 329.549 286.964 320.822 Q286.964 312.072 290.02 307.489 Q293.099 302.883 298.909 302.883 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip482)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1020.89 400.199,1036.55 400.786,928.134 401.372,830.687 401.958,743.442 402.545,657.68 403.131,579.355 403.718,507.981 404.304,443.103 404.891,479.055 405.477,422.971 406.063,372.335 406.65,328.053 407.236,287.209 407.823,250.826 408.409,219.895 408.995,372.819 409.582,341.797 410.168,313.027 410.755,335.401 411.341,310.278 411.927,289.178 412.514,348.605 413.1,328.885 413.687,311.455 414.273,329.658 414.86,316.779 415.446,305.794 416.032,298.082 416.619,292.382 417.205,287.774 417.792,285.083 418.378,325.978 418.964,322.515 419.551,360.195 420.137,360.344 420.724,363.372 421.31,382.429 421.896,385.641 422.483,402.68 423.069,406.76 423.656,411.899 424.242,441.543 424.829,458.244 425.415,474.35 426.001,481.58 426.588,497.385 427.174,504.536 427.761,529.863 428.347,569.574 428.933,576.879 429.52,598.6 430.106,612.345 430.693,626.739 431.279,653.2 431.865,666.404 432.452,679 433.038,691.004 433.625,708.06 434.211,720.228 434.798,736.48 435.384,747.963 435.97,754.198 436.557,765.238 437.143,784.835 437.73,799.125 438.316,808.889 438.902,830.972 439.489,836.428 440.075,844.993 440.662,846.856 441.248,859.75 441.835,869.004 442.421,874.701 443.007,883.952 443.594,896.143 444.18,908.12 444.767,919.487 445.353,924.335 445.939,932.344 446.526,940.488 447.112,945.084 447.699,949.811 448.285,957.091 448.871,961.834 449.458,969.125 450.044,976.235 450.631,980.898 451.217,993.1 451.804,1002.66 452.39,1011.6 452.976,1017.68 453.563,1021.29 454.149,1034.27 454.736,1037.8 455.322,1045.82 455.908,1051.65 456.495,1059.16 457.081,1062.22 457.668,1065.05 458.254,1070.33 458.84,1079.5 459.427,1088.34 460.013,1099.1 460.6,1103.91 461.186,1110.28 461.773,1112.78 462.359,1117.13 462.945,1121.51 463.532,1129.31 464.118,1134.94 464.705,1136.6 465.291,1140.39 465.877,1143.91 466.464,1145.4 467.05,1148.77 467.637,1155.43 468.223,1163.87 468.809,1166.25 469.396,1167.23 469.982,1167.91 470.569,1169.03 471.155,1170.12 471.742,1172.89 472.328,1177.32 472.914,1178.42 473.501,1182.27 474.087,1183.37 474.674,1188.83 475.26,1190.94 475.846,1194.27 476.433,1194.85 477.019,1193.71 477.606,1197.63 478.192,1205.8 478.778,1205.62 479.365,1205.53 479.951,1208.71 480.538,1209.99 481.124,1210.16 481.711,1213.17 482.297,1214.78 482.883,1216.02 483.47,1217.23 484.056,1219.78 484.643,1221.04 485.229,1220.69 485.815,1219.05 486.402,1218.59 486.988,1218.66 487.575,1219.92 488.161,1221.51 488.748,1221.43 489.334,1221.4 489.92,1224.23 490.507,1223.96 491.093,1225.36 491.68,1226.54 492.266,1227.61 492.852,1229.93 493.439,1232.5 494.025,1233.51 494.612,1232.92 495.198,1238.42 495.784,1239.09 496.371,1238.4 496.957,1238.85 497.544,1239.4 498.13,1238.42 498.717,1237.39 499.303,1236.99 499.889,1239.08 500.476,1238.21 501.062,1235.85 501.649,1236.6 502.235,1237.27 502.821,1235.25 503.408,1236.26 503.994,1236.96 504.581,1236.13 505.167,1234.27 505.753,1232.09 506.34,1237.61 506.926,1237.14 507.513,1240.99 508.099,1241.45 508.686,1243.25 509.272,1243.68 509.858,1245.74 510.445,1247.52 511.031,1250.53 511.618,1246.39 512.204,1244.04 512.79,1241.99 513.377,1239.93 513.963,1242.01 514.55,1238.65 515.136,1237.83 515.722,1237.33 516.309,1239.72 516.895,1238.91 517.482,1242.57 518.068,1241.99 518.655,1238.22 519.241,1238.89 519.827,1238.64 520.414,1237.99 521,1240.16 521.587,1239.61 522.173,1240.39 522.759,1238.32 523.346,1239 523.932,1239.91 524.519,1239.23 525.105,1235.51 525.691,1237.94 526.278,1237.29 526.864,1235.03 527.451,1237.09 528.037,1235.04 528.624,1234.62 529.21,1234.31 529.796,1230.79 530.383,1229.29 530.969,1229.04 531.556,1228.75 532.142,1228.34 532.728,1226.89 533.315,1228.34 533.901,1229.56 534.488,1229.27 535.074,1227.99 535.661,1227.65 536.247,1227.51 536.833,1229.3 537.42,1233.26 538.006,1234.33 538.593,1232.57 539.179,1229.57 539.765,1232.13 540.352,1234.67 540.938,1234.21 541.525,1232.71 542.111,1232.21 542.697,1234.77 543.284,1234.26 543.87,1236.66 544.457,1233.12 545.043,1233.87 545.63,1233.19 546.216,1235.58 546.802,1232.3 547.389,1230.51 547.975,1230.45 548.562,1231.65 549.148,1235.37 549.734,1235.89 550.321,1233.94 550.907,1233.26 551.494,1232.9 552.08,1231.16 552.666,1233.65 553.253,1232 553.839,1232.85 554.426,1231.01 555.012,1230.55 555.599,1229.79 556.185,1229.46 556.771,1229.41 557.358,1229.2 557.944,1226.22 558.531,1226.24 559.117,1227.43 559.703,1225.68 560.29,1225.61 560.876,1228.39 561.463,1228.4 562.049,1229.58 562.635,1227.91 563.222,1228.95 563.808,1228.49 564.395,1229.55 564.981,1227.61 565.568,1227.79 566.154,1228.73 566.74,1228.69 567.327,1228.43 567.913,1229.67 568.5,1227.98 569.086,1227.45 569.672,1225.71 570.259,1225.5 570.845,1225.22 571.432,1225.11 572.018,1226.4 572.605,1224.96 573.191,1228.96 573.777,1223.15 574.364,1226.91 574.95,1229.34 575.537,1227.88 576.123,1227.62 576.709,1226.17 577.296,1226.12 577.882,1225.68 578.469,1228.17 579.055,1230.58 579.641,1228.99 580.228,1231.34 580.814,1230.72 581.401,1229.35 581.987,1233.01 582.574,1231.1 583.16,1233.03 583.746,1232.68 584.333,1232.97 584.919,1232.16 585.506,1230.15 586.092,1231.02 586.678,1230.29 587.265,1229.59 587.851,1230.29 588.438,1232.43 589.024,1233.25 589.61,1231.38 590.197,1232.02 590.783,1235.39 591.37,1237.17 591.956,1236.54 592.543,1239.68 593.129,1238.83 593.715,1236.52 594.302,1237.22 594.888,1237.61 595.475,1232.78 596.061,1230.92 596.647,1229.01 597.234,1228.63 597.82,1227.97 598.407,1228.69 598.993,1225.38 599.579,1227.89 600.166,1227.41 600.752,1228.16 601.339,1227.72 601.925,1226.12 602.512,1226.02 603.098,1225.57 603.684,1225.18 604.271,1225.99 604.857,1228.28 605.444,1233.42 606.03,1234.36 606.616,1235.97 607.203,1231.23 607.789,1230.49 608.376,1228.69 608.962,1227.98 609.548,1226.1 610.135,1226.78 610.721,1227.42 611.308,1225.63 611.894,1226.43 612.481,1228.59 613.067,1228.05 613.653,1230.14 614.24,1224.02 614.826,1223.57 615.413,1221.74 615.999,1224.06 616.585,1223.71 617.172,1223.29 617.758,1222.96 618.345,1224.06 618.931,1222.03 619.518,1223.26 620.104,1221.81 620.69,1222.83 621.277,1225.29 621.863,1224.87 622.45,1227.07 623.036,1225.16 623.622,1226.1 624.209,1225.14 624.795,1221.92 625.382,1222.55 625.968,1222.42 626.554,1220.62 627.141,1218.98 627.727,1217.55 628.314,1218.67 628.9,1217.27 629.487,1217.23 630.073,1217.05 630.659,1217.07 631.246,1215.78 631.832,1215.8 632.419,1215.92 633.005,1217.2 633.591,1217.17 634.178,1217.31 634.764,1214.75 635.351,1216.01 635.937,1215.94 636.523,1217.33 637.11,1215.56 637.696,1218.21 638.283,1218.35 638.869,1220.82 639.456,1219.22 640.042,1221.46 640.628,1222.69 641.215,1224.99 641.801,1224.97 642.388,1223.24 642.974,1222.66 643.56,1220.66 644.147,1219.34 644.733,1219.14 645.32,1219.89 645.906,1219.86 646.492,1219.82 647.079,1218.1 647.665,1217.93 648.252,1220.14 648.838,1218.88 649.425,1217.26 650.011,1217.36 650.597,1219.66 651.184,1219.6 651.77,1218.11 652.357,1216.51 652.943,1218.03 653.529,1220.81 654.116,1223.24 654.702,1224.09 655.289,1220.91 655.875,1221.72 656.462,1221.45 657.048,1221.09 657.634,1219.57 658.221,1215.38 658.807,1218.18 659.394,1220.66 659.98,1223.01 660.566,1222.86 661.153,1224.03 661.739,1223.3 662.326,1222.89 662.912,1220.87 663.498,1219.17 664.085,1216.04 664.671,1213.36 665.258,1213.6 665.844,1213.77 666.431,1216.57 667.017,1213.47 667.603,1214.98 668.19,1216.23 668.776,1216.23 669.363,1214.72 669.949,1217.16 670.535,1217.06 671.122,1216.94 671.708,1218.09 672.295,1217.82 672.881,1219.01 673.467,1217.57 674.054,1215.95 674.64,1217.33 675.227,1217.04 675.813,1215.35 676.4,1215.73 676.986,1212.72 677.572,1211.59 678.159,1211.6 678.745,1210.73 679.332,1210.79 679.918,1207.05 680.504,1210.45 681.091,1210.52 681.677,1212.17 682.264,1213.63 682.85,1213.65 683.436,1212.18 684.023,1212.4 684.609,1213.8 685.196,1212.49 685.782,1212.62 686.369,1213.92 686.955,1213.97 687.541,1215.31 688.128,1217.85 688.714,1217.76 689.301,1217.44 689.887,1215.78 690.473,1220.84 691.06,1221.54 691.646,1222.15 692.233,1221.71 692.819,1222.49 693.405,1223.45 693.992,1222.83 694.578,1223.47 695.165,1221.47 695.751,1216.74 696.338,1218.17 696.924,1216.39 697.51,1214.79 698.097,1213.07 698.683,1212.89 699.27,1214.55 699.856,1216.05 700.442,1217.38 701.029,1218.78 701.615,1219.95 702.202,1218.17 702.788,1217.68 703.375,1217.48 703.961,1218.4 704.547,1218.2 705.134,1217.94 705.72,1220.45 706.307,1220.07 706.893,1221 707.479,1223.25 708.066,1222.6 708.652,1220.89 709.239,1219.14 709.825,1216.19 710.411,1217.33 710.998,1217.31 711.584,1220 712.171,1219.57 712.757,1223.23 713.344,1220.01 713.93,1223.64 714.516,1225.7 715.103,1223.87 715.689,1223.2 716.276,1222.56 716.862,1223.27 717.448,1219.92 718.035,1218.24 718.621,1216.62 719.208,1216.35 719.794,1216.23 720.38,1217.06 720.967,1218.1 721.553,1216.64 722.14,1216.39 722.726,1214.98 723.313,1213.51 723.899,1206.94 724.485,1208.58 725.072,1210.16 725.658,1210.21 726.245,1207.54 726.831,1205.49 727.417,1205.99 728.004,1204.81 728.59,1205.29 729.177,1206.88 729.763,1208.46 730.349,1210.19 730.936,1211.43 731.522,1211.74 732.109,1212.08 732.695,1212.45 733.282,1214.1 733.868,1215.38 734.454,1216.48 735.041,1213.62 735.627,1213.47 736.214,1214.9 736.8,1213.58 737.386,1212.26 737.973,1210.96 738.559,1212.01 739.146,1210.76 739.732,1212.34 740.318,1212.38 740.905,1215.03 741.491,1216.31 742.078,1217.45 742.664,1217.03 743.251,1219.5 743.837,1219 744.423,1214.55 745.01,1214.26 745.596,1214.1 746.183,1213.86 746.769,1214.06 747.355,1215.17 747.942,1215.06 748.528,1214.88 749.115,1214.72 749.701,1213.16 750.288,1206.63 750.874,1207.19 751.46,1210.08 752.047,1211.5 752.633,1215.58 753.22,1212.65 753.806,1211.01 754.392,1208.61 754.979,1206.2 755.565,1205.39 756.152,1206.85 756.738,1207.41 757.324,1207.65 757.911,1206.67 758.497,1206.72 759.084,1207.19 759.67,1208.73 760.257,1206.31 760.843,1206.89 761.429,1204.21 762.016,1204.31 762.602,1203.33 763.189,1207.67 763.775,1207.68 764.361,1207.63 764.948,1207.79 765.534,1207.84 766.121,1209.3 766.707,1209.64 767.293,1211.14 767.88,1211.11 768.466,1207.47 769.053,1207.68 769.639,1210.62 770.226,1210.82 770.812,1213.56 771.398,1214.94 771.985,1210.79 772.571,1210.72 773.158,1210.75 773.744,1205.2 774.33,1207.03 774.917,1204.77 775.503,1205.44 776.09,1206.75 776.676,1206.61 777.262,1206.64 777.849,1205.77 778.435,1208.72 779.022,1208.78 779.608,1209.03 780.195,1209.18 780.781,1212.02 781.367,1212.28 781.954,1210.9 782.54,1210.78 783.127,1212.27 783.713,1214.76 784.299,1212.12 784.886,1213.31 785.472,1210.52 786.059,1210.54 786.645,1210.93 787.232,1209.65 787.818,1211.22 788.404,1208.59 788.991,1207.35 789.577,1208.7 790.164,1207.21 790.75,1207.28 791.336,1208.85 791.923,1206.46 792.509,1206.72 793.096,1204.45 793.682,1206.07 794.268,1207.67 794.855,1208.03 795.441,1211.12 796.028,1211.23 796.614,1212.78 797.201,1211.38 797.787,1211.21 798.373,1212.38 798.96,1216.16 799.546,1215.88 800.133,1218.33 800.719,1219.48 801.305,1220.36 801.892,1218.4 802.478,1217.57 803.065,1215.95 803.651,1217.12 804.237,1214.21 804.824,1214.02 805.41,1216.54 805.997,1215.12 806.583,1214.95 807.17,1214.37 807.756,1212.51 808.342,1215.22 808.929,1213.81 809.515,1216.44 810.102,1215.81 810.688,1216.74 811.274,1217.6 811.861,1218.51 812.447,1219.51 813.034,1218.62 813.62,1216.72 814.206,1217.79 814.793,1216.22 815.379,1217.42 815.966,1215.55 816.552,1215.09 817.139,1214.92 817.725,1217.36 818.311,1217.08 818.898,1216.5 819.484,1212.21 820.071,1214.95 820.657,1216.09 821.243,1215.87 821.83,1214.15 822.416,1216.42 823.003,1218.7 823.589,1217.85 824.175,1217.38 824.762,1219.83 825.348,1216.66 825.935,1216.22 826.521,1214.63 827.108,1217.21 827.694,1214.03 828.28,1209.95 828.867,1208.74 829.453,1207.43 830.04,1205.03 830.626,1202.71 831.212,1201.29 831.799,1204.4 832.385,1204.69 832.972,1204.82 833.558,1205.03 834.145,1206.57 834.731,1206.79 835.317,1204.02 835.904,1205.55 836.49,1207 837.077,1211.18 837.663,1209.93 838.249,1208.76 838.836,1207.15 839.422,1207.32 840.009,1208.59 840.595,1205.99 841.181,1207.77 841.768,1206.72 842.354,1206.87 842.941,1205.46 843.527,1208.49 844.114,1208.27 844.7,1205.5 845.286,1204.4 845.873,1203.27 846.459,1206.36 847.046,1207.64 847.632,1206.57 848.218,1205.16 848.805,1206.56 849.391,1208.12 849.978,1206.88 850.564,1208.43 851.15,1204.47 851.737,1204.63 852.323,1206.07 852.91,1206.14 853.496,1206.09 854.083,1204.75 854.669,1202.15 855.255,1202.56 855.842,1205.79 856.428,1206.03 857.015,1203.78 857.601,1202.99 858.187,1201.82 858.774,1205.02 859.36,1202.8 859.947,1203.08 860.533,1202.31 861.119,1201.3 861.706,1201.87 862.292,1202.23 862.879,1203.83 863.465,1202.86 864.052,1201.96 864.638,1202.59 865.224,1205.25 865.811,1208.16 866.397,1210.78 866.984,1214.7 867.57,1213.28 868.156,1215.89 868.743,1216.92 869.329,1217.86 869.916,1220.05 870.502,1219.65 871.089,1219.05 871.675,1221.28 872.261,1220.62 872.848,1220.1 873.434,1217.1 874.021,1215.39 874.607,1214.03 875.193,1213.83 875.78,1213.65 876.366,1216.26 876.953,1217.15 877.539,1218.16 878.125,1217.9 878.712,1219 879.298,1217.2 879.885,1216.83 880.471,1213.77 881.058,1209.78 881.644,1214.13 882.23,1209.88 882.817,1210.99 883.403,1212.26 883.99,1209.61 884.576,1211.22 885.162,1211.38 885.749,1212.61 886.335,1211.2 886.922,1209.96 887.508,1208.63 888.094,1208.88 888.681,1211.78 889.267,1210.34 889.854,1210.47 890.44,1209.23 891.027,1209.5 891.613,1209.59 892.199,1206.94 892.786,1208.47 893.372,1208.59 893.959,1208.77 894.545,1208.63 895.131,1206.11 895.718,1205.11 896.304,1205.57 896.891,1204.12 897.477,1201.94 898.063,1202.23 898.65,1202.55 899.236,1201.4 899.823,1203.19 900.409,1202.18 900.996,1201.35 901.582,1201.74 902.168,1202.25 902.755,1205.21 903.341,1204.29 903.928,1205.89 904.514,1206.2 905.1,1207.81 905.687,1207.97 906.273,1208.08 906.86,1210.67 907.446,1211.72 908.032,1208.91 908.619,1209.23 909.205,1209.26 909.792,1207.95 910.378,1206.77 910.965,1212.09 911.551,1211.85 912.137,1211.8 912.724,1210.53 913.31,1210.42 913.897,1210.54 914.483,1209.27 915.069,1208.08 915.656,1208.1 916.242,1208.18 916.829,1209.41 917.415,1211.08 918.002,1211.06 918.588,1212.32 919.174,1216.02 919.761,1218.31 920.347,1217.38 920.934,1212.74 921.52,1211.27 922.106,1211.01 922.693,1210.75 923.279,1209.39 923.866,1209.33 924.452,1207.91 925.038,1208.03 925.625,1210.63 926.211,1212.08 926.798,1211.85 927.384,1212.81 927.971,1213.97 928.557,1213.83 929.143,1212.12 929.73,1210.55 930.316,1208.92 930.903,1208.74 931.489,1208.49 932.075,1208.43 932.662,1212.48 933.248,1213.64 933.835,1213.57 934.421,1216.08 935.007,1214.3 935.594,1215.1 936.18,1213.21 936.767,1210.12 937.353,1208.82 937.94,1208.96 938.526,1210.61 939.112,1210.53 939.699,1214.31 940.285,1212.81 940.872,1213.73 941.458,1217.43 942.044,1217.07 942.631,1215.39 943.217,1214.97 943.804,1213.09 944.39,1210.04 944.976,1211.29 945.563,1209.85 946.149,1209.81 946.736,1209.78 947.322,1210.96 947.909,1212.21 948.495,1211.95 949.081,1209.43 949.668,1210.61 950.254,1210.24 950.841,1208.73 951.427,1209.99 952.013,1209.93 952.6,1211.1 953.186,1212.28 953.773,1214.88 954.359,1214.81 954.945,1211.66 955.532,1210.22 956.118,1207.49 956.705,1204.84 957.291,1203.69 957.878,1204.17 958.464,1205.84 959.05,1208.46 959.637,1207.08 960.223,1210.1 960.81,1209.94 961.396,1212.74 961.982,1212.62 962.569,1213.77 963.155,1213.82 963.742,1212.57 964.328,1216.09 964.915,1217 965.501,1217.76 966.087,1219.9 966.674,1219.53 967.26,1217.83 967.847,1218.86 968.433,1216.92 969.019,1216.28 969.606,1215.7 970.192,1215.27 970.779,1211.05 971.365,1209.78 971.951,1208.51 972.538,1208.48 973.124,1208.49 973.711,1206.91 974.297,1206.9 974.884,1208.12 975.47,1208.17 976.056,1208.15 976.643,1204.09 977.229,1202.98 977.816,1202.92 978.402,1206.05 978.988,1204.91 979.575,1199.71 980.161,1201.37 980.748,1200.26 981.334,1201.01 981.92,1204.03 982.507,1203.11 983.093,1204.92 983.68,1206.57 984.266,1207.92 984.853,1205.55 985.439,1204.37 986.025,1202.01 986.612,1202.35 987.198,1202.86 987.785,1204.45 988.371,1203.44 988.957,1205.14 989.544,1207.65 990.13,1206.18 990.717,1205.03 991.303,1208.19 991.889,1206.89 992.476,1206.93 993.062,1207.15 993.649,1207.26 994.235,1204.83 994.822,1203.83 995.408,1205.49 995.994,1204.16 996.581,1204.45 997.167,1205.97 997.754,1206.01 998.34,1204.94 998.926,1201.47 999.513,1197.7 1000.1,1198.57 1000.69,1200.49 1001.27,1199.64 1001.86,1199.98 1002.44,1201.89 1003.03,1201 1003.62,1201.35 1004.2,1202.07 1004.79,1202.45 1005.38,1202.9 1005.96,1203.43 1006.55,1202.34 1007.14,1204.31 1007.72,1203.24 1008.31,1206.04 1008.9,1207.72 1009.48,1210.36 1010.07,1207.8 1010.65,1209.49 1011.24,1208.14 1011.83,1209.59 1012.41,1209.48 1013,1209.28 1013.59,1206.73 1014.17,1208.24 1014.76,1206.98 1015.35,1208.07 1015.93,1208.2 1016.52,1206.97 1017.11,1208.59 1017.69,1208.92 1018.28,1210.27 1018.86,1207.23 1019.45,1210.05 1020.04,1212.52 1020.62,1212.32 1021.21,1212.46 1021.8,1212.27 1022.38,1209.46 1022.97,1207.83 1023.56,1206.62 1024.14,1206.79 1024.73,1207.24 1025.32,1210.12 1025.9,1210.19 1026.49,1208.99 1027.07,1208.81 1027.66,1208.47 1028.25,1205.82 1028.83,1204.82 1029.42,1203.71 1030.01,1203.87 1030.59,1202.9 1031.18,1201.88 1031.77,1203.65 1032.35,1206.41 1032.94,1206.68 1033.52,1205.76 1034.11,1207.43 1034.7,1208.6 1035.28,1211.42 1035.87,1210.2 1036.46,1210.28 1037.04,1211.37 1037.63,1209.99 1038.22,1204.3 1038.8,1206.2 1039.39,1205.06 1039.98,1205.47 1040.56,1204.32 1041.15,1204.45 1041.73,1204.69 1042.32,1206.23 1042.91,1206.2 1043.49,1206.26 1044.08,1204.86 1044.67,1204.97 1045.25,1203.85 1045.84,1205.55 1046.43,1205.87 1047.01,1206.13 1047.6,1206.48 1048.19,1205.32 1048.77,1205.78 1049.36,1207.18 1049.94,1207.29 1050.53,1209.83 1051.12,1212.35 1051.7,1213.43 1052.29,1213.19 1052.88,1211.72 1053.46,1214.46 1054.05,1216.77 1054.64,1216.42 1055.22,1215.76 1055.81,1217.85 1056.39,1217.25 1056.98,1218 1057.57,1217.63 1058.15,1215.72 1058.74,1215.2 1059.33,1205.83 1059.91,1207.38 1060.5,1207.65 1061.09,1208.85 1061.67,1208.75 1062.26,1208.53 1062.85,1208.64 1063.43,1208.44 1064.02,1209.75 1064.6,1209.66 1065.19,1208.41 1065.78,1209.78 1066.36,1208.36 1066.95,1208.2 1067.54,1208.18 1068.12,1209.69 1068.71,1209.62 1069.3,1209.31 1069.88,1209.21 1070.47,1206.52 1071.06,1205.33 1071.64,1205.32 1072.23,1205.86 1072.81,1208.8 1073.4,1207.43 1073.99,1207.64 1074.57,1204.9 1075.16,1206.68 1075.75,1206.7 1076.33,1207.04 1076.92,1207.09 1077.51,1204.69 1078.09,1203.62 1078.68,1202.31 1079.26,1204.04 1079.85,1205.36 1080.44,1212.12 1081.02,1211.74 1081.61,1207.39 1082.2,1209.92 1082.78,1211.14 1083.37,1206.94 1083.96,1207.03 1084.54,1206.88 1085.13,1208.34 1085.72,1208.46 1086.3,1208.51 1086.89,1207.05 1087.47,1207.47 1088.06,1208.69 1088.65,1208.74 1089.23,1207.34 1089.82,1208.33 1090.41,1206.95 1090.99,1206.97 1091.58,1208.53 1092.17,1208.24 1092.75,1206.97 1093.34,1205.52 1093.93,1204.1 1094.51,1205.78 1095.1,1204.46 1095.68,1207.58 1096.27,1208.89 1096.86,1212.57 1097.44,1213.84 1098.03,1216.34 1098.62,1217.44 1099.2,1215.89 1099.79,1216.86 1100.38,1217.92 1100.96,1218.76 1101.55,1216.94 1102.14,1219.28 1102.72,1218.86 1103.31,1216.87 1103.89,1218.98 1104.48,1218.46 1105.07,1219.06 1105.65,1211.75 1106.24,1211.36 1106.83,1215.03 1107.41,1213.54 1108,1210.56 1108.59,1210.51 1109.17,1211.9 1109.76,1212.97 1110.34,1211.35 1110.93,1212.6 1111.52,1212.27 1112.1,1209.45 1112.69,1211.98 1113.28,1213.29 1113.86,1211.74 1114.45,1210.13 1115.04,1212.85 1115.62,1211.12 1116.21,1213.42 1116.8,1213.15 1117.38,1212.67 1117.97,1212.39 1118.55,1212.12 1119.14,1207.87 1119.73,1206.72 1120.31,1210.63 1120.9,1213.09 1121.49,1212.97 1122.07,1212.89 1122.66,1211.15 1123.25,1210.91 1123.83,1209.24 1124.42,1212.08 1125.01,1212.01 1125.59,1210.56 1126.18,1214.23 1126.76,1213.82 1127.35,1212.26 1127.94,1212.04 1128.52,1210.48 1129.11,1209.11 1129.7,1210.28 1130.28,1211.61 1130.87,1211.46 1131.46,1211.2 1132.04,1212.27 1132.63,1210.46 1133.21,1211.48 1133.8,1210.11 1134.39,1208.33 1134.97,1209.48 1135.56,1212.2 1136.15,1213.56 1136.73,1213.2 1137.32,1212.85 1137.91,1212.7 1138.49,1217.31 1139.08,1218.1 1139.67,1217.52 1140.25,1216.83 1140.84,1218.91 1141.42,1219.54 1142.01,1216.06 1142.6,1215.63 1143.18,1214.07 1143.77,1213.5 1144.36,1211.71 1144.94,1211.49 1145.53,1209.01 1146.12,1211.77 1146.7,1209.98 1147.29,1208.42 1147.88,1207.1 1148.46,1205.94 1149.05,1208.49 1149.63,1208.4 1150.22,1209.27 1150.81,1205.27 1151.39,1205.46 1151.98,1204.13 1152.57,1205.62 1153.15,1204.26 1153.74,1204.31 1154.33,1204.73 1154.91,1205.04 1155.5,1204.97 1156.09,1203.76 1156.67,1203.8 1157.26,1202.59 1157.84,1203.01 1158.43,1199.13 1159.02,1202.31 1159.6,1205.1 1160.19,1203.98 1160.78,1204.26 1161.36,1205.87 1161.95,1205.96 1162.54,1206.02 1163.12,1204.64 1163.71,1207.35 1164.29,1207.23 1164.88,1207.56 1165.47,1202.15 1166.05,1201.58 1166.64,1204.71 1167.23,1203.66 1167.81,1202.85 1168.4,1204.4 1168.99,1205.03 1169.57,1204.1 1170.16,1203.12 1170.75,1200.54 1171.33,1200.78 1171.92,1201.45 1172.5,1203.52 1173.09,1202.65 1173.68,1204.09 1174.26,1204.06 1174.85,1205.74 1175.44,1207.11 1176.02,1208.25 1176.61,1209.25 1177.2,1208.91 1177.78,1207.28 1178.37,1205.84 1178.96,1207.13 1179.54,1203.13 1180.13,1202.16 1180.71,1207.96 1181.3,1206.56 1181.89,1206.73 1182.47,1203.96 1183.06,1205.48 1183.65,1206.85 1184.23,1207.98 1184.82,1207.95 1185.41,1209.35 1185.99,1207.94 1186.58,1207.89 1187.16,1210.39 1187.75,1209.06 1188.34,1208.91 1188.92,1207.57 1189.51,1210.24 1190.1,1208.7 1190.68,1207.15 1191.27,1208.54 1191.86,1208.9 1192.44,1206.23 1193.03,1208.74 1193.62,1207.16 1194.2,1207.32 1194.79,1209.91 1195.37,1208.33 1195.96,1210.97 1196.55,1209.14 1197.13,1211.46 1197.72,1213.97 1198.31,1215.1 1198.89,1216.08 1199.48,1215.62 1200.07,1217.73 1200.65,1217.29 1201.24,1215.63 1201.83,1213.97 1202.41,1215.09 1203,1214.62 1203.58,1215.9 1204.17,1211.87 1204.76,1207.76 1205.34,1206.53 1205.93,1207.93 1206.52,1206.57 1207.1,1207.97 1207.69,1206.56 1208.28,1206.83 1208.86,1205.52 1209.45,1208.25 1210.03,1205.82 1210.62,1206 1211.21,1206.06 1211.79,1204.68 1212.38,1204.77 1212.97,1207.57 1213.55,1207.57 1214.14,1206.62 1214.73,1206.93 1215.31,1206.65 1215.9,1206.65 1216.49,1208.11 1217.07,1205.64 1217.66,1205.79 1218.24,1207.2 1218.83,1207.16 1219.42,1205.82 1220,1205.52 1220.59,1205.6 1221.18,1207.1 1221.76,1208.53 1222.35,1206.04 1222.94,1204.81 1223.52,1205.13 1224.11,1205.46 1224.7,1206.99 1225.28,1202.86 1225.87,1202.96 1226.45,1204.29 1227.04,1204.46 1227.63,1204.57 1228.21,1206.32 1228.8,1205.25 1229.39,1206.71 1229.97,1208.09 1230.56,1210.87 1231.15,1210.75 1231.73,1211.82 1232.32,1211.78 1232.91,1211.64 1233.49,1208.75 1234.08,1209.09 1234.66,1211.48 1235.25,1208.45 1235.84,1212.27 1236.42,1211.9 1237.01,1210.25 1237.6,1211.57 1238.18,1213.95 1238.77,1212.3 1239.36,1209.26 1239.94,1209.21 1240.53,1212.03 1241.11,1211.85 1241.7,1211.58 1242.29,1212.64 1242.87,1211.06 1243.46,1212.57 1244.05,1216.24 1244.63,1215.87 1245.22,1216.59 1245.81,1216.24 1246.39,1216.16 1246.98,1214.25 1247.57,1214.04 1248.15,1214.06 1248.74,1211.44 1249.32,1212.8 1249.91,1216.34 1250.5,1218.63 1251.08,1214.5 1251.67,1210.4 1252.26,1210.41 1252.84,1210.46 1253.43,1210.11 1254.02,1211.1 1254.6,1213.76 1255.19,1213.67 1255.78,1212.05 1256.36,1211.78 1256.95,1212.66 1257.53,1212.47 1258.12,1209.59 1258.71,1206.9 1259.29,1209.43 1259.88,1212.01 1260.47,1211.82 1261.05,1213.15 1261.64,1208.67 1262.23,1212.36 1262.81,1210.89 1263.4,1212.05 1263.98,1210.78 1264.57,1205.22 1265.16,1203.96 1265.74,1204.38 1266.33,1204.5 1266.92,1206.11 1267.5,1207.41 1268.09,1212.82 1268.68,1213.79 1269.26,1210.97 1269.85,1210.86 1270.44,1205.25 1271.02,1202.96 1271.61,1200.88 1272.19,1202.33 1272.78,1202.95 1273.37,1204.47 1273.95,1203.15 1274.54,1203.53 1275.13,1203.72 1275.71,1204.04 1276.3,1205.38 1276.89,1205.69 1277.47,1208.37 1278.06,1208.28 1278.65,1207.13 1279.23,1208.61 1279.82,1208.89 1280.4,1204.82 1280.99,1203.87 1281.58,1202.9 1282.16,1201.66 1282.75,1201.97 1283.34,1203.7 1283.92,1205.21 1284.51,1206.4 1285.1,1205.28 1285.68,1204.22 1286.27,1205.87 1286.86,1205.67 1287.44,1208.6 1288.03,1208.64 1288.61,1207.34 1289.2,1211.4 1289.79,1211.03 1290.37,1208.09 1290.96,1209.05 1291.55,1211.75 1292.13,1212.87 1292.72,1209.79 1293.31,1212.03 1293.89,1209.22 1294.48,1209.24 1295.06,1205.2 1295.65,1202.73 1296.24,1201.71 1296.82,1206.41 1297.41,1206.7 1298,1206.49 1298.58,1206.33 1299.17,1205.11 1299.76,1206.59 1300.34,1209.26 1300.93,1209.47 1301.52,1206.79 1302.1,1208.1 1302.69,1210.68 1303.27,1207.82 1303.86,1207.91 1304.45,1209.16 1305.03,1211.74 1305.62,1210.47 1306.21,1210.37 1306.79,1208.74 1307.38,1208.71 1307.97,1207.23 1308.55,1208.62 1309.14,1210.14 1309.73,1214.04 1310.31,1210.97 1310.9,1212.23 1311.48,1210.61 1312.07,1209.03 1312.66,1209.36 1313.24,1210.78 1313.83,1211.8 1314.42,1211.58 1315,1212.52 1315.59,1213.52 1316.18,1215.85 1316.76,1214.08 1317.35,1213.57 1317.93,1213.44 1318.52,1208.97 1319.11,1210.27 1319.69,1208.83 1320.28,1207.59 1320.87,1208.97 1321.45,1206.39 1322.04,1204.9 1322.63,1207.85 1323.21,1206.52 1323.8,1205.15 1324.39,1205.16 1324.97,1205.42 1325.56,1207.17 1326.14,1207.51 1326.73,1210.39 1327.32,1210.67 1327.9,1210.37 1328.49,1207.58 1329.08,1207.82 1329.66,1206.53 1330.25,1206.7 1330.84,1206.65 1331.42,1209.53 1332.01,1210.79 1332.6,1213.24 1333.18,1210.38 1333.77,1207.74 1334.35,1206.56 1334.94,1207.75 1335.53,1206.29 1336.11,1207.9 1336.7,1208.95 1337.29,1206.13 1337.87,1206.46 1338.46,1205.29 1339.05,1206.95 1339.63,1208.36 1340.22,1209.68 1340.8,1205.56 1341.39,1202.9 1341.98,1201.83 1342.56,1202.05 1343.15,1202.35 1343.74,1204 1344.32,1204.33 1344.91,1203.21 1345.5,1204.73 1346.08,1203.7 1346.67,1202.71 1347.26,1204.38 1347.84,1204.27 1348.43,1204.4 1349.01,1206.23 1349.6,1202.14 1350.19,1200.92 1350.77,1201.3 1351.36,1201.88 1351.95,1198.02 1352.53,1199.7 1353.12,1198.61 1353.71,1199.3 1354.29,1198.66 1354.88,1201.88 1355.47,1201.09 1356.05,1197.46 1356.64,1199.44 1357.22,1199.88 1357.81,1198.96 1358.4,1200.77 1358.98,1199.66 1359.57,1201.21 1360.16,1204.2 1360.74,1205.78 1361.33,1208.59 1361.92,1208.31 1362.5,1201.8 1363.09,1203.42 1363.68,1202.56 1364.26,1203.16 1364.85,1204.79 1365.43,1205.04 1366.02,1206.46 1366.61,1206.59 1367.19,1206.53 1367.78,1209.11 1368.37,1210.31 1368.95,1207.72 1369.54,1208.21 1370.13,1209.56 1370.71,1212.33 1371.3,1211.95 1371.88,1211.83 1372.47,1212.81 1373.06,1210.11 1373.64,1208.76 1374.23,1208.75 1374.82,1208.71 1375.4,1209.92 1375.99,1209.79 1376.58,1209.81 1377.16,1205.58 1377.75,1204.15 1378.34,1208.46 1378.92,1204.32 1379.51,1201.93 1380.09,1200.84 1380.68,1205.41 1381.27,1204.28 1381.85,1206.83 1382.44,1206.9 1383.03,1206.88 1383.61,1204.4 1384.2,1199.44 1384.79,1199.88 1385.37,1202.01 1385.96,1202.25 1386.55,1202.44 1387.13,1204.09 1387.72,1205.78 1388.3,1207.2 1388.89,1204.43 1389.48,1206.12 1390.06,1206.36 1390.65,1210.71 1391.24,1211.89 1391.82,1211.58 1392.41,1210.12 1393,1211.45 1393.58,1210.01 1394.17,1211.39 1394.75,1212.82 1395.34,1215.21 1395.93,1211.03 1396.51,1209.66 1397.1,1213.57 1397.69,1213.33 1398.27,1210.87 1398.86,1210.67 1399.45,1210.55 1400.03,1209.07 1400.62,1210.15 1401.21,1208.65 1401.79,1209.81 1402.38,1213.45 1402.96,1215.76 1403.55,1210.2 1404.14,1213.08 1404.72,1212.82 1405.31,1212.71 1405.9,1212.71 1406.48,1214.03 1407.07,1216.22 1407.66,1213.06 1408.24,1212.79 1408.83,1209.72 1409.42,1209.68 1410,1206.59 1410.59,1205.52 1411.17,1204.32 1411.76,1202.15 1412.35,1205.24 1412.93,1207.2 1413.52,1207.25 1414.11,1208.37 1414.69,1209.51 1415.28,1206.6 1415.87,1205.23 1416.45,1205.11 1417.04,1206.51 1417.63,1210.57 1418.21,1213.13 1418.8,1217.03 1419.38,1217.64 1419.97,1218.46 1420.56,1216.76 1421.14,1213.43 1421.73,1214.53 1422.32,1214.18 1422.9,1215.25 1423.49,1214.72 1424.08,1215.77 1424.66,1218.02 1425.25,1214.82 1425.83,1213 1426.42,1209.87 1427.01,1207.11 1427.59,1207.1 1428.18,1207.06 1428.77,1205.88 1429.35,1206.27 1429.94,1208.9 1430.53,1210.35 1431.11,1210.52 1431.7,1209.13 1432.29,1209.26 1432.87,1207.74 1433.46,1209.03 1434.04,1211.67 1434.63,1209.9 1435.22,1207.3 1435.8,1208.56 1436.39,1205.76 1436.98,1203.29 1437.56,1204.75 1438.15,1207.34 1438.74,1210.24 1439.32,1208.88 1439.91,1207.5 1440.5,1208.97 1441.08,1208.72 1441.67,1209.94 1442.25,1209.66 1442.84,1210.57 1443.43,1213.01 1444.01,1212.82 1444.6,1210.96 1445.19,1204.05 1445.77,1202.84 1446.36,1201.71 1446.95,1199.28 1447.53,1201.09 1448.12,1204.3 1448.7,1204.59 1449.29,1206.04 1449.88,1202.15 1450.46,1203.96 1451.05,1202.89 1451.64,1203.27 1452.22,1206.23 1452.81,1206.15 1453.4,1206.23 1453.98,1205.1 1454.57,1204.43 1455.16,1203.36 1455.74,1203.66 1456.33,1203.89 1456.91,1205.2 1457.5,1206.76 1458.09,1208.13 1458.67,1206.88 1459.26,1207.13 1459.85,1204.57 1460.43,1203.2 1461.02,1200.99 1461.61,1202.69 1462.19,1201.66 1462.78,1201.79 1463.37,1203.39 1463.95,1210.21 1464.54,1211.18 1465.12,1212.16 1465.71,1212.12 1466.3,1210.34 1466.88,1210.28 1467.47,1211.29 1468.06,1214 1468.64,1211.07 1469.23,1210.94 1469.82,1210.94 1470.4,1209.51 1470.99,1208.01 1471.57,1206.74 1472.16,1206.95 1472.75,1208.43 1473.33,1208.63 1473.92,1208.66 1474.51,1211.56 1475.09,1209.94 1475.68,1207.32 1476.27,1207.59 1476.85,1207.53 1477.44,1206.23 1478.03,1205.03 1478.61,1205.3 1479.2,1206.48 1479.78,1207.7 1480.37,1207.54 1480.96,1207.46 1481.54,1206.17 1482.13,1206.12 1482.72,1209.26 1483.3,1207.71 1483.89,1206.12 1484.48,1206.12 1485.06,1207.75 1485.65,1207.62 1486.24,1207.63 1486.82,1206.43 1487.41,1207.97 1487.99,1206.88 1488.58,1205.43 1489.17,1205.71 1489.75,1205.46 1490.34,1206.97 1490.93,1208.38 1491.51,1205.85 1492.1,1205.99 1492.69,1205.84 1493.27,1207.17 1493.86,1208.44 1494.45,1209.67 1495.03,1209.59 1495.62,1208.26 1496.2,1208.22 1496.79,1208.45 1497.38,1207.01 1497.96,1206.95 1498.55,1207.01 1499.14,1207.1 1499.72,1207.15 1500.31,1207.24 1500.9,1207.53 1501.48,1208.67 1502.07,1211.38 1502.65,1210.21 1503.24,1211.51 1503.83,1212.46 1504.41,1211.29 1505,1211.23 1505.59,1211.08 1506.17,1211.12 1506.76,1210.69 1507.35,1211.9 1507.93,1208.77 1508.52,1210.11 1509.11,1209 1509.69,1209.1 1510.28,1208.74 1510.86,1209.89 1511.45,1211.06 1512.04,1208.34 1512.62,1207 1513.21,1206.7 1513.8,1206.74 1514.38,1204.16 1514.97,1200.23 1515.56,1197.99 1516.14,1197.02 1516.73,1197.48 1517.32,1196.76 1517.9,1196.23 1518.49,1195.63 1519.07,1196.6 1519.66,1197.1 1520.25,1199.2 1520.83,1199.95 1521.42,1198.96 1522.01,1199.59 1522.59,1199.85 1523.18,1200.18 1523.77,1199.49 1524.35,1199.95 1524.94,1201.74 1525.52,1200.83 1526.11,1202.49 1526.7,1200.18 1527.28,1203.32 1527.87,1203.57 1528.46,1202.63 1529.04,1203.04 1529.63,1203.02 1530.22,1203.17 1530.8,1203.51 1531.39,1203.47 1531.98,1203.66 1532.56,1203.97 1533.15,1203.02 1533.73,1203.09 1534.32,1207.44 1534.91,1208.8 1535.49,1211.3 1536.08,1215.27 1536.67,1213.88 1537.25,1213.53 1537.84,1213.39 1538.43,1214.76 1539.01,1214.59 1539.6,1214.26 1540.19,1212.81 1540.77,1217.66 1541.36,1218.25 1541.94,1217.89 1542.53,1217.07 1543.12,1216.76 1543.7,1216.36 1544.29,1216.04 1544.88,1214.56 1545.46,1214.32 1546.05,1212.58 1546.64,1213.72 1547.22,1213.28 1547.81,1215.84 1548.4,1211.52 1548.98,1211.21 1549.57,1208.22 1550.15,1207.99 1550.74,1206.68 1551.33,1208.07 1551.91,1209.4 1552.5,1206.66 1553.09,1208.23 1553.67,1208.54 1554.26,1209.51 1554.85,1210.65 1555.43,1212.89 1556.02,1214.23 1556.6,1213.79 1557.19,1214.91 1557.78,1214.35 1558.36,1212.92 1558.95,1212.68 1559.54,1212.67 1560.12,1212.44 1560.71,1209.36 1561.3,1210.66 1561.88,1210.34 1562.47,1211.44 1563.06,1211.38 1563.64,1212.75 1564.23,1213.38 1564.81,1213.17 1565.4,1212.92 1565.99,1211.37 1566.57,1209.75 1567.16,1209.59 1567.75,1210.59 1568.33,1211.75 1568.92,1214.13 1569.51,1215.04 1570.09,1214.57 1570.68,1216.73 1571.27,1217.77 1571.85,1214.6 1572.44,1212.88 1573.02,1211.17 1573.61,1208.26 1574.2,1204.17 1574.78,1201.48 1575.37,1200.59 1575.96,1201.06 1576.54,1205.46 1577.13,1204.54 1577.72,1206.17 1578.3,1203.95 1578.89,1205.45 1579.47,1205.65 1580.06,1205.8 1580.65,1203.19 1581.23,1202.32 1581.82,1198.77 1582.41,1201.87 1582.99,1200.82 1583.58,1201.25 1584.17,1201.44 1584.75,1203.33 1585.34,1207.64 1585.93,1208.54 1586.51,1211.25 1587.1,1212.2 1587.68,1210.54 1588.27,1211.71 1588.86,1208.82 1589.44,1210.31 1590.03,1207.54 1590.62,1206.29 1591.2,1206.47 1591.79,1206.42 1592.38,1205.28 1592.96,1208.31 1593.55,1207.03 1594.14,1206.82 1594.72,1206.81 1595.31,1202.71 1595.89,1201.99 1596.48,1199.74 1597.07,1200.35 1597.65,1203.43 1598.24,1202.06 1598.83,1202.04 1599.41,1202.28 1600,1202.53 1600.59,1202.41 1601.17,1202.64 1601.76,1202.94 1602.34,1203.64 1602.93,1205.25 1603.52,1205.28 1604.1,1204.99 1604.69,1205.14 1605.28,1204.05 1605.86,1207.02 1606.45,1205.72 1607.04,1205.95 1607.62,1205.84 1608.21,1203.46 1608.8,1203.6 1609.38,1205.12 1609.97,1204.01 1610.55,1202.97 1611.14,1200.57 1611.73,1201.08 1612.31,1200.2 1612.9,1196.63 1613.49,1198.53 1614.07,1199.5 1614.66,1200.19 1615.25,1201.83 1615.83,1203.4 1616.42,1206.43 1617.01,1206.39 1617.59,1205.27 1618.18,1205.46 1618.76,1206.86 1619.35,1205.66 1619.94,1205.94 1620.52,1206.19 1621.11,1204.84 1621.7,1207.59 1622.28,1205.75 1622.87,1208.48 1623.46,1208.54 1624.04,1204.5 1624.63,1204.62 1625.22,1206.07 1625.8,1207.56 1626.39,1209.02 1626.97,1206.08 1627.56,1204.66 1628.15,1203.49 1628.73,1202.27 1629.32,1199.8 1629.91,1200.21 1630.49,1200.85 1631.08,1201.4 1631.67,1203.23 1632.25,1203.67 1632.84,1205.2 1633.42,1206.77 1634.01,1205.23 1634.6,1205.48 1635.18,1205.7 1635.77,1206.76 1636.36,1205.76 1636.94,1208.96 1637.53,1208.86 1638.12,1210.29 1638.7,1211.37 1639.29,1211.19 1639.88,1211.11 1640.46,1212.32 1641.05,1213.66 1641.63,1212.01 1642.22,1211.85 1642.81,1211.97 1643.39,1211.69 1643.98,1212.5 1644.57,1211.06 1645.15,1210.99 1645.74,1211.03 1646.33,1210.81 1646.91,1210.65 1647.5,1210.42 1648.09,1210.25 1648.67,1208.55 1649.26,1208.28 1649.84,1207 1650.43,1207.07 1651.02,1208.59 1651.6,1208.39 1652.19,1204.33 1652.78,1203.03 1653.36,1204.77 1653.95,1203.77 1654.54,1203.91 1655.12,1202.78 1655.71,1204.53 1656.29,1206.1 1656.88,1204.35 1657.47,1203.14 1658.05,1203.17 1658.64,1204.69 1659.23,1203.44 1659.81,1202.15 1660.4,1202.37 1660.99,1202.5 1661.57,1204.2 1662.16,1207.01 1662.75,1206.96 1663.33,1207.04 1663.92,1205.9 1664.5,1208.56 1665.09,1210.01 1665.68,1210.3 1666.26,1211.42 1666.85,1210.05 1667.44,1210.02 1668.02,1208.43 1668.61,1208.49 1669.2,1211.02 1669.78,1210.82 1670.37,1210.44 1670.96,1210.45 1671.54,1211.88 1672.13,1211.73 1672.71,1208.76 1673.3,1210.34 1673.89,1210.45 1674.47,1211.75 1675.06,1210.08 1675.65,1211.63 1676.23,1212.98 1676.82,1215.24 1677.41,1217.25 1677.99,1216.81 1678.58,1217.72 1679.17,1218.32 1679.75,1219.01 1680.34,1218.09 1680.92,1217.56 1681.51,1216.96 1682.1,1216.74 1682.68,1218.99 1683.27,1218.48 1683.86,1213.79 1684.44,1213.76 1685.03,1216.13 1685.62,1215.9 1686.2,1215.56 1686.79,1213.92 1687.37,1208.11 1687.96,1207.89 1688.55,1208.08 1689.13,1206.81 1689.72,1207.99 1690.31,1206.37 1690.89,1206.11 1691.48,1207.38 1692.07,1208.62 1692.65,1205.83 1693.24,1208.72 1693.83,1208.32 1694.41,1206.74 1695,1204.16 1695.58,1205.74 1696.17,1208.33 1696.76,1212.47 1697.34,1212.17 1697.93,1214.51 1698.52,1214.06 1699.1,1213.92 1699.69,1214.98 1700.28,1214.63 1700.86,1212.83 1701.45,1212.71 1702.04,1209.88 1702.62,1213.52 1703.21,1213.3 1703.79,1211.77 1704.38,1210.54 1704.97,1210.31 1705.55,1210 1706.14,1209.85 1706.73,1209.77 1707.31,1212.29 1707.9,1211.71 1708.49,1211.48 1709.07,1212.65 1709.66,1212.13 1710.24,1210.33 1710.83,1211.67 1711.42,1211.62 1712,1208.56 1712.59,1208.33 1713.18,1208.31 1713.76,1207.89 1714.35,1206.34 1714.94,1207.96 1715.52,1209.08 1716.11,1208.85 1716.7,1211.42 1717.28,1212.7 1717.87,1211.22 1718.45,1211 1719.04,1208.07 1719.63,1210.68 1720.21,1213.36 1720.8,1213.13 1721.39,1211.47 1721.97,1211.43 1722.56,1212.37 1723.15,1213.15 1723.73,1211.64 1724.32,1206.11 1724.91,1206.05 1725.49,1206.02 1726.08,1207.39 1726.66,1209.99 1727.25,1208.42 1727.84,1209.77 1728.42,1209.55 1729.01,1211.86 1729.6,1208.65 1730.18,1208.89 1730.77,1211.38 1731.36,1207.01 1731.94,1208.5 1732.53,1208.57 1733.11,1207.03 1733.7,1207.13 1734.29,1207.06 1734.87,1203.24 1735.46,1203.54 1736.05,1203.61 1736.63,1205.3 1737.22,1205.64 1737.81,1204.31 1738.39,1205.87 1738.98,1205.99 1739.57,1207.37 1740.15,1207.51 1740.74,1206.05 1741.32,1205.94 1741.91,1203.3 1742.5,1203.48 1743.08,1203.54 1743.67,1205.05 1744.26,1204.03 1744.84,1207.86 1745.43,1208.03 1746.02,1208.11 1746.6,1205.49 1747.19,1209.7 1747.78,1209.48 1748.36,1209.43 1748.95,1210.6 1749.53,1210.81 1750.12,1207.81 1750.71,1209.16 1751.29,1210.48 1751.88,1213.06 1752.47,1215.31 1753.05,1211.97 1753.64,1210.68 1754.23,1210.48 1754.81,1210.39 1755.4,1208.83 1755.99,1207.18 1756.57,1206.03 1757.16,1205.95 1757.74,1207.25 1758.33,1204.52 1758.92,1205.91 1759.5,1208.62 1760.09,1210.06 1760.68,1209.93 1761.26,1209.81 1761.85,1212.38 1762.44,1213.48 1763.02,1215.76 1763.61,1216.68 1764.19,1216.38 1764.78,1213.2 1765.37,1214.25 1765.95,1214.1 1766.54,1213.84 1767.13,1216.21 1767.71,1213.03 1768.3,1211.65 1768.89,1212.77 1769.47,1213.81 1770.06,1216.49 1770.65,1214.53 1771.23,1211.79 1771.82,1211.51 1772.4,1211.57 1772.99,1211.65 1773.58,1210.05 1774.16,1210.05 1774.75,1208.27 1775.34,1209.42 1775.92,1209.26 1776.51,1204.95 1777.1,1203.54 1777.68,1205.22 1778.27,1208.24 1778.86,1206.52 1779.44,1207.84 1780.03,1210.38 1780.61,1208.76 1781.2,1211.55 1781.79,1214.05 1782.37,1215.32 1782.96,1213.63 1783.55,1212.04 1784.13,1211.73 1784.72,1209.96 1785.31,1210.95 1785.89,1208.03 1786.48,1209.48 1787.06,1207.82 1787.65,1209.25 1788.24,1210.7 1788.82,1210.17 1789.41,1208.79 1790,1210.45 1790.58,1208.93 1791.17,1209.92 1791.76,1208.21 1792.34,1208.17 1792.93,1206.75 1793.52,1206.74 1794.1,1206.72 1794.69,1205.42 1795.27,1209.38 1795.86,1207.83 1796.45,1206.14 1797.03,1204.9 1797.62,1204.98 1798.21,1206.49 1798.79,1207.95 1799.38,1207.76 1799.97,1207.82 1800.55,1208.14 1801.14,1207.03 1801.73,1206.96 1802.31,1206.93 1802.9,1204.4 1803.48,1204.46 1804.07,1204.42 1804.66,1204.42 1805.24,1206.1 1805.83,1206.07 1806.42,1204.59 1807,1203.24 1807.59,1208.81 1808.18,1207.53 1808.76,1206.28 1809.35,1206.29 1809.94,1203.85 1810.52,1205.67 1811.11,1205.95 1811.69,1203.61 1812.28,1201.05 1812.87,1201.52 1813.45,1200.41 1814.04,1200.88 1814.63,1201.3 1815.21,1199.04 1815.8,1199.27 1816.39,1200 1816.97,1201.55 1817.56,1201.8 1818.14,1202.21 1818.73,1205.22 1819.32,1202.54 1819.9,1201.52 1820.49,1203.04 1821.08,1200.79 1821.66,1195.88 1822.25,1196.64 1822.84,1198.6 1823.42,1199.01 1824.01,1195.15 1824.6,1194.65 1825.18,1198.16 1825.77,1198.46 1826.35,1198.97 1826.94,1195.5 1827.53,1196.33 1828.11,1196.82 1828.7,1197.44 1829.29,1200.8 1829.87,1201.25 1830.46,1203.03 1831.05,1203.67 1831.63,1205.22 1832.22,1208.29 1832.81,1207.05 1833.39,1207.13 1833.98,1207.12 1834.56,1203.07 1835.15,1202.15 1835.74,1204.09 1836.32,1206.89 1836.91,1210.98 1837.5,1210.91 1838.08,1209.34 1838.67,1210.63 1839.26,1206.39 1839.84,1206.57 1840.43,1205.41 1841.01,1205.48 1841.6,1205.51 1842.19,1206.96 1842.77,1205.39 1843.36,1206.93 1843.95,1206.54 1844.53,1206.56 1845.12,1205.23 1845.71,1203.99 1846.29,1204.29 1846.88,1204.89 1847.47,1207.75 1848.05,1207.77 1848.64,1207.69 1849.22,1209.17 1849.81,1210.4 1850.4,1211.81 1850.98,1213.26 1851.57,1213.02 1852.16,1214.29 1852.74,1213.6 1853.33,1213.23 1853.92,1212.66 1854.5,1209.46 1855.09,1210.6 1855.68,1208.12 1856.26,1209.5 1856.85,1209.6 1857.43,1207.83 1858.02,1209.2 1858.61,1210.7 1859.19,1213.43 1859.78,1213.43 1860.37,1214.74 1860.95,1214.36 1861.54,1211.3 1862.13,1208.25 1862.71,1207.96 1863.3,1207.63 1863.88,1208.73 1864.47,1204.53 1865.06,1206.15 1865.64,1204.82 1866.23,1205.14 1866.82,1207.69 1867.4,1209.05 1867.99,1208.82 1868.58,1209.8 1869.16,1209.68 1869.75,1210.92 1870.34,1209.57 1870.92,1211.12 1871.51,1210.74 1872.09,1210.42 1872.68,1212.77 1873.27,1212.72 1873.85,1208.59 1874.44,1209.82 1875.03,1207.05 1875.61,1207.12 1876.2,1208.52 1876.79,1207.2 1877.37,1205.72 1877.96,1206.04 1878.55,1203.47 1879.13,1200.95 1879.72,1201.15 1880.3,1200.2 1880.89,1199.41 1881.48,1201.06 1882.06,1201.33 1882.65,1200.22 1883.24,1199.45 1883.82,1199.85 1884.41,1197.8 1885,1198.5 1885.58,1200.52 1886.17,1201.07 1886.76,1198.71 1887.34,1199.36 1887.93,1202.23 1888.51,1202.39 1889.1,1202.82 1889.69,1200.42 1890.27,1203.42 1890.86,1206.08 1891.45,1206.07 1892.03,1207.47 1892.62,1208.62 1893.21,1205.99 1893.79,1206.04 1894.38,1203.38 1894.96,1202.36 1895.55,1205.35 1896.14,1206.96 1896.72,1207.24 1897.31,1205.91 1897.9,1207.63 1898.48,1204.83 1899.07,1204.92 1899.66,1202.48 1900.24,1204.39 1900.83,1203.23 1901.42,1206.07 1902,1206.25 1902.59,1206.16 1903.17,1206.36 1903.76,1207.66 1904.35,1207.8 1904.93,1206.57 1905.52,1205.45 1906.11,1209.67 1906.69,1213.4 1907.28,1214.37 1907.87,1215.29 1908.45,1214.88 1909.04,1216.13 1909.63,1215.58 1910.21,1215.07 1910.8,1213.39 1911.38,1215.52 1911.97,1214.97 1912.56,1217.13 1913.14,1215.45 1913.73,1215.21 1914.32,1213.54 1914.9,1215.86 1915.49,1214.08 1916.08,1217.76 1916.66,1215.56 1917.25,1213.65 1917.83,1216.07 1918.42,1217.04 1919.01,1213.95 1919.59,1217.92 1920.18,1214.71 1920.77,1214.54 1921.35,1211.85 1921.94,1213.27 1922.53,1210.33 1923.11,1207.35 1923.7,1204.82 1924.29,1207.69 1924.87,1208.91 1925.46,1207.48 1926.04,1207.36 1926.63,1205.94 1927.22,1204.73 1927.8,1206.22 1928.39,1207.88 1928.98,1207.99 1929.56,1207.86 1930.15,1206.35 1930.74,1203.73 1931.32,1203.69 1931.91,1203.78 1932.5,1199.91 1933.08,1197.29 1933.67,1196.31 1934.25,1194.33 1934.84,1192.4 1935.43,1191.72 1936.01,1193.88 1936.6,1194.59 1937.19,1191.38 1937.77,1192.26 1938.36,1194.56 1938.95,1196.59 1939.53,1198.79 1940.12,1199.19 1940.71,1197.17 1941.29,1197.84 1941.88,1199.74 1942.46,1200.24 1943.05,1201.98 1943.64,1203.27 1944.22,1205 1944.81,1207.66 1945.4,1210.53 1945.98,1209.26 1946.57,1213.09 1947.16,1211.88 1947.74,1211.54 1948.33,1215.27 1948.91,1216.4 1949.5,1218.54 1950.09,1216.66 1950.67,1218.81 1951.26,1218.34 1951.85,1217.75 1952.43,1218.56 1953.02,1219.33 1953.61,1216.07 1954.19,1215.59 1954.78,1215.3 1955.37,1217.49 1955.95,1218.38 1956.54,1216.61 1957.12,1217.42 1957.71,1218.25 1958.3,1216.5 1958.88,1217.44 1959.47,1217.11 1960.06,1213.78 1960.64,1213.35 1961.23,1210.43 1961.82,1207.69 1962.4,1207.48 1962.99,1206.23 1963.58,1203.56 1964.16,1202.55 1964.75,1204.17 1965.33,1204.67 1965.92,1207.57 1966.51,1207.51 1967.09,1211.43 1967.68,1214.1 1968.27,1215.14 1968.85,1216.18 1969.44,1218.43 1970.03,1217.97 1970.61,1217.26 1971.2,1217.83 1971.78,1215.8 1972.37,1215.17 1972.96,1216.11 1973.54,1215.52 1974.13,1214.78 1974.72,1214.56 1975.3,1210.35 1975.89,1212.63 1976.48,1213.58 1977.06,1211.95 1977.65,1211.81 1978.24,1210.47 1978.82,1212.83 1979.41,1211.4 1979.99,1211.03 1980.58,1209.68 1981.17,1209.91 1981.75,1211.29 1982.34,1212.39 1982.93,1211.01 1983.51,1208.04 1984.1,1209.29 1984.69,1204.88 1985.27,1206.42 1985.86,1206.57 1986.45,1206.63 1987.03,1206.3 1987.62,1204.93 1988.2,1205.15 1988.79,1205.19 1989.38,1206.86 1989.96,1205.23 1990.55,1206.93 1991.14,1206.99 1991.72,1206.73 1992.31,1208.15 1992.9,1207.98 1993.48,1210.61 1994.07,1214.3 1994.65,1211.45 1995.24,1209.88 1995.83,1212.54 1996.41,1213.73 1997,1216.08 1997.59,1214.47 1998.17,1216.51 1998.76,1215.96 1999.35,1216.83 1999.93,1215.03 2000.52,1213.25 2001.11,1213.17 2001.69,1211.49 2002.28,1215.55 2002.86,1216.58 2003.45,1215.04 2004.04,1214.73 2004.62,1212.96 2005.21,1210.28 2005.8,1209.16 2006.38,1207.6 2006.97,1207.89 2007.56,1206.6 2008.14,1202.88 2008.73,1201.65 2009.32,1204.71 2009.9,1204.69 2010.49,1206.2 2011.07,1206.43 2011.66,1206.72 2012.25,1209.26 2012.83,1207.96 2013.42,1207.91 2014.01,1205.28 2014.59,1208.26 2015.18,1209.57 2015.77,1210.88 2016.35,1208.09 2016.94,1209.32 2017.53,1210.6 2018.11,1211.69 2018.7,1211.46 2019.28,1209.94 2019.87,1212.63 2020.46,1212.62 2021.04,1208.19 2021.63,1208.19 2022.22,1205.61 2022.8,1207.3 2023.39,1208.52 2023.98,1204.6 2024.56,1206.13 2025.15,1202.25 2025.73,1199.74 2026.32,1201.26 2026.91,1201.79 2027.49,1202.18 2028.08,1202.38 2028.67,1201.27 2029.25,1201.63 2029.84,1202.95 2030.43,1204.4 2031.01,1203.07 2031.6,1201.91 2032.19,1202.27 2032.77,1199.97 2033.36,1197.9 2033.94,1201.11 2034.53,1201.6 2035.12,1201.97 2035.7,1202.19 2036.29,1202.35 2036.88,1202.19 2037.46,1202.37 2038.05,1203.92 2038.64,1204.03 2039.22,1204.33 2039.81,1204.49 2040.4,1204.67 2040.98,1204.89 2041.57,1205.28 2042.15,1204.96 2042.74,1205.13 2043.33,1205.09 2043.91,1203.64 2044.5,1203.95 2045.09,1200.22 2045.67,1200.82 2046.26,1201.09 2046.85,1204.12 2047.43,1202.79 2048.02,1201.76 2048.6,1200.56 2049.19,1198.29 2049.78,1201.65 2050.36,1202.14 2050.95,1203.91 2051.54,1202.46 2052.12,1201.37 2052.71,1201.82 2053.3,1200.49 2053.88,1199.86 2054.47,1203.08 2055.06,1205.98 2055.64,1203.55 2056.23,1203.84 2056.81,1204.19 2057.4,1204.34 2057.99,1206.07 2058.57,1206.42 2059.16,1207.68 2059.75,1208.88 2060.33,1213.92 2060.92,1213.52 2061.51,1214.58 2062.09,1214.41 2062.68,1212.96 2063.27,1212.47 2063.85,1208.48 2064.44,1209.62 2065.02,1209.71 2065.61,1211.08 2066.2,1214.86 2066.78,1213.03 2067.37,1214.08 2067.96,1215.02 2068.54,1217.56 2069.13,1215.49 2069.72,1213.7 2070.3,1213.26 2070.89,1210.3 2071.48,1211.44 2072.06,1212.56 2072.65,1215.06 2073.23,1214.66 2073.82,1214.16 2074.41,1213.49 2074.99,1211.64 2075.58,1210.01 2076.17,1212.39 2076.75,1212.2 2077.34,1213.44 2077.93,1212.09 2078.51,1213.18 2079.1,1211.5 2079.68,1211.5 2080.27,1208.57 2080.86,1207.36 2081.44,1207.05 2082.03,1208.5 2082.62,1205.66 2083.2,1205.84 2083.79,1204.6 2084.38,1207.44 2084.96,1207.34 2085.55,1207.34 2086.14,1208.77 2086.72,1207.29 2087.31,1208.64 2087.89,1208.7 2088.48,1207.27 2089.07,1208.54 2089.65,1207.28 2090.24,1208.69 2090.83,1206.09 2091.41,1208.92 2092,1204.76 2092.59,1203.6 2093.17,1200.01 2093.76,1200.37 2094.35,1204.64 2094.93,1203.27 2095.52,1201.04 2096.1,1203.93 2096.69,1205.36 2097.28,1205.34 2097.86,1208.06 2098.45,1208.17 2099.04,1208.25 2099.62,1208.26 2100.21,1206.82 2100.8,1206.63 2101.38,1212.01 2101.97,1211.74 2102.55,1211.4 2103.14,1214.02 2103.73,1211.07 2104.31,1211.02 2104.9,1212.05 2105.49,1211.84 2106.07,1212.91 2106.66,1212.94 2107.25,1209.95 2107.83,1210.14 2108.42,1210.08 2109.01,1208.76 2109.59,1210.11 2110.18,1210.29 2110.76,1211.5 2111.35,1213.9 2111.94,1212.23 2112.52,1212.03 2113.11,1213.21 2113.7,1212.9 2114.28,1211.32 2114.87,1208.59 2115.46,1205.93 2116.04,1207.2 2116.63,1208.64 2117.22,1208.61 2117.8,1204.53 2118.39,1204.79 2118.97,1207.6 2119.56,1208.96 2120.15,1210.14 2120.73,1208.79 2121.32,1206.16 2121.91,1205.03 2122.49,1205.01 2123.08,1205.47 2123.67,1202.68 2124.25,1205.7 2124.84,1205.9 2125.42,1207.2 2126.01,1204.64 2126.6,1204.84 2127.18,1206.19 2127.77,1206.42 2128.36,1205.35 2128.94,1208.26 2129.53,1209.64 2130.12,1206.83 2130.7,1201.48 2131.29,1200.55 2131.88,1202.2 2132.46,1202.69 2133.05,1204.26 2133.63,1204.46 2134.22,1204.39 2134.81,1203.2 2135.39,1202.21 2135.98,1205.01 2136.57,1205.26 2137.15,1205.53 2137.74,1207.04 2138.33,1208.49 2138.91,1211.24 2139.5,1211.15 2140.09,1213.45 2140.67,1214.44 2141.26,1215.33 2141.84,1218.79 2142.43,1217.16 2143.02,1218 2143.6,1215.97 2144.19,1219.45 2144.78,1222.94 2145.36,1222.07 2145.95,1218.52 2146.54,1215.31 2147.12,1218.92 2147.71,1216.87 2148.3,1214.01 2148.88,1213.57 2149.47,1210.65 2150.05,1210.33 2150.64,1211.51 2151.23,1210.2 2151.81,1211.16 2152.4,1215.05 2152.99,1213.27 2153.57,1215.67 2154.16,1213.95 2154.75,1215.11 2155.33,1214.75 2155.92,1213.27 2156.5,1213.07 2157.09,1212.94 2157.68,1211.32 2158.26,1212.37 \"/>\n<path clip-path=\"url(#clip482)\" d=\"M986.025 1208.56 L986.612 1208.56 L987.198 1208.56 L987.785 1208.56 L988.371 1208.56 L988.957 1208.56 L989.544 1208.56 L990.13 1208.56 L990.717 1208.56 L991.303 1208.56 L991.889 1208.56 L992.476 1208.56 L993.062 1208.56 L993.649 1208.56 L994.235 1208.56 L994.822 1208.56 L995.408 1208.56 L995.994 1208.56 L996.581 1208.56 L997.167 1208.56 L997.754 1208.56 L998.34 1208.56 L998.926 1208.56 L999.513 1208.56 L1000.1 1208.56 L1000.69 1208.56 L1001.27 1208.56 L1001.86 1208.56 L1002.44 1208.56 L1003.03 1208.56 L1003.62 1208.56 L1004.2 1208.56 L1004.79 1208.56 L1005.38 1208.56 L1005.96 1208.56 L1006.55 1208.56 L1007.14 1208.56 L1007.72 1208.56 L1008.31 1208.56 L1008.9 1208.56 L1009.48 1208.56 L1010.07 1208.56 L1010.65 1208.56 L1011.24 1208.56 L1011.83 1208.56 L1012.41 1208.56 L1013 1208.56 L1013.59 1208.56 L1014.17 1208.56 L1014.76 1208.56 L1015.35 1208.56 L1015.93 1208.56 L1016.52 1208.56 L1017.11 1208.56 L1017.69 1208.56 L1018.28 1208.56 L1018.86 1208.56 L1019.45 1208.56 L1020.04 1208.56 L1020.62 1208.56 L1021.21 1208.56 L1021.8 1208.56 L1022.38 1208.56 L1022.97 1208.56 L1023.56 1208.56 L1024.14 1208.56 L1024.73 1208.56 L1025.32 1208.56 L1025.9 1208.56 L1026.49 1208.56 L1027.07 1208.56 L1027.66 1208.56 L1028.25 1208.56 L1028.83 1208.56 L1029.42 1208.56 L1030.01 1208.56 L1030.59 1208.56 L1031.18 1208.56 L1031.77 1208.56 L1032.35 1208.56 L1032.94 1208.56 L1033.52 1208.56 L1034.11 1208.56 L1034.7 1208.56 L1035.28 1208.56 L1035.87 1208.56 L1036.46 1208.56 L1037.04 1208.56 L1037.63 1208.56 L1038.22 1208.56 L1038.8 1208.56 L1039.39 1208.56 L1039.98 1208.56 L1040.56 1208.56 L1041.15 1208.56 L1041.73 1208.56 L1042.32 1208.56 L1042.91 1208.56 L1043.49 1208.56 L1044.08 1208.56 L1044.67 1208.56 L1045.25 1208.56 L1045.84 1208.56 L1046.43 1208.56 L1047.01 1208.56 L1047.6 1208.56 L1048.19 1208.56 L1048.77 1208.56 L1049.36 1208.56 L1049.94 1208.56 L1050.53 1208.56 L1051.12 1208.56 L1051.7 1208.56 L1052.29 1208.56 L1052.88 1208.56 L1053.46 1208.56 L1054.05 1208.56 L1054.64 1208.56 L1055.22 1208.56 L1055.81 1208.56 L1056.39 1208.56 L1056.98 1208.56 L1057.57 1208.56 L1058.15 1208.56 L1058.74 1208.56 L1059.33 1208.56 L1059.91 1208.56 L1060.5 1208.56 L1061.09 1208.56 L1061.67 1208.56 L1062.26 1208.56 L1062.85 1208.56 L1063.43 1208.56 L1064.02 1208.56 L1064.6 1208.56 L1065.19 1208.56 L1065.78 1208.56 L1066.36 1208.56 L1066.95 1208.56 L1067.54 1208.56 L1068.12 1208.56 L1068.71 1208.56 L1069.3 1208.56 L1069.88 1208.56 L1070.47 1208.56 L1071.06 1208.56 L1071.64 1208.56 L1072.23 1208.56 L1072.81 1208.56 L1073.4 1208.56 L1073.99 1208.56 L1074.57 1208.56 L1075.16 1208.56 L1075.75 1208.56 L1076.33 1208.56 L1076.92 1208.56 L1077.51 1208.56 L1078.09 1208.56 L1078.68 1208.56 L1079.26 1208.56 L1079.85 1208.56 L1080.44 1208.56 L1081.02 1208.56 L1081.61 1208.56 L1082.2 1208.56 L1082.78 1208.56 L1083.37 1208.56 L1083.96 1208.56 L1084.54 1208.56 L1085.13 1208.56 L1085.72 1208.56 L1086.3 1208.56 L1086.89 1208.56 L1087.47 1208.56 L1088.06 1208.56 L1088.65 1208.56 L1089.23 1208.56 L1089.82 1208.56 L1090.41 1208.56 L1090.99 1208.56 L1091.58 1208.56 L1092.17 1208.56 L1092.75 1208.56 L1093.34 1208.56 L1093.93 1208.56 L1094.51 1208.56 L1095.1 1208.56 L1095.68 1208.56 L1096.27 1208.56 L1096.86 1208.56 L1097.44 1208.56 L1098.03 1208.56 L1098.62 1208.56 L1099.2 1208.56 L1099.79 1208.56 L1100.38 1208.56 L1100.96 1208.56 L1101.55 1208.56 L1102.14 1208.56 L1102.72 1208.56 L1103.31 1208.56 L1103.89 1208.56 L1104.48 1208.56 L1105.07 1208.56 L1105.65 1208.56 L1106.24 1208.56 L1106.83 1208.56 L1107.41 1208.56 L1108 1208.56 L1108.59 1208.56 L1109.17 1208.56 L1109.76 1208.56 L1110.34 1208.56 L1110.93 1208.56 L1111.52 1208.56 L1112.1 1208.56 L1112.69 1208.56 L1113.28 1208.56 L1113.86 1208.56 L1114.45 1208.56 L1115.04 1208.56 L1115.62 1208.56 L1116.21 1208.56 L1116.8 1208.56 L1117.38 1208.56 L1117.97 1208.56 L1118.55 1208.56 L1119.14 1208.56 L1119.73 1208.56 L1120.31 1208.56 L1120.9 1208.56 L1121.49 1208.56 L1122.07 1208.56 L1122.66 1208.56 L1123.25 1208.56 L1123.83 1208.56 L1124.42 1208.56 L1125.01 1208.56 L1125.59 1208.56 L1126.18 1208.56 L1126.76 1208.56 L1127.35 1208.56 L1127.94 1208.56 L1128.52 1208.56 L1129.11 1208.56 L1129.7 1208.56 L1130.28 1208.56 L1130.87 1208.56 L1131.46 1208.56 L1132.04 1208.56 L1132.63 1208.56 L1133.21 1208.56 L1133.8 1208.56 L1134.39 1208.56 L1134.97 1208.56 L1135.56 1208.56 L1136.15 1208.56 L1136.73 1208.56 L1137.32 1208.56 L1137.91 1208.56 L1138.49 1208.56 L1139.08 1208.56 L1139.67 1208.56 L1140.25 1208.56 L1140.84 1208.56 L1141.42 1208.56 L1142.01 1208.56 L1142.6 1208.56 L1143.18 1208.56 L1143.77 1208.56 L1144.36 1208.56 L1144.94 1208.56 L1145.53 1208.56 L1146.12 1208.56 L1146.7 1208.56 L1147.29 1208.56 L1147.88 1208.56 L1148.46 1208.56 L1149.05 1208.56 L1149.63 1208.56 L1150.22 1208.56 L1150.81 1208.56 L1151.39 1208.56 L1151.98 1208.56 L1152.57 1208.56 L1153.15 1208.56 L1153.74 1208.56 L1154.33 1208.56 L1154.91 1208.56 L1155.5 1208.56 L1156.09 1208.56 L1156.67 1208.56 L1157.26 1208.56 L1157.84 1208.56 L1158.43 1208.56 L1159.02 1208.56 L1159.6 1208.56 L1160.19 1208.56 L1160.78 1208.56 L1161.36 1208.56 L1161.95 1208.56 L1162.54 1208.56 L1163.12 1208.56 L1163.71 1208.56 L1164.29 1208.56 L1164.88 1208.56 L1165.47 1208.56 L1166.05 1208.56 L1166.64 1208.56 L1167.23 1208.56 L1167.81 1208.56 L1168.4 1208.56 L1168.99 1208.56 L1169.57 1208.56 L1170.16 1208.56 L1170.75 1208.56 L1171.33 1208.56 L1171.92 1208.56 L1172.5 1208.56 L1173.09 1208.56 L1173.68 1208.56 L1174.26 1208.56 L1174.85 1208.56 L1175.44 1208.56 L1176.02 1208.56 L1176.61 1208.56 L1177.2 1208.56 L1177.78 1208.56 L1178.37 1208.56 L1178.96 1208.56 L1179.54 1208.56 L1180.13 1208.56 L1180.71 1208.56 L1181.3 1208.56 L1181.89 1208.56 L1182.47 1208.56 L1183.06 1208.56 L1183.65 1208.56 L1184.23 1208.56 L1184.82 1208.56 L1185.41 1208.56 L1185.99 1208.56 L1186.58 1208.56 L1187.16 1208.56 L1187.75 1208.56 L1188.34 1208.56 L1188.92 1208.56 L1189.51 1208.56 L1190.1 1208.56 L1190.68 1208.56 L1191.27 1208.56 L1191.86 1208.56 L1192.44 1208.56 L1193.03 1208.56 L1193.62 1208.56 L1194.2 1208.56 L1194.79 1208.56 L1195.37 1208.56 L1195.96 1208.56 L1196.55 1208.56 L1197.13 1208.56 L1197.72 1208.56 L1198.31 1208.56 L1198.89 1208.56 L1199.48 1208.56 L1200.07 1208.56 L1200.65 1208.56 L1201.24 1208.56 L1201.83 1208.56 L1202.41 1208.56 L1203 1208.56 L1203.58 1208.56 L1204.17 1208.56 L1204.76 1208.56 L1205.34 1208.56 L1205.93 1208.56 L1206.52 1208.56 L1207.1 1208.56 L1207.69 1208.56 L1208.28 1208.56 L1208.86 1208.56 L1209.45 1208.56 L1210.03 1208.56 L1210.62 1208.56 L1211.21 1208.56 L1211.79 1208.56 L1212.38 1208.56 L1212.97 1208.56 L1213.55 1208.56 L1214.14 1208.56 L1214.73 1208.56 L1215.31 1208.56 L1215.9 1208.56 L1216.49 1208.56 L1217.07 1208.56 L1217.66 1208.56 L1218.24 1208.56 L1218.83 1208.56 L1219.42 1208.56 L1220 1208.56 L1220.59 1208.56 L1221.18 1208.56 L1221.76 1208.56 L1222.35 1208.56 L1222.94 1208.56 L1223.52 1208.56 L1224.11 1208.56 L1224.7 1208.56 L1225.28 1208.56 L1225.87 1208.56 L1226.45 1208.56 L1227.04 1208.56 L1227.63 1208.56 L1228.21 1208.56 L1228.8 1208.56 L1229.39 1208.56 L1229.97 1208.56 L1230.56 1208.56 L1231.15 1208.56 L1231.73 1208.56 L1232.32 1208.56 L1232.91 1208.56 L1233.49 1208.56 L1234.08 1208.56 L1234.66 1208.56 L1235.25 1208.56 L1235.84 1208.56 L1236.42 1208.56 L1237.01 1208.56 L1237.6 1208.56 L1238.18 1208.56 L1238.77 1208.56 L1239.36 1208.56 L1239.94 1208.56 L1240.53 1208.56 L1241.11 1208.56 L1241.7 1208.56 L1242.29 1208.56 L1242.87 1208.56 L1243.46 1208.56 L1244.05 1208.56 L1244.63 1208.56 L1245.22 1208.56 L1245.81 1208.56 L1246.39 1208.56 L1246.98 1208.56 L1247.57 1208.56 L1248.15 1208.56 L1248.74 1208.56 L1249.32 1208.56 L1249.91 1208.56 L1250.5 1208.56 L1251.08 1208.56 L1251.67 1208.56 L1252.26 1208.56 L1252.84 1208.56 L1253.43 1208.56 L1254.02 1208.56 L1254.6 1208.56 L1255.19 1208.56 L1255.78 1208.56 L1256.36 1208.56 L1256.95 1208.56 L1257.53 1208.56 L1258.12 1208.56 L1258.71 1208.56 L1259.29 1208.56 L1259.88 1208.56 L1260.47 1208.56 L1261.05 1208.56 L1261.64 1208.56 L1262.23 1208.56 L1262.81 1208.56 L1263.4 1208.56 L1263.98 1208.56 L1264.57 1208.56 L1265.16 1208.56 L1265.74 1208.56 L1266.33 1208.56 L1266.92 1208.56 L1267.5 1208.56 L1268.09 1208.56 L1268.68 1208.56 L1269.26 1208.56 L1269.85 1208.56 L1270.44 1208.56 L1271.02 1208.56 L1271.61 1208.56 L1272.19 1208.56 L1272.78 1208.56 L1273.37 1208.56 L1273.95 1208.56 L1274.54 1208.56 L1275.13 1208.56 L1275.71 1208.56 L1276.3 1208.56 L1276.89 1208.56 L1277.47 1208.56 L1278.06 1208.56 L1278.65 1208.56 L1279.23 1208.56 L1279.82 1208.56 L1280.4 1208.56 L1280.99 1208.56 L1281.58 1208.56 L1282.16 1208.56 L1282.75 1208.56 L1283.34 1208.56 L1283.92 1208.56 L1284.51 1208.56 L1285.1 1208.56 L1285.68 1208.56 L1286.27 1208.56 L1286.86 1208.56 L1287.44 1208.56 L1288.03 1208.56 L1288.61 1208.56 L1289.2 1208.56 L1289.79 1208.56 L1290.37 1208.56 L1290.96 1208.56 L1291.55 1208.56 L1292.13 1208.56 L1292.72 1208.56 L1293.31 1208.56 L1293.89 1208.56 L1294.48 1208.56 L1295.06 1208.56 L1295.65 1208.56 L1296.24 1208.56 L1296.82 1208.56 L1297.41 1208.56 L1298 1208.56 L1298.58 1208.56 L1299.17 1208.56 L1299.76 1208.56 L1300.34 1208.56 L1300.93 1208.56 L1301.52 1208.56 L1302.1 1208.56 L1302.69 1208.56 L1303.27 1208.56 L1303.86 1208.56 L1304.45 1208.56 L1305.03 1208.56 L1305.62 1208.56 L1306.21 1208.56 L1306.79 1208.56 L1307.38 1208.56 L1307.97 1208.56 L1308.55 1208.56 L1309.14 1208.56 L1309.73 1208.56 L1310.31 1208.56 L1310.9 1208.56 L1311.48 1208.56 L1312.07 1208.56 L1312.66 1208.56 L1313.24 1208.56 L1313.83 1208.56 L1314.42 1208.56 L1315 1208.56 L1315.59 1208.56 L1316.18 1208.56 L1316.76 1208.56 L1317.35 1208.56 L1317.93 1208.56 L1318.52 1208.56 L1319.11 1208.56 L1319.69 1208.56 L1320.28 1208.56 L1320.87 1208.56 L1321.45 1208.56 L1322.04 1208.56 L1322.63 1208.56 L1323.21 1208.56 L1323.8 1208.56 L1324.39 1208.56 L1324.97 1208.56 L1325.56 1208.56 L1326.14 1208.56 L1326.73 1208.56 L1327.32 1208.56 L1327.9 1208.56 L1328.49 1208.56 L1329.08 1208.56 L1329.66 1208.56 L1330.25 1208.56 L1330.84 1208.56 L1331.42 1208.56 L1332.01 1208.56 L1332.6 1208.56 L1333.18 1208.56 L1333.77 1208.56 L1334.35 1208.56 L1334.94 1208.56 L1335.53 1208.56 L1336.11 1208.56 L1336.7 1208.56 L1337.29 1208.56 L1337.87 1208.56 L1338.46 1208.56 L1339.05 1208.56 L1339.63 1208.56 L1340.22 1208.56 L1340.8 1208.56 L1341.39 1208.56 L1341.98 1208.56 L1342.56 1208.56 L1343.15 1208.56 L1343.74 1208.56 L1344.32 1208.56 L1344.91 1208.56 L1345.5 1208.56 L1346.08 1208.56 L1346.67 1208.56 L1347.26 1208.56 L1347.84 1208.56 L1348.43 1208.56 L1349.01 1208.56 L1349.6 1208.56 L1350.19 1208.56 L1350.77 1208.56 L1351.36 1208.56 L1351.95 1208.56 L1352.53 1208.56 L1353.12 1208.56 L1353.71 1208.56 L1354.29 1208.56 L1354.88 1208.56 L1355.47 1208.56 L1356.05 1208.56 L1356.64 1208.56 L1357.22 1208.56 L1357.81 1208.56 L1358.4 1208.56 L1358.98 1208.56 L1359.57 1208.56 L1360.16 1208.56 L1360.74 1208.56 L1361.33 1208.56 L1361.92 1208.56 L1362.5 1208.56 L1363.09 1208.56 L1363.68 1208.56 L1364.26 1208.56 L1364.85 1208.56 L1365.43 1208.56 L1366.02 1208.56 L1366.61 1208.56 L1367.19 1208.56 L1367.78 1208.56 L1368.37 1208.56 L1368.95 1208.56 L1369.54 1208.56 L1370.13 1208.56 L1370.71 1208.56 L1371.3 1208.56 L1371.88 1208.56 L1372.47 1208.56 L1373.06 1208.56 L1373.64 1208.56 L1374.23 1208.56 L1374.82 1208.56 L1375.4 1208.56 L1375.99 1208.56 L1376.58 1208.56 L1377.16 1208.56 L1377.75 1208.56 L1378.34 1208.56 L1378.92 1208.56 L1379.51 1208.56 L1380.09 1208.56 L1380.68 1208.56 L1381.27 1208.56 L1381.85 1208.56 L1382.44 1208.56 L1383.03 1208.56 L1383.61 1208.56 L1384.2 1208.56 L1384.79 1208.56 L1385.37 1208.56 L1385.96 1208.56 L1386.55 1208.56 L1387.13 1208.56 L1387.72 1208.56 L1388.3 1208.56 L1388.89 1208.56 L1389.48 1208.56 L1390.06 1208.56 L1390.65 1208.56 L1391.24 1208.56 L1391.82 1208.56 L1392.41 1208.56 L1393 1208.56 L1393.58 1208.56 L1394.17 1208.56 L1394.75 1208.56 L1395.34 1208.56 L1395.93 1208.56 L1396.51 1208.56 L1397.1 1208.56 L1397.69 1208.56 L1398.27 1208.56 L1398.86 1208.56 L1399.45 1208.56 L1400.03 1208.56 L1400.62 1208.56 L1401.21 1208.56 L1401.79 1208.56 L1402.38 1208.56 L1402.96 1208.56 L1403.55 1208.56 L1404.14 1208.56 L1404.72 1208.56 L1405.31 1208.56 L1405.9 1208.56 L1406.48 1208.56 L1407.07 1208.56 L1407.66 1208.56 L1408.24 1208.56 L1408.83 1208.56 L1409.42 1208.56 L1410 1208.56 L1410.59 1208.56 L1411.17 1208.56 L1411.76 1208.56 L1412.35 1208.56 L1412.93 1208.56 L1413.52 1208.56 L1414.11 1208.56 L1414.69 1208.56 L1415.28 1208.56 L1415.87 1208.56 L1416.45 1208.56 L1417.04 1208.56 L1417.63 1208.56 L1418.21 1208.56 L1418.8 1208.56 L1419.38 1208.56 L1419.97 1208.56 L1420.56 1208.56 L1421.14 1208.56 L1421.73 1208.56 L1422.32 1208.56 L1422.9 1208.56 L1423.49 1208.56 L1424.08 1208.56 L1424.66 1208.56 L1425.25 1208.56 L1425.83 1208.56 L1426.42 1208.56 L1427.01 1208.56 L1427.59 1208.56 L1428.18 1208.56 L1428.77 1208.56 L1429.35 1208.56 L1429.94 1208.56 L1430.53 1208.56 L1431.11 1208.56 L1431.7 1208.56 L1432.29 1208.56 L1432.87 1208.56 L1433.46 1208.56 L1434.04 1208.56 L1434.63 1208.56 L1435.22 1208.56 L1435.8 1208.56 L1436.39 1208.56 L1436.98 1208.56 L1437.56 1208.56 L1438.15 1208.56 L1438.74 1208.56 L1439.32 1208.56 L1439.91 1208.56 L1440.5 1208.56 L1441.08 1208.56 L1441.67 1208.56 L1442.25 1208.56 L1442.84 1208.56 L1443.43 1208.56 L1444.01 1208.56 L1444.6 1208.56 L1445.19 1208.56 L1445.77 1208.56 L1446.36 1208.56 L1446.95 1208.56 L1447.53 1208.56 L1448.12 1208.56 L1448.7 1208.56 L1449.29 1208.56 L1449.88 1208.56 L1450.46 1208.56 L1451.05 1208.56 L1451.64 1208.56 L1452.22 1208.56 L1452.81 1208.56 L1453.4 1208.56 L1453.98 1208.56 L1454.57 1208.56 L1455.16 1208.56 L1455.74 1208.56 L1456.33 1208.56 L1456.91 1208.56 L1457.5 1208.56 L1458.09 1208.56 L1458.67 1208.56 L1459.26 1208.56 L1459.85 1208.56 L1460.43 1208.56 L1461.02 1208.56 L1461.61 1208.56 L1462.19 1208.56 L1462.78 1208.56 L1463.37 1208.56 L1463.95 1208.56 L1464.54 1208.56 L1465.12 1208.56 L1465.71 1208.56 L1466.3 1208.56 L1466.88 1208.56 L1467.47 1208.56 L1468.06 1208.56 L1468.64 1208.56 L1469.23 1208.56 L1469.82 1208.56 L1470.4 1208.56 L1470.99 1208.56 L1471.57 1208.56 L1472.16 1208.56 L1472.75 1208.56 L1473.33 1208.56 L1473.92 1208.56 L1474.51 1208.56 L1475.09 1208.56 L1475.68 1208.56 L1476.27 1208.56 L1476.85 1208.56 L1477.44 1208.56 L1478.03 1208.56 L1478.61 1208.56 L1479.2 1208.56 L1479.78 1208.56 L1480.37 1208.56 L1480.96 1208.56 L1481.54 1208.56 L1482.13 1208.56 L1482.72 1208.56 L1483.3 1208.56 L1483.89 1208.56 L1484.48 1208.56 L1485.06 1208.56 L1485.65 1208.56 L1486.24 1208.56 L1486.82 1208.56 L1487.41 1208.56 L1487.99 1208.56 L1488.58 1208.56 L1489.17 1208.56 L1489.75 1208.56 L1490.34 1208.56 L1490.93 1208.56 L1491.51 1208.56 L1492.1 1208.56 L1492.69 1208.56 L1493.27 1208.56 L1493.86 1208.56 L1494.45 1208.56 L1495.03 1208.56 L1495.62 1208.56 L1496.2 1208.56 L1496.79 1208.56 L1497.38 1208.56 L1497.96 1208.56 L1498.55 1208.56 L1499.14 1208.56 L1499.72 1208.56 L1500.31 1208.56 L1500.9 1208.56 L1501.48 1208.56 L1502.07 1208.56 L1502.65 1208.56 L1503.24 1208.56 L1503.83 1208.56 L1504.41 1208.56 L1505 1208.56 L1505.59 1208.56 L1506.17 1208.56 L1506.76 1208.56 L1507.35 1208.56 L1507.93 1208.56 L1508.52 1208.56 L1509.11 1208.56 L1509.69 1208.56 L1510.28 1208.56 L1510.86 1208.56 L1511.45 1208.56 L1512.04 1208.56 L1512.62 1208.56 L1513.21 1208.56 L1513.8 1208.56 L1514.38 1208.56 L1514.97 1208.56 L1515.56 1208.56 L1516.14 1208.56 L1516.73 1208.56 L1517.32 1208.56 L1517.9 1208.56 L1518.49 1208.56 L1519.07 1208.56 L1519.66 1208.56 L1520.25 1208.56 L1520.83 1208.56 L1521.42 1208.56 L1522.01 1208.56 L1522.59 1208.56 L1523.18 1208.56 L1523.77 1208.56 L1524.35 1208.56 L1524.94 1208.56 L1525.52 1208.56 L1526.11 1208.56 L1526.7 1208.56 L1527.28 1208.56 L1527.87 1208.56 L1528.46 1208.56 L1529.04 1208.56 L1529.63 1208.56 L1530.22 1208.56 L1530.8 1208.56 L1531.39 1208.56 L1531.98 1208.56 L1532.56 1208.56 L1533.15 1208.56 L1533.73 1208.56 L1534.32 1208.56 L1534.91 1208.56 L1535.49 1208.56 L1536.08 1208.56 L1536.67 1208.56 L1537.25 1208.56 L1537.84 1208.56 L1538.43 1208.56 L1539.01 1208.56 L1539.6 1208.56 L1540.19 1208.56 L1540.77 1208.56 L1541.36 1208.56 L1541.94 1208.56 L1542.53 1208.56 L1543.12 1208.56 L1543.7 1208.56 L1544.29 1208.56 L1544.88 1208.56 L1545.46 1208.56 L1546.05 1208.56 L1546.64 1208.56 L1547.22 1208.56 L1547.81 1208.56 L1548.4 1208.56 L1548.98 1208.56 L1549.57 1208.56 L1550.15 1208.56 L1550.74 1208.56 L1551.33 1208.56 L1551.91 1208.56 L1552.5 1208.56 L1553.09 1208.56 L1553.67 1208.56 L1554.26 1208.56 L1554.85 1208.56 L1555.43 1208.56 L1556.02 1208.56 L1556.6 1208.56 L1557.19 1208.56 L1557.78 1208.56 L1558.36 1208.56 L1558.95 1208.56 L1559.54 1208.56 L1560.12 1208.56 L1560.71 1208.56 L1561.3 1208.56 L1561.88 1208.56 L1562.47 1208.56 L1563.06 1208.56 L1563.64 1208.56 L1564.23 1208.56 L1564.81 1208.56 L1565.4 1208.56 L1565.99 1208.56 L1566.57 1208.56 L1567.16 1208.56 L1567.75 1208.56 L1568.33 1208.56 L1568.92 1208.56 L1569.51 1208.56 L1570.09 1208.56 L1570.68 1208.56 L1571.27 1208.56 L1571.85 1208.56 L1572.44 1208.56 L1573.02 1208.56 L1573.61 1208.56 L1574.2 1208.56 L1574.78 1208.56 L1575.37 1208.56 L1575.96 1208.56 L1576.54 1208.56 L1577.13 1208.56 L1577.72 1208.56 L1578.3 1208.56 L1578.89 1208.56 L1579.47 1208.56 L1580.06 1208.56 L1580.65 1208.56 L1581.23 1208.56 L1581.82 1208.56 L1582.41 1208.56 L1582.99 1208.56 L1583.58 1208.56 L1584.17 1208.56 L1584.75 1208.56 L1585.34 1208.56 L1585.93 1208.56 L1586.51 1208.56 L1587.1 1208.56 L1587.68 1208.56 L1588.27 1208.56 L1588.86 1208.56 L1589.44 1208.56 L1590.03 1208.56 L1590.62 1208.56 L1591.2 1208.56 L1591.79 1208.56 L1592.38 1208.56 L1592.96 1208.56 L1593.55 1208.56 L1594.14 1208.56 L1594.72 1208.56 L1595.31 1208.56 L1595.89 1208.56 L1596.48 1208.56 L1597.07 1208.56 L1597.65 1208.56 L1598.24 1208.56 L1598.83 1208.56 L1599.41 1208.56 L1600 1208.56 L1600.59 1208.56 L1601.17 1208.56 L1601.76 1208.56 L1602.34 1208.56 L1602.93 1208.56 L1603.52 1208.56 L1604.1 1208.56 L1604.69 1208.56 L1605.28 1208.56 L1605.86 1208.56 L1606.45 1208.56 L1607.04 1208.56 L1607.62 1208.56 L1608.21 1208.56 L1608.8 1208.56 L1609.38 1208.56 L1609.97 1208.56 L1610.55 1208.56 L1611.14 1208.56 L1611.73 1208.56 L1612.31 1208.56 L1612.9 1208.56 L1613.49 1208.56 L1614.07 1208.56 L1614.66 1208.56 L1615.25 1208.56 L1615.83 1208.56 L1616.42 1208.56 L1617.01 1208.56 L1617.59 1208.56 L1618.18 1208.56 L1618.76 1208.56 L1619.35 1208.56 L1619.94 1208.56 L1620.52 1208.56 L1621.11 1208.56 L1621.7 1208.56 L1622.28 1208.56 L1622.87 1208.56 L1623.46 1208.56 L1624.04 1208.56 L1624.63 1208.56 L1625.22 1208.56 L1625.8 1208.56 L1626.39 1208.56 L1626.97 1208.56 L1627.56 1208.56 L1628.15 1208.56 L1628.73 1208.56 L1629.32 1208.56 L1629.91 1208.56 L1630.49 1208.56 L1631.08 1208.56 L1631.67 1208.56 L1632.25 1208.56 L1632.84 1208.56 L1633.42 1208.56 L1634.01 1208.56 L1634.6 1208.56 L1635.18 1208.56 L1635.77 1208.56 L1636.36 1208.56 L1636.94 1208.56 L1637.53 1208.56 L1638.12 1208.56 L1638.7 1208.56 L1639.29 1208.56 L1639.88 1208.56 L1640.46 1208.56 L1641.05 1208.56 L1641.63 1208.56 L1642.22 1208.56 L1642.81 1208.56 L1643.39 1208.56 L1643.98 1208.56 L1644.57 1208.56 L1645.15 1208.56 L1645.74 1208.56 L1646.33 1208.56 L1646.91 1208.56 L1647.5 1208.56 L1648.09 1208.56 L1648.67 1208.56 L1649.26 1208.56 L1649.84 1208.56 L1650.43 1208.56 L1651.02 1208.56 L1651.6 1208.56 L1652.19 1208.56 L1652.78 1208.56 L1653.36 1208.56 L1653.95 1208.56 L1654.54 1208.56 L1655.12 1208.56 L1655.71 1208.56 L1656.29 1208.56 L1656.88 1208.56 L1657.47 1208.56 L1658.05 1208.56 L1658.64 1208.56 L1659.23 1208.56 L1659.81 1208.56 L1660.4 1208.56 L1660.99 1208.56 L1661.57 1208.56 L1662.16 1208.56 L1662.75 1208.56 L1663.33 1208.56 L1663.92 1208.56 L1664.5 1208.56 L1665.09 1208.56 L1665.68 1208.56 L1666.26 1208.56 L1666.85 1208.56 L1667.44 1208.56 L1668.02 1208.56 L1668.61 1208.56 L1669.2 1208.56 L1669.78 1208.56 L1670.37 1208.56 L1670.96 1208.56 L1671.54 1208.56 L1672.13 1208.56 L1672.71 1208.56 L1673.3 1208.56 L1673.89 1208.56 L1674.47 1208.56 L1675.06 1208.56 L1675.65 1208.56 L1676.23 1208.56 L1676.82 1208.56 L1677.41 1208.56 L1677.99 1208.56 L1678.58 1208.56 L1679.17 1208.56 L1679.75 1208.56 L1680.34 1208.56 L1680.92 1208.56 L1681.51 1208.56 L1682.1 1208.56 L1682.68 1208.56 L1683.27 1208.56 L1683.86 1208.56 L1684.44 1208.56 L1685.03 1208.56 L1685.62 1208.56 L1686.2 1208.56 L1686.79 1208.56 L1687.37 1208.56 L1687.96 1208.56 L1688.55 1208.56 L1689.13 1208.56 L1689.72 1208.56 L1690.31 1208.56 L1690.89 1208.56 L1691.48 1208.56 L1692.07 1208.56 L1692.65 1208.56 L1693.24 1208.56 L1693.83 1208.56 L1694.41 1208.56 L1695 1208.56 L1695.58 1208.56 L1696.17 1208.56 L1696.76 1208.56 L1697.34 1208.56 L1697.93 1208.56 L1698.52 1208.56 L1699.1 1208.56 L1699.69 1208.56 L1700.28 1208.56 L1700.86 1208.56 L1701.45 1208.56 L1702.04 1208.56 L1702.62 1208.56 L1703.21 1208.56 L1703.79 1208.56 L1704.38 1208.56 L1704.97 1208.56 L1705.55 1208.56 L1706.14 1208.56 L1706.73 1208.56 L1707.31 1208.56 L1707.9 1208.56 L1708.49 1208.56 L1709.07 1208.56 L1709.66 1208.56 L1710.24 1208.56 L1710.83 1208.56 L1711.42 1208.56 L1712 1208.56 L1712.59 1208.56 L1713.18 1208.56 L1713.76 1208.56 L1714.35 1208.56 L1714.94 1208.56 L1715.52 1208.56 L1716.11 1208.56 L1716.7 1208.56 L1717.28 1208.56 L1717.87 1208.56 L1718.45 1208.56 L1719.04 1208.56 L1719.63 1208.56 L1720.21 1208.56 L1720.8 1208.56 L1721.39 1208.56 L1721.97 1208.56 L1722.56 1208.56 L1723.15 1208.56 L1723.73 1208.56 L1724.32 1208.56 L1724.91 1208.56 L1725.49 1208.56 L1726.08 1208.56 L1726.66 1208.56 L1727.25 1208.56 L1727.84 1208.56 L1728.42 1208.56 L1729.01 1208.56 L1729.6 1208.56 L1730.18 1208.56 L1730.77 1208.56 L1731.36 1208.56 L1731.94 1208.56 L1732.53 1208.56 L1733.11 1208.56 L1733.7 1208.56 L1734.29 1208.56 L1734.87 1208.56 L1735.46 1208.56 L1736.05 1208.56 L1736.63 1208.56 L1737.22 1208.56 L1737.81 1208.56 L1738.39 1208.56 L1738.98 1208.56 L1739.57 1208.56 L1740.15 1208.56 L1740.74 1208.56 L1741.32 1208.56 L1741.91 1208.56 L1742.5 1208.56 L1743.08 1208.56 L1743.67 1208.56 L1744.26 1208.56 L1744.84 1208.56 L1745.43 1208.56 L1746.02 1208.56 L1746.6 1208.56 L1747.19 1208.56 L1747.78 1208.56 L1748.36 1208.56 L1748.95 1208.56 L1749.53 1208.56 L1750.12 1208.56 L1750.71 1208.56 L1751.29 1208.56 L1751.88 1208.56 L1752.47 1208.56 L1753.05 1208.56 L1753.64 1208.56 L1754.23 1208.56 L1754.81 1208.56 L1755.4 1208.56 L1755.99 1208.56 L1756.57 1208.56 L1757.16 1208.56 L1757.74 1208.56 L1758.33 1208.56 L1758.92 1208.56 L1759.5 1208.56 L1760.09 1208.56 L1760.68 1208.56 L1761.26 1208.56 L1761.85 1208.56 L1762.44 1208.56 L1763.02 1208.56 L1763.61 1208.56 L1764.19 1208.56 L1764.78 1208.56 L1765.37 1208.56 L1765.95 1208.56 L1766.54 1208.56 L1767.13 1208.56 L1767.71 1208.56 L1768.3 1208.56 L1768.89 1208.56 L1769.47 1208.56 L1770.06 1208.56 L1770.65 1208.56 L1771.23 1208.56 L1771.82 1208.56 L1772.4 1208.56 L1772.99 1208.56 L1773.58 1208.56 L1774.16 1208.56 L1774.75 1208.56 L1775.34 1208.56 L1775.92 1208.56 L1776.51 1208.56 L1777.1 1208.56 L1777.68 1208.56 L1778.27 1208.56 L1778.86 1208.56 L1779.44 1208.56 L1780.03 1208.56 L1780.61 1208.56 L1781.2 1208.56 L1781.79 1208.56 L1782.37 1208.56 L1782.96 1208.56 L1783.55 1208.56 L1784.13 1208.56 L1784.72 1208.56 L1785.31 1208.56 L1785.89 1208.56 L1786.48 1208.56 L1787.06 1208.56 L1787.65 1208.56 L1788.24 1208.56 L1788.82 1208.56 L1789.41 1208.56 L1790 1208.56 L1790.58 1208.56 L1791.17 1208.56 L1791.76 1208.56 L1792.34 1208.56 L1792.93 1208.56 L1793.52 1208.56 L1794.1 1208.56 L1794.69 1208.56 L1795.27 1208.56 L1795.86 1208.56 L1796.45 1208.56 L1797.03 1208.56 L1797.62 1208.56 L1798.21 1208.56 L1798.79 1208.56 L1799.38 1208.56 L1799.97 1208.56 L1800.55 1208.56 L1801.14 1208.56 L1801.73 1208.56 L1802.31 1208.56 L1802.9 1208.56 L1803.48 1208.56 L1804.07 1208.56 L1804.66 1208.56 L1805.24 1208.56 L1805.83 1208.56 L1806.42 1208.56 L1807 1208.56 L1807.59 1208.56 L1808.18 1208.56 L1808.76 1208.56 L1809.35 1208.56 L1809.94 1208.56 L1810.52 1208.56 L1811.11 1208.56 L1811.69 1208.56 L1812.28 1208.56 L1812.87 1208.56 L1813.45 1208.56 L1814.04 1208.56 L1814.63 1208.56 L1815.21 1208.56 L1815.8 1208.56 L1816.39 1208.56 L1816.97 1208.56 L1817.56 1208.56 L1818.14 1208.56 L1818.73 1208.56 L1819.32 1208.56 L1819.9 1208.56 L1820.49 1208.56 L1821.08 1208.56 L1821.66 1208.56 L1822.25 1208.56 L1822.84 1208.56 L1823.42 1208.56 L1824.01 1208.56 L1824.6 1208.56 L1825.18 1208.56 L1825.77 1208.56 L1826.35 1208.56 L1826.94 1208.56 L1827.53 1208.56 L1828.11 1208.56 L1828.7 1208.56 L1829.29 1208.56 L1829.87 1208.56 L1830.46 1208.56 L1831.05 1208.56 L1831.63 1208.56 L1832.22 1208.56 L1832.81 1208.56 L1833.39 1208.56 L1833.98 1208.56 L1834.56 1208.56 L1835.15 1208.56 L1835.74 1208.56 L1836.32 1208.56 L1836.91 1208.56 L1837.5 1208.56 L1838.08 1208.56 L1838.67 1208.56 L1839.26 1208.56 L1839.84 1208.56 L1840.43 1208.56 L1841.01 1208.56 L1841.6 1208.56 L1842.19 1208.56 L1842.77 1208.56 L1843.36 1208.56 L1843.95 1208.56 L1844.53 1208.56 L1845.12 1208.56 L1845.71 1208.56 L1846.29 1208.56 L1846.88 1208.56 L1847.47 1208.56 L1848.05 1208.56 L1848.64 1208.56 L1849.22 1208.56 L1849.81 1208.56 L1850.4 1208.56 L1850.98 1208.56 L1851.57 1208.56 L1852.16 1208.56 L1852.74 1208.56 L1853.33 1208.56 L1853.92 1208.56 L1854.5 1208.56 L1855.09 1208.56 L1855.68 1208.56 L1856.26 1208.56 L1856.85 1208.56 L1857.43 1208.56 L1858.02 1208.56 L1858.61 1208.56 L1859.19 1208.56 L1859.78 1208.56 L1860.37 1208.56 L1860.95 1208.56 L1861.54 1208.56 L1862.13 1208.56 L1862.71 1208.56 L1863.3 1208.56 L1863.88 1208.56 L1864.47 1208.56 L1865.06 1208.56 L1865.64 1208.56 L1866.23 1208.56 L1866.82 1208.56 L1867.4 1208.56 L1867.99 1208.56 L1868.58 1208.56 L1869.16 1208.56 L1869.75 1208.56 L1870.34 1208.56 L1870.92 1208.56 L1871.51 1208.56 L1872.09 1208.56 L1872.68 1208.56 L1873.27 1208.56 L1873.85 1208.56 L1874.44 1208.56 L1875.03 1208.56 L1875.61 1208.56 L1876.2 1208.56 L1876.79 1208.56 L1877.37 1208.56 L1877.96 1208.56 L1878.55 1208.56 L1879.13 1208.56 L1879.72 1208.56 L1880.3 1208.56 L1880.89 1208.56 L1881.48 1208.56 L1882.06 1208.56 L1882.65 1208.56 L1883.24 1208.56 L1883.82 1208.56 L1884.41 1208.56 L1885 1208.56 L1885.58 1208.56 L1886.17 1208.56 L1886.76 1208.56 L1887.34 1208.56 L1887.93 1208.56 L1888.51 1208.56 L1889.1 1208.56 L1889.69 1208.56 L1890.27 1208.56 L1890.86 1208.56 L1891.45 1208.56 L1892.03 1208.56 L1892.62 1208.56 L1893.21 1208.56 L1893.79 1208.56 L1894.38 1208.56 L1894.96 1208.56 L1895.55 1208.56 L1896.14 1208.56 L1896.72 1208.56 L1897.31 1208.56 L1897.9 1208.56 L1898.48 1208.56 L1899.07 1208.56 L1899.66 1208.56 L1900.24 1208.56 L1900.83 1208.56 L1901.42 1208.56 L1902 1208.56 L1902.59 1208.56 L1903.17 1208.56 L1903.76 1208.56 L1904.35 1208.56 L1904.93 1208.56 L1905.52 1208.56 L1906.11 1208.56 L1906.69 1208.56 L1907.28 1208.56 L1907.87 1208.56 L1908.45 1208.56 L1909.04 1208.56 L1909.63 1208.56 L1910.21 1208.56 L1910.8 1208.56 L1911.38 1208.56 L1911.97 1208.56 L1912.56 1208.56 L1913.14 1208.56 L1913.73 1208.56 L1914.32 1208.56 L1914.9 1208.56 L1915.49 1208.56 L1916.08 1208.56 L1916.66 1208.56 L1917.25 1208.56 L1917.83 1208.56 L1918.42 1208.56 L1919.01 1208.56 L1919.59 1208.56 L1920.18 1208.56 L1920.77 1208.56 L1921.35 1208.56 L1921.94 1208.56 L1922.53 1208.56 L1923.11 1208.56 L1923.7 1208.56 L1924.29 1208.56 L1924.87 1208.56 L1925.46 1208.56 L1926.04 1208.56 L1926.63 1208.56 L1927.22 1208.56 L1927.8 1208.56 L1928.39 1208.56 L1928.98 1208.56 L1929.56 1208.56 L1930.15 1208.56 L1930.74 1208.56 L1931.32 1208.56 L1931.91 1208.56 L1932.5 1208.56 L1933.08 1208.56 L1933.67 1208.56 L1934.25 1208.56 L1934.84 1208.56 L1935.43 1208.56 L1936.01 1208.56 L1936.6 1208.56 L1937.19 1208.56 L1937.77 1208.56 L1938.36 1208.56 L1938.95 1208.56 L1939.53 1208.56 L1940.12 1208.56 L1940.71 1208.56 L1941.29 1208.56 L1941.88 1208.56 L1942.46 1208.56 L1943.05 1208.56 L1943.64 1208.56 L1944.22 1208.56 L1944.81 1208.56 L1945.4 1208.56 L1945.98 1208.56 L1946.57 1208.56 L1947.16 1208.56 L1947.74 1208.56 L1948.33 1208.56 L1948.91 1208.56 L1949.5 1208.56 L1950.09 1208.56 L1950.67 1208.56 L1951.26 1208.56 L1951.85 1208.56 L1952.43 1208.56 L1953.02 1208.56 L1953.61 1208.56 L1954.19 1208.56 L1954.78 1208.56 L1955.37 1208.56 L1955.95 1208.56 L1956.54 1208.56 L1957.12 1208.56 L1957.71 1208.56 L1958.3 1208.56 L1958.88 1208.56 L1959.47 1208.56 L1960.06 1208.56 L1960.64 1208.56 L1961.23 1208.56 L1961.82 1208.56 L1962.4 1208.56 L1962.99 1208.56 L1963.58 1208.56 L1964.16 1208.56 L1964.75 1208.56 L1965.33 1208.56 L1965.92 1208.56 L1966.51 1208.56 L1967.09 1208.56 L1967.68 1208.56 L1968.27 1208.56 L1968.85 1208.56 L1969.44 1208.56 L1970.03 1208.56 L1970.61 1208.56 L1971.2 1208.56 L1971.78 1208.56 L1972.37 1208.56 L1972.96 1208.56 L1973.54 1208.56 L1974.13 1208.56 L1974.72 1208.56 L1975.3 1208.56 L1975.89 1208.56 L1976.48 1208.56 L1977.06 1208.56 L1977.65 1208.56 L1978.24 1208.56 L1978.82 1208.56 L1979.41 1208.56 L1979.99 1208.56 L1980.58 1208.56 L1981.17 1208.56 L1981.75 1208.56 L1982.34 1208.56 L1982.93 1208.56 L1983.51 1208.56 L1984.1 1208.56 L1984.69 1208.56 L1985.27 1208.56 L1985.86 1208.56 L1986.45 1208.56 L1987.03 1208.56 L1987.62 1208.56 L1988.2 1208.56 L1988.79 1208.56 L1989.38 1208.56 L1989.96 1208.56 L1990.55 1208.56 L1991.14 1208.56 L1991.72 1208.56 L1992.31 1208.56 L1992.9 1208.56 L1993.48 1208.56 L1994.07 1208.56 L1994.65 1208.56 L1995.24 1208.56 L1995.83 1208.56 L1996.41 1208.56 L1997 1208.56 L1997.59 1208.56 L1998.17 1208.56 L1998.76 1208.56 L1999.35 1208.56 L1999.93 1208.56 L2000.52 1208.56 L2001.11 1208.56 L2001.69 1208.56 L2002.28 1208.56 L2002.86 1208.56 L2003.45 1208.56 L2004.04 1208.56 L2004.62 1208.56 L2005.21 1208.56 L2005.8 1208.56 L2006.38 1208.56 L2006.97 1208.56 L2007.56 1208.56 L2008.14 1208.56 L2008.73 1208.56 L2009.32 1208.56 L2009.9 1208.56 L2010.49 1208.56 L2011.07 1208.56 L2011.66 1208.56 L2012.25 1208.56 L2012.83 1208.56 L2013.42 1208.56 L2014.01 1208.56 L2014.59 1208.56 L2015.18 1208.56 L2015.77 1208.56 L2016.35 1208.56 L2016.94 1208.56 L2017.53 1208.56 L2018.11 1208.56 L2018.7 1208.56 L2019.28 1208.56 L2019.87 1208.56 L2020.46 1208.56 L2021.04 1208.56 L2021.63 1208.56 L2022.22 1208.56 L2022.8 1208.56 L2023.39 1208.56 L2023.98 1208.56 L2024.56 1208.56 L2025.15 1208.56 L2025.73 1208.56 L2026.32 1208.56 L2026.91 1208.56 L2027.49 1208.56 L2028.08 1208.56 L2028.67 1208.56 L2029.25 1208.56 L2029.84 1208.56 L2030.43 1208.56 L2031.01 1208.56 L2031.6 1208.56 L2032.19 1208.56 L2032.77 1208.56 L2033.36 1208.56 L2033.94 1208.56 L2034.53 1208.56 L2035.12 1208.56 L2035.7 1208.56 L2036.29 1208.56 L2036.88 1208.56 L2037.46 1208.56 L2038.05 1208.56 L2038.64 1208.56 L2039.22 1208.56 L2039.81 1208.56 L2040.4 1208.56 L2040.98 1208.56 L2041.57 1208.56 L2042.15 1208.56 L2042.74 1208.56 L2043.33 1208.56 L2043.91 1208.56 L2044.5 1208.56 L2045.09 1208.56 L2045.67 1208.56 L2046.26 1208.56 L2046.85 1208.56 L2047.43 1208.56 L2048.02 1208.56 L2048.6 1208.56 L2049.19 1208.56 L2049.78 1208.56 L2050.36 1208.56 L2050.95 1208.56 L2051.54 1208.56 L2052.12 1208.56 L2052.71 1208.56 L2053.3 1208.56 L2053.88 1208.56 L2054.47 1208.56 L2055.06 1208.56 L2055.64 1208.56 L2056.23 1208.56 L2056.81 1208.56 L2057.4 1208.56 L2057.99 1208.56 L2058.57 1208.56 L2059.16 1208.56 L2059.75 1208.56 L2060.33 1208.56 L2060.92 1208.56 L2061.51 1208.56 L2062.09 1208.56 L2062.68 1208.56 L2063.27 1208.56 L2063.85 1208.56 L2064.44 1208.56 L2065.02 1208.56 L2065.61 1208.56 L2066.2 1208.56 L2066.78 1208.56 L2067.37 1208.56 L2067.96 1208.56 L2068.54 1208.56 L2069.13 1208.56 L2069.72 1208.56 L2070.3 1208.56 L2070.89 1208.56 L2071.48 1208.56 L2072.06 1208.56 L2072.65 1208.56 L2073.23 1208.56 L2073.82 1208.56 L2074.41 1208.56 L2074.99 1208.56 L2075.58 1208.56 L2076.17 1208.56 L2076.75 1208.56 L2077.34 1208.56 L2077.93 1208.56 L2078.51 1208.56 L2079.1 1208.56 L2079.68 1208.56 L2080.27 1208.56 L2080.86 1208.56 L2081.44 1208.56 L2082.03 1208.56 L2082.62 1208.56 L2083.2 1208.56 L2083.79 1208.56 L2084.38 1208.56 L2084.96 1208.56 L2085.55 1208.56 L2086.14 1208.56 L2086.72 1208.56 L2087.31 1208.56 L2087.89 1208.56 L2088.48 1208.56 L2089.07 1208.56 L2089.65 1208.56 L2090.24 1208.56 L2090.83 1208.56 L2091.41 1208.56 L2092 1208.56 L2092.59 1208.56 L2093.17 1208.56 L2093.76 1208.56 L2094.35 1208.56 L2094.93 1208.56 L2095.52 1208.56 L2096.1 1208.56 L2096.69 1208.56 L2097.28 1208.56 L2097.86 1208.56 L2098.45 1208.56 L2099.04 1208.56 L2099.62 1208.56 L2100.21 1208.56 L2100.8 1208.56 L2101.38 1208.56 L2101.97 1208.56 L2102.55 1208.56 L2103.14 1208.56 L2103.73 1208.56 L2104.31 1208.56 L2104.9 1208.56 L2105.49 1208.56 L2106.07 1208.56 L2106.66 1208.56 L2107.25 1208.56 L2107.83 1208.56 L2108.42 1208.56 L2109.01 1208.56 L2109.59 1208.56 L2110.18 1208.56 L2110.76 1208.56 L2111.35 1208.56 L2111.94 1208.56 L2112.52 1208.56 L2113.11 1208.56 L2113.7 1208.56 L2114.28 1208.56 L2114.87 1208.56 L2115.46 1208.56 L2116.04 1208.56 L2116.63 1208.56 L2117.22 1208.56 L2117.8 1208.56 L2118.39 1208.56 L2118.97 1208.56 L2119.56 1208.56 L2120.15 1208.56 L2120.73 1208.56 L2121.32 1208.56 L2121.91 1208.56 L2122.49 1208.56 L2123.08 1208.56 L2123.67 1208.56 L2124.25 1208.56 L2124.84 1208.56 L2125.42 1208.56 L2126.01 1208.56 L2126.6 1208.56 L2127.18 1208.56 L2127.77 1208.56 L2128.36 1208.56 L2128.94 1208.56 L2129.53 1208.56 L2130.12 1208.56 L2130.7 1208.56 L2131.29 1208.56 L2131.88 1208.56 L2132.46 1208.56 L2133.05 1208.56 L2133.63 1208.56 L2134.22 1208.56 L2134.81 1208.56 L2135.39 1208.56 L2135.98 1208.56 L2136.57 1208.56 L2137.15 1208.56 L2137.74 1208.56 L2138.33 1208.56 L2138.91 1208.56 L2139.5 1208.56 L2140.09 1208.56 L2140.67 1208.56 L2141.26 1208.56 L2141.84 1208.56 L2142.43 1208.56 L2143.02 1208.56 L2143.6 1208.56 L2144.19 1208.56 L2144.78 1208.56 L2145.36 1208.56 L2145.95 1208.56 L2146.54 1208.56 L2147.12 1208.56 L2147.71 1208.56 L2148.3 1208.56 L2148.88 1208.56 L2149.47 1208.56 L2150.05 1208.56 L2150.64 1208.56 L2151.23 1208.56 L2151.81 1208.56 L2152.4 1208.56 L2152.99 1208.56 L2153.57 1208.56 L2154.16 1208.56 L2154.75 1208.56 L2155.33 1208.56 L2155.92 1208.56 L2156.5 1208.56 L2157.09 1208.56 L2157.68 1208.56 L2158.26 1208.56 L2158.26 1207.73 L2157.68 1207.73 L2157.09 1207.73 L2156.5 1207.73 L2155.92 1207.73 L2155.33 1207.73 L2154.75 1207.73 L2154.16 1207.73 L2153.57 1207.73 L2152.99 1207.73 L2152.4 1207.73 L2151.81 1207.73 L2151.23 1207.73 L2150.64 1207.73 L2150.05 1207.73 L2149.47 1207.73 L2148.88 1207.73 L2148.3 1207.73 L2147.71 1207.73 L2147.12 1207.73 L2146.54 1207.73 L2145.95 1207.73 L2145.36 1207.73 L2144.78 1207.73 L2144.19 1207.73 L2143.6 1207.73 L2143.02 1207.73 L2142.43 1207.73 L2141.84 1207.73 L2141.26 1207.73 L2140.67 1207.73 L2140.09 1207.73 L2139.5 1207.73 L2138.91 1207.73 L2138.33 1207.73 L2137.74 1207.73 L2137.15 1207.73 L2136.57 1207.73 L2135.98 1207.73 L2135.39 1207.73 L2134.81 1207.73 L2134.22 1207.73 L2133.63 1207.73 L2133.05 1207.73 L2132.46 1207.73 L2131.88 1207.73 L2131.29 1207.73 L2130.7 1207.73 L2130.12 1207.73 L2129.53 1207.73 L2128.94 1207.73 L2128.36 1207.73 L2127.77 1207.73 L2127.18 1207.73 L2126.6 1207.73 L2126.01 1207.73 L2125.42 1207.73 L2124.84 1207.73 L2124.25 1207.73 L2123.67 1207.73 L2123.08 1207.73 L2122.49 1207.73 L2121.91 1207.73 L2121.32 1207.73 L2120.73 1207.73 L2120.15 1207.73 L2119.56 1207.73 L2118.97 1207.73 L2118.39 1207.73 L2117.8 1207.73 L2117.22 1207.73 L2116.63 1207.73 L2116.04 1207.73 L2115.46 1207.73 L2114.87 1207.73 L2114.28 1207.73 L2113.7 1207.73 L2113.11 1207.73 L2112.52 1207.73 L2111.94 1207.73 L2111.35 1207.73 L2110.76 1207.73 L2110.18 1207.73 L2109.59 1207.73 L2109.01 1207.73 L2108.42 1207.73 L2107.83 1207.73 L2107.25 1207.73 L2106.66 1207.73 L2106.07 1207.73 L2105.49 1207.73 L2104.9 1207.73 L2104.31 1207.73 L2103.73 1207.73 L2103.14 1207.73 L2102.55 1207.73 L2101.97 1207.73 L2101.38 1207.73 L2100.8 1207.73 L2100.21 1207.73 L2099.62 1207.73 L2099.04 1207.73 L2098.45 1207.73 L2097.86 1207.73 L2097.28 1207.73 L2096.69 1207.73 L2096.1 1207.73 L2095.52 1207.73 L2094.93 1207.73 L2094.35 1207.73 L2093.76 1207.73 L2093.17 1207.73 L2092.59 1207.73 L2092 1207.73 L2091.41 1207.73 L2090.83 1207.73 L2090.24 1207.73 L2089.65 1207.73 L2089.07 1207.73 L2088.48 1207.73 L2087.89 1207.73 L2087.31 1207.73 L2086.72 1207.73 L2086.14 1207.73 L2085.55 1207.73 L2084.96 1207.73 L2084.38 1207.73 L2083.79 1207.73 L2083.2 1207.73 L2082.62 1207.73 L2082.03 1207.73 L2081.44 1207.73 L2080.86 1207.73 L2080.27 1207.73 L2079.68 1207.73 L2079.1 1207.73 L2078.51 1207.73 L2077.93 1207.73 L2077.34 1207.73 L2076.75 1207.73 L2076.17 1207.73 L2075.58 1207.73 L2074.99 1207.73 L2074.41 1207.73 L2073.82 1207.73 L2073.23 1207.73 L2072.65 1207.73 L2072.06 1207.73 L2071.48 1207.73 L2070.89 1207.73 L2070.3 1207.73 L2069.72 1207.73 L2069.13 1207.73 L2068.54 1207.73 L2067.96 1207.73 L2067.37 1207.73 L2066.78 1207.73 L2066.2 1207.73 L2065.61 1207.73 L2065.02 1207.73 L2064.44 1207.73 L2063.85 1207.73 L2063.27 1207.73 L2062.68 1207.73 L2062.09 1207.73 L2061.51 1207.73 L2060.92 1207.73 L2060.33 1207.73 L2059.75 1207.73 L2059.16 1207.73 L2058.57 1207.73 L2057.99 1207.73 L2057.4 1207.73 L2056.81 1207.73 L2056.23 1207.73 L2055.64 1207.73 L2055.06 1207.73 L2054.47 1207.73 L2053.88 1207.73 L2053.3 1207.73 L2052.71 1207.73 L2052.12 1207.73 L2051.54 1207.73 L2050.95 1207.73 L2050.36 1207.73 L2049.78 1207.73 L2049.19 1207.73 L2048.6 1207.73 L2048.02 1207.73 L2047.43 1207.73 L2046.85 1207.73 L2046.26 1207.73 L2045.67 1207.73 L2045.09 1207.73 L2044.5 1207.73 L2043.91 1207.73 L2043.33 1207.73 L2042.74 1207.73 L2042.15 1207.73 L2041.57 1207.73 L2040.98 1207.73 L2040.4 1207.73 L2039.81 1207.73 L2039.22 1207.73 L2038.64 1207.73 L2038.05 1207.73 L2037.46 1207.73 L2036.88 1207.73 L2036.29 1207.73 L2035.7 1207.73 L2035.12 1207.73 L2034.53 1207.73 L2033.94 1207.73 L2033.36 1207.73 L2032.77 1207.73 L2032.19 1207.73 L2031.6 1207.73 L2031.01 1207.73 L2030.43 1207.73 L2029.84 1207.73 L2029.25 1207.73 L2028.67 1207.73 L2028.08 1207.73 L2027.49 1207.73 L2026.91 1207.73 L2026.32 1207.73 L2025.73 1207.73 L2025.15 1207.73 L2024.56 1207.73 L2023.98 1207.73 L2023.39 1207.73 L2022.8 1207.73 L2022.22 1207.73 L2021.63 1207.73 L2021.04 1207.73 L2020.46 1207.73 L2019.87 1207.73 L2019.28 1207.73 L2018.7 1207.73 L2018.11 1207.73 L2017.53 1207.73 L2016.94 1207.73 L2016.35 1207.73 L2015.77 1207.73 L2015.18 1207.73 L2014.59 1207.73 L2014.01 1207.73 L2013.42 1207.73 L2012.83 1207.73 L2012.25 1207.73 L2011.66 1207.73 L2011.07 1207.73 L2010.49 1207.73 L2009.9 1207.73 L2009.32 1207.73 L2008.73 1207.73 L2008.14 1207.73 L2007.56 1207.73 L2006.97 1207.73 L2006.38 1207.73 L2005.8 1207.73 L2005.21 1207.73 L2004.62 1207.73 L2004.04 1207.73 L2003.45 1207.73 L2002.86 1207.73 L2002.28 1207.73 L2001.69 1207.73 L2001.11 1207.73 L2000.52 1207.73 L1999.93 1207.73 L1999.35 1207.73 L1998.76 1207.73 L1998.17 1207.73 L1997.59 1207.73 L1997 1207.73 L1996.41 1207.73 L1995.83 1207.73 L1995.24 1207.73 L1994.65 1207.73 L1994.07 1207.73 L1993.48 1207.73 L1992.9 1207.73 L1992.31 1207.73 L1991.72 1207.73 L1991.14 1207.73 L1990.55 1207.73 L1989.96 1207.73 L1989.38 1207.73 L1988.79 1207.73 L1988.2 1207.73 L1987.62 1207.73 L1987.03 1207.73 L1986.45 1207.73 L1985.86 1207.73 L1985.27 1207.73 L1984.69 1207.73 L1984.1 1207.73 L1983.51 1207.73 L1982.93 1207.73 L1982.34 1207.73 L1981.75 1207.73 L1981.17 1207.73 L1980.58 1207.73 L1979.99 1207.73 L1979.41 1207.73 L1978.82 1207.73 L1978.24 1207.73 L1977.65 1207.73 L1977.06 1207.73 L1976.48 1207.73 L1975.89 1207.73 L1975.3 1207.73 L1974.72 1207.73 L1974.13 1207.73 L1973.54 1207.73 L1972.96 1207.73 L1972.37 1207.73 L1971.78 1207.73 L1971.2 1207.73 L1970.61 1207.73 L1970.03 1207.73 L1969.44 1207.73 L1968.85 1207.73 L1968.27 1207.73 L1967.68 1207.73 L1967.09 1207.73 L1966.51 1207.73 L1965.92 1207.73 L1965.33 1207.73 L1964.75 1207.73 L1964.16 1207.73 L1963.58 1207.73 L1962.99 1207.73 L1962.4 1207.73 L1961.82 1207.73 L1961.23 1207.73 L1960.64 1207.73 L1960.06 1207.73 L1959.47 1207.73 L1958.88 1207.73 L1958.3 1207.73 L1957.71 1207.73 L1957.12 1207.73 L1956.54 1207.73 L1955.95 1207.73 L1955.37 1207.73 L1954.78 1207.73 L1954.19 1207.73 L1953.61 1207.73 L1953.02 1207.73 L1952.43 1207.73 L1951.85 1207.73 L1951.26 1207.73 L1950.67 1207.73 L1950.09 1207.73 L1949.5 1207.73 L1948.91 1207.73 L1948.33 1207.73 L1947.74 1207.73 L1947.16 1207.73 L1946.57 1207.73 L1945.98 1207.73 L1945.4 1207.73 L1944.81 1207.73 L1944.22 1207.73 L1943.64 1207.73 L1943.05 1207.73 L1942.46 1207.73 L1941.88 1207.73 L1941.29 1207.73 L1940.71 1207.73 L1940.12 1207.73 L1939.53 1207.73 L1938.95 1207.73 L1938.36 1207.73 L1937.77 1207.73 L1937.19 1207.73 L1936.6 1207.73 L1936.01 1207.73 L1935.43 1207.73 L1934.84 1207.73 L1934.25 1207.73 L1933.67 1207.73 L1933.08 1207.73 L1932.5 1207.73 L1931.91 1207.73 L1931.32 1207.73 L1930.74 1207.73 L1930.15 1207.73 L1929.56 1207.73 L1928.98 1207.73 L1928.39 1207.73 L1927.8 1207.73 L1927.22 1207.73 L1926.63 1207.73 L1926.04 1207.73 L1925.46 1207.73 L1924.87 1207.73 L1924.29 1207.73 L1923.7 1207.73 L1923.11 1207.73 L1922.53 1207.73 L1921.94 1207.73 L1921.35 1207.73 L1920.77 1207.73 L1920.18 1207.73 L1919.59 1207.73 L1919.01 1207.73 L1918.42 1207.73 L1917.83 1207.73 L1917.25 1207.73 L1916.66 1207.73 L1916.08 1207.73 L1915.49 1207.73 L1914.9 1207.73 L1914.32 1207.73 L1913.73 1207.73 L1913.14 1207.73 L1912.56 1207.73 L1911.97 1207.73 L1911.38 1207.73 L1910.8 1207.73 L1910.21 1207.73 L1909.63 1207.73 L1909.04 1207.73 L1908.45 1207.73 L1907.87 1207.73 L1907.28 1207.73 L1906.69 1207.73 L1906.11 1207.73 L1905.52 1207.73 L1904.93 1207.73 L1904.35 1207.73 L1903.76 1207.73 L1903.17 1207.73 L1902.59 1207.73 L1902 1207.73 L1901.42 1207.73 L1900.83 1207.73 L1900.24 1207.73 L1899.66 1207.73 L1899.07 1207.73 L1898.48 1207.73 L1897.9 1207.73 L1897.31 1207.73 L1896.72 1207.73 L1896.14 1207.73 L1895.55 1207.73 L1894.96 1207.73 L1894.38 1207.73 L1893.79 1207.73 L1893.21 1207.73 L1892.62 1207.73 L1892.03 1207.73 L1891.45 1207.73 L1890.86 1207.73 L1890.27 1207.73 L1889.69 1207.73 L1889.1 1207.73 L1888.51 1207.73 L1887.93 1207.73 L1887.34 1207.73 L1886.76 1207.73 L1886.17 1207.73 L1885.58 1207.73 L1885 1207.73 L1884.41 1207.73 L1883.82 1207.73 L1883.24 1207.73 L1882.65 1207.73 L1882.06 1207.73 L1881.48 1207.73 L1880.89 1207.73 L1880.3 1207.73 L1879.72 1207.73 L1879.13 1207.73 L1878.55 1207.73 L1877.96 1207.73 L1877.37 1207.73 L1876.79 1207.73 L1876.2 1207.73 L1875.61 1207.73 L1875.03 1207.73 L1874.44 1207.73 L1873.85 1207.73 L1873.27 1207.73 L1872.68 1207.73 L1872.09 1207.73 L1871.51 1207.73 L1870.92 1207.73 L1870.34 1207.73 L1869.75 1207.73 L1869.16 1207.73 L1868.58 1207.73 L1867.99 1207.73 L1867.4 1207.73 L1866.82 1207.73 L1866.23 1207.73 L1865.64 1207.73 L1865.06 1207.73 L1864.47 1207.73 L1863.88 1207.73 L1863.3 1207.73 L1862.71 1207.73 L1862.13 1207.73 L1861.54 1207.73 L1860.95 1207.73 L1860.37 1207.73 L1859.78 1207.73 L1859.19 1207.73 L1858.61 1207.73 L1858.02 1207.73 L1857.43 1207.73 L1856.85 1207.73 L1856.26 1207.73 L1855.68 1207.73 L1855.09 1207.73 L1854.5 1207.73 L1853.92 1207.73 L1853.33 1207.73 L1852.74 1207.73 L1852.16 1207.73 L1851.57 1207.73 L1850.98 1207.73 L1850.4 1207.73 L1849.81 1207.73 L1849.22 1207.73 L1848.64 1207.73 L1848.05 1207.73 L1847.47 1207.73 L1846.88 1207.73 L1846.29 1207.73 L1845.71 1207.73 L1845.12 1207.73 L1844.53 1207.73 L1843.95 1207.73 L1843.36 1207.73 L1842.77 1207.73 L1842.19 1207.73 L1841.6 1207.73 L1841.01 1207.73 L1840.43 1207.73 L1839.84 1207.73 L1839.26 1207.73 L1838.67 1207.73 L1838.08 1207.73 L1837.5 1207.73 L1836.91 1207.73 L1836.32 1207.73 L1835.74 1207.73 L1835.15 1207.73 L1834.56 1207.73 L1833.98 1207.73 L1833.39 1207.73 L1832.81 1207.73 L1832.22 1207.73 L1831.63 1207.73 L1831.05 1207.73 L1830.46 1207.73 L1829.87 1207.73 L1829.29 1207.73 L1828.7 1207.73 L1828.11 1207.73 L1827.53 1207.73 L1826.94 1207.73 L1826.35 1207.73 L1825.77 1207.73 L1825.18 1207.73 L1824.6 1207.73 L1824.01 1207.73 L1823.42 1207.73 L1822.84 1207.73 L1822.25 1207.73 L1821.66 1207.73 L1821.08 1207.73 L1820.49 1207.73 L1819.9 1207.73 L1819.32 1207.73 L1818.73 1207.73 L1818.14 1207.73 L1817.56 1207.73 L1816.97 1207.73 L1816.39 1207.73 L1815.8 1207.73 L1815.21 1207.73 L1814.63 1207.73 L1814.04 1207.73 L1813.45 1207.73 L1812.87 1207.73 L1812.28 1207.73 L1811.69 1207.73 L1811.11 1207.73 L1810.52 1207.73 L1809.94 1207.73 L1809.35 1207.73 L1808.76 1207.73 L1808.18 1207.73 L1807.59 1207.73 L1807 1207.73 L1806.42 1207.73 L1805.83 1207.73 L1805.24 1207.73 L1804.66 1207.73 L1804.07 1207.73 L1803.48 1207.73 L1802.9 1207.73 L1802.31 1207.73 L1801.73 1207.73 L1801.14 1207.73 L1800.55 1207.73 L1799.97 1207.73 L1799.38 1207.73 L1798.79 1207.73 L1798.21 1207.73 L1797.62 1207.73 L1797.03 1207.73 L1796.45 1207.73 L1795.86 1207.73 L1795.27 1207.73 L1794.69 1207.73 L1794.1 1207.73 L1793.52 1207.73 L1792.93 1207.73 L1792.34 1207.73 L1791.76 1207.73 L1791.17 1207.73 L1790.58 1207.73 L1790 1207.73 L1789.41 1207.73 L1788.82 1207.73 L1788.24 1207.73 L1787.65 1207.73 L1787.06 1207.73 L1786.48 1207.73 L1785.89 1207.73 L1785.31 1207.73 L1784.72 1207.73 L1784.13 1207.73 L1783.55 1207.73 L1782.96 1207.73 L1782.37 1207.73 L1781.79 1207.73 L1781.2 1207.73 L1780.61 1207.73 L1780.03 1207.73 L1779.44 1207.73 L1778.86 1207.73 L1778.27 1207.73 L1777.68 1207.73 L1777.1 1207.73 L1776.51 1207.73 L1775.92 1207.73 L1775.34 1207.73 L1774.75 1207.73 L1774.16 1207.73 L1773.58 1207.73 L1772.99 1207.73 L1772.4 1207.73 L1771.82 1207.73 L1771.23 1207.73 L1770.65 1207.73 L1770.06 1207.73 L1769.47 1207.73 L1768.89 1207.73 L1768.3 1207.73 L1767.71 1207.73 L1767.13 1207.73 L1766.54 1207.73 L1765.95 1207.73 L1765.37 1207.73 L1764.78 1207.73 L1764.19 1207.73 L1763.61 1207.73 L1763.02 1207.73 L1762.44 1207.73 L1761.85 1207.73 L1761.26 1207.73 L1760.68 1207.73 L1760.09 1207.73 L1759.5 1207.73 L1758.92 1207.73 L1758.33 1207.73 L1757.74 1207.73 L1757.16 1207.73 L1756.57 1207.73 L1755.99 1207.73 L1755.4 1207.73 L1754.81 1207.73 L1754.23 1207.73 L1753.64 1207.73 L1753.05 1207.73 L1752.47 1207.73 L1751.88 1207.73 L1751.29 1207.73 L1750.71 1207.73 L1750.12 1207.73 L1749.53 1207.73 L1748.95 1207.73 L1748.36 1207.73 L1747.78 1207.73 L1747.19 1207.73 L1746.6 1207.73 L1746.02 1207.73 L1745.43 1207.73 L1744.84 1207.73 L1744.26 1207.73 L1743.67 1207.73 L1743.08 1207.73 L1742.5 1207.73 L1741.91 1207.73 L1741.32 1207.73 L1740.74 1207.73 L1740.15 1207.73 L1739.57 1207.73 L1738.98 1207.73 L1738.39 1207.73 L1737.81 1207.73 L1737.22 1207.73 L1736.63 1207.73 L1736.05 1207.73 L1735.46 1207.73 L1734.87 1207.73 L1734.29 1207.73 L1733.7 1207.73 L1733.11 1207.73 L1732.53 1207.73 L1731.94 1207.73 L1731.36 1207.73 L1730.77 1207.73 L1730.18 1207.73 L1729.6 1207.73 L1729.01 1207.73 L1728.42 1207.73 L1727.84 1207.73 L1727.25 1207.73 L1726.66 1207.73 L1726.08 1207.73 L1725.49 1207.73 L1724.91 1207.73 L1724.32 1207.73 L1723.73 1207.73 L1723.15 1207.73 L1722.56 1207.73 L1721.97 1207.73 L1721.39 1207.73 L1720.8 1207.73 L1720.21 1207.73 L1719.63 1207.73 L1719.04 1207.73 L1718.45 1207.73 L1717.87 1207.73 L1717.28 1207.73 L1716.7 1207.73 L1716.11 1207.73 L1715.52 1207.73 L1714.94 1207.73 L1714.35 1207.73 L1713.76 1207.73 L1713.18 1207.73 L1712.59 1207.73 L1712 1207.73 L1711.42 1207.73 L1710.83 1207.73 L1710.24 1207.73 L1709.66 1207.73 L1709.07 1207.73 L1708.49 1207.73 L1707.9 1207.73 L1707.31 1207.73 L1706.73 1207.73 L1706.14 1207.73 L1705.55 1207.73 L1704.97 1207.73 L1704.38 1207.73 L1703.79 1207.73 L1703.21 1207.73 L1702.62 1207.73 L1702.04 1207.73 L1701.45 1207.73 L1700.86 1207.73 L1700.28 1207.73 L1699.69 1207.73 L1699.1 1207.73 L1698.52 1207.73 L1697.93 1207.73 L1697.34 1207.73 L1696.76 1207.73 L1696.17 1207.73 L1695.58 1207.73 L1695 1207.73 L1694.41 1207.73 L1693.83 1207.73 L1693.24 1207.73 L1692.65 1207.73 L1692.07 1207.73 L1691.48 1207.73 L1690.89 1207.73 L1690.31 1207.73 L1689.72 1207.73 L1689.13 1207.73 L1688.55 1207.73 L1687.96 1207.73 L1687.37 1207.73 L1686.79 1207.73 L1686.2 1207.73 L1685.62 1207.73 L1685.03 1207.73 L1684.44 1207.73 L1683.86 1207.73 L1683.27 1207.73 L1682.68 1207.73 L1682.1 1207.73 L1681.51 1207.73 L1680.92 1207.73 L1680.34 1207.73 L1679.75 1207.73 L1679.17 1207.73 L1678.58 1207.73 L1677.99 1207.73 L1677.41 1207.73 L1676.82 1207.73 L1676.23 1207.73 L1675.65 1207.73 L1675.06 1207.73 L1674.47 1207.73 L1673.89 1207.73 L1673.3 1207.73 L1672.71 1207.73 L1672.13 1207.73 L1671.54 1207.73 L1670.96 1207.73 L1670.37 1207.73 L1669.78 1207.73 L1669.2 1207.73 L1668.61 1207.73 L1668.02 1207.73 L1667.44 1207.73 L1666.85 1207.73 L1666.26 1207.73 L1665.68 1207.73 L1665.09 1207.73 L1664.5 1207.73 L1663.92 1207.73 L1663.33 1207.73 L1662.75 1207.73 L1662.16 1207.73 L1661.57 1207.73 L1660.99 1207.73 L1660.4 1207.73 L1659.81 1207.73 L1659.23 1207.73 L1658.64 1207.73 L1658.05 1207.73 L1657.47 1207.73 L1656.88 1207.73 L1656.29 1207.73 L1655.71 1207.73 L1655.12 1207.73 L1654.54 1207.73 L1653.95 1207.73 L1653.36 1207.73 L1652.78 1207.73 L1652.19 1207.73 L1651.6 1207.73 L1651.02 1207.73 L1650.43 1207.73 L1649.84 1207.73 L1649.26 1207.73 L1648.67 1207.73 L1648.09 1207.73 L1647.5 1207.73 L1646.91 1207.73 L1646.33 1207.73 L1645.74 1207.73 L1645.15 1207.73 L1644.57 1207.73 L1643.98 1207.73 L1643.39 1207.73 L1642.81 1207.73 L1642.22 1207.73 L1641.63 1207.73 L1641.05 1207.73 L1640.46 1207.73 L1639.88 1207.73 L1639.29 1207.73 L1638.7 1207.73 L1638.12 1207.73 L1637.53 1207.73 L1636.94 1207.73 L1636.36 1207.73 L1635.77 1207.73 L1635.18 1207.73 L1634.6 1207.73 L1634.01 1207.73 L1633.42 1207.73 L1632.84 1207.73 L1632.25 1207.73 L1631.67 1207.73 L1631.08 1207.73 L1630.49 1207.73 L1629.91 1207.73 L1629.32 1207.73 L1628.73 1207.73 L1628.15 1207.73 L1627.56 1207.73 L1626.97 1207.73 L1626.39 1207.73 L1625.8 1207.73 L1625.22 1207.73 L1624.63 1207.73 L1624.04 1207.73 L1623.46 1207.73 L1622.87 1207.73 L1622.28 1207.73 L1621.7 1207.73 L1621.11 1207.73 L1620.52 1207.73 L1619.94 1207.73 L1619.35 1207.73 L1618.76 1207.73 L1618.18 1207.73 L1617.59 1207.73 L1617.01 1207.73 L1616.42 1207.73 L1615.83 1207.73 L1615.25 1207.73 L1614.66 1207.73 L1614.07 1207.73 L1613.49 1207.73 L1612.9 1207.73 L1612.31 1207.73 L1611.73 1207.73 L1611.14 1207.73 L1610.55 1207.73 L1609.97 1207.73 L1609.38 1207.73 L1608.8 1207.73 L1608.21 1207.73 L1607.62 1207.73 L1607.04 1207.73 L1606.45 1207.73 L1605.86 1207.73 L1605.28 1207.73 L1604.69 1207.73 L1604.1 1207.73 L1603.52 1207.73 L1602.93 1207.73 L1602.34 1207.73 L1601.76 1207.73 L1601.17 1207.73 L1600.59 1207.73 L1600 1207.73 L1599.41 1207.73 L1598.83 1207.73 L1598.24 1207.73 L1597.65 1207.73 L1597.07 1207.73 L1596.48 1207.73 L1595.89 1207.73 L1595.31 1207.73 L1594.72 1207.73 L1594.14 1207.73 L1593.55 1207.73 L1592.96 1207.73 L1592.38 1207.73 L1591.79 1207.73 L1591.2 1207.73 L1590.62 1207.73 L1590.03 1207.73 L1589.44 1207.73 L1588.86 1207.73 L1588.27 1207.73 L1587.68 1207.73 L1587.1 1207.73 L1586.51 1207.73 L1585.93 1207.73 L1585.34 1207.73 L1584.75 1207.73 L1584.17 1207.73 L1583.58 1207.73 L1582.99 1207.73 L1582.41 1207.73 L1581.82 1207.73 L1581.23 1207.73 L1580.65 1207.73 L1580.06 1207.73 L1579.47 1207.73 L1578.89 1207.73 L1578.3 1207.73 L1577.72 1207.73 L1577.13 1207.73 L1576.54 1207.73 L1575.96 1207.73 L1575.37 1207.73 L1574.78 1207.73 L1574.2 1207.73 L1573.61 1207.73 L1573.02 1207.73 L1572.44 1207.73 L1571.85 1207.73 L1571.27 1207.73 L1570.68 1207.73 L1570.09 1207.73 L1569.51 1207.73 L1568.92 1207.73 L1568.33 1207.73 L1567.75 1207.73 L1567.16 1207.73 L1566.57 1207.73 L1565.99 1207.73 L1565.4 1207.73 L1564.81 1207.73 L1564.23 1207.73 L1563.64 1207.73 L1563.06 1207.73 L1562.47 1207.73 L1561.88 1207.73 L1561.3 1207.73 L1560.71 1207.73 L1560.12 1207.73 L1559.54 1207.73 L1558.95 1207.73 L1558.36 1207.73 L1557.78 1207.73 L1557.19 1207.73 L1556.6 1207.73 L1556.02 1207.73 L1555.43 1207.73 L1554.85 1207.73 L1554.26 1207.73 L1553.67 1207.73 L1553.09 1207.73 L1552.5 1207.73 L1551.91 1207.73 L1551.33 1207.73 L1550.74 1207.73 L1550.15 1207.73 L1549.57 1207.73 L1548.98 1207.73 L1548.4 1207.73 L1547.81 1207.73 L1547.22 1207.73 L1546.64 1207.73 L1546.05 1207.73 L1545.46 1207.73 L1544.88 1207.73 L1544.29 1207.73 L1543.7 1207.73 L1543.12 1207.73 L1542.53 1207.73 L1541.94 1207.73 L1541.36 1207.73 L1540.77 1207.73 L1540.19 1207.73 L1539.6 1207.73 L1539.01 1207.73 L1538.43 1207.73 L1537.84 1207.73 L1537.25 1207.73 L1536.67 1207.73 L1536.08 1207.73 L1535.49 1207.73 L1534.91 1207.73 L1534.32 1207.73 L1533.73 1207.73 L1533.15 1207.73 L1532.56 1207.73 L1531.98 1207.73 L1531.39 1207.73 L1530.8 1207.73 L1530.22 1207.73 L1529.63 1207.73 L1529.04 1207.73 L1528.46 1207.73 L1527.87 1207.73 L1527.28 1207.73 L1526.7 1207.73 L1526.11 1207.73 L1525.52 1207.73 L1524.94 1207.73 L1524.35 1207.73 L1523.77 1207.73 L1523.18 1207.73 L1522.59 1207.73 L1522.01 1207.73 L1521.42 1207.73 L1520.83 1207.73 L1520.25 1207.73 L1519.66 1207.73 L1519.07 1207.73 L1518.49 1207.73 L1517.9 1207.73 L1517.32 1207.73 L1516.73 1207.73 L1516.14 1207.73 L1515.56 1207.73 L1514.97 1207.73 L1514.38 1207.73 L1513.8 1207.73 L1513.21 1207.73 L1512.62 1207.73 L1512.04 1207.73 L1511.45 1207.73 L1510.86 1207.73 L1510.28 1207.73 L1509.69 1207.73 L1509.11 1207.73 L1508.52 1207.73 L1507.93 1207.73 L1507.35 1207.73 L1506.76 1207.73 L1506.17 1207.73 L1505.59 1207.73 L1505 1207.73 L1504.41 1207.73 L1503.83 1207.73 L1503.24 1207.73 L1502.65 1207.73 L1502.07 1207.73 L1501.48 1207.73 L1500.9 1207.73 L1500.31 1207.73 L1499.72 1207.73 L1499.14 1207.73 L1498.55 1207.73 L1497.96 1207.73 L1497.38 1207.73 L1496.79 1207.73 L1496.2 1207.73 L1495.62 1207.73 L1495.03 1207.73 L1494.45 1207.73 L1493.86 1207.73 L1493.27 1207.73 L1492.69 1207.73 L1492.1 1207.73 L1491.51 1207.73 L1490.93 1207.73 L1490.34 1207.73 L1489.75 1207.73 L1489.17 1207.73 L1488.58 1207.73 L1487.99 1207.73 L1487.41 1207.73 L1486.82 1207.73 L1486.24 1207.73 L1485.65 1207.73 L1485.06 1207.73 L1484.48 1207.73 L1483.89 1207.73 L1483.3 1207.73 L1482.72 1207.73 L1482.13 1207.73 L1481.54 1207.73 L1480.96 1207.73 L1480.37 1207.73 L1479.78 1207.73 L1479.2 1207.73 L1478.61 1207.73 L1478.03 1207.73 L1477.44 1207.73 L1476.85 1207.73 L1476.27 1207.73 L1475.68 1207.73 L1475.09 1207.73 L1474.51 1207.73 L1473.92 1207.73 L1473.33 1207.73 L1472.75 1207.73 L1472.16 1207.73 L1471.57 1207.73 L1470.99 1207.73 L1470.4 1207.73 L1469.82 1207.73 L1469.23 1207.73 L1468.64 1207.73 L1468.06 1207.73 L1467.47 1207.73 L1466.88 1207.73 L1466.3 1207.73 L1465.71 1207.73 L1465.12 1207.73 L1464.54 1207.73 L1463.95 1207.73 L1463.37 1207.73 L1462.78 1207.73 L1462.19 1207.73 L1461.61 1207.73 L1461.02 1207.73 L1460.43 1207.73 L1459.85 1207.73 L1459.26 1207.73 L1458.67 1207.73 L1458.09 1207.73 L1457.5 1207.73 L1456.91 1207.73 L1456.33 1207.73 L1455.74 1207.73 L1455.16 1207.73 L1454.57 1207.73 L1453.98 1207.73 L1453.4 1207.73 L1452.81 1207.73 L1452.22 1207.73 L1451.64 1207.73 L1451.05 1207.73 L1450.46 1207.73 L1449.88 1207.73 L1449.29 1207.73 L1448.7 1207.73 L1448.12 1207.73 L1447.53 1207.73 L1446.95 1207.73 L1446.36 1207.73 L1445.77 1207.73 L1445.19 1207.73 L1444.6 1207.73 L1444.01 1207.73 L1443.43 1207.73 L1442.84 1207.73 L1442.25 1207.73 L1441.67 1207.73 L1441.08 1207.73 L1440.5 1207.73 L1439.91 1207.73 L1439.32 1207.73 L1438.74 1207.73 L1438.15 1207.73 L1437.56 1207.73 L1436.98 1207.73 L1436.39 1207.73 L1435.8 1207.73 L1435.22 1207.73 L1434.63 1207.73 L1434.04 1207.73 L1433.46 1207.73 L1432.87 1207.73 L1432.29 1207.73 L1431.7 1207.73 L1431.11 1207.73 L1430.53 1207.73 L1429.94 1207.73 L1429.35 1207.73 L1428.77 1207.73 L1428.18 1207.73 L1427.59 1207.73 L1427.01 1207.73 L1426.42 1207.73 L1425.83 1207.73 L1425.25 1207.73 L1424.66 1207.73 L1424.08 1207.73 L1423.49 1207.73 L1422.9 1207.73 L1422.32 1207.73 L1421.73 1207.73 L1421.14 1207.73 L1420.56 1207.73 L1419.97 1207.73 L1419.38 1207.73 L1418.8 1207.73 L1418.21 1207.73 L1417.63 1207.73 L1417.04 1207.73 L1416.45 1207.73 L1415.87 1207.73 L1415.28 1207.73 L1414.69 1207.73 L1414.11 1207.73 L1413.52 1207.73 L1412.93 1207.73 L1412.35 1207.73 L1411.76 1207.73 L1411.17 1207.73 L1410.59 1207.73 L1410 1207.73 L1409.42 1207.73 L1408.83 1207.73 L1408.24 1207.73 L1407.66 1207.73 L1407.07 1207.73 L1406.48 1207.73 L1405.9 1207.73 L1405.31 1207.73 L1404.72 1207.73 L1404.14 1207.73 L1403.55 1207.73 L1402.96 1207.73 L1402.38 1207.73 L1401.79 1207.73 L1401.21 1207.73 L1400.62 1207.73 L1400.03 1207.73 L1399.45 1207.73 L1398.86 1207.73 L1398.27 1207.73 L1397.69 1207.73 L1397.1 1207.73 L1396.51 1207.73 L1395.93 1207.73 L1395.34 1207.73 L1394.75 1207.73 L1394.17 1207.73 L1393.58 1207.73 L1393 1207.73 L1392.41 1207.73 L1391.82 1207.73 L1391.24 1207.73 L1390.65 1207.73 L1390.06 1207.73 L1389.48 1207.73 L1388.89 1207.73 L1388.3 1207.73 L1387.72 1207.73 L1387.13 1207.73 L1386.55 1207.73 L1385.96 1207.73 L1385.37 1207.73 L1384.79 1207.73 L1384.2 1207.73 L1383.61 1207.73 L1383.03 1207.73 L1382.44 1207.73 L1381.85 1207.73 L1381.27 1207.73 L1380.68 1207.73 L1380.09 1207.73 L1379.51 1207.73 L1378.92 1207.73 L1378.34 1207.73 L1377.75 1207.73 L1377.16 1207.73 L1376.58 1207.73 L1375.99 1207.73 L1375.4 1207.73 L1374.82 1207.73 L1374.23 1207.73 L1373.64 1207.73 L1373.06 1207.73 L1372.47 1207.73 L1371.88 1207.73 L1371.3 1207.73 L1370.71 1207.73 L1370.13 1207.73 L1369.54 1207.73 L1368.95 1207.73 L1368.37 1207.73 L1367.78 1207.73 L1367.19 1207.73 L1366.61 1207.73 L1366.02 1207.73 L1365.43 1207.73 L1364.85 1207.73 L1364.26 1207.73 L1363.68 1207.73 L1363.09 1207.73 L1362.5 1207.73 L1361.92 1207.73 L1361.33 1207.73 L1360.74 1207.73 L1360.16 1207.73 L1359.57 1207.73 L1358.98 1207.73 L1358.4 1207.73 L1357.81 1207.73 L1357.22 1207.73 L1356.64 1207.73 L1356.05 1207.73 L1355.47 1207.73 L1354.88 1207.73 L1354.29 1207.73 L1353.71 1207.73 L1353.12 1207.73 L1352.53 1207.73 L1351.95 1207.73 L1351.36 1207.73 L1350.77 1207.73 L1350.19 1207.73 L1349.6 1207.73 L1349.01 1207.73 L1348.43 1207.73 L1347.84 1207.73 L1347.26 1207.73 L1346.67 1207.73 L1346.08 1207.73 L1345.5 1207.73 L1344.91 1207.73 L1344.32 1207.73 L1343.74 1207.73 L1343.15 1207.73 L1342.56 1207.73 L1341.98 1207.73 L1341.39 1207.73 L1340.8 1207.73 L1340.22 1207.73 L1339.63 1207.73 L1339.05 1207.73 L1338.46 1207.73 L1337.87 1207.73 L1337.29 1207.73 L1336.7 1207.73 L1336.11 1207.73 L1335.53 1207.73 L1334.94 1207.73 L1334.35 1207.73 L1333.77 1207.73 L1333.18 1207.73 L1332.6 1207.73 L1332.01 1207.73 L1331.42 1207.73 L1330.84 1207.73 L1330.25 1207.73 L1329.66 1207.73 L1329.08 1207.73 L1328.49 1207.73 L1327.9 1207.73 L1327.32 1207.73 L1326.73 1207.73 L1326.14 1207.73 L1325.56 1207.73 L1324.97 1207.73 L1324.39 1207.73 L1323.8 1207.73 L1323.21 1207.73 L1322.63 1207.73 L1322.04 1207.73 L1321.45 1207.73 L1320.87 1207.73 L1320.28 1207.73 L1319.69 1207.73 L1319.11 1207.73 L1318.52 1207.73 L1317.93 1207.73 L1317.35 1207.73 L1316.76 1207.73 L1316.18 1207.73 L1315.59 1207.73 L1315 1207.73 L1314.42 1207.73 L1313.83 1207.73 L1313.24 1207.73 L1312.66 1207.73 L1312.07 1207.73 L1311.48 1207.73 L1310.9 1207.73 L1310.31 1207.73 L1309.73 1207.73 L1309.14 1207.73 L1308.55 1207.73 L1307.97 1207.73 L1307.38 1207.73 L1306.79 1207.73 L1306.21 1207.73 L1305.62 1207.73 L1305.03 1207.73 L1304.45 1207.73 L1303.86 1207.73 L1303.27 1207.73 L1302.69 1207.73 L1302.1 1207.73 L1301.52 1207.73 L1300.93 1207.73 L1300.34 1207.73 L1299.76 1207.73 L1299.17 1207.73 L1298.58 1207.73 L1298 1207.73 L1297.41 1207.73 L1296.82 1207.73 L1296.24 1207.73 L1295.65 1207.73 L1295.06 1207.73 L1294.48 1207.73 L1293.89 1207.73 L1293.31 1207.73 L1292.72 1207.73 L1292.13 1207.73 L1291.55 1207.73 L1290.96 1207.73 L1290.37 1207.73 L1289.79 1207.73 L1289.2 1207.73 L1288.61 1207.73 L1288.03 1207.73 L1287.44 1207.73 L1286.86 1207.73 L1286.27 1207.73 L1285.68 1207.73 L1285.1 1207.73 L1284.51 1207.73 L1283.92 1207.73 L1283.34 1207.73 L1282.75 1207.73 L1282.16 1207.73 L1281.58 1207.73 L1280.99 1207.73 L1280.4 1207.73 L1279.82 1207.73 L1279.23 1207.73 L1278.65 1207.73 L1278.06 1207.73 L1277.47 1207.73 L1276.89 1207.73 L1276.3 1207.73 L1275.71 1207.73 L1275.13 1207.73 L1274.54 1207.73 L1273.95 1207.73 L1273.37 1207.73 L1272.78 1207.73 L1272.19 1207.73 L1271.61 1207.73 L1271.02 1207.73 L1270.44 1207.73 L1269.85 1207.73 L1269.26 1207.73 L1268.68 1207.73 L1268.09 1207.73 L1267.5 1207.73 L1266.92 1207.73 L1266.33 1207.73 L1265.74 1207.73 L1265.16 1207.73 L1264.57 1207.73 L1263.98 1207.73 L1263.4 1207.73 L1262.81 1207.73 L1262.23 1207.73 L1261.64 1207.73 L1261.05 1207.73 L1260.47 1207.73 L1259.88 1207.73 L1259.29 1207.73 L1258.71 1207.73 L1258.12 1207.73 L1257.53 1207.73 L1256.95 1207.73 L1256.36 1207.73 L1255.78 1207.73 L1255.19 1207.73 L1254.6 1207.73 L1254.02 1207.73 L1253.43 1207.73 L1252.84 1207.73 L1252.26 1207.73 L1251.67 1207.73 L1251.08 1207.73 L1250.5 1207.73 L1249.91 1207.73 L1249.32 1207.73 L1248.74 1207.73 L1248.15 1207.73 L1247.57 1207.73 L1246.98 1207.73 L1246.39 1207.73 L1245.81 1207.73 L1245.22 1207.73 L1244.63 1207.73 L1244.05 1207.73 L1243.46 1207.73 L1242.87 1207.73 L1242.29 1207.73 L1241.7 1207.73 L1241.11 1207.73 L1240.53 1207.73 L1239.94 1207.73 L1239.36 1207.73 L1238.77 1207.73 L1238.18 1207.73 L1237.6 1207.73 L1237.01 1207.73 L1236.42 1207.73 L1235.84 1207.73 L1235.25 1207.73 L1234.66 1207.73 L1234.08 1207.73 L1233.49 1207.73 L1232.91 1207.73 L1232.32 1207.73 L1231.73 1207.73 L1231.15 1207.73 L1230.56 1207.73 L1229.97 1207.73 L1229.39 1207.73 L1228.8 1207.73 L1228.21 1207.73 L1227.63 1207.73 L1227.04 1207.73 L1226.45 1207.73 L1225.87 1207.73 L1225.28 1207.73 L1224.7 1207.73 L1224.11 1207.73 L1223.52 1207.73 L1222.94 1207.73 L1222.35 1207.73 L1221.76 1207.73 L1221.18 1207.73 L1220.59 1207.73 L1220 1207.73 L1219.42 1207.73 L1218.83 1207.73 L1218.24 1207.73 L1217.66 1207.73 L1217.07 1207.73 L1216.49 1207.73 L1215.9 1207.73 L1215.31 1207.73 L1214.73 1207.73 L1214.14 1207.73 L1213.55 1207.73 L1212.97 1207.73 L1212.38 1207.73 L1211.79 1207.73 L1211.21 1207.73 L1210.62 1207.73 L1210.03 1207.73 L1209.45 1207.73 L1208.86 1207.73 L1208.28 1207.73 L1207.69 1207.73 L1207.1 1207.73 L1206.52 1207.73 L1205.93 1207.73 L1205.34 1207.73 L1204.76 1207.73 L1204.17 1207.73 L1203.58 1207.73 L1203 1207.73 L1202.41 1207.73 L1201.83 1207.73 L1201.24 1207.73 L1200.65 1207.73 L1200.07 1207.73 L1199.48 1207.73 L1198.89 1207.73 L1198.31 1207.73 L1197.72 1207.73 L1197.13 1207.73 L1196.55 1207.73 L1195.96 1207.73 L1195.37 1207.73 L1194.79 1207.73 L1194.2 1207.73 L1193.62 1207.73 L1193.03 1207.73 L1192.44 1207.73 L1191.86 1207.73 L1191.27 1207.73 L1190.68 1207.73 L1190.1 1207.73 L1189.51 1207.73 L1188.92 1207.73 L1188.34 1207.73 L1187.75 1207.73 L1187.16 1207.73 L1186.58 1207.73 L1185.99 1207.73 L1185.41 1207.73 L1184.82 1207.73 L1184.23 1207.73 L1183.65 1207.73 L1183.06 1207.73 L1182.47 1207.73 L1181.89 1207.73 L1181.3 1207.73 L1180.71 1207.73 L1180.13 1207.73 L1179.54 1207.73 L1178.96 1207.73 L1178.37 1207.73 L1177.78 1207.73 L1177.2 1207.73 L1176.61 1207.73 L1176.02 1207.73 L1175.44 1207.73 L1174.85 1207.73 L1174.26 1207.73 L1173.68 1207.73 L1173.09 1207.73 L1172.5 1207.73 L1171.92 1207.73 L1171.33 1207.73 L1170.75 1207.73 L1170.16 1207.73 L1169.57 1207.73 L1168.99 1207.73 L1168.4 1207.73 L1167.81 1207.73 L1167.23 1207.73 L1166.64 1207.73 L1166.05 1207.73 L1165.47 1207.73 L1164.88 1207.73 L1164.29 1207.73 L1163.71 1207.73 L1163.12 1207.73 L1162.54 1207.73 L1161.95 1207.73 L1161.36 1207.73 L1160.78 1207.73 L1160.19 1207.73 L1159.6 1207.73 L1159.02 1207.73 L1158.43 1207.73 L1157.84 1207.73 L1157.26 1207.73 L1156.67 1207.73 L1156.09 1207.73 L1155.5 1207.73 L1154.91 1207.73 L1154.33 1207.73 L1153.74 1207.73 L1153.15 1207.73 L1152.57 1207.73 L1151.98 1207.73 L1151.39 1207.73 L1150.81 1207.73 L1150.22 1207.73 L1149.63 1207.73 L1149.05 1207.73 L1148.46 1207.73 L1147.88 1207.73 L1147.29 1207.73 L1146.7 1207.73 L1146.12 1207.73 L1145.53 1207.73 L1144.94 1207.73 L1144.36 1207.73 L1143.77 1207.73 L1143.18 1207.73 L1142.6 1207.73 L1142.01 1207.73 L1141.42 1207.73 L1140.84 1207.73 L1140.25 1207.73 L1139.67 1207.73 L1139.08 1207.73 L1138.49 1207.73 L1137.91 1207.73 L1137.32 1207.73 L1136.73 1207.73 L1136.15 1207.73 L1135.56 1207.73 L1134.97 1207.73 L1134.39 1207.73 L1133.8 1207.73 L1133.21 1207.73 L1132.63 1207.73 L1132.04 1207.73 L1131.46 1207.73 L1130.87 1207.73 L1130.28 1207.73 L1129.7 1207.73 L1129.11 1207.73 L1128.52 1207.73 L1127.94 1207.73 L1127.35 1207.73 L1126.76 1207.73 L1126.18 1207.73 L1125.59 1207.73 L1125.01 1207.73 L1124.42 1207.73 L1123.83 1207.73 L1123.25 1207.73 L1122.66 1207.73 L1122.07 1207.73 L1121.49 1207.73 L1120.9 1207.73 L1120.31 1207.73 L1119.73 1207.73 L1119.14 1207.73 L1118.55 1207.73 L1117.97 1207.73 L1117.38 1207.73 L1116.8 1207.73 L1116.21 1207.73 L1115.62 1207.73 L1115.04 1207.73 L1114.45 1207.73 L1113.86 1207.73 L1113.28 1207.73 L1112.69 1207.73 L1112.1 1207.73 L1111.52 1207.73 L1110.93 1207.73 L1110.34 1207.73 L1109.76 1207.73 L1109.17 1207.73 L1108.59 1207.73 L1108 1207.73 L1107.41 1207.73 L1106.83 1207.73 L1106.24 1207.73 L1105.65 1207.73 L1105.07 1207.73 L1104.48 1207.73 L1103.89 1207.73 L1103.31 1207.73 L1102.72 1207.73 L1102.14 1207.73 L1101.55 1207.73 L1100.96 1207.73 L1100.38 1207.73 L1099.79 1207.73 L1099.2 1207.73 L1098.62 1207.73 L1098.03 1207.73 L1097.44 1207.73 L1096.86 1207.73 L1096.27 1207.73 L1095.68 1207.73 L1095.1 1207.73 L1094.51 1207.73 L1093.93 1207.73 L1093.34 1207.73 L1092.75 1207.73 L1092.17 1207.73 L1091.58 1207.73 L1090.99 1207.73 L1090.41 1207.73 L1089.82 1207.73 L1089.23 1207.73 L1088.65 1207.73 L1088.06 1207.73 L1087.47 1207.73 L1086.89 1207.73 L1086.3 1207.73 L1085.72 1207.73 L1085.13 1207.73 L1084.54 1207.73 L1083.96 1207.73 L1083.37 1207.73 L1082.78 1207.73 L1082.2 1207.73 L1081.61 1207.73 L1081.02 1207.73 L1080.44 1207.73 L1079.85 1207.73 L1079.26 1207.73 L1078.68 1207.73 L1078.09 1207.73 L1077.51 1207.73 L1076.92 1207.73 L1076.33 1207.73 L1075.75 1207.73 L1075.16 1207.73 L1074.57 1207.73 L1073.99 1207.73 L1073.4 1207.73 L1072.81 1207.73 L1072.23 1207.73 L1071.64 1207.73 L1071.06 1207.73 L1070.47 1207.73 L1069.88 1207.73 L1069.3 1207.73 L1068.71 1207.73 L1068.12 1207.73 L1067.54 1207.73 L1066.95 1207.73 L1066.36 1207.73 L1065.78 1207.73 L1065.19 1207.73 L1064.6 1207.73 L1064.02 1207.73 L1063.43 1207.73 L1062.85 1207.73 L1062.26 1207.73 L1061.67 1207.73 L1061.09 1207.73 L1060.5 1207.73 L1059.91 1207.73 L1059.33 1207.73 L1058.74 1207.73 L1058.15 1207.73 L1057.57 1207.73 L1056.98 1207.73 L1056.39 1207.73 L1055.81 1207.73 L1055.22 1207.73 L1054.64 1207.73 L1054.05 1207.73 L1053.46 1207.73 L1052.88 1207.73 L1052.29 1207.73 L1051.7 1207.73 L1051.12 1207.73 L1050.53 1207.73 L1049.94 1207.73 L1049.36 1207.73 L1048.77 1207.73 L1048.19 1207.73 L1047.6 1207.73 L1047.01 1207.73 L1046.43 1207.73 L1045.84 1207.73 L1045.25 1207.73 L1044.67 1207.73 L1044.08 1207.73 L1043.49 1207.73 L1042.91 1207.73 L1042.32 1207.73 L1041.73 1207.73 L1041.15 1207.73 L1040.56 1207.73 L1039.98 1207.73 L1039.39 1207.73 L1038.8 1207.73 L1038.22 1207.73 L1037.63 1207.73 L1037.04 1207.73 L1036.46 1207.73 L1035.87 1207.73 L1035.28 1207.73 L1034.7 1207.73 L1034.11 1207.73 L1033.52 1207.73 L1032.94 1207.73 L1032.35 1207.73 L1031.77 1207.73 L1031.18 1207.73 L1030.59 1207.73 L1030.01 1207.73 L1029.42 1207.73 L1028.83 1207.73 L1028.25 1207.73 L1027.66 1207.73 L1027.07 1207.73 L1026.49 1207.73 L1025.9 1207.73 L1025.32 1207.73 L1024.73 1207.73 L1024.14 1207.73 L1023.56 1207.73 L1022.97 1207.73 L1022.38 1207.73 L1021.8 1207.73 L1021.21 1207.73 L1020.62 1207.73 L1020.04 1207.73 L1019.45 1207.73 L1018.86 1207.73 L1018.28 1207.73 L1017.69 1207.73 L1017.11 1207.73 L1016.52 1207.73 L1015.93 1207.73 L1015.35 1207.73 L1014.76 1207.73 L1014.17 1207.73 L1013.59 1207.73 L1013 1207.73 L1012.41 1207.73 L1011.83 1207.73 L1011.24 1207.73 L1010.65 1207.73 L1010.07 1207.73 L1009.48 1207.73 L1008.9 1207.73 L1008.31 1207.73 L1007.72 1207.73 L1007.14 1207.73 L1006.55 1207.73 L1005.96 1207.73 L1005.38 1207.73 L1004.79 1207.73 L1004.2 1207.73 L1003.62 1207.73 L1003.03 1207.73 L1002.44 1207.73 L1001.86 1207.73 L1001.27 1207.73 L1000.69 1207.73 L1000.1 1207.73 L999.513 1207.73 L998.926 1207.73 L998.34 1207.73 L997.754 1207.73 L997.167 1207.73 L996.581 1207.73 L995.994 1207.73 L995.408 1207.73 L994.822 1207.73 L994.235 1207.73 L993.649 1207.73 L993.062 1207.73 L992.476 1207.73 L991.889 1207.73 L991.303 1207.73 L990.717 1207.73 L990.13 1207.73 L989.544 1207.73 L988.957 1207.73 L988.371 1207.73 L987.785 1207.73 L987.198 1207.73 L986.612 1207.73 L986.025 1207.73  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1208.14 986.612,1208.14 987.198,1208.14 987.785,1208.14 988.371,1208.14 988.957,1208.14 989.544,1208.14 990.13,1208.14 990.717,1208.14 991.303,1208.14 991.889,1208.14 992.476,1208.14 993.062,1208.14 993.649,1208.14 994.235,1208.14 994.822,1208.14 995.408,1208.14 995.994,1208.14 996.581,1208.14 997.167,1208.14 997.754,1208.14 998.34,1208.14 998.926,1208.14 999.513,1208.14 1000.1,1208.14 1000.69,1208.14 1001.27,1208.14 1001.86,1208.14 1002.44,1208.14 1003.03,1208.14 1003.62,1208.14 1004.2,1208.14 1004.79,1208.14 1005.38,1208.14 1005.96,1208.14 1006.55,1208.14 1007.14,1208.14 1007.72,1208.14 1008.31,1208.14 1008.9,1208.14 1009.48,1208.14 1010.07,1208.14 1010.65,1208.14 1011.24,1208.14 1011.83,1208.14 1012.41,1208.14 1013,1208.14 1013.59,1208.14 1014.17,1208.14 1014.76,1208.14 1015.35,1208.14 1015.93,1208.14 1016.52,1208.14 1017.11,1208.14 1017.69,1208.14 1018.28,1208.14 1018.86,1208.14 1019.45,1208.14 1020.04,1208.14 1020.62,1208.14 1021.21,1208.14 1021.8,1208.14 1022.38,1208.14 1022.97,1208.14 1023.56,1208.14 1024.14,1208.14 1024.73,1208.14 1025.32,1208.14 1025.9,1208.14 1026.49,1208.14 1027.07,1208.14 1027.66,1208.14 1028.25,1208.14 1028.83,1208.14 1029.42,1208.14 1030.01,1208.14 1030.59,1208.14 1031.18,1208.14 1031.77,1208.14 1032.35,1208.14 1032.94,1208.14 1033.52,1208.14 1034.11,1208.14 1034.7,1208.14 1035.28,1208.14 1035.87,1208.14 1036.46,1208.14 1037.04,1208.14 1037.63,1208.14 1038.22,1208.14 1038.8,1208.14 1039.39,1208.14 1039.98,1208.14 1040.56,1208.14 1041.15,1208.14 1041.73,1208.14 1042.32,1208.14 1042.91,1208.14 1043.49,1208.14 1044.08,1208.14 1044.67,1208.14 1045.25,1208.14 1045.84,1208.14 1046.43,1208.14 1047.01,1208.14 1047.6,1208.14 1048.19,1208.14 1048.77,1208.14 1049.36,1208.14 1049.94,1208.14 1050.53,1208.14 1051.12,1208.14 1051.7,1208.14 1052.29,1208.14 1052.88,1208.14 1053.46,1208.14 1054.05,1208.14 1054.64,1208.14 1055.22,1208.14 1055.81,1208.14 1056.39,1208.14 1056.98,1208.14 1057.57,1208.14 1058.15,1208.14 1058.74,1208.14 1059.33,1208.14 1059.91,1208.14 1060.5,1208.14 1061.09,1208.14 1061.67,1208.14 1062.26,1208.14 1062.85,1208.14 1063.43,1208.14 1064.02,1208.14 1064.6,1208.14 1065.19,1208.14 1065.78,1208.14 1066.36,1208.14 1066.95,1208.14 1067.54,1208.14 1068.12,1208.14 1068.71,1208.14 1069.3,1208.14 1069.88,1208.14 1070.47,1208.14 1071.06,1208.14 1071.64,1208.14 1072.23,1208.14 1072.81,1208.14 1073.4,1208.14 1073.99,1208.14 1074.57,1208.14 1075.16,1208.14 1075.75,1208.14 1076.33,1208.14 1076.92,1208.14 1077.51,1208.14 1078.09,1208.14 1078.68,1208.14 1079.26,1208.14 1079.85,1208.14 1080.44,1208.14 1081.02,1208.14 1081.61,1208.14 1082.2,1208.14 1082.78,1208.14 1083.37,1208.14 1083.96,1208.14 1084.54,1208.14 1085.13,1208.14 1085.72,1208.14 1086.3,1208.14 1086.89,1208.14 1087.47,1208.14 1088.06,1208.14 1088.65,1208.14 1089.23,1208.14 1089.82,1208.14 1090.41,1208.14 1090.99,1208.14 1091.58,1208.14 1092.17,1208.14 1092.75,1208.14 1093.34,1208.14 1093.93,1208.14 1094.51,1208.14 1095.1,1208.14 1095.68,1208.14 1096.27,1208.14 1096.86,1208.14 1097.44,1208.14 1098.03,1208.14 1098.62,1208.14 1099.2,1208.14 1099.79,1208.14 1100.38,1208.14 1100.96,1208.14 1101.55,1208.14 1102.14,1208.14 1102.72,1208.14 1103.31,1208.14 1103.89,1208.14 1104.48,1208.14 1105.07,1208.14 1105.65,1208.14 1106.24,1208.14 1106.83,1208.14 1107.41,1208.14 1108,1208.14 1108.59,1208.14 1109.17,1208.14 1109.76,1208.14 1110.34,1208.14 1110.93,1208.14 1111.52,1208.14 1112.1,1208.14 1112.69,1208.14 1113.28,1208.14 1113.86,1208.14 1114.45,1208.14 1115.04,1208.14 1115.62,1208.14 1116.21,1208.14 1116.8,1208.14 1117.38,1208.14 1117.97,1208.14 1118.55,1208.14 1119.14,1208.14 1119.73,1208.14 1120.31,1208.14 1120.9,1208.14 1121.49,1208.14 1122.07,1208.14 1122.66,1208.14 1123.25,1208.14 1123.83,1208.14 1124.42,1208.14 1125.01,1208.14 1125.59,1208.14 1126.18,1208.14 1126.76,1208.14 1127.35,1208.14 1127.94,1208.14 1128.52,1208.14 1129.11,1208.14 1129.7,1208.14 1130.28,1208.14 1130.87,1208.14 1131.46,1208.14 1132.04,1208.14 1132.63,1208.14 1133.21,1208.14 1133.8,1208.14 1134.39,1208.14 1134.97,1208.14 1135.56,1208.14 1136.15,1208.14 1136.73,1208.14 1137.32,1208.14 1137.91,1208.14 1138.49,1208.14 1139.08,1208.14 1139.67,1208.14 1140.25,1208.14 1140.84,1208.14 1141.42,1208.14 1142.01,1208.14 1142.6,1208.14 1143.18,1208.14 1143.77,1208.14 1144.36,1208.14 1144.94,1208.14 1145.53,1208.14 1146.12,1208.14 1146.7,1208.14 1147.29,1208.14 1147.88,1208.14 1148.46,1208.14 1149.05,1208.14 1149.63,1208.14 1150.22,1208.14 1150.81,1208.14 1151.39,1208.14 1151.98,1208.14 1152.57,1208.14 1153.15,1208.14 1153.74,1208.14 1154.33,1208.14 1154.91,1208.14 1155.5,1208.14 1156.09,1208.14 1156.67,1208.14 1157.26,1208.14 1157.84,1208.14 1158.43,1208.14 1159.02,1208.14 1159.6,1208.14 1160.19,1208.14 1160.78,1208.14 1161.36,1208.14 1161.95,1208.14 1162.54,1208.14 1163.12,1208.14 1163.71,1208.14 1164.29,1208.14 1164.88,1208.14 1165.47,1208.14 1166.05,1208.14 1166.64,1208.14 1167.23,1208.14 1167.81,1208.14 1168.4,1208.14 1168.99,1208.14 1169.57,1208.14 1170.16,1208.14 1170.75,1208.14 1171.33,1208.14 1171.92,1208.14 1172.5,1208.14 1173.09,1208.14 1173.68,1208.14 1174.26,1208.14 1174.85,1208.14 1175.44,1208.14 1176.02,1208.14 1176.61,1208.14 1177.2,1208.14 1177.78,1208.14 1178.37,1208.14 1178.96,1208.14 1179.54,1208.14 1180.13,1208.14 1180.71,1208.14 1181.3,1208.14 1181.89,1208.14 1182.47,1208.14 1183.06,1208.14 1183.65,1208.14 1184.23,1208.14 1184.82,1208.14 1185.41,1208.14 1185.99,1208.14 1186.58,1208.14 1187.16,1208.14 1187.75,1208.14 1188.34,1208.14 1188.92,1208.14 1189.51,1208.14 1190.1,1208.14 1190.68,1208.14 1191.27,1208.14 1191.86,1208.14 1192.44,1208.14 1193.03,1208.14 1193.62,1208.14 1194.2,1208.14 1194.79,1208.14 1195.37,1208.14 1195.96,1208.14 1196.55,1208.14 1197.13,1208.14 1197.72,1208.14 1198.31,1208.14 1198.89,1208.14 1199.48,1208.14 1200.07,1208.14 1200.65,1208.14 1201.24,1208.14 1201.83,1208.14 1202.41,1208.14 1203,1208.14 1203.58,1208.14 1204.17,1208.14 1204.76,1208.14 1205.34,1208.14 1205.93,1208.14 1206.52,1208.14 1207.1,1208.14 1207.69,1208.14 1208.28,1208.14 1208.86,1208.14 1209.45,1208.14 1210.03,1208.14 1210.62,1208.14 1211.21,1208.14 1211.79,1208.14 1212.38,1208.14 1212.97,1208.14 1213.55,1208.14 1214.14,1208.14 1214.73,1208.14 1215.31,1208.14 1215.9,1208.14 1216.49,1208.14 1217.07,1208.14 1217.66,1208.14 1218.24,1208.14 1218.83,1208.14 1219.42,1208.14 1220,1208.14 1220.59,1208.14 1221.18,1208.14 1221.76,1208.14 1222.35,1208.14 1222.94,1208.14 1223.52,1208.14 1224.11,1208.14 1224.7,1208.14 1225.28,1208.14 1225.87,1208.14 1226.45,1208.14 1227.04,1208.14 1227.63,1208.14 1228.21,1208.14 1228.8,1208.14 1229.39,1208.14 1229.97,1208.14 1230.56,1208.14 1231.15,1208.14 1231.73,1208.14 1232.32,1208.14 1232.91,1208.14 1233.49,1208.14 1234.08,1208.14 1234.66,1208.14 1235.25,1208.14 1235.84,1208.14 1236.42,1208.14 1237.01,1208.14 1237.6,1208.14 1238.18,1208.14 1238.77,1208.14 1239.36,1208.14 1239.94,1208.14 1240.53,1208.14 1241.11,1208.14 1241.7,1208.14 1242.29,1208.14 1242.87,1208.14 1243.46,1208.14 1244.05,1208.14 1244.63,1208.14 1245.22,1208.14 1245.81,1208.14 1246.39,1208.14 1246.98,1208.14 1247.57,1208.14 1248.15,1208.14 1248.74,1208.14 1249.32,1208.14 1249.91,1208.14 1250.5,1208.14 1251.08,1208.14 1251.67,1208.14 1252.26,1208.14 1252.84,1208.14 1253.43,1208.14 1254.02,1208.14 1254.6,1208.14 1255.19,1208.14 1255.78,1208.14 1256.36,1208.14 1256.95,1208.14 1257.53,1208.14 1258.12,1208.14 1258.71,1208.14 1259.29,1208.14 1259.88,1208.14 1260.47,1208.14 1261.05,1208.14 1261.64,1208.14 1262.23,1208.14 1262.81,1208.14 1263.4,1208.14 1263.98,1208.14 1264.57,1208.14 1265.16,1208.14 1265.74,1208.14 1266.33,1208.14 1266.92,1208.14 1267.5,1208.14 1268.09,1208.14 1268.68,1208.14 1269.26,1208.14 1269.85,1208.14 1270.44,1208.14 1271.02,1208.14 1271.61,1208.14 1272.19,1208.14 1272.78,1208.14 1273.37,1208.14 1273.95,1208.14 1274.54,1208.14 1275.13,1208.14 1275.71,1208.14 1276.3,1208.14 1276.89,1208.14 1277.47,1208.14 1278.06,1208.14 1278.65,1208.14 1279.23,1208.14 1279.82,1208.14 1280.4,1208.14 1280.99,1208.14 1281.58,1208.14 1282.16,1208.14 1282.75,1208.14 1283.34,1208.14 1283.92,1208.14 1284.51,1208.14 1285.1,1208.14 1285.68,1208.14 1286.27,1208.14 1286.86,1208.14 1287.44,1208.14 1288.03,1208.14 1288.61,1208.14 1289.2,1208.14 1289.79,1208.14 1290.37,1208.14 1290.96,1208.14 1291.55,1208.14 1292.13,1208.14 1292.72,1208.14 1293.31,1208.14 1293.89,1208.14 1294.48,1208.14 1295.06,1208.14 1295.65,1208.14 1296.24,1208.14 1296.82,1208.14 1297.41,1208.14 1298,1208.14 1298.58,1208.14 1299.17,1208.14 1299.76,1208.14 1300.34,1208.14 1300.93,1208.14 1301.52,1208.14 1302.1,1208.14 1302.69,1208.14 1303.27,1208.14 1303.86,1208.14 1304.45,1208.14 1305.03,1208.14 1305.62,1208.14 1306.21,1208.14 1306.79,1208.14 1307.38,1208.14 1307.97,1208.14 1308.55,1208.14 1309.14,1208.14 1309.73,1208.14 1310.31,1208.14 1310.9,1208.14 1311.48,1208.14 1312.07,1208.14 1312.66,1208.14 1313.24,1208.14 1313.83,1208.14 1314.42,1208.14 1315,1208.14 1315.59,1208.14 1316.18,1208.14 1316.76,1208.14 1317.35,1208.14 1317.93,1208.14 1318.52,1208.14 1319.11,1208.14 1319.69,1208.14 1320.28,1208.14 1320.87,1208.14 1321.45,1208.14 1322.04,1208.14 1322.63,1208.14 1323.21,1208.14 1323.8,1208.14 1324.39,1208.14 1324.97,1208.14 1325.56,1208.14 1326.14,1208.14 1326.73,1208.14 1327.32,1208.14 1327.9,1208.14 1328.49,1208.14 1329.08,1208.14 1329.66,1208.14 1330.25,1208.14 1330.84,1208.14 1331.42,1208.14 1332.01,1208.14 1332.6,1208.14 1333.18,1208.14 1333.77,1208.14 1334.35,1208.14 1334.94,1208.14 1335.53,1208.14 1336.11,1208.14 1336.7,1208.14 1337.29,1208.14 1337.87,1208.14 1338.46,1208.14 1339.05,1208.14 1339.63,1208.14 1340.22,1208.14 1340.8,1208.14 1341.39,1208.14 1341.98,1208.14 1342.56,1208.14 1343.15,1208.14 1343.74,1208.14 1344.32,1208.14 1344.91,1208.14 1345.5,1208.14 1346.08,1208.14 1346.67,1208.14 1347.26,1208.14 1347.84,1208.14 1348.43,1208.14 1349.01,1208.14 1349.6,1208.14 1350.19,1208.14 1350.77,1208.14 1351.36,1208.14 1351.95,1208.14 1352.53,1208.14 1353.12,1208.14 1353.71,1208.14 1354.29,1208.14 1354.88,1208.14 1355.47,1208.14 1356.05,1208.14 1356.64,1208.14 1357.22,1208.14 1357.81,1208.14 1358.4,1208.14 1358.98,1208.14 1359.57,1208.14 1360.16,1208.14 1360.74,1208.14 1361.33,1208.14 1361.92,1208.14 1362.5,1208.14 1363.09,1208.14 1363.68,1208.14 1364.26,1208.14 1364.85,1208.14 1365.43,1208.14 1366.02,1208.14 1366.61,1208.14 1367.19,1208.14 1367.78,1208.14 1368.37,1208.14 1368.95,1208.14 1369.54,1208.14 1370.13,1208.14 1370.71,1208.14 1371.3,1208.14 1371.88,1208.14 1372.47,1208.14 1373.06,1208.14 1373.64,1208.14 1374.23,1208.14 1374.82,1208.14 1375.4,1208.14 1375.99,1208.14 1376.58,1208.14 1377.16,1208.14 1377.75,1208.14 1378.34,1208.14 1378.92,1208.14 1379.51,1208.14 1380.09,1208.14 1380.68,1208.14 1381.27,1208.14 1381.85,1208.14 1382.44,1208.14 1383.03,1208.14 1383.61,1208.14 1384.2,1208.14 1384.79,1208.14 1385.37,1208.14 1385.96,1208.14 1386.55,1208.14 1387.13,1208.14 1387.72,1208.14 1388.3,1208.14 1388.89,1208.14 1389.48,1208.14 1390.06,1208.14 1390.65,1208.14 1391.24,1208.14 1391.82,1208.14 1392.41,1208.14 1393,1208.14 1393.58,1208.14 1394.17,1208.14 1394.75,1208.14 1395.34,1208.14 1395.93,1208.14 1396.51,1208.14 1397.1,1208.14 1397.69,1208.14 1398.27,1208.14 1398.86,1208.14 1399.45,1208.14 1400.03,1208.14 1400.62,1208.14 1401.21,1208.14 1401.79,1208.14 1402.38,1208.14 1402.96,1208.14 1403.55,1208.14 1404.14,1208.14 1404.72,1208.14 1405.31,1208.14 1405.9,1208.14 1406.48,1208.14 1407.07,1208.14 1407.66,1208.14 1408.24,1208.14 1408.83,1208.14 1409.42,1208.14 1410,1208.14 1410.59,1208.14 1411.17,1208.14 1411.76,1208.14 1412.35,1208.14 1412.93,1208.14 1413.52,1208.14 1414.11,1208.14 1414.69,1208.14 1415.28,1208.14 1415.87,1208.14 1416.45,1208.14 1417.04,1208.14 1417.63,1208.14 1418.21,1208.14 1418.8,1208.14 1419.38,1208.14 1419.97,1208.14 1420.56,1208.14 1421.14,1208.14 1421.73,1208.14 1422.32,1208.14 1422.9,1208.14 1423.49,1208.14 1424.08,1208.14 1424.66,1208.14 1425.25,1208.14 1425.83,1208.14 1426.42,1208.14 1427.01,1208.14 1427.59,1208.14 1428.18,1208.14 1428.77,1208.14 1429.35,1208.14 1429.94,1208.14 1430.53,1208.14 1431.11,1208.14 1431.7,1208.14 1432.29,1208.14 1432.87,1208.14 1433.46,1208.14 1434.04,1208.14 1434.63,1208.14 1435.22,1208.14 1435.8,1208.14 1436.39,1208.14 1436.98,1208.14 1437.56,1208.14 1438.15,1208.14 1438.74,1208.14 1439.32,1208.14 1439.91,1208.14 1440.5,1208.14 1441.08,1208.14 1441.67,1208.14 1442.25,1208.14 1442.84,1208.14 1443.43,1208.14 1444.01,1208.14 1444.6,1208.14 1445.19,1208.14 1445.77,1208.14 1446.36,1208.14 1446.95,1208.14 1447.53,1208.14 1448.12,1208.14 1448.7,1208.14 1449.29,1208.14 1449.88,1208.14 1450.46,1208.14 1451.05,1208.14 1451.64,1208.14 1452.22,1208.14 1452.81,1208.14 1453.4,1208.14 1453.98,1208.14 1454.57,1208.14 1455.16,1208.14 1455.74,1208.14 1456.33,1208.14 1456.91,1208.14 1457.5,1208.14 1458.09,1208.14 1458.67,1208.14 1459.26,1208.14 1459.85,1208.14 1460.43,1208.14 1461.02,1208.14 1461.61,1208.14 1462.19,1208.14 1462.78,1208.14 1463.37,1208.14 1463.95,1208.14 1464.54,1208.14 1465.12,1208.14 1465.71,1208.14 1466.3,1208.14 1466.88,1208.14 1467.47,1208.14 1468.06,1208.14 1468.64,1208.14 1469.23,1208.14 1469.82,1208.14 1470.4,1208.14 1470.99,1208.14 1471.57,1208.14 1472.16,1208.14 1472.75,1208.14 1473.33,1208.14 1473.92,1208.14 1474.51,1208.14 1475.09,1208.14 1475.68,1208.14 1476.27,1208.14 1476.85,1208.14 1477.44,1208.14 1478.03,1208.14 1478.61,1208.14 1479.2,1208.14 1479.78,1208.14 1480.37,1208.14 1480.96,1208.14 1481.54,1208.14 1482.13,1208.14 1482.72,1208.14 1483.3,1208.14 1483.89,1208.14 1484.48,1208.14 1485.06,1208.14 1485.65,1208.14 1486.24,1208.14 1486.82,1208.14 1487.41,1208.14 1487.99,1208.14 1488.58,1208.14 1489.17,1208.14 1489.75,1208.14 1490.34,1208.14 1490.93,1208.14 1491.51,1208.14 1492.1,1208.14 1492.69,1208.14 1493.27,1208.14 1493.86,1208.14 1494.45,1208.14 1495.03,1208.14 1495.62,1208.14 1496.2,1208.14 1496.79,1208.14 1497.38,1208.14 1497.96,1208.14 1498.55,1208.14 1499.14,1208.14 1499.72,1208.14 1500.31,1208.14 1500.9,1208.14 1501.48,1208.14 1502.07,1208.14 1502.65,1208.14 1503.24,1208.14 1503.83,1208.14 1504.41,1208.14 1505,1208.14 1505.59,1208.14 1506.17,1208.14 1506.76,1208.14 1507.35,1208.14 1507.93,1208.14 1508.52,1208.14 1509.11,1208.14 1509.69,1208.14 1510.28,1208.14 1510.86,1208.14 1511.45,1208.14 1512.04,1208.14 1512.62,1208.14 1513.21,1208.14 1513.8,1208.14 1514.38,1208.14 1514.97,1208.14 1515.56,1208.14 1516.14,1208.14 1516.73,1208.14 1517.32,1208.14 1517.9,1208.14 1518.49,1208.14 1519.07,1208.14 1519.66,1208.14 1520.25,1208.14 1520.83,1208.14 1521.42,1208.14 1522.01,1208.14 1522.59,1208.14 1523.18,1208.14 1523.77,1208.14 1524.35,1208.14 1524.94,1208.14 1525.52,1208.14 1526.11,1208.14 1526.7,1208.14 1527.28,1208.14 1527.87,1208.14 1528.46,1208.14 1529.04,1208.14 1529.63,1208.14 1530.22,1208.14 1530.8,1208.14 1531.39,1208.14 1531.98,1208.14 1532.56,1208.14 1533.15,1208.14 1533.73,1208.14 1534.32,1208.14 1534.91,1208.14 1535.49,1208.14 1536.08,1208.14 1536.67,1208.14 1537.25,1208.14 1537.84,1208.14 1538.43,1208.14 1539.01,1208.14 1539.6,1208.14 1540.19,1208.14 1540.77,1208.14 1541.36,1208.14 1541.94,1208.14 1542.53,1208.14 1543.12,1208.14 1543.7,1208.14 1544.29,1208.14 1544.88,1208.14 1545.46,1208.14 1546.05,1208.14 1546.64,1208.14 1547.22,1208.14 1547.81,1208.14 1548.4,1208.14 1548.98,1208.14 1549.57,1208.14 1550.15,1208.14 1550.74,1208.14 1551.33,1208.14 1551.91,1208.14 1552.5,1208.14 1553.09,1208.14 1553.67,1208.14 1554.26,1208.14 1554.85,1208.14 1555.43,1208.14 1556.02,1208.14 1556.6,1208.14 1557.19,1208.14 1557.78,1208.14 1558.36,1208.14 1558.95,1208.14 1559.54,1208.14 1560.12,1208.14 1560.71,1208.14 1561.3,1208.14 1561.88,1208.14 1562.47,1208.14 1563.06,1208.14 1563.64,1208.14 1564.23,1208.14 1564.81,1208.14 1565.4,1208.14 1565.99,1208.14 1566.57,1208.14 1567.16,1208.14 1567.75,1208.14 1568.33,1208.14 1568.92,1208.14 1569.51,1208.14 1570.09,1208.14 1570.68,1208.14 1571.27,1208.14 1571.85,1208.14 1572.44,1208.14 1573.02,1208.14 1573.61,1208.14 1574.2,1208.14 1574.78,1208.14 1575.37,1208.14 1575.96,1208.14 1576.54,1208.14 1577.13,1208.14 1577.72,1208.14 1578.3,1208.14 1578.89,1208.14 1579.47,1208.14 1580.06,1208.14 1580.65,1208.14 1581.23,1208.14 1581.82,1208.14 1582.41,1208.14 1582.99,1208.14 1583.58,1208.14 1584.17,1208.14 1584.75,1208.14 1585.34,1208.14 1585.93,1208.14 1586.51,1208.14 1587.1,1208.14 1587.68,1208.14 1588.27,1208.14 1588.86,1208.14 1589.44,1208.14 1590.03,1208.14 1590.62,1208.14 1591.2,1208.14 1591.79,1208.14 1592.38,1208.14 1592.96,1208.14 1593.55,1208.14 1594.14,1208.14 1594.72,1208.14 1595.31,1208.14 1595.89,1208.14 1596.48,1208.14 1597.07,1208.14 1597.65,1208.14 1598.24,1208.14 1598.83,1208.14 1599.41,1208.14 1600,1208.14 1600.59,1208.14 1601.17,1208.14 1601.76,1208.14 1602.34,1208.14 1602.93,1208.14 1603.52,1208.14 1604.1,1208.14 1604.69,1208.14 1605.28,1208.14 1605.86,1208.14 1606.45,1208.14 1607.04,1208.14 1607.62,1208.14 1608.21,1208.14 1608.8,1208.14 1609.38,1208.14 1609.97,1208.14 1610.55,1208.14 1611.14,1208.14 1611.73,1208.14 1612.31,1208.14 1612.9,1208.14 1613.49,1208.14 1614.07,1208.14 1614.66,1208.14 1615.25,1208.14 1615.83,1208.14 1616.42,1208.14 1617.01,1208.14 1617.59,1208.14 1618.18,1208.14 1618.76,1208.14 1619.35,1208.14 1619.94,1208.14 1620.52,1208.14 1621.11,1208.14 1621.7,1208.14 1622.28,1208.14 1622.87,1208.14 1623.46,1208.14 1624.04,1208.14 1624.63,1208.14 1625.22,1208.14 1625.8,1208.14 1626.39,1208.14 1626.97,1208.14 1627.56,1208.14 1628.15,1208.14 1628.73,1208.14 1629.32,1208.14 1629.91,1208.14 1630.49,1208.14 1631.08,1208.14 1631.67,1208.14 1632.25,1208.14 1632.84,1208.14 1633.42,1208.14 1634.01,1208.14 1634.6,1208.14 1635.18,1208.14 1635.77,1208.14 1636.36,1208.14 1636.94,1208.14 1637.53,1208.14 1638.12,1208.14 1638.7,1208.14 1639.29,1208.14 1639.88,1208.14 1640.46,1208.14 1641.05,1208.14 1641.63,1208.14 1642.22,1208.14 1642.81,1208.14 1643.39,1208.14 1643.98,1208.14 1644.57,1208.14 1645.15,1208.14 1645.74,1208.14 1646.33,1208.14 1646.91,1208.14 1647.5,1208.14 1648.09,1208.14 1648.67,1208.14 1649.26,1208.14 1649.84,1208.14 1650.43,1208.14 1651.02,1208.14 1651.6,1208.14 1652.19,1208.14 1652.78,1208.14 1653.36,1208.14 1653.95,1208.14 1654.54,1208.14 1655.12,1208.14 1655.71,1208.14 1656.29,1208.14 1656.88,1208.14 1657.47,1208.14 1658.05,1208.14 1658.64,1208.14 1659.23,1208.14 1659.81,1208.14 1660.4,1208.14 1660.99,1208.14 1661.57,1208.14 1662.16,1208.14 1662.75,1208.14 1663.33,1208.14 1663.92,1208.14 1664.5,1208.14 1665.09,1208.14 1665.68,1208.14 1666.26,1208.14 1666.85,1208.14 1667.44,1208.14 1668.02,1208.14 1668.61,1208.14 1669.2,1208.14 1669.78,1208.14 1670.37,1208.14 1670.96,1208.14 1671.54,1208.14 1672.13,1208.14 1672.71,1208.14 1673.3,1208.14 1673.89,1208.14 1674.47,1208.14 1675.06,1208.14 1675.65,1208.14 1676.23,1208.14 1676.82,1208.14 1677.41,1208.14 1677.99,1208.14 1678.58,1208.14 1679.17,1208.14 1679.75,1208.14 1680.34,1208.14 1680.92,1208.14 1681.51,1208.14 1682.1,1208.14 1682.68,1208.14 1683.27,1208.14 1683.86,1208.14 1684.44,1208.14 1685.03,1208.14 1685.62,1208.14 1686.2,1208.14 1686.79,1208.14 1687.37,1208.14 1687.96,1208.14 1688.55,1208.14 1689.13,1208.14 1689.72,1208.14 1690.31,1208.14 1690.89,1208.14 1691.48,1208.14 1692.07,1208.14 1692.65,1208.14 1693.24,1208.14 1693.83,1208.14 1694.41,1208.14 1695,1208.14 1695.58,1208.14 1696.17,1208.14 1696.76,1208.14 1697.34,1208.14 1697.93,1208.14 1698.52,1208.14 1699.1,1208.14 1699.69,1208.14 1700.28,1208.14 1700.86,1208.14 1701.45,1208.14 1702.04,1208.14 1702.62,1208.14 1703.21,1208.14 1703.79,1208.14 1704.38,1208.14 1704.97,1208.14 1705.55,1208.14 1706.14,1208.14 1706.73,1208.14 1707.31,1208.14 1707.9,1208.14 1708.49,1208.14 1709.07,1208.14 1709.66,1208.14 1710.24,1208.14 1710.83,1208.14 1711.42,1208.14 1712,1208.14 1712.59,1208.14 1713.18,1208.14 1713.76,1208.14 1714.35,1208.14 1714.94,1208.14 1715.52,1208.14 1716.11,1208.14 1716.7,1208.14 1717.28,1208.14 1717.87,1208.14 1718.45,1208.14 1719.04,1208.14 1719.63,1208.14 1720.21,1208.14 1720.8,1208.14 1721.39,1208.14 1721.97,1208.14 1722.56,1208.14 1723.15,1208.14 1723.73,1208.14 1724.32,1208.14 1724.91,1208.14 1725.49,1208.14 1726.08,1208.14 1726.66,1208.14 1727.25,1208.14 1727.84,1208.14 1728.42,1208.14 1729.01,1208.14 1729.6,1208.14 1730.18,1208.14 1730.77,1208.14 1731.36,1208.14 1731.94,1208.14 1732.53,1208.14 1733.11,1208.14 1733.7,1208.14 1734.29,1208.14 1734.87,1208.14 1735.46,1208.14 1736.05,1208.14 1736.63,1208.14 1737.22,1208.14 1737.81,1208.14 1738.39,1208.14 1738.98,1208.14 1739.57,1208.14 1740.15,1208.14 1740.74,1208.14 1741.32,1208.14 1741.91,1208.14 1742.5,1208.14 1743.08,1208.14 1743.67,1208.14 1744.26,1208.14 1744.84,1208.14 1745.43,1208.14 1746.02,1208.14 1746.6,1208.14 1747.19,1208.14 1747.78,1208.14 1748.36,1208.14 1748.95,1208.14 1749.53,1208.14 1750.12,1208.14 1750.71,1208.14 1751.29,1208.14 1751.88,1208.14 1752.47,1208.14 1753.05,1208.14 1753.64,1208.14 1754.23,1208.14 1754.81,1208.14 1755.4,1208.14 1755.99,1208.14 1756.57,1208.14 1757.16,1208.14 1757.74,1208.14 1758.33,1208.14 1758.92,1208.14 1759.5,1208.14 1760.09,1208.14 1760.68,1208.14 1761.26,1208.14 1761.85,1208.14 1762.44,1208.14 1763.02,1208.14 1763.61,1208.14 1764.19,1208.14 1764.78,1208.14 1765.37,1208.14 1765.95,1208.14 1766.54,1208.14 1767.13,1208.14 1767.71,1208.14 1768.3,1208.14 1768.89,1208.14 1769.47,1208.14 1770.06,1208.14 1770.65,1208.14 1771.23,1208.14 1771.82,1208.14 1772.4,1208.14 1772.99,1208.14 1773.58,1208.14 1774.16,1208.14 1774.75,1208.14 1775.34,1208.14 1775.92,1208.14 1776.51,1208.14 1777.1,1208.14 1777.68,1208.14 1778.27,1208.14 1778.86,1208.14 1779.44,1208.14 1780.03,1208.14 1780.61,1208.14 1781.2,1208.14 1781.79,1208.14 1782.37,1208.14 1782.96,1208.14 1783.55,1208.14 1784.13,1208.14 1784.72,1208.14 1785.31,1208.14 1785.89,1208.14 1786.48,1208.14 1787.06,1208.14 1787.65,1208.14 1788.24,1208.14 1788.82,1208.14 1789.41,1208.14 1790,1208.14 1790.58,1208.14 1791.17,1208.14 1791.76,1208.14 1792.34,1208.14 1792.93,1208.14 1793.52,1208.14 1794.1,1208.14 1794.69,1208.14 1795.27,1208.14 1795.86,1208.14 1796.45,1208.14 1797.03,1208.14 1797.62,1208.14 1798.21,1208.14 1798.79,1208.14 1799.38,1208.14 1799.97,1208.14 1800.55,1208.14 1801.14,1208.14 1801.73,1208.14 1802.31,1208.14 1802.9,1208.14 1803.48,1208.14 1804.07,1208.14 1804.66,1208.14 1805.24,1208.14 1805.83,1208.14 1806.42,1208.14 1807,1208.14 1807.59,1208.14 1808.18,1208.14 1808.76,1208.14 1809.35,1208.14 1809.94,1208.14 1810.52,1208.14 1811.11,1208.14 1811.69,1208.14 1812.28,1208.14 1812.87,1208.14 1813.45,1208.14 1814.04,1208.14 1814.63,1208.14 1815.21,1208.14 1815.8,1208.14 1816.39,1208.14 1816.97,1208.14 1817.56,1208.14 1818.14,1208.14 1818.73,1208.14 1819.32,1208.14 1819.9,1208.14 1820.49,1208.14 1821.08,1208.14 1821.66,1208.14 1822.25,1208.14 1822.84,1208.14 1823.42,1208.14 1824.01,1208.14 1824.6,1208.14 1825.18,1208.14 1825.77,1208.14 1826.35,1208.14 1826.94,1208.14 1827.53,1208.14 1828.11,1208.14 1828.7,1208.14 1829.29,1208.14 1829.87,1208.14 1830.46,1208.14 1831.05,1208.14 1831.63,1208.14 1832.22,1208.14 1832.81,1208.14 1833.39,1208.14 1833.98,1208.14 1834.56,1208.14 1835.15,1208.14 1835.74,1208.14 1836.32,1208.14 1836.91,1208.14 1837.5,1208.14 1838.08,1208.14 1838.67,1208.14 1839.26,1208.14 1839.84,1208.14 1840.43,1208.14 1841.01,1208.14 1841.6,1208.14 1842.19,1208.14 1842.77,1208.14 1843.36,1208.14 1843.95,1208.14 1844.53,1208.14 1845.12,1208.14 1845.71,1208.14 1846.29,1208.14 1846.88,1208.14 1847.47,1208.14 1848.05,1208.14 1848.64,1208.14 1849.22,1208.14 1849.81,1208.14 1850.4,1208.14 1850.98,1208.14 1851.57,1208.14 1852.16,1208.14 1852.74,1208.14 1853.33,1208.14 1853.92,1208.14 1854.5,1208.14 1855.09,1208.14 1855.68,1208.14 1856.26,1208.14 1856.85,1208.14 1857.43,1208.14 1858.02,1208.14 1858.61,1208.14 1859.19,1208.14 1859.78,1208.14 1860.37,1208.14 1860.95,1208.14 1861.54,1208.14 1862.13,1208.14 1862.71,1208.14 1863.3,1208.14 1863.88,1208.14 1864.47,1208.14 1865.06,1208.14 1865.64,1208.14 1866.23,1208.14 1866.82,1208.14 1867.4,1208.14 1867.99,1208.14 1868.58,1208.14 1869.16,1208.14 1869.75,1208.14 1870.34,1208.14 1870.92,1208.14 1871.51,1208.14 1872.09,1208.14 1872.68,1208.14 1873.27,1208.14 1873.85,1208.14 1874.44,1208.14 1875.03,1208.14 1875.61,1208.14 1876.2,1208.14 1876.79,1208.14 1877.37,1208.14 1877.96,1208.14 1878.55,1208.14 1879.13,1208.14 1879.72,1208.14 1880.3,1208.14 1880.89,1208.14 1881.48,1208.14 1882.06,1208.14 1882.65,1208.14 1883.24,1208.14 1883.82,1208.14 1884.41,1208.14 1885,1208.14 1885.58,1208.14 1886.17,1208.14 1886.76,1208.14 1887.34,1208.14 1887.93,1208.14 1888.51,1208.14 1889.1,1208.14 1889.69,1208.14 1890.27,1208.14 1890.86,1208.14 1891.45,1208.14 1892.03,1208.14 1892.62,1208.14 1893.21,1208.14 1893.79,1208.14 1894.38,1208.14 1894.96,1208.14 1895.55,1208.14 1896.14,1208.14 1896.72,1208.14 1897.31,1208.14 1897.9,1208.14 1898.48,1208.14 1899.07,1208.14 1899.66,1208.14 1900.24,1208.14 1900.83,1208.14 1901.42,1208.14 1902,1208.14 1902.59,1208.14 1903.17,1208.14 1903.76,1208.14 1904.35,1208.14 1904.93,1208.14 1905.52,1208.14 1906.11,1208.14 1906.69,1208.14 1907.28,1208.14 1907.87,1208.14 1908.45,1208.14 1909.04,1208.14 1909.63,1208.14 1910.21,1208.14 1910.8,1208.14 1911.38,1208.14 1911.97,1208.14 1912.56,1208.14 1913.14,1208.14 1913.73,1208.14 1914.32,1208.14 1914.9,1208.14 1915.49,1208.14 1916.08,1208.14 1916.66,1208.14 1917.25,1208.14 1917.83,1208.14 1918.42,1208.14 1919.01,1208.14 1919.59,1208.14 1920.18,1208.14 1920.77,1208.14 1921.35,1208.14 1921.94,1208.14 1922.53,1208.14 1923.11,1208.14 1923.7,1208.14 1924.29,1208.14 1924.87,1208.14 1925.46,1208.14 1926.04,1208.14 1926.63,1208.14 1927.22,1208.14 1927.8,1208.14 1928.39,1208.14 1928.98,1208.14 1929.56,1208.14 1930.15,1208.14 1930.74,1208.14 1931.32,1208.14 1931.91,1208.14 1932.5,1208.14 1933.08,1208.14 1933.67,1208.14 1934.25,1208.14 1934.84,1208.14 1935.43,1208.14 1936.01,1208.14 1936.6,1208.14 1937.19,1208.14 1937.77,1208.14 1938.36,1208.14 1938.95,1208.14 1939.53,1208.14 1940.12,1208.14 1940.71,1208.14 1941.29,1208.14 1941.88,1208.14 1942.46,1208.14 1943.05,1208.14 1943.64,1208.14 1944.22,1208.14 1944.81,1208.14 1945.4,1208.14 1945.98,1208.14 1946.57,1208.14 1947.16,1208.14 1947.74,1208.14 1948.33,1208.14 1948.91,1208.14 1949.5,1208.14 1950.09,1208.14 1950.67,1208.14 1951.26,1208.14 1951.85,1208.14 1952.43,1208.14 1953.02,1208.14 1953.61,1208.14 1954.19,1208.14 1954.78,1208.14 1955.37,1208.14 1955.95,1208.14 1956.54,1208.14 1957.12,1208.14 1957.71,1208.14 1958.3,1208.14 1958.88,1208.14 1959.47,1208.14 1960.06,1208.14 1960.64,1208.14 1961.23,1208.14 1961.82,1208.14 1962.4,1208.14 1962.99,1208.14 1963.58,1208.14 1964.16,1208.14 1964.75,1208.14 1965.33,1208.14 1965.92,1208.14 1966.51,1208.14 1967.09,1208.14 1967.68,1208.14 1968.27,1208.14 1968.85,1208.14 1969.44,1208.14 1970.03,1208.14 1970.61,1208.14 1971.2,1208.14 1971.78,1208.14 1972.37,1208.14 1972.96,1208.14 1973.54,1208.14 1974.13,1208.14 1974.72,1208.14 1975.3,1208.14 1975.89,1208.14 1976.48,1208.14 1977.06,1208.14 1977.65,1208.14 1978.24,1208.14 1978.82,1208.14 1979.41,1208.14 1979.99,1208.14 1980.58,1208.14 1981.17,1208.14 1981.75,1208.14 1982.34,1208.14 1982.93,1208.14 1983.51,1208.14 1984.1,1208.14 1984.69,1208.14 1985.27,1208.14 1985.86,1208.14 1986.45,1208.14 1987.03,1208.14 1987.62,1208.14 1988.2,1208.14 1988.79,1208.14 1989.38,1208.14 1989.96,1208.14 1990.55,1208.14 1991.14,1208.14 1991.72,1208.14 1992.31,1208.14 1992.9,1208.14 1993.48,1208.14 1994.07,1208.14 1994.65,1208.14 1995.24,1208.14 1995.83,1208.14 1996.41,1208.14 1997,1208.14 1997.59,1208.14 1998.17,1208.14 1998.76,1208.14 1999.35,1208.14 1999.93,1208.14 2000.52,1208.14 2001.11,1208.14 2001.69,1208.14 2002.28,1208.14 2002.86,1208.14 2003.45,1208.14 2004.04,1208.14 2004.62,1208.14 2005.21,1208.14 2005.8,1208.14 2006.38,1208.14 2006.97,1208.14 2007.56,1208.14 2008.14,1208.14 2008.73,1208.14 2009.32,1208.14 2009.9,1208.14 2010.49,1208.14 2011.07,1208.14 2011.66,1208.14 2012.25,1208.14 2012.83,1208.14 2013.42,1208.14 2014.01,1208.14 2014.59,1208.14 2015.18,1208.14 2015.77,1208.14 2016.35,1208.14 2016.94,1208.14 2017.53,1208.14 2018.11,1208.14 2018.7,1208.14 2019.28,1208.14 2019.87,1208.14 2020.46,1208.14 2021.04,1208.14 2021.63,1208.14 2022.22,1208.14 2022.8,1208.14 2023.39,1208.14 2023.98,1208.14 2024.56,1208.14 2025.15,1208.14 2025.73,1208.14 2026.32,1208.14 2026.91,1208.14 2027.49,1208.14 2028.08,1208.14 2028.67,1208.14 2029.25,1208.14 2029.84,1208.14 2030.43,1208.14 2031.01,1208.14 2031.6,1208.14 2032.19,1208.14 2032.77,1208.14 2033.36,1208.14 2033.94,1208.14 2034.53,1208.14 2035.12,1208.14 2035.7,1208.14 2036.29,1208.14 2036.88,1208.14 2037.46,1208.14 2038.05,1208.14 2038.64,1208.14 2039.22,1208.14 2039.81,1208.14 2040.4,1208.14 2040.98,1208.14 2041.57,1208.14 2042.15,1208.14 2042.74,1208.14 2043.33,1208.14 2043.91,1208.14 2044.5,1208.14 2045.09,1208.14 2045.67,1208.14 2046.26,1208.14 2046.85,1208.14 2047.43,1208.14 2048.02,1208.14 2048.6,1208.14 2049.19,1208.14 2049.78,1208.14 2050.36,1208.14 2050.95,1208.14 2051.54,1208.14 2052.12,1208.14 2052.71,1208.14 2053.3,1208.14 2053.88,1208.14 2054.47,1208.14 2055.06,1208.14 2055.64,1208.14 2056.23,1208.14 2056.81,1208.14 2057.4,1208.14 2057.99,1208.14 2058.57,1208.14 2059.16,1208.14 2059.75,1208.14 2060.33,1208.14 2060.92,1208.14 2061.51,1208.14 2062.09,1208.14 2062.68,1208.14 2063.27,1208.14 2063.85,1208.14 2064.44,1208.14 2065.02,1208.14 2065.61,1208.14 2066.2,1208.14 2066.78,1208.14 2067.37,1208.14 2067.96,1208.14 2068.54,1208.14 2069.13,1208.14 2069.72,1208.14 2070.3,1208.14 2070.89,1208.14 2071.48,1208.14 2072.06,1208.14 2072.65,1208.14 2073.23,1208.14 2073.82,1208.14 2074.41,1208.14 2074.99,1208.14 2075.58,1208.14 2076.17,1208.14 2076.75,1208.14 2077.34,1208.14 2077.93,1208.14 2078.51,1208.14 2079.1,1208.14 2079.68,1208.14 2080.27,1208.14 2080.86,1208.14 2081.44,1208.14 2082.03,1208.14 2082.62,1208.14 2083.2,1208.14 2083.79,1208.14 2084.38,1208.14 2084.96,1208.14 2085.55,1208.14 2086.14,1208.14 2086.72,1208.14 2087.31,1208.14 2087.89,1208.14 2088.48,1208.14 2089.07,1208.14 2089.65,1208.14 2090.24,1208.14 2090.83,1208.14 2091.41,1208.14 2092,1208.14 2092.59,1208.14 2093.17,1208.14 2093.76,1208.14 2094.35,1208.14 2094.93,1208.14 2095.52,1208.14 2096.1,1208.14 2096.69,1208.14 2097.28,1208.14 2097.86,1208.14 2098.45,1208.14 2099.04,1208.14 2099.62,1208.14 2100.21,1208.14 2100.8,1208.14 2101.38,1208.14 2101.97,1208.14 2102.55,1208.14 2103.14,1208.14 2103.73,1208.14 2104.31,1208.14 2104.9,1208.14 2105.49,1208.14 2106.07,1208.14 2106.66,1208.14 2107.25,1208.14 2107.83,1208.14 2108.42,1208.14 2109.01,1208.14 2109.59,1208.14 2110.18,1208.14 2110.76,1208.14 2111.35,1208.14 2111.94,1208.14 2112.52,1208.14 2113.11,1208.14 2113.7,1208.14 2114.28,1208.14 2114.87,1208.14 2115.46,1208.14 2116.04,1208.14 2116.63,1208.14 2117.22,1208.14 2117.8,1208.14 2118.39,1208.14 2118.97,1208.14 2119.56,1208.14 2120.15,1208.14 2120.73,1208.14 2121.32,1208.14 2121.91,1208.14 2122.49,1208.14 2123.08,1208.14 2123.67,1208.14 2124.25,1208.14 2124.84,1208.14 2125.42,1208.14 2126.01,1208.14 2126.6,1208.14 2127.18,1208.14 2127.77,1208.14 2128.36,1208.14 2128.94,1208.14 2129.53,1208.14 2130.12,1208.14 2130.7,1208.14 2131.29,1208.14 2131.88,1208.14 2132.46,1208.14 2133.05,1208.14 2133.63,1208.14 2134.22,1208.14 2134.81,1208.14 2135.39,1208.14 2135.98,1208.14 2136.57,1208.14 2137.15,1208.14 2137.74,1208.14 2138.33,1208.14 2138.91,1208.14 2139.5,1208.14 2140.09,1208.14 2140.67,1208.14 2141.26,1208.14 2141.84,1208.14 2142.43,1208.14 2143.02,1208.14 2143.6,1208.14 2144.19,1208.14 2144.78,1208.14 2145.36,1208.14 2145.95,1208.14 2146.54,1208.14 2147.12,1208.14 2147.71,1208.14 2148.3,1208.14 2148.88,1208.14 2149.47,1208.14 2150.05,1208.14 2150.64,1208.14 2151.23,1208.14 2151.81,1208.14 2152.4,1208.14 2152.99,1208.14 2153.57,1208.14 2154.16,1208.14 2154.75,1208.14 2155.33,1208.14 2155.92,1208.14 2156.5,1208.14 2157.09,1208.14 2157.68,1208.14 2158.26,1208.14 \"/>\n<path clip-path=\"url(#clip482)\" d=\"M986.025 1207.89 L986.612 1207.89 L987.198 1207.89 L987.785 1207.89 L988.371 1207.89 L988.957 1207.89 L989.544 1207.89 L990.13 1207.89 L990.717 1207.89 L991.303 1207.89 L991.889 1207.89 L992.476 1207.89 L993.062 1207.89 L993.649 1207.89 L994.235 1207.89 L994.822 1207.89 L995.408 1207.89 L995.994 1207.89 L996.581 1207.89 L997.167 1207.89 L997.754 1207.89 L998.34 1207.89 L998.926 1207.89 L999.513 1207.89 L1000.1 1207.89 L1000.69 1207.89 L1001.27 1207.89 L1001.86 1207.89 L1002.44 1207.89 L1003.03 1207.89 L1003.62 1207.89 L1004.2 1207.89 L1004.79 1207.89 L1005.38 1207.89 L1005.96 1207.89 L1006.55 1207.89 L1007.14 1207.89 L1007.72 1207.89 L1008.31 1207.89 L1008.9 1207.89 L1009.48 1207.89 L1010.07 1207.89 L1010.65 1207.89 L1011.24 1207.89 L1011.83 1207.89 L1012.41 1207.89 L1013 1207.89 L1013.59 1207.89 L1014.17 1207.89 L1014.76 1207.89 L1015.35 1207.89 L1015.93 1207.89 L1016.52 1207.89 L1017.11 1207.89 L1017.69 1207.89 L1018.28 1207.89 L1018.86 1207.89 L1019.45 1207.89 L1020.04 1207.89 L1020.62 1207.89 L1021.21 1207.89 L1021.8 1207.89 L1022.38 1207.89 L1022.97 1207.89 L1023.56 1207.89 L1024.14 1207.89 L1024.73 1207.89 L1025.32 1207.89 L1025.9 1207.89 L1026.49 1207.89 L1027.07 1207.89 L1027.66 1207.89 L1028.25 1207.89 L1028.83 1207.89 L1029.42 1207.89 L1030.01 1207.89 L1030.59 1207.89 L1031.18 1207.89 L1031.77 1207.89 L1032.35 1207.89 L1032.94 1207.89 L1033.52 1207.89 L1034.11 1207.89 L1034.7 1207.89 L1035.28 1207.89 L1035.87 1207.89 L1036.46 1207.89 L1037.04 1207.89 L1037.63 1207.89 L1038.22 1207.89 L1038.8 1207.89 L1039.39 1207.89 L1039.98 1207.89 L1040.56 1207.89 L1041.15 1207.89 L1041.73 1207.89 L1042.32 1207.89 L1042.91 1207.89 L1043.49 1207.89 L1044.08 1207.89 L1044.67 1207.89 L1045.25 1207.89 L1045.84 1207.89 L1046.43 1207.89 L1047.01 1207.89 L1047.6 1207.89 L1048.19 1207.89 L1048.77 1207.89 L1049.36 1207.89 L1049.94 1207.89 L1050.53 1207.89 L1051.12 1207.89 L1051.7 1207.89 L1052.29 1207.89 L1052.88 1207.89 L1053.46 1207.89 L1054.05 1207.89 L1054.64 1207.89 L1055.22 1207.89 L1055.81 1207.89 L1056.39 1207.89 L1056.98 1207.89 L1057.57 1207.89 L1058.15 1207.89 L1058.74 1207.89 L1059.33 1207.89 L1059.91 1207.89 L1060.5 1207.89 L1061.09 1207.89 L1061.67 1207.89 L1062.26 1207.89 L1062.85 1207.89 L1063.43 1207.89 L1064.02 1207.89 L1064.6 1207.89 L1065.19 1207.89 L1065.78 1207.89 L1066.36 1207.89 L1066.95 1207.89 L1067.54 1207.89 L1068.12 1207.89 L1068.71 1207.89 L1069.3 1207.89 L1069.88 1207.89 L1070.47 1207.89 L1071.06 1207.89 L1071.64 1207.89 L1072.23 1207.89 L1072.81 1207.89 L1073.4 1207.89 L1073.99 1207.89 L1074.57 1207.89 L1075.16 1207.89 L1075.75 1207.89 L1076.33 1207.89 L1076.92 1207.89 L1077.51 1207.89 L1078.09 1207.89 L1078.68 1207.89 L1079.26 1207.89 L1079.85 1207.89 L1080.44 1207.89 L1081.02 1207.89 L1081.61 1207.89 L1082.2 1207.89 L1082.78 1207.89 L1083.37 1207.89 L1083.96 1207.89 L1084.54 1207.89 L1085.13 1207.89 L1085.72 1207.89 L1086.3 1207.89 L1086.89 1207.89 L1087.47 1207.89 L1088.06 1207.89 L1088.65 1207.89 L1089.23 1207.89 L1089.82 1207.89 L1090.41 1207.89 L1090.99 1207.89 L1091.58 1207.89 L1092.17 1207.89 L1092.75 1207.89 L1093.34 1207.89 L1093.93 1207.89 L1094.51 1207.89 L1095.1 1207.89 L1095.68 1207.89 L1096.27 1207.89 L1096.86 1207.89 L1097.44 1207.89 L1098.03 1207.89 L1098.62 1207.89 L1099.2 1207.89 L1099.79 1207.89 L1100.38 1207.89 L1100.96 1207.89 L1101.55 1207.89 L1102.14 1207.89 L1102.72 1207.89 L1103.31 1207.89 L1103.89 1207.89 L1104.48 1207.89 L1105.07 1207.89 L1105.65 1207.89 L1106.24 1207.89 L1106.83 1207.89 L1107.41 1207.89 L1108 1207.89 L1108.59 1207.89 L1109.17 1207.89 L1109.76 1207.89 L1110.34 1207.89 L1110.93 1207.89 L1111.52 1207.89 L1112.1 1207.89 L1112.69 1207.89 L1113.28 1207.89 L1113.86 1207.89 L1114.45 1207.89 L1115.04 1207.89 L1115.62 1207.89 L1116.21 1207.89 L1116.8 1207.89 L1117.38 1207.89 L1117.97 1207.89 L1118.55 1207.89 L1119.14 1207.89 L1119.73 1207.89 L1120.31 1207.89 L1120.9 1207.89 L1121.49 1207.89 L1122.07 1207.89 L1122.66 1207.89 L1123.25 1207.89 L1123.83 1207.89 L1124.42 1207.89 L1125.01 1207.89 L1125.59 1207.89 L1126.18 1207.89 L1126.76 1207.89 L1127.35 1207.89 L1127.94 1207.89 L1128.52 1207.89 L1129.11 1207.89 L1129.7 1207.89 L1130.28 1207.89 L1130.87 1207.89 L1131.46 1207.89 L1132.04 1207.89 L1132.63 1207.89 L1133.21 1207.89 L1133.8 1207.89 L1134.39 1207.89 L1134.97 1207.89 L1135.56 1207.89 L1136.15 1207.89 L1136.73 1207.89 L1137.32 1207.89 L1137.91 1207.89 L1138.49 1207.89 L1139.08 1207.89 L1139.67 1207.89 L1140.25 1207.89 L1140.84 1207.89 L1141.42 1207.89 L1142.01 1207.89 L1142.6 1207.89 L1143.18 1207.89 L1143.77 1207.89 L1144.36 1207.89 L1144.94 1207.89 L1145.53 1207.89 L1146.12 1207.89 L1146.7 1207.89 L1147.29 1207.89 L1147.88 1207.89 L1148.46 1207.89 L1149.05 1207.89 L1149.63 1207.89 L1150.22 1207.89 L1150.81 1207.89 L1151.39 1207.89 L1151.98 1207.89 L1152.57 1207.89 L1153.15 1207.89 L1153.74 1207.89 L1154.33 1207.89 L1154.91 1207.89 L1155.5 1207.89 L1156.09 1207.89 L1156.67 1207.89 L1157.26 1207.89 L1157.84 1207.89 L1158.43 1207.89 L1159.02 1207.89 L1159.6 1207.89 L1160.19 1207.89 L1160.78 1207.89 L1161.36 1207.89 L1161.95 1207.89 L1162.54 1207.89 L1163.12 1207.89 L1163.71 1207.89 L1164.29 1207.89 L1164.88 1207.89 L1165.47 1207.89 L1166.05 1207.89 L1166.64 1207.89 L1167.23 1207.89 L1167.81 1207.89 L1168.4 1207.89 L1168.99 1207.89 L1169.57 1207.89 L1170.16 1207.89 L1170.75 1207.89 L1171.33 1207.89 L1171.92 1207.89 L1172.5 1207.89 L1173.09 1207.89 L1173.68 1207.89 L1174.26 1207.89 L1174.85 1207.89 L1175.44 1207.89 L1176.02 1207.89 L1176.61 1207.89 L1177.2 1207.89 L1177.78 1207.89 L1178.37 1207.89 L1178.96 1207.89 L1179.54 1207.89 L1180.13 1207.89 L1180.71 1207.89 L1181.3 1207.89 L1181.89 1207.89 L1182.47 1207.89 L1183.06 1207.89 L1183.65 1207.89 L1184.23 1207.89 L1184.82 1207.89 L1185.41 1207.89 L1185.99 1207.89 L1186.58 1207.89 L1187.16 1207.89 L1187.75 1207.89 L1188.34 1207.89 L1188.92 1207.89 L1189.51 1207.89 L1190.1 1207.89 L1190.68 1207.89 L1191.27 1207.89 L1191.86 1207.89 L1192.44 1207.89 L1193.03 1207.89 L1193.62 1207.89 L1194.2 1207.89 L1194.79 1207.89 L1195.37 1207.89 L1195.96 1207.89 L1196.55 1207.89 L1197.13 1207.89 L1197.72 1207.89 L1198.31 1207.89 L1198.89 1207.89 L1199.48 1207.89 L1200.07 1207.89 L1200.65 1207.89 L1201.24 1207.89 L1201.83 1207.89 L1202.41 1207.89 L1203 1207.89 L1203.58 1207.89 L1204.17 1207.89 L1204.76 1207.89 L1205.34 1207.89 L1205.93 1207.89 L1206.52 1207.89 L1207.1 1207.89 L1207.69 1207.89 L1208.28 1207.89 L1208.86 1207.89 L1209.45 1207.89 L1210.03 1207.89 L1210.62 1207.89 L1211.21 1207.89 L1211.79 1207.89 L1212.38 1207.89 L1212.97 1207.89 L1213.55 1207.89 L1214.14 1207.89 L1214.73 1207.89 L1215.31 1207.89 L1215.9 1207.89 L1216.49 1207.89 L1217.07 1207.89 L1217.66 1207.89 L1218.24 1207.89 L1218.83 1207.89 L1219.42 1207.89 L1220 1207.89 L1220.59 1207.89 L1221.18 1207.89 L1221.76 1207.89 L1222.35 1207.89 L1222.94 1207.89 L1223.52 1207.89 L1224.11 1207.89 L1224.7 1207.89 L1225.28 1207.89 L1225.87 1207.89 L1226.45 1207.89 L1227.04 1207.89 L1227.63 1207.89 L1228.21 1207.89 L1228.8 1207.89 L1229.39 1207.89 L1229.97 1207.89 L1230.56 1207.89 L1231.15 1207.89 L1231.73 1207.89 L1232.32 1207.89 L1232.91 1207.89 L1233.49 1207.89 L1234.08 1207.89 L1234.66 1207.89 L1235.25 1207.89 L1235.84 1207.89 L1236.42 1207.89 L1237.01 1207.89 L1237.6 1207.89 L1238.18 1207.89 L1238.77 1207.89 L1239.36 1207.89 L1239.94 1207.89 L1240.53 1207.89 L1241.11 1207.89 L1241.7 1207.89 L1242.29 1207.89 L1242.87 1207.89 L1243.46 1207.89 L1244.05 1207.89 L1244.63 1207.89 L1245.22 1207.89 L1245.81 1207.89 L1246.39 1207.89 L1246.98 1207.89 L1247.57 1207.89 L1248.15 1207.89 L1248.74 1207.89 L1249.32 1207.89 L1249.91 1207.89 L1250.5 1207.89 L1251.08 1207.89 L1251.67 1207.89 L1252.26 1207.89 L1252.84 1207.89 L1253.43 1207.89 L1254.02 1207.89 L1254.6 1207.89 L1255.19 1207.89 L1255.78 1207.89 L1256.36 1207.89 L1256.95 1207.89 L1257.53 1207.89 L1258.12 1207.89 L1258.71 1207.89 L1259.29 1207.89 L1259.88 1207.89 L1260.47 1207.89 L1261.05 1207.89 L1261.64 1207.89 L1262.23 1207.89 L1262.81 1207.89 L1263.4 1207.89 L1263.98 1207.89 L1264.57 1207.89 L1265.16 1207.89 L1265.74 1207.89 L1266.33 1207.89 L1266.92 1207.89 L1267.5 1207.89 L1268.09 1207.89 L1268.68 1207.89 L1269.26 1207.89 L1269.85 1207.89 L1270.44 1207.89 L1271.02 1207.89 L1271.61 1207.89 L1272.19 1207.89 L1272.78 1207.89 L1273.37 1207.89 L1273.95 1207.89 L1274.54 1207.89 L1275.13 1207.89 L1275.71 1207.89 L1276.3 1207.89 L1276.89 1207.89 L1277.47 1207.89 L1278.06 1207.89 L1278.65 1207.89 L1279.23 1207.89 L1279.82 1207.89 L1280.4 1207.89 L1280.99 1207.89 L1281.58 1207.89 L1282.16 1207.89 L1282.75 1207.89 L1283.34 1207.89 L1283.92 1207.89 L1284.51 1207.89 L1285.1 1207.89 L1285.68 1207.89 L1286.27 1207.89 L1286.86 1207.89 L1287.44 1207.89 L1288.03 1207.89 L1288.61 1207.89 L1289.2 1207.89 L1289.79 1207.89 L1290.37 1207.89 L1290.96 1207.89 L1291.55 1207.89 L1292.13 1207.89 L1292.72 1207.89 L1293.31 1207.89 L1293.89 1207.89 L1294.48 1207.89 L1295.06 1207.89 L1295.65 1207.89 L1296.24 1207.89 L1296.82 1207.89 L1297.41 1207.89 L1298 1207.89 L1298.58 1207.89 L1299.17 1207.89 L1299.76 1207.89 L1300.34 1207.89 L1300.93 1207.89 L1301.52 1207.89 L1302.1 1207.89 L1302.69 1207.89 L1303.27 1207.89 L1303.86 1207.89 L1304.45 1207.89 L1305.03 1207.89 L1305.62 1207.89 L1306.21 1207.89 L1306.79 1207.89 L1307.38 1207.89 L1307.97 1207.89 L1308.55 1207.89 L1309.14 1207.89 L1309.73 1207.89 L1310.31 1207.89 L1310.9 1207.89 L1311.48 1207.89 L1312.07 1207.89 L1312.66 1207.89 L1313.24 1207.89 L1313.83 1207.89 L1314.42 1207.89 L1315 1207.89 L1315.59 1207.89 L1316.18 1207.89 L1316.76 1207.89 L1317.35 1207.89 L1317.93 1207.89 L1318.52 1207.89 L1319.11 1207.89 L1319.69 1207.89 L1320.28 1207.89 L1320.87 1207.89 L1321.45 1207.89 L1322.04 1207.89 L1322.63 1207.89 L1323.21 1207.89 L1323.8 1207.89 L1324.39 1207.89 L1324.97 1207.89 L1325.56 1207.89 L1326.14 1207.89 L1326.73 1207.89 L1327.32 1207.89 L1327.9 1207.89 L1328.49 1207.89 L1329.08 1207.89 L1329.66 1207.89 L1330.25 1207.89 L1330.84 1207.89 L1331.42 1207.89 L1332.01 1207.89 L1332.6 1207.89 L1333.18 1207.89 L1333.77 1207.89 L1334.35 1207.89 L1334.94 1207.89 L1335.53 1207.89 L1336.11 1207.89 L1336.7 1207.89 L1337.29 1207.89 L1337.87 1207.89 L1338.46 1207.89 L1339.05 1207.89 L1339.63 1207.89 L1340.22 1207.89 L1340.8 1207.89 L1341.39 1207.89 L1341.98 1207.89 L1342.56 1207.89 L1343.15 1207.89 L1343.74 1207.89 L1344.32 1207.89 L1344.91 1207.89 L1345.5 1207.89 L1346.08 1207.89 L1346.67 1207.89 L1347.26 1207.89 L1347.84 1207.89 L1348.43 1207.89 L1349.01 1207.89 L1349.6 1207.89 L1350.19 1207.89 L1350.77 1207.89 L1351.36 1207.89 L1351.95 1207.89 L1352.53 1207.89 L1353.12 1207.89 L1353.71 1207.89 L1354.29 1207.89 L1354.88 1207.89 L1355.47 1207.89 L1356.05 1207.89 L1356.64 1207.89 L1357.22 1207.89 L1357.81 1207.89 L1358.4 1207.89 L1358.98 1207.89 L1359.57 1207.89 L1360.16 1207.89 L1360.74 1207.89 L1361.33 1207.89 L1361.92 1207.89 L1362.5 1207.89 L1363.09 1207.89 L1363.68 1207.89 L1364.26 1207.89 L1364.85 1207.89 L1365.43 1207.89 L1366.02 1207.89 L1366.61 1207.89 L1367.19 1207.89 L1367.78 1207.89 L1368.37 1207.89 L1368.95 1207.89 L1369.54 1207.89 L1370.13 1207.89 L1370.71 1207.89 L1371.3 1207.89 L1371.88 1207.89 L1372.47 1207.89 L1373.06 1207.89 L1373.64 1207.89 L1374.23 1207.89 L1374.82 1207.89 L1375.4 1207.89 L1375.99 1207.89 L1376.58 1207.89 L1377.16 1207.89 L1377.75 1207.89 L1378.34 1207.89 L1378.92 1207.89 L1379.51 1207.89 L1380.09 1207.89 L1380.68 1207.89 L1381.27 1207.89 L1381.85 1207.89 L1382.44 1207.89 L1383.03 1207.89 L1383.61 1207.89 L1384.2 1207.89 L1384.79 1207.89 L1385.37 1207.89 L1385.96 1207.89 L1386.55 1207.89 L1387.13 1207.89 L1387.72 1207.89 L1388.3 1207.89 L1388.89 1207.89 L1389.48 1207.89 L1390.06 1207.89 L1390.65 1207.89 L1391.24 1207.89 L1391.82 1207.89 L1392.41 1207.89 L1393 1207.89 L1393.58 1207.89 L1394.17 1207.89 L1394.75 1207.89 L1395.34 1207.89 L1395.93 1207.89 L1396.51 1207.89 L1397.1 1207.89 L1397.69 1207.89 L1398.27 1207.89 L1398.86 1207.89 L1399.45 1207.89 L1400.03 1207.89 L1400.62 1207.89 L1401.21 1207.89 L1401.79 1207.89 L1402.38 1207.89 L1402.96 1207.89 L1403.55 1207.89 L1404.14 1207.89 L1404.72 1207.89 L1405.31 1207.89 L1405.9 1207.89 L1406.48 1207.89 L1407.07 1207.89 L1407.66 1207.89 L1408.24 1207.89 L1408.83 1207.89 L1409.42 1207.89 L1410 1207.89 L1410.59 1207.89 L1411.17 1207.89 L1411.76 1207.89 L1412.35 1207.89 L1412.93 1207.89 L1413.52 1207.89 L1414.11 1207.89 L1414.69 1207.89 L1415.28 1207.89 L1415.87 1207.89 L1416.45 1207.89 L1417.04 1207.89 L1417.63 1207.89 L1418.21 1207.89 L1418.8 1207.89 L1419.38 1207.89 L1419.97 1207.89 L1420.56 1207.89 L1421.14 1207.89 L1421.73 1207.89 L1422.32 1207.89 L1422.9 1207.89 L1423.49 1207.89 L1424.08 1207.89 L1424.66 1207.89 L1425.25 1207.89 L1425.83 1207.89 L1426.42 1207.89 L1427.01 1207.89 L1427.59 1207.89 L1428.18 1207.89 L1428.77 1207.89 L1429.35 1207.89 L1429.94 1207.89 L1430.53 1207.89 L1431.11 1207.89 L1431.7 1207.89 L1432.29 1207.89 L1432.87 1207.89 L1433.46 1207.89 L1434.04 1207.89 L1434.63 1207.89 L1435.22 1207.89 L1435.8 1207.89 L1436.39 1207.89 L1436.98 1207.89 L1437.56 1207.89 L1438.15 1207.89 L1438.74 1207.89 L1439.32 1207.89 L1439.91 1207.89 L1440.5 1207.89 L1441.08 1207.89 L1441.67 1207.89 L1442.25 1207.89 L1442.84 1207.89 L1443.43 1207.89 L1444.01 1207.89 L1444.6 1207.89 L1445.19 1207.89 L1445.77 1207.89 L1446.36 1207.89 L1446.95 1207.89 L1447.53 1207.89 L1448.12 1207.89 L1448.7 1207.89 L1449.29 1207.89 L1449.88 1207.89 L1450.46 1207.89 L1451.05 1207.89 L1451.64 1207.89 L1452.22 1207.89 L1452.81 1207.89 L1453.4 1207.89 L1453.98 1207.89 L1454.57 1207.89 L1455.16 1207.89 L1455.74 1207.89 L1456.33 1207.89 L1456.91 1207.89 L1457.5 1207.89 L1458.09 1207.89 L1458.67 1207.89 L1459.26 1207.89 L1459.85 1207.89 L1460.43 1207.89 L1461.02 1207.89 L1461.61 1207.89 L1462.19 1207.89 L1462.78 1207.89 L1463.37 1207.89 L1463.95 1207.89 L1464.54 1207.89 L1465.12 1207.89 L1465.71 1207.89 L1466.3 1207.89 L1466.88 1207.89 L1467.47 1207.89 L1468.06 1207.89 L1468.64 1207.89 L1469.23 1207.89 L1469.82 1207.89 L1470.4 1207.89 L1470.99 1207.89 L1471.57 1207.89 L1472.16 1207.89 L1472.75 1207.89 L1473.33 1207.89 L1473.92 1207.89 L1474.51 1207.89 L1475.09 1207.89 L1475.68 1207.89 L1476.27 1207.89 L1476.85 1207.89 L1477.44 1207.89 L1478.03 1207.89 L1478.61 1207.89 L1479.2 1207.89 L1479.78 1207.89 L1480.37 1207.89 L1480.96 1207.89 L1481.54 1207.89 L1482.13 1207.89 L1482.72 1207.89 L1483.3 1207.89 L1483.89 1207.89 L1484.48 1207.89 L1485.06 1207.89 L1485.65 1207.89 L1486.24 1207.89 L1486.82 1207.89 L1487.41 1207.89 L1487.99 1207.89 L1488.58 1207.89 L1489.17 1207.89 L1489.75 1207.89 L1490.34 1207.89 L1490.93 1207.89 L1491.51 1207.89 L1492.1 1207.89 L1492.69 1207.89 L1493.27 1207.89 L1493.86 1207.89 L1494.45 1207.89 L1495.03 1207.89 L1495.62 1207.89 L1496.2 1207.89 L1496.79 1207.89 L1497.38 1207.89 L1497.96 1207.89 L1498.55 1207.89 L1499.14 1207.89 L1499.72 1207.89 L1500.31 1207.89 L1500.9 1207.89 L1501.48 1207.89 L1502.07 1207.89 L1502.65 1207.89 L1503.24 1207.89 L1503.83 1207.89 L1504.41 1207.89 L1505 1207.89 L1505.59 1207.89 L1506.17 1207.89 L1506.76 1207.89 L1507.35 1207.89 L1507.93 1207.89 L1508.52 1207.89 L1509.11 1207.89 L1509.69 1207.89 L1510.28 1207.89 L1510.86 1207.89 L1511.45 1207.89 L1512.04 1207.89 L1512.62 1207.89 L1513.21 1207.89 L1513.8 1207.89 L1514.38 1207.89 L1514.97 1207.89 L1515.56 1207.89 L1516.14 1207.89 L1516.73 1207.89 L1517.32 1207.89 L1517.9 1207.89 L1518.49 1207.89 L1519.07 1207.89 L1519.66 1207.89 L1520.25 1207.89 L1520.83 1207.89 L1521.42 1207.89 L1522.01 1207.89 L1522.59 1207.89 L1523.18 1207.89 L1523.77 1207.89 L1524.35 1207.89 L1524.94 1207.89 L1525.52 1207.89 L1526.11 1207.89 L1526.7 1207.89 L1527.28 1207.89 L1527.87 1207.89 L1528.46 1207.89 L1529.04 1207.89 L1529.63 1207.89 L1530.22 1207.89 L1530.8 1207.89 L1531.39 1207.89 L1531.98 1207.89 L1532.56 1207.89 L1533.15 1207.89 L1533.73 1207.89 L1534.32 1207.89 L1534.91 1207.89 L1535.49 1207.89 L1536.08 1207.89 L1536.67 1207.89 L1537.25 1207.89 L1537.84 1207.89 L1538.43 1207.89 L1539.01 1207.89 L1539.6 1207.89 L1540.19 1207.89 L1540.77 1207.89 L1541.36 1207.89 L1541.94 1207.89 L1542.53 1207.89 L1543.12 1207.89 L1543.7 1207.89 L1544.29 1207.89 L1544.88 1207.89 L1545.46 1207.89 L1546.05 1207.89 L1546.64 1207.89 L1547.22 1207.89 L1547.81 1207.89 L1548.4 1207.89 L1548.98 1207.89 L1549.57 1207.89 L1550.15 1207.89 L1550.74 1207.89 L1551.33 1207.89 L1551.91 1207.89 L1552.5 1207.89 L1553.09 1207.89 L1553.67 1207.89 L1554.26 1207.89 L1554.85 1207.89 L1555.43 1207.89 L1556.02 1207.89 L1556.6 1207.89 L1557.19 1207.89 L1557.78 1207.89 L1558.36 1207.89 L1558.95 1207.89 L1559.54 1207.89 L1560.12 1207.89 L1560.71 1207.89 L1561.3 1207.89 L1561.88 1207.89 L1562.47 1207.89 L1563.06 1207.89 L1563.64 1207.89 L1564.23 1207.89 L1564.81 1207.89 L1565.4 1207.89 L1565.99 1207.89 L1566.57 1207.89 L1567.16 1207.89 L1567.75 1207.89 L1568.33 1207.89 L1568.92 1207.89 L1569.51 1207.89 L1570.09 1207.89 L1570.68 1207.89 L1571.27 1207.89 L1571.85 1207.89 L1572.44 1207.89 L1573.02 1207.89 L1573.61 1207.89 L1574.2 1207.89 L1574.78 1207.89 L1575.37 1207.89 L1575.96 1207.89 L1576.54 1207.89 L1577.13 1207.89 L1577.72 1207.89 L1578.3 1207.89 L1578.89 1207.89 L1579.47 1207.89 L1580.06 1207.89 L1580.65 1207.89 L1581.23 1207.89 L1581.82 1207.89 L1582.41 1207.89 L1582.99 1207.89 L1583.58 1207.89 L1584.17 1207.89 L1584.75 1207.89 L1585.34 1207.89 L1585.93 1207.89 L1586.51 1207.89 L1587.1 1207.89 L1587.68 1207.89 L1588.27 1207.89 L1588.86 1207.89 L1589.44 1207.89 L1590.03 1207.89 L1590.62 1207.89 L1591.2 1207.89 L1591.79 1207.89 L1592.38 1207.89 L1592.96 1207.89 L1593.55 1207.89 L1594.14 1207.89 L1594.72 1207.89 L1595.31 1207.89 L1595.89 1207.89 L1596.48 1207.89 L1597.07 1207.89 L1597.65 1207.89 L1598.24 1207.89 L1598.83 1207.89 L1599.41 1207.89 L1600 1207.89 L1600.59 1207.89 L1601.17 1207.89 L1601.76 1207.89 L1602.34 1207.89 L1602.93 1207.89 L1603.52 1207.89 L1604.1 1207.89 L1604.69 1207.89 L1605.28 1207.89 L1605.86 1207.89 L1606.45 1207.89 L1607.04 1207.89 L1607.62 1207.89 L1608.21 1207.89 L1608.8 1207.89 L1609.38 1207.89 L1609.97 1207.89 L1610.55 1207.89 L1611.14 1207.89 L1611.73 1207.89 L1612.31 1207.89 L1612.9 1207.89 L1613.49 1207.89 L1614.07 1207.89 L1614.66 1207.89 L1615.25 1207.89 L1615.83 1207.89 L1616.42 1207.89 L1617.01 1207.89 L1617.59 1207.89 L1618.18 1207.89 L1618.76 1207.89 L1619.35 1207.89 L1619.94 1207.89 L1620.52 1207.89 L1621.11 1207.89 L1621.7 1207.89 L1622.28 1207.89 L1622.87 1207.89 L1623.46 1207.89 L1624.04 1207.89 L1624.63 1207.89 L1625.22 1207.89 L1625.8 1207.89 L1626.39 1207.89 L1626.97 1207.89 L1627.56 1207.89 L1628.15 1207.89 L1628.73 1207.89 L1629.32 1207.89 L1629.91 1207.89 L1630.49 1207.89 L1631.08 1207.89 L1631.67 1207.89 L1632.25 1207.89 L1632.84 1207.89 L1633.42 1207.89 L1634.01 1207.89 L1634.6 1207.89 L1635.18 1207.89 L1635.77 1207.89 L1636.36 1207.89 L1636.94 1207.89 L1637.53 1207.89 L1638.12 1207.89 L1638.7 1207.89 L1639.29 1207.89 L1639.88 1207.89 L1640.46 1207.89 L1641.05 1207.89 L1641.63 1207.89 L1642.22 1207.89 L1642.81 1207.89 L1643.39 1207.89 L1643.98 1207.89 L1644.57 1207.89 L1645.15 1207.89 L1645.74 1207.89 L1646.33 1207.89 L1646.91 1207.89 L1647.5 1207.89 L1648.09 1207.89 L1648.67 1207.89 L1649.26 1207.89 L1649.84 1207.89 L1650.43 1207.89 L1651.02 1207.89 L1651.6 1207.89 L1652.19 1207.89 L1652.78 1207.89 L1653.36 1207.89 L1653.95 1207.89 L1654.54 1207.89 L1655.12 1207.89 L1655.71 1207.89 L1656.29 1207.89 L1656.88 1207.89 L1657.47 1207.89 L1658.05 1207.89 L1658.64 1207.89 L1659.23 1207.89 L1659.81 1207.89 L1660.4 1207.89 L1660.99 1207.89 L1661.57 1207.89 L1662.16 1207.89 L1662.75 1207.89 L1663.33 1207.89 L1663.92 1207.89 L1664.5 1207.89 L1665.09 1207.89 L1665.68 1207.89 L1666.26 1207.89 L1666.85 1207.89 L1667.44 1207.89 L1668.02 1207.89 L1668.61 1207.89 L1669.2 1207.89 L1669.78 1207.89 L1670.37 1207.89 L1670.96 1207.89 L1671.54 1207.89 L1672.13 1207.89 L1672.71 1207.89 L1673.3 1207.89 L1673.89 1207.89 L1674.47 1207.89 L1675.06 1207.89 L1675.65 1207.89 L1676.23 1207.89 L1676.82 1207.89 L1677.41 1207.89 L1677.99 1207.89 L1678.58 1207.89 L1679.17 1207.89 L1679.75 1207.89 L1680.34 1207.89 L1680.92 1207.89 L1681.51 1207.89 L1682.1 1207.89 L1682.68 1207.89 L1683.27 1207.89 L1683.86 1207.89 L1684.44 1207.89 L1685.03 1207.89 L1685.62 1207.89 L1686.2 1207.89 L1686.79 1207.89 L1687.37 1207.89 L1687.96 1207.89 L1688.55 1207.89 L1689.13 1207.89 L1689.72 1207.89 L1690.31 1207.89 L1690.89 1207.89 L1691.48 1207.89 L1692.07 1207.89 L1692.65 1207.89 L1693.24 1207.89 L1693.83 1207.89 L1694.41 1207.89 L1695 1207.89 L1695.58 1207.89 L1696.17 1207.89 L1696.76 1207.89 L1697.34 1207.89 L1697.93 1207.89 L1698.52 1207.89 L1699.1 1207.89 L1699.69 1207.89 L1700.28 1207.89 L1700.86 1207.89 L1701.45 1207.89 L1702.04 1207.89 L1702.62 1207.89 L1703.21 1207.89 L1703.79 1207.89 L1704.38 1207.89 L1704.97 1207.89 L1705.55 1207.89 L1706.14 1207.89 L1706.73 1207.89 L1707.31 1207.89 L1707.9 1207.89 L1708.49 1207.89 L1709.07 1207.89 L1709.66 1207.89 L1710.24 1207.89 L1710.83 1207.89 L1711.42 1207.89 L1712 1207.89 L1712.59 1207.89 L1713.18 1207.89 L1713.76 1207.89 L1714.35 1207.89 L1714.94 1207.89 L1715.52 1207.89 L1716.11 1207.89 L1716.7 1207.89 L1717.28 1207.89 L1717.87 1207.89 L1718.45 1207.89 L1719.04 1207.89 L1719.63 1207.89 L1720.21 1207.89 L1720.8 1207.89 L1721.39 1207.89 L1721.97 1207.89 L1722.56 1207.89 L1723.15 1207.89 L1723.73 1207.89 L1724.32 1207.89 L1724.91 1207.89 L1725.49 1207.89 L1726.08 1207.89 L1726.66 1207.89 L1727.25 1207.89 L1727.84 1207.89 L1728.42 1207.89 L1729.01 1207.89 L1729.6 1207.89 L1730.18 1207.89 L1730.77 1207.89 L1731.36 1207.89 L1731.94 1207.89 L1732.53 1207.89 L1733.11 1207.89 L1733.7 1207.89 L1734.29 1207.89 L1734.87 1207.89 L1735.46 1207.89 L1736.05 1207.89 L1736.63 1207.89 L1737.22 1207.89 L1737.81 1207.89 L1738.39 1207.89 L1738.98 1207.89 L1739.57 1207.89 L1740.15 1207.89 L1740.74 1207.89 L1741.32 1207.89 L1741.91 1207.89 L1742.5 1207.89 L1743.08 1207.89 L1743.67 1207.89 L1744.26 1207.89 L1744.84 1207.89 L1745.43 1207.89 L1746.02 1207.89 L1746.6 1207.89 L1747.19 1207.89 L1747.78 1207.89 L1748.36 1207.89 L1748.95 1207.89 L1749.53 1207.89 L1750.12 1207.89 L1750.71 1207.89 L1751.29 1207.89 L1751.88 1207.89 L1752.47 1207.89 L1753.05 1207.89 L1753.64 1207.89 L1754.23 1207.89 L1754.81 1207.89 L1755.4 1207.89 L1755.99 1207.89 L1756.57 1207.89 L1757.16 1207.89 L1757.74 1207.89 L1758.33 1207.89 L1758.92 1207.89 L1759.5 1207.89 L1760.09 1207.89 L1760.68 1207.89 L1761.26 1207.89 L1761.85 1207.89 L1762.44 1207.89 L1763.02 1207.89 L1763.61 1207.89 L1764.19 1207.89 L1764.78 1207.89 L1765.37 1207.89 L1765.95 1207.89 L1766.54 1207.89 L1767.13 1207.89 L1767.71 1207.89 L1768.3 1207.89 L1768.89 1207.89 L1769.47 1207.89 L1770.06 1207.89 L1770.65 1207.89 L1771.23 1207.89 L1771.82 1207.89 L1772.4 1207.89 L1772.99 1207.89 L1773.58 1207.89 L1774.16 1207.89 L1774.75 1207.89 L1775.34 1207.89 L1775.92 1207.89 L1776.51 1207.89 L1777.1 1207.89 L1777.68 1207.89 L1778.27 1207.89 L1778.86 1207.89 L1779.44 1207.89 L1780.03 1207.89 L1780.61 1207.89 L1781.2 1207.89 L1781.79 1207.89 L1782.37 1207.89 L1782.96 1207.89 L1783.55 1207.89 L1784.13 1207.89 L1784.72 1207.89 L1785.31 1207.89 L1785.89 1207.89 L1786.48 1207.89 L1787.06 1207.89 L1787.65 1207.89 L1788.24 1207.89 L1788.82 1207.89 L1789.41 1207.89 L1790 1207.89 L1790.58 1207.89 L1791.17 1207.89 L1791.76 1207.89 L1792.34 1207.89 L1792.93 1207.89 L1793.52 1207.89 L1794.1 1207.89 L1794.69 1207.89 L1795.27 1207.89 L1795.86 1207.89 L1796.45 1207.89 L1797.03 1207.89 L1797.62 1207.89 L1798.21 1207.89 L1798.79 1207.89 L1799.38 1207.89 L1799.97 1207.89 L1800.55 1207.89 L1801.14 1207.89 L1801.73 1207.89 L1802.31 1207.89 L1802.9 1207.89 L1803.48 1207.89 L1804.07 1207.89 L1804.66 1207.89 L1805.24 1207.89 L1805.83 1207.89 L1806.42 1207.89 L1807 1207.89 L1807.59 1207.89 L1808.18 1207.89 L1808.76 1207.89 L1809.35 1207.89 L1809.94 1207.89 L1810.52 1207.89 L1811.11 1207.89 L1811.69 1207.89 L1812.28 1207.89 L1812.87 1207.89 L1813.45 1207.89 L1814.04 1207.89 L1814.63 1207.89 L1815.21 1207.89 L1815.8 1207.89 L1816.39 1207.89 L1816.97 1207.89 L1817.56 1207.89 L1818.14 1207.89 L1818.73 1207.89 L1819.32 1207.89 L1819.9 1207.89 L1820.49 1207.89 L1821.08 1207.89 L1821.66 1207.89 L1822.25 1207.89 L1822.84 1207.89 L1823.42 1207.89 L1824.01 1207.89 L1824.6 1207.89 L1825.18 1207.89 L1825.77 1207.89 L1826.35 1207.89 L1826.94 1207.89 L1827.53 1207.89 L1828.11 1207.89 L1828.7 1207.89 L1829.29 1207.89 L1829.87 1207.89 L1830.46 1207.89 L1831.05 1207.89 L1831.63 1207.89 L1832.22 1207.89 L1832.81 1207.89 L1833.39 1207.89 L1833.98 1207.89 L1834.56 1207.89 L1835.15 1207.89 L1835.74 1207.89 L1836.32 1207.89 L1836.91 1207.89 L1837.5 1207.89 L1838.08 1207.89 L1838.67 1207.89 L1839.26 1207.89 L1839.84 1207.89 L1840.43 1207.89 L1841.01 1207.89 L1841.6 1207.89 L1842.19 1207.89 L1842.77 1207.89 L1843.36 1207.89 L1843.95 1207.89 L1844.53 1207.89 L1845.12 1207.89 L1845.71 1207.89 L1846.29 1207.89 L1846.88 1207.89 L1847.47 1207.89 L1848.05 1207.89 L1848.64 1207.89 L1849.22 1207.89 L1849.81 1207.89 L1850.4 1207.89 L1850.98 1207.89 L1851.57 1207.89 L1852.16 1207.89 L1852.74 1207.89 L1853.33 1207.89 L1853.92 1207.89 L1854.5 1207.89 L1855.09 1207.89 L1855.68 1207.89 L1856.26 1207.89 L1856.85 1207.89 L1857.43 1207.89 L1858.02 1207.89 L1858.61 1207.89 L1859.19 1207.89 L1859.78 1207.89 L1860.37 1207.89 L1860.95 1207.89 L1861.54 1207.89 L1862.13 1207.89 L1862.71 1207.89 L1863.3 1207.89 L1863.88 1207.89 L1864.47 1207.89 L1865.06 1207.89 L1865.64 1207.89 L1866.23 1207.89 L1866.82 1207.89 L1867.4 1207.89 L1867.99 1207.89 L1868.58 1207.89 L1869.16 1207.89 L1869.75 1207.89 L1870.34 1207.89 L1870.92 1207.89 L1871.51 1207.89 L1872.09 1207.89 L1872.68 1207.89 L1873.27 1207.89 L1873.85 1207.89 L1874.44 1207.89 L1875.03 1207.89 L1875.61 1207.89 L1876.2 1207.89 L1876.79 1207.89 L1877.37 1207.89 L1877.96 1207.89 L1878.55 1207.89 L1879.13 1207.89 L1879.72 1207.89 L1880.3 1207.89 L1880.89 1207.89 L1881.48 1207.89 L1882.06 1207.89 L1882.65 1207.89 L1883.24 1207.89 L1883.82 1207.89 L1884.41 1207.89 L1885 1207.89 L1885.58 1207.89 L1886.17 1207.89 L1886.76 1207.89 L1887.34 1207.89 L1887.93 1207.89 L1888.51 1207.89 L1889.1 1207.89 L1889.69 1207.89 L1890.27 1207.89 L1890.86 1207.89 L1891.45 1207.89 L1892.03 1207.89 L1892.62 1207.89 L1893.21 1207.89 L1893.79 1207.89 L1894.38 1207.89 L1894.96 1207.89 L1895.55 1207.89 L1896.14 1207.89 L1896.72 1207.89 L1897.31 1207.89 L1897.9 1207.89 L1898.48 1207.89 L1899.07 1207.89 L1899.66 1207.89 L1900.24 1207.89 L1900.83 1207.89 L1901.42 1207.89 L1902 1207.89 L1902.59 1207.89 L1903.17 1207.89 L1903.76 1207.89 L1904.35 1207.89 L1904.93 1207.89 L1905.52 1207.89 L1906.11 1207.89 L1906.69 1207.89 L1907.28 1207.89 L1907.87 1207.89 L1908.45 1207.89 L1909.04 1207.89 L1909.63 1207.89 L1910.21 1207.89 L1910.8 1207.89 L1911.38 1207.89 L1911.97 1207.89 L1912.56 1207.89 L1913.14 1207.89 L1913.73 1207.89 L1914.32 1207.89 L1914.9 1207.89 L1915.49 1207.89 L1916.08 1207.89 L1916.66 1207.89 L1917.25 1207.89 L1917.83 1207.89 L1918.42 1207.89 L1919.01 1207.89 L1919.59 1207.89 L1920.18 1207.89 L1920.77 1207.89 L1921.35 1207.89 L1921.94 1207.89 L1922.53 1207.89 L1923.11 1207.89 L1923.7 1207.89 L1924.29 1207.89 L1924.87 1207.89 L1925.46 1207.89 L1926.04 1207.89 L1926.63 1207.89 L1927.22 1207.89 L1927.8 1207.89 L1928.39 1207.89 L1928.98 1207.89 L1929.56 1207.89 L1930.15 1207.89 L1930.74 1207.89 L1931.32 1207.89 L1931.91 1207.89 L1932.5 1207.89 L1933.08 1207.89 L1933.67 1207.89 L1934.25 1207.89 L1934.84 1207.89 L1935.43 1207.89 L1936.01 1207.89 L1936.6 1207.89 L1937.19 1207.89 L1937.77 1207.89 L1938.36 1207.89 L1938.95 1207.89 L1939.53 1207.89 L1940.12 1207.89 L1940.71 1207.89 L1941.29 1207.89 L1941.88 1207.89 L1942.46 1207.89 L1943.05 1207.89 L1943.64 1207.89 L1944.22 1207.89 L1944.81 1207.89 L1945.4 1207.89 L1945.98 1207.89 L1946.57 1207.89 L1947.16 1207.89 L1947.74 1207.89 L1948.33 1207.89 L1948.91 1207.89 L1949.5 1207.89 L1950.09 1207.89 L1950.67 1207.89 L1951.26 1207.89 L1951.85 1207.89 L1952.43 1207.89 L1953.02 1207.89 L1953.61 1207.89 L1954.19 1207.89 L1954.78 1207.89 L1955.37 1207.89 L1955.95 1207.89 L1956.54 1207.89 L1957.12 1207.89 L1957.71 1207.89 L1958.3 1207.89 L1958.88 1207.89 L1959.47 1207.89 L1960.06 1207.89 L1960.64 1207.89 L1961.23 1207.89 L1961.82 1207.89 L1962.4 1207.89 L1962.99 1207.89 L1963.58 1207.89 L1964.16 1207.89 L1964.75 1207.89 L1965.33 1207.89 L1965.92 1207.89 L1966.51 1207.89 L1967.09 1207.89 L1967.68 1207.89 L1968.27 1207.89 L1968.85 1207.89 L1969.44 1207.89 L1970.03 1207.89 L1970.61 1207.89 L1971.2 1207.89 L1971.78 1207.89 L1972.37 1207.89 L1972.96 1207.89 L1973.54 1207.89 L1974.13 1207.89 L1974.72 1207.89 L1975.3 1207.89 L1975.89 1207.89 L1976.48 1207.89 L1977.06 1207.89 L1977.65 1207.89 L1978.24 1207.89 L1978.82 1207.89 L1979.41 1207.89 L1979.99 1207.89 L1980.58 1207.89 L1981.17 1207.89 L1981.75 1207.89 L1982.34 1207.89 L1982.93 1207.89 L1983.51 1207.89 L1984.1 1207.89 L1984.69 1207.89 L1985.27 1207.89 L1985.86 1207.89 L1986.45 1207.89 L1987.03 1207.89 L1987.62 1207.89 L1988.2 1207.89 L1988.79 1207.89 L1989.38 1207.89 L1989.96 1207.89 L1990.55 1207.89 L1991.14 1207.89 L1991.72 1207.89 L1992.31 1207.89 L1992.9 1207.89 L1993.48 1207.89 L1994.07 1207.89 L1994.65 1207.89 L1995.24 1207.89 L1995.83 1207.89 L1996.41 1207.89 L1997 1207.89 L1997.59 1207.89 L1998.17 1207.89 L1998.76 1207.89 L1999.35 1207.89 L1999.93 1207.89 L2000.52 1207.89 L2001.11 1207.89 L2001.69 1207.89 L2002.28 1207.89 L2002.86 1207.89 L2003.45 1207.89 L2004.04 1207.89 L2004.62 1207.89 L2005.21 1207.89 L2005.8 1207.89 L2006.38 1207.89 L2006.97 1207.89 L2007.56 1207.89 L2008.14 1207.89 L2008.73 1207.89 L2009.32 1207.89 L2009.9 1207.89 L2010.49 1207.89 L2011.07 1207.89 L2011.66 1207.89 L2012.25 1207.89 L2012.83 1207.89 L2013.42 1207.89 L2014.01 1207.89 L2014.59 1207.89 L2015.18 1207.89 L2015.77 1207.89 L2016.35 1207.89 L2016.94 1207.89 L2017.53 1207.89 L2018.11 1207.89 L2018.7 1207.89 L2019.28 1207.89 L2019.87 1207.89 L2020.46 1207.89 L2021.04 1207.89 L2021.63 1207.89 L2022.22 1207.89 L2022.8 1207.89 L2023.39 1207.89 L2023.98 1207.89 L2024.56 1207.89 L2025.15 1207.89 L2025.73 1207.89 L2026.32 1207.89 L2026.91 1207.89 L2027.49 1207.89 L2028.08 1207.89 L2028.67 1207.89 L2029.25 1207.89 L2029.84 1207.89 L2030.43 1207.89 L2031.01 1207.89 L2031.6 1207.89 L2032.19 1207.89 L2032.77 1207.89 L2033.36 1207.89 L2033.94 1207.89 L2034.53 1207.89 L2035.12 1207.89 L2035.7 1207.89 L2036.29 1207.89 L2036.88 1207.89 L2037.46 1207.89 L2038.05 1207.89 L2038.64 1207.89 L2039.22 1207.89 L2039.81 1207.89 L2040.4 1207.89 L2040.98 1207.89 L2041.57 1207.89 L2042.15 1207.89 L2042.74 1207.89 L2043.33 1207.89 L2043.91 1207.89 L2044.5 1207.89 L2045.09 1207.89 L2045.67 1207.89 L2046.26 1207.89 L2046.85 1207.89 L2047.43 1207.89 L2048.02 1207.89 L2048.6 1207.89 L2049.19 1207.89 L2049.78 1207.89 L2050.36 1207.89 L2050.95 1207.89 L2051.54 1207.89 L2052.12 1207.89 L2052.71 1207.89 L2053.3 1207.89 L2053.88 1207.89 L2054.47 1207.89 L2055.06 1207.89 L2055.64 1207.89 L2056.23 1207.89 L2056.81 1207.89 L2057.4 1207.89 L2057.99 1207.89 L2058.57 1207.89 L2059.16 1207.89 L2059.75 1207.89 L2060.33 1207.89 L2060.92 1207.89 L2061.51 1207.89 L2062.09 1207.89 L2062.68 1207.89 L2063.27 1207.89 L2063.85 1207.89 L2064.44 1207.89 L2065.02 1207.89 L2065.61 1207.89 L2066.2 1207.89 L2066.78 1207.89 L2067.37 1207.89 L2067.96 1207.89 L2068.54 1207.89 L2069.13 1207.89 L2069.72 1207.89 L2070.3 1207.89 L2070.89 1207.89 L2071.48 1207.89 L2072.06 1207.89 L2072.65 1207.89 L2073.23 1207.89 L2073.82 1207.89 L2074.41 1207.89 L2074.99 1207.89 L2075.58 1207.89 L2076.17 1207.89 L2076.75 1207.89 L2077.34 1207.89 L2077.93 1207.89 L2078.51 1207.89 L2079.1 1207.89 L2079.68 1207.89 L2080.27 1207.89 L2080.86 1207.89 L2081.44 1207.89 L2082.03 1207.89 L2082.62 1207.89 L2083.2 1207.89 L2083.79 1207.89 L2084.38 1207.89 L2084.96 1207.89 L2085.55 1207.89 L2086.14 1207.89 L2086.72 1207.89 L2087.31 1207.89 L2087.89 1207.89 L2088.48 1207.89 L2089.07 1207.89 L2089.65 1207.89 L2090.24 1207.89 L2090.83 1207.89 L2091.41 1207.89 L2092 1207.89 L2092.59 1207.89 L2093.17 1207.89 L2093.76 1207.89 L2094.35 1207.89 L2094.93 1207.89 L2095.52 1207.89 L2096.1 1207.89 L2096.69 1207.89 L2097.28 1207.89 L2097.86 1207.89 L2098.45 1207.89 L2099.04 1207.89 L2099.62 1207.89 L2100.21 1207.89 L2100.8 1207.89 L2101.38 1207.89 L2101.97 1207.89 L2102.55 1207.89 L2103.14 1207.89 L2103.73 1207.89 L2104.31 1207.89 L2104.9 1207.89 L2105.49 1207.89 L2106.07 1207.89 L2106.66 1207.89 L2107.25 1207.89 L2107.83 1207.89 L2108.42 1207.89 L2109.01 1207.89 L2109.59 1207.89 L2110.18 1207.89 L2110.76 1207.89 L2111.35 1207.89 L2111.94 1207.89 L2112.52 1207.89 L2113.11 1207.89 L2113.7 1207.89 L2114.28 1207.89 L2114.87 1207.89 L2115.46 1207.89 L2116.04 1207.89 L2116.63 1207.89 L2117.22 1207.89 L2117.8 1207.89 L2118.39 1207.89 L2118.97 1207.89 L2119.56 1207.89 L2120.15 1207.89 L2120.73 1207.89 L2121.32 1207.89 L2121.91 1207.89 L2122.49 1207.89 L2123.08 1207.89 L2123.67 1207.89 L2124.25 1207.89 L2124.84 1207.89 L2125.42 1207.89 L2126.01 1207.89 L2126.6 1207.89 L2127.18 1207.89 L2127.77 1207.89 L2128.36 1207.89 L2128.94 1207.89 L2129.53 1207.89 L2130.12 1207.89 L2130.7 1207.89 L2131.29 1207.89 L2131.88 1207.89 L2132.46 1207.89 L2133.05 1207.89 L2133.63 1207.89 L2134.22 1207.89 L2134.81 1207.89 L2135.39 1207.89 L2135.98 1207.89 L2136.57 1207.89 L2137.15 1207.89 L2137.74 1207.89 L2138.33 1207.89 L2138.91 1207.89 L2139.5 1207.89 L2140.09 1207.89 L2140.67 1207.89 L2141.26 1207.89 L2141.84 1207.89 L2142.43 1207.89 L2143.02 1207.89 L2143.6 1207.89 L2144.19 1207.89 L2144.78 1207.89 L2145.36 1207.89 L2145.95 1207.89 L2146.54 1207.89 L2147.12 1207.89 L2147.71 1207.89 L2148.3 1207.89 L2148.88 1207.89 L2149.47 1207.89 L2150.05 1207.89 L2150.64 1207.89 L2151.23 1207.89 L2151.81 1207.89 L2152.4 1207.89 L2152.99 1207.89 L2153.57 1207.89 L2154.16 1207.89 L2154.75 1207.89 L2155.33 1207.89 L2155.92 1207.89 L2156.5 1207.89 L2157.09 1207.89 L2157.68 1207.89 L2158.26 1207.89 L2158.26 1207.77 L2157.68 1207.77 L2157.09 1207.77 L2156.5 1207.77 L2155.92 1207.77 L2155.33 1207.77 L2154.75 1207.77 L2154.16 1207.77 L2153.57 1207.77 L2152.99 1207.77 L2152.4 1207.77 L2151.81 1207.77 L2151.23 1207.77 L2150.64 1207.77 L2150.05 1207.77 L2149.47 1207.77 L2148.88 1207.77 L2148.3 1207.77 L2147.71 1207.77 L2147.12 1207.77 L2146.54 1207.77 L2145.95 1207.77 L2145.36 1207.77 L2144.78 1207.77 L2144.19 1207.77 L2143.6 1207.77 L2143.02 1207.77 L2142.43 1207.77 L2141.84 1207.77 L2141.26 1207.77 L2140.67 1207.77 L2140.09 1207.77 L2139.5 1207.77 L2138.91 1207.77 L2138.33 1207.77 L2137.74 1207.77 L2137.15 1207.77 L2136.57 1207.77 L2135.98 1207.77 L2135.39 1207.77 L2134.81 1207.77 L2134.22 1207.77 L2133.63 1207.77 L2133.05 1207.77 L2132.46 1207.77 L2131.88 1207.77 L2131.29 1207.77 L2130.7 1207.77 L2130.12 1207.77 L2129.53 1207.77 L2128.94 1207.77 L2128.36 1207.77 L2127.77 1207.77 L2127.18 1207.77 L2126.6 1207.77 L2126.01 1207.77 L2125.42 1207.77 L2124.84 1207.77 L2124.25 1207.77 L2123.67 1207.77 L2123.08 1207.77 L2122.49 1207.77 L2121.91 1207.77 L2121.32 1207.77 L2120.73 1207.77 L2120.15 1207.77 L2119.56 1207.77 L2118.97 1207.77 L2118.39 1207.77 L2117.8 1207.77 L2117.22 1207.77 L2116.63 1207.77 L2116.04 1207.77 L2115.46 1207.77 L2114.87 1207.77 L2114.28 1207.77 L2113.7 1207.77 L2113.11 1207.77 L2112.52 1207.77 L2111.94 1207.77 L2111.35 1207.77 L2110.76 1207.77 L2110.18 1207.77 L2109.59 1207.77 L2109.01 1207.77 L2108.42 1207.77 L2107.83 1207.77 L2107.25 1207.77 L2106.66 1207.77 L2106.07 1207.77 L2105.49 1207.77 L2104.9 1207.77 L2104.31 1207.77 L2103.73 1207.77 L2103.14 1207.77 L2102.55 1207.77 L2101.97 1207.77 L2101.38 1207.77 L2100.8 1207.77 L2100.21 1207.77 L2099.62 1207.77 L2099.04 1207.77 L2098.45 1207.77 L2097.86 1207.77 L2097.28 1207.77 L2096.69 1207.77 L2096.1 1207.77 L2095.52 1207.77 L2094.93 1207.77 L2094.35 1207.77 L2093.76 1207.77 L2093.17 1207.77 L2092.59 1207.77 L2092 1207.77 L2091.41 1207.77 L2090.83 1207.77 L2090.24 1207.77 L2089.65 1207.77 L2089.07 1207.77 L2088.48 1207.77 L2087.89 1207.77 L2087.31 1207.77 L2086.72 1207.77 L2086.14 1207.77 L2085.55 1207.77 L2084.96 1207.77 L2084.38 1207.77 L2083.79 1207.77 L2083.2 1207.77 L2082.62 1207.77 L2082.03 1207.77 L2081.44 1207.77 L2080.86 1207.77 L2080.27 1207.77 L2079.68 1207.77 L2079.1 1207.77 L2078.51 1207.77 L2077.93 1207.77 L2077.34 1207.77 L2076.75 1207.77 L2076.17 1207.77 L2075.58 1207.77 L2074.99 1207.77 L2074.41 1207.77 L2073.82 1207.77 L2073.23 1207.77 L2072.65 1207.77 L2072.06 1207.77 L2071.48 1207.77 L2070.89 1207.77 L2070.3 1207.77 L2069.72 1207.77 L2069.13 1207.77 L2068.54 1207.77 L2067.96 1207.77 L2067.37 1207.77 L2066.78 1207.77 L2066.2 1207.77 L2065.61 1207.77 L2065.02 1207.77 L2064.44 1207.77 L2063.85 1207.77 L2063.27 1207.77 L2062.68 1207.77 L2062.09 1207.77 L2061.51 1207.77 L2060.92 1207.77 L2060.33 1207.77 L2059.75 1207.77 L2059.16 1207.77 L2058.57 1207.77 L2057.99 1207.77 L2057.4 1207.77 L2056.81 1207.77 L2056.23 1207.77 L2055.64 1207.77 L2055.06 1207.77 L2054.47 1207.77 L2053.88 1207.77 L2053.3 1207.77 L2052.71 1207.77 L2052.12 1207.77 L2051.54 1207.77 L2050.95 1207.77 L2050.36 1207.77 L2049.78 1207.77 L2049.19 1207.77 L2048.6 1207.77 L2048.02 1207.77 L2047.43 1207.77 L2046.85 1207.77 L2046.26 1207.77 L2045.67 1207.77 L2045.09 1207.77 L2044.5 1207.77 L2043.91 1207.77 L2043.33 1207.77 L2042.74 1207.77 L2042.15 1207.77 L2041.57 1207.77 L2040.98 1207.77 L2040.4 1207.77 L2039.81 1207.77 L2039.22 1207.77 L2038.64 1207.77 L2038.05 1207.77 L2037.46 1207.77 L2036.88 1207.77 L2036.29 1207.77 L2035.7 1207.77 L2035.12 1207.77 L2034.53 1207.77 L2033.94 1207.77 L2033.36 1207.77 L2032.77 1207.77 L2032.19 1207.77 L2031.6 1207.77 L2031.01 1207.77 L2030.43 1207.77 L2029.84 1207.77 L2029.25 1207.77 L2028.67 1207.77 L2028.08 1207.77 L2027.49 1207.77 L2026.91 1207.77 L2026.32 1207.77 L2025.73 1207.77 L2025.15 1207.77 L2024.56 1207.77 L2023.98 1207.77 L2023.39 1207.77 L2022.8 1207.77 L2022.22 1207.77 L2021.63 1207.77 L2021.04 1207.77 L2020.46 1207.77 L2019.87 1207.77 L2019.28 1207.77 L2018.7 1207.77 L2018.11 1207.77 L2017.53 1207.77 L2016.94 1207.77 L2016.35 1207.77 L2015.77 1207.77 L2015.18 1207.77 L2014.59 1207.77 L2014.01 1207.77 L2013.42 1207.77 L2012.83 1207.77 L2012.25 1207.77 L2011.66 1207.77 L2011.07 1207.77 L2010.49 1207.77 L2009.9 1207.77 L2009.32 1207.77 L2008.73 1207.77 L2008.14 1207.77 L2007.56 1207.77 L2006.97 1207.77 L2006.38 1207.77 L2005.8 1207.77 L2005.21 1207.77 L2004.62 1207.77 L2004.04 1207.77 L2003.45 1207.77 L2002.86 1207.77 L2002.28 1207.77 L2001.69 1207.77 L2001.11 1207.77 L2000.52 1207.77 L1999.93 1207.77 L1999.35 1207.77 L1998.76 1207.77 L1998.17 1207.77 L1997.59 1207.77 L1997 1207.77 L1996.41 1207.77 L1995.83 1207.77 L1995.24 1207.77 L1994.65 1207.77 L1994.07 1207.77 L1993.48 1207.77 L1992.9 1207.77 L1992.31 1207.77 L1991.72 1207.77 L1991.14 1207.77 L1990.55 1207.77 L1989.96 1207.77 L1989.38 1207.77 L1988.79 1207.77 L1988.2 1207.77 L1987.62 1207.77 L1987.03 1207.77 L1986.45 1207.77 L1985.86 1207.77 L1985.27 1207.77 L1984.69 1207.77 L1984.1 1207.77 L1983.51 1207.77 L1982.93 1207.77 L1982.34 1207.77 L1981.75 1207.77 L1981.17 1207.77 L1980.58 1207.77 L1979.99 1207.77 L1979.41 1207.77 L1978.82 1207.77 L1978.24 1207.77 L1977.65 1207.77 L1977.06 1207.77 L1976.48 1207.77 L1975.89 1207.77 L1975.3 1207.77 L1974.72 1207.77 L1974.13 1207.77 L1973.54 1207.77 L1972.96 1207.77 L1972.37 1207.77 L1971.78 1207.77 L1971.2 1207.77 L1970.61 1207.77 L1970.03 1207.77 L1969.44 1207.77 L1968.85 1207.77 L1968.27 1207.77 L1967.68 1207.77 L1967.09 1207.77 L1966.51 1207.77 L1965.92 1207.77 L1965.33 1207.77 L1964.75 1207.77 L1964.16 1207.77 L1963.58 1207.77 L1962.99 1207.77 L1962.4 1207.77 L1961.82 1207.77 L1961.23 1207.77 L1960.64 1207.77 L1960.06 1207.77 L1959.47 1207.77 L1958.88 1207.77 L1958.3 1207.77 L1957.71 1207.77 L1957.12 1207.77 L1956.54 1207.77 L1955.95 1207.77 L1955.37 1207.77 L1954.78 1207.77 L1954.19 1207.77 L1953.61 1207.77 L1953.02 1207.77 L1952.43 1207.77 L1951.85 1207.77 L1951.26 1207.77 L1950.67 1207.77 L1950.09 1207.77 L1949.5 1207.77 L1948.91 1207.77 L1948.33 1207.77 L1947.74 1207.77 L1947.16 1207.77 L1946.57 1207.77 L1945.98 1207.77 L1945.4 1207.77 L1944.81 1207.77 L1944.22 1207.77 L1943.64 1207.77 L1943.05 1207.77 L1942.46 1207.77 L1941.88 1207.77 L1941.29 1207.77 L1940.71 1207.77 L1940.12 1207.77 L1939.53 1207.77 L1938.95 1207.77 L1938.36 1207.77 L1937.77 1207.77 L1937.19 1207.77 L1936.6 1207.77 L1936.01 1207.77 L1935.43 1207.77 L1934.84 1207.77 L1934.25 1207.77 L1933.67 1207.77 L1933.08 1207.77 L1932.5 1207.77 L1931.91 1207.77 L1931.32 1207.77 L1930.74 1207.77 L1930.15 1207.77 L1929.56 1207.77 L1928.98 1207.77 L1928.39 1207.77 L1927.8 1207.77 L1927.22 1207.77 L1926.63 1207.77 L1926.04 1207.77 L1925.46 1207.77 L1924.87 1207.77 L1924.29 1207.77 L1923.7 1207.77 L1923.11 1207.77 L1922.53 1207.77 L1921.94 1207.77 L1921.35 1207.77 L1920.77 1207.77 L1920.18 1207.77 L1919.59 1207.77 L1919.01 1207.77 L1918.42 1207.77 L1917.83 1207.77 L1917.25 1207.77 L1916.66 1207.77 L1916.08 1207.77 L1915.49 1207.77 L1914.9 1207.77 L1914.32 1207.77 L1913.73 1207.77 L1913.14 1207.77 L1912.56 1207.77 L1911.97 1207.77 L1911.38 1207.77 L1910.8 1207.77 L1910.21 1207.77 L1909.63 1207.77 L1909.04 1207.77 L1908.45 1207.77 L1907.87 1207.77 L1907.28 1207.77 L1906.69 1207.77 L1906.11 1207.77 L1905.52 1207.77 L1904.93 1207.77 L1904.35 1207.77 L1903.76 1207.77 L1903.17 1207.77 L1902.59 1207.77 L1902 1207.77 L1901.42 1207.77 L1900.83 1207.77 L1900.24 1207.77 L1899.66 1207.77 L1899.07 1207.77 L1898.48 1207.77 L1897.9 1207.77 L1897.31 1207.77 L1896.72 1207.77 L1896.14 1207.77 L1895.55 1207.77 L1894.96 1207.77 L1894.38 1207.77 L1893.79 1207.77 L1893.21 1207.77 L1892.62 1207.77 L1892.03 1207.77 L1891.45 1207.77 L1890.86 1207.77 L1890.27 1207.77 L1889.69 1207.77 L1889.1 1207.77 L1888.51 1207.77 L1887.93 1207.77 L1887.34 1207.77 L1886.76 1207.77 L1886.17 1207.77 L1885.58 1207.77 L1885 1207.77 L1884.41 1207.77 L1883.82 1207.77 L1883.24 1207.77 L1882.65 1207.77 L1882.06 1207.77 L1881.48 1207.77 L1880.89 1207.77 L1880.3 1207.77 L1879.72 1207.77 L1879.13 1207.77 L1878.55 1207.77 L1877.96 1207.77 L1877.37 1207.77 L1876.79 1207.77 L1876.2 1207.77 L1875.61 1207.77 L1875.03 1207.77 L1874.44 1207.77 L1873.85 1207.77 L1873.27 1207.77 L1872.68 1207.77 L1872.09 1207.77 L1871.51 1207.77 L1870.92 1207.77 L1870.34 1207.77 L1869.75 1207.77 L1869.16 1207.77 L1868.58 1207.77 L1867.99 1207.77 L1867.4 1207.77 L1866.82 1207.77 L1866.23 1207.77 L1865.64 1207.77 L1865.06 1207.77 L1864.47 1207.77 L1863.88 1207.77 L1863.3 1207.77 L1862.71 1207.77 L1862.13 1207.77 L1861.54 1207.77 L1860.95 1207.77 L1860.37 1207.77 L1859.78 1207.77 L1859.19 1207.77 L1858.61 1207.77 L1858.02 1207.77 L1857.43 1207.77 L1856.85 1207.77 L1856.26 1207.77 L1855.68 1207.77 L1855.09 1207.77 L1854.5 1207.77 L1853.92 1207.77 L1853.33 1207.77 L1852.74 1207.77 L1852.16 1207.77 L1851.57 1207.77 L1850.98 1207.77 L1850.4 1207.77 L1849.81 1207.77 L1849.22 1207.77 L1848.64 1207.77 L1848.05 1207.77 L1847.47 1207.77 L1846.88 1207.77 L1846.29 1207.77 L1845.71 1207.77 L1845.12 1207.77 L1844.53 1207.77 L1843.95 1207.77 L1843.36 1207.77 L1842.77 1207.77 L1842.19 1207.77 L1841.6 1207.77 L1841.01 1207.77 L1840.43 1207.77 L1839.84 1207.77 L1839.26 1207.77 L1838.67 1207.77 L1838.08 1207.77 L1837.5 1207.77 L1836.91 1207.77 L1836.32 1207.77 L1835.74 1207.77 L1835.15 1207.77 L1834.56 1207.77 L1833.98 1207.77 L1833.39 1207.77 L1832.81 1207.77 L1832.22 1207.77 L1831.63 1207.77 L1831.05 1207.77 L1830.46 1207.77 L1829.87 1207.77 L1829.29 1207.77 L1828.7 1207.77 L1828.11 1207.77 L1827.53 1207.77 L1826.94 1207.77 L1826.35 1207.77 L1825.77 1207.77 L1825.18 1207.77 L1824.6 1207.77 L1824.01 1207.77 L1823.42 1207.77 L1822.84 1207.77 L1822.25 1207.77 L1821.66 1207.77 L1821.08 1207.77 L1820.49 1207.77 L1819.9 1207.77 L1819.32 1207.77 L1818.73 1207.77 L1818.14 1207.77 L1817.56 1207.77 L1816.97 1207.77 L1816.39 1207.77 L1815.8 1207.77 L1815.21 1207.77 L1814.63 1207.77 L1814.04 1207.77 L1813.45 1207.77 L1812.87 1207.77 L1812.28 1207.77 L1811.69 1207.77 L1811.11 1207.77 L1810.52 1207.77 L1809.94 1207.77 L1809.35 1207.77 L1808.76 1207.77 L1808.18 1207.77 L1807.59 1207.77 L1807 1207.77 L1806.42 1207.77 L1805.83 1207.77 L1805.24 1207.77 L1804.66 1207.77 L1804.07 1207.77 L1803.48 1207.77 L1802.9 1207.77 L1802.31 1207.77 L1801.73 1207.77 L1801.14 1207.77 L1800.55 1207.77 L1799.97 1207.77 L1799.38 1207.77 L1798.79 1207.77 L1798.21 1207.77 L1797.62 1207.77 L1797.03 1207.77 L1796.45 1207.77 L1795.86 1207.77 L1795.27 1207.77 L1794.69 1207.77 L1794.1 1207.77 L1793.52 1207.77 L1792.93 1207.77 L1792.34 1207.77 L1791.76 1207.77 L1791.17 1207.77 L1790.58 1207.77 L1790 1207.77 L1789.41 1207.77 L1788.82 1207.77 L1788.24 1207.77 L1787.65 1207.77 L1787.06 1207.77 L1786.48 1207.77 L1785.89 1207.77 L1785.31 1207.77 L1784.72 1207.77 L1784.13 1207.77 L1783.55 1207.77 L1782.96 1207.77 L1782.37 1207.77 L1781.79 1207.77 L1781.2 1207.77 L1780.61 1207.77 L1780.03 1207.77 L1779.44 1207.77 L1778.86 1207.77 L1778.27 1207.77 L1777.68 1207.77 L1777.1 1207.77 L1776.51 1207.77 L1775.92 1207.77 L1775.34 1207.77 L1774.75 1207.77 L1774.16 1207.77 L1773.58 1207.77 L1772.99 1207.77 L1772.4 1207.77 L1771.82 1207.77 L1771.23 1207.77 L1770.65 1207.77 L1770.06 1207.77 L1769.47 1207.77 L1768.89 1207.77 L1768.3 1207.77 L1767.71 1207.77 L1767.13 1207.77 L1766.54 1207.77 L1765.95 1207.77 L1765.37 1207.77 L1764.78 1207.77 L1764.19 1207.77 L1763.61 1207.77 L1763.02 1207.77 L1762.44 1207.77 L1761.85 1207.77 L1761.26 1207.77 L1760.68 1207.77 L1760.09 1207.77 L1759.5 1207.77 L1758.92 1207.77 L1758.33 1207.77 L1757.74 1207.77 L1757.16 1207.77 L1756.57 1207.77 L1755.99 1207.77 L1755.4 1207.77 L1754.81 1207.77 L1754.23 1207.77 L1753.64 1207.77 L1753.05 1207.77 L1752.47 1207.77 L1751.88 1207.77 L1751.29 1207.77 L1750.71 1207.77 L1750.12 1207.77 L1749.53 1207.77 L1748.95 1207.77 L1748.36 1207.77 L1747.78 1207.77 L1747.19 1207.77 L1746.6 1207.77 L1746.02 1207.77 L1745.43 1207.77 L1744.84 1207.77 L1744.26 1207.77 L1743.67 1207.77 L1743.08 1207.77 L1742.5 1207.77 L1741.91 1207.77 L1741.32 1207.77 L1740.74 1207.77 L1740.15 1207.77 L1739.57 1207.77 L1738.98 1207.77 L1738.39 1207.77 L1737.81 1207.77 L1737.22 1207.77 L1736.63 1207.77 L1736.05 1207.77 L1735.46 1207.77 L1734.87 1207.77 L1734.29 1207.77 L1733.7 1207.77 L1733.11 1207.77 L1732.53 1207.77 L1731.94 1207.77 L1731.36 1207.77 L1730.77 1207.77 L1730.18 1207.77 L1729.6 1207.77 L1729.01 1207.77 L1728.42 1207.77 L1727.84 1207.77 L1727.25 1207.77 L1726.66 1207.77 L1726.08 1207.77 L1725.49 1207.77 L1724.91 1207.77 L1724.32 1207.77 L1723.73 1207.77 L1723.15 1207.77 L1722.56 1207.77 L1721.97 1207.77 L1721.39 1207.77 L1720.8 1207.77 L1720.21 1207.77 L1719.63 1207.77 L1719.04 1207.77 L1718.45 1207.77 L1717.87 1207.77 L1717.28 1207.77 L1716.7 1207.77 L1716.11 1207.77 L1715.52 1207.77 L1714.94 1207.77 L1714.35 1207.77 L1713.76 1207.77 L1713.18 1207.77 L1712.59 1207.77 L1712 1207.77 L1711.42 1207.77 L1710.83 1207.77 L1710.24 1207.77 L1709.66 1207.77 L1709.07 1207.77 L1708.49 1207.77 L1707.9 1207.77 L1707.31 1207.77 L1706.73 1207.77 L1706.14 1207.77 L1705.55 1207.77 L1704.97 1207.77 L1704.38 1207.77 L1703.79 1207.77 L1703.21 1207.77 L1702.62 1207.77 L1702.04 1207.77 L1701.45 1207.77 L1700.86 1207.77 L1700.28 1207.77 L1699.69 1207.77 L1699.1 1207.77 L1698.52 1207.77 L1697.93 1207.77 L1697.34 1207.77 L1696.76 1207.77 L1696.17 1207.77 L1695.58 1207.77 L1695 1207.77 L1694.41 1207.77 L1693.83 1207.77 L1693.24 1207.77 L1692.65 1207.77 L1692.07 1207.77 L1691.48 1207.77 L1690.89 1207.77 L1690.31 1207.77 L1689.72 1207.77 L1689.13 1207.77 L1688.55 1207.77 L1687.96 1207.77 L1687.37 1207.77 L1686.79 1207.77 L1686.2 1207.77 L1685.62 1207.77 L1685.03 1207.77 L1684.44 1207.77 L1683.86 1207.77 L1683.27 1207.77 L1682.68 1207.77 L1682.1 1207.77 L1681.51 1207.77 L1680.92 1207.77 L1680.34 1207.77 L1679.75 1207.77 L1679.17 1207.77 L1678.58 1207.77 L1677.99 1207.77 L1677.41 1207.77 L1676.82 1207.77 L1676.23 1207.77 L1675.65 1207.77 L1675.06 1207.77 L1674.47 1207.77 L1673.89 1207.77 L1673.3 1207.77 L1672.71 1207.77 L1672.13 1207.77 L1671.54 1207.77 L1670.96 1207.77 L1670.37 1207.77 L1669.78 1207.77 L1669.2 1207.77 L1668.61 1207.77 L1668.02 1207.77 L1667.44 1207.77 L1666.85 1207.77 L1666.26 1207.77 L1665.68 1207.77 L1665.09 1207.77 L1664.5 1207.77 L1663.92 1207.77 L1663.33 1207.77 L1662.75 1207.77 L1662.16 1207.77 L1661.57 1207.77 L1660.99 1207.77 L1660.4 1207.77 L1659.81 1207.77 L1659.23 1207.77 L1658.64 1207.77 L1658.05 1207.77 L1657.47 1207.77 L1656.88 1207.77 L1656.29 1207.77 L1655.71 1207.77 L1655.12 1207.77 L1654.54 1207.77 L1653.95 1207.77 L1653.36 1207.77 L1652.78 1207.77 L1652.19 1207.77 L1651.6 1207.77 L1651.02 1207.77 L1650.43 1207.77 L1649.84 1207.77 L1649.26 1207.77 L1648.67 1207.77 L1648.09 1207.77 L1647.5 1207.77 L1646.91 1207.77 L1646.33 1207.77 L1645.74 1207.77 L1645.15 1207.77 L1644.57 1207.77 L1643.98 1207.77 L1643.39 1207.77 L1642.81 1207.77 L1642.22 1207.77 L1641.63 1207.77 L1641.05 1207.77 L1640.46 1207.77 L1639.88 1207.77 L1639.29 1207.77 L1638.7 1207.77 L1638.12 1207.77 L1637.53 1207.77 L1636.94 1207.77 L1636.36 1207.77 L1635.77 1207.77 L1635.18 1207.77 L1634.6 1207.77 L1634.01 1207.77 L1633.42 1207.77 L1632.84 1207.77 L1632.25 1207.77 L1631.67 1207.77 L1631.08 1207.77 L1630.49 1207.77 L1629.91 1207.77 L1629.32 1207.77 L1628.73 1207.77 L1628.15 1207.77 L1627.56 1207.77 L1626.97 1207.77 L1626.39 1207.77 L1625.8 1207.77 L1625.22 1207.77 L1624.63 1207.77 L1624.04 1207.77 L1623.46 1207.77 L1622.87 1207.77 L1622.28 1207.77 L1621.7 1207.77 L1621.11 1207.77 L1620.52 1207.77 L1619.94 1207.77 L1619.35 1207.77 L1618.76 1207.77 L1618.18 1207.77 L1617.59 1207.77 L1617.01 1207.77 L1616.42 1207.77 L1615.83 1207.77 L1615.25 1207.77 L1614.66 1207.77 L1614.07 1207.77 L1613.49 1207.77 L1612.9 1207.77 L1612.31 1207.77 L1611.73 1207.77 L1611.14 1207.77 L1610.55 1207.77 L1609.97 1207.77 L1609.38 1207.77 L1608.8 1207.77 L1608.21 1207.77 L1607.62 1207.77 L1607.04 1207.77 L1606.45 1207.77 L1605.86 1207.77 L1605.28 1207.77 L1604.69 1207.77 L1604.1 1207.77 L1603.52 1207.77 L1602.93 1207.77 L1602.34 1207.77 L1601.76 1207.77 L1601.17 1207.77 L1600.59 1207.77 L1600 1207.77 L1599.41 1207.77 L1598.83 1207.77 L1598.24 1207.77 L1597.65 1207.77 L1597.07 1207.77 L1596.48 1207.77 L1595.89 1207.77 L1595.31 1207.77 L1594.72 1207.77 L1594.14 1207.77 L1593.55 1207.77 L1592.96 1207.77 L1592.38 1207.77 L1591.79 1207.77 L1591.2 1207.77 L1590.62 1207.77 L1590.03 1207.77 L1589.44 1207.77 L1588.86 1207.77 L1588.27 1207.77 L1587.68 1207.77 L1587.1 1207.77 L1586.51 1207.77 L1585.93 1207.77 L1585.34 1207.77 L1584.75 1207.77 L1584.17 1207.77 L1583.58 1207.77 L1582.99 1207.77 L1582.41 1207.77 L1581.82 1207.77 L1581.23 1207.77 L1580.65 1207.77 L1580.06 1207.77 L1579.47 1207.77 L1578.89 1207.77 L1578.3 1207.77 L1577.72 1207.77 L1577.13 1207.77 L1576.54 1207.77 L1575.96 1207.77 L1575.37 1207.77 L1574.78 1207.77 L1574.2 1207.77 L1573.61 1207.77 L1573.02 1207.77 L1572.44 1207.77 L1571.85 1207.77 L1571.27 1207.77 L1570.68 1207.77 L1570.09 1207.77 L1569.51 1207.77 L1568.92 1207.77 L1568.33 1207.77 L1567.75 1207.77 L1567.16 1207.77 L1566.57 1207.77 L1565.99 1207.77 L1565.4 1207.77 L1564.81 1207.77 L1564.23 1207.77 L1563.64 1207.77 L1563.06 1207.77 L1562.47 1207.77 L1561.88 1207.77 L1561.3 1207.77 L1560.71 1207.77 L1560.12 1207.77 L1559.54 1207.77 L1558.95 1207.77 L1558.36 1207.77 L1557.78 1207.77 L1557.19 1207.77 L1556.6 1207.77 L1556.02 1207.77 L1555.43 1207.77 L1554.85 1207.77 L1554.26 1207.77 L1553.67 1207.77 L1553.09 1207.77 L1552.5 1207.77 L1551.91 1207.77 L1551.33 1207.77 L1550.74 1207.77 L1550.15 1207.77 L1549.57 1207.77 L1548.98 1207.77 L1548.4 1207.77 L1547.81 1207.77 L1547.22 1207.77 L1546.64 1207.77 L1546.05 1207.77 L1545.46 1207.77 L1544.88 1207.77 L1544.29 1207.77 L1543.7 1207.77 L1543.12 1207.77 L1542.53 1207.77 L1541.94 1207.77 L1541.36 1207.77 L1540.77 1207.77 L1540.19 1207.77 L1539.6 1207.77 L1539.01 1207.77 L1538.43 1207.77 L1537.84 1207.77 L1537.25 1207.77 L1536.67 1207.77 L1536.08 1207.77 L1535.49 1207.77 L1534.91 1207.77 L1534.32 1207.77 L1533.73 1207.77 L1533.15 1207.77 L1532.56 1207.77 L1531.98 1207.77 L1531.39 1207.77 L1530.8 1207.77 L1530.22 1207.77 L1529.63 1207.77 L1529.04 1207.77 L1528.46 1207.77 L1527.87 1207.77 L1527.28 1207.77 L1526.7 1207.77 L1526.11 1207.77 L1525.52 1207.77 L1524.94 1207.77 L1524.35 1207.77 L1523.77 1207.77 L1523.18 1207.77 L1522.59 1207.77 L1522.01 1207.77 L1521.42 1207.77 L1520.83 1207.77 L1520.25 1207.77 L1519.66 1207.77 L1519.07 1207.77 L1518.49 1207.77 L1517.9 1207.77 L1517.32 1207.77 L1516.73 1207.77 L1516.14 1207.77 L1515.56 1207.77 L1514.97 1207.77 L1514.38 1207.77 L1513.8 1207.77 L1513.21 1207.77 L1512.62 1207.77 L1512.04 1207.77 L1511.45 1207.77 L1510.86 1207.77 L1510.28 1207.77 L1509.69 1207.77 L1509.11 1207.77 L1508.52 1207.77 L1507.93 1207.77 L1507.35 1207.77 L1506.76 1207.77 L1506.17 1207.77 L1505.59 1207.77 L1505 1207.77 L1504.41 1207.77 L1503.83 1207.77 L1503.24 1207.77 L1502.65 1207.77 L1502.07 1207.77 L1501.48 1207.77 L1500.9 1207.77 L1500.31 1207.77 L1499.72 1207.77 L1499.14 1207.77 L1498.55 1207.77 L1497.96 1207.77 L1497.38 1207.77 L1496.79 1207.77 L1496.2 1207.77 L1495.62 1207.77 L1495.03 1207.77 L1494.45 1207.77 L1493.86 1207.77 L1493.27 1207.77 L1492.69 1207.77 L1492.1 1207.77 L1491.51 1207.77 L1490.93 1207.77 L1490.34 1207.77 L1489.75 1207.77 L1489.17 1207.77 L1488.58 1207.77 L1487.99 1207.77 L1487.41 1207.77 L1486.82 1207.77 L1486.24 1207.77 L1485.65 1207.77 L1485.06 1207.77 L1484.48 1207.77 L1483.89 1207.77 L1483.3 1207.77 L1482.72 1207.77 L1482.13 1207.77 L1481.54 1207.77 L1480.96 1207.77 L1480.37 1207.77 L1479.78 1207.77 L1479.2 1207.77 L1478.61 1207.77 L1478.03 1207.77 L1477.44 1207.77 L1476.85 1207.77 L1476.27 1207.77 L1475.68 1207.77 L1475.09 1207.77 L1474.51 1207.77 L1473.92 1207.77 L1473.33 1207.77 L1472.75 1207.77 L1472.16 1207.77 L1471.57 1207.77 L1470.99 1207.77 L1470.4 1207.77 L1469.82 1207.77 L1469.23 1207.77 L1468.64 1207.77 L1468.06 1207.77 L1467.47 1207.77 L1466.88 1207.77 L1466.3 1207.77 L1465.71 1207.77 L1465.12 1207.77 L1464.54 1207.77 L1463.95 1207.77 L1463.37 1207.77 L1462.78 1207.77 L1462.19 1207.77 L1461.61 1207.77 L1461.02 1207.77 L1460.43 1207.77 L1459.85 1207.77 L1459.26 1207.77 L1458.67 1207.77 L1458.09 1207.77 L1457.5 1207.77 L1456.91 1207.77 L1456.33 1207.77 L1455.74 1207.77 L1455.16 1207.77 L1454.57 1207.77 L1453.98 1207.77 L1453.4 1207.77 L1452.81 1207.77 L1452.22 1207.77 L1451.64 1207.77 L1451.05 1207.77 L1450.46 1207.77 L1449.88 1207.77 L1449.29 1207.77 L1448.7 1207.77 L1448.12 1207.77 L1447.53 1207.77 L1446.95 1207.77 L1446.36 1207.77 L1445.77 1207.77 L1445.19 1207.77 L1444.6 1207.77 L1444.01 1207.77 L1443.43 1207.77 L1442.84 1207.77 L1442.25 1207.77 L1441.67 1207.77 L1441.08 1207.77 L1440.5 1207.77 L1439.91 1207.77 L1439.32 1207.77 L1438.74 1207.77 L1438.15 1207.77 L1437.56 1207.77 L1436.98 1207.77 L1436.39 1207.77 L1435.8 1207.77 L1435.22 1207.77 L1434.63 1207.77 L1434.04 1207.77 L1433.46 1207.77 L1432.87 1207.77 L1432.29 1207.77 L1431.7 1207.77 L1431.11 1207.77 L1430.53 1207.77 L1429.94 1207.77 L1429.35 1207.77 L1428.77 1207.77 L1428.18 1207.77 L1427.59 1207.77 L1427.01 1207.77 L1426.42 1207.77 L1425.83 1207.77 L1425.25 1207.77 L1424.66 1207.77 L1424.08 1207.77 L1423.49 1207.77 L1422.9 1207.77 L1422.32 1207.77 L1421.73 1207.77 L1421.14 1207.77 L1420.56 1207.77 L1419.97 1207.77 L1419.38 1207.77 L1418.8 1207.77 L1418.21 1207.77 L1417.63 1207.77 L1417.04 1207.77 L1416.45 1207.77 L1415.87 1207.77 L1415.28 1207.77 L1414.69 1207.77 L1414.11 1207.77 L1413.52 1207.77 L1412.93 1207.77 L1412.35 1207.77 L1411.76 1207.77 L1411.17 1207.77 L1410.59 1207.77 L1410 1207.77 L1409.42 1207.77 L1408.83 1207.77 L1408.24 1207.77 L1407.66 1207.77 L1407.07 1207.77 L1406.48 1207.77 L1405.9 1207.77 L1405.31 1207.77 L1404.72 1207.77 L1404.14 1207.77 L1403.55 1207.77 L1402.96 1207.77 L1402.38 1207.77 L1401.79 1207.77 L1401.21 1207.77 L1400.62 1207.77 L1400.03 1207.77 L1399.45 1207.77 L1398.86 1207.77 L1398.27 1207.77 L1397.69 1207.77 L1397.1 1207.77 L1396.51 1207.77 L1395.93 1207.77 L1395.34 1207.77 L1394.75 1207.77 L1394.17 1207.77 L1393.58 1207.77 L1393 1207.77 L1392.41 1207.77 L1391.82 1207.77 L1391.24 1207.77 L1390.65 1207.77 L1390.06 1207.77 L1389.48 1207.77 L1388.89 1207.77 L1388.3 1207.77 L1387.72 1207.77 L1387.13 1207.77 L1386.55 1207.77 L1385.96 1207.77 L1385.37 1207.77 L1384.79 1207.77 L1384.2 1207.77 L1383.61 1207.77 L1383.03 1207.77 L1382.44 1207.77 L1381.85 1207.77 L1381.27 1207.77 L1380.68 1207.77 L1380.09 1207.77 L1379.51 1207.77 L1378.92 1207.77 L1378.34 1207.77 L1377.75 1207.77 L1377.16 1207.77 L1376.58 1207.77 L1375.99 1207.77 L1375.4 1207.77 L1374.82 1207.77 L1374.23 1207.77 L1373.64 1207.77 L1373.06 1207.77 L1372.47 1207.77 L1371.88 1207.77 L1371.3 1207.77 L1370.71 1207.77 L1370.13 1207.77 L1369.54 1207.77 L1368.95 1207.77 L1368.37 1207.77 L1367.78 1207.77 L1367.19 1207.77 L1366.61 1207.77 L1366.02 1207.77 L1365.43 1207.77 L1364.85 1207.77 L1364.26 1207.77 L1363.68 1207.77 L1363.09 1207.77 L1362.5 1207.77 L1361.92 1207.77 L1361.33 1207.77 L1360.74 1207.77 L1360.16 1207.77 L1359.57 1207.77 L1358.98 1207.77 L1358.4 1207.77 L1357.81 1207.77 L1357.22 1207.77 L1356.64 1207.77 L1356.05 1207.77 L1355.47 1207.77 L1354.88 1207.77 L1354.29 1207.77 L1353.71 1207.77 L1353.12 1207.77 L1352.53 1207.77 L1351.95 1207.77 L1351.36 1207.77 L1350.77 1207.77 L1350.19 1207.77 L1349.6 1207.77 L1349.01 1207.77 L1348.43 1207.77 L1347.84 1207.77 L1347.26 1207.77 L1346.67 1207.77 L1346.08 1207.77 L1345.5 1207.77 L1344.91 1207.77 L1344.32 1207.77 L1343.74 1207.77 L1343.15 1207.77 L1342.56 1207.77 L1341.98 1207.77 L1341.39 1207.77 L1340.8 1207.77 L1340.22 1207.77 L1339.63 1207.77 L1339.05 1207.77 L1338.46 1207.77 L1337.87 1207.77 L1337.29 1207.77 L1336.7 1207.77 L1336.11 1207.77 L1335.53 1207.77 L1334.94 1207.77 L1334.35 1207.77 L1333.77 1207.77 L1333.18 1207.77 L1332.6 1207.77 L1332.01 1207.77 L1331.42 1207.77 L1330.84 1207.77 L1330.25 1207.77 L1329.66 1207.77 L1329.08 1207.77 L1328.49 1207.77 L1327.9 1207.77 L1327.32 1207.77 L1326.73 1207.77 L1326.14 1207.77 L1325.56 1207.77 L1324.97 1207.77 L1324.39 1207.77 L1323.8 1207.77 L1323.21 1207.77 L1322.63 1207.77 L1322.04 1207.77 L1321.45 1207.77 L1320.87 1207.77 L1320.28 1207.77 L1319.69 1207.77 L1319.11 1207.77 L1318.52 1207.77 L1317.93 1207.77 L1317.35 1207.77 L1316.76 1207.77 L1316.18 1207.77 L1315.59 1207.77 L1315 1207.77 L1314.42 1207.77 L1313.83 1207.77 L1313.24 1207.77 L1312.66 1207.77 L1312.07 1207.77 L1311.48 1207.77 L1310.9 1207.77 L1310.31 1207.77 L1309.73 1207.77 L1309.14 1207.77 L1308.55 1207.77 L1307.97 1207.77 L1307.38 1207.77 L1306.79 1207.77 L1306.21 1207.77 L1305.62 1207.77 L1305.03 1207.77 L1304.45 1207.77 L1303.86 1207.77 L1303.27 1207.77 L1302.69 1207.77 L1302.1 1207.77 L1301.52 1207.77 L1300.93 1207.77 L1300.34 1207.77 L1299.76 1207.77 L1299.17 1207.77 L1298.58 1207.77 L1298 1207.77 L1297.41 1207.77 L1296.82 1207.77 L1296.24 1207.77 L1295.65 1207.77 L1295.06 1207.77 L1294.48 1207.77 L1293.89 1207.77 L1293.31 1207.77 L1292.72 1207.77 L1292.13 1207.77 L1291.55 1207.77 L1290.96 1207.77 L1290.37 1207.77 L1289.79 1207.77 L1289.2 1207.77 L1288.61 1207.77 L1288.03 1207.77 L1287.44 1207.77 L1286.86 1207.77 L1286.27 1207.77 L1285.68 1207.77 L1285.1 1207.77 L1284.51 1207.77 L1283.92 1207.77 L1283.34 1207.77 L1282.75 1207.77 L1282.16 1207.77 L1281.58 1207.77 L1280.99 1207.77 L1280.4 1207.77 L1279.82 1207.77 L1279.23 1207.77 L1278.65 1207.77 L1278.06 1207.77 L1277.47 1207.77 L1276.89 1207.77 L1276.3 1207.77 L1275.71 1207.77 L1275.13 1207.77 L1274.54 1207.77 L1273.95 1207.77 L1273.37 1207.77 L1272.78 1207.77 L1272.19 1207.77 L1271.61 1207.77 L1271.02 1207.77 L1270.44 1207.77 L1269.85 1207.77 L1269.26 1207.77 L1268.68 1207.77 L1268.09 1207.77 L1267.5 1207.77 L1266.92 1207.77 L1266.33 1207.77 L1265.74 1207.77 L1265.16 1207.77 L1264.57 1207.77 L1263.98 1207.77 L1263.4 1207.77 L1262.81 1207.77 L1262.23 1207.77 L1261.64 1207.77 L1261.05 1207.77 L1260.47 1207.77 L1259.88 1207.77 L1259.29 1207.77 L1258.71 1207.77 L1258.12 1207.77 L1257.53 1207.77 L1256.95 1207.77 L1256.36 1207.77 L1255.78 1207.77 L1255.19 1207.77 L1254.6 1207.77 L1254.02 1207.77 L1253.43 1207.77 L1252.84 1207.77 L1252.26 1207.77 L1251.67 1207.77 L1251.08 1207.77 L1250.5 1207.77 L1249.91 1207.77 L1249.32 1207.77 L1248.74 1207.77 L1248.15 1207.77 L1247.57 1207.77 L1246.98 1207.77 L1246.39 1207.77 L1245.81 1207.77 L1245.22 1207.77 L1244.63 1207.77 L1244.05 1207.77 L1243.46 1207.77 L1242.87 1207.77 L1242.29 1207.77 L1241.7 1207.77 L1241.11 1207.77 L1240.53 1207.77 L1239.94 1207.77 L1239.36 1207.77 L1238.77 1207.77 L1238.18 1207.77 L1237.6 1207.77 L1237.01 1207.77 L1236.42 1207.77 L1235.84 1207.77 L1235.25 1207.77 L1234.66 1207.77 L1234.08 1207.77 L1233.49 1207.77 L1232.91 1207.77 L1232.32 1207.77 L1231.73 1207.77 L1231.15 1207.77 L1230.56 1207.77 L1229.97 1207.77 L1229.39 1207.77 L1228.8 1207.77 L1228.21 1207.77 L1227.63 1207.77 L1227.04 1207.77 L1226.45 1207.77 L1225.87 1207.77 L1225.28 1207.77 L1224.7 1207.77 L1224.11 1207.77 L1223.52 1207.77 L1222.94 1207.77 L1222.35 1207.77 L1221.76 1207.77 L1221.18 1207.77 L1220.59 1207.77 L1220 1207.77 L1219.42 1207.77 L1218.83 1207.77 L1218.24 1207.77 L1217.66 1207.77 L1217.07 1207.77 L1216.49 1207.77 L1215.9 1207.77 L1215.31 1207.77 L1214.73 1207.77 L1214.14 1207.77 L1213.55 1207.77 L1212.97 1207.77 L1212.38 1207.77 L1211.79 1207.77 L1211.21 1207.77 L1210.62 1207.77 L1210.03 1207.77 L1209.45 1207.77 L1208.86 1207.77 L1208.28 1207.77 L1207.69 1207.77 L1207.1 1207.77 L1206.52 1207.77 L1205.93 1207.77 L1205.34 1207.77 L1204.76 1207.77 L1204.17 1207.77 L1203.58 1207.77 L1203 1207.77 L1202.41 1207.77 L1201.83 1207.77 L1201.24 1207.77 L1200.65 1207.77 L1200.07 1207.77 L1199.48 1207.77 L1198.89 1207.77 L1198.31 1207.77 L1197.72 1207.77 L1197.13 1207.77 L1196.55 1207.77 L1195.96 1207.77 L1195.37 1207.77 L1194.79 1207.77 L1194.2 1207.77 L1193.62 1207.77 L1193.03 1207.77 L1192.44 1207.77 L1191.86 1207.77 L1191.27 1207.77 L1190.68 1207.77 L1190.1 1207.77 L1189.51 1207.77 L1188.92 1207.77 L1188.34 1207.77 L1187.75 1207.77 L1187.16 1207.77 L1186.58 1207.77 L1185.99 1207.77 L1185.41 1207.77 L1184.82 1207.77 L1184.23 1207.77 L1183.65 1207.77 L1183.06 1207.77 L1182.47 1207.77 L1181.89 1207.77 L1181.3 1207.77 L1180.71 1207.77 L1180.13 1207.77 L1179.54 1207.77 L1178.96 1207.77 L1178.37 1207.77 L1177.78 1207.77 L1177.2 1207.77 L1176.61 1207.77 L1176.02 1207.77 L1175.44 1207.77 L1174.85 1207.77 L1174.26 1207.77 L1173.68 1207.77 L1173.09 1207.77 L1172.5 1207.77 L1171.92 1207.77 L1171.33 1207.77 L1170.75 1207.77 L1170.16 1207.77 L1169.57 1207.77 L1168.99 1207.77 L1168.4 1207.77 L1167.81 1207.77 L1167.23 1207.77 L1166.64 1207.77 L1166.05 1207.77 L1165.47 1207.77 L1164.88 1207.77 L1164.29 1207.77 L1163.71 1207.77 L1163.12 1207.77 L1162.54 1207.77 L1161.95 1207.77 L1161.36 1207.77 L1160.78 1207.77 L1160.19 1207.77 L1159.6 1207.77 L1159.02 1207.77 L1158.43 1207.77 L1157.84 1207.77 L1157.26 1207.77 L1156.67 1207.77 L1156.09 1207.77 L1155.5 1207.77 L1154.91 1207.77 L1154.33 1207.77 L1153.74 1207.77 L1153.15 1207.77 L1152.57 1207.77 L1151.98 1207.77 L1151.39 1207.77 L1150.81 1207.77 L1150.22 1207.77 L1149.63 1207.77 L1149.05 1207.77 L1148.46 1207.77 L1147.88 1207.77 L1147.29 1207.77 L1146.7 1207.77 L1146.12 1207.77 L1145.53 1207.77 L1144.94 1207.77 L1144.36 1207.77 L1143.77 1207.77 L1143.18 1207.77 L1142.6 1207.77 L1142.01 1207.77 L1141.42 1207.77 L1140.84 1207.77 L1140.25 1207.77 L1139.67 1207.77 L1139.08 1207.77 L1138.49 1207.77 L1137.91 1207.77 L1137.32 1207.77 L1136.73 1207.77 L1136.15 1207.77 L1135.56 1207.77 L1134.97 1207.77 L1134.39 1207.77 L1133.8 1207.77 L1133.21 1207.77 L1132.63 1207.77 L1132.04 1207.77 L1131.46 1207.77 L1130.87 1207.77 L1130.28 1207.77 L1129.7 1207.77 L1129.11 1207.77 L1128.52 1207.77 L1127.94 1207.77 L1127.35 1207.77 L1126.76 1207.77 L1126.18 1207.77 L1125.59 1207.77 L1125.01 1207.77 L1124.42 1207.77 L1123.83 1207.77 L1123.25 1207.77 L1122.66 1207.77 L1122.07 1207.77 L1121.49 1207.77 L1120.9 1207.77 L1120.31 1207.77 L1119.73 1207.77 L1119.14 1207.77 L1118.55 1207.77 L1117.97 1207.77 L1117.38 1207.77 L1116.8 1207.77 L1116.21 1207.77 L1115.62 1207.77 L1115.04 1207.77 L1114.45 1207.77 L1113.86 1207.77 L1113.28 1207.77 L1112.69 1207.77 L1112.1 1207.77 L1111.52 1207.77 L1110.93 1207.77 L1110.34 1207.77 L1109.76 1207.77 L1109.17 1207.77 L1108.59 1207.77 L1108 1207.77 L1107.41 1207.77 L1106.83 1207.77 L1106.24 1207.77 L1105.65 1207.77 L1105.07 1207.77 L1104.48 1207.77 L1103.89 1207.77 L1103.31 1207.77 L1102.72 1207.77 L1102.14 1207.77 L1101.55 1207.77 L1100.96 1207.77 L1100.38 1207.77 L1099.79 1207.77 L1099.2 1207.77 L1098.62 1207.77 L1098.03 1207.77 L1097.44 1207.77 L1096.86 1207.77 L1096.27 1207.77 L1095.68 1207.77 L1095.1 1207.77 L1094.51 1207.77 L1093.93 1207.77 L1093.34 1207.77 L1092.75 1207.77 L1092.17 1207.77 L1091.58 1207.77 L1090.99 1207.77 L1090.41 1207.77 L1089.82 1207.77 L1089.23 1207.77 L1088.65 1207.77 L1088.06 1207.77 L1087.47 1207.77 L1086.89 1207.77 L1086.3 1207.77 L1085.72 1207.77 L1085.13 1207.77 L1084.54 1207.77 L1083.96 1207.77 L1083.37 1207.77 L1082.78 1207.77 L1082.2 1207.77 L1081.61 1207.77 L1081.02 1207.77 L1080.44 1207.77 L1079.85 1207.77 L1079.26 1207.77 L1078.68 1207.77 L1078.09 1207.77 L1077.51 1207.77 L1076.92 1207.77 L1076.33 1207.77 L1075.75 1207.77 L1075.16 1207.77 L1074.57 1207.77 L1073.99 1207.77 L1073.4 1207.77 L1072.81 1207.77 L1072.23 1207.77 L1071.64 1207.77 L1071.06 1207.77 L1070.47 1207.77 L1069.88 1207.77 L1069.3 1207.77 L1068.71 1207.77 L1068.12 1207.77 L1067.54 1207.77 L1066.95 1207.77 L1066.36 1207.77 L1065.78 1207.77 L1065.19 1207.77 L1064.6 1207.77 L1064.02 1207.77 L1063.43 1207.77 L1062.85 1207.77 L1062.26 1207.77 L1061.67 1207.77 L1061.09 1207.77 L1060.5 1207.77 L1059.91 1207.77 L1059.33 1207.77 L1058.74 1207.77 L1058.15 1207.77 L1057.57 1207.77 L1056.98 1207.77 L1056.39 1207.77 L1055.81 1207.77 L1055.22 1207.77 L1054.64 1207.77 L1054.05 1207.77 L1053.46 1207.77 L1052.88 1207.77 L1052.29 1207.77 L1051.7 1207.77 L1051.12 1207.77 L1050.53 1207.77 L1049.94 1207.77 L1049.36 1207.77 L1048.77 1207.77 L1048.19 1207.77 L1047.6 1207.77 L1047.01 1207.77 L1046.43 1207.77 L1045.84 1207.77 L1045.25 1207.77 L1044.67 1207.77 L1044.08 1207.77 L1043.49 1207.77 L1042.91 1207.77 L1042.32 1207.77 L1041.73 1207.77 L1041.15 1207.77 L1040.56 1207.77 L1039.98 1207.77 L1039.39 1207.77 L1038.8 1207.77 L1038.22 1207.77 L1037.63 1207.77 L1037.04 1207.77 L1036.46 1207.77 L1035.87 1207.77 L1035.28 1207.77 L1034.7 1207.77 L1034.11 1207.77 L1033.52 1207.77 L1032.94 1207.77 L1032.35 1207.77 L1031.77 1207.77 L1031.18 1207.77 L1030.59 1207.77 L1030.01 1207.77 L1029.42 1207.77 L1028.83 1207.77 L1028.25 1207.77 L1027.66 1207.77 L1027.07 1207.77 L1026.49 1207.77 L1025.9 1207.77 L1025.32 1207.77 L1024.73 1207.77 L1024.14 1207.77 L1023.56 1207.77 L1022.97 1207.77 L1022.38 1207.77 L1021.8 1207.77 L1021.21 1207.77 L1020.62 1207.77 L1020.04 1207.77 L1019.45 1207.77 L1018.86 1207.77 L1018.28 1207.77 L1017.69 1207.77 L1017.11 1207.77 L1016.52 1207.77 L1015.93 1207.77 L1015.35 1207.77 L1014.76 1207.77 L1014.17 1207.77 L1013.59 1207.77 L1013 1207.77 L1012.41 1207.77 L1011.83 1207.77 L1011.24 1207.77 L1010.65 1207.77 L1010.07 1207.77 L1009.48 1207.77 L1008.9 1207.77 L1008.31 1207.77 L1007.72 1207.77 L1007.14 1207.77 L1006.55 1207.77 L1005.96 1207.77 L1005.38 1207.77 L1004.79 1207.77 L1004.2 1207.77 L1003.62 1207.77 L1003.03 1207.77 L1002.44 1207.77 L1001.86 1207.77 L1001.27 1207.77 L1000.69 1207.77 L1000.1 1207.77 L999.513 1207.77 L998.926 1207.77 L998.34 1207.77 L997.754 1207.77 L997.167 1207.77 L996.581 1207.77 L995.994 1207.77 L995.408 1207.77 L994.822 1207.77 L994.235 1207.77 L993.649 1207.77 L993.062 1207.77 L992.476 1207.77 L991.889 1207.77 L991.303 1207.77 L990.717 1207.77 L990.13 1207.77 L989.544 1207.77 L988.957 1207.77 L988.371 1207.77 L987.785 1207.77 L987.198 1207.77 L986.612 1207.77 L986.025 1207.77  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1207.83 986.612,1207.83 987.198,1207.83 987.785,1207.83 988.371,1207.83 988.957,1207.83 989.544,1207.83 990.13,1207.83 990.717,1207.83 991.303,1207.83 991.889,1207.83 992.476,1207.83 993.062,1207.83 993.649,1207.83 994.235,1207.83 994.822,1207.83 995.408,1207.83 995.994,1207.83 996.581,1207.83 997.167,1207.83 997.754,1207.83 998.34,1207.83 998.926,1207.83 999.513,1207.83 1000.1,1207.83 1000.69,1207.83 1001.27,1207.83 1001.86,1207.83 1002.44,1207.83 1003.03,1207.83 1003.62,1207.83 1004.2,1207.83 1004.79,1207.83 1005.38,1207.83 1005.96,1207.83 1006.55,1207.83 1007.14,1207.83 1007.72,1207.83 1008.31,1207.83 1008.9,1207.83 1009.48,1207.83 1010.07,1207.83 1010.65,1207.83 1011.24,1207.83 1011.83,1207.83 1012.41,1207.83 1013,1207.83 1013.59,1207.83 1014.17,1207.83 1014.76,1207.83 1015.35,1207.83 1015.93,1207.83 1016.52,1207.83 1017.11,1207.83 1017.69,1207.83 1018.28,1207.83 1018.86,1207.83 1019.45,1207.83 1020.04,1207.83 1020.62,1207.83 1021.21,1207.83 1021.8,1207.83 1022.38,1207.83 1022.97,1207.83 1023.56,1207.83 1024.14,1207.83 1024.73,1207.83 1025.32,1207.83 1025.9,1207.83 1026.49,1207.83 1027.07,1207.83 1027.66,1207.83 1028.25,1207.83 1028.83,1207.83 1029.42,1207.83 1030.01,1207.83 1030.59,1207.83 1031.18,1207.83 1031.77,1207.83 1032.35,1207.83 1032.94,1207.83 1033.52,1207.83 1034.11,1207.83 1034.7,1207.83 1035.28,1207.83 1035.87,1207.83 1036.46,1207.83 1037.04,1207.83 1037.63,1207.83 1038.22,1207.83 1038.8,1207.83 1039.39,1207.83 1039.98,1207.83 1040.56,1207.83 1041.15,1207.83 1041.73,1207.83 1042.32,1207.83 1042.91,1207.83 1043.49,1207.83 1044.08,1207.83 1044.67,1207.83 1045.25,1207.83 1045.84,1207.83 1046.43,1207.83 1047.01,1207.83 1047.6,1207.83 1048.19,1207.83 1048.77,1207.83 1049.36,1207.83 1049.94,1207.83 1050.53,1207.83 1051.12,1207.83 1051.7,1207.83 1052.29,1207.83 1052.88,1207.83 1053.46,1207.83 1054.05,1207.83 1054.64,1207.83 1055.22,1207.83 1055.81,1207.83 1056.39,1207.83 1056.98,1207.83 1057.57,1207.83 1058.15,1207.83 1058.74,1207.83 1059.33,1207.83 1059.91,1207.83 1060.5,1207.83 1061.09,1207.83 1061.67,1207.83 1062.26,1207.83 1062.85,1207.83 1063.43,1207.83 1064.02,1207.83 1064.6,1207.83 1065.19,1207.83 1065.78,1207.83 1066.36,1207.83 1066.95,1207.83 1067.54,1207.83 1068.12,1207.83 1068.71,1207.83 1069.3,1207.83 1069.88,1207.83 1070.47,1207.83 1071.06,1207.83 1071.64,1207.83 1072.23,1207.83 1072.81,1207.83 1073.4,1207.83 1073.99,1207.83 1074.57,1207.83 1075.16,1207.83 1075.75,1207.83 1076.33,1207.83 1076.92,1207.83 1077.51,1207.83 1078.09,1207.83 1078.68,1207.83 1079.26,1207.83 1079.85,1207.83 1080.44,1207.83 1081.02,1207.83 1081.61,1207.83 1082.2,1207.83 1082.78,1207.83 1083.37,1207.83 1083.96,1207.83 1084.54,1207.83 1085.13,1207.83 1085.72,1207.83 1086.3,1207.83 1086.89,1207.83 1087.47,1207.83 1088.06,1207.83 1088.65,1207.83 1089.23,1207.83 1089.82,1207.83 1090.41,1207.83 1090.99,1207.83 1091.58,1207.83 1092.17,1207.83 1092.75,1207.83 1093.34,1207.83 1093.93,1207.83 1094.51,1207.83 1095.1,1207.83 1095.68,1207.83 1096.27,1207.83 1096.86,1207.83 1097.44,1207.83 1098.03,1207.83 1098.62,1207.83 1099.2,1207.83 1099.79,1207.83 1100.38,1207.83 1100.96,1207.83 1101.55,1207.83 1102.14,1207.83 1102.72,1207.83 1103.31,1207.83 1103.89,1207.83 1104.48,1207.83 1105.07,1207.83 1105.65,1207.83 1106.24,1207.83 1106.83,1207.83 1107.41,1207.83 1108,1207.83 1108.59,1207.83 1109.17,1207.83 1109.76,1207.83 1110.34,1207.83 1110.93,1207.83 1111.52,1207.83 1112.1,1207.83 1112.69,1207.83 1113.28,1207.83 1113.86,1207.83 1114.45,1207.83 1115.04,1207.83 1115.62,1207.83 1116.21,1207.83 1116.8,1207.83 1117.38,1207.83 1117.97,1207.83 1118.55,1207.83 1119.14,1207.83 1119.73,1207.83 1120.31,1207.83 1120.9,1207.83 1121.49,1207.83 1122.07,1207.83 1122.66,1207.83 1123.25,1207.83 1123.83,1207.83 1124.42,1207.83 1125.01,1207.83 1125.59,1207.83 1126.18,1207.83 1126.76,1207.83 1127.35,1207.83 1127.94,1207.83 1128.52,1207.83 1129.11,1207.83 1129.7,1207.83 1130.28,1207.83 1130.87,1207.83 1131.46,1207.83 1132.04,1207.83 1132.63,1207.83 1133.21,1207.83 1133.8,1207.83 1134.39,1207.83 1134.97,1207.83 1135.56,1207.83 1136.15,1207.83 1136.73,1207.83 1137.32,1207.83 1137.91,1207.83 1138.49,1207.83 1139.08,1207.83 1139.67,1207.83 1140.25,1207.83 1140.84,1207.83 1141.42,1207.83 1142.01,1207.83 1142.6,1207.83 1143.18,1207.83 1143.77,1207.83 1144.36,1207.83 1144.94,1207.83 1145.53,1207.83 1146.12,1207.83 1146.7,1207.83 1147.29,1207.83 1147.88,1207.83 1148.46,1207.83 1149.05,1207.83 1149.63,1207.83 1150.22,1207.83 1150.81,1207.83 1151.39,1207.83 1151.98,1207.83 1152.57,1207.83 1153.15,1207.83 1153.74,1207.83 1154.33,1207.83 1154.91,1207.83 1155.5,1207.83 1156.09,1207.83 1156.67,1207.83 1157.26,1207.83 1157.84,1207.83 1158.43,1207.83 1159.02,1207.83 1159.6,1207.83 1160.19,1207.83 1160.78,1207.83 1161.36,1207.83 1161.95,1207.83 1162.54,1207.83 1163.12,1207.83 1163.71,1207.83 1164.29,1207.83 1164.88,1207.83 1165.47,1207.83 1166.05,1207.83 1166.64,1207.83 1167.23,1207.83 1167.81,1207.83 1168.4,1207.83 1168.99,1207.83 1169.57,1207.83 1170.16,1207.83 1170.75,1207.83 1171.33,1207.83 1171.92,1207.83 1172.5,1207.83 1173.09,1207.83 1173.68,1207.83 1174.26,1207.83 1174.85,1207.83 1175.44,1207.83 1176.02,1207.83 1176.61,1207.83 1177.2,1207.83 1177.78,1207.83 1178.37,1207.83 1178.96,1207.83 1179.54,1207.83 1180.13,1207.83 1180.71,1207.83 1181.3,1207.83 1181.89,1207.83 1182.47,1207.83 1183.06,1207.83 1183.65,1207.83 1184.23,1207.83 1184.82,1207.83 1185.41,1207.83 1185.99,1207.83 1186.58,1207.83 1187.16,1207.83 1187.75,1207.83 1188.34,1207.83 1188.92,1207.83 1189.51,1207.83 1190.1,1207.83 1190.68,1207.83 1191.27,1207.83 1191.86,1207.83 1192.44,1207.83 1193.03,1207.83 1193.62,1207.83 1194.2,1207.83 1194.79,1207.83 1195.37,1207.83 1195.96,1207.83 1196.55,1207.83 1197.13,1207.83 1197.72,1207.83 1198.31,1207.83 1198.89,1207.83 1199.48,1207.83 1200.07,1207.83 1200.65,1207.83 1201.24,1207.83 1201.83,1207.83 1202.41,1207.83 1203,1207.83 1203.58,1207.83 1204.17,1207.83 1204.76,1207.83 1205.34,1207.83 1205.93,1207.83 1206.52,1207.83 1207.1,1207.83 1207.69,1207.83 1208.28,1207.83 1208.86,1207.83 1209.45,1207.83 1210.03,1207.83 1210.62,1207.83 1211.21,1207.83 1211.79,1207.83 1212.38,1207.83 1212.97,1207.83 1213.55,1207.83 1214.14,1207.83 1214.73,1207.83 1215.31,1207.83 1215.9,1207.83 1216.49,1207.83 1217.07,1207.83 1217.66,1207.83 1218.24,1207.83 1218.83,1207.83 1219.42,1207.83 1220,1207.83 1220.59,1207.83 1221.18,1207.83 1221.76,1207.83 1222.35,1207.83 1222.94,1207.83 1223.52,1207.83 1224.11,1207.83 1224.7,1207.83 1225.28,1207.83 1225.87,1207.83 1226.45,1207.83 1227.04,1207.83 1227.63,1207.83 1228.21,1207.83 1228.8,1207.83 1229.39,1207.83 1229.97,1207.83 1230.56,1207.83 1231.15,1207.83 1231.73,1207.83 1232.32,1207.83 1232.91,1207.83 1233.49,1207.83 1234.08,1207.83 1234.66,1207.83 1235.25,1207.83 1235.84,1207.83 1236.42,1207.83 1237.01,1207.83 1237.6,1207.83 1238.18,1207.83 1238.77,1207.83 1239.36,1207.83 1239.94,1207.83 1240.53,1207.83 1241.11,1207.83 1241.7,1207.83 1242.29,1207.83 1242.87,1207.83 1243.46,1207.83 1244.05,1207.83 1244.63,1207.83 1245.22,1207.83 1245.81,1207.83 1246.39,1207.83 1246.98,1207.83 1247.57,1207.83 1248.15,1207.83 1248.74,1207.83 1249.32,1207.83 1249.91,1207.83 1250.5,1207.83 1251.08,1207.83 1251.67,1207.83 1252.26,1207.83 1252.84,1207.83 1253.43,1207.83 1254.02,1207.83 1254.6,1207.83 1255.19,1207.83 1255.78,1207.83 1256.36,1207.83 1256.95,1207.83 1257.53,1207.83 1258.12,1207.83 1258.71,1207.83 1259.29,1207.83 1259.88,1207.83 1260.47,1207.83 1261.05,1207.83 1261.64,1207.83 1262.23,1207.83 1262.81,1207.83 1263.4,1207.83 1263.98,1207.83 1264.57,1207.83 1265.16,1207.83 1265.74,1207.83 1266.33,1207.83 1266.92,1207.83 1267.5,1207.83 1268.09,1207.83 1268.68,1207.83 1269.26,1207.83 1269.85,1207.83 1270.44,1207.83 1271.02,1207.83 1271.61,1207.83 1272.19,1207.83 1272.78,1207.83 1273.37,1207.83 1273.95,1207.83 1274.54,1207.83 1275.13,1207.83 1275.71,1207.83 1276.3,1207.83 1276.89,1207.83 1277.47,1207.83 1278.06,1207.83 1278.65,1207.83 1279.23,1207.83 1279.82,1207.83 1280.4,1207.83 1280.99,1207.83 1281.58,1207.83 1282.16,1207.83 1282.75,1207.83 1283.34,1207.83 1283.92,1207.83 1284.51,1207.83 1285.1,1207.83 1285.68,1207.83 1286.27,1207.83 1286.86,1207.83 1287.44,1207.83 1288.03,1207.83 1288.61,1207.83 1289.2,1207.83 1289.79,1207.83 1290.37,1207.83 1290.96,1207.83 1291.55,1207.83 1292.13,1207.83 1292.72,1207.83 1293.31,1207.83 1293.89,1207.83 1294.48,1207.83 1295.06,1207.83 1295.65,1207.83 1296.24,1207.83 1296.82,1207.83 1297.41,1207.83 1298,1207.83 1298.58,1207.83 1299.17,1207.83 1299.76,1207.83 1300.34,1207.83 1300.93,1207.83 1301.52,1207.83 1302.1,1207.83 1302.69,1207.83 1303.27,1207.83 1303.86,1207.83 1304.45,1207.83 1305.03,1207.83 1305.62,1207.83 1306.21,1207.83 1306.79,1207.83 1307.38,1207.83 1307.97,1207.83 1308.55,1207.83 1309.14,1207.83 1309.73,1207.83 1310.31,1207.83 1310.9,1207.83 1311.48,1207.83 1312.07,1207.83 1312.66,1207.83 1313.24,1207.83 1313.83,1207.83 1314.42,1207.83 1315,1207.83 1315.59,1207.83 1316.18,1207.83 1316.76,1207.83 1317.35,1207.83 1317.93,1207.83 1318.52,1207.83 1319.11,1207.83 1319.69,1207.83 1320.28,1207.83 1320.87,1207.83 1321.45,1207.83 1322.04,1207.83 1322.63,1207.83 1323.21,1207.83 1323.8,1207.83 1324.39,1207.83 1324.97,1207.83 1325.56,1207.83 1326.14,1207.83 1326.73,1207.83 1327.32,1207.83 1327.9,1207.83 1328.49,1207.83 1329.08,1207.83 1329.66,1207.83 1330.25,1207.83 1330.84,1207.83 1331.42,1207.83 1332.01,1207.83 1332.6,1207.83 1333.18,1207.83 1333.77,1207.83 1334.35,1207.83 1334.94,1207.83 1335.53,1207.83 1336.11,1207.83 1336.7,1207.83 1337.29,1207.83 1337.87,1207.83 1338.46,1207.83 1339.05,1207.83 1339.63,1207.83 1340.22,1207.83 1340.8,1207.83 1341.39,1207.83 1341.98,1207.83 1342.56,1207.83 1343.15,1207.83 1343.74,1207.83 1344.32,1207.83 1344.91,1207.83 1345.5,1207.83 1346.08,1207.83 1346.67,1207.83 1347.26,1207.83 1347.84,1207.83 1348.43,1207.83 1349.01,1207.83 1349.6,1207.83 1350.19,1207.83 1350.77,1207.83 1351.36,1207.83 1351.95,1207.83 1352.53,1207.83 1353.12,1207.83 1353.71,1207.83 1354.29,1207.83 1354.88,1207.83 1355.47,1207.83 1356.05,1207.83 1356.64,1207.83 1357.22,1207.83 1357.81,1207.83 1358.4,1207.83 1358.98,1207.83 1359.57,1207.83 1360.16,1207.83 1360.74,1207.83 1361.33,1207.83 1361.92,1207.83 1362.5,1207.83 1363.09,1207.83 1363.68,1207.83 1364.26,1207.83 1364.85,1207.83 1365.43,1207.83 1366.02,1207.83 1366.61,1207.83 1367.19,1207.83 1367.78,1207.83 1368.37,1207.83 1368.95,1207.83 1369.54,1207.83 1370.13,1207.83 1370.71,1207.83 1371.3,1207.83 1371.88,1207.83 1372.47,1207.83 1373.06,1207.83 1373.64,1207.83 1374.23,1207.83 1374.82,1207.83 1375.4,1207.83 1375.99,1207.83 1376.58,1207.83 1377.16,1207.83 1377.75,1207.83 1378.34,1207.83 1378.92,1207.83 1379.51,1207.83 1380.09,1207.83 1380.68,1207.83 1381.27,1207.83 1381.85,1207.83 1382.44,1207.83 1383.03,1207.83 1383.61,1207.83 1384.2,1207.83 1384.79,1207.83 1385.37,1207.83 1385.96,1207.83 1386.55,1207.83 1387.13,1207.83 1387.72,1207.83 1388.3,1207.83 1388.89,1207.83 1389.48,1207.83 1390.06,1207.83 1390.65,1207.83 1391.24,1207.83 1391.82,1207.83 1392.41,1207.83 1393,1207.83 1393.58,1207.83 1394.17,1207.83 1394.75,1207.83 1395.34,1207.83 1395.93,1207.83 1396.51,1207.83 1397.1,1207.83 1397.69,1207.83 1398.27,1207.83 1398.86,1207.83 1399.45,1207.83 1400.03,1207.83 1400.62,1207.83 1401.21,1207.83 1401.79,1207.83 1402.38,1207.83 1402.96,1207.83 1403.55,1207.83 1404.14,1207.83 1404.72,1207.83 1405.31,1207.83 1405.9,1207.83 1406.48,1207.83 1407.07,1207.83 1407.66,1207.83 1408.24,1207.83 1408.83,1207.83 1409.42,1207.83 1410,1207.83 1410.59,1207.83 1411.17,1207.83 1411.76,1207.83 1412.35,1207.83 1412.93,1207.83 1413.52,1207.83 1414.11,1207.83 1414.69,1207.83 1415.28,1207.83 1415.87,1207.83 1416.45,1207.83 1417.04,1207.83 1417.63,1207.83 1418.21,1207.83 1418.8,1207.83 1419.38,1207.83 1419.97,1207.83 1420.56,1207.83 1421.14,1207.83 1421.73,1207.83 1422.32,1207.83 1422.9,1207.83 1423.49,1207.83 1424.08,1207.83 1424.66,1207.83 1425.25,1207.83 1425.83,1207.83 1426.42,1207.83 1427.01,1207.83 1427.59,1207.83 1428.18,1207.83 1428.77,1207.83 1429.35,1207.83 1429.94,1207.83 1430.53,1207.83 1431.11,1207.83 1431.7,1207.83 1432.29,1207.83 1432.87,1207.83 1433.46,1207.83 1434.04,1207.83 1434.63,1207.83 1435.22,1207.83 1435.8,1207.83 1436.39,1207.83 1436.98,1207.83 1437.56,1207.83 1438.15,1207.83 1438.74,1207.83 1439.32,1207.83 1439.91,1207.83 1440.5,1207.83 1441.08,1207.83 1441.67,1207.83 1442.25,1207.83 1442.84,1207.83 1443.43,1207.83 1444.01,1207.83 1444.6,1207.83 1445.19,1207.83 1445.77,1207.83 1446.36,1207.83 1446.95,1207.83 1447.53,1207.83 1448.12,1207.83 1448.7,1207.83 1449.29,1207.83 1449.88,1207.83 1450.46,1207.83 1451.05,1207.83 1451.64,1207.83 1452.22,1207.83 1452.81,1207.83 1453.4,1207.83 1453.98,1207.83 1454.57,1207.83 1455.16,1207.83 1455.74,1207.83 1456.33,1207.83 1456.91,1207.83 1457.5,1207.83 1458.09,1207.83 1458.67,1207.83 1459.26,1207.83 1459.85,1207.83 1460.43,1207.83 1461.02,1207.83 1461.61,1207.83 1462.19,1207.83 1462.78,1207.83 1463.37,1207.83 1463.95,1207.83 1464.54,1207.83 1465.12,1207.83 1465.71,1207.83 1466.3,1207.83 1466.88,1207.83 1467.47,1207.83 1468.06,1207.83 1468.64,1207.83 1469.23,1207.83 1469.82,1207.83 1470.4,1207.83 1470.99,1207.83 1471.57,1207.83 1472.16,1207.83 1472.75,1207.83 1473.33,1207.83 1473.92,1207.83 1474.51,1207.83 1475.09,1207.83 1475.68,1207.83 1476.27,1207.83 1476.85,1207.83 1477.44,1207.83 1478.03,1207.83 1478.61,1207.83 1479.2,1207.83 1479.78,1207.83 1480.37,1207.83 1480.96,1207.83 1481.54,1207.83 1482.13,1207.83 1482.72,1207.83 1483.3,1207.83 1483.89,1207.83 1484.48,1207.83 1485.06,1207.83 1485.65,1207.83 1486.24,1207.83 1486.82,1207.83 1487.41,1207.83 1487.99,1207.83 1488.58,1207.83 1489.17,1207.83 1489.75,1207.83 1490.34,1207.83 1490.93,1207.83 1491.51,1207.83 1492.1,1207.83 1492.69,1207.83 1493.27,1207.83 1493.86,1207.83 1494.45,1207.83 1495.03,1207.83 1495.62,1207.83 1496.2,1207.83 1496.79,1207.83 1497.38,1207.83 1497.96,1207.83 1498.55,1207.83 1499.14,1207.83 1499.72,1207.83 1500.31,1207.83 1500.9,1207.83 1501.48,1207.83 1502.07,1207.83 1502.65,1207.83 1503.24,1207.83 1503.83,1207.83 1504.41,1207.83 1505,1207.83 1505.59,1207.83 1506.17,1207.83 1506.76,1207.83 1507.35,1207.83 1507.93,1207.83 1508.52,1207.83 1509.11,1207.83 1509.69,1207.83 1510.28,1207.83 1510.86,1207.83 1511.45,1207.83 1512.04,1207.83 1512.62,1207.83 1513.21,1207.83 1513.8,1207.83 1514.38,1207.83 1514.97,1207.83 1515.56,1207.83 1516.14,1207.83 1516.73,1207.83 1517.32,1207.83 1517.9,1207.83 1518.49,1207.83 1519.07,1207.83 1519.66,1207.83 1520.25,1207.83 1520.83,1207.83 1521.42,1207.83 1522.01,1207.83 1522.59,1207.83 1523.18,1207.83 1523.77,1207.83 1524.35,1207.83 1524.94,1207.83 1525.52,1207.83 1526.11,1207.83 1526.7,1207.83 1527.28,1207.83 1527.87,1207.83 1528.46,1207.83 1529.04,1207.83 1529.63,1207.83 1530.22,1207.83 1530.8,1207.83 1531.39,1207.83 1531.98,1207.83 1532.56,1207.83 1533.15,1207.83 1533.73,1207.83 1534.32,1207.83 1534.91,1207.83 1535.49,1207.83 1536.08,1207.83 1536.67,1207.83 1537.25,1207.83 1537.84,1207.83 1538.43,1207.83 1539.01,1207.83 1539.6,1207.83 1540.19,1207.83 1540.77,1207.83 1541.36,1207.83 1541.94,1207.83 1542.53,1207.83 1543.12,1207.83 1543.7,1207.83 1544.29,1207.83 1544.88,1207.83 1545.46,1207.83 1546.05,1207.83 1546.64,1207.83 1547.22,1207.83 1547.81,1207.83 1548.4,1207.83 1548.98,1207.83 1549.57,1207.83 1550.15,1207.83 1550.74,1207.83 1551.33,1207.83 1551.91,1207.83 1552.5,1207.83 1553.09,1207.83 1553.67,1207.83 1554.26,1207.83 1554.85,1207.83 1555.43,1207.83 1556.02,1207.83 1556.6,1207.83 1557.19,1207.83 1557.78,1207.83 1558.36,1207.83 1558.95,1207.83 1559.54,1207.83 1560.12,1207.83 1560.71,1207.83 1561.3,1207.83 1561.88,1207.83 1562.47,1207.83 1563.06,1207.83 1563.64,1207.83 1564.23,1207.83 1564.81,1207.83 1565.4,1207.83 1565.99,1207.83 1566.57,1207.83 1567.16,1207.83 1567.75,1207.83 1568.33,1207.83 1568.92,1207.83 1569.51,1207.83 1570.09,1207.83 1570.68,1207.83 1571.27,1207.83 1571.85,1207.83 1572.44,1207.83 1573.02,1207.83 1573.61,1207.83 1574.2,1207.83 1574.78,1207.83 1575.37,1207.83 1575.96,1207.83 1576.54,1207.83 1577.13,1207.83 1577.72,1207.83 1578.3,1207.83 1578.89,1207.83 1579.47,1207.83 1580.06,1207.83 1580.65,1207.83 1581.23,1207.83 1581.82,1207.83 1582.41,1207.83 1582.99,1207.83 1583.58,1207.83 1584.17,1207.83 1584.75,1207.83 1585.34,1207.83 1585.93,1207.83 1586.51,1207.83 1587.1,1207.83 1587.68,1207.83 1588.27,1207.83 1588.86,1207.83 1589.44,1207.83 1590.03,1207.83 1590.62,1207.83 1591.2,1207.83 1591.79,1207.83 1592.38,1207.83 1592.96,1207.83 1593.55,1207.83 1594.14,1207.83 1594.72,1207.83 1595.31,1207.83 1595.89,1207.83 1596.48,1207.83 1597.07,1207.83 1597.65,1207.83 1598.24,1207.83 1598.83,1207.83 1599.41,1207.83 1600,1207.83 1600.59,1207.83 1601.17,1207.83 1601.76,1207.83 1602.34,1207.83 1602.93,1207.83 1603.52,1207.83 1604.1,1207.83 1604.69,1207.83 1605.28,1207.83 1605.86,1207.83 1606.45,1207.83 1607.04,1207.83 1607.62,1207.83 1608.21,1207.83 1608.8,1207.83 1609.38,1207.83 1609.97,1207.83 1610.55,1207.83 1611.14,1207.83 1611.73,1207.83 1612.31,1207.83 1612.9,1207.83 1613.49,1207.83 1614.07,1207.83 1614.66,1207.83 1615.25,1207.83 1615.83,1207.83 1616.42,1207.83 1617.01,1207.83 1617.59,1207.83 1618.18,1207.83 1618.76,1207.83 1619.35,1207.83 1619.94,1207.83 1620.52,1207.83 1621.11,1207.83 1621.7,1207.83 1622.28,1207.83 1622.87,1207.83 1623.46,1207.83 1624.04,1207.83 1624.63,1207.83 1625.22,1207.83 1625.8,1207.83 1626.39,1207.83 1626.97,1207.83 1627.56,1207.83 1628.15,1207.83 1628.73,1207.83 1629.32,1207.83 1629.91,1207.83 1630.49,1207.83 1631.08,1207.83 1631.67,1207.83 1632.25,1207.83 1632.84,1207.83 1633.42,1207.83 1634.01,1207.83 1634.6,1207.83 1635.18,1207.83 1635.77,1207.83 1636.36,1207.83 1636.94,1207.83 1637.53,1207.83 1638.12,1207.83 1638.7,1207.83 1639.29,1207.83 1639.88,1207.83 1640.46,1207.83 1641.05,1207.83 1641.63,1207.83 1642.22,1207.83 1642.81,1207.83 1643.39,1207.83 1643.98,1207.83 1644.57,1207.83 1645.15,1207.83 1645.74,1207.83 1646.33,1207.83 1646.91,1207.83 1647.5,1207.83 1648.09,1207.83 1648.67,1207.83 1649.26,1207.83 1649.84,1207.83 1650.43,1207.83 1651.02,1207.83 1651.6,1207.83 1652.19,1207.83 1652.78,1207.83 1653.36,1207.83 1653.95,1207.83 1654.54,1207.83 1655.12,1207.83 1655.71,1207.83 1656.29,1207.83 1656.88,1207.83 1657.47,1207.83 1658.05,1207.83 1658.64,1207.83 1659.23,1207.83 1659.81,1207.83 1660.4,1207.83 1660.99,1207.83 1661.57,1207.83 1662.16,1207.83 1662.75,1207.83 1663.33,1207.83 1663.92,1207.83 1664.5,1207.83 1665.09,1207.83 1665.68,1207.83 1666.26,1207.83 1666.85,1207.83 1667.44,1207.83 1668.02,1207.83 1668.61,1207.83 1669.2,1207.83 1669.78,1207.83 1670.37,1207.83 1670.96,1207.83 1671.54,1207.83 1672.13,1207.83 1672.71,1207.83 1673.3,1207.83 1673.89,1207.83 1674.47,1207.83 1675.06,1207.83 1675.65,1207.83 1676.23,1207.83 1676.82,1207.83 1677.41,1207.83 1677.99,1207.83 1678.58,1207.83 1679.17,1207.83 1679.75,1207.83 1680.34,1207.83 1680.92,1207.83 1681.51,1207.83 1682.1,1207.83 1682.68,1207.83 1683.27,1207.83 1683.86,1207.83 1684.44,1207.83 1685.03,1207.83 1685.62,1207.83 1686.2,1207.83 1686.79,1207.83 1687.37,1207.83 1687.96,1207.83 1688.55,1207.83 1689.13,1207.83 1689.72,1207.83 1690.31,1207.83 1690.89,1207.83 1691.48,1207.83 1692.07,1207.83 1692.65,1207.83 1693.24,1207.83 1693.83,1207.83 1694.41,1207.83 1695,1207.83 1695.58,1207.83 1696.17,1207.83 1696.76,1207.83 1697.34,1207.83 1697.93,1207.83 1698.52,1207.83 1699.1,1207.83 1699.69,1207.83 1700.28,1207.83 1700.86,1207.83 1701.45,1207.83 1702.04,1207.83 1702.62,1207.83 1703.21,1207.83 1703.79,1207.83 1704.38,1207.83 1704.97,1207.83 1705.55,1207.83 1706.14,1207.83 1706.73,1207.83 1707.31,1207.83 1707.9,1207.83 1708.49,1207.83 1709.07,1207.83 1709.66,1207.83 1710.24,1207.83 1710.83,1207.83 1711.42,1207.83 1712,1207.83 1712.59,1207.83 1713.18,1207.83 1713.76,1207.83 1714.35,1207.83 1714.94,1207.83 1715.52,1207.83 1716.11,1207.83 1716.7,1207.83 1717.28,1207.83 1717.87,1207.83 1718.45,1207.83 1719.04,1207.83 1719.63,1207.83 1720.21,1207.83 1720.8,1207.83 1721.39,1207.83 1721.97,1207.83 1722.56,1207.83 1723.15,1207.83 1723.73,1207.83 1724.32,1207.83 1724.91,1207.83 1725.49,1207.83 1726.08,1207.83 1726.66,1207.83 1727.25,1207.83 1727.84,1207.83 1728.42,1207.83 1729.01,1207.83 1729.6,1207.83 1730.18,1207.83 1730.77,1207.83 1731.36,1207.83 1731.94,1207.83 1732.53,1207.83 1733.11,1207.83 1733.7,1207.83 1734.29,1207.83 1734.87,1207.83 1735.46,1207.83 1736.05,1207.83 1736.63,1207.83 1737.22,1207.83 1737.81,1207.83 1738.39,1207.83 1738.98,1207.83 1739.57,1207.83 1740.15,1207.83 1740.74,1207.83 1741.32,1207.83 1741.91,1207.83 1742.5,1207.83 1743.08,1207.83 1743.67,1207.83 1744.26,1207.83 1744.84,1207.83 1745.43,1207.83 1746.02,1207.83 1746.6,1207.83 1747.19,1207.83 1747.78,1207.83 1748.36,1207.83 1748.95,1207.83 1749.53,1207.83 1750.12,1207.83 1750.71,1207.83 1751.29,1207.83 1751.88,1207.83 1752.47,1207.83 1753.05,1207.83 1753.64,1207.83 1754.23,1207.83 1754.81,1207.83 1755.4,1207.83 1755.99,1207.83 1756.57,1207.83 1757.16,1207.83 1757.74,1207.83 1758.33,1207.83 1758.92,1207.83 1759.5,1207.83 1760.09,1207.83 1760.68,1207.83 1761.26,1207.83 1761.85,1207.83 1762.44,1207.83 1763.02,1207.83 1763.61,1207.83 1764.19,1207.83 1764.78,1207.83 1765.37,1207.83 1765.95,1207.83 1766.54,1207.83 1767.13,1207.83 1767.71,1207.83 1768.3,1207.83 1768.89,1207.83 1769.47,1207.83 1770.06,1207.83 1770.65,1207.83 1771.23,1207.83 1771.82,1207.83 1772.4,1207.83 1772.99,1207.83 1773.58,1207.83 1774.16,1207.83 1774.75,1207.83 1775.34,1207.83 1775.92,1207.83 1776.51,1207.83 1777.1,1207.83 1777.68,1207.83 1778.27,1207.83 1778.86,1207.83 1779.44,1207.83 1780.03,1207.83 1780.61,1207.83 1781.2,1207.83 1781.79,1207.83 1782.37,1207.83 1782.96,1207.83 1783.55,1207.83 1784.13,1207.83 1784.72,1207.83 1785.31,1207.83 1785.89,1207.83 1786.48,1207.83 1787.06,1207.83 1787.65,1207.83 1788.24,1207.83 1788.82,1207.83 1789.41,1207.83 1790,1207.83 1790.58,1207.83 1791.17,1207.83 1791.76,1207.83 1792.34,1207.83 1792.93,1207.83 1793.52,1207.83 1794.1,1207.83 1794.69,1207.83 1795.27,1207.83 1795.86,1207.83 1796.45,1207.83 1797.03,1207.83 1797.62,1207.83 1798.21,1207.83 1798.79,1207.83 1799.38,1207.83 1799.97,1207.83 1800.55,1207.83 1801.14,1207.83 1801.73,1207.83 1802.31,1207.83 1802.9,1207.83 1803.48,1207.83 1804.07,1207.83 1804.66,1207.83 1805.24,1207.83 1805.83,1207.83 1806.42,1207.83 1807,1207.83 1807.59,1207.83 1808.18,1207.83 1808.76,1207.83 1809.35,1207.83 1809.94,1207.83 1810.52,1207.83 1811.11,1207.83 1811.69,1207.83 1812.28,1207.83 1812.87,1207.83 1813.45,1207.83 1814.04,1207.83 1814.63,1207.83 1815.21,1207.83 1815.8,1207.83 1816.39,1207.83 1816.97,1207.83 1817.56,1207.83 1818.14,1207.83 1818.73,1207.83 1819.32,1207.83 1819.9,1207.83 1820.49,1207.83 1821.08,1207.83 1821.66,1207.83 1822.25,1207.83 1822.84,1207.83 1823.42,1207.83 1824.01,1207.83 1824.6,1207.83 1825.18,1207.83 1825.77,1207.83 1826.35,1207.83 1826.94,1207.83 1827.53,1207.83 1828.11,1207.83 1828.7,1207.83 1829.29,1207.83 1829.87,1207.83 1830.46,1207.83 1831.05,1207.83 1831.63,1207.83 1832.22,1207.83 1832.81,1207.83 1833.39,1207.83 1833.98,1207.83 1834.56,1207.83 1835.15,1207.83 1835.74,1207.83 1836.32,1207.83 1836.91,1207.83 1837.5,1207.83 1838.08,1207.83 1838.67,1207.83 1839.26,1207.83 1839.84,1207.83 1840.43,1207.83 1841.01,1207.83 1841.6,1207.83 1842.19,1207.83 1842.77,1207.83 1843.36,1207.83 1843.95,1207.83 1844.53,1207.83 1845.12,1207.83 1845.71,1207.83 1846.29,1207.83 1846.88,1207.83 1847.47,1207.83 1848.05,1207.83 1848.64,1207.83 1849.22,1207.83 1849.81,1207.83 1850.4,1207.83 1850.98,1207.83 1851.57,1207.83 1852.16,1207.83 1852.74,1207.83 1853.33,1207.83 1853.92,1207.83 1854.5,1207.83 1855.09,1207.83 1855.68,1207.83 1856.26,1207.83 1856.85,1207.83 1857.43,1207.83 1858.02,1207.83 1858.61,1207.83 1859.19,1207.83 1859.78,1207.83 1860.37,1207.83 1860.95,1207.83 1861.54,1207.83 1862.13,1207.83 1862.71,1207.83 1863.3,1207.83 1863.88,1207.83 1864.47,1207.83 1865.06,1207.83 1865.64,1207.83 1866.23,1207.83 1866.82,1207.83 1867.4,1207.83 1867.99,1207.83 1868.58,1207.83 1869.16,1207.83 1869.75,1207.83 1870.34,1207.83 1870.92,1207.83 1871.51,1207.83 1872.09,1207.83 1872.68,1207.83 1873.27,1207.83 1873.85,1207.83 1874.44,1207.83 1875.03,1207.83 1875.61,1207.83 1876.2,1207.83 1876.79,1207.83 1877.37,1207.83 1877.96,1207.83 1878.55,1207.83 1879.13,1207.83 1879.72,1207.83 1880.3,1207.83 1880.89,1207.83 1881.48,1207.83 1882.06,1207.83 1882.65,1207.83 1883.24,1207.83 1883.82,1207.83 1884.41,1207.83 1885,1207.83 1885.58,1207.83 1886.17,1207.83 1886.76,1207.83 1887.34,1207.83 1887.93,1207.83 1888.51,1207.83 1889.1,1207.83 1889.69,1207.83 1890.27,1207.83 1890.86,1207.83 1891.45,1207.83 1892.03,1207.83 1892.62,1207.83 1893.21,1207.83 1893.79,1207.83 1894.38,1207.83 1894.96,1207.83 1895.55,1207.83 1896.14,1207.83 1896.72,1207.83 1897.31,1207.83 1897.9,1207.83 1898.48,1207.83 1899.07,1207.83 1899.66,1207.83 1900.24,1207.83 1900.83,1207.83 1901.42,1207.83 1902,1207.83 1902.59,1207.83 1903.17,1207.83 1903.76,1207.83 1904.35,1207.83 1904.93,1207.83 1905.52,1207.83 1906.11,1207.83 1906.69,1207.83 1907.28,1207.83 1907.87,1207.83 1908.45,1207.83 1909.04,1207.83 1909.63,1207.83 1910.21,1207.83 1910.8,1207.83 1911.38,1207.83 1911.97,1207.83 1912.56,1207.83 1913.14,1207.83 1913.73,1207.83 1914.32,1207.83 1914.9,1207.83 1915.49,1207.83 1916.08,1207.83 1916.66,1207.83 1917.25,1207.83 1917.83,1207.83 1918.42,1207.83 1919.01,1207.83 1919.59,1207.83 1920.18,1207.83 1920.77,1207.83 1921.35,1207.83 1921.94,1207.83 1922.53,1207.83 1923.11,1207.83 1923.7,1207.83 1924.29,1207.83 1924.87,1207.83 1925.46,1207.83 1926.04,1207.83 1926.63,1207.83 1927.22,1207.83 1927.8,1207.83 1928.39,1207.83 1928.98,1207.83 1929.56,1207.83 1930.15,1207.83 1930.74,1207.83 1931.32,1207.83 1931.91,1207.83 1932.5,1207.83 1933.08,1207.83 1933.67,1207.83 1934.25,1207.83 1934.84,1207.83 1935.43,1207.83 1936.01,1207.83 1936.6,1207.83 1937.19,1207.83 1937.77,1207.83 1938.36,1207.83 1938.95,1207.83 1939.53,1207.83 1940.12,1207.83 1940.71,1207.83 1941.29,1207.83 1941.88,1207.83 1942.46,1207.83 1943.05,1207.83 1943.64,1207.83 1944.22,1207.83 1944.81,1207.83 1945.4,1207.83 1945.98,1207.83 1946.57,1207.83 1947.16,1207.83 1947.74,1207.83 1948.33,1207.83 1948.91,1207.83 1949.5,1207.83 1950.09,1207.83 1950.67,1207.83 1951.26,1207.83 1951.85,1207.83 1952.43,1207.83 1953.02,1207.83 1953.61,1207.83 1954.19,1207.83 1954.78,1207.83 1955.37,1207.83 1955.95,1207.83 1956.54,1207.83 1957.12,1207.83 1957.71,1207.83 1958.3,1207.83 1958.88,1207.83 1959.47,1207.83 1960.06,1207.83 1960.64,1207.83 1961.23,1207.83 1961.82,1207.83 1962.4,1207.83 1962.99,1207.83 1963.58,1207.83 1964.16,1207.83 1964.75,1207.83 1965.33,1207.83 1965.92,1207.83 1966.51,1207.83 1967.09,1207.83 1967.68,1207.83 1968.27,1207.83 1968.85,1207.83 1969.44,1207.83 1970.03,1207.83 1970.61,1207.83 1971.2,1207.83 1971.78,1207.83 1972.37,1207.83 1972.96,1207.83 1973.54,1207.83 1974.13,1207.83 1974.72,1207.83 1975.3,1207.83 1975.89,1207.83 1976.48,1207.83 1977.06,1207.83 1977.65,1207.83 1978.24,1207.83 1978.82,1207.83 1979.41,1207.83 1979.99,1207.83 1980.58,1207.83 1981.17,1207.83 1981.75,1207.83 1982.34,1207.83 1982.93,1207.83 1983.51,1207.83 1984.1,1207.83 1984.69,1207.83 1985.27,1207.83 1985.86,1207.83 1986.45,1207.83 1987.03,1207.83 1987.62,1207.83 1988.2,1207.83 1988.79,1207.83 1989.38,1207.83 1989.96,1207.83 1990.55,1207.83 1991.14,1207.83 1991.72,1207.83 1992.31,1207.83 1992.9,1207.83 1993.48,1207.83 1994.07,1207.83 1994.65,1207.83 1995.24,1207.83 1995.83,1207.83 1996.41,1207.83 1997,1207.83 1997.59,1207.83 1998.17,1207.83 1998.76,1207.83 1999.35,1207.83 1999.93,1207.83 2000.52,1207.83 2001.11,1207.83 2001.69,1207.83 2002.28,1207.83 2002.86,1207.83 2003.45,1207.83 2004.04,1207.83 2004.62,1207.83 2005.21,1207.83 2005.8,1207.83 2006.38,1207.83 2006.97,1207.83 2007.56,1207.83 2008.14,1207.83 2008.73,1207.83 2009.32,1207.83 2009.9,1207.83 2010.49,1207.83 2011.07,1207.83 2011.66,1207.83 2012.25,1207.83 2012.83,1207.83 2013.42,1207.83 2014.01,1207.83 2014.59,1207.83 2015.18,1207.83 2015.77,1207.83 2016.35,1207.83 2016.94,1207.83 2017.53,1207.83 2018.11,1207.83 2018.7,1207.83 2019.28,1207.83 2019.87,1207.83 2020.46,1207.83 2021.04,1207.83 2021.63,1207.83 2022.22,1207.83 2022.8,1207.83 2023.39,1207.83 2023.98,1207.83 2024.56,1207.83 2025.15,1207.83 2025.73,1207.83 2026.32,1207.83 2026.91,1207.83 2027.49,1207.83 2028.08,1207.83 2028.67,1207.83 2029.25,1207.83 2029.84,1207.83 2030.43,1207.83 2031.01,1207.83 2031.6,1207.83 2032.19,1207.83 2032.77,1207.83 2033.36,1207.83 2033.94,1207.83 2034.53,1207.83 2035.12,1207.83 2035.7,1207.83 2036.29,1207.83 2036.88,1207.83 2037.46,1207.83 2038.05,1207.83 2038.64,1207.83 2039.22,1207.83 2039.81,1207.83 2040.4,1207.83 2040.98,1207.83 2041.57,1207.83 2042.15,1207.83 2042.74,1207.83 2043.33,1207.83 2043.91,1207.83 2044.5,1207.83 2045.09,1207.83 2045.67,1207.83 2046.26,1207.83 2046.85,1207.83 2047.43,1207.83 2048.02,1207.83 2048.6,1207.83 2049.19,1207.83 2049.78,1207.83 2050.36,1207.83 2050.95,1207.83 2051.54,1207.83 2052.12,1207.83 2052.71,1207.83 2053.3,1207.83 2053.88,1207.83 2054.47,1207.83 2055.06,1207.83 2055.64,1207.83 2056.23,1207.83 2056.81,1207.83 2057.4,1207.83 2057.99,1207.83 2058.57,1207.83 2059.16,1207.83 2059.75,1207.83 2060.33,1207.83 2060.92,1207.83 2061.51,1207.83 2062.09,1207.83 2062.68,1207.83 2063.27,1207.83 2063.85,1207.83 2064.44,1207.83 2065.02,1207.83 2065.61,1207.83 2066.2,1207.83 2066.78,1207.83 2067.37,1207.83 2067.96,1207.83 2068.54,1207.83 2069.13,1207.83 2069.72,1207.83 2070.3,1207.83 2070.89,1207.83 2071.48,1207.83 2072.06,1207.83 2072.65,1207.83 2073.23,1207.83 2073.82,1207.83 2074.41,1207.83 2074.99,1207.83 2075.58,1207.83 2076.17,1207.83 2076.75,1207.83 2077.34,1207.83 2077.93,1207.83 2078.51,1207.83 2079.1,1207.83 2079.68,1207.83 2080.27,1207.83 2080.86,1207.83 2081.44,1207.83 2082.03,1207.83 2082.62,1207.83 2083.2,1207.83 2083.79,1207.83 2084.38,1207.83 2084.96,1207.83 2085.55,1207.83 2086.14,1207.83 2086.72,1207.83 2087.31,1207.83 2087.89,1207.83 2088.48,1207.83 2089.07,1207.83 2089.65,1207.83 2090.24,1207.83 2090.83,1207.83 2091.41,1207.83 2092,1207.83 2092.59,1207.83 2093.17,1207.83 2093.76,1207.83 2094.35,1207.83 2094.93,1207.83 2095.52,1207.83 2096.1,1207.83 2096.69,1207.83 2097.28,1207.83 2097.86,1207.83 2098.45,1207.83 2099.04,1207.83 2099.62,1207.83 2100.21,1207.83 2100.8,1207.83 2101.38,1207.83 2101.97,1207.83 2102.55,1207.83 2103.14,1207.83 2103.73,1207.83 2104.31,1207.83 2104.9,1207.83 2105.49,1207.83 2106.07,1207.83 2106.66,1207.83 2107.25,1207.83 2107.83,1207.83 2108.42,1207.83 2109.01,1207.83 2109.59,1207.83 2110.18,1207.83 2110.76,1207.83 2111.35,1207.83 2111.94,1207.83 2112.52,1207.83 2113.11,1207.83 2113.7,1207.83 2114.28,1207.83 2114.87,1207.83 2115.46,1207.83 2116.04,1207.83 2116.63,1207.83 2117.22,1207.83 2117.8,1207.83 2118.39,1207.83 2118.97,1207.83 2119.56,1207.83 2120.15,1207.83 2120.73,1207.83 2121.32,1207.83 2121.91,1207.83 2122.49,1207.83 2123.08,1207.83 2123.67,1207.83 2124.25,1207.83 2124.84,1207.83 2125.42,1207.83 2126.01,1207.83 2126.6,1207.83 2127.18,1207.83 2127.77,1207.83 2128.36,1207.83 2128.94,1207.83 2129.53,1207.83 2130.12,1207.83 2130.7,1207.83 2131.29,1207.83 2131.88,1207.83 2132.46,1207.83 2133.05,1207.83 2133.63,1207.83 2134.22,1207.83 2134.81,1207.83 2135.39,1207.83 2135.98,1207.83 2136.57,1207.83 2137.15,1207.83 2137.74,1207.83 2138.33,1207.83 2138.91,1207.83 2139.5,1207.83 2140.09,1207.83 2140.67,1207.83 2141.26,1207.83 2141.84,1207.83 2142.43,1207.83 2143.02,1207.83 2143.6,1207.83 2144.19,1207.83 2144.78,1207.83 2145.36,1207.83 2145.95,1207.83 2146.54,1207.83 2147.12,1207.83 2147.71,1207.83 2148.3,1207.83 2148.88,1207.83 2149.47,1207.83 2150.05,1207.83 2150.64,1207.83 2151.23,1207.83 2151.81,1207.83 2152.4,1207.83 2152.99,1207.83 2153.57,1207.83 2154.16,1207.83 2154.75,1207.83 2155.33,1207.83 2155.92,1207.83 2156.5,1207.83 2157.09,1207.83 2157.68,1207.83 2158.26,1207.83 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1561.81,1189.52 1400.38,899.083 \"/>\n<polyline clip-path=\"url(#clip482)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1225.65 985.439,1189.52 2158.26,1189.52 2158.26,1225.65 985.439,1225.65 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip480)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip480)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip483\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip480)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip480)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip480)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip483)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-1388.05 162.114,-2699.44 162.673,-3878.09 163.232,-4933.34 163.792,-5970.67 164.351,-6918.03 164.91,-7781.33 165.469,-8566.04 166.029,-8131.2 166.588,-8809.55 167.147,-9422.01 167.706,-9957.61 168.266,-10451.6 168.825,-10891.7 169.384,-11265.8 169.943,-9416.16 170.503,-9791.37 171.062,-10139.4 171.621,-9868.74 172.18,-10172.6 172.74,-10427.8 173.299,-9709.03 173.858,-9947.56 174.417,-10158.4 174.977,-9938.21 175.536,-10094 176.095,-10226.9 176.655,-10320.1 177.214,-10389.1 177.773,-10444.8 178.332,-10477.3 178.892,-9982.71 179.451,-10024.6 180.01,-9568.85 180.569,-9567.05 181.129,-9530.42 181.688,-9299.92 182.247,-9261.07 182.806,-9054.98 183.366,-9005.63 183.925,-8943.47 184.484,-8584.92 185.043,-8382.91 185.603,-8188.1 186.162,-8100.66 186.721,-7909.49 187.28,-7823 187.84,-7516.66 188.399,-7036.34 188.958,-6947.98 189.517,-6685.26 190.077,-6519.01 190.636,-6344.91 191.195,-6024.85 191.754,-5865.15 192.314,-5712.8 192.873,-5567.61 193.432,-5361.31 193.991,-5214.13 194.551,-5017.55 195.11,-4878.67 195.669,-4803.24 196.228,-4669.72 196.788,-4432.68 197.347,-4259.85 197.906,-4141.74 198.465,-3874.65 199.025,-3808.65 199.584,-3705.06 200.143,-3682.52 200.702,-3526.56 201.262,-3414.63 201.821,-3345.73 202.38,-3233.83 202.939,-3086.38 203.499,-2941.51 204.058,-2804.03 204.617,-2745.39 205.176,-2648.51 205.736,-2550.01 206.295,-2494.42 206.854,-2437.24 207.413,-2349.19 207.973,-2291.82 208.532,-2203.64 209.091,-2117.64 209.65,-2061.24 210.21,-1913.65 210.769,-1798.02 211.328,-1689.91 211.887,-1616.29 212.447,-1572.71 213.006,-1415.73 213.565,-1373.01 214.124,-1275.98 214.684,-1205.5 215.243,-1114.61 215.802,-1077.56 216.361,-1043.37 216.921,-979.526 217.48,-868.65 218.039,-761.705 218.598,-631.567 219.158,-573.349 219.717,-496.353 220.276,-466.077 220.835,-413.448 221.395,-360.505 221.954,-266.179 222.513,-198.092 223.072,-177.955 223.632,-132.107 224.191,-89.523 224.75,-71.5432 225.309,-30.7482 225.869,49.8218 226.428,151.855 226.987,180.665 227.546,192.538 228.106,200.722 228.665,214.321 229.224,227.414 229.783,260.945 230.343,314.504 230.902,327.815 231.461,374.388 232.02,387.739 232.58,453.733 233.139,479.279 233.698,519.615 234.257,526.622 234.817,512.803 235.376,560.215 235.935,659.036 236.494,656.87 237.054,655.74 237.613,694.234 238.172,709.725 238.731,711.726 239.291,748.144 239.85,767.629 240.409,782.646 240.968,797.331 241.528,828.084 242.087,843.312 242.646,839.153 243.205,819.263 243.765,813.76 244.324,814.531 244.883,829.868 245.442,849.052 246.002,848.109 246.561,847.677 247.12,881.994 247.679,878.702 248.239,895.609 248.798,909.88 249.357,922.876 249.916,950.851 250.476,981.937 251.035,994.154 251.594,987.085 252.153,1053.59 252.713,1061.62 253.272,1053.33 253.831,1058.79 254.39,1065.46 254.95,1053.54 255.509,1041.17 256.068,1036.29 256.627,1061.52 257.187,1051.09 257.746,1022.55 258.305,1031.53 258.864,1039.68 259.424,1015.26 259.983,1027.51 260.542,1035.9 261.101,1025.83 261.661,1003.41 262.22,977.051 262.779,1043.81 263.338,1038.1 263.898,1084.7 264.457,1090.25 265.016,1112.02 265.575,1117.24 266.135,1142.08 266.694,1163.59 267.253,1200.03 267.812,1149.93 268.372,1121.59 268.931,1096.72 269.49,1071.9 270.049,1096.96 270.609,1056.33 271.168,1046.48 271.727,1040.36 272.286,1069.3 272.846,1059.51 273.405,1103.73 273.964,1096.79 274.523,1051.17 275.083,1059.24 275.642,1056.29 276.201,1048.38 276.76,1074.66 277.32,1067.98 277.879,1077.36 278.438,1052.36 278.997,1060.56 279.557,1071.58 280.116,1063.36 280.675,1018.34 281.234,1047.81 281.794,1039.9 282.353,1012.63 282.912,1037.49 283.471,1012.67 284.031,1007.56 284.59,1003.81 285.149,961.331 285.708,943.192 286.268,940.144 286.827,936.656 287.386,931.692 287.945,914.107 288.505,931.619 289.064,946.432 289.623,942.846 290.182,927.371 290.742,923.272 291.301,921.578 291.86,943.244 292.419,991.209 292.979,1004.13 293.538,982.877 294.097,946.554 294.656,977.441 295.216,1008.22 295.775,1002.7 296.334,984.558 296.893,978.462 297.453,1009.39 298.012,1003.22 298.571,1032.34 299.13,989.457 299.69,998.509 300.249,990.32 300.808,1019.25 301.368,979.596 301.927,957.9 302.486,957.168 303.045,971.682 303.605,1016.69 304.164,1023.02 304.723,999.395 305.282,991.189 305.842,986.78 306.401,965.821 306.96,995.847 307.519,975.868 308.079,986.208 308.638,963.98 309.197,958.35 309.756,949.135 310.316,945.238 310.875,944.54 311.434,942.08 311.993,906.057 312.553,906.208 313.112,920.627 313.671,899.484 314.23,898.652 314.79,932.319 315.349,932.437 315.908,946.617 316.467,926.471 317.027,939.033 317.586,933.507 318.145,946.241 318.704,922.769 319.264,924.998 319.823,936.422 320.382,935.898 320.941,932.763 321.501,947.798 322.06,927.328 322.619,920.928 323.178,899.85 323.738,897.346 324.297,893.891 324.856,892.641 325.415,908.173 325.975,890.785 326.534,939.125 327.093,868.901 327.652,914.369 328.212,943.796 328.771,926.036 329.33,922.959 329.889,905.386 330.449,904.767 331.008,899.538 331.567,929.542 332.126,958.808 332.686,939.502 333.245,967.929 333.804,960.39 334.363,943.821 334.923,988.181 335.482,965.023 336.041,988.408 336.6,984.167 337.16,987.652 337.719,977.888 338.278,953.555 338.837,964.032 339.397,955.218 339.956,946.753 340.515,955.209 341.074,981.18 341.634,991.104 342.193,968.427 342.752,976.187 343.311,1016.88 343.871,1038.43 344.43,1030.79 344.989,1068.85 345.548,1058.57 346.108,1030.64 346.667,1039.07 347.226,1043.78 347.785,985.332 348.345,962.837 348.904,939.736 349.463,935.117 350.022,927.204 350.582,935.884 351.141,895.848 351.7,926.273 352.259,920.364 352.819,929.423 353.378,924.113 353.937,904.76 354.496,903.558 355.056,898.129 355.615,893.473 356.174,903.262 356.733,930.977 357.293,993.05 357.852,1004.52 358.411,1023.97 358.97,966.614 359.53,957.606 360.089,935.903 360.648,927.266 361.207,904.579 361.767,912.747 362.326,920.52 362.885,898.905 363.444,908.529 364.004,934.659 364.563,928.107 365.122,953.419 365.681,879.421 366.241,874.012 366.8,851.86 367.359,879.844 367.918,875.632 368.478,870.613 369.037,866.631 369.596,879.899 370.155,855.369 370.715,870.25 371.274,852.701 371.833,864.986 372.392,894.768 372.952,889.671 373.511,916.3 374.07,893.213 374.629,904.564 375.189,892.92 375.748,854.039 376.307,861.616 376.866,860.067 377.426,838.311 377.985,818.46 378.544,801.11 379.103,814.726 379.663,797.74 380.222,797.277 380.781,795.083 381.34,795.394 381.9,779.799 382.459,780.014 383.018,781.419 383.577,796.954 384.137,796.592 384.696,798.244 385.255,767.337 385.814,782.519 386.374,781.663 386.933,798.471 387.492,777.044 388.051,809.182 388.611,810.835 389.17,840.658 389.729,821.4 390.288,848.396 390.848,863.264 391.407,891.176 391.966,890.88 392.525,870.01 393.085,862.937 393.644,838.817 394.203,822.751 394.762,820.427 395.322,829.475 395.881,829.1 396.44,828.664 396.999,807.861 397.559,805.788 398.118,832.507 398.677,817.203 399.236,797.589 399.796,798.837 400.355,826.674 400.914,825.94 401.473,807.918 402.033,788.556 402.592,806.983 403.151,840.564 403.71,869.915 404.27,880.275 404.829,841.782 405.388,851.533 405.947,848.261 406.507,843.907 407.066,825.595 407.625,774.877 408.184,808.711 408.744,838.724 409.303,867.207 409.862,865.318 410.421,879.504 410.981,870.693 411.54,865.73 412.099,841.308 412.658,820.712 413.218,782.829 413.777,750.427 414.336,753.412 414.895,755.371 415.455,789.272 416.014,751.819 416.573,770.039 417.132,785.189 417.692,785.157 418.251,766.919 418.81,796.462 419.369,795.207 419.929,793.828 420.488,807.717 421.047,804.436 421.606,818.764 422.166,801.368 422.725,781.808 423.284,798.527 423.843,794.928 424.403,774.556 424.962,779.165 425.521,742.774 426.08,729.091 426.64,729.226 427.199,718.649 427.758,719.364 428.318,674.14 428.877,715.219 429.436,716.168 429.995,736.059 430.555,753.758 431.114,753.95 431.673,736.255 432.232,738.896 432.792,755.82 433.351,739.95 433.91,741.524 434.469,757.208 435.029,757.903 435.588,774.099 436.147,804.755 436.706,803.631 437.266,799.796 437.825,779.681 438.384,840.972 438.943,849.392 439.503,856.766 440.062,851.406 440.621,860.946 441.18,872.476 441.74,864.972 442.299,872.731 442.858,848.528 443.417,791.325 443.977,808.594 444.536,787.176 445.095,767.734 445.654,747.011 446.214,744.772 446.773,764.891 447.332,783.026 447.891,799.151 448.451,815.984 449.01,830.149 449.569,808.606 450.128,802.694 450.688,800.285 451.247,811.452 451.806,809.003 452.365,805.888 452.925,836.285 453.484,831.675 454.043,842.872 454.602,870.031 455.162,862.23 455.721,841.536 456.28,820.365 456.839,784.712 457.399,798.492 457.958,798.219 458.517,830.766 459.076,825.63 459.636,869.852 460.195,830.941 460.754,874.769 461.313,899.713 461.873,877.565 462.432,869.52 462.991,861.748 463.55,870.289 464.11,829.812 464.669,809.467 465.228,789.852 465.787,786.589 466.347,785.193 466.906,795.277 467.465,807.747 468.024,790.135 468.584,787.172 469.143,770.03 469.702,752.264 470.261,672.776 470.821,692.653 471.38,711.715 471.939,712.388 472.498,680.131 473.058,655.3 473.617,661.354 474.176,647.05 474.735,652.808 475.295,672.039 475.854,691.186 476.413,712.17 476.972,727.066 477.532,730.883 478.091,734.962 478.65,739.44 479.209,759.36 479.769,774.937 480.328,788.183 480.887,753.584 481.446,751.785 482.006,769.127 482.565,753.148 483.124,737.18 483.683,721.428 484.243,734.189 484.802,718.982 485.361,738.097 485.92,738.589 486.48,770.627 487.039,786.121 487.598,799.888 488.157,794.918 488.717,824.702 489.276,818.655 489.835,764.921 490.394,761.41 490.954,759.437 491.513,756.553 492.072,758.923 492.631,772.367 493.191,770.987 493.75,768.853 494.309,766.863 494.868,748.053 495.428,669.115 495.987,675.822 496.546,710.843 497.105,728.02 497.665,777.272 498.224,741.941 498.783,721.985 499.342,693.026 499.902,663.915 500.461,654.068 501.02,671.67 501.579,678.494 502.139,681.393 502.698,669.504 503.257,670.178 503.816,675.842 504.376,694.522 504.935,665.216 505.494,672.259 506.053,639.78 506.613,640.991 507.172,629.203 507.731,681.691 508.29,681.709 508.85,681.219 509.409,683.053 509.968,683.734 510.527,701.337 511.087,705.515 511.646,723.649 512.205,723.254 512.764,679.24 513.324,681.753 513.883,717.298 514.442,719.692 515.001,752.939 515.561,769.622 516.12,719.437 516.679,718.499 517.238,718.93 517.798,651.79 518.357,673.911 518.916,646.512 519.475,654.65 520.035,670.485 520.594,668.805 521.153,669.219 521.712,658.7 522.272,694.362 522.831,695.052 523.39,698.145 523.949,699.891 524.509,734.27 525.068,737.361 525.627,720.757 526.186,719.229 526.746,737.29 527.305,767.414 527.864,735.428 528.423,749.9 528.983,716.172 529.542,716.342 530.101,721.111 530.66,705.655 531.22,724.625 531.779,692.74 532.338,677.828 532.897,694.051 533.457,676.092 534.016,676.973 534.575,695.882 535.134,666.976 535.694,670.1 536.253,642.684 536.812,662.333 537.371,681.692 537.931,685.985 538.49,723.357 539.049,724.646 539.608,743.408 540.168,726.485 540.727,724.468 541.286,738.664 541.845,784.374 542.405,780.926 542.964,810.554 543.523,824.488 544.082,835.14 544.642,811.461 545.201,801.439 545.76,781.765 546.319,795.932 546.879,760.808 547.438,758.426 547.997,788.983 548.556,771.788 549.116,769.645 549.675,762.67 550.234,740.134 550.793,772.939 551.353,755.958 551.912,787.713 552.471,780.053 553.031,791.382 553.59,801.808 554.149,812.736 554.708,824.892 555.268,814.038 555.827,791.093 556.386,804.038 556.945,785.039 557.505,799.618 558.064,776.897 558.623,771.429 559.182,769.327 559.742,798.823 560.301,795.428 560.86,788.45 561.419,736.59 561.979,769.741 562.538,783.462 563.097,780.862 563.656,760.051 564.216,787.464 564.775,815.024 565.334,804.803 565.893,799.133 566.453,828.758 567.012,790.409 567.571,785.04 568.13,765.799 568.69,797.055 569.249,758.547 569.808,709.189 570.367,694.578 570.927,678.759 571.486,649.662 572.045,621.662 572.604,604.488 573.164,642.06 573.723,645.622 574.282,647.201 574.841,649.658 575.401,668.347 575.96,670.973 576.519,637.506 577.078,656.033 577.638,673.601 578.197,724.148 578.756,709.023 579.315,694.846 579.875,675.346 580.434,677.393 580.993,692.715 581.552,661.381 582.112,682.91 582.671,670.133 583.23,671.924 583.789,654.956 584.349,691.515 584.908,688.87 585.467,655.376 586.026,642.067 586.586,628.379 587.145,665.803 587.704,681.303 588.263,668.328 588.823,651.247 589.382,668.266 589.941,687.099 590.5,672.125 591.06,690.862 591.619,642.92 592.178,644.817 592.737,662.34 593.297,663.147 593.856,662.531 594.415,646.374 594.974,614.895 595.534,619.783 596.093,658.88 596.652,661.862 597.211,634.555 597.771,625.092 598.33,610.9 598.889,649.603 599.448,622.769 600.008,626.078 600.567,616.857 601.126,604.645 601.685,611.522 602.245,615.846 602.804,635.169 603.363,623.472 603.922,612.596 604.482,620.194 605.041,652.334 605.6,687.531 606.159,719.294 606.719,766.718 607.278,749.456 607.837,781.111 608.396,793.497 608.956,804.923 609.515,831.346 610.074,826.52 610.633,819.26 611.193,846.242 611.752,838.272 612.311,831.979 612.87,795.687 613.43,775.03 613.989,758.528 614.548,756.129 615.107,753.917 615.667,785.596 616.226,796.308 616.785,808.519 617.344,805.436 617.904,818.744 618.463,796.855 619.022,792.494 619.581,755.381 620.141,707.185 620.7,759.819 621.259,708.362 621.818,721.792 622.378,737.105 622.937,705.08 623.496,724.632 624.055,726.494 624.615,741.413 625.174,724.326 625.733,709.39 626.292,693.258 626.852,696.278 627.411,731.4 627.97,713.903 628.529,715.554 629.089,700.547 629.648,703.723 630.207,704.862 630.766,672.816 631.326,691.325 631.885,692.758 632.444,694.967 633.003,693.229 633.563,662.827 634.122,650.684 634.681,656.292 635.24,638.758 635.8,612.294 636.359,615.825 636.918,619.734 637.477,605.791 638.037,627.403 638.596,615.227 639.155,605.2 639.714,609.874 640.274,616.029 640.833,651.926 641.392,640.764 641.951,660.131 642.511,663.838 643.07,683.325 643.629,685.323 644.188,686.617 644.748,717.96 645.307,730.62 645.866,696.595 646.425,700.549 646.985,700.93 647.544,685.062 648.103,670.723 648.662,735.158 649.222,732.202 649.781,731.605 650.34,716.293 650.899,714.852 651.459,716.408 652.018,700.988 652.577,686.559 653.136,686.798 653.696,687.794 654.255,702.746 654.814,722.926 655.373,722.613 655.933,737.833 656.492,782.687 657.051,810.33 657.61,799.1 658.17,742.949 658.729,725.19 659.288,722.013 659.847,718.856 660.407,702.439 660.966,701.665 661.525,684.547 662.084,685.95 662.644,717.495 663.203,734.926 663.762,732.153 664.321,743.831 664.881,757.795 665.44,756.168 665.999,735.485 666.558,716.431 667.118,696.721 667.677,694.613 668.236,691.516 668.795,690.829 669.355,739.872 669.914,753.866 670.473,753.022 671.032,783.382 671.592,761.89 672.151,771.571 672.71,748.606 673.269,711.28 673.829,695.528 674.388,697.247 674.947,717.24 675.506,716.213 676.066,761.965 676.625,743.802 677.184,754.979 677.743,799.675 678.303,795.382 678.862,775.039 679.421,769.984 679.981,747.16 680.54,710.321 681.099,725.392 681.658,708.006 682.218,707.534 682.777,707.205 683.336,721.49 683.895,736.556 684.455,733.462 685.014,702.907 685.573,717.202 686.132,712.771 686.692,694.458 687.251,709.721 687.81,709.033 688.369,723.174 688.929,737.433 689.488,768.909 690.047,767.992 690.606,729.923 691.166,712.527 691.725,679.465 692.284,647.46 692.843,633.554 693.403,639.367 693.962,659.546 694.521,691.151 695.08,674.544 695.64,711.084 696.199,709.127 696.758,742.979 697.317,741.553 697.877,755.468 698.436,756.077 698.995,740.973 699.554,783.429 700.114,794.457 700.673,803.664 701.232,829.572 701.791,825.136 702.351,804.49 702.91,816.946 703.469,793.489 704.028,785.838 704.588,778.816 705.147,773.576 705.706,722.525 706.265,707.114 706.825,691.832 707.384,691.447 707.943,691.618 708.502,672.443 709.062,672.363 709.621,687.146 710.18,687.699 710.739,687.442 711.299,638.391 711.858,624.863 712.417,624.214 712.976,662.111 713.536,648.263 714.095,585.322 714.654,605.495 715.213,591.959 715.773,601.032 716.332,637.6 716.891,626.536 717.45,648.42 718.01,668.344 718.569,684.621 719.128,655.958 719.687,641.715 720.247,613.196 720.806,617.269 721.365,623.511 721.924,642.678 722.484,630.541 723.043,651.08 723.602,681.428 724.161,663.584 724.721,649.692 725.28,687.897 725.839,672.217 726.398,672.726 726.958,675.398 727.517,676.74 728.076,647.293 728.635,635.219 729.195,655.258 729.754,639.196 730.313,642.683 730.872,661.108 731.432,661.576 731.991,648.606 732.55,606.597 733.109,561.085 733.669,571.554 734.228,594.748 734.787,584.545 735.346,588.666 735.906,611.717 736.465,600.998 737.024,605.204 737.583,613.929 738.143,618.486 738.702,624.004 739.261,630.374 739.82,617.223 740.38,641.061 740.939,628.081 741.498,661.983 742.057,682.224 742.617,714.228 743.176,683.264 743.735,703.673 744.294,687.313 744.854,704.914 745.413,703.539 745.972,701.083 746.531,670.22 747.091,688.598 747.65,673.249 748.209,686.49 748.768,688.036 749.328,673.137 749.887,692.833 750.446,696.755 751.005,713.038 751.565,676.373 752.124,710.453 752.683,740.295 753.242,737.85 753.802,739.533 754.361,737.236 754.92,703.264 755.479,683.64 756.039,668.942 756.598,671.037 757.157,676.403 757.716,711.255 758.276,712.068 758.835,697.561 759.394,695.436 759.953,691.276 760.513,659.234 761.072,647.117 761.631,633.794 762.19,635.654 762.75,623.894 763.309,611.649 763.868,633.006 764.427,666.438 764.987,669.721 765.546,658.583 766.105,678.705 766.664,692.935 767.224,727.03 767.783,712.239 768.342,713.256 768.901,726.427 769.461,709.711 770.02,640.928 770.579,663.906 771.138,650.067 771.698,654.997 772.257,641.086 772.816,642.726 773.375,645.636 773.935,664.198 774.494,663.9 775.053,664.564 775.612,647.682 776.172,648.995 776.731,635.43 777.29,655.967 777.849,659.841 778.409,662.976 778.968,667.252 779.527,653.173 780.086,658.749 780.646,675.661 781.205,677.041 781.764,707.794 782.323,738.298 782.883,751.338 783.442,748.369 784.001,730.684 784.56,763.72 785.12,791.74 785.679,787.446 786.238,779.505 786.797,804.824 787.357,797.566 787.916,806.623 788.475,802.095 789.034,778.998 789.594,772.668 790.153,659.359 790.712,678.121 791.271,681.463 791.831,695.969 792.39,694.671 792.949,691.996 793.508,693.341 794.068,690.961 794.627,706.823 795.186,705.663 795.745,690.601 796.305,707.124 796.864,689.985 797.423,688.053 797.982,687.848 798.542,706.028 799.101,705.212 799.66,701.47 800.219,700.218 800.779,667.679 801.338,653.369 801.897,653.206 802.456,659.777 803.016,695.26 803.575,678.757 804.134,681.301 804.693,648.138 805.253,669.705 805.812,669.923 806.371,674.006 806.931,674.679 807.49,645.638 808.049,632.707 808.608,616.762 809.168,637.747 809.727,653.729 810.286,735.514 810.845,730.905 811.405,678.318 811.964,708.913 812.523,723.574 813.082,672.838 813.642,673.935 814.201,672.07 814.76,689.802 815.319,691.173 815.879,691.782 816.438,674.199 816.997,679.179 817.556,693.924 818.116,694.585 818.675,677.67 819.234,689.652 819.793,672.973 820.353,673.191 820.912,692.041 821.471,688.524 822.03,673.23 822.59,655.625 823.149,638.503 823.708,658.836 824.267,642.785 824.827,680.507 825.386,696.415 825.945,740.91 826.504,756.227 827.064,786.479 827.623,799.788 828.182,781.015 828.741,792.789 829.301,805.57 829.86,815.839 830.419,793.719 830.978,822.1 831.538,816.971 832.097,792.939 832.656,818.456 833.215,812.178 833.775,819.353 834.334,731.005 834.893,726.269 835.452,770.714 836.012,752.671 836.571,716.66 837.13,716.031 837.689,732.793 838.249,745.751 838.808,726.154 839.367,741.335 839.926,737.326 840.486,703.198 841.045,733.777 841.604,749.674 842.163,730.882 842.723,711.358 843.282,744.34 843.841,723.371 844.4,751.157 844.96,747.895 845.519,742.089 846.078,738.701 846.637,735.412 847.197,684.076 847.756,670.195 848.315,717.473 848.874,747.26 849.434,745.785 849.993,744.768 850.552,723.788 851.111,720.841 851.671,700.619 852.23,734.948 852.789,734.147 853.348,716.555 853.908,761.044 854.467,756.047 855.026,737.16 855.585,734.527 856.145,715.646 856.704,699.069 857.263,713.224 857.822,729.35 858.382,727.43 858.941,724.313 859.5,737.318 860.059,715.411 860.619,727.759 861.178,711.122 861.737,689.631 862.296,703.567 862.856,736.441 863.415,752.94 863.974,748.494 864.533,744.345 865.093,742.538 865.652,798.269 866.211,807.821 866.77,800.754 867.33,792.411 867.889,817.541 868.448,825.212 869.007,783.119 869.567,777.886 870.126,759.045 870.685,752.145 871.244,730.476 871.804,727.828 872.363,697.873 872.922,731.245 873.481,709.553 874.041,690.711 874.6,674.789 875.159,660.742 875.718,691.624 876.278,690.496 876.837,701.052 877.396,652.569 877.955,654.9 878.515,638.803 879.074,656.819 879.633,640.353 880.192,640.989 880.752,646.11 881.311,649.841 881.87,649.025 882.429,634.345 882.989,634.862 883.548,620.232 884.107,625.243 884.666,578.373 885.226,616.8 885.785,650.544 886.344,637.051 886.903,640.393 887.463,659.849 888.022,660.968 888.581,661.731 889.14,645.044 889.7,677.757 890.259,676.375 890.818,680.292 891.377,614.896 891.937,607.93 892.496,645.881 893.055,633.091 893.614,623.309 894.174,642.152 894.733,649.699 895.292,638.43 895.851,626.652 896.411,595.363 896.97,598.359 897.529,606.46 898.088,631.467 898.648,620.958 899.207,638.389 899.766,638.022 900.325,658.362 900.885,674.879 901.444,688.672 902.003,700.73 902.562,696.605 903.122,676.886 903.681,659.479 904.24,675.123 904.799,626.776 905.359,615.022 905.918,685.209 906.477,668.255 907.036,670.245 907.596,636.757 908.155,655.212 908.714,671.758 909.273,685.434 909.833,684.985 910.392,701.953 910.951,684.964 911.51,684.342 912.07,714.553 912.629,698.514 913.188,696.619 913.747,680.406 914.307,712.718 914.866,694.102 915.425,675.407 915.984,692.189 916.544,696.506 917.103,664.226 917.662,694.606 918.221,675.476 918.781,677.473 919.34,708.718 919.899,689.579 920.458,721.528 921.018,699.473 921.577,727.479 922.136,757.871 922.695,771.552 923.255,783.347 923.814,777.752 924.373,803.36 924.932,798.034 925.492,777.98 926.051,757.857 926.61,771.44 927.169,765.724 927.729,781.233 928.288,732.465 928.847,682.682 929.406,667.879 929.966,684.791 930.525,668.335 931.084,685.222 931.644,668.165 932.203,671.442 932.762,655.694 933.321,688.682 933.881,659.271 934.44,661.438 934.999,662.181 935.558,645.464 936.118,646.523 936.677,680.452 937.236,680.389 937.795,668.944 938.355,672.651 938.914,669.362 939.473,669.32 940.032,687.014 940.592,657.097 941.151,658.855 941.71,675.918 942.269,675.418 942.829,659.311 943.388,655.669 943.947,656.665 944.506,674.783 945.066,692.061 945.625,661.982 946.184,647.073 946.743,650.898 947.303,654.933 947.862,673.375 948.421,623.507 948.98,624.662 949.54,640.749 950.099,642.796 950.658,644.119 951.217,665.308 951.777,652.354 952.336,670.061 952.895,686.741 953.454,720.303 954.014,718.875 954.573,731.787 955.132,731.305 955.691,729.637 956.251,694.713 956.81,698.803 957.369,727.77 957.928,691.066 958.488,737.305 959.047,732.826 959.606,712.815 960.165,728.769 960.725,757.553 961.284,737.606 961.843,700.917 962.402,700.225 962.962,734.393 963.521,732.235 964.08,728.971 964.639,741.82 965.199,722.689 965.758,740.856 966.317,785.33 966.876,780.776 967.436,789.527 967.995,785.273 968.554,784.29 969.113,761.289 969.673,758.635 970.232,758.957 970.791,727.299 971.35,743.75 971.91,786.457 972.469,814.247 973.028,764.224 973.587,714.675 974.147,714.794 974.706,715.433 975.265,711.152 975.824,723.161 976.384,755.339 976.943,754.273 977.502,734.585 978.061,731.406 978.621,742.019 979.18,739.653 979.739,704.861 980.298,672.328 980.858,702.99 981.417,734.09 981.976,731.891 982.535,747.932 983.095,693.755 983.654,738.353 984.213,720.56 984.772,734.672 985.332,719.262 985.891,652.059 986.45,636.726 987.009,641.871 987.569,643.358 988.128,662.837 988.687,678.482 989.246,743.938 989.806,755.692 990.365,721.541 990.924,720.278 991.483,652.363 992.043,624.653 992.602,599.55 993.161,617.065 993.72,624.553 994.28,642.941 994.839,626.961 995.398,631.567 995.957,633.917 996.517,637.69 997.076,653.892 997.635,657.721 998.194,690.104 998.754,689.051 999.313,675.099 999.872,692.99 1000.43,696.444 1000.99,647.13 1001.55,635.651 1002.11,623.946 1002.67,609.011 1003.23,612.69 1003.79,633.585 1004.35,651.848 1004.91,666.298 1005.46,652.707 1006.02,639.894 1006.58,659.911 1007.14,657.428 1007.7,692.882 1008.26,693.329 1008.82,677.626 1009.38,726.742 1009.94,722.293 1010.5,686.762 1011.06,698.378 1011.62,731.049 1012.18,744.592 1012.73,707.337 1013.29,734.428 1013.85,700.42 1014.41,700.671 1014.97,651.775 1015.53,621.897 1016.09,609.586 1016.65,666.383 1017.21,669.865 1017.77,667.421 1018.33,665.499 1018.89,650.671 1019.45,668.557 1020.01,700.83 1020.56,703.379 1021.12,671.033 1021.68,686.801 1022.24,718.067 1022.8,683.49 1023.36,684.543 1023.92,699.702 1024.48,730.815 1025.04,715.544 1025.6,714.351 1026.16,694.566 1026.72,694.238 1027.28,676.354 1027.83,693.155 1028.39,711.475 1028.95,758.74 1029.51,721.574 1030.07,736.806 1030.63,717.164 1031.19,698.091 1031.75,702.078 1032.31,719.312 1032.87,731.557 1033.43,728.911 1033.99,740.274 1034.55,752.464 1035.1,780.592 1035.66,759.211 1036.22,753.002 1036.78,751.378 1037.34,697.345 1037.9,713.057 1038.46,695.705 1039.02,680.619 1039.58,697.429 1040.14,666.18 1040.7,648.111 1041.26,683.788 1041.82,667.769 1042.38,651.14 1042.93,651.272 1043.49,654.418 1044.05,675.611 1044.61,679.656 1045.17,714.578 1045.73,717.901 1046.29,714.264 1046.85,680.547 1047.41,683.401 1047.97,667.88 1048.53,669.964 1049.09,669.315 1049.65,704.16 1050.2,719.418 1050.76,748.997 1051.32,714.368 1051.88,682.532 1052.44,668.279 1053,682.605 1053.56,664.995 1054.12,684.479 1054.68,697.073 1055.24,663.016 1055.8,667.007 1056.36,652.914 1056.92,672.898 1057.48,690.025 1058.03,705.99 1058.59,656.112 1059.15,623.895 1059.71,610.989 1060.27,613.64 1060.83,617.304 1061.39,637.225 1061.95,641.224 1062.51,627.657 1063.07,646.113 1063.63,633.652 1064.19,621.69 1064.75,641.811 1065.3,640.567 1065.86,642.075 1066.42,664.22 1066.98,614.72 1067.54,600.013 1068.1,604.551 1068.66,611.666 1069.22,564.955 1069.78,585.201 1070.34,572.096 1070.9,580.37 1071.46,572.696 1072.02,611.635 1072.57,602.002 1073.13,558.172 1073.69,582.137 1074.25,587.384 1074.81,576.301 1075.37,598.153 1075.93,584.758 1076.49,603.467 1077.05,639.712 1077.61,658.746 1078.17,692.752 1078.73,689.357 1079.29,610.675 1079.85,630.186 1080.4,619.786 1080.96,627.152 1081.52,646.859 1082.08,649.837 1082.64,667.048 1083.2,668.543 1083.76,667.852 1084.32,699.105 1084.88,713.599 1085.44,682.272 1086,688.198 1086.56,704.564 1087.12,738.012 1087.67,733.454 1088.23,731.983 1088.79,743.842 1089.35,711.208 1089.91,694.865 1090.47,694.731 1091.03,694.244 1091.59,708.894 1092.15,707.34 1092.71,707.492 1093.27,656.415 1093.83,639.045 1094.39,691.255 1094.94,641.164 1095.5,612.247 1096.06,599.041 1096.62,654.253 1097.18,640.648 1097.74,671.459 1098.3,672.359 1098.86,672.07 1099.42,642.08 1099.98,582.159 1100.54,587.435 1101.1,613.154 1101.66,616.119 1102.22,618.354 1102.77,638.302 1103.33,658.75 1103.89,675.979 1104.45,642.517 1105.01,662.947 1105.57,665.833 1106.13,718.456 1106.69,732.738 1107.25,728.924 1107.81,711.26 1108.37,727.337 1108.93,709.957 1109.49,726.59 1110.04,743.985 1110.6,772.894 1111.16,722.253 1111.72,705.769 1112.28,753.055 1112.84,750.158 1113.4,720.322 1113.96,717.957 1114.52,716.473 1115.08,698.632 1115.64,711.608 1116.2,693.473 1116.76,707.584 1117.31,751.582 1117.87,779.509 1118.43,712.22 1118.99,747.13 1119.55,743.937 1120.11,742.625 1120.67,742.562 1121.23,758.594 1121.79,785.007 1122.35,746.84 1122.91,743.617 1123.47,706.439 1124.03,705.94 1124.59,668.602 1125.14,655.659 1125.7,641.107 1126.26,614.831 1126.82,652.308 1127.38,675.948 1127.94,676.616 1128.5,690.113 1129.06,703.955 1129.62,668.689 1130.18,652.111 1130.74,650.717 1131.3,667.563 1131.86,716.728 1132.41,747.741 1132.97,794.88 1133.53,802.259 1134.09,812.162 1134.65,791.632 1135.21,751.261 1135.77,764.572 1136.33,760.397 1136.89,773.335 1137.45,766.888 1138.01,779.63 1138.57,806.806 1139.13,768.151 1139.68,746.127 1140.24,708.212 1140.8,674.843 1141.36,674.788 1141.92,674.24 1142.48,659.993 1143.04,664.664 1143.6,696.517 1144.16,714.009 1144.72,716.139 1145.28,699.362 1145.84,700.851 1146.4,682.498 1146.96,698.058 1147.51,729.975 1148.07,708.608 1148.63,677.137 1149.19,692.363 1149.75,658.545 1150.31,628.686 1150.87,646.277 1151.43,677.623 1151.99,712.777 1152.55,696.279 1153.11,679.562 1153.67,697.352 1154.23,694.299 1154.78,709.053 1155.34,705.719 1155.9,716.726 1156.46,746.191 1157.02,743.907 1157.58,721.447 1158.14,637.853 1158.7,623.256 1159.26,609.524 1159.82,580.2 1160.38,602.055 1160.94,640.864 1161.5,644.394 1162.05,661.927 1162.61,614.907 1163.17,636.791 1163.73,623.784 1164.29,628.455 1164.85,664.264 1165.41,663.209 1165.97,664.199 1166.53,650.545 1167.09,642.499 1167.65,629.459 1168.21,633.131 1168.77,635.931 1169.33,651.723 1169.88,670.58 1170.44,687.229 1171,672.095 1171.56,675.13 1172.12,644.164 1172.68,627.594 1173.24,600.858 1173.8,621.418 1174.36,608.938 1174.92,610.474 1175.48,629.907 1176.04,712.328 1176.6,724.117 1177.15,735.99 1177.71,735.497 1178.27,713.985 1178.83,713.181 1179.39,725.388 1179.95,758.2 1180.51,722.78 1181.07,721.177 1181.63,721.158 1182.19,703.909 1182.75,685.806 1183.31,670.42 1183.87,672.908 1184.43,690.778 1184.98,693.228 1185.54,693.607 1186.1,728.75 1186.66,709.093 1187.22,677.424 1187.78,680.711 1188.34,679.928 1188.9,664.203 1189.46,649.76 1190.02,652.949 1190.58,667.309 1191.14,681.992 1191.7,680.054 1192.25,679.15 1192.81,663.481 1193.37,662.853 1193.93,700.881 1194.49,682.125 1195.05,662.87 1195.61,662.882 1196.17,682.653 1196.73,681.037 1197.29,681.166 1197.85,666.628 1198.41,685.329 1198.97,672.129 1199.52,654.573 1200.08,657.911 1200.64,654.941 1201.2,673.192 1201.76,690.282 1202.32,659.591 1202.88,661.365 1203.44,659.488 1204,675.596 1204.56,690.938 1205.12,705.843 1205.68,704.852 1206.24,688.75 1206.8,688.256 1207.35,691.032 1207.91,673.712 1208.47,672.99 1209.03,673.613 1209.59,674.767 1210.15,675.316 1210.71,676.477 1211.27,679.975 1211.83,693.798 1212.39,726.569 1212.95,712.38 1213.51,728.122 1214.07,739.602 1214.62,725.445 1215.18,724.732 1215.74,722.949 1216.3,723.387 1216.86,718.124 1217.42,732.866 1217.98,694.923 1218.54,711.124 1219.1,697.772 1219.66,698.952 1220.22,694.55 1220.78,708.478 1221.34,722.603 1221.89,689.694 1222.45,673.574 1223.01,669.902 1223.57,670.447 1224.13,639.238 1224.69,591.599 1225.25,564.504 1225.81,552.813 1226.37,558.372 1226.93,549.715 1227.49,543.293 1228.05,536.051 1228.61,547.809 1229.17,553.853 1229.72,579.25 1230.28,588.267 1230.84,576.269 1231.4,583.883 1231.96,587.011 1232.52,591.093 1233.08,582.651 1233.64,588.254 1234.2,609.913 1234.76,598.893 1235.32,618.936 1235.88,591.037 1236.44,628.983 1236.99,632.106 1237.55,620.63 1238.11,625.604 1238.67,625.396 1239.23,627.233 1239.79,631.368 1240.35,630.787 1240.91,633.159 1241.47,636.941 1242.03,625.42 1242.59,626.211 1243.15,678.822 1243.71,695.324 1244.26,725.572 1244.82,773.611 1245.38,756.725 1245.94,752.539 1246.5,750.775 1247.06,767.355 1247.62,765.31 1248.18,761.308 1248.74,743.819 1249.3,802.51 1249.86,809.625 1250.42,805.307 1250.98,795.388 1251.54,791.603 1252.09,786.764 1252.65,782.942 1253.21,765.007 1253.77,762.125 1254.33,741.045 1254.89,754.861 1255.45,749.494 1256.01,780.471 1256.57,728.178 1257.13,724.459 1257.69,688.293 1258.25,685.51 1258.81,669.639 1259.36,686.521 1259.92,702.545 1260.48,669.391 1261.04,688.387 1261.6,692.17 1262.16,703.87 1262.72,717.715 1263.28,744.809 1263.84,760.992 1264.4,755.62 1264.96,769.16 1265.52,762.388 1266.08,745.102 1266.63,742.297 1267.19,742.15 1267.75,739.3 1268.31,702.039 1268.87,717.774 1269.43,713.984 1269.99,727.199 1270.55,726.498 1271.11,743.097 1271.67,750.693 1272.23,748.205 1272.79,745.16 1273.35,726.34 1273.91,706.841 1274.46,704.812 1275.02,716.909 1275.58,731.008 1276.14,759.734 1276.7,770.765 1277.26,765.085 1277.82,791.278 1278.38,803.849 1278.94,765.471 1279.5,744.633 1280.06,724.011 1280.62,688.834 1281.18,639.316 1281.73,606.736 1282.29,595.991 1282.85,601.655 1283.41,654.949 1283.97,643.809 1284.53,663.504 1285.09,636.665 1285.65,654.807 1286.21,657.244 1286.77,659.043 1287.33,627.508 1287.89,616.986 1288.45,573.99 1289,611.463 1289.56,598.805 1290.12,604.043 1290.68,606.236 1291.24,629.163 1291.8,681.281 1292.36,692.18 1292.92,724.968 1293.48,736.393 1294.04,716.32 1294.6,730.478 1295.16,695.549 1295.72,713.583 1296.28,680.064 1296.83,664.946 1297.39,667.095 1297.95,666.502 1298.51,652.742 1299.07,689.332 1299.63,673.909 1300.19,671.31 1300.75,671.23 1301.31,621.597 1301.87,612.903 1302.43,585.736 1302.99,593.12 1303.55,630.362 1304.1,613.762 1304.66,613.582 1305.22,616.439 1305.78,619.433 1306.34,618 1306.9,620.816 1307.46,624.395 1308.02,632.907 1308.58,652.378 1309.14,652.713 1309.7,649.239 1310.26,650.986 1310.82,637.841 1311.38,673.792 1311.93,658.002 1312.49,660.826 1313.05,659.541 1313.61,630.734 1314.17,632.471 1314.73,650.77 1315.29,637.331 1315.85,624.753 1316.41,595.806 1316.97,601.947 1317.53,591.278 1318.09,548.056 1318.65,571.091 1319.2,582.823 1319.76,591.189 1320.32,610.961 1320.88,629.942 1321.44,666.652 1322,666.182 1322.56,652.585 1323.12,654.955 1323.68,671.852 1324.24,657.337 1324.8,660.717 1325.36,663.759 1325.92,647.423 1326.47,680.658 1327.03,658.422 1327.59,691.474 1328.15,692.145 1328.71,643.324 1329.27,644.722 1329.83,662.276 1330.39,680.326 1330.95,697.961 1331.51,662.376 1332.07,645.228 1332.63,631.04 1333.19,616.295 1333.75,586.493 1334.3,591.385 1334.86,599.103 1335.42,605.756 1335.98,627.939 1336.54,633.247 1337.1,651.787 1337.66,670.735 1338.22,652.149 1338.78,655.131 1339.34,657.82 1339.9,670.661 1340.46,658.494 1341.02,697.266 1341.57,696.077 1342.13,713.342 1342.69,726.355 1343.25,724.246 1343.81,723.194 1344.37,737.853 1344.93,754.148 1345.49,734.129 1346.05,732.26 1346.61,733.618 1347.17,730.307 1347.73,740.008 1348.29,722.638 1348.84,721.802 1349.4,722.263 1349.96,719.613 1350.52,717.641 1351.08,714.869 1351.64,712.83 1352.2,692.292 1352.76,689.025 1353.32,673.583 1353.88,674.389 1354.44,692.782 1355,690.325 1355.56,641.304 1356.12,625.538 1356.67,646.528 1357.23,634.535 1357.79,636.138 1358.35,622.542 1358.91,643.625 1359.47,662.705 1360.03,641.538 1360.59,626.824 1361.15,627.186 1361.71,645.608 1362.27,630.507 1362.83,614.842 1363.39,617.551 1363.94,619.08 1364.5,639.648 1365.06,673.63 1365.62,673.092 1366.18,674.034 1366.74,660.238 1367.3,692.394 1367.86,709.989 1368.42,713.425 1368.98,727.054 1369.54,710.44 1370.1,710.112 1370.66,690.823 1371.21,691.545 1371.77,722.151 1372.33,719.71 1372.89,715.156 1373.45,715.294 1374.01,732.584 1374.57,730.701 1375.13,694.868 1375.69,713.944 1376.25,715.278 1376.81,731.042 1377.37,710.801 1377.93,729.565 1378.49,745.93 1379.04,773.211 1379.6,797.543 1380.16,792.232 1380.72,803.204 1381.28,810.405 1381.84,818.829 1382.4,807.697 1382.96,801.233 1383.52,793.969 1384.08,791.292 1384.64,818.546 1385.2,812.394 1385.76,755.68 1386.31,755.294 1386.87,784.005 1387.43,781.176 1387.99,777.055 1388.55,757.261 1389.11,686.992 1389.67,684.271 1390.23,686.612 1390.79,671.237 1391.35,685.531 1391.91,665.981 1392.47,662.824 1393.03,678.154 1393.58,693.09 1394.14,659.358 1394.7,694.349 1395.26,689.535 1395.82,670.457 1396.38,639.173 1396.94,658.31 1397.5,689.611 1398.06,739.755 1398.62,736.078 1399.18,764.32 1399.74,758.919 1400.3,757.248 1400.86,770.067 1401.41,765.79 1401.97,744.088 1402.53,742.616 1403.09,708.327 1403.65,752.378 1404.21,749.691 1404.77,731.239 1405.33,716.307 1405.89,713.526 1406.45,709.861 1407.01,708.005 1407.57,707.009 1408.13,737.566 1408.68,730.553 1409.24,727.746 1409.8,741.902 1410.36,735.64 1410.92,713.792 1411.48,730.014 1412.04,729.446 1412.6,692.362 1413.16,689.648 1413.72,689.417 1414.28,684.255 1414.84,665.541 1415.4,685.141 1415.95,698.66 1416.51,695.95 1417.07,727.019 1417.63,742.431 1418.19,724.626 1418.75,721.885 1419.31,686.526 1419.87,718.112 1420.43,750.466 1420.99,747.678 1421.55,727.618 1422.11,727.134 1422.67,738.443 1423.23,747.902 1423.78,729.704 1424.34,662.76 1424.9,662.035 1425.46,661.658 1426.02,678.211 1426.58,709.655 1427.14,690.682 1427.7,707.033 1428.26,704.378 1428.82,732.375 1429.38,693.449 1429.94,696.365 1430.5,726.565 1431.05,673.641 1431.61,691.626 1432.17,692.501 1432.73,673.925 1433.29,675.147 1433.85,674.321 1434.41,628.115 1434.97,631.718 1435.53,632.496 1436.09,652.961 1436.65,657.063 1437.21,641.062 1437.77,659.879 1438.33,661.3 1438.88,678.04 1439.44,679.743 1440,662.036 1440.56,660.694 1441.12,628.789 1441.68,631.005 1442.24,631.649 1442.8,649.973 1443.36,637.614 1443.92,683.987 1444.48,685.98 1445.04,686.957 1445.6,655.265 1446.15,706.186 1446.71,703.495 1447.27,702.952 1447.83,717.081 1448.39,719.568 1448.95,683.378 1449.51,699.609 1450.07,715.579 1450.63,746.87 1451.19,774.025 1451.75,733.602 1452.31,718.037 1452.87,715.61 1453.42,714.509 1453.98,695.72 1454.54,675.679 1455.1,661.862 1455.66,660.794 1456.22,676.555 1456.78,643.579 1457.34,660.318 1457.9,693.173 1458.46,710.536 1459.02,708.938 1459.58,707.571 1460.14,738.593 1460.7,751.876 1461.25,779.534 1461.81,790.664 1462.37,787.048 1462.93,748.563 1463.49,761.245 1464.05,759.426 1464.61,756.248 1465.17,784.912 1465.73,746.503 1466.29,729.739 1466.85,743.291 1467.41,755.868 1467.97,788.38 1468.52,764.648 1469.08,731.512 1469.64,728.038 1470.2,728.813 1470.76,729.839 1471.32,710.468 1471.88,710.409 1472.44,688.921 1473,702.762 1473.56,700.897 1474.12,648.742 1474.68,631.67 1475.24,652.041 1475.79,688.589 1476.35,667.707 1476.91,683.677 1477.47,714.445 1478.03,694.801 1478.59,728.547 1479.15,758.815 1479.71,774.159 1480.27,753.785 1480.83,734.559 1481.39,730.699 1481.95,709.389 1482.51,721.349 1483.07,685.975 1483.62,703.494 1484.18,683.493 1484.74,700.745 1485.3,718.277 1485.86,711.919 1486.42,695.146 1486.98,715.276 1487.54,696.837 1488.1,708.835 1488.66,688.132 1489.22,687.638 1489.78,670.462 1490.34,670.456 1490.89,670.163 1491.45,654.42 1492.01,702.269 1492.57,683.554 1493.13,663.17 1493.69,648.148 1494.25,649.156 1494.81,667.375 1495.37,685.005 1495.93,682.706 1496.49,683.421 1497.05,687.376 1497.61,673.962 1498.16,673.066 1498.72,672.725 1499.28,642.118 1499.84,642.835 1500.4,642.331 1500.96,642.35 1501.52,662.666 1502.08,662.308 1502.64,644.356 1503.2,628.079 1503.76,695.395 1504.32,679.969 1504.88,664.811 1505.44,665.008 1505.99,635.439 1506.55,657.474 1507.11,660.829 1507.67,632.531 1508.23,601.516 1508.79,607.218 1509.35,593.822 1509.91,599.515 1510.47,604.599 1511.03,577.258 1511.59,580.043 1512.15,588.901 1512.71,607.643 1513.26,610.625 1513.82,615.602 1514.38,652.028 1514.94,619.572 1515.5,607.307 1516.06,625.616 1516.62,598.409 1517.18,539.033 1517.74,548.179 1518.3,571.939 1518.86,576.93 1519.42,530.192 1519.98,524.127 1520.53,566.657 1521.09,570.282 1521.65,576.461 1522.21,534.429 1522.77,544.467 1523.33,550.399 1523.89,557.966 1524.45,598.598 1525.01,603.967 1525.57,625.578 1526.13,633.245 1526.69,651.98 1527.25,689.187 1527.81,674.123 1528.36,675.13 1528.92,675.028 1529.48,626 1530.04,614.923 1530.6,638.35 1531.16,672.211 1531.72,721.736 1532.28,720.811 1532.84,701.833 1533.4,717.469 1533.96,666.196 1534.52,668.342 1535.08,654.321 1535.63,655.206 1536.19,655.51 1536.75,673.055 1537.31,654.065 1537.87,672.747 1538.43,668.022 1538.99,668.192 1539.55,652.167 1540.11,637.191 1540.67,640.77 1541.23,648.061 1541.79,682.644 1542.35,682.83 1542.9,681.937 1543.46,699.747 1544.02,714.647 1544.58,731.696 1545.14,749.306 1545.7,746.387 1546.26,761.694 1546.82,753.377 1547.38,748.939 1547.94,741.968 1548.5,703.247 1549.06,717.056 1549.62,687.143 1550.18,703.749 1550.73,704.987 1551.29,683.591 1551.85,700.189 1552.41,718.253 1552.97,751.33 1553.53,751.312 1554.09,767.194 1554.65,762.601 1555.21,725.539 1555.77,688.615 1556.33,685.13 1556.89,681.115 1557.45,694.425 1558,643.681 1558.56,663.301 1559.12,647.173 1559.68,651.003 1560.24,681.947 1560.8,698.354 1561.36,695.615 1561.92,707.47 1562.48,705.961 1563.04,720.971 1563.6,704.591 1564.16,723.381 1564.72,718.757 1565.28,714.931 1565.83,743.371 1566.39,742.704 1566.95,692.799 1567.51,707.665 1568.07,674.145 1568.63,675.03 1569.19,691.961 1569.75,675.965 1570.31,658.095 1570.87,661.936 1571.43,630.808 1571.99,600.377 1572.55,602.786 1573.1,591.302 1573.66,581.764 1574.22,601.683 1574.78,604.934 1575.34,591.515 1575.9,582.197 1576.46,587.048 1577.02,562.299 1577.58,570.768 1578.14,595.219 1578.7,601.765 1579.26,573.309 1579.82,581.093 1580.37,615.828 1580.93,617.789 1581.49,623 1582.05,593.935 1582.61,630.258 1583.17,662.458 1583.73,662.353 1584.29,679.278 1584.85,693.084 1585.41,661.313 1585.97,661.943 1586.53,629.715 1587.09,617.418 1587.65,653.539 1588.2,673.11 1588.76,676.48 1589.32,660.346 1589.88,681.165 1590.44,647.242 1591,648.343 1591.56,618.838 1592.12,641.974 1592.68,627.974 1593.24,662.317 1593.8,664.447 1594.36,663.327 1594.92,665.812 1595.47,681.526 1596.03,683.26 1596.59,668.374 1597.15,654.75 1597.71,705.857 1598.27,750.995 1598.83,762.664 1599.39,773.827 1599.95,768.881 1600.51,783.987 1601.07,777.289 1601.63,771.134 1602.19,750.804 1602.74,776.612 1603.3,769.887 1603.86,796.044 1604.42,775.718 1604.98,772.8 1605.54,752.63 1606.1,780.719 1606.66,759.21 1607.22,803.638 1607.78,777.1 1608.34,753.919 1608.9,783.305 1609.46,794.974 1610.02,757.554 1610.57,805.623 1611.13,766.852 1611.69,764.761 1612.25,732.156 1612.81,749.358 1613.37,713.861 1613.93,677.818 1614.49,647.171 1615.05,681.874 1615.61,696.692 1616.17,679.341 1616.73,677.851 1617.29,660.768 1617.84,646.085 1618.4,664.105 1618.96,684.211 1619.52,685.487 1620.08,683.896 1620.64,665.702 1621.2,633.935 1621.76,633.478 1622.32,634.641 1622.88,587.805 1623.44,556.087 1624,544.253 1624.56,520.287 1625.11,496.94 1625.67,488.786 1626.23,514.907 1626.79,523.461 1627.35,484.631 1627.91,495.28 1628.47,523.054 1629.03,547.683 1629.59,574.258 1630.15,579.121 1630.71,554.599 1631.27,562.771 1631.83,585.783 1632.39,591.797 1632.94,612.8 1633.5,628.388 1634.06,649.406 1634.62,681.524 1635.18,716.207 1635.74,700.853 1636.3,747.241 1636.86,732.565 1637.42,728.486 1637.98,773.58 1638.54,787.197 1639.1,813.078 1639.66,790.377 1640.21,816.41 1640.77,810.753 1641.33,803.615 1641.89,813.306 1642.45,822.662 1643.01,783.299 1643.57,777.44 1644.13,773.92 1644.69,800.367 1645.25,811.174 1645.81,789.815 1646.37,799.577 1646.93,809.621 1647.48,788.433 1648.04,799.777 1648.6,795.834 1649.16,755.513 1649.72,750.393 1650.28,715.077 1650.84,681.884 1651.4,679.381 1651.96,664.257 1652.52,631.926 1653.08,619.678 1653.64,639.329 1654.2,645.346 1654.76,680.477 1655.31,679.703 1655.87,727.081 1656.43,759.456 1656.99,771.997 1657.55,784.557 1658.11,811.783 1658.67,806.232 1659.23,797.631 1659.79,804.563 1660.35,779.965 1660.91,772.353 1661.47,783.791 1662.03,776.564 1662.58,767.609 1663.14,764.929 1663.7,714.002 1664.26,741.678 1664.82,753.138 1665.38,733.363 1665.94,731.683 1666.5,715.53 1667.06,744.096 1667.62,726.726 1668.18,722.333 1668.74,705.935 1669.3,708.7 1669.85,725.446 1670.41,738.692 1670.97,722.072 1671.53,686.142 1672.09,701.208 1672.65,647.913 1673.21,666.473 1673.77,668.388 1674.33,669.095 1674.89,665.049 1675.45,648.469 1676.01,651.178 1676.57,651.617 1677.13,671.862 1677.68,652.175 1678.24,672.724 1678.8,673.433 1679.36,670.334 1679.92,687.454 1680.48,685.365 1681.04,717.223 1681.6,761.841 1682.16,727.356 1682.72,708.411 1683.28,740.528 1683.84,754.892 1684.4,783.342 1684.95,763.919 1685.51,788.591 1686.07,781.924 1686.63,792.453 1687.19,770.682 1687.75,749.195 1688.31,748.11 1688.87,727.819 1689.43,776.948 1689.99,789.412 1690.55,770.799 1691.11,767.025 1691.67,745.573 1692.23,713.269 1692.78,699.642 1693.34,680.853 1693.9,684.325 1694.46,668.658 1695.02,623.75 1695.58,608.82 1696.14,645.9 1696.7,645.553 1697.26,663.825 1697.82,666.597 1698.38,670.102 1698.94,700.849 1699.5,685.126 1700.05,684.606 1700.61,652.708 1701.17,688.788 1701.73,704.57 1702.29,720.435 1702.85,686.668 1703.41,701.629 1703.97,717.058 1704.53,730.279 1705.09,727.485 1705.65,709.104 1706.21,741.625 1706.77,741.5 1707.32,687.916 1707.88,687.934 1708.44,656.738 1709,677.151 1709.56,691.867 1710.12,644.496 1710.68,662.969 1711.24,616.078 1711.8,585.738 1712.36,604.116 1712.92,610.532 1713.48,615.202 1714.04,617.601 1714.6,604.271 1715.15,608.569 1715.71,624.552 1716.27,642.044 1716.83,626.024 1717.39,612.001 1717.95,616.283 1718.51,588.552 1719.07,563.509 1719.63,602.323 1720.19,608.169 1720.75,612.697 1721.31,615.41 1721.87,617.278 1722.42,615.423 1722.98,617.574 1723.54,636.241 1724.1,637.585 1724.66,641.252 1725.22,643.198 1725.78,645.392 1726.34,648.04 1726.9,652.742 1727.46,648.872 1728.02,650.907 1728.58,650.435 1729.14,632.899 1729.69,636.697 1730.25,591.564 1730.81,598.766 1731.37,602.013 1731.93,638.75 1732.49,622.681 1733.05,610.195 1733.61,595.596 1734.17,568.168 1734.73,608.827 1735.29,614.704 1735.85,636.125 1736.41,618.641 1736.97,605.474 1737.52,610.842 1738.08,594.834 1738.64,587.178 1739.2,626.111 1739.76,661.181 1740.32,631.86 1740.88,635.34 1741.44,639.591 1742,641.389 1742.56,662.305 1743.12,666.484 1743.68,681.793 1744.24,696.234 1744.79,757.288 1745.35,752.347 1745.91,765.227 1746.47,763.146 1747.03,745.644 1747.59,739.741 1748.15,691.421 1748.71,705.192 1749.27,706.353 1749.83,722.946 1750.39,768.627 1750.95,746.49 1751.51,759.126 1752.06,770.529 1752.62,801.321 1753.18,776.241 1753.74,754.625 1754.3,749.312 1754.86,713.401 1755.42,727.277 1755.98,740.755 1756.54,771.029 1757.1,766.143 1757.66,760.199 1758.22,752.048 1758.78,729.631 1759.34,709.956 1759.89,738.79 1760.45,736.49 1761.01,751.462 1761.57,735.108 1762.13,748.344 1762.69,727.938 1763.25,727.993 1763.81,692.551 1764.37,677.862 1764.93,674.134 1765.49,691.664 1766.05,657.36 1766.61,659.548 1767.16,644.469 1767.72,678.885 1768.28,677.678 1768.84,677.695 1769.4,694.934 1769.96,677.052 1770.52,693.369 1771.08,694.093 1771.64,676.766 1772.2,692.201 1772.76,676.907 1773.32,694.015 1773.88,662.476 1774.43,696.75 1774.99,646.412 1775.55,632.465 1776.11,589.013 1776.67,593.366 1777.23,645.055 1777.79,628.433 1778.35,601.422 1778.91,636.461 1779.47,653.717 1780.03,653.43 1780.59,686.389 1781.15,687.644 1781.71,688.654 1782.26,688.735 1782.82,671.347 1783.38,669.121 1783.94,734.105 1784.5,730.842 1785.06,726.758 1785.62,758.394 1786.18,722.74 1786.74,722.164 1787.3,734.577 1787.86,732.026 1788.42,745.003 1788.98,745.426 1789.53,709.23 1790.09,711.505 1790.65,710.837 1791.21,694.791 1791.77,711.201 1792.33,713.391 1792.89,727.985 1793.45,757.016 1794.01,736.808 1794.57,734.441 1795.13,748.645 1795.69,744.957 1796.25,725.755 1796.8,692.787 1797.36,660.553 1797.92,675.903 1798.48,693.348 1799.04,692.985 1799.6,643.608 1800.16,646.8 1800.72,680.814 1801.28,697.218 1801.84,711.479 1802.4,695.187 1802.96,663.379 1803.52,649.743 1804.08,649.492 1804.63,655.07 1805.19,621.342 1805.75,657.844 1806.31,660.234 1806.87,675.991 1807.43,645.015 1807.99,647.409 1808.55,663.766 1809.11,666.572 1809.67,653.6 1810.23,688.819 1810.79,705.454 1811.35,671.481 1811.9,606.808 1812.46,595.563 1813.02,615.442 1813.58,621.451 1814.14,640.435 1814.7,642.767 1815.26,641.987 1815.82,627.606 1816.38,615.584 1816.94,649.451 1817.5,652.541 1818.06,655.739 1818.62,674.081 1819.18,691.567 1819.73,724.868 1820.29,723.714 1820.85,751.56 1821.41,763.517 1821.97,774.25 1822.53,816.143 1823.09,796.386 1823.65,806.629 1824.21,782.012 1824.77,824.083 1825.33,866.396 1825.89,855.808 1826.45,812.846 1827,774.08 1827.56,817.77 1828.12,792.97 1828.68,758.292 1829.24,752.976 1829.8,717.735 1830.36,713.795 1830.92,728.064 1831.48,712.295 1832.04,723.862 1832.6,770.926 1833.16,749.39 1833.72,778.356 1834.27,757.664 1834.83,771.583 1835.39,767.229 1835.95,749.41 1836.51,746.982 1837.07,745.338 1837.63,725.818 1838.19,738.465 \"/>\n<path clip-path=\"url(#clip483)\" d=\"M720.247 692.423 L720.806 692.423 L721.365 692.423 L721.924 692.423 L722.484 692.423 L723.043 692.423 L723.602 692.423 L724.161 692.423 L724.721 692.423 L725.28 692.423 L725.839 692.423 L726.398 692.423 L726.958 692.423 L727.517 692.423 L728.076 692.423 L728.635 692.423 L729.195 692.423 L729.754 692.423 L730.313 692.423 L730.872 692.423 L731.432 692.423 L731.991 692.423 L732.55 692.423 L733.109 692.423 L733.669 692.423 L734.228 692.423 L734.787 692.423 L735.346 692.423 L735.906 692.423 L736.465 692.423 L737.024 692.423 L737.583 692.423 L738.143 692.423 L738.702 692.423 L739.261 692.423 L739.82 692.423 L740.38 692.423 L740.939 692.423 L741.498 692.423 L742.057 692.423 L742.617 692.423 L743.176 692.423 L743.735 692.423 L744.294 692.423 L744.854 692.423 L745.413 692.423 L745.972 692.423 L746.531 692.423 L747.091 692.423 L747.65 692.423 L748.209 692.423 L748.768 692.423 L749.328 692.423 L749.887 692.423 L750.446 692.423 L751.005 692.423 L751.565 692.423 L752.124 692.423 L752.683 692.423 L753.242 692.423 L753.802 692.423 L754.361 692.423 L754.92 692.423 L755.479 692.423 L756.039 692.423 L756.598 692.423 L757.157 692.423 L757.716 692.423 L758.276 692.423 L758.835 692.423 L759.394 692.423 L759.953 692.423 L760.513 692.423 L761.072 692.423 L761.631 692.423 L762.19 692.423 L762.75 692.423 L763.309 692.423 L763.868 692.423 L764.427 692.423 L764.987 692.423 L765.546 692.423 L766.105 692.423 L766.664 692.423 L767.224 692.423 L767.783 692.423 L768.342 692.423 L768.901 692.423 L769.461 692.423 L770.02 692.423 L770.579 692.423 L771.138 692.423 L771.698 692.423 L772.257 692.423 L772.816 692.423 L773.375 692.423 L773.935 692.423 L774.494 692.423 L775.053 692.423 L775.612 692.423 L776.172 692.423 L776.731 692.423 L777.29 692.423 L777.849 692.423 L778.409 692.423 L778.968 692.423 L779.527 692.423 L780.086 692.423 L780.646 692.423 L781.205 692.423 L781.764 692.423 L782.323 692.423 L782.883 692.423 L783.442 692.423 L784.001 692.423 L784.56 692.423 L785.12 692.423 L785.679 692.423 L786.238 692.423 L786.797 692.423 L787.357 692.423 L787.916 692.423 L788.475 692.423 L789.034 692.423 L789.594 692.423 L790.153 692.423 L790.712 692.423 L791.271 692.423 L791.831 692.423 L792.39 692.423 L792.949 692.423 L793.508 692.423 L794.068 692.423 L794.627 692.423 L795.186 692.423 L795.745 692.423 L796.305 692.423 L796.864 692.423 L797.423 692.423 L797.982 692.423 L798.542 692.423 L799.101 692.423 L799.66 692.423 L800.219 692.423 L800.779 692.423 L801.338 692.423 L801.897 692.423 L802.456 692.423 L803.016 692.423 L803.575 692.423 L804.134 692.423 L804.693 692.423 L805.253 692.423 L805.812 692.423 L806.371 692.423 L806.931 692.423 L807.49 692.423 L808.049 692.423 L808.608 692.423 L809.168 692.423 L809.727 692.423 L810.286 692.423 L810.845 692.423 L811.405 692.423 L811.964 692.423 L812.523 692.423 L813.082 692.423 L813.642 692.423 L814.201 692.423 L814.76 692.423 L815.319 692.423 L815.879 692.423 L816.438 692.423 L816.997 692.423 L817.556 692.423 L818.116 692.423 L818.675 692.423 L819.234 692.423 L819.793 692.423 L820.353 692.423 L820.912 692.423 L821.471 692.423 L822.03 692.423 L822.59 692.423 L823.149 692.423 L823.708 692.423 L824.267 692.423 L824.827 692.423 L825.386 692.423 L825.945 692.423 L826.504 692.423 L827.064 692.423 L827.623 692.423 L828.182 692.423 L828.741 692.423 L829.301 692.423 L829.86 692.423 L830.419 692.423 L830.978 692.423 L831.538 692.423 L832.097 692.423 L832.656 692.423 L833.215 692.423 L833.775 692.423 L834.334 692.423 L834.893 692.423 L835.452 692.423 L836.012 692.423 L836.571 692.423 L837.13 692.423 L837.689 692.423 L838.249 692.423 L838.808 692.423 L839.367 692.423 L839.926 692.423 L840.486 692.423 L841.045 692.423 L841.604 692.423 L842.163 692.423 L842.723 692.423 L843.282 692.423 L843.841 692.423 L844.4 692.423 L844.96 692.423 L845.519 692.423 L846.078 692.423 L846.637 692.423 L847.197 692.423 L847.756 692.423 L848.315 692.423 L848.874 692.423 L849.434 692.423 L849.993 692.423 L850.552 692.423 L851.111 692.423 L851.671 692.423 L852.23 692.423 L852.789 692.423 L853.348 692.423 L853.908 692.423 L854.467 692.423 L855.026 692.423 L855.585 692.423 L856.145 692.423 L856.704 692.423 L857.263 692.423 L857.822 692.423 L858.382 692.423 L858.941 692.423 L859.5 692.423 L860.059 692.423 L860.619 692.423 L861.178 692.423 L861.737 692.423 L862.296 692.423 L862.856 692.423 L863.415 692.423 L863.974 692.423 L864.533 692.423 L865.093 692.423 L865.652 692.423 L866.211 692.423 L866.77 692.423 L867.33 692.423 L867.889 692.423 L868.448 692.423 L869.007 692.423 L869.567 692.423 L870.126 692.423 L870.685 692.423 L871.244 692.423 L871.804 692.423 L872.363 692.423 L872.922 692.423 L873.481 692.423 L874.041 692.423 L874.6 692.423 L875.159 692.423 L875.718 692.423 L876.278 692.423 L876.837 692.423 L877.396 692.423 L877.955 692.423 L878.515 692.423 L879.074 692.423 L879.633 692.423 L880.192 692.423 L880.752 692.423 L881.311 692.423 L881.87 692.423 L882.429 692.423 L882.989 692.423 L883.548 692.423 L884.107 692.423 L884.666 692.423 L885.226 692.423 L885.785 692.423 L886.344 692.423 L886.903 692.423 L887.463 692.423 L888.022 692.423 L888.581 692.423 L889.14 692.423 L889.7 692.423 L890.259 692.423 L890.818 692.423 L891.377 692.423 L891.937 692.423 L892.496 692.423 L893.055 692.423 L893.614 692.423 L894.174 692.423 L894.733 692.423 L895.292 692.423 L895.851 692.423 L896.411 692.423 L896.97 692.423 L897.529 692.423 L898.088 692.423 L898.648 692.423 L899.207 692.423 L899.766 692.423 L900.325 692.423 L900.885 692.423 L901.444 692.423 L902.003 692.423 L902.562 692.423 L903.122 692.423 L903.681 692.423 L904.24 692.423 L904.799 692.423 L905.359 692.423 L905.918 692.423 L906.477 692.423 L907.036 692.423 L907.596 692.423 L908.155 692.423 L908.714 692.423 L909.273 692.423 L909.833 692.423 L910.392 692.423 L910.951 692.423 L911.51 692.423 L912.07 692.423 L912.629 692.423 L913.188 692.423 L913.747 692.423 L914.307 692.423 L914.866 692.423 L915.425 692.423 L915.984 692.423 L916.544 692.423 L917.103 692.423 L917.662 692.423 L918.221 692.423 L918.781 692.423 L919.34 692.423 L919.899 692.423 L920.458 692.423 L921.018 692.423 L921.577 692.423 L922.136 692.423 L922.695 692.423 L923.255 692.423 L923.814 692.423 L924.373 692.423 L924.932 692.423 L925.492 692.423 L926.051 692.423 L926.61 692.423 L927.169 692.423 L927.729 692.423 L928.288 692.423 L928.847 692.423 L929.406 692.423 L929.966 692.423 L930.525 692.423 L931.084 692.423 L931.644 692.423 L932.203 692.423 L932.762 692.423 L933.321 692.423 L933.881 692.423 L934.44 692.423 L934.999 692.423 L935.558 692.423 L936.118 692.423 L936.677 692.423 L937.236 692.423 L937.795 692.423 L938.355 692.423 L938.914 692.423 L939.473 692.423 L940.032 692.423 L940.592 692.423 L941.151 692.423 L941.71 692.423 L942.269 692.423 L942.829 692.423 L943.388 692.423 L943.947 692.423 L944.506 692.423 L945.066 692.423 L945.625 692.423 L946.184 692.423 L946.743 692.423 L947.303 692.423 L947.862 692.423 L948.421 692.423 L948.98 692.423 L949.54 692.423 L950.099 692.423 L950.658 692.423 L951.217 692.423 L951.777 692.423 L952.336 692.423 L952.895 692.423 L953.454 692.423 L954.014 692.423 L954.573 692.423 L955.132 692.423 L955.691 692.423 L956.251 692.423 L956.81 692.423 L957.369 692.423 L957.928 692.423 L958.488 692.423 L959.047 692.423 L959.606 692.423 L960.165 692.423 L960.725 692.423 L961.284 692.423 L961.843 692.423 L962.402 692.423 L962.962 692.423 L963.521 692.423 L964.08 692.423 L964.639 692.423 L965.199 692.423 L965.758 692.423 L966.317 692.423 L966.876 692.423 L967.436 692.423 L967.995 692.423 L968.554 692.423 L969.113 692.423 L969.673 692.423 L970.232 692.423 L970.791 692.423 L971.35 692.423 L971.91 692.423 L972.469 692.423 L973.028 692.423 L973.587 692.423 L974.147 692.423 L974.706 692.423 L975.265 692.423 L975.824 692.423 L976.384 692.423 L976.943 692.423 L977.502 692.423 L978.061 692.423 L978.621 692.423 L979.18 692.423 L979.739 692.423 L980.298 692.423 L980.858 692.423 L981.417 692.423 L981.976 692.423 L982.535 692.423 L983.095 692.423 L983.654 692.423 L984.213 692.423 L984.772 692.423 L985.332 692.423 L985.891 692.423 L986.45 692.423 L987.009 692.423 L987.569 692.423 L988.128 692.423 L988.687 692.423 L989.246 692.423 L989.806 692.423 L990.365 692.423 L990.924 692.423 L991.483 692.423 L992.043 692.423 L992.602 692.423 L993.161 692.423 L993.72 692.423 L994.28 692.423 L994.839 692.423 L995.398 692.423 L995.957 692.423 L996.517 692.423 L997.076 692.423 L997.635 692.423 L998.194 692.423 L998.754 692.423 L999.313 692.423 L999.872 692.423 L1000.43 692.423 L1000.99 692.423 L1001.55 692.423 L1002.11 692.423 L1002.67 692.423 L1003.23 692.423 L1003.79 692.423 L1004.35 692.423 L1004.91 692.423 L1005.46 692.423 L1006.02 692.423 L1006.58 692.423 L1007.14 692.423 L1007.7 692.423 L1008.26 692.423 L1008.82 692.423 L1009.38 692.423 L1009.94 692.423 L1010.5 692.423 L1011.06 692.423 L1011.62 692.423 L1012.18 692.423 L1012.73 692.423 L1013.29 692.423 L1013.85 692.423 L1014.41 692.423 L1014.97 692.423 L1015.53 692.423 L1016.09 692.423 L1016.65 692.423 L1017.21 692.423 L1017.77 692.423 L1018.33 692.423 L1018.89 692.423 L1019.45 692.423 L1020.01 692.423 L1020.56 692.423 L1021.12 692.423 L1021.68 692.423 L1022.24 692.423 L1022.8 692.423 L1023.36 692.423 L1023.92 692.423 L1024.48 692.423 L1025.04 692.423 L1025.6 692.423 L1026.16 692.423 L1026.72 692.423 L1027.28 692.423 L1027.83 692.423 L1028.39 692.423 L1028.95 692.423 L1029.51 692.423 L1030.07 692.423 L1030.63 692.423 L1031.19 692.423 L1031.75 692.423 L1032.31 692.423 L1032.87 692.423 L1033.43 692.423 L1033.99 692.423 L1034.55 692.423 L1035.1 692.423 L1035.66 692.423 L1036.22 692.423 L1036.78 692.423 L1037.34 692.423 L1037.9 692.423 L1038.46 692.423 L1039.02 692.423 L1039.58 692.423 L1040.14 692.423 L1040.7 692.423 L1041.26 692.423 L1041.82 692.423 L1042.38 692.423 L1042.93 692.423 L1043.49 692.423 L1044.05 692.423 L1044.61 692.423 L1045.17 692.423 L1045.73 692.423 L1046.29 692.423 L1046.85 692.423 L1047.41 692.423 L1047.97 692.423 L1048.53 692.423 L1049.09 692.423 L1049.65 692.423 L1050.2 692.423 L1050.76 692.423 L1051.32 692.423 L1051.88 692.423 L1052.44 692.423 L1053 692.423 L1053.56 692.423 L1054.12 692.423 L1054.68 692.423 L1055.24 692.423 L1055.8 692.423 L1056.36 692.423 L1056.92 692.423 L1057.48 692.423 L1058.03 692.423 L1058.59 692.423 L1059.15 692.423 L1059.71 692.423 L1060.27 692.423 L1060.83 692.423 L1061.39 692.423 L1061.95 692.423 L1062.51 692.423 L1063.07 692.423 L1063.63 692.423 L1064.19 692.423 L1064.75 692.423 L1065.3 692.423 L1065.86 692.423 L1066.42 692.423 L1066.98 692.423 L1067.54 692.423 L1068.1 692.423 L1068.66 692.423 L1069.22 692.423 L1069.78 692.423 L1070.34 692.423 L1070.9 692.423 L1071.46 692.423 L1072.02 692.423 L1072.57 692.423 L1073.13 692.423 L1073.69 692.423 L1074.25 692.423 L1074.81 692.423 L1075.37 692.423 L1075.93 692.423 L1076.49 692.423 L1077.05 692.423 L1077.61 692.423 L1078.17 692.423 L1078.73 692.423 L1079.29 692.423 L1079.85 692.423 L1080.4 692.423 L1080.96 692.423 L1081.52 692.423 L1082.08 692.423 L1082.64 692.423 L1083.2 692.423 L1083.76 692.423 L1084.32 692.423 L1084.88 692.423 L1085.44 692.423 L1086 692.423 L1086.56 692.423 L1087.12 692.423 L1087.67 692.423 L1088.23 692.423 L1088.79 692.423 L1089.35 692.423 L1089.91 692.423 L1090.47 692.423 L1091.03 692.423 L1091.59 692.423 L1092.15 692.423 L1092.71 692.423 L1093.27 692.423 L1093.83 692.423 L1094.39 692.423 L1094.94 692.423 L1095.5 692.423 L1096.06 692.423 L1096.62 692.423 L1097.18 692.423 L1097.74 692.423 L1098.3 692.423 L1098.86 692.423 L1099.42 692.423 L1099.98 692.423 L1100.54 692.423 L1101.1 692.423 L1101.66 692.423 L1102.22 692.423 L1102.77 692.423 L1103.33 692.423 L1103.89 692.423 L1104.45 692.423 L1105.01 692.423 L1105.57 692.423 L1106.13 692.423 L1106.69 692.423 L1107.25 692.423 L1107.81 692.423 L1108.37 692.423 L1108.93 692.423 L1109.49 692.423 L1110.04 692.423 L1110.6 692.423 L1111.16 692.423 L1111.72 692.423 L1112.28 692.423 L1112.84 692.423 L1113.4 692.423 L1113.96 692.423 L1114.52 692.423 L1115.08 692.423 L1115.64 692.423 L1116.2 692.423 L1116.76 692.423 L1117.31 692.423 L1117.87 692.423 L1118.43 692.423 L1118.99 692.423 L1119.55 692.423 L1120.11 692.423 L1120.67 692.423 L1121.23 692.423 L1121.79 692.423 L1122.35 692.423 L1122.91 692.423 L1123.47 692.423 L1124.03 692.423 L1124.59 692.423 L1125.14 692.423 L1125.7 692.423 L1126.26 692.423 L1126.82 692.423 L1127.38 692.423 L1127.94 692.423 L1128.5 692.423 L1129.06 692.423 L1129.62 692.423 L1130.18 692.423 L1130.74 692.423 L1131.3 692.423 L1131.86 692.423 L1132.41 692.423 L1132.97 692.423 L1133.53 692.423 L1134.09 692.423 L1134.65 692.423 L1135.21 692.423 L1135.77 692.423 L1136.33 692.423 L1136.89 692.423 L1137.45 692.423 L1138.01 692.423 L1138.57 692.423 L1139.13 692.423 L1139.68 692.423 L1140.24 692.423 L1140.8 692.423 L1141.36 692.423 L1141.92 692.423 L1142.48 692.423 L1143.04 692.423 L1143.6 692.423 L1144.16 692.423 L1144.72 692.423 L1145.28 692.423 L1145.84 692.423 L1146.4 692.423 L1146.96 692.423 L1147.51 692.423 L1148.07 692.423 L1148.63 692.423 L1149.19 692.423 L1149.75 692.423 L1150.31 692.423 L1150.87 692.423 L1151.43 692.423 L1151.99 692.423 L1152.55 692.423 L1153.11 692.423 L1153.67 692.423 L1154.23 692.423 L1154.78 692.423 L1155.34 692.423 L1155.9 692.423 L1156.46 692.423 L1157.02 692.423 L1157.58 692.423 L1158.14 692.423 L1158.7 692.423 L1159.26 692.423 L1159.82 692.423 L1160.38 692.423 L1160.94 692.423 L1161.5 692.423 L1162.05 692.423 L1162.61 692.423 L1163.17 692.423 L1163.73 692.423 L1164.29 692.423 L1164.85 692.423 L1165.41 692.423 L1165.97 692.423 L1166.53 692.423 L1167.09 692.423 L1167.65 692.423 L1168.21 692.423 L1168.77 692.423 L1169.33 692.423 L1169.88 692.423 L1170.44 692.423 L1171 692.423 L1171.56 692.423 L1172.12 692.423 L1172.68 692.423 L1173.24 692.423 L1173.8 692.423 L1174.36 692.423 L1174.92 692.423 L1175.48 692.423 L1176.04 692.423 L1176.6 692.423 L1177.15 692.423 L1177.71 692.423 L1178.27 692.423 L1178.83 692.423 L1179.39 692.423 L1179.95 692.423 L1180.51 692.423 L1181.07 692.423 L1181.63 692.423 L1182.19 692.423 L1182.75 692.423 L1183.31 692.423 L1183.87 692.423 L1184.43 692.423 L1184.98 692.423 L1185.54 692.423 L1186.1 692.423 L1186.66 692.423 L1187.22 692.423 L1187.78 692.423 L1188.34 692.423 L1188.9 692.423 L1189.46 692.423 L1190.02 692.423 L1190.58 692.423 L1191.14 692.423 L1191.7 692.423 L1192.25 692.423 L1192.81 692.423 L1193.37 692.423 L1193.93 692.423 L1194.49 692.423 L1195.05 692.423 L1195.61 692.423 L1196.17 692.423 L1196.73 692.423 L1197.29 692.423 L1197.85 692.423 L1198.41 692.423 L1198.97 692.423 L1199.52 692.423 L1200.08 692.423 L1200.64 692.423 L1201.2 692.423 L1201.76 692.423 L1202.32 692.423 L1202.88 692.423 L1203.44 692.423 L1204 692.423 L1204.56 692.423 L1205.12 692.423 L1205.68 692.423 L1206.24 692.423 L1206.8 692.423 L1207.35 692.423 L1207.91 692.423 L1208.47 692.423 L1209.03 692.423 L1209.59 692.423 L1210.15 692.423 L1210.71 692.423 L1211.27 692.423 L1211.83 692.423 L1212.39 692.423 L1212.95 692.423 L1213.51 692.423 L1214.07 692.423 L1214.62 692.423 L1215.18 692.423 L1215.74 692.423 L1216.3 692.423 L1216.86 692.423 L1217.42 692.423 L1217.98 692.423 L1218.54 692.423 L1219.1 692.423 L1219.66 692.423 L1220.22 692.423 L1220.78 692.423 L1221.34 692.423 L1221.89 692.423 L1222.45 692.423 L1223.01 692.423 L1223.57 692.423 L1224.13 692.423 L1224.69 692.423 L1225.25 692.423 L1225.81 692.423 L1226.37 692.423 L1226.93 692.423 L1227.49 692.423 L1228.05 692.423 L1228.61 692.423 L1229.17 692.423 L1229.72 692.423 L1230.28 692.423 L1230.84 692.423 L1231.4 692.423 L1231.96 692.423 L1232.52 692.423 L1233.08 692.423 L1233.64 692.423 L1234.2 692.423 L1234.76 692.423 L1235.32 692.423 L1235.88 692.423 L1236.44 692.423 L1236.99 692.423 L1237.55 692.423 L1238.11 692.423 L1238.67 692.423 L1239.23 692.423 L1239.79 692.423 L1240.35 692.423 L1240.91 692.423 L1241.47 692.423 L1242.03 692.423 L1242.59 692.423 L1243.15 692.423 L1243.71 692.423 L1244.26 692.423 L1244.82 692.423 L1245.38 692.423 L1245.94 692.423 L1246.5 692.423 L1247.06 692.423 L1247.62 692.423 L1248.18 692.423 L1248.74 692.423 L1249.3 692.423 L1249.86 692.423 L1250.42 692.423 L1250.98 692.423 L1251.54 692.423 L1252.09 692.423 L1252.65 692.423 L1253.21 692.423 L1253.77 692.423 L1254.33 692.423 L1254.89 692.423 L1255.45 692.423 L1256.01 692.423 L1256.57 692.423 L1257.13 692.423 L1257.69 692.423 L1258.25 692.423 L1258.81 692.423 L1259.36 692.423 L1259.92 692.423 L1260.48 692.423 L1261.04 692.423 L1261.6 692.423 L1262.16 692.423 L1262.72 692.423 L1263.28 692.423 L1263.84 692.423 L1264.4 692.423 L1264.96 692.423 L1265.52 692.423 L1266.08 692.423 L1266.63 692.423 L1267.19 692.423 L1267.75 692.423 L1268.31 692.423 L1268.87 692.423 L1269.43 692.423 L1269.99 692.423 L1270.55 692.423 L1271.11 692.423 L1271.67 692.423 L1272.23 692.423 L1272.79 692.423 L1273.35 692.423 L1273.91 692.423 L1274.46 692.423 L1275.02 692.423 L1275.58 692.423 L1276.14 692.423 L1276.7 692.423 L1277.26 692.423 L1277.82 692.423 L1278.38 692.423 L1278.94 692.423 L1279.5 692.423 L1280.06 692.423 L1280.62 692.423 L1281.18 692.423 L1281.73 692.423 L1282.29 692.423 L1282.85 692.423 L1283.41 692.423 L1283.97 692.423 L1284.53 692.423 L1285.09 692.423 L1285.65 692.423 L1286.21 692.423 L1286.77 692.423 L1287.33 692.423 L1287.89 692.423 L1288.45 692.423 L1289 692.423 L1289.56 692.423 L1290.12 692.423 L1290.68 692.423 L1291.24 692.423 L1291.8 692.423 L1292.36 692.423 L1292.92 692.423 L1293.48 692.423 L1294.04 692.423 L1294.6 692.423 L1295.16 692.423 L1295.72 692.423 L1296.28 692.423 L1296.83 692.423 L1297.39 692.423 L1297.95 692.423 L1298.51 692.423 L1299.07 692.423 L1299.63 692.423 L1300.19 692.423 L1300.75 692.423 L1301.31 692.423 L1301.87 692.423 L1302.43 692.423 L1302.99 692.423 L1303.55 692.423 L1304.1 692.423 L1304.66 692.423 L1305.22 692.423 L1305.78 692.423 L1306.34 692.423 L1306.9 692.423 L1307.46 692.423 L1308.02 692.423 L1308.58 692.423 L1309.14 692.423 L1309.7 692.423 L1310.26 692.423 L1310.82 692.423 L1311.38 692.423 L1311.93 692.423 L1312.49 692.423 L1313.05 692.423 L1313.61 692.423 L1314.17 692.423 L1314.73 692.423 L1315.29 692.423 L1315.85 692.423 L1316.41 692.423 L1316.97 692.423 L1317.53 692.423 L1318.09 692.423 L1318.65 692.423 L1319.2 692.423 L1319.76 692.423 L1320.32 692.423 L1320.88 692.423 L1321.44 692.423 L1322 692.423 L1322.56 692.423 L1323.12 692.423 L1323.68 692.423 L1324.24 692.423 L1324.8 692.423 L1325.36 692.423 L1325.92 692.423 L1326.47 692.423 L1327.03 692.423 L1327.59 692.423 L1328.15 692.423 L1328.71 692.423 L1329.27 692.423 L1329.83 692.423 L1330.39 692.423 L1330.95 692.423 L1331.51 692.423 L1332.07 692.423 L1332.63 692.423 L1333.19 692.423 L1333.75 692.423 L1334.3 692.423 L1334.86 692.423 L1335.42 692.423 L1335.98 692.423 L1336.54 692.423 L1337.1 692.423 L1337.66 692.423 L1338.22 692.423 L1338.78 692.423 L1339.34 692.423 L1339.9 692.423 L1340.46 692.423 L1341.02 692.423 L1341.57 692.423 L1342.13 692.423 L1342.69 692.423 L1343.25 692.423 L1343.81 692.423 L1344.37 692.423 L1344.93 692.423 L1345.49 692.423 L1346.05 692.423 L1346.61 692.423 L1347.17 692.423 L1347.73 692.423 L1348.29 692.423 L1348.84 692.423 L1349.4 692.423 L1349.96 692.423 L1350.52 692.423 L1351.08 692.423 L1351.64 692.423 L1352.2 692.423 L1352.76 692.423 L1353.32 692.423 L1353.88 692.423 L1354.44 692.423 L1355 692.423 L1355.56 692.423 L1356.12 692.423 L1356.67 692.423 L1357.23 692.423 L1357.79 692.423 L1358.35 692.423 L1358.91 692.423 L1359.47 692.423 L1360.03 692.423 L1360.59 692.423 L1361.15 692.423 L1361.71 692.423 L1362.27 692.423 L1362.83 692.423 L1363.39 692.423 L1363.94 692.423 L1364.5 692.423 L1365.06 692.423 L1365.62 692.423 L1366.18 692.423 L1366.74 692.423 L1367.3 692.423 L1367.86 692.423 L1368.42 692.423 L1368.98 692.423 L1369.54 692.423 L1370.1 692.423 L1370.66 692.423 L1371.21 692.423 L1371.77 692.423 L1372.33 692.423 L1372.89 692.423 L1373.45 692.423 L1374.01 692.423 L1374.57 692.423 L1375.13 692.423 L1375.69 692.423 L1376.25 692.423 L1376.81 692.423 L1377.37 692.423 L1377.93 692.423 L1378.49 692.423 L1379.04 692.423 L1379.6 692.423 L1380.16 692.423 L1380.72 692.423 L1381.28 692.423 L1381.84 692.423 L1382.4 692.423 L1382.96 692.423 L1383.52 692.423 L1384.08 692.423 L1384.64 692.423 L1385.2 692.423 L1385.76 692.423 L1386.31 692.423 L1386.87 692.423 L1387.43 692.423 L1387.99 692.423 L1388.55 692.423 L1389.11 692.423 L1389.67 692.423 L1390.23 692.423 L1390.79 692.423 L1391.35 692.423 L1391.91 692.423 L1392.47 692.423 L1393.03 692.423 L1393.58 692.423 L1394.14 692.423 L1394.7 692.423 L1395.26 692.423 L1395.82 692.423 L1396.38 692.423 L1396.94 692.423 L1397.5 692.423 L1398.06 692.423 L1398.62 692.423 L1399.18 692.423 L1399.74 692.423 L1400.3 692.423 L1400.86 692.423 L1401.41 692.423 L1401.97 692.423 L1402.53 692.423 L1403.09 692.423 L1403.65 692.423 L1404.21 692.423 L1404.77 692.423 L1405.33 692.423 L1405.89 692.423 L1406.45 692.423 L1407.01 692.423 L1407.57 692.423 L1408.13 692.423 L1408.68 692.423 L1409.24 692.423 L1409.8 692.423 L1410.36 692.423 L1410.92 692.423 L1411.48 692.423 L1412.04 692.423 L1412.6 692.423 L1413.16 692.423 L1413.72 692.423 L1414.28 692.423 L1414.84 692.423 L1415.4 692.423 L1415.95 692.423 L1416.51 692.423 L1417.07 692.423 L1417.63 692.423 L1418.19 692.423 L1418.75 692.423 L1419.31 692.423 L1419.87 692.423 L1420.43 692.423 L1420.99 692.423 L1421.55 692.423 L1422.11 692.423 L1422.67 692.423 L1423.23 692.423 L1423.78 692.423 L1424.34 692.423 L1424.9 692.423 L1425.46 692.423 L1426.02 692.423 L1426.58 692.423 L1427.14 692.423 L1427.7 692.423 L1428.26 692.423 L1428.82 692.423 L1429.38 692.423 L1429.94 692.423 L1430.5 692.423 L1431.05 692.423 L1431.61 692.423 L1432.17 692.423 L1432.73 692.423 L1433.29 692.423 L1433.85 692.423 L1434.41 692.423 L1434.97 692.423 L1435.53 692.423 L1436.09 692.423 L1436.65 692.423 L1437.21 692.423 L1437.77 692.423 L1438.33 692.423 L1438.88 692.423 L1439.44 692.423 L1440 692.423 L1440.56 692.423 L1441.12 692.423 L1441.68 692.423 L1442.24 692.423 L1442.8 692.423 L1443.36 692.423 L1443.92 692.423 L1444.48 692.423 L1445.04 692.423 L1445.6 692.423 L1446.15 692.423 L1446.71 692.423 L1447.27 692.423 L1447.83 692.423 L1448.39 692.423 L1448.95 692.423 L1449.51 692.423 L1450.07 692.423 L1450.63 692.423 L1451.19 692.423 L1451.75 692.423 L1452.31 692.423 L1452.87 692.423 L1453.42 692.423 L1453.98 692.423 L1454.54 692.423 L1455.1 692.423 L1455.66 692.423 L1456.22 692.423 L1456.78 692.423 L1457.34 692.423 L1457.9 692.423 L1458.46 692.423 L1459.02 692.423 L1459.58 692.423 L1460.14 692.423 L1460.7 692.423 L1461.25 692.423 L1461.81 692.423 L1462.37 692.423 L1462.93 692.423 L1463.49 692.423 L1464.05 692.423 L1464.61 692.423 L1465.17 692.423 L1465.73 692.423 L1466.29 692.423 L1466.85 692.423 L1467.41 692.423 L1467.97 692.423 L1468.52 692.423 L1469.08 692.423 L1469.64 692.423 L1470.2 692.423 L1470.76 692.423 L1471.32 692.423 L1471.88 692.423 L1472.44 692.423 L1473 692.423 L1473.56 692.423 L1474.12 692.423 L1474.68 692.423 L1475.24 692.423 L1475.79 692.423 L1476.35 692.423 L1476.91 692.423 L1477.47 692.423 L1478.03 692.423 L1478.59 692.423 L1479.15 692.423 L1479.71 692.423 L1480.27 692.423 L1480.83 692.423 L1481.39 692.423 L1481.95 692.423 L1482.51 692.423 L1483.07 692.423 L1483.62 692.423 L1484.18 692.423 L1484.74 692.423 L1485.3 692.423 L1485.86 692.423 L1486.42 692.423 L1486.98 692.423 L1487.54 692.423 L1488.1 692.423 L1488.66 692.423 L1489.22 692.423 L1489.78 692.423 L1490.34 692.423 L1490.89 692.423 L1491.45 692.423 L1492.01 692.423 L1492.57 692.423 L1493.13 692.423 L1493.69 692.423 L1494.25 692.423 L1494.81 692.423 L1495.37 692.423 L1495.93 692.423 L1496.49 692.423 L1497.05 692.423 L1497.61 692.423 L1498.16 692.423 L1498.72 692.423 L1499.28 692.423 L1499.84 692.423 L1500.4 692.423 L1500.96 692.423 L1501.52 692.423 L1502.08 692.423 L1502.64 692.423 L1503.2 692.423 L1503.76 692.423 L1504.32 692.423 L1504.88 692.423 L1505.44 692.423 L1505.99 692.423 L1506.55 692.423 L1507.11 692.423 L1507.67 692.423 L1508.23 692.423 L1508.79 692.423 L1509.35 692.423 L1509.91 692.423 L1510.47 692.423 L1511.03 692.423 L1511.59 692.423 L1512.15 692.423 L1512.71 692.423 L1513.26 692.423 L1513.82 692.423 L1514.38 692.423 L1514.94 692.423 L1515.5 692.423 L1516.06 692.423 L1516.62 692.423 L1517.18 692.423 L1517.74 692.423 L1518.3 692.423 L1518.86 692.423 L1519.42 692.423 L1519.98 692.423 L1520.53 692.423 L1521.09 692.423 L1521.65 692.423 L1522.21 692.423 L1522.77 692.423 L1523.33 692.423 L1523.89 692.423 L1524.45 692.423 L1525.01 692.423 L1525.57 692.423 L1526.13 692.423 L1526.69 692.423 L1527.25 692.423 L1527.81 692.423 L1528.36 692.423 L1528.92 692.423 L1529.48 692.423 L1530.04 692.423 L1530.6 692.423 L1531.16 692.423 L1531.72 692.423 L1532.28 692.423 L1532.84 692.423 L1533.4 692.423 L1533.96 692.423 L1534.52 692.423 L1535.08 692.423 L1535.63 692.423 L1536.19 692.423 L1536.75 692.423 L1537.31 692.423 L1537.87 692.423 L1538.43 692.423 L1538.99 692.423 L1539.55 692.423 L1540.11 692.423 L1540.67 692.423 L1541.23 692.423 L1541.79 692.423 L1542.35 692.423 L1542.9 692.423 L1543.46 692.423 L1544.02 692.423 L1544.58 692.423 L1545.14 692.423 L1545.7 692.423 L1546.26 692.423 L1546.82 692.423 L1547.38 692.423 L1547.94 692.423 L1548.5 692.423 L1549.06 692.423 L1549.62 692.423 L1550.18 692.423 L1550.73 692.423 L1551.29 692.423 L1551.85 692.423 L1552.41 692.423 L1552.97 692.423 L1553.53 692.423 L1554.09 692.423 L1554.65 692.423 L1555.21 692.423 L1555.77 692.423 L1556.33 692.423 L1556.89 692.423 L1557.45 692.423 L1558 692.423 L1558.56 692.423 L1559.12 692.423 L1559.68 692.423 L1560.24 692.423 L1560.8 692.423 L1561.36 692.423 L1561.92 692.423 L1562.48 692.423 L1563.04 692.423 L1563.6 692.423 L1564.16 692.423 L1564.72 692.423 L1565.28 692.423 L1565.83 692.423 L1566.39 692.423 L1566.95 692.423 L1567.51 692.423 L1568.07 692.423 L1568.63 692.423 L1569.19 692.423 L1569.75 692.423 L1570.31 692.423 L1570.87 692.423 L1571.43 692.423 L1571.99 692.423 L1572.55 692.423 L1573.1 692.423 L1573.66 692.423 L1574.22 692.423 L1574.78 692.423 L1575.34 692.423 L1575.9 692.423 L1576.46 692.423 L1577.02 692.423 L1577.58 692.423 L1578.14 692.423 L1578.7 692.423 L1579.26 692.423 L1579.82 692.423 L1580.37 692.423 L1580.93 692.423 L1581.49 692.423 L1582.05 692.423 L1582.61 692.423 L1583.17 692.423 L1583.73 692.423 L1584.29 692.423 L1584.85 692.423 L1585.41 692.423 L1585.97 692.423 L1586.53 692.423 L1587.09 692.423 L1587.65 692.423 L1588.2 692.423 L1588.76 692.423 L1589.32 692.423 L1589.88 692.423 L1590.44 692.423 L1591 692.423 L1591.56 692.423 L1592.12 692.423 L1592.68 692.423 L1593.24 692.423 L1593.8 692.423 L1594.36 692.423 L1594.92 692.423 L1595.47 692.423 L1596.03 692.423 L1596.59 692.423 L1597.15 692.423 L1597.71 692.423 L1598.27 692.423 L1598.83 692.423 L1599.39 692.423 L1599.95 692.423 L1600.51 692.423 L1601.07 692.423 L1601.63 692.423 L1602.19 692.423 L1602.74 692.423 L1603.3 692.423 L1603.86 692.423 L1604.42 692.423 L1604.98 692.423 L1605.54 692.423 L1606.1 692.423 L1606.66 692.423 L1607.22 692.423 L1607.78 692.423 L1608.34 692.423 L1608.9 692.423 L1609.46 692.423 L1610.02 692.423 L1610.57 692.423 L1611.13 692.423 L1611.69 692.423 L1612.25 692.423 L1612.81 692.423 L1613.37 692.423 L1613.93 692.423 L1614.49 692.423 L1615.05 692.423 L1615.61 692.423 L1616.17 692.423 L1616.73 692.423 L1617.29 692.423 L1617.84 692.423 L1618.4 692.423 L1618.96 692.423 L1619.52 692.423 L1620.08 692.423 L1620.64 692.423 L1621.2 692.423 L1621.76 692.423 L1622.32 692.423 L1622.88 692.423 L1623.44 692.423 L1624 692.423 L1624.56 692.423 L1625.11 692.423 L1625.67 692.423 L1626.23 692.423 L1626.79 692.423 L1627.35 692.423 L1627.91 692.423 L1628.47 692.423 L1629.03 692.423 L1629.59 692.423 L1630.15 692.423 L1630.71 692.423 L1631.27 692.423 L1631.83 692.423 L1632.39 692.423 L1632.94 692.423 L1633.5 692.423 L1634.06 692.423 L1634.62 692.423 L1635.18 692.423 L1635.74 692.423 L1636.3 692.423 L1636.86 692.423 L1637.42 692.423 L1637.98 692.423 L1638.54 692.423 L1639.1 692.423 L1639.66 692.423 L1640.21 692.423 L1640.77 692.423 L1641.33 692.423 L1641.89 692.423 L1642.45 692.423 L1643.01 692.423 L1643.57 692.423 L1644.13 692.423 L1644.69 692.423 L1645.25 692.423 L1645.81 692.423 L1646.37 692.423 L1646.93 692.423 L1647.48 692.423 L1648.04 692.423 L1648.6 692.423 L1649.16 692.423 L1649.72 692.423 L1650.28 692.423 L1650.84 692.423 L1651.4 692.423 L1651.96 692.423 L1652.52 692.423 L1653.08 692.423 L1653.64 692.423 L1654.2 692.423 L1654.76 692.423 L1655.31 692.423 L1655.87 692.423 L1656.43 692.423 L1656.99 692.423 L1657.55 692.423 L1658.11 692.423 L1658.67 692.423 L1659.23 692.423 L1659.79 692.423 L1660.35 692.423 L1660.91 692.423 L1661.47 692.423 L1662.03 692.423 L1662.58 692.423 L1663.14 692.423 L1663.7 692.423 L1664.26 692.423 L1664.82 692.423 L1665.38 692.423 L1665.94 692.423 L1666.5 692.423 L1667.06 692.423 L1667.62 692.423 L1668.18 692.423 L1668.74 692.423 L1669.3 692.423 L1669.85 692.423 L1670.41 692.423 L1670.97 692.423 L1671.53 692.423 L1672.09 692.423 L1672.65 692.423 L1673.21 692.423 L1673.77 692.423 L1674.33 692.423 L1674.89 692.423 L1675.45 692.423 L1676.01 692.423 L1676.57 692.423 L1677.13 692.423 L1677.68 692.423 L1678.24 692.423 L1678.8 692.423 L1679.36 692.423 L1679.92 692.423 L1680.48 692.423 L1681.04 692.423 L1681.6 692.423 L1682.16 692.423 L1682.72 692.423 L1683.28 692.423 L1683.84 692.423 L1684.4 692.423 L1684.95 692.423 L1685.51 692.423 L1686.07 692.423 L1686.63 692.423 L1687.19 692.423 L1687.75 692.423 L1688.31 692.423 L1688.87 692.423 L1689.43 692.423 L1689.99 692.423 L1690.55 692.423 L1691.11 692.423 L1691.67 692.423 L1692.23 692.423 L1692.78 692.423 L1693.34 692.423 L1693.9 692.423 L1694.46 692.423 L1695.02 692.423 L1695.58 692.423 L1696.14 692.423 L1696.7 692.423 L1697.26 692.423 L1697.82 692.423 L1698.38 692.423 L1698.94 692.423 L1699.5 692.423 L1700.05 692.423 L1700.61 692.423 L1701.17 692.423 L1701.73 692.423 L1702.29 692.423 L1702.85 692.423 L1703.41 692.423 L1703.97 692.423 L1704.53 692.423 L1705.09 692.423 L1705.65 692.423 L1706.21 692.423 L1706.77 692.423 L1707.32 692.423 L1707.88 692.423 L1708.44 692.423 L1709 692.423 L1709.56 692.423 L1710.12 692.423 L1710.68 692.423 L1711.24 692.423 L1711.8 692.423 L1712.36 692.423 L1712.92 692.423 L1713.48 692.423 L1714.04 692.423 L1714.6 692.423 L1715.15 692.423 L1715.71 692.423 L1716.27 692.423 L1716.83 692.423 L1717.39 692.423 L1717.95 692.423 L1718.51 692.423 L1719.07 692.423 L1719.63 692.423 L1720.19 692.423 L1720.75 692.423 L1721.31 692.423 L1721.87 692.423 L1722.42 692.423 L1722.98 692.423 L1723.54 692.423 L1724.1 692.423 L1724.66 692.423 L1725.22 692.423 L1725.78 692.423 L1726.34 692.423 L1726.9 692.423 L1727.46 692.423 L1728.02 692.423 L1728.58 692.423 L1729.14 692.423 L1729.69 692.423 L1730.25 692.423 L1730.81 692.423 L1731.37 692.423 L1731.93 692.423 L1732.49 692.423 L1733.05 692.423 L1733.61 692.423 L1734.17 692.423 L1734.73 692.423 L1735.29 692.423 L1735.85 692.423 L1736.41 692.423 L1736.97 692.423 L1737.52 692.423 L1738.08 692.423 L1738.64 692.423 L1739.2 692.423 L1739.76 692.423 L1740.32 692.423 L1740.88 692.423 L1741.44 692.423 L1742 692.423 L1742.56 692.423 L1743.12 692.423 L1743.68 692.423 L1744.24 692.423 L1744.79 692.423 L1745.35 692.423 L1745.91 692.423 L1746.47 692.423 L1747.03 692.423 L1747.59 692.423 L1748.15 692.423 L1748.71 692.423 L1749.27 692.423 L1749.83 692.423 L1750.39 692.423 L1750.95 692.423 L1751.51 692.423 L1752.06 692.423 L1752.62 692.423 L1753.18 692.423 L1753.74 692.423 L1754.3 692.423 L1754.86 692.423 L1755.42 692.423 L1755.98 692.423 L1756.54 692.423 L1757.1 692.423 L1757.66 692.423 L1758.22 692.423 L1758.78 692.423 L1759.34 692.423 L1759.89 692.423 L1760.45 692.423 L1761.01 692.423 L1761.57 692.423 L1762.13 692.423 L1762.69 692.423 L1763.25 692.423 L1763.81 692.423 L1764.37 692.423 L1764.93 692.423 L1765.49 692.423 L1766.05 692.423 L1766.61 692.423 L1767.16 692.423 L1767.72 692.423 L1768.28 692.423 L1768.84 692.423 L1769.4 692.423 L1769.96 692.423 L1770.52 692.423 L1771.08 692.423 L1771.64 692.423 L1772.2 692.423 L1772.76 692.423 L1773.32 692.423 L1773.88 692.423 L1774.43 692.423 L1774.99 692.423 L1775.55 692.423 L1776.11 692.423 L1776.67 692.423 L1777.23 692.423 L1777.79 692.423 L1778.35 692.423 L1778.91 692.423 L1779.47 692.423 L1780.03 692.423 L1780.59 692.423 L1781.15 692.423 L1781.71 692.423 L1782.26 692.423 L1782.82 692.423 L1783.38 692.423 L1783.94 692.423 L1784.5 692.423 L1785.06 692.423 L1785.62 692.423 L1786.18 692.423 L1786.74 692.423 L1787.3 692.423 L1787.86 692.423 L1788.42 692.423 L1788.98 692.423 L1789.53 692.423 L1790.09 692.423 L1790.65 692.423 L1791.21 692.423 L1791.77 692.423 L1792.33 692.423 L1792.89 692.423 L1793.45 692.423 L1794.01 692.423 L1794.57 692.423 L1795.13 692.423 L1795.69 692.423 L1796.25 692.423 L1796.8 692.423 L1797.36 692.423 L1797.92 692.423 L1798.48 692.423 L1799.04 692.423 L1799.6 692.423 L1800.16 692.423 L1800.72 692.423 L1801.28 692.423 L1801.84 692.423 L1802.4 692.423 L1802.96 692.423 L1803.52 692.423 L1804.08 692.423 L1804.63 692.423 L1805.19 692.423 L1805.75 692.423 L1806.31 692.423 L1806.87 692.423 L1807.43 692.423 L1807.99 692.423 L1808.55 692.423 L1809.11 692.423 L1809.67 692.423 L1810.23 692.423 L1810.79 692.423 L1811.35 692.423 L1811.9 692.423 L1812.46 692.423 L1813.02 692.423 L1813.58 692.423 L1814.14 692.423 L1814.7 692.423 L1815.26 692.423 L1815.82 692.423 L1816.38 692.423 L1816.94 692.423 L1817.5 692.423 L1818.06 692.423 L1818.62 692.423 L1819.18 692.423 L1819.73 692.423 L1820.29 692.423 L1820.85 692.423 L1821.41 692.423 L1821.97 692.423 L1822.53 692.423 L1823.09 692.423 L1823.65 692.423 L1824.21 692.423 L1824.77 692.423 L1825.33 692.423 L1825.89 692.423 L1826.45 692.423 L1827 692.423 L1827.56 692.423 L1828.12 692.423 L1828.68 692.423 L1829.24 692.423 L1829.8 692.423 L1830.36 692.423 L1830.92 692.423 L1831.48 692.423 L1832.04 692.423 L1832.6 692.423 L1833.16 692.423 L1833.72 692.423 L1834.27 692.423 L1834.83 692.423 L1835.39 692.423 L1835.95 692.423 L1836.51 692.423 L1837.07 692.423 L1837.63 692.423 L1838.19 692.423 L1838.19 682.344 L1837.63 682.344 L1837.07 682.344 L1836.51 682.344 L1835.95 682.344 L1835.39 682.344 L1834.83 682.344 L1834.27 682.344 L1833.72 682.344 L1833.16 682.344 L1832.6 682.344 L1832.04 682.344 L1831.48 682.344 L1830.92 682.344 L1830.36 682.344 L1829.8 682.344 L1829.24 682.344 L1828.68 682.344 L1828.12 682.344 L1827.56 682.344 L1827 682.344 L1826.45 682.344 L1825.89 682.344 L1825.33 682.344 L1824.77 682.344 L1824.21 682.344 L1823.65 682.344 L1823.09 682.344 L1822.53 682.344 L1821.97 682.344 L1821.41 682.344 L1820.85 682.344 L1820.29 682.344 L1819.73 682.344 L1819.18 682.344 L1818.62 682.344 L1818.06 682.344 L1817.5 682.344 L1816.94 682.344 L1816.38 682.344 L1815.82 682.344 L1815.26 682.344 L1814.7 682.344 L1814.14 682.344 L1813.58 682.344 L1813.02 682.344 L1812.46 682.344 L1811.9 682.344 L1811.35 682.344 L1810.79 682.344 L1810.23 682.344 L1809.67 682.344 L1809.11 682.344 L1808.55 682.344 L1807.99 682.344 L1807.43 682.344 L1806.87 682.344 L1806.31 682.344 L1805.75 682.344 L1805.19 682.344 L1804.63 682.344 L1804.08 682.344 L1803.52 682.344 L1802.96 682.344 L1802.4 682.344 L1801.84 682.344 L1801.28 682.344 L1800.72 682.344 L1800.16 682.344 L1799.6 682.344 L1799.04 682.344 L1798.48 682.344 L1797.92 682.344 L1797.36 682.344 L1796.8 682.344 L1796.25 682.344 L1795.69 682.344 L1795.13 682.344 L1794.57 682.344 L1794.01 682.344 L1793.45 682.344 L1792.89 682.344 L1792.33 682.344 L1791.77 682.344 L1791.21 682.344 L1790.65 682.344 L1790.09 682.344 L1789.53 682.344 L1788.98 682.344 L1788.42 682.344 L1787.86 682.344 L1787.3 682.344 L1786.74 682.344 L1786.18 682.344 L1785.62 682.344 L1785.06 682.344 L1784.5 682.344 L1783.94 682.344 L1783.38 682.344 L1782.82 682.344 L1782.26 682.344 L1781.71 682.344 L1781.15 682.344 L1780.59 682.344 L1780.03 682.344 L1779.47 682.344 L1778.91 682.344 L1778.35 682.344 L1777.79 682.344 L1777.23 682.344 L1776.67 682.344 L1776.11 682.344 L1775.55 682.344 L1774.99 682.344 L1774.43 682.344 L1773.88 682.344 L1773.32 682.344 L1772.76 682.344 L1772.2 682.344 L1771.64 682.344 L1771.08 682.344 L1770.52 682.344 L1769.96 682.344 L1769.4 682.344 L1768.84 682.344 L1768.28 682.344 L1767.72 682.344 L1767.16 682.344 L1766.61 682.344 L1766.05 682.344 L1765.49 682.344 L1764.93 682.344 L1764.37 682.344 L1763.81 682.344 L1763.25 682.344 L1762.69 682.344 L1762.13 682.344 L1761.57 682.344 L1761.01 682.344 L1760.45 682.344 L1759.89 682.344 L1759.34 682.344 L1758.78 682.344 L1758.22 682.344 L1757.66 682.344 L1757.1 682.344 L1756.54 682.344 L1755.98 682.344 L1755.42 682.344 L1754.86 682.344 L1754.3 682.344 L1753.74 682.344 L1753.18 682.344 L1752.62 682.344 L1752.06 682.344 L1751.51 682.344 L1750.95 682.344 L1750.39 682.344 L1749.83 682.344 L1749.27 682.344 L1748.71 682.344 L1748.15 682.344 L1747.59 682.344 L1747.03 682.344 L1746.47 682.344 L1745.91 682.344 L1745.35 682.344 L1744.79 682.344 L1744.24 682.344 L1743.68 682.344 L1743.12 682.344 L1742.56 682.344 L1742 682.344 L1741.44 682.344 L1740.88 682.344 L1740.32 682.344 L1739.76 682.344 L1739.2 682.344 L1738.64 682.344 L1738.08 682.344 L1737.52 682.344 L1736.97 682.344 L1736.41 682.344 L1735.85 682.344 L1735.29 682.344 L1734.73 682.344 L1734.17 682.344 L1733.61 682.344 L1733.05 682.344 L1732.49 682.344 L1731.93 682.344 L1731.37 682.344 L1730.81 682.344 L1730.25 682.344 L1729.69 682.344 L1729.14 682.344 L1728.58 682.344 L1728.02 682.344 L1727.46 682.344 L1726.9 682.344 L1726.34 682.344 L1725.78 682.344 L1725.22 682.344 L1724.66 682.344 L1724.1 682.344 L1723.54 682.344 L1722.98 682.344 L1722.42 682.344 L1721.87 682.344 L1721.31 682.344 L1720.75 682.344 L1720.19 682.344 L1719.63 682.344 L1719.07 682.344 L1718.51 682.344 L1717.95 682.344 L1717.39 682.344 L1716.83 682.344 L1716.27 682.344 L1715.71 682.344 L1715.15 682.344 L1714.6 682.344 L1714.04 682.344 L1713.48 682.344 L1712.92 682.344 L1712.36 682.344 L1711.8 682.344 L1711.24 682.344 L1710.68 682.344 L1710.12 682.344 L1709.56 682.344 L1709 682.344 L1708.44 682.344 L1707.88 682.344 L1707.32 682.344 L1706.77 682.344 L1706.21 682.344 L1705.65 682.344 L1705.09 682.344 L1704.53 682.344 L1703.97 682.344 L1703.41 682.344 L1702.85 682.344 L1702.29 682.344 L1701.73 682.344 L1701.17 682.344 L1700.61 682.344 L1700.05 682.344 L1699.5 682.344 L1698.94 682.344 L1698.38 682.344 L1697.82 682.344 L1697.26 682.344 L1696.7 682.344 L1696.14 682.344 L1695.58 682.344 L1695.02 682.344 L1694.46 682.344 L1693.9 682.344 L1693.34 682.344 L1692.78 682.344 L1692.23 682.344 L1691.67 682.344 L1691.11 682.344 L1690.55 682.344 L1689.99 682.344 L1689.43 682.344 L1688.87 682.344 L1688.31 682.344 L1687.75 682.344 L1687.19 682.344 L1686.63 682.344 L1686.07 682.344 L1685.51 682.344 L1684.95 682.344 L1684.4 682.344 L1683.84 682.344 L1683.28 682.344 L1682.72 682.344 L1682.16 682.344 L1681.6 682.344 L1681.04 682.344 L1680.48 682.344 L1679.92 682.344 L1679.36 682.344 L1678.8 682.344 L1678.24 682.344 L1677.68 682.344 L1677.13 682.344 L1676.57 682.344 L1676.01 682.344 L1675.45 682.344 L1674.89 682.344 L1674.33 682.344 L1673.77 682.344 L1673.21 682.344 L1672.65 682.344 L1672.09 682.344 L1671.53 682.344 L1670.97 682.344 L1670.41 682.344 L1669.85 682.344 L1669.3 682.344 L1668.74 682.344 L1668.18 682.344 L1667.62 682.344 L1667.06 682.344 L1666.5 682.344 L1665.94 682.344 L1665.38 682.344 L1664.82 682.344 L1664.26 682.344 L1663.7 682.344 L1663.14 682.344 L1662.58 682.344 L1662.03 682.344 L1661.47 682.344 L1660.91 682.344 L1660.35 682.344 L1659.79 682.344 L1659.23 682.344 L1658.67 682.344 L1658.11 682.344 L1657.55 682.344 L1656.99 682.344 L1656.43 682.344 L1655.87 682.344 L1655.31 682.344 L1654.76 682.344 L1654.2 682.344 L1653.64 682.344 L1653.08 682.344 L1652.52 682.344 L1651.96 682.344 L1651.4 682.344 L1650.84 682.344 L1650.28 682.344 L1649.72 682.344 L1649.16 682.344 L1648.6 682.344 L1648.04 682.344 L1647.48 682.344 L1646.93 682.344 L1646.37 682.344 L1645.81 682.344 L1645.25 682.344 L1644.69 682.344 L1644.13 682.344 L1643.57 682.344 L1643.01 682.344 L1642.45 682.344 L1641.89 682.344 L1641.33 682.344 L1640.77 682.344 L1640.21 682.344 L1639.66 682.344 L1639.1 682.344 L1638.54 682.344 L1637.98 682.344 L1637.42 682.344 L1636.86 682.344 L1636.3 682.344 L1635.74 682.344 L1635.18 682.344 L1634.62 682.344 L1634.06 682.344 L1633.5 682.344 L1632.94 682.344 L1632.39 682.344 L1631.83 682.344 L1631.27 682.344 L1630.71 682.344 L1630.15 682.344 L1629.59 682.344 L1629.03 682.344 L1628.47 682.344 L1627.91 682.344 L1627.35 682.344 L1626.79 682.344 L1626.23 682.344 L1625.67 682.344 L1625.11 682.344 L1624.56 682.344 L1624 682.344 L1623.44 682.344 L1622.88 682.344 L1622.32 682.344 L1621.76 682.344 L1621.2 682.344 L1620.64 682.344 L1620.08 682.344 L1619.52 682.344 L1618.96 682.344 L1618.4 682.344 L1617.84 682.344 L1617.29 682.344 L1616.73 682.344 L1616.17 682.344 L1615.61 682.344 L1615.05 682.344 L1614.49 682.344 L1613.93 682.344 L1613.37 682.344 L1612.81 682.344 L1612.25 682.344 L1611.69 682.344 L1611.13 682.344 L1610.57 682.344 L1610.02 682.344 L1609.46 682.344 L1608.9 682.344 L1608.34 682.344 L1607.78 682.344 L1607.22 682.344 L1606.66 682.344 L1606.1 682.344 L1605.54 682.344 L1604.98 682.344 L1604.42 682.344 L1603.86 682.344 L1603.3 682.344 L1602.74 682.344 L1602.19 682.344 L1601.63 682.344 L1601.07 682.344 L1600.51 682.344 L1599.95 682.344 L1599.39 682.344 L1598.83 682.344 L1598.27 682.344 L1597.71 682.344 L1597.15 682.344 L1596.59 682.344 L1596.03 682.344 L1595.47 682.344 L1594.92 682.344 L1594.36 682.344 L1593.8 682.344 L1593.24 682.344 L1592.68 682.344 L1592.12 682.344 L1591.56 682.344 L1591 682.344 L1590.44 682.344 L1589.88 682.344 L1589.32 682.344 L1588.76 682.344 L1588.2 682.344 L1587.65 682.344 L1587.09 682.344 L1586.53 682.344 L1585.97 682.344 L1585.41 682.344 L1584.85 682.344 L1584.29 682.344 L1583.73 682.344 L1583.17 682.344 L1582.61 682.344 L1582.05 682.344 L1581.49 682.344 L1580.93 682.344 L1580.37 682.344 L1579.82 682.344 L1579.26 682.344 L1578.7 682.344 L1578.14 682.344 L1577.58 682.344 L1577.02 682.344 L1576.46 682.344 L1575.9 682.344 L1575.34 682.344 L1574.78 682.344 L1574.22 682.344 L1573.66 682.344 L1573.1 682.344 L1572.55 682.344 L1571.99 682.344 L1571.43 682.344 L1570.87 682.344 L1570.31 682.344 L1569.75 682.344 L1569.19 682.344 L1568.63 682.344 L1568.07 682.344 L1567.51 682.344 L1566.95 682.344 L1566.39 682.344 L1565.83 682.344 L1565.28 682.344 L1564.72 682.344 L1564.16 682.344 L1563.6 682.344 L1563.04 682.344 L1562.48 682.344 L1561.92 682.344 L1561.36 682.344 L1560.8 682.344 L1560.24 682.344 L1559.68 682.344 L1559.12 682.344 L1558.56 682.344 L1558 682.344 L1557.45 682.344 L1556.89 682.344 L1556.33 682.344 L1555.77 682.344 L1555.21 682.344 L1554.65 682.344 L1554.09 682.344 L1553.53 682.344 L1552.97 682.344 L1552.41 682.344 L1551.85 682.344 L1551.29 682.344 L1550.73 682.344 L1550.18 682.344 L1549.62 682.344 L1549.06 682.344 L1548.5 682.344 L1547.94 682.344 L1547.38 682.344 L1546.82 682.344 L1546.26 682.344 L1545.7 682.344 L1545.14 682.344 L1544.58 682.344 L1544.02 682.344 L1543.46 682.344 L1542.9 682.344 L1542.35 682.344 L1541.79 682.344 L1541.23 682.344 L1540.67 682.344 L1540.11 682.344 L1539.55 682.344 L1538.99 682.344 L1538.43 682.344 L1537.87 682.344 L1537.31 682.344 L1536.75 682.344 L1536.19 682.344 L1535.63 682.344 L1535.08 682.344 L1534.52 682.344 L1533.96 682.344 L1533.4 682.344 L1532.84 682.344 L1532.28 682.344 L1531.72 682.344 L1531.16 682.344 L1530.6 682.344 L1530.04 682.344 L1529.48 682.344 L1528.92 682.344 L1528.36 682.344 L1527.81 682.344 L1527.25 682.344 L1526.69 682.344 L1526.13 682.344 L1525.57 682.344 L1525.01 682.344 L1524.45 682.344 L1523.89 682.344 L1523.33 682.344 L1522.77 682.344 L1522.21 682.344 L1521.65 682.344 L1521.09 682.344 L1520.53 682.344 L1519.98 682.344 L1519.42 682.344 L1518.86 682.344 L1518.3 682.344 L1517.74 682.344 L1517.18 682.344 L1516.62 682.344 L1516.06 682.344 L1515.5 682.344 L1514.94 682.344 L1514.38 682.344 L1513.82 682.344 L1513.26 682.344 L1512.71 682.344 L1512.15 682.344 L1511.59 682.344 L1511.03 682.344 L1510.47 682.344 L1509.91 682.344 L1509.35 682.344 L1508.79 682.344 L1508.23 682.344 L1507.67 682.344 L1507.11 682.344 L1506.55 682.344 L1505.99 682.344 L1505.44 682.344 L1504.88 682.344 L1504.32 682.344 L1503.76 682.344 L1503.2 682.344 L1502.64 682.344 L1502.08 682.344 L1501.52 682.344 L1500.96 682.344 L1500.4 682.344 L1499.84 682.344 L1499.28 682.344 L1498.72 682.344 L1498.16 682.344 L1497.61 682.344 L1497.05 682.344 L1496.49 682.344 L1495.93 682.344 L1495.37 682.344 L1494.81 682.344 L1494.25 682.344 L1493.69 682.344 L1493.13 682.344 L1492.57 682.344 L1492.01 682.344 L1491.45 682.344 L1490.89 682.344 L1490.34 682.344 L1489.78 682.344 L1489.22 682.344 L1488.66 682.344 L1488.1 682.344 L1487.54 682.344 L1486.98 682.344 L1486.42 682.344 L1485.86 682.344 L1485.3 682.344 L1484.74 682.344 L1484.18 682.344 L1483.62 682.344 L1483.07 682.344 L1482.51 682.344 L1481.95 682.344 L1481.39 682.344 L1480.83 682.344 L1480.27 682.344 L1479.71 682.344 L1479.15 682.344 L1478.59 682.344 L1478.03 682.344 L1477.47 682.344 L1476.91 682.344 L1476.35 682.344 L1475.79 682.344 L1475.24 682.344 L1474.68 682.344 L1474.12 682.344 L1473.56 682.344 L1473 682.344 L1472.44 682.344 L1471.88 682.344 L1471.32 682.344 L1470.76 682.344 L1470.2 682.344 L1469.64 682.344 L1469.08 682.344 L1468.52 682.344 L1467.97 682.344 L1467.41 682.344 L1466.85 682.344 L1466.29 682.344 L1465.73 682.344 L1465.17 682.344 L1464.61 682.344 L1464.05 682.344 L1463.49 682.344 L1462.93 682.344 L1462.37 682.344 L1461.81 682.344 L1461.25 682.344 L1460.7 682.344 L1460.14 682.344 L1459.58 682.344 L1459.02 682.344 L1458.46 682.344 L1457.9 682.344 L1457.34 682.344 L1456.78 682.344 L1456.22 682.344 L1455.66 682.344 L1455.1 682.344 L1454.54 682.344 L1453.98 682.344 L1453.42 682.344 L1452.87 682.344 L1452.31 682.344 L1451.75 682.344 L1451.19 682.344 L1450.63 682.344 L1450.07 682.344 L1449.51 682.344 L1448.95 682.344 L1448.39 682.344 L1447.83 682.344 L1447.27 682.344 L1446.71 682.344 L1446.15 682.344 L1445.6 682.344 L1445.04 682.344 L1444.48 682.344 L1443.92 682.344 L1443.36 682.344 L1442.8 682.344 L1442.24 682.344 L1441.68 682.344 L1441.12 682.344 L1440.56 682.344 L1440 682.344 L1439.44 682.344 L1438.88 682.344 L1438.33 682.344 L1437.77 682.344 L1437.21 682.344 L1436.65 682.344 L1436.09 682.344 L1435.53 682.344 L1434.97 682.344 L1434.41 682.344 L1433.85 682.344 L1433.29 682.344 L1432.73 682.344 L1432.17 682.344 L1431.61 682.344 L1431.05 682.344 L1430.5 682.344 L1429.94 682.344 L1429.38 682.344 L1428.82 682.344 L1428.26 682.344 L1427.7 682.344 L1427.14 682.344 L1426.58 682.344 L1426.02 682.344 L1425.46 682.344 L1424.9 682.344 L1424.34 682.344 L1423.78 682.344 L1423.23 682.344 L1422.67 682.344 L1422.11 682.344 L1421.55 682.344 L1420.99 682.344 L1420.43 682.344 L1419.87 682.344 L1419.31 682.344 L1418.75 682.344 L1418.19 682.344 L1417.63 682.344 L1417.07 682.344 L1416.51 682.344 L1415.95 682.344 L1415.4 682.344 L1414.84 682.344 L1414.28 682.344 L1413.72 682.344 L1413.16 682.344 L1412.6 682.344 L1412.04 682.344 L1411.48 682.344 L1410.92 682.344 L1410.36 682.344 L1409.8 682.344 L1409.24 682.344 L1408.68 682.344 L1408.13 682.344 L1407.57 682.344 L1407.01 682.344 L1406.45 682.344 L1405.89 682.344 L1405.33 682.344 L1404.77 682.344 L1404.21 682.344 L1403.65 682.344 L1403.09 682.344 L1402.53 682.344 L1401.97 682.344 L1401.41 682.344 L1400.86 682.344 L1400.3 682.344 L1399.74 682.344 L1399.18 682.344 L1398.62 682.344 L1398.06 682.344 L1397.5 682.344 L1396.94 682.344 L1396.38 682.344 L1395.82 682.344 L1395.26 682.344 L1394.7 682.344 L1394.14 682.344 L1393.58 682.344 L1393.03 682.344 L1392.47 682.344 L1391.91 682.344 L1391.35 682.344 L1390.79 682.344 L1390.23 682.344 L1389.67 682.344 L1389.11 682.344 L1388.55 682.344 L1387.99 682.344 L1387.43 682.344 L1386.87 682.344 L1386.31 682.344 L1385.76 682.344 L1385.2 682.344 L1384.64 682.344 L1384.08 682.344 L1383.52 682.344 L1382.96 682.344 L1382.4 682.344 L1381.84 682.344 L1381.28 682.344 L1380.72 682.344 L1380.16 682.344 L1379.6 682.344 L1379.04 682.344 L1378.49 682.344 L1377.93 682.344 L1377.37 682.344 L1376.81 682.344 L1376.25 682.344 L1375.69 682.344 L1375.13 682.344 L1374.57 682.344 L1374.01 682.344 L1373.45 682.344 L1372.89 682.344 L1372.33 682.344 L1371.77 682.344 L1371.21 682.344 L1370.66 682.344 L1370.1 682.344 L1369.54 682.344 L1368.98 682.344 L1368.42 682.344 L1367.86 682.344 L1367.3 682.344 L1366.74 682.344 L1366.18 682.344 L1365.62 682.344 L1365.06 682.344 L1364.5 682.344 L1363.94 682.344 L1363.39 682.344 L1362.83 682.344 L1362.27 682.344 L1361.71 682.344 L1361.15 682.344 L1360.59 682.344 L1360.03 682.344 L1359.47 682.344 L1358.91 682.344 L1358.35 682.344 L1357.79 682.344 L1357.23 682.344 L1356.67 682.344 L1356.12 682.344 L1355.56 682.344 L1355 682.344 L1354.44 682.344 L1353.88 682.344 L1353.32 682.344 L1352.76 682.344 L1352.2 682.344 L1351.64 682.344 L1351.08 682.344 L1350.52 682.344 L1349.96 682.344 L1349.4 682.344 L1348.84 682.344 L1348.29 682.344 L1347.73 682.344 L1347.17 682.344 L1346.61 682.344 L1346.05 682.344 L1345.49 682.344 L1344.93 682.344 L1344.37 682.344 L1343.81 682.344 L1343.25 682.344 L1342.69 682.344 L1342.13 682.344 L1341.57 682.344 L1341.02 682.344 L1340.46 682.344 L1339.9 682.344 L1339.34 682.344 L1338.78 682.344 L1338.22 682.344 L1337.66 682.344 L1337.1 682.344 L1336.54 682.344 L1335.98 682.344 L1335.42 682.344 L1334.86 682.344 L1334.3 682.344 L1333.75 682.344 L1333.19 682.344 L1332.63 682.344 L1332.07 682.344 L1331.51 682.344 L1330.95 682.344 L1330.39 682.344 L1329.83 682.344 L1329.27 682.344 L1328.71 682.344 L1328.15 682.344 L1327.59 682.344 L1327.03 682.344 L1326.47 682.344 L1325.92 682.344 L1325.36 682.344 L1324.8 682.344 L1324.24 682.344 L1323.68 682.344 L1323.12 682.344 L1322.56 682.344 L1322 682.344 L1321.44 682.344 L1320.88 682.344 L1320.32 682.344 L1319.76 682.344 L1319.2 682.344 L1318.65 682.344 L1318.09 682.344 L1317.53 682.344 L1316.97 682.344 L1316.41 682.344 L1315.85 682.344 L1315.29 682.344 L1314.73 682.344 L1314.17 682.344 L1313.61 682.344 L1313.05 682.344 L1312.49 682.344 L1311.93 682.344 L1311.38 682.344 L1310.82 682.344 L1310.26 682.344 L1309.7 682.344 L1309.14 682.344 L1308.58 682.344 L1308.02 682.344 L1307.46 682.344 L1306.9 682.344 L1306.34 682.344 L1305.78 682.344 L1305.22 682.344 L1304.66 682.344 L1304.1 682.344 L1303.55 682.344 L1302.99 682.344 L1302.43 682.344 L1301.87 682.344 L1301.31 682.344 L1300.75 682.344 L1300.19 682.344 L1299.63 682.344 L1299.07 682.344 L1298.51 682.344 L1297.95 682.344 L1297.39 682.344 L1296.83 682.344 L1296.28 682.344 L1295.72 682.344 L1295.16 682.344 L1294.6 682.344 L1294.04 682.344 L1293.48 682.344 L1292.92 682.344 L1292.36 682.344 L1291.8 682.344 L1291.24 682.344 L1290.68 682.344 L1290.12 682.344 L1289.56 682.344 L1289 682.344 L1288.45 682.344 L1287.89 682.344 L1287.33 682.344 L1286.77 682.344 L1286.21 682.344 L1285.65 682.344 L1285.09 682.344 L1284.53 682.344 L1283.97 682.344 L1283.41 682.344 L1282.85 682.344 L1282.29 682.344 L1281.73 682.344 L1281.18 682.344 L1280.62 682.344 L1280.06 682.344 L1279.5 682.344 L1278.94 682.344 L1278.38 682.344 L1277.82 682.344 L1277.26 682.344 L1276.7 682.344 L1276.14 682.344 L1275.58 682.344 L1275.02 682.344 L1274.46 682.344 L1273.91 682.344 L1273.35 682.344 L1272.79 682.344 L1272.23 682.344 L1271.67 682.344 L1271.11 682.344 L1270.55 682.344 L1269.99 682.344 L1269.43 682.344 L1268.87 682.344 L1268.31 682.344 L1267.75 682.344 L1267.19 682.344 L1266.63 682.344 L1266.08 682.344 L1265.52 682.344 L1264.96 682.344 L1264.4 682.344 L1263.84 682.344 L1263.28 682.344 L1262.72 682.344 L1262.16 682.344 L1261.6 682.344 L1261.04 682.344 L1260.48 682.344 L1259.92 682.344 L1259.36 682.344 L1258.81 682.344 L1258.25 682.344 L1257.69 682.344 L1257.13 682.344 L1256.57 682.344 L1256.01 682.344 L1255.45 682.344 L1254.89 682.344 L1254.33 682.344 L1253.77 682.344 L1253.21 682.344 L1252.65 682.344 L1252.09 682.344 L1251.54 682.344 L1250.98 682.344 L1250.42 682.344 L1249.86 682.344 L1249.3 682.344 L1248.74 682.344 L1248.18 682.344 L1247.62 682.344 L1247.06 682.344 L1246.5 682.344 L1245.94 682.344 L1245.38 682.344 L1244.82 682.344 L1244.26 682.344 L1243.71 682.344 L1243.15 682.344 L1242.59 682.344 L1242.03 682.344 L1241.47 682.344 L1240.91 682.344 L1240.35 682.344 L1239.79 682.344 L1239.23 682.344 L1238.67 682.344 L1238.11 682.344 L1237.55 682.344 L1236.99 682.344 L1236.44 682.344 L1235.88 682.344 L1235.32 682.344 L1234.76 682.344 L1234.2 682.344 L1233.64 682.344 L1233.08 682.344 L1232.52 682.344 L1231.96 682.344 L1231.4 682.344 L1230.84 682.344 L1230.28 682.344 L1229.72 682.344 L1229.17 682.344 L1228.61 682.344 L1228.05 682.344 L1227.49 682.344 L1226.93 682.344 L1226.37 682.344 L1225.81 682.344 L1225.25 682.344 L1224.69 682.344 L1224.13 682.344 L1223.57 682.344 L1223.01 682.344 L1222.45 682.344 L1221.89 682.344 L1221.34 682.344 L1220.78 682.344 L1220.22 682.344 L1219.66 682.344 L1219.1 682.344 L1218.54 682.344 L1217.98 682.344 L1217.42 682.344 L1216.86 682.344 L1216.3 682.344 L1215.74 682.344 L1215.18 682.344 L1214.62 682.344 L1214.07 682.344 L1213.51 682.344 L1212.95 682.344 L1212.39 682.344 L1211.83 682.344 L1211.27 682.344 L1210.71 682.344 L1210.15 682.344 L1209.59 682.344 L1209.03 682.344 L1208.47 682.344 L1207.91 682.344 L1207.35 682.344 L1206.8 682.344 L1206.24 682.344 L1205.68 682.344 L1205.12 682.344 L1204.56 682.344 L1204 682.344 L1203.44 682.344 L1202.88 682.344 L1202.32 682.344 L1201.76 682.344 L1201.2 682.344 L1200.64 682.344 L1200.08 682.344 L1199.52 682.344 L1198.97 682.344 L1198.41 682.344 L1197.85 682.344 L1197.29 682.344 L1196.73 682.344 L1196.17 682.344 L1195.61 682.344 L1195.05 682.344 L1194.49 682.344 L1193.93 682.344 L1193.37 682.344 L1192.81 682.344 L1192.25 682.344 L1191.7 682.344 L1191.14 682.344 L1190.58 682.344 L1190.02 682.344 L1189.46 682.344 L1188.9 682.344 L1188.34 682.344 L1187.78 682.344 L1187.22 682.344 L1186.66 682.344 L1186.1 682.344 L1185.54 682.344 L1184.98 682.344 L1184.43 682.344 L1183.87 682.344 L1183.31 682.344 L1182.75 682.344 L1182.19 682.344 L1181.63 682.344 L1181.07 682.344 L1180.51 682.344 L1179.95 682.344 L1179.39 682.344 L1178.83 682.344 L1178.27 682.344 L1177.71 682.344 L1177.15 682.344 L1176.6 682.344 L1176.04 682.344 L1175.48 682.344 L1174.92 682.344 L1174.36 682.344 L1173.8 682.344 L1173.24 682.344 L1172.68 682.344 L1172.12 682.344 L1171.56 682.344 L1171 682.344 L1170.44 682.344 L1169.88 682.344 L1169.33 682.344 L1168.77 682.344 L1168.21 682.344 L1167.65 682.344 L1167.09 682.344 L1166.53 682.344 L1165.97 682.344 L1165.41 682.344 L1164.85 682.344 L1164.29 682.344 L1163.73 682.344 L1163.17 682.344 L1162.61 682.344 L1162.05 682.344 L1161.5 682.344 L1160.94 682.344 L1160.38 682.344 L1159.82 682.344 L1159.26 682.344 L1158.7 682.344 L1158.14 682.344 L1157.58 682.344 L1157.02 682.344 L1156.46 682.344 L1155.9 682.344 L1155.34 682.344 L1154.78 682.344 L1154.23 682.344 L1153.67 682.344 L1153.11 682.344 L1152.55 682.344 L1151.99 682.344 L1151.43 682.344 L1150.87 682.344 L1150.31 682.344 L1149.75 682.344 L1149.19 682.344 L1148.63 682.344 L1148.07 682.344 L1147.51 682.344 L1146.96 682.344 L1146.4 682.344 L1145.84 682.344 L1145.28 682.344 L1144.72 682.344 L1144.16 682.344 L1143.6 682.344 L1143.04 682.344 L1142.48 682.344 L1141.92 682.344 L1141.36 682.344 L1140.8 682.344 L1140.24 682.344 L1139.68 682.344 L1139.13 682.344 L1138.57 682.344 L1138.01 682.344 L1137.45 682.344 L1136.89 682.344 L1136.33 682.344 L1135.77 682.344 L1135.21 682.344 L1134.65 682.344 L1134.09 682.344 L1133.53 682.344 L1132.97 682.344 L1132.41 682.344 L1131.86 682.344 L1131.3 682.344 L1130.74 682.344 L1130.18 682.344 L1129.62 682.344 L1129.06 682.344 L1128.5 682.344 L1127.94 682.344 L1127.38 682.344 L1126.82 682.344 L1126.26 682.344 L1125.7 682.344 L1125.14 682.344 L1124.59 682.344 L1124.03 682.344 L1123.47 682.344 L1122.91 682.344 L1122.35 682.344 L1121.79 682.344 L1121.23 682.344 L1120.67 682.344 L1120.11 682.344 L1119.55 682.344 L1118.99 682.344 L1118.43 682.344 L1117.87 682.344 L1117.31 682.344 L1116.76 682.344 L1116.2 682.344 L1115.64 682.344 L1115.08 682.344 L1114.52 682.344 L1113.96 682.344 L1113.4 682.344 L1112.84 682.344 L1112.28 682.344 L1111.72 682.344 L1111.16 682.344 L1110.6 682.344 L1110.04 682.344 L1109.49 682.344 L1108.93 682.344 L1108.37 682.344 L1107.81 682.344 L1107.25 682.344 L1106.69 682.344 L1106.13 682.344 L1105.57 682.344 L1105.01 682.344 L1104.45 682.344 L1103.89 682.344 L1103.33 682.344 L1102.77 682.344 L1102.22 682.344 L1101.66 682.344 L1101.1 682.344 L1100.54 682.344 L1099.98 682.344 L1099.42 682.344 L1098.86 682.344 L1098.3 682.344 L1097.74 682.344 L1097.18 682.344 L1096.62 682.344 L1096.06 682.344 L1095.5 682.344 L1094.94 682.344 L1094.39 682.344 L1093.83 682.344 L1093.27 682.344 L1092.71 682.344 L1092.15 682.344 L1091.59 682.344 L1091.03 682.344 L1090.47 682.344 L1089.91 682.344 L1089.35 682.344 L1088.79 682.344 L1088.23 682.344 L1087.67 682.344 L1087.12 682.344 L1086.56 682.344 L1086 682.344 L1085.44 682.344 L1084.88 682.344 L1084.32 682.344 L1083.76 682.344 L1083.2 682.344 L1082.64 682.344 L1082.08 682.344 L1081.52 682.344 L1080.96 682.344 L1080.4 682.344 L1079.85 682.344 L1079.29 682.344 L1078.73 682.344 L1078.17 682.344 L1077.61 682.344 L1077.05 682.344 L1076.49 682.344 L1075.93 682.344 L1075.37 682.344 L1074.81 682.344 L1074.25 682.344 L1073.69 682.344 L1073.13 682.344 L1072.57 682.344 L1072.02 682.344 L1071.46 682.344 L1070.9 682.344 L1070.34 682.344 L1069.78 682.344 L1069.22 682.344 L1068.66 682.344 L1068.1 682.344 L1067.54 682.344 L1066.98 682.344 L1066.42 682.344 L1065.86 682.344 L1065.3 682.344 L1064.75 682.344 L1064.19 682.344 L1063.63 682.344 L1063.07 682.344 L1062.51 682.344 L1061.95 682.344 L1061.39 682.344 L1060.83 682.344 L1060.27 682.344 L1059.71 682.344 L1059.15 682.344 L1058.59 682.344 L1058.03 682.344 L1057.48 682.344 L1056.92 682.344 L1056.36 682.344 L1055.8 682.344 L1055.24 682.344 L1054.68 682.344 L1054.12 682.344 L1053.56 682.344 L1053 682.344 L1052.44 682.344 L1051.88 682.344 L1051.32 682.344 L1050.76 682.344 L1050.2 682.344 L1049.65 682.344 L1049.09 682.344 L1048.53 682.344 L1047.97 682.344 L1047.41 682.344 L1046.85 682.344 L1046.29 682.344 L1045.73 682.344 L1045.17 682.344 L1044.61 682.344 L1044.05 682.344 L1043.49 682.344 L1042.93 682.344 L1042.38 682.344 L1041.82 682.344 L1041.26 682.344 L1040.7 682.344 L1040.14 682.344 L1039.58 682.344 L1039.02 682.344 L1038.46 682.344 L1037.9 682.344 L1037.34 682.344 L1036.78 682.344 L1036.22 682.344 L1035.66 682.344 L1035.1 682.344 L1034.55 682.344 L1033.99 682.344 L1033.43 682.344 L1032.87 682.344 L1032.31 682.344 L1031.75 682.344 L1031.19 682.344 L1030.63 682.344 L1030.07 682.344 L1029.51 682.344 L1028.95 682.344 L1028.39 682.344 L1027.83 682.344 L1027.28 682.344 L1026.72 682.344 L1026.16 682.344 L1025.6 682.344 L1025.04 682.344 L1024.48 682.344 L1023.92 682.344 L1023.36 682.344 L1022.8 682.344 L1022.24 682.344 L1021.68 682.344 L1021.12 682.344 L1020.56 682.344 L1020.01 682.344 L1019.45 682.344 L1018.89 682.344 L1018.33 682.344 L1017.77 682.344 L1017.21 682.344 L1016.65 682.344 L1016.09 682.344 L1015.53 682.344 L1014.97 682.344 L1014.41 682.344 L1013.85 682.344 L1013.29 682.344 L1012.73 682.344 L1012.18 682.344 L1011.62 682.344 L1011.06 682.344 L1010.5 682.344 L1009.94 682.344 L1009.38 682.344 L1008.82 682.344 L1008.26 682.344 L1007.7 682.344 L1007.14 682.344 L1006.58 682.344 L1006.02 682.344 L1005.46 682.344 L1004.91 682.344 L1004.35 682.344 L1003.79 682.344 L1003.23 682.344 L1002.67 682.344 L1002.11 682.344 L1001.55 682.344 L1000.99 682.344 L1000.43 682.344 L999.872 682.344 L999.313 682.344 L998.754 682.344 L998.194 682.344 L997.635 682.344 L997.076 682.344 L996.517 682.344 L995.957 682.344 L995.398 682.344 L994.839 682.344 L994.28 682.344 L993.72 682.344 L993.161 682.344 L992.602 682.344 L992.043 682.344 L991.483 682.344 L990.924 682.344 L990.365 682.344 L989.806 682.344 L989.246 682.344 L988.687 682.344 L988.128 682.344 L987.569 682.344 L987.009 682.344 L986.45 682.344 L985.891 682.344 L985.332 682.344 L984.772 682.344 L984.213 682.344 L983.654 682.344 L983.095 682.344 L982.535 682.344 L981.976 682.344 L981.417 682.344 L980.858 682.344 L980.298 682.344 L979.739 682.344 L979.18 682.344 L978.621 682.344 L978.061 682.344 L977.502 682.344 L976.943 682.344 L976.384 682.344 L975.824 682.344 L975.265 682.344 L974.706 682.344 L974.147 682.344 L973.587 682.344 L973.028 682.344 L972.469 682.344 L971.91 682.344 L971.35 682.344 L970.791 682.344 L970.232 682.344 L969.673 682.344 L969.113 682.344 L968.554 682.344 L967.995 682.344 L967.436 682.344 L966.876 682.344 L966.317 682.344 L965.758 682.344 L965.199 682.344 L964.639 682.344 L964.08 682.344 L963.521 682.344 L962.962 682.344 L962.402 682.344 L961.843 682.344 L961.284 682.344 L960.725 682.344 L960.165 682.344 L959.606 682.344 L959.047 682.344 L958.488 682.344 L957.928 682.344 L957.369 682.344 L956.81 682.344 L956.251 682.344 L955.691 682.344 L955.132 682.344 L954.573 682.344 L954.014 682.344 L953.454 682.344 L952.895 682.344 L952.336 682.344 L951.777 682.344 L951.217 682.344 L950.658 682.344 L950.099 682.344 L949.54 682.344 L948.98 682.344 L948.421 682.344 L947.862 682.344 L947.303 682.344 L946.743 682.344 L946.184 682.344 L945.625 682.344 L945.066 682.344 L944.506 682.344 L943.947 682.344 L943.388 682.344 L942.829 682.344 L942.269 682.344 L941.71 682.344 L941.151 682.344 L940.592 682.344 L940.032 682.344 L939.473 682.344 L938.914 682.344 L938.355 682.344 L937.795 682.344 L937.236 682.344 L936.677 682.344 L936.118 682.344 L935.558 682.344 L934.999 682.344 L934.44 682.344 L933.881 682.344 L933.321 682.344 L932.762 682.344 L932.203 682.344 L931.644 682.344 L931.084 682.344 L930.525 682.344 L929.966 682.344 L929.406 682.344 L928.847 682.344 L928.288 682.344 L927.729 682.344 L927.169 682.344 L926.61 682.344 L926.051 682.344 L925.492 682.344 L924.932 682.344 L924.373 682.344 L923.814 682.344 L923.255 682.344 L922.695 682.344 L922.136 682.344 L921.577 682.344 L921.018 682.344 L920.458 682.344 L919.899 682.344 L919.34 682.344 L918.781 682.344 L918.221 682.344 L917.662 682.344 L917.103 682.344 L916.544 682.344 L915.984 682.344 L915.425 682.344 L914.866 682.344 L914.307 682.344 L913.747 682.344 L913.188 682.344 L912.629 682.344 L912.07 682.344 L911.51 682.344 L910.951 682.344 L910.392 682.344 L909.833 682.344 L909.273 682.344 L908.714 682.344 L908.155 682.344 L907.596 682.344 L907.036 682.344 L906.477 682.344 L905.918 682.344 L905.359 682.344 L904.799 682.344 L904.24 682.344 L903.681 682.344 L903.122 682.344 L902.562 682.344 L902.003 682.344 L901.444 682.344 L900.885 682.344 L900.325 682.344 L899.766 682.344 L899.207 682.344 L898.648 682.344 L898.088 682.344 L897.529 682.344 L896.97 682.344 L896.411 682.344 L895.851 682.344 L895.292 682.344 L894.733 682.344 L894.174 682.344 L893.614 682.344 L893.055 682.344 L892.496 682.344 L891.937 682.344 L891.377 682.344 L890.818 682.344 L890.259 682.344 L889.7 682.344 L889.14 682.344 L888.581 682.344 L888.022 682.344 L887.463 682.344 L886.903 682.344 L886.344 682.344 L885.785 682.344 L885.226 682.344 L884.666 682.344 L884.107 682.344 L883.548 682.344 L882.989 682.344 L882.429 682.344 L881.87 682.344 L881.311 682.344 L880.752 682.344 L880.192 682.344 L879.633 682.344 L879.074 682.344 L878.515 682.344 L877.955 682.344 L877.396 682.344 L876.837 682.344 L876.278 682.344 L875.718 682.344 L875.159 682.344 L874.6 682.344 L874.041 682.344 L873.481 682.344 L872.922 682.344 L872.363 682.344 L871.804 682.344 L871.244 682.344 L870.685 682.344 L870.126 682.344 L869.567 682.344 L869.007 682.344 L868.448 682.344 L867.889 682.344 L867.33 682.344 L866.77 682.344 L866.211 682.344 L865.652 682.344 L865.093 682.344 L864.533 682.344 L863.974 682.344 L863.415 682.344 L862.856 682.344 L862.296 682.344 L861.737 682.344 L861.178 682.344 L860.619 682.344 L860.059 682.344 L859.5 682.344 L858.941 682.344 L858.382 682.344 L857.822 682.344 L857.263 682.344 L856.704 682.344 L856.145 682.344 L855.585 682.344 L855.026 682.344 L854.467 682.344 L853.908 682.344 L853.348 682.344 L852.789 682.344 L852.23 682.344 L851.671 682.344 L851.111 682.344 L850.552 682.344 L849.993 682.344 L849.434 682.344 L848.874 682.344 L848.315 682.344 L847.756 682.344 L847.197 682.344 L846.637 682.344 L846.078 682.344 L845.519 682.344 L844.96 682.344 L844.4 682.344 L843.841 682.344 L843.282 682.344 L842.723 682.344 L842.163 682.344 L841.604 682.344 L841.045 682.344 L840.486 682.344 L839.926 682.344 L839.367 682.344 L838.808 682.344 L838.249 682.344 L837.689 682.344 L837.13 682.344 L836.571 682.344 L836.012 682.344 L835.452 682.344 L834.893 682.344 L834.334 682.344 L833.775 682.344 L833.215 682.344 L832.656 682.344 L832.097 682.344 L831.538 682.344 L830.978 682.344 L830.419 682.344 L829.86 682.344 L829.301 682.344 L828.741 682.344 L828.182 682.344 L827.623 682.344 L827.064 682.344 L826.504 682.344 L825.945 682.344 L825.386 682.344 L824.827 682.344 L824.267 682.344 L823.708 682.344 L823.149 682.344 L822.59 682.344 L822.03 682.344 L821.471 682.344 L820.912 682.344 L820.353 682.344 L819.793 682.344 L819.234 682.344 L818.675 682.344 L818.116 682.344 L817.556 682.344 L816.997 682.344 L816.438 682.344 L815.879 682.344 L815.319 682.344 L814.76 682.344 L814.201 682.344 L813.642 682.344 L813.082 682.344 L812.523 682.344 L811.964 682.344 L811.405 682.344 L810.845 682.344 L810.286 682.344 L809.727 682.344 L809.168 682.344 L808.608 682.344 L808.049 682.344 L807.49 682.344 L806.931 682.344 L806.371 682.344 L805.812 682.344 L805.253 682.344 L804.693 682.344 L804.134 682.344 L803.575 682.344 L803.016 682.344 L802.456 682.344 L801.897 682.344 L801.338 682.344 L800.779 682.344 L800.219 682.344 L799.66 682.344 L799.101 682.344 L798.542 682.344 L797.982 682.344 L797.423 682.344 L796.864 682.344 L796.305 682.344 L795.745 682.344 L795.186 682.344 L794.627 682.344 L794.068 682.344 L793.508 682.344 L792.949 682.344 L792.39 682.344 L791.831 682.344 L791.271 682.344 L790.712 682.344 L790.153 682.344 L789.594 682.344 L789.034 682.344 L788.475 682.344 L787.916 682.344 L787.357 682.344 L786.797 682.344 L786.238 682.344 L785.679 682.344 L785.12 682.344 L784.56 682.344 L784.001 682.344 L783.442 682.344 L782.883 682.344 L782.323 682.344 L781.764 682.344 L781.205 682.344 L780.646 682.344 L780.086 682.344 L779.527 682.344 L778.968 682.344 L778.409 682.344 L777.849 682.344 L777.29 682.344 L776.731 682.344 L776.172 682.344 L775.612 682.344 L775.053 682.344 L774.494 682.344 L773.935 682.344 L773.375 682.344 L772.816 682.344 L772.257 682.344 L771.698 682.344 L771.138 682.344 L770.579 682.344 L770.02 682.344 L769.461 682.344 L768.901 682.344 L768.342 682.344 L767.783 682.344 L767.224 682.344 L766.664 682.344 L766.105 682.344 L765.546 682.344 L764.987 682.344 L764.427 682.344 L763.868 682.344 L763.309 682.344 L762.75 682.344 L762.19 682.344 L761.631 682.344 L761.072 682.344 L760.513 682.344 L759.953 682.344 L759.394 682.344 L758.835 682.344 L758.276 682.344 L757.716 682.344 L757.157 682.344 L756.598 682.344 L756.039 682.344 L755.479 682.344 L754.92 682.344 L754.361 682.344 L753.802 682.344 L753.242 682.344 L752.683 682.344 L752.124 682.344 L751.565 682.344 L751.005 682.344 L750.446 682.344 L749.887 682.344 L749.328 682.344 L748.768 682.344 L748.209 682.344 L747.65 682.344 L747.091 682.344 L746.531 682.344 L745.972 682.344 L745.413 682.344 L744.854 682.344 L744.294 682.344 L743.735 682.344 L743.176 682.344 L742.617 682.344 L742.057 682.344 L741.498 682.344 L740.939 682.344 L740.38 682.344 L739.82 682.344 L739.261 682.344 L738.702 682.344 L738.143 682.344 L737.583 682.344 L737.024 682.344 L736.465 682.344 L735.906 682.344 L735.346 682.344 L734.787 682.344 L734.228 682.344 L733.669 682.344 L733.109 682.344 L732.55 682.344 L731.991 682.344 L731.432 682.344 L730.872 682.344 L730.313 682.344 L729.754 682.344 L729.195 682.344 L728.635 682.344 L728.076 682.344 L727.517 682.344 L726.958 682.344 L726.398 682.344 L725.839 682.344 L725.28 682.344 L724.721 682.344 L724.161 682.344 L723.602 682.344 L723.043 682.344 L722.484 682.344 L721.924 682.344 L721.365 682.344 L720.806 682.344 L720.247 682.344  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,687.383 720.806,687.383 721.365,687.383 721.924,687.383 722.484,687.383 723.043,687.383 723.602,687.383 724.161,687.383 724.721,687.383 725.28,687.383 725.839,687.383 726.398,687.383 726.958,687.383 727.517,687.383 728.076,687.383 728.635,687.383 729.195,687.383 729.754,687.383 730.313,687.383 730.872,687.383 731.432,687.383 731.991,687.383 732.55,687.383 733.109,687.383 733.669,687.383 734.228,687.383 734.787,687.383 735.346,687.383 735.906,687.383 736.465,687.383 737.024,687.383 737.583,687.383 738.143,687.383 738.702,687.383 739.261,687.383 739.82,687.383 740.38,687.383 740.939,687.383 741.498,687.383 742.057,687.383 742.617,687.383 743.176,687.383 743.735,687.383 744.294,687.383 744.854,687.383 745.413,687.383 745.972,687.383 746.531,687.383 747.091,687.383 747.65,687.383 748.209,687.383 748.768,687.383 749.328,687.383 749.887,687.383 750.446,687.383 751.005,687.383 751.565,687.383 752.124,687.383 752.683,687.383 753.242,687.383 753.802,687.383 754.361,687.383 754.92,687.383 755.479,687.383 756.039,687.383 756.598,687.383 757.157,687.383 757.716,687.383 758.276,687.383 758.835,687.383 759.394,687.383 759.953,687.383 760.513,687.383 761.072,687.383 761.631,687.383 762.19,687.383 762.75,687.383 763.309,687.383 763.868,687.383 764.427,687.383 764.987,687.383 765.546,687.383 766.105,687.383 766.664,687.383 767.224,687.383 767.783,687.383 768.342,687.383 768.901,687.383 769.461,687.383 770.02,687.383 770.579,687.383 771.138,687.383 771.698,687.383 772.257,687.383 772.816,687.383 773.375,687.383 773.935,687.383 774.494,687.383 775.053,687.383 775.612,687.383 776.172,687.383 776.731,687.383 777.29,687.383 777.849,687.383 778.409,687.383 778.968,687.383 779.527,687.383 780.086,687.383 780.646,687.383 781.205,687.383 781.764,687.383 782.323,687.383 782.883,687.383 783.442,687.383 784.001,687.383 784.56,687.383 785.12,687.383 785.679,687.383 786.238,687.383 786.797,687.383 787.357,687.383 787.916,687.383 788.475,687.383 789.034,687.383 789.594,687.383 790.153,687.383 790.712,687.383 791.271,687.383 791.831,687.383 792.39,687.383 792.949,687.383 793.508,687.383 794.068,687.383 794.627,687.383 795.186,687.383 795.745,687.383 796.305,687.383 796.864,687.383 797.423,687.383 797.982,687.383 798.542,687.383 799.101,687.383 799.66,687.383 800.219,687.383 800.779,687.383 801.338,687.383 801.897,687.383 802.456,687.383 803.016,687.383 803.575,687.383 804.134,687.383 804.693,687.383 805.253,687.383 805.812,687.383 806.371,687.383 806.931,687.383 807.49,687.383 808.049,687.383 808.608,687.383 809.168,687.383 809.727,687.383 810.286,687.383 810.845,687.383 811.405,687.383 811.964,687.383 812.523,687.383 813.082,687.383 813.642,687.383 814.201,687.383 814.76,687.383 815.319,687.383 815.879,687.383 816.438,687.383 816.997,687.383 817.556,687.383 818.116,687.383 818.675,687.383 819.234,687.383 819.793,687.383 820.353,687.383 820.912,687.383 821.471,687.383 822.03,687.383 822.59,687.383 823.149,687.383 823.708,687.383 824.267,687.383 824.827,687.383 825.386,687.383 825.945,687.383 826.504,687.383 827.064,687.383 827.623,687.383 828.182,687.383 828.741,687.383 829.301,687.383 829.86,687.383 830.419,687.383 830.978,687.383 831.538,687.383 832.097,687.383 832.656,687.383 833.215,687.383 833.775,687.383 834.334,687.383 834.893,687.383 835.452,687.383 836.012,687.383 836.571,687.383 837.13,687.383 837.689,687.383 838.249,687.383 838.808,687.383 839.367,687.383 839.926,687.383 840.486,687.383 841.045,687.383 841.604,687.383 842.163,687.383 842.723,687.383 843.282,687.383 843.841,687.383 844.4,687.383 844.96,687.383 845.519,687.383 846.078,687.383 846.637,687.383 847.197,687.383 847.756,687.383 848.315,687.383 848.874,687.383 849.434,687.383 849.993,687.383 850.552,687.383 851.111,687.383 851.671,687.383 852.23,687.383 852.789,687.383 853.348,687.383 853.908,687.383 854.467,687.383 855.026,687.383 855.585,687.383 856.145,687.383 856.704,687.383 857.263,687.383 857.822,687.383 858.382,687.383 858.941,687.383 859.5,687.383 860.059,687.383 860.619,687.383 861.178,687.383 861.737,687.383 862.296,687.383 862.856,687.383 863.415,687.383 863.974,687.383 864.533,687.383 865.093,687.383 865.652,687.383 866.211,687.383 866.77,687.383 867.33,687.383 867.889,687.383 868.448,687.383 869.007,687.383 869.567,687.383 870.126,687.383 870.685,687.383 871.244,687.383 871.804,687.383 872.363,687.383 872.922,687.383 873.481,687.383 874.041,687.383 874.6,687.383 875.159,687.383 875.718,687.383 876.278,687.383 876.837,687.383 877.396,687.383 877.955,687.383 878.515,687.383 879.074,687.383 879.633,687.383 880.192,687.383 880.752,687.383 881.311,687.383 881.87,687.383 882.429,687.383 882.989,687.383 883.548,687.383 884.107,687.383 884.666,687.383 885.226,687.383 885.785,687.383 886.344,687.383 886.903,687.383 887.463,687.383 888.022,687.383 888.581,687.383 889.14,687.383 889.7,687.383 890.259,687.383 890.818,687.383 891.377,687.383 891.937,687.383 892.496,687.383 893.055,687.383 893.614,687.383 894.174,687.383 894.733,687.383 895.292,687.383 895.851,687.383 896.411,687.383 896.97,687.383 897.529,687.383 898.088,687.383 898.648,687.383 899.207,687.383 899.766,687.383 900.325,687.383 900.885,687.383 901.444,687.383 902.003,687.383 902.562,687.383 903.122,687.383 903.681,687.383 904.24,687.383 904.799,687.383 905.359,687.383 905.918,687.383 906.477,687.383 907.036,687.383 907.596,687.383 908.155,687.383 908.714,687.383 909.273,687.383 909.833,687.383 910.392,687.383 910.951,687.383 911.51,687.383 912.07,687.383 912.629,687.383 913.188,687.383 913.747,687.383 914.307,687.383 914.866,687.383 915.425,687.383 915.984,687.383 916.544,687.383 917.103,687.383 917.662,687.383 918.221,687.383 918.781,687.383 919.34,687.383 919.899,687.383 920.458,687.383 921.018,687.383 921.577,687.383 922.136,687.383 922.695,687.383 923.255,687.383 923.814,687.383 924.373,687.383 924.932,687.383 925.492,687.383 926.051,687.383 926.61,687.383 927.169,687.383 927.729,687.383 928.288,687.383 928.847,687.383 929.406,687.383 929.966,687.383 930.525,687.383 931.084,687.383 931.644,687.383 932.203,687.383 932.762,687.383 933.321,687.383 933.881,687.383 934.44,687.383 934.999,687.383 935.558,687.383 936.118,687.383 936.677,687.383 937.236,687.383 937.795,687.383 938.355,687.383 938.914,687.383 939.473,687.383 940.032,687.383 940.592,687.383 941.151,687.383 941.71,687.383 942.269,687.383 942.829,687.383 943.388,687.383 943.947,687.383 944.506,687.383 945.066,687.383 945.625,687.383 946.184,687.383 946.743,687.383 947.303,687.383 947.862,687.383 948.421,687.383 948.98,687.383 949.54,687.383 950.099,687.383 950.658,687.383 951.217,687.383 951.777,687.383 952.336,687.383 952.895,687.383 953.454,687.383 954.014,687.383 954.573,687.383 955.132,687.383 955.691,687.383 956.251,687.383 956.81,687.383 957.369,687.383 957.928,687.383 958.488,687.383 959.047,687.383 959.606,687.383 960.165,687.383 960.725,687.383 961.284,687.383 961.843,687.383 962.402,687.383 962.962,687.383 963.521,687.383 964.08,687.383 964.639,687.383 965.199,687.383 965.758,687.383 966.317,687.383 966.876,687.383 967.436,687.383 967.995,687.383 968.554,687.383 969.113,687.383 969.673,687.383 970.232,687.383 970.791,687.383 971.35,687.383 971.91,687.383 972.469,687.383 973.028,687.383 973.587,687.383 974.147,687.383 974.706,687.383 975.265,687.383 975.824,687.383 976.384,687.383 976.943,687.383 977.502,687.383 978.061,687.383 978.621,687.383 979.18,687.383 979.739,687.383 980.298,687.383 980.858,687.383 981.417,687.383 981.976,687.383 982.535,687.383 983.095,687.383 983.654,687.383 984.213,687.383 984.772,687.383 985.332,687.383 985.891,687.383 986.45,687.383 987.009,687.383 987.569,687.383 988.128,687.383 988.687,687.383 989.246,687.383 989.806,687.383 990.365,687.383 990.924,687.383 991.483,687.383 992.043,687.383 992.602,687.383 993.161,687.383 993.72,687.383 994.28,687.383 994.839,687.383 995.398,687.383 995.957,687.383 996.517,687.383 997.076,687.383 997.635,687.383 998.194,687.383 998.754,687.383 999.313,687.383 999.872,687.383 1000.43,687.383 1000.99,687.383 1001.55,687.383 1002.11,687.383 1002.67,687.383 1003.23,687.383 1003.79,687.383 1004.35,687.383 1004.91,687.383 1005.46,687.383 1006.02,687.383 1006.58,687.383 1007.14,687.383 1007.7,687.383 1008.26,687.383 1008.82,687.383 1009.38,687.383 1009.94,687.383 1010.5,687.383 1011.06,687.383 1011.62,687.383 1012.18,687.383 1012.73,687.383 1013.29,687.383 1013.85,687.383 1014.41,687.383 1014.97,687.383 1015.53,687.383 1016.09,687.383 1016.65,687.383 1017.21,687.383 1017.77,687.383 1018.33,687.383 1018.89,687.383 1019.45,687.383 1020.01,687.383 1020.56,687.383 1021.12,687.383 1021.68,687.383 1022.24,687.383 1022.8,687.383 1023.36,687.383 1023.92,687.383 1024.48,687.383 1025.04,687.383 1025.6,687.383 1026.16,687.383 1026.72,687.383 1027.28,687.383 1027.83,687.383 1028.39,687.383 1028.95,687.383 1029.51,687.383 1030.07,687.383 1030.63,687.383 1031.19,687.383 1031.75,687.383 1032.31,687.383 1032.87,687.383 1033.43,687.383 1033.99,687.383 1034.55,687.383 1035.1,687.383 1035.66,687.383 1036.22,687.383 1036.78,687.383 1037.34,687.383 1037.9,687.383 1038.46,687.383 1039.02,687.383 1039.58,687.383 1040.14,687.383 1040.7,687.383 1041.26,687.383 1041.82,687.383 1042.38,687.383 1042.93,687.383 1043.49,687.383 1044.05,687.383 1044.61,687.383 1045.17,687.383 1045.73,687.383 1046.29,687.383 1046.85,687.383 1047.41,687.383 1047.97,687.383 1048.53,687.383 1049.09,687.383 1049.65,687.383 1050.2,687.383 1050.76,687.383 1051.32,687.383 1051.88,687.383 1052.44,687.383 1053,687.383 1053.56,687.383 1054.12,687.383 1054.68,687.383 1055.24,687.383 1055.8,687.383 1056.36,687.383 1056.92,687.383 1057.48,687.383 1058.03,687.383 1058.59,687.383 1059.15,687.383 1059.71,687.383 1060.27,687.383 1060.83,687.383 1061.39,687.383 1061.95,687.383 1062.51,687.383 1063.07,687.383 1063.63,687.383 1064.19,687.383 1064.75,687.383 1065.3,687.383 1065.86,687.383 1066.42,687.383 1066.98,687.383 1067.54,687.383 1068.1,687.383 1068.66,687.383 1069.22,687.383 1069.78,687.383 1070.34,687.383 1070.9,687.383 1071.46,687.383 1072.02,687.383 1072.57,687.383 1073.13,687.383 1073.69,687.383 1074.25,687.383 1074.81,687.383 1075.37,687.383 1075.93,687.383 1076.49,687.383 1077.05,687.383 1077.61,687.383 1078.17,687.383 1078.73,687.383 1079.29,687.383 1079.85,687.383 1080.4,687.383 1080.96,687.383 1081.52,687.383 1082.08,687.383 1082.64,687.383 1083.2,687.383 1083.76,687.383 1084.32,687.383 1084.88,687.383 1085.44,687.383 1086,687.383 1086.56,687.383 1087.12,687.383 1087.67,687.383 1088.23,687.383 1088.79,687.383 1089.35,687.383 1089.91,687.383 1090.47,687.383 1091.03,687.383 1091.59,687.383 1092.15,687.383 1092.71,687.383 1093.27,687.383 1093.83,687.383 1094.39,687.383 1094.94,687.383 1095.5,687.383 1096.06,687.383 1096.62,687.383 1097.18,687.383 1097.74,687.383 1098.3,687.383 1098.86,687.383 1099.42,687.383 1099.98,687.383 1100.54,687.383 1101.1,687.383 1101.66,687.383 1102.22,687.383 1102.77,687.383 1103.33,687.383 1103.89,687.383 1104.45,687.383 1105.01,687.383 1105.57,687.383 1106.13,687.383 1106.69,687.383 1107.25,687.383 1107.81,687.383 1108.37,687.383 1108.93,687.383 1109.49,687.383 1110.04,687.383 1110.6,687.383 1111.16,687.383 1111.72,687.383 1112.28,687.383 1112.84,687.383 1113.4,687.383 1113.96,687.383 1114.52,687.383 1115.08,687.383 1115.64,687.383 1116.2,687.383 1116.76,687.383 1117.31,687.383 1117.87,687.383 1118.43,687.383 1118.99,687.383 1119.55,687.383 1120.11,687.383 1120.67,687.383 1121.23,687.383 1121.79,687.383 1122.35,687.383 1122.91,687.383 1123.47,687.383 1124.03,687.383 1124.59,687.383 1125.14,687.383 1125.7,687.383 1126.26,687.383 1126.82,687.383 1127.38,687.383 1127.94,687.383 1128.5,687.383 1129.06,687.383 1129.62,687.383 1130.18,687.383 1130.74,687.383 1131.3,687.383 1131.86,687.383 1132.41,687.383 1132.97,687.383 1133.53,687.383 1134.09,687.383 1134.65,687.383 1135.21,687.383 1135.77,687.383 1136.33,687.383 1136.89,687.383 1137.45,687.383 1138.01,687.383 1138.57,687.383 1139.13,687.383 1139.68,687.383 1140.24,687.383 1140.8,687.383 1141.36,687.383 1141.92,687.383 1142.48,687.383 1143.04,687.383 1143.6,687.383 1144.16,687.383 1144.72,687.383 1145.28,687.383 1145.84,687.383 1146.4,687.383 1146.96,687.383 1147.51,687.383 1148.07,687.383 1148.63,687.383 1149.19,687.383 1149.75,687.383 1150.31,687.383 1150.87,687.383 1151.43,687.383 1151.99,687.383 1152.55,687.383 1153.11,687.383 1153.67,687.383 1154.23,687.383 1154.78,687.383 1155.34,687.383 1155.9,687.383 1156.46,687.383 1157.02,687.383 1157.58,687.383 1158.14,687.383 1158.7,687.383 1159.26,687.383 1159.82,687.383 1160.38,687.383 1160.94,687.383 1161.5,687.383 1162.05,687.383 1162.61,687.383 1163.17,687.383 1163.73,687.383 1164.29,687.383 1164.85,687.383 1165.41,687.383 1165.97,687.383 1166.53,687.383 1167.09,687.383 1167.65,687.383 1168.21,687.383 1168.77,687.383 1169.33,687.383 1169.88,687.383 1170.44,687.383 1171,687.383 1171.56,687.383 1172.12,687.383 1172.68,687.383 1173.24,687.383 1173.8,687.383 1174.36,687.383 1174.92,687.383 1175.48,687.383 1176.04,687.383 1176.6,687.383 1177.15,687.383 1177.71,687.383 1178.27,687.383 1178.83,687.383 1179.39,687.383 1179.95,687.383 1180.51,687.383 1181.07,687.383 1181.63,687.383 1182.19,687.383 1182.75,687.383 1183.31,687.383 1183.87,687.383 1184.43,687.383 1184.98,687.383 1185.54,687.383 1186.1,687.383 1186.66,687.383 1187.22,687.383 1187.78,687.383 1188.34,687.383 1188.9,687.383 1189.46,687.383 1190.02,687.383 1190.58,687.383 1191.14,687.383 1191.7,687.383 1192.25,687.383 1192.81,687.383 1193.37,687.383 1193.93,687.383 1194.49,687.383 1195.05,687.383 1195.61,687.383 1196.17,687.383 1196.73,687.383 1197.29,687.383 1197.85,687.383 1198.41,687.383 1198.97,687.383 1199.52,687.383 1200.08,687.383 1200.64,687.383 1201.2,687.383 1201.76,687.383 1202.32,687.383 1202.88,687.383 1203.44,687.383 1204,687.383 1204.56,687.383 1205.12,687.383 1205.68,687.383 1206.24,687.383 1206.8,687.383 1207.35,687.383 1207.91,687.383 1208.47,687.383 1209.03,687.383 1209.59,687.383 1210.15,687.383 1210.71,687.383 1211.27,687.383 1211.83,687.383 1212.39,687.383 1212.95,687.383 1213.51,687.383 1214.07,687.383 1214.62,687.383 1215.18,687.383 1215.74,687.383 1216.3,687.383 1216.86,687.383 1217.42,687.383 1217.98,687.383 1218.54,687.383 1219.1,687.383 1219.66,687.383 1220.22,687.383 1220.78,687.383 1221.34,687.383 1221.89,687.383 1222.45,687.383 1223.01,687.383 1223.57,687.383 1224.13,687.383 1224.69,687.383 1225.25,687.383 1225.81,687.383 1226.37,687.383 1226.93,687.383 1227.49,687.383 1228.05,687.383 1228.61,687.383 1229.17,687.383 1229.72,687.383 1230.28,687.383 1230.84,687.383 1231.4,687.383 1231.96,687.383 1232.52,687.383 1233.08,687.383 1233.64,687.383 1234.2,687.383 1234.76,687.383 1235.32,687.383 1235.88,687.383 1236.44,687.383 1236.99,687.383 1237.55,687.383 1238.11,687.383 1238.67,687.383 1239.23,687.383 1239.79,687.383 1240.35,687.383 1240.91,687.383 1241.47,687.383 1242.03,687.383 1242.59,687.383 1243.15,687.383 1243.71,687.383 1244.26,687.383 1244.82,687.383 1245.38,687.383 1245.94,687.383 1246.5,687.383 1247.06,687.383 1247.62,687.383 1248.18,687.383 1248.74,687.383 1249.3,687.383 1249.86,687.383 1250.42,687.383 1250.98,687.383 1251.54,687.383 1252.09,687.383 1252.65,687.383 1253.21,687.383 1253.77,687.383 1254.33,687.383 1254.89,687.383 1255.45,687.383 1256.01,687.383 1256.57,687.383 1257.13,687.383 1257.69,687.383 1258.25,687.383 1258.81,687.383 1259.36,687.383 1259.92,687.383 1260.48,687.383 1261.04,687.383 1261.6,687.383 1262.16,687.383 1262.72,687.383 1263.28,687.383 1263.84,687.383 1264.4,687.383 1264.96,687.383 1265.52,687.383 1266.08,687.383 1266.63,687.383 1267.19,687.383 1267.75,687.383 1268.31,687.383 1268.87,687.383 1269.43,687.383 1269.99,687.383 1270.55,687.383 1271.11,687.383 1271.67,687.383 1272.23,687.383 1272.79,687.383 1273.35,687.383 1273.91,687.383 1274.46,687.383 1275.02,687.383 1275.58,687.383 1276.14,687.383 1276.7,687.383 1277.26,687.383 1277.82,687.383 1278.38,687.383 1278.94,687.383 1279.5,687.383 1280.06,687.383 1280.62,687.383 1281.18,687.383 1281.73,687.383 1282.29,687.383 1282.85,687.383 1283.41,687.383 1283.97,687.383 1284.53,687.383 1285.09,687.383 1285.65,687.383 1286.21,687.383 1286.77,687.383 1287.33,687.383 1287.89,687.383 1288.45,687.383 1289,687.383 1289.56,687.383 1290.12,687.383 1290.68,687.383 1291.24,687.383 1291.8,687.383 1292.36,687.383 1292.92,687.383 1293.48,687.383 1294.04,687.383 1294.6,687.383 1295.16,687.383 1295.72,687.383 1296.28,687.383 1296.83,687.383 1297.39,687.383 1297.95,687.383 1298.51,687.383 1299.07,687.383 1299.63,687.383 1300.19,687.383 1300.75,687.383 1301.31,687.383 1301.87,687.383 1302.43,687.383 1302.99,687.383 1303.55,687.383 1304.1,687.383 1304.66,687.383 1305.22,687.383 1305.78,687.383 1306.34,687.383 1306.9,687.383 1307.46,687.383 1308.02,687.383 1308.58,687.383 1309.14,687.383 1309.7,687.383 1310.26,687.383 1310.82,687.383 1311.38,687.383 1311.93,687.383 1312.49,687.383 1313.05,687.383 1313.61,687.383 1314.17,687.383 1314.73,687.383 1315.29,687.383 1315.85,687.383 1316.41,687.383 1316.97,687.383 1317.53,687.383 1318.09,687.383 1318.65,687.383 1319.2,687.383 1319.76,687.383 1320.32,687.383 1320.88,687.383 1321.44,687.383 1322,687.383 1322.56,687.383 1323.12,687.383 1323.68,687.383 1324.24,687.383 1324.8,687.383 1325.36,687.383 1325.92,687.383 1326.47,687.383 1327.03,687.383 1327.59,687.383 1328.15,687.383 1328.71,687.383 1329.27,687.383 1329.83,687.383 1330.39,687.383 1330.95,687.383 1331.51,687.383 1332.07,687.383 1332.63,687.383 1333.19,687.383 1333.75,687.383 1334.3,687.383 1334.86,687.383 1335.42,687.383 1335.98,687.383 1336.54,687.383 1337.1,687.383 1337.66,687.383 1338.22,687.383 1338.78,687.383 1339.34,687.383 1339.9,687.383 1340.46,687.383 1341.02,687.383 1341.57,687.383 1342.13,687.383 1342.69,687.383 1343.25,687.383 1343.81,687.383 1344.37,687.383 1344.93,687.383 1345.49,687.383 1346.05,687.383 1346.61,687.383 1347.17,687.383 1347.73,687.383 1348.29,687.383 1348.84,687.383 1349.4,687.383 1349.96,687.383 1350.52,687.383 1351.08,687.383 1351.64,687.383 1352.2,687.383 1352.76,687.383 1353.32,687.383 1353.88,687.383 1354.44,687.383 1355,687.383 1355.56,687.383 1356.12,687.383 1356.67,687.383 1357.23,687.383 1357.79,687.383 1358.35,687.383 1358.91,687.383 1359.47,687.383 1360.03,687.383 1360.59,687.383 1361.15,687.383 1361.71,687.383 1362.27,687.383 1362.83,687.383 1363.39,687.383 1363.94,687.383 1364.5,687.383 1365.06,687.383 1365.62,687.383 1366.18,687.383 1366.74,687.383 1367.3,687.383 1367.86,687.383 1368.42,687.383 1368.98,687.383 1369.54,687.383 1370.1,687.383 1370.66,687.383 1371.21,687.383 1371.77,687.383 1372.33,687.383 1372.89,687.383 1373.45,687.383 1374.01,687.383 1374.57,687.383 1375.13,687.383 1375.69,687.383 1376.25,687.383 1376.81,687.383 1377.37,687.383 1377.93,687.383 1378.49,687.383 1379.04,687.383 1379.6,687.383 1380.16,687.383 1380.72,687.383 1381.28,687.383 1381.84,687.383 1382.4,687.383 1382.96,687.383 1383.52,687.383 1384.08,687.383 1384.64,687.383 1385.2,687.383 1385.76,687.383 1386.31,687.383 1386.87,687.383 1387.43,687.383 1387.99,687.383 1388.55,687.383 1389.11,687.383 1389.67,687.383 1390.23,687.383 1390.79,687.383 1391.35,687.383 1391.91,687.383 1392.47,687.383 1393.03,687.383 1393.58,687.383 1394.14,687.383 1394.7,687.383 1395.26,687.383 1395.82,687.383 1396.38,687.383 1396.94,687.383 1397.5,687.383 1398.06,687.383 1398.62,687.383 1399.18,687.383 1399.74,687.383 1400.3,687.383 1400.86,687.383 1401.41,687.383 1401.97,687.383 1402.53,687.383 1403.09,687.383 1403.65,687.383 1404.21,687.383 1404.77,687.383 1405.33,687.383 1405.89,687.383 1406.45,687.383 1407.01,687.383 1407.57,687.383 1408.13,687.383 1408.68,687.383 1409.24,687.383 1409.8,687.383 1410.36,687.383 1410.92,687.383 1411.48,687.383 1412.04,687.383 1412.6,687.383 1413.16,687.383 1413.72,687.383 1414.28,687.383 1414.84,687.383 1415.4,687.383 1415.95,687.383 1416.51,687.383 1417.07,687.383 1417.63,687.383 1418.19,687.383 1418.75,687.383 1419.31,687.383 1419.87,687.383 1420.43,687.383 1420.99,687.383 1421.55,687.383 1422.11,687.383 1422.67,687.383 1423.23,687.383 1423.78,687.383 1424.34,687.383 1424.9,687.383 1425.46,687.383 1426.02,687.383 1426.58,687.383 1427.14,687.383 1427.7,687.383 1428.26,687.383 1428.82,687.383 1429.38,687.383 1429.94,687.383 1430.5,687.383 1431.05,687.383 1431.61,687.383 1432.17,687.383 1432.73,687.383 1433.29,687.383 1433.85,687.383 1434.41,687.383 1434.97,687.383 1435.53,687.383 1436.09,687.383 1436.65,687.383 1437.21,687.383 1437.77,687.383 1438.33,687.383 1438.88,687.383 1439.44,687.383 1440,687.383 1440.56,687.383 1441.12,687.383 1441.68,687.383 1442.24,687.383 1442.8,687.383 1443.36,687.383 1443.92,687.383 1444.48,687.383 1445.04,687.383 1445.6,687.383 1446.15,687.383 1446.71,687.383 1447.27,687.383 1447.83,687.383 1448.39,687.383 1448.95,687.383 1449.51,687.383 1450.07,687.383 1450.63,687.383 1451.19,687.383 1451.75,687.383 1452.31,687.383 1452.87,687.383 1453.42,687.383 1453.98,687.383 1454.54,687.383 1455.1,687.383 1455.66,687.383 1456.22,687.383 1456.78,687.383 1457.34,687.383 1457.9,687.383 1458.46,687.383 1459.02,687.383 1459.58,687.383 1460.14,687.383 1460.7,687.383 1461.25,687.383 1461.81,687.383 1462.37,687.383 1462.93,687.383 1463.49,687.383 1464.05,687.383 1464.61,687.383 1465.17,687.383 1465.73,687.383 1466.29,687.383 1466.85,687.383 1467.41,687.383 1467.97,687.383 1468.52,687.383 1469.08,687.383 1469.64,687.383 1470.2,687.383 1470.76,687.383 1471.32,687.383 1471.88,687.383 1472.44,687.383 1473,687.383 1473.56,687.383 1474.12,687.383 1474.68,687.383 1475.24,687.383 1475.79,687.383 1476.35,687.383 1476.91,687.383 1477.47,687.383 1478.03,687.383 1478.59,687.383 1479.15,687.383 1479.71,687.383 1480.27,687.383 1480.83,687.383 1481.39,687.383 1481.95,687.383 1482.51,687.383 1483.07,687.383 1483.62,687.383 1484.18,687.383 1484.74,687.383 1485.3,687.383 1485.86,687.383 1486.42,687.383 1486.98,687.383 1487.54,687.383 1488.1,687.383 1488.66,687.383 1489.22,687.383 1489.78,687.383 1490.34,687.383 1490.89,687.383 1491.45,687.383 1492.01,687.383 1492.57,687.383 1493.13,687.383 1493.69,687.383 1494.25,687.383 1494.81,687.383 1495.37,687.383 1495.93,687.383 1496.49,687.383 1497.05,687.383 1497.61,687.383 1498.16,687.383 1498.72,687.383 1499.28,687.383 1499.84,687.383 1500.4,687.383 1500.96,687.383 1501.52,687.383 1502.08,687.383 1502.64,687.383 1503.2,687.383 1503.76,687.383 1504.32,687.383 1504.88,687.383 1505.44,687.383 1505.99,687.383 1506.55,687.383 1507.11,687.383 1507.67,687.383 1508.23,687.383 1508.79,687.383 1509.35,687.383 1509.91,687.383 1510.47,687.383 1511.03,687.383 1511.59,687.383 1512.15,687.383 1512.71,687.383 1513.26,687.383 1513.82,687.383 1514.38,687.383 1514.94,687.383 1515.5,687.383 1516.06,687.383 1516.62,687.383 1517.18,687.383 1517.74,687.383 1518.3,687.383 1518.86,687.383 1519.42,687.383 1519.98,687.383 1520.53,687.383 1521.09,687.383 1521.65,687.383 1522.21,687.383 1522.77,687.383 1523.33,687.383 1523.89,687.383 1524.45,687.383 1525.01,687.383 1525.57,687.383 1526.13,687.383 1526.69,687.383 1527.25,687.383 1527.81,687.383 1528.36,687.383 1528.92,687.383 1529.48,687.383 1530.04,687.383 1530.6,687.383 1531.16,687.383 1531.72,687.383 1532.28,687.383 1532.84,687.383 1533.4,687.383 1533.96,687.383 1534.52,687.383 1535.08,687.383 1535.63,687.383 1536.19,687.383 1536.75,687.383 1537.31,687.383 1537.87,687.383 1538.43,687.383 1538.99,687.383 1539.55,687.383 1540.11,687.383 1540.67,687.383 1541.23,687.383 1541.79,687.383 1542.35,687.383 1542.9,687.383 1543.46,687.383 1544.02,687.383 1544.58,687.383 1545.14,687.383 1545.7,687.383 1546.26,687.383 1546.82,687.383 1547.38,687.383 1547.94,687.383 1548.5,687.383 1549.06,687.383 1549.62,687.383 1550.18,687.383 1550.73,687.383 1551.29,687.383 1551.85,687.383 1552.41,687.383 1552.97,687.383 1553.53,687.383 1554.09,687.383 1554.65,687.383 1555.21,687.383 1555.77,687.383 1556.33,687.383 1556.89,687.383 1557.45,687.383 1558,687.383 1558.56,687.383 1559.12,687.383 1559.68,687.383 1560.24,687.383 1560.8,687.383 1561.36,687.383 1561.92,687.383 1562.48,687.383 1563.04,687.383 1563.6,687.383 1564.16,687.383 1564.72,687.383 1565.28,687.383 1565.83,687.383 1566.39,687.383 1566.95,687.383 1567.51,687.383 1568.07,687.383 1568.63,687.383 1569.19,687.383 1569.75,687.383 1570.31,687.383 1570.87,687.383 1571.43,687.383 1571.99,687.383 1572.55,687.383 1573.1,687.383 1573.66,687.383 1574.22,687.383 1574.78,687.383 1575.34,687.383 1575.9,687.383 1576.46,687.383 1577.02,687.383 1577.58,687.383 1578.14,687.383 1578.7,687.383 1579.26,687.383 1579.82,687.383 1580.37,687.383 1580.93,687.383 1581.49,687.383 1582.05,687.383 1582.61,687.383 1583.17,687.383 1583.73,687.383 1584.29,687.383 1584.85,687.383 1585.41,687.383 1585.97,687.383 1586.53,687.383 1587.09,687.383 1587.65,687.383 1588.2,687.383 1588.76,687.383 1589.32,687.383 1589.88,687.383 1590.44,687.383 1591,687.383 1591.56,687.383 1592.12,687.383 1592.68,687.383 1593.24,687.383 1593.8,687.383 1594.36,687.383 1594.92,687.383 1595.47,687.383 1596.03,687.383 1596.59,687.383 1597.15,687.383 1597.71,687.383 1598.27,687.383 1598.83,687.383 1599.39,687.383 1599.95,687.383 1600.51,687.383 1601.07,687.383 1601.63,687.383 1602.19,687.383 1602.74,687.383 1603.3,687.383 1603.86,687.383 1604.42,687.383 1604.98,687.383 1605.54,687.383 1606.1,687.383 1606.66,687.383 1607.22,687.383 1607.78,687.383 1608.34,687.383 1608.9,687.383 1609.46,687.383 1610.02,687.383 1610.57,687.383 1611.13,687.383 1611.69,687.383 1612.25,687.383 1612.81,687.383 1613.37,687.383 1613.93,687.383 1614.49,687.383 1615.05,687.383 1615.61,687.383 1616.17,687.383 1616.73,687.383 1617.29,687.383 1617.84,687.383 1618.4,687.383 1618.96,687.383 1619.52,687.383 1620.08,687.383 1620.64,687.383 1621.2,687.383 1621.76,687.383 1622.32,687.383 1622.88,687.383 1623.44,687.383 1624,687.383 1624.56,687.383 1625.11,687.383 1625.67,687.383 1626.23,687.383 1626.79,687.383 1627.35,687.383 1627.91,687.383 1628.47,687.383 1629.03,687.383 1629.59,687.383 1630.15,687.383 1630.71,687.383 1631.27,687.383 1631.83,687.383 1632.39,687.383 1632.94,687.383 1633.5,687.383 1634.06,687.383 1634.62,687.383 1635.18,687.383 1635.74,687.383 1636.3,687.383 1636.86,687.383 1637.42,687.383 1637.98,687.383 1638.54,687.383 1639.1,687.383 1639.66,687.383 1640.21,687.383 1640.77,687.383 1641.33,687.383 1641.89,687.383 1642.45,687.383 1643.01,687.383 1643.57,687.383 1644.13,687.383 1644.69,687.383 1645.25,687.383 1645.81,687.383 1646.37,687.383 1646.93,687.383 1647.48,687.383 1648.04,687.383 1648.6,687.383 1649.16,687.383 1649.72,687.383 1650.28,687.383 1650.84,687.383 1651.4,687.383 1651.96,687.383 1652.52,687.383 1653.08,687.383 1653.64,687.383 1654.2,687.383 1654.76,687.383 1655.31,687.383 1655.87,687.383 1656.43,687.383 1656.99,687.383 1657.55,687.383 1658.11,687.383 1658.67,687.383 1659.23,687.383 1659.79,687.383 1660.35,687.383 1660.91,687.383 1661.47,687.383 1662.03,687.383 1662.58,687.383 1663.14,687.383 1663.7,687.383 1664.26,687.383 1664.82,687.383 1665.38,687.383 1665.94,687.383 1666.5,687.383 1667.06,687.383 1667.62,687.383 1668.18,687.383 1668.74,687.383 1669.3,687.383 1669.85,687.383 1670.41,687.383 1670.97,687.383 1671.53,687.383 1672.09,687.383 1672.65,687.383 1673.21,687.383 1673.77,687.383 1674.33,687.383 1674.89,687.383 1675.45,687.383 1676.01,687.383 1676.57,687.383 1677.13,687.383 1677.68,687.383 1678.24,687.383 1678.8,687.383 1679.36,687.383 1679.92,687.383 1680.48,687.383 1681.04,687.383 1681.6,687.383 1682.16,687.383 1682.72,687.383 1683.28,687.383 1683.84,687.383 1684.4,687.383 1684.95,687.383 1685.51,687.383 1686.07,687.383 1686.63,687.383 1687.19,687.383 1687.75,687.383 1688.31,687.383 1688.87,687.383 1689.43,687.383 1689.99,687.383 1690.55,687.383 1691.11,687.383 1691.67,687.383 1692.23,687.383 1692.78,687.383 1693.34,687.383 1693.9,687.383 1694.46,687.383 1695.02,687.383 1695.58,687.383 1696.14,687.383 1696.7,687.383 1697.26,687.383 1697.82,687.383 1698.38,687.383 1698.94,687.383 1699.5,687.383 1700.05,687.383 1700.61,687.383 1701.17,687.383 1701.73,687.383 1702.29,687.383 1702.85,687.383 1703.41,687.383 1703.97,687.383 1704.53,687.383 1705.09,687.383 1705.65,687.383 1706.21,687.383 1706.77,687.383 1707.32,687.383 1707.88,687.383 1708.44,687.383 1709,687.383 1709.56,687.383 1710.12,687.383 1710.68,687.383 1711.24,687.383 1711.8,687.383 1712.36,687.383 1712.92,687.383 1713.48,687.383 1714.04,687.383 1714.6,687.383 1715.15,687.383 1715.71,687.383 1716.27,687.383 1716.83,687.383 1717.39,687.383 1717.95,687.383 1718.51,687.383 1719.07,687.383 1719.63,687.383 1720.19,687.383 1720.75,687.383 1721.31,687.383 1721.87,687.383 1722.42,687.383 1722.98,687.383 1723.54,687.383 1724.1,687.383 1724.66,687.383 1725.22,687.383 1725.78,687.383 1726.34,687.383 1726.9,687.383 1727.46,687.383 1728.02,687.383 1728.58,687.383 1729.14,687.383 1729.69,687.383 1730.25,687.383 1730.81,687.383 1731.37,687.383 1731.93,687.383 1732.49,687.383 1733.05,687.383 1733.61,687.383 1734.17,687.383 1734.73,687.383 1735.29,687.383 1735.85,687.383 1736.41,687.383 1736.97,687.383 1737.52,687.383 1738.08,687.383 1738.64,687.383 1739.2,687.383 1739.76,687.383 1740.32,687.383 1740.88,687.383 1741.44,687.383 1742,687.383 1742.56,687.383 1743.12,687.383 1743.68,687.383 1744.24,687.383 1744.79,687.383 1745.35,687.383 1745.91,687.383 1746.47,687.383 1747.03,687.383 1747.59,687.383 1748.15,687.383 1748.71,687.383 1749.27,687.383 1749.83,687.383 1750.39,687.383 1750.95,687.383 1751.51,687.383 1752.06,687.383 1752.62,687.383 1753.18,687.383 1753.74,687.383 1754.3,687.383 1754.86,687.383 1755.42,687.383 1755.98,687.383 1756.54,687.383 1757.1,687.383 1757.66,687.383 1758.22,687.383 1758.78,687.383 1759.34,687.383 1759.89,687.383 1760.45,687.383 1761.01,687.383 1761.57,687.383 1762.13,687.383 1762.69,687.383 1763.25,687.383 1763.81,687.383 1764.37,687.383 1764.93,687.383 1765.49,687.383 1766.05,687.383 1766.61,687.383 1767.16,687.383 1767.72,687.383 1768.28,687.383 1768.84,687.383 1769.4,687.383 1769.96,687.383 1770.52,687.383 1771.08,687.383 1771.64,687.383 1772.2,687.383 1772.76,687.383 1773.32,687.383 1773.88,687.383 1774.43,687.383 1774.99,687.383 1775.55,687.383 1776.11,687.383 1776.67,687.383 1777.23,687.383 1777.79,687.383 1778.35,687.383 1778.91,687.383 1779.47,687.383 1780.03,687.383 1780.59,687.383 1781.15,687.383 1781.71,687.383 1782.26,687.383 1782.82,687.383 1783.38,687.383 1783.94,687.383 1784.5,687.383 1785.06,687.383 1785.62,687.383 1786.18,687.383 1786.74,687.383 1787.3,687.383 1787.86,687.383 1788.42,687.383 1788.98,687.383 1789.53,687.383 1790.09,687.383 1790.65,687.383 1791.21,687.383 1791.77,687.383 1792.33,687.383 1792.89,687.383 1793.45,687.383 1794.01,687.383 1794.57,687.383 1795.13,687.383 1795.69,687.383 1796.25,687.383 1796.8,687.383 1797.36,687.383 1797.92,687.383 1798.48,687.383 1799.04,687.383 1799.6,687.383 1800.16,687.383 1800.72,687.383 1801.28,687.383 1801.84,687.383 1802.4,687.383 1802.96,687.383 1803.52,687.383 1804.08,687.383 1804.63,687.383 1805.19,687.383 1805.75,687.383 1806.31,687.383 1806.87,687.383 1807.43,687.383 1807.99,687.383 1808.55,687.383 1809.11,687.383 1809.67,687.383 1810.23,687.383 1810.79,687.383 1811.35,687.383 1811.9,687.383 1812.46,687.383 1813.02,687.383 1813.58,687.383 1814.14,687.383 1814.7,687.383 1815.26,687.383 1815.82,687.383 1816.38,687.383 1816.94,687.383 1817.5,687.383 1818.06,687.383 1818.62,687.383 1819.18,687.383 1819.73,687.383 1820.29,687.383 1820.85,687.383 1821.41,687.383 1821.97,687.383 1822.53,687.383 1823.09,687.383 1823.65,687.383 1824.21,687.383 1824.77,687.383 1825.33,687.383 1825.89,687.383 1826.45,687.383 1827,687.383 1827.56,687.383 1828.12,687.383 1828.68,687.383 1829.24,687.383 1829.8,687.383 1830.36,687.383 1830.92,687.383 1831.48,687.383 1832.04,687.383 1832.6,687.383 1833.16,687.383 1833.72,687.383 1834.27,687.383 1834.83,687.383 1835.39,687.383 1835.95,687.383 1836.51,687.383 1837.07,687.383 1837.63,687.383 1838.19,687.383 \"/>\n<path clip-path=\"url(#clip483)\" d=\"M720.247 684.31 L720.806 684.31 L721.365 684.31 L721.924 684.31 L722.484 684.31 L723.043 684.31 L723.602 684.31 L724.161 684.31 L724.721 684.31 L725.28 684.31 L725.839 684.31 L726.398 684.31 L726.958 684.31 L727.517 684.31 L728.076 684.31 L728.635 684.31 L729.195 684.31 L729.754 684.31 L730.313 684.31 L730.872 684.31 L731.432 684.31 L731.991 684.31 L732.55 684.31 L733.109 684.31 L733.669 684.31 L734.228 684.31 L734.787 684.31 L735.346 684.31 L735.906 684.31 L736.465 684.31 L737.024 684.31 L737.583 684.31 L738.143 684.31 L738.702 684.31 L739.261 684.31 L739.82 684.31 L740.38 684.31 L740.939 684.31 L741.498 684.31 L742.057 684.31 L742.617 684.31 L743.176 684.31 L743.735 684.31 L744.294 684.31 L744.854 684.31 L745.413 684.31 L745.972 684.31 L746.531 684.31 L747.091 684.31 L747.65 684.31 L748.209 684.31 L748.768 684.31 L749.328 684.31 L749.887 684.31 L750.446 684.31 L751.005 684.31 L751.565 684.31 L752.124 684.31 L752.683 684.31 L753.242 684.31 L753.802 684.31 L754.361 684.31 L754.92 684.31 L755.479 684.31 L756.039 684.31 L756.598 684.31 L757.157 684.31 L757.716 684.31 L758.276 684.31 L758.835 684.31 L759.394 684.31 L759.953 684.31 L760.513 684.31 L761.072 684.31 L761.631 684.31 L762.19 684.31 L762.75 684.31 L763.309 684.31 L763.868 684.31 L764.427 684.31 L764.987 684.31 L765.546 684.31 L766.105 684.31 L766.664 684.31 L767.224 684.31 L767.783 684.31 L768.342 684.31 L768.901 684.31 L769.461 684.31 L770.02 684.31 L770.579 684.31 L771.138 684.31 L771.698 684.31 L772.257 684.31 L772.816 684.31 L773.375 684.31 L773.935 684.31 L774.494 684.31 L775.053 684.31 L775.612 684.31 L776.172 684.31 L776.731 684.31 L777.29 684.31 L777.849 684.31 L778.409 684.31 L778.968 684.31 L779.527 684.31 L780.086 684.31 L780.646 684.31 L781.205 684.31 L781.764 684.31 L782.323 684.31 L782.883 684.31 L783.442 684.31 L784.001 684.31 L784.56 684.31 L785.12 684.31 L785.679 684.31 L786.238 684.31 L786.797 684.31 L787.357 684.31 L787.916 684.31 L788.475 684.31 L789.034 684.31 L789.594 684.31 L790.153 684.31 L790.712 684.31 L791.271 684.31 L791.831 684.31 L792.39 684.31 L792.949 684.31 L793.508 684.31 L794.068 684.31 L794.627 684.31 L795.186 684.31 L795.745 684.31 L796.305 684.31 L796.864 684.31 L797.423 684.31 L797.982 684.31 L798.542 684.31 L799.101 684.31 L799.66 684.31 L800.219 684.31 L800.779 684.31 L801.338 684.31 L801.897 684.31 L802.456 684.31 L803.016 684.31 L803.575 684.31 L804.134 684.31 L804.693 684.31 L805.253 684.31 L805.812 684.31 L806.371 684.31 L806.931 684.31 L807.49 684.31 L808.049 684.31 L808.608 684.31 L809.168 684.31 L809.727 684.31 L810.286 684.31 L810.845 684.31 L811.405 684.31 L811.964 684.31 L812.523 684.31 L813.082 684.31 L813.642 684.31 L814.201 684.31 L814.76 684.31 L815.319 684.31 L815.879 684.31 L816.438 684.31 L816.997 684.31 L817.556 684.31 L818.116 684.31 L818.675 684.31 L819.234 684.31 L819.793 684.31 L820.353 684.31 L820.912 684.31 L821.471 684.31 L822.03 684.31 L822.59 684.31 L823.149 684.31 L823.708 684.31 L824.267 684.31 L824.827 684.31 L825.386 684.31 L825.945 684.31 L826.504 684.31 L827.064 684.31 L827.623 684.31 L828.182 684.31 L828.741 684.31 L829.301 684.31 L829.86 684.31 L830.419 684.31 L830.978 684.31 L831.538 684.31 L832.097 684.31 L832.656 684.31 L833.215 684.31 L833.775 684.31 L834.334 684.31 L834.893 684.31 L835.452 684.31 L836.012 684.31 L836.571 684.31 L837.13 684.31 L837.689 684.31 L838.249 684.31 L838.808 684.31 L839.367 684.31 L839.926 684.31 L840.486 684.31 L841.045 684.31 L841.604 684.31 L842.163 684.31 L842.723 684.31 L843.282 684.31 L843.841 684.31 L844.4 684.31 L844.96 684.31 L845.519 684.31 L846.078 684.31 L846.637 684.31 L847.197 684.31 L847.756 684.31 L848.315 684.31 L848.874 684.31 L849.434 684.31 L849.993 684.31 L850.552 684.31 L851.111 684.31 L851.671 684.31 L852.23 684.31 L852.789 684.31 L853.348 684.31 L853.908 684.31 L854.467 684.31 L855.026 684.31 L855.585 684.31 L856.145 684.31 L856.704 684.31 L857.263 684.31 L857.822 684.31 L858.382 684.31 L858.941 684.31 L859.5 684.31 L860.059 684.31 L860.619 684.31 L861.178 684.31 L861.737 684.31 L862.296 684.31 L862.856 684.31 L863.415 684.31 L863.974 684.31 L864.533 684.31 L865.093 684.31 L865.652 684.31 L866.211 684.31 L866.77 684.31 L867.33 684.31 L867.889 684.31 L868.448 684.31 L869.007 684.31 L869.567 684.31 L870.126 684.31 L870.685 684.31 L871.244 684.31 L871.804 684.31 L872.363 684.31 L872.922 684.31 L873.481 684.31 L874.041 684.31 L874.6 684.31 L875.159 684.31 L875.718 684.31 L876.278 684.31 L876.837 684.31 L877.396 684.31 L877.955 684.31 L878.515 684.31 L879.074 684.31 L879.633 684.31 L880.192 684.31 L880.752 684.31 L881.311 684.31 L881.87 684.31 L882.429 684.31 L882.989 684.31 L883.548 684.31 L884.107 684.31 L884.666 684.31 L885.226 684.31 L885.785 684.31 L886.344 684.31 L886.903 684.31 L887.463 684.31 L888.022 684.31 L888.581 684.31 L889.14 684.31 L889.7 684.31 L890.259 684.31 L890.818 684.31 L891.377 684.31 L891.937 684.31 L892.496 684.31 L893.055 684.31 L893.614 684.31 L894.174 684.31 L894.733 684.31 L895.292 684.31 L895.851 684.31 L896.411 684.31 L896.97 684.31 L897.529 684.31 L898.088 684.31 L898.648 684.31 L899.207 684.31 L899.766 684.31 L900.325 684.31 L900.885 684.31 L901.444 684.31 L902.003 684.31 L902.562 684.31 L903.122 684.31 L903.681 684.31 L904.24 684.31 L904.799 684.31 L905.359 684.31 L905.918 684.31 L906.477 684.31 L907.036 684.31 L907.596 684.31 L908.155 684.31 L908.714 684.31 L909.273 684.31 L909.833 684.31 L910.392 684.31 L910.951 684.31 L911.51 684.31 L912.07 684.31 L912.629 684.31 L913.188 684.31 L913.747 684.31 L914.307 684.31 L914.866 684.31 L915.425 684.31 L915.984 684.31 L916.544 684.31 L917.103 684.31 L917.662 684.31 L918.221 684.31 L918.781 684.31 L919.34 684.31 L919.899 684.31 L920.458 684.31 L921.018 684.31 L921.577 684.31 L922.136 684.31 L922.695 684.31 L923.255 684.31 L923.814 684.31 L924.373 684.31 L924.932 684.31 L925.492 684.31 L926.051 684.31 L926.61 684.31 L927.169 684.31 L927.729 684.31 L928.288 684.31 L928.847 684.31 L929.406 684.31 L929.966 684.31 L930.525 684.31 L931.084 684.31 L931.644 684.31 L932.203 684.31 L932.762 684.31 L933.321 684.31 L933.881 684.31 L934.44 684.31 L934.999 684.31 L935.558 684.31 L936.118 684.31 L936.677 684.31 L937.236 684.31 L937.795 684.31 L938.355 684.31 L938.914 684.31 L939.473 684.31 L940.032 684.31 L940.592 684.31 L941.151 684.31 L941.71 684.31 L942.269 684.31 L942.829 684.31 L943.388 684.31 L943.947 684.31 L944.506 684.31 L945.066 684.31 L945.625 684.31 L946.184 684.31 L946.743 684.31 L947.303 684.31 L947.862 684.31 L948.421 684.31 L948.98 684.31 L949.54 684.31 L950.099 684.31 L950.658 684.31 L951.217 684.31 L951.777 684.31 L952.336 684.31 L952.895 684.31 L953.454 684.31 L954.014 684.31 L954.573 684.31 L955.132 684.31 L955.691 684.31 L956.251 684.31 L956.81 684.31 L957.369 684.31 L957.928 684.31 L958.488 684.31 L959.047 684.31 L959.606 684.31 L960.165 684.31 L960.725 684.31 L961.284 684.31 L961.843 684.31 L962.402 684.31 L962.962 684.31 L963.521 684.31 L964.08 684.31 L964.639 684.31 L965.199 684.31 L965.758 684.31 L966.317 684.31 L966.876 684.31 L967.436 684.31 L967.995 684.31 L968.554 684.31 L969.113 684.31 L969.673 684.31 L970.232 684.31 L970.791 684.31 L971.35 684.31 L971.91 684.31 L972.469 684.31 L973.028 684.31 L973.587 684.31 L974.147 684.31 L974.706 684.31 L975.265 684.31 L975.824 684.31 L976.384 684.31 L976.943 684.31 L977.502 684.31 L978.061 684.31 L978.621 684.31 L979.18 684.31 L979.739 684.31 L980.298 684.31 L980.858 684.31 L981.417 684.31 L981.976 684.31 L982.535 684.31 L983.095 684.31 L983.654 684.31 L984.213 684.31 L984.772 684.31 L985.332 684.31 L985.891 684.31 L986.45 684.31 L987.009 684.31 L987.569 684.31 L988.128 684.31 L988.687 684.31 L989.246 684.31 L989.806 684.31 L990.365 684.31 L990.924 684.31 L991.483 684.31 L992.043 684.31 L992.602 684.31 L993.161 684.31 L993.72 684.31 L994.28 684.31 L994.839 684.31 L995.398 684.31 L995.957 684.31 L996.517 684.31 L997.076 684.31 L997.635 684.31 L998.194 684.31 L998.754 684.31 L999.313 684.31 L999.872 684.31 L1000.43 684.31 L1000.99 684.31 L1001.55 684.31 L1002.11 684.31 L1002.67 684.31 L1003.23 684.31 L1003.79 684.31 L1004.35 684.31 L1004.91 684.31 L1005.46 684.31 L1006.02 684.31 L1006.58 684.31 L1007.14 684.31 L1007.7 684.31 L1008.26 684.31 L1008.82 684.31 L1009.38 684.31 L1009.94 684.31 L1010.5 684.31 L1011.06 684.31 L1011.62 684.31 L1012.18 684.31 L1012.73 684.31 L1013.29 684.31 L1013.85 684.31 L1014.41 684.31 L1014.97 684.31 L1015.53 684.31 L1016.09 684.31 L1016.65 684.31 L1017.21 684.31 L1017.77 684.31 L1018.33 684.31 L1018.89 684.31 L1019.45 684.31 L1020.01 684.31 L1020.56 684.31 L1021.12 684.31 L1021.68 684.31 L1022.24 684.31 L1022.8 684.31 L1023.36 684.31 L1023.92 684.31 L1024.48 684.31 L1025.04 684.31 L1025.6 684.31 L1026.16 684.31 L1026.72 684.31 L1027.28 684.31 L1027.83 684.31 L1028.39 684.31 L1028.95 684.31 L1029.51 684.31 L1030.07 684.31 L1030.63 684.31 L1031.19 684.31 L1031.75 684.31 L1032.31 684.31 L1032.87 684.31 L1033.43 684.31 L1033.99 684.31 L1034.55 684.31 L1035.1 684.31 L1035.66 684.31 L1036.22 684.31 L1036.78 684.31 L1037.34 684.31 L1037.9 684.31 L1038.46 684.31 L1039.02 684.31 L1039.58 684.31 L1040.14 684.31 L1040.7 684.31 L1041.26 684.31 L1041.82 684.31 L1042.38 684.31 L1042.93 684.31 L1043.49 684.31 L1044.05 684.31 L1044.61 684.31 L1045.17 684.31 L1045.73 684.31 L1046.29 684.31 L1046.85 684.31 L1047.41 684.31 L1047.97 684.31 L1048.53 684.31 L1049.09 684.31 L1049.65 684.31 L1050.2 684.31 L1050.76 684.31 L1051.32 684.31 L1051.88 684.31 L1052.44 684.31 L1053 684.31 L1053.56 684.31 L1054.12 684.31 L1054.68 684.31 L1055.24 684.31 L1055.8 684.31 L1056.36 684.31 L1056.92 684.31 L1057.48 684.31 L1058.03 684.31 L1058.59 684.31 L1059.15 684.31 L1059.71 684.31 L1060.27 684.31 L1060.83 684.31 L1061.39 684.31 L1061.95 684.31 L1062.51 684.31 L1063.07 684.31 L1063.63 684.31 L1064.19 684.31 L1064.75 684.31 L1065.3 684.31 L1065.86 684.31 L1066.42 684.31 L1066.98 684.31 L1067.54 684.31 L1068.1 684.31 L1068.66 684.31 L1069.22 684.31 L1069.78 684.31 L1070.34 684.31 L1070.9 684.31 L1071.46 684.31 L1072.02 684.31 L1072.57 684.31 L1073.13 684.31 L1073.69 684.31 L1074.25 684.31 L1074.81 684.31 L1075.37 684.31 L1075.93 684.31 L1076.49 684.31 L1077.05 684.31 L1077.61 684.31 L1078.17 684.31 L1078.73 684.31 L1079.29 684.31 L1079.85 684.31 L1080.4 684.31 L1080.96 684.31 L1081.52 684.31 L1082.08 684.31 L1082.64 684.31 L1083.2 684.31 L1083.76 684.31 L1084.32 684.31 L1084.88 684.31 L1085.44 684.31 L1086 684.31 L1086.56 684.31 L1087.12 684.31 L1087.67 684.31 L1088.23 684.31 L1088.79 684.31 L1089.35 684.31 L1089.91 684.31 L1090.47 684.31 L1091.03 684.31 L1091.59 684.31 L1092.15 684.31 L1092.71 684.31 L1093.27 684.31 L1093.83 684.31 L1094.39 684.31 L1094.94 684.31 L1095.5 684.31 L1096.06 684.31 L1096.62 684.31 L1097.18 684.31 L1097.74 684.31 L1098.3 684.31 L1098.86 684.31 L1099.42 684.31 L1099.98 684.31 L1100.54 684.31 L1101.1 684.31 L1101.66 684.31 L1102.22 684.31 L1102.77 684.31 L1103.33 684.31 L1103.89 684.31 L1104.45 684.31 L1105.01 684.31 L1105.57 684.31 L1106.13 684.31 L1106.69 684.31 L1107.25 684.31 L1107.81 684.31 L1108.37 684.31 L1108.93 684.31 L1109.49 684.31 L1110.04 684.31 L1110.6 684.31 L1111.16 684.31 L1111.72 684.31 L1112.28 684.31 L1112.84 684.31 L1113.4 684.31 L1113.96 684.31 L1114.52 684.31 L1115.08 684.31 L1115.64 684.31 L1116.2 684.31 L1116.76 684.31 L1117.31 684.31 L1117.87 684.31 L1118.43 684.31 L1118.99 684.31 L1119.55 684.31 L1120.11 684.31 L1120.67 684.31 L1121.23 684.31 L1121.79 684.31 L1122.35 684.31 L1122.91 684.31 L1123.47 684.31 L1124.03 684.31 L1124.59 684.31 L1125.14 684.31 L1125.7 684.31 L1126.26 684.31 L1126.82 684.31 L1127.38 684.31 L1127.94 684.31 L1128.5 684.31 L1129.06 684.31 L1129.62 684.31 L1130.18 684.31 L1130.74 684.31 L1131.3 684.31 L1131.86 684.31 L1132.41 684.31 L1132.97 684.31 L1133.53 684.31 L1134.09 684.31 L1134.65 684.31 L1135.21 684.31 L1135.77 684.31 L1136.33 684.31 L1136.89 684.31 L1137.45 684.31 L1138.01 684.31 L1138.57 684.31 L1139.13 684.31 L1139.68 684.31 L1140.24 684.31 L1140.8 684.31 L1141.36 684.31 L1141.92 684.31 L1142.48 684.31 L1143.04 684.31 L1143.6 684.31 L1144.16 684.31 L1144.72 684.31 L1145.28 684.31 L1145.84 684.31 L1146.4 684.31 L1146.96 684.31 L1147.51 684.31 L1148.07 684.31 L1148.63 684.31 L1149.19 684.31 L1149.75 684.31 L1150.31 684.31 L1150.87 684.31 L1151.43 684.31 L1151.99 684.31 L1152.55 684.31 L1153.11 684.31 L1153.67 684.31 L1154.23 684.31 L1154.78 684.31 L1155.34 684.31 L1155.9 684.31 L1156.46 684.31 L1157.02 684.31 L1157.58 684.31 L1158.14 684.31 L1158.7 684.31 L1159.26 684.31 L1159.82 684.31 L1160.38 684.31 L1160.94 684.31 L1161.5 684.31 L1162.05 684.31 L1162.61 684.31 L1163.17 684.31 L1163.73 684.31 L1164.29 684.31 L1164.85 684.31 L1165.41 684.31 L1165.97 684.31 L1166.53 684.31 L1167.09 684.31 L1167.65 684.31 L1168.21 684.31 L1168.77 684.31 L1169.33 684.31 L1169.88 684.31 L1170.44 684.31 L1171 684.31 L1171.56 684.31 L1172.12 684.31 L1172.68 684.31 L1173.24 684.31 L1173.8 684.31 L1174.36 684.31 L1174.92 684.31 L1175.48 684.31 L1176.04 684.31 L1176.6 684.31 L1177.15 684.31 L1177.71 684.31 L1178.27 684.31 L1178.83 684.31 L1179.39 684.31 L1179.95 684.31 L1180.51 684.31 L1181.07 684.31 L1181.63 684.31 L1182.19 684.31 L1182.75 684.31 L1183.31 684.31 L1183.87 684.31 L1184.43 684.31 L1184.98 684.31 L1185.54 684.31 L1186.1 684.31 L1186.66 684.31 L1187.22 684.31 L1187.78 684.31 L1188.34 684.31 L1188.9 684.31 L1189.46 684.31 L1190.02 684.31 L1190.58 684.31 L1191.14 684.31 L1191.7 684.31 L1192.25 684.31 L1192.81 684.31 L1193.37 684.31 L1193.93 684.31 L1194.49 684.31 L1195.05 684.31 L1195.61 684.31 L1196.17 684.31 L1196.73 684.31 L1197.29 684.31 L1197.85 684.31 L1198.41 684.31 L1198.97 684.31 L1199.52 684.31 L1200.08 684.31 L1200.64 684.31 L1201.2 684.31 L1201.76 684.31 L1202.32 684.31 L1202.88 684.31 L1203.44 684.31 L1204 684.31 L1204.56 684.31 L1205.12 684.31 L1205.68 684.31 L1206.24 684.31 L1206.8 684.31 L1207.35 684.31 L1207.91 684.31 L1208.47 684.31 L1209.03 684.31 L1209.59 684.31 L1210.15 684.31 L1210.71 684.31 L1211.27 684.31 L1211.83 684.31 L1212.39 684.31 L1212.95 684.31 L1213.51 684.31 L1214.07 684.31 L1214.62 684.31 L1215.18 684.31 L1215.74 684.31 L1216.3 684.31 L1216.86 684.31 L1217.42 684.31 L1217.98 684.31 L1218.54 684.31 L1219.1 684.31 L1219.66 684.31 L1220.22 684.31 L1220.78 684.31 L1221.34 684.31 L1221.89 684.31 L1222.45 684.31 L1223.01 684.31 L1223.57 684.31 L1224.13 684.31 L1224.69 684.31 L1225.25 684.31 L1225.81 684.31 L1226.37 684.31 L1226.93 684.31 L1227.49 684.31 L1228.05 684.31 L1228.61 684.31 L1229.17 684.31 L1229.72 684.31 L1230.28 684.31 L1230.84 684.31 L1231.4 684.31 L1231.96 684.31 L1232.52 684.31 L1233.08 684.31 L1233.64 684.31 L1234.2 684.31 L1234.76 684.31 L1235.32 684.31 L1235.88 684.31 L1236.44 684.31 L1236.99 684.31 L1237.55 684.31 L1238.11 684.31 L1238.67 684.31 L1239.23 684.31 L1239.79 684.31 L1240.35 684.31 L1240.91 684.31 L1241.47 684.31 L1242.03 684.31 L1242.59 684.31 L1243.15 684.31 L1243.71 684.31 L1244.26 684.31 L1244.82 684.31 L1245.38 684.31 L1245.94 684.31 L1246.5 684.31 L1247.06 684.31 L1247.62 684.31 L1248.18 684.31 L1248.74 684.31 L1249.3 684.31 L1249.86 684.31 L1250.42 684.31 L1250.98 684.31 L1251.54 684.31 L1252.09 684.31 L1252.65 684.31 L1253.21 684.31 L1253.77 684.31 L1254.33 684.31 L1254.89 684.31 L1255.45 684.31 L1256.01 684.31 L1256.57 684.31 L1257.13 684.31 L1257.69 684.31 L1258.25 684.31 L1258.81 684.31 L1259.36 684.31 L1259.92 684.31 L1260.48 684.31 L1261.04 684.31 L1261.6 684.31 L1262.16 684.31 L1262.72 684.31 L1263.28 684.31 L1263.84 684.31 L1264.4 684.31 L1264.96 684.31 L1265.52 684.31 L1266.08 684.31 L1266.63 684.31 L1267.19 684.31 L1267.75 684.31 L1268.31 684.31 L1268.87 684.31 L1269.43 684.31 L1269.99 684.31 L1270.55 684.31 L1271.11 684.31 L1271.67 684.31 L1272.23 684.31 L1272.79 684.31 L1273.35 684.31 L1273.91 684.31 L1274.46 684.31 L1275.02 684.31 L1275.58 684.31 L1276.14 684.31 L1276.7 684.31 L1277.26 684.31 L1277.82 684.31 L1278.38 684.31 L1278.94 684.31 L1279.5 684.31 L1280.06 684.31 L1280.62 684.31 L1281.18 684.31 L1281.73 684.31 L1282.29 684.31 L1282.85 684.31 L1283.41 684.31 L1283.97 684.31 L1284.53 684.31 L1285.09 684.31 L1285.65 684.31 L1286.21 684.31 L1286.77 684.31 L1287.33 684.31 L1287.89 684.31 L1288.45 684.31 L1289 684.31 L1289.56 684.31 L1290.12 684.31 L1290.68 684.31 L1291.24 684.31 L1291.8 684.31 L1292.36 684.31 L1292.92 684.31 L1293.48 684.31 L1294.04 684.31 L1294.6 684.31 L1295.16 684.31 L1295.72 684.31 L1296.28 684.31 L1296.83 684.31 L1297.39 684.31 L1297.95 684.31 L1298.51 684.31 L1299.07 684.31 L1299.63 684.31 L1300.19 684.31 L1300.75 684.31 L1301.31 684.31 L1301.87 684.31 L1302.43 684.31 L1302.99 684.31 L1303.55 684.31 L1304.1 684.31 L1304.66 684.31 L1305.22 684.31 L1305.78 684.31 L1306.34 684.31 L1306.9 684.31 L1307.46 684.31 L1308.02 684.31 L1308.58 684.31 L1309.14 684.31 L1309.7 684.31 L1310.26 684.31 L1310.82 684.31 L1311.38 684.31 L1311.93 684.31 L1312.49 684.31 L1313.05 684.31 L1313.61 684.31 L1314.17 684.31 L1314.73 684.31 L1315.29 684.31 L1315.85 684.31 L1316.41 684.31 L1316.97 684.31 L1317.53 684.31 L1318.09 684.31 L1318.65 684.31 L1319.2 684.31 L1319.76 684.31 L1320.32 684.31 L1320.88 684.31 L1321.44 684.31 L1322 684.31 L1322.56 684.31 L1323.12 684.31 L1323.68 684.31 L1324.24 684.31 L1324.8 684.31 L1325.36 684.31 L1325.92 684.31 L1326.47 684.31 L1327.03 684.31 L1327.59 684.31 L1328.15 684.31 L1328.71 684.31 L1329.27 684.31 L1329.83 684.31 L1330.39 684.31 L1330.95 684.31 L1331.51 684.31 L1332.07 684.31 L1332.63 684.31 L1333.19 684.31 L1333.75 684.31 L1334.3 684.31 L1334.86 684.31 L1335.42 684.31 L1335.98 684.31 L1336.54 684.31 L1337.1 684.31 L1337.66 684.31 L1338.22 684.31 L1338.78 684.31 L1339.34 684.31 L1339.9 684.31 L1340.46 684.31 L1341.02 684.31 L1341.57 684.31 L1342.13 684.31 L1342.69 684.31 L1343.25 684.31 L1343.81 684.31 L1344.37 684.31 L1344.93 684.31 L1345.49 684.31 L1346.05 684.31 L1346.61 684.31 L1347.17 684.31 L1347.73 684.31 L1348.29 684.31 L1348.84 684.31 L1349.4 684.31 L1349.96 684.31 L1350.52 684.31 L1351.08 684.31 L1351.64 684.31 L1352.2 684.31 L1352.76 684.31 L1353.32 684.31 L1353.88 684.31 L1354.44 684.31 L1355 684.31 L1355.56 684.31 L1356.12 684.31 L1356.67 684.31 L1357.23 684.31 L1357.79 684.31 L1358.35 684.31 L1358.91 684.31 L1359.47 684.31 L1360.03 684.31 L1360.59 684.31 L1361.15 684.31 L1361.71 684.31 L1362.27 684.31 L1362.83 684.31 L1363.39 684.31 L1363.94 684.31 L1364.5 684.31 L1365.06 684.31 L1365.62 684.31 L1366.18 684.31 L1366.74 684.31 L1367.3 684.31 L1367.86 684.31 L1368.42 684.31 L1368.98 684.31 L1369.54 684.31 L1370.1 684.31 L1370.66 684.31 L1371.21 684.31 L1371.77 684.31 L1372.33 684.31 L1372.89 684.31 L1373.45 684.31 L1374.01 684.31 L1374.57 684.31 L1375.13 684.31 L1375.69 684.31 L1376.25 684.31 L1376.81 684.31 L1377.37 684.31 L1377.93 684.31 L1378.49 684.31 L1379.04 684.31 L1379.6 684.31 L1380.16 684.31 L1380.72 684.31 L1381.28 684.31 L1381.84 684.31 L1382.4 684.31 L1382.96 684.31 L1383.52 684.31 L1384.08 684.31 L1384.64 684.31 L1385.2 684.31 L1385.76 684.31 L1386.31 684.31 L1386.87 684.31 L1387.43 684.31 L1387.99 684.31 L1388.55 684.31 L1389.11 684.31 L1389.67 684.31 L1390.23 684.31 L1390.79 684.31 L1391.35 684.31 L1391.91 684.31 L1392.47 684.31 L1393.03 684.31 L1393.58 684.31 L1394.14 684.31 L1394.7 684.31 L1395.26 684.31 L1395.82 684.31 L1396.38 684.31 L1396.94 684.31 L1397.5 684.31 L1398.06 684.31 L1398.62 684.31 L1399.18 684.31 L1399.74 684.31 L1400.3 684.31 L1400.86 684.31 L1401.41 684.31 L1401.97 684.31 L1402.53 684.31 L1403.09 684.31 L1403.65 684.31 L1404.21 684.31 L1404.77 684.31 L1405.33 684.31 L1405.89 684.31 L1406.45 684.31 L1407.01 684.31 L1407.57 684.31 L1408.13 684.31 L1408.68 684.31 L1409.24 684.31 L1409.8 684.31 L1410.36 684.31 L1410.92 684.31 L1411.48 684.31 L1412.04 684.31 L1412.6 684.31 L1413.16 684.31 L1413.72 684.31 L1414.28 684.31 L1414.84 684.31 L1415.4 684.31 L1415.95 684.31 L1416.51 684.31 L1417.07 684.31 L1417.63 684.31 L1418.19 684.31 L1418.75 684.31 L1419.31 684.31 L1419.87 684.31 L1420.43 684.31 L1420.99 684.31 L1421.55 684.31 L1422.11 684.31 L1422.67 684.31 L1423.23 684.31 L1423.78 684.31 L1424.34 684.31 L1424.9 684.31 L1425.46 684.31 L1426.02 684.31 L1426.58 684.31 L1427.14 684.31 L1427.7 684.31 L1428.26 684.31 L1428.82 684.31 L1429.38 684.31 L1429.94 684.31 L1430.5 684.31 L1431.05 684.31 L1431.61 684.31 L1432.17 684.31 L1432.73 684.31 L1433.29 684.31 L1433.85 684.31 L1434.41 684.31 L1434.97 684.31 L1435.53 684.31 L1436.09 684.31 L1436.65 684.31 L1437.21 684.31 L1437.77 684.31 L1438.33 684.31 L1438.88 684.31 L1439.44 684.31 L1440 684.31 L1440.56 684.31 L1441.12 684.31 L1441.68 684.31 L1442.24 684.31 L1442.8 684.31 L1443.36 684.31 L1443.92 684.31 L1444.48 684.31 L1445.04 684.31 L1445.6 684.31 L1446.15 684.31 L1446.71 684.31 L1447.27 684.31 L1447.83 684.31 L1448.39 684.31 L1448.95 684.31 L1449.51 684.31 L1450.07 684.31 L1450.63 684.31 L1451.19 684.31 L1451.75 684.31 L1452.31 684.31 L1452.87 684.31 L1453.42 684.31 L1453.98 684.31 L1454.54 684.31 L1455.1 684.31 L1455.66 684.31 L1456.22 684.31 L1456.78 684.31 L1457.34 684.31 L1457.9 684.31 L1458.46 684.31 L1459.02 684.31 L1459.58 684.31 L1460.14 684.31 L1460.7 684.31 L1461.25 684.31 L1461.81 684.31 L1462.37 684.31 L1462.93 684.31 L1463.49 684.31 L1464.05 684.31 L1464.61 684.31 L1465.17 684.31 L1465.73 684.31 L1466.29 684.31 L1466.85 684.31 L1467.41 684.31 L1467.97 684.31 L1468.52 684.31 L1469.08 684.31 L1469.64 684.31 L1470.2 684.31 L1470.76 684.31 L1471.32 684.31 L1471.88 684.31 L1472.44 684.31 L1473 684.31 L1473.56 684.31 L1474.12 684.31 L1474.68 684.31 L1475.24 684.31 L1475.79 684.31 L1476.35 684.31 L1476.91 684.31 L1477.47 684.31 L1478.03 684.31 L1478.59 684.31 L1479.15 684.31 L1479.71 684.31 L1480.27 684.31 L1480.83 684.31 L1481.39 684.31 L1481.95 684.31 L1482.51 684.31 L1483.07 684.31 L1483.62 684.31 L1484.18 684.31 L1484.74 684.31 L1485.3 684.31 L1485.86 684.31 L1486.42 684.31 L1486.98 684.31 L1487.54 684.31 L1488.1 684.31 L1488.66 684.31 L1489.22 684.31 L1489.78 684.31 L1490.34 684.31 L1490.89 684.31 L1491.45 684.31 L1492.01 684.31 L1492.57 684.31 L1493.13 684.31 L1493.69 684.31 L1494.25 684.31 L1494.81 684.31 L1495.37 684.31 L1495.93 684.31 L1496.49 684.31 L1497.05 684.31 L1497.61 684.31 L1498.16 684.31 L1498.72 684.31 L1499.28 684.31 L1499.84 684.31 L1500.4 684.31 L1500.96 684.31 L1501.52 684.31 L1502.08 684.31 L1502.64 684.31 L1503.2 684.31 L1503.76 684.31 L1504.32 684.31 L1504.88 684.31 L1505.44 684.31 L1505.99 684.31 L1506.55 684.31 L1507.11 684.31 L1507.67 684.31 L1508.23 684.31 L1508.79 684.31 L1509.35 684.31 L1509.91 684.31 L1510.47 684.31 L1511.03 684.31 L1511.59 684.31 L1512.15 684.31 L1512.71 684.31 L1513.26 684.31 L1513.82 684.31 L1514.38 684.31 L1514.94 684.31 L1515.5 684.31 L1516.06 684.31 L1516.62 684.31 L1517.18 684.31 L1517.74 684.31 L1518.3 684.31 L1518.86 684.31 L1519.42 684.31 L1519.98 684.31 L1520.53 684.31 L1521.09 684.31 L1521.65 684.31 L1522.21 684.31 L1522.77 684.31 L1523.33 684.31 L1523.89 684.31 L1524.45 684.31 L1525.01 684.31 L1525.57 684.31 L1526.13 684.31 L1526.69 684.31 L1527.25 684.31 L1527.81 684.31 L1528.36 684.31 L1528.92 684.31 L1529.48 684.31 L1530.04 684.31 L1530.6 684.31 L1531.16 684.31 L1531.72 684.31 L1532.28 684.31 L1532.84 684.31 L1533.4 684.31 L1533.96 684.31 L1534.52 684.31 L1535.08 684.31 L1535.63 684.31 L1536.19 684.31 L1536.75 684.31 L1537.31 684.31 L1537.87 684.31 L1538.43 684.31 L1538.99 684.31 L1539.55 684.31 L1540.11 684.31 L1540.67 684.31 L1541.23 684.31 L1541.79 684.31 L1542.35 684.31 L1542.9 684.31 L1543.46 684.31 L1544.02 684.31 L1544.58 684.31 L1545.14 684.31 L1545.7 684.31 L1546.26 684.31 L1546.82 684.31 L1547.38 684.31 L1547.94 684.31 L1548.5 684.31 L1549.06 684.31 L1549.62 684.31 L1550.18 684.31 L1550.73 684.31 L1551.29 684.31 L1551.85 684.31 L1552.41 684.31 L1552.97 684.31 L1553.53 684.31 L1554.09 684.31 L1554.65 684.31 L1555.21 684.31 L1555.77 684.31 L1556.33 684.31 L1556.89 684.31 L1557.45 684.31 L1558 684.31 L1558.56 684.31 L1559.12 684.31 L1559.68 684.31 L1560.24 684.31 L1560.8 684.31 L1561.36 684.31 L1561.92 684.31 L1562.48 684.31 L1563.04 684.31 L1563.6 684.31 L1564.16 684.31 L1564.72 684.31 L1565.28 684.31 L1565.83 684.31 L1566.39 684.31 L1566.95 684.31 L1567.51 684.31 L1568.07 684.31 L1568.63 684.31 L1569.19 684.31 L1569.75 684.31 L1570.31 684.31 L1570.87 684.31 L1571.43 684.31 L1571.99 684.31 L1572.55 684.31 L1573.1 684.31 L1573.66 684.31 L1574.22 684.31 L1574.78 684.31 L1575.34 684.31 L1575.9 684.31 L1576.46 684.31 L1577.02 684.31 L1577.58 684.31 L1578.14 684.31 L1578.7 684.31 L1579.26 684.31 L1579.82 684.31 L1580.37 684.31 L1580.93 684.31 L1581.49 684.31 L1582.05 684.31 L1582.61 684.31 L1583.17 684.31 L1583.73 684.31 L1584.29 684.31 L1584.85 684.31 L1585.41 684.31 L1585.97 684.31 L1586.53 684.31 L1587.09 684.31 L1587.65 684.31 L1588.2 684.31 L1588.76 684.31 L1589.32 684.31 L1589.88 684.31 L1590.44 684.31 L1591 684.31 L1591.56 684.31 L1592.12 684.31 L1592.68 684.31 L1593.24 684.31 L1593.8 684.31 L1594.36 684.31 L1594.92 684.31 L1595.47 684.31 L1596.03 684.31 L1596.59 684.31 L1597.15 684.31 L1597.71 684.31 L1598.27 684.31 L1598.83 684.31 L1599.39 684.31 L1599.95 684.31 L1600.51 684.31 L1601.07 684.31 L1601.63 684.31 L1602.19 684.31 L1602.74 684.31 L1603.3 684.31 L1603.86 684.31 L1604.42 684.31 L1604.98 684.31 L1605.54 684.31 L1606.1 684.31 L1606.66 684.31 L1607.22 684.31 L1607.78 684.31 L1608.34 684.31 L1608.9 684.31 L1609.46 684.31 L1610.02 684.31 L1610.57 684.31 L1611.13 684.31 L1611.69 684.31 L1612.25 684.31 L1612.81 684.31 L1613.37 684.31 L1613.93 684.31 L1614.49 684.31 L1615.05 684.31 L1615.61 684.31 L1616.17 684.31 L1616.73 684.31 L1617.29 684.31 L1617.84 684.31 L1618.4 684.31 L1618.96 684.31 L1619.52 684.31 L1620.08 684.31 L1620.64 684.31 L1621.2 684.31 L1621.76 684.31 L1622.32 684.31 L1622.88 684.31 L1623.44 684.31 L1624 684.31 L1624.56 684.31 L1625.11 684.31 L1625.67 684.31 L1626.23 684.31 L1626.79 684.31 L1627.35 684.31 L1627.91 684.31 L1628.47 684.31 L1629.03 684.31 L1629.59 684.31 L1630.15 684.31 L1630.71 684.31 L1631.27 684.31 L1631.83 684.31 L1632.39 684.31 L1632.94 684.31 L1633.5 684.31 L1634.06 684.31 L1634.62 684.31 L1635.18 684.31 L1635.74 684.31 L1636.3 684.31 L1636.86 684.31 L1637.42 684.31 L1637.98 684.31 L1638.54 684.31 L1639.1 684.31 L1639.66 684.31 L1640.21 684.31 L1640.77 684.31 L1641.33 684.31 L1641.89 684.31 L1642.45 684.31 L1643.01 684.31 L1643.57 684.31 L1644.13 684.31 L1644.69 684.31 L1645.25 684.31 L1645.81 684.31 L1646.37 684.31 L1646.93 684.31 L1647.48 684.31 L1648.04 684.31 L1648.6 684.31 L1649.16 684.31 L1649.72 684.31 L1650.28 684.31 L1650.84 684.31 L1651.4 684.31 L1651.96 684.31 L1652.52 684.31 L1653.08 684.31 L1653.64 684.31 L1654.2 684.31 L1654.76 684.31 L1655.31 684.31 L1655.87 684.31 L1656.43 684.31 L1656.99 684.31 L1657.55 684.31 L1658.11 684.31 L1658.67 684.31 L1659.23 684.31 L1659.79 684.31 L1660.35 684.31 L1660.91 684.31 L1661.47 684.31 L1662.03 684.31 L1662.58 684.31 L1663.14 684.31 L1663.7 684.31 L1664.26 684.31 L1664.82 684.31 L1665.38 684.31 L1665.94 684.31 L1666.5 684.31 L1667.06 684.31 L1667.62 684.31 L1668.18 684.31 L1668.74 684.31 L1669.3 684.31 L1669.85 684.31 L1670.41 684.31 L1670.97 684.31 L1671.53 684.31 L1672.09 684.31 L1672.65 684.31 L1673.21 684.31 L1673.77 684.31 L1674.33 684.31 L1674.89 684.31 L1675.45 684.31 L1676.01 684.31 L1676.57 684.31 L1677.13 684.31 L1677.68 684.31 L1678.24 684.31 L1678.8 684.31 L1679.36 684.31 L1679.92 684.31 L1680.48 684.31 L1681.04 684.31 L1681.6 684.31 L1682.16 684.31 L1682.72 684.31 L1683.28 684.31 L1683.84 684.31 L1684.4 684.31 L1684.95 684.31 L1685.51 684.31 L1686.07 684.31 L1686.63 684.31 L1687.19 684.31 L1687.75 684.31 L1688.31 684.31 L1688.87 684.31 L1689.43 684.31 L1689.99 684.31 L1690.55 684.31 L1691.11 684.31 L1691.67 684.31 L1692.23 684.31 L1692.78 684.31 L1693.34 684.31 L1693.9 684.31 L1694.46 684.31 L1695.02 684.31 L1695.58 684.31 L1696.14 684.31 L1696.7 684.31 L1697.26 684.31 L1697.82 684.31 L1698.38 684.31 L1698.94 684.31 L1699.5 684.31 L1700.05 684.31 L1700.61 684.31 L1701.17 684.31 L1701.73 684.31 L1702.29 684.31 L1702.85 684.31 L1703.41 684.31 L1703.97 684.31 L1704.53 684.31 L1705.09 684.31 L1705.65 684.31 L1706.21 684.31 L1706.77 684.31 L1707.32 684.31 L1707.88 684.31 L1708.44 684.31 L1709 684.31 L1709.56 684.31 L1710.12 684.31 L1710.68 684.31 L1711.24 684.31 L1711.8 684.31 L1712.36 684.31 L1712.92 684.31 L1713.48 684.31 L1714.04 684.31 L1714.6 684.31 L1715.15 684.31 L1715.71 684.31 L1716.27 684.31 L1716.83 684.31 L1717.39 684.31 L1717.95 684.31 L1718.51 684.31 L1719.07 684.31 L1719.63 684.31 L1720.19 684.31 L1720.75 684.31 L1721.31 684.31 L1721.87 684.31 L1722.42 684.31 L1722.98 684.31 L1723.54 684.31 L1724.1 684.31 L1724.66 684.31 L1725.22 684.31 L1725.78 684.31 L1726.34 684.31 L1726.9 684.31 L1727.46 684.31 L1728.02 684.31 L1728.58 684.31 L1729.14 684.31 L1729.69 684.31 L1730.25 684.31 L1730.81 684.31 L1731.37 684.31 L1731.93 684.31 L1732.49 684.31 L1733.05 684.31 L1733.61 684.31 L1734.17 684.31 L1734.73 684.31 L1735.29 684.31 L1735.85 684.31 L1736.41 684.31 L1736.97 684.31 L1737.52 684.31 L1738.08 684.31 L1738.64 684.31 L1739.2 684.31 L1739.76 684.31 L1740.32 684.31 L1740.88 684.31 L1741.44 684.31 L1742 684.31 L1742.56 684.31 L1743.12 684.31 L1743.68 684.31 L1744.24 684.31 L1744.79 684.31 L1745.35 684.31 L1745.91 684.31 L1746.47 684.31 L1747.03 684.31 L1747.59 684.31 L1748.15 684.31 L1748.71 684.31 L1749.27 684.31 L1749.83 684.31 L1750.39 684.31 L1750.95 684.31 L1751.51 684.31 L1752.06 684.31 L1752.62 684.31 L1753.18 684.31 L1753.74 684.31 L1754.3 684.31 L1754.86 684.31 L1755.42 684.31 L1755.98 684.31 L1756.54 684.31 L1757.1 684.31 L1757.66 684.31 L1758.22 684.31 L1758.78 684.31 L1759.34 684.31 L1759.89 684.31 L1760.45 684.31 L1761.01 684.31 L1761.57 684.31 L1762.13 684.31 L1762.69 684.31 L1763.25 684.31 L1763.81 684.31 L1764.37 684.31 L1764.93 684.31 L1765.49 684.31 L1766.05 684.31 L1766.61 684.31 L1767.16 684.31 L1767.72 684.31 L1768.28 684.31 L1768.84 684.31 L1769.4 684.31 L1769.96 684.31 L1770.52 684.31 L1771.08 684.31 L1771.64 684.31 L1772.2 684.31 L1772.76 684.31 L1773.32 684.31 L1773.88 684.31 L1774.43 684.31 L1774.99 684.31 L1775.55 684.31 L1776.11 684.31 L1776.67 684.31 L1777.23 684.31 L1777.79 684.31 L1778.35 684.31 L1778.91 684.31 L1779.47 684.31 L1780.03 684.31 L1780.59 684.31 L1781.15 684.31 L1781.71 684.31 L1782.26 684.31 L1782.82 684.31 L1783.38 684.31 L1783.94 684.31 L1784.5 684.31 L1785.06 684.31 L1785.62 684.31 L1786.18 684.31 L1786.74 684.31 L1787.3 684.31 L1787.86 684.31 L1788.42 684.31 L1788.98 684.31 L1789.53 684.31 L1790.09 684.31 L1790.65 684.31 L1791.21 684.31 L1791.77 684.31 L1792.33 684.31 L1792.89 684.31 L1793.45 684.31 L1794.01 684.31 L1794.57 684.31 L1795.13 684.31 L1795.69 684.31 L1796.25 684.31 L1796.8 684.31 L1797.36 684.31 L1797.92 684.31 L1798.48 684.31 L1799.04 684.31 L1799.6 684.31 L1800.16 684.31 L1800.72 684.31 L1801.28 684.31 L1801.84 684.31 L1802.4 684.31 L1802.96 684.31 L1803.52 684.31 L1804.08 684.31 L1804.63 684.31 L1805.19 684.31 L1805.75 684.31 L1806.31 684.31 L1806.87 684.31 L1807.43 684.31 L1807.99 684.31 L1808.55 684.31 L1809.11 684.31 L1809.67 684.31 L1810.23 684.31 L1810.79 684.31 L1811.35 684.31 L1811.9 684.31 L1812.46 684.31 L1813.02 684.31 L1813.58 684.31 L1814.14 684.31 L1814.7 684.31 L1815.26 684.31 L1815.82 684.31 L1816.38 684.31 L1816.94 684.31 L1817.5 684.31 L1818.06 684.31 L1818.62 684.31 L1819.18 684.31 L1819.73 684.31 L1820.29 684.31 L1820.85 684.31 L1821.41 684.31 L1821.97 684.31 L1822.53 684.31 L1823.09 684.31 L1823.65 684.31 L1824.21 684.31 L1824.77 684.31 L1825.33 684.31 L1825.89 684.31 L1826.45 684.31 L1827 684.31 L1827.56 684.31 L1828.12 684.31 L1828.68 684.31 L1829.24 684.31 L1829.8 684.31 L1830.36 684.31 L1830.92 684.31 L1831.48 684.31 L1832.04 684.31 L1832.6 684.31 L1833.16 684.31 L1833.72 684.31 L1834.27 684.31 L1834.83 684.31 L1835.39 684.31 L1835.95 684.31 L1836.51 684.31 L1837.07 684.31 L1837.63 684.31 L1838.19 684.31 L1838.19 682.852 L1837.63 682.852 L1837.07 682.852 L1836.51 682.852 L1835.95 682.852 L1835.39 682.852 L1834.83 682.852 L1834.27 682.852 L1833.72 682.852 L1833.16 682.852 L1832.6 682.852 L1832.04 682.852 L1831.48 682.852 L1830.92 682.852 L1830.36 682.852 L1829.8 682.852 L1829.24 682.852 L1828.68 682.852 L1828.12 682.852 L1827.56 682.852 L1827 682.852 L1826.45 682.852 L1825.89 682.852 L1825.33 682.852 L1824.77 682.852 L1824.21 682.852 L1823.65 682.852 L1823.09 682.852 L1822.53 682.852 L1821.97 682.852 L1821.41 682.852 L1820.85 682.852 L1820.29 682.852 L1819.73 682.852 L1819.18 682.852 L1818.62 682.852 L1818.06 682.852 L1817.5 682.852 L1816.94 682.852 L1816.38 682.852 L1815.82 682.852 L1815.26 682.852 L1814.7 682.852 L1814.14 682.852 L1813.58 682.852 L1813.02 682.852 L1812.46 682.852 L1811.9 682.852 L1811.35 682.852 L1810.79 682.852 L1810.23 682.852 L1809.67 682.852 L1809.11 682.852 L1808.55 682.852 L1807.99 682.852 L1807.43 682.852 L1806.87 682.852 L1806.31 682.852 L1805.75 682.852 L1805.19 682.852 L1804.63 682.852 L1804.08 682.852 L1803.52 682.852 L1802.96 682.852 L1802.4 682.852 L1801.84 682.852 L1801.28 682.852 L1800.72 682.852 L1800.16 682.852 L1799.6 682.852 L1799.04 682.852 L1798.48 682.852 L1797.92 682.852 L1797.36 682.852 L1796.8 682.852 L1796.25 682.852 L1795.69 682.852 L1795.13 682.852 L1794.57 682.852 L1794.01 682.852 L1793.45 682.852 L1792.89 682.852 L1792.33 682.852 L1791.77 682.852 L1791.21 682.852 L1790.65 682.852 L1790.09 682.852 L1789.53 682.852 L1788.98 682.852 L1788.42 682.852 L1787.86 682.852 L1787.3 682.852 L1786.74 682.852 L1786.18 682.852 L1785.62 682.852 L1785.06 682.852 L1784.5 682.852 L1783.94 682.852 L1783.38 682.852 L1782.82 682.852 L1782.26 682.852 L1781.71 682.852 L1781.15 682.852 L1780.59 682.852 L1780.03 682.852 L1779.47 682.852 L1778.91 682.852 L1778.35 682.852 L1777.79 682.852 L1777.23 682.852 L1776.67 682.852 L1776.11 682.852 L1775.55 682.852 L1774.99 682.852 L1774.43 682.852 L1773.88 682.852 L1773.32 682.852 L1772.76 682.852 L1772.2 682.852 L1771.64 682.852 L1771.08 682.852 L1770.52 682.852 L1769.96 682.852 L1769.4 682.852 L1768.84 682.852 L1768.28 682.852 L1767.72 682.852 L1767.16 682.852 L1766.61 682.852 L1766.05 682.852 L1765.49 682.852 L1764.93 682.852 L1764.37 682.852 L1763.81 682.852 L1763.25 682.852 L1762.69 682.852 L1762.13 682.852 L1761.57 682.852 L1761.01 682.852 L1760.45 682.852 L1759.89 682.852 L1759.34 682.852 L1758.78 682.852 L1758.22 682.852 L1757.66 682.852 L1757.1 682.852 L1756.54 682.852 L1755.98 682.852 L1755.42 682.852 L1754.86 682.852 L1754.3 682.852 L1753.74 682.852 L1753.18 682.852 L1752.62 682.852 L1752.06 682.852 L1751.51 682.852 L1750.95 682.852 L1750.39 682.852 L1749.83 682.852 L1749.27 682.852 L1748.71 682.852 L1748.15 682.852 L1747.59 682.852 L1747.03 682.852 L1746.47 682.852 L1745.91 682.852 L1745.35 682.852 L1744.79 682.852 L1744.24 682.852 L1743.68 682.852 L1743.12 682.852 L1742.56 682.852 L1742 682.852 L1741.44 682.852 L1740.88 682.852 L1740.32 682.852 L1739.76 682.852 L1739.2 682.852 L1738.64 682.852 L1738.08 682.852 L1737.52 682.852 L1736.97 682.852 L1736.41 682.852 L1735.85 682.852 L1735.29 682.852 L1734.73 682.852 L1734.17 682.852 L1733.61 682.852 L1733.05 682.852 L1732.49 682.852 L1731.93 682.852 L1731.37 682.852 L1730.81 682.852 L1730.25 682.852 L1729.69 682.852 L1729.14 682.852 L1728.58 682.852 L1728.02 682.852 L1727.46 682.852 L1726.9 682.852 L1726.34 682.852 L1725.78 682.852 L1725.22 682.852 L1724.66 682.852 L1724.1 682.852 L1723.54 682.852 L1722.98 682.852 L1722.42 682.852 L1721.87 682.852 L1721.31 682.852 L1720.75 682.852 L1720.19 682.852 L1719.63 682.852 L1719.07 682.852 L1718.51 682.852 L1717.95 682.852 L1717.39 682.852 L1716.83 682.852 L1716.27 682.852 L1715.71 682.852 L1715.15 682.852 L1714.6 682.852 L1714.04 682.852 L1713.48 682.852 L1712.92 682.852 L1712.36 682.852 L1711.8 682.852 L1711.24 682.852 L1710.68 682.852 L1710.12 682.852 L1709.56 682.852 L1709 682.852 L1708.44 682.852 L1707.88 682.852 L1707.32 682.852 L1706.77 682.852 L1706.21 682.852 L1705.65 682.852 L1705.09 682.852 L1704.53 682.852 L1703.97 682.852 L1703.41 682.852 L1702.85 682.852 L1702.29 682.852 L1701.73 682.852 L1701.17 682.852 L1700.61 682.852 L1700.05 682.852 L1699.5 682.852 L1698.94 682.852 L1698.38 682.852 L1697.82 682.852 L1697.26 682.852 L1696.7 682.852 L1696.14 682.852 L1695.58 682.852 L1695.02 682.852 L1694.46 682.852 L1693.9 682.852 L1693.34 682.852 L1692.78 682.852 L1692.23 682.852 L1691.67 682.852 L1691.11 682.852 L1690.55 682.852 L1689.99 682.852 L1689.43 682.852 L1688.87 682.852 L1688.31 682.852 L1687.75 682.852 L1687.19 682.852 L1686.63 682.852 L1686.07 682.852 L1685.51 682.852 L1684.95 682.852 L1684.4 682.852 L1683.84 682.852 L1683.28 682.852 L1682.72 682.852 L1682.16 682.852 L1681.6 682.852 L1681.04 682.852 L1680.48 682.852 L1679.92 682.852 L1679.36 682.852 L1678.8 682.852 L1678.24 682.852 L1677.68 682.852 L1677.13 682.852 L1676.57 682.852 L1676.01 682.852 L1675.45 682.852 L1674.89 682.852 L1674.33 682.852 L1673.77 682.852 L1673.21 682.852 L1672.65 682.852 L1672.09 682.852 L1671.53 682.852 L1670.97 682.852 L1670.41 682.852 L1669.85 682.852 L1669.3 682.852 L1668.74 682.852 L1668.18 682.852 L1667.62 682.852 L1667.06 682.852 L1666.5 682.852 L1665.94 682.852 L1665.38 682.852 L1664.82 682.852 L1664.26 682.852 L1663.7 682.852 L1663.14 682.852 L1662.58 682.852 L1662.03 682.852 L1661.47 682.852 L1660.91 682.852 L1660.35 682.852 L1659.79 682.852 L1659.23 682.852 L1658.67 682.852 L1658.11 682.852 L1657.55 682.852 L1656.99 682.852 L1656.43 682.852 L1655.87 682.852 L1655.31 682.852 L1654.76 682.852 L1654.2 682.852 L1653.64 682.852 L1653.08 682.852 L1652.52 682.852 L1651.96 682.852 L1651.4 682.852 L1650.84 682.852 L1650.28 682.852 L1649.72 682.852 L1649.16 682.852 L1648.6 682.852 L1648.04 682.852 L1647.48 682.852 L1646.93 682.852 L1646.37 682.852 L1645.81 682.852 L1645.25 682.852 L1644.69 682.852 L1644.13 682.852 L1643.57 682.852 L1643.01 682.852 L1642.45 682.852 L1641.89 682.852 L1641.33 682.852 L1640.77 682.852 L1640.21 682.852 L1639.66 682.852 L1639.1 682.852 L1638.54 682.852 L1637.98 682.852 L1637.42 682.852 L1636.86 682.852 L1636.3 682.852 L1635.74 682.852 L1635.18 682.852 L1634.62 682.852 L1634.06 682.852 L1633.5 682.852 L1632.94 682.852 L1632.39 682.852 L1631.83 682.852 L1631.27 682.852 L1630.71 682.852 L1630.15 682.852 L1629.59 682.852 L1629.03 682.852 L1628.47 682.852 L1627.91 682.852 L1627.35 682.852 L1626.79 682.852 L1626.23 682.852 L1625.67 682.852 L1625.11 682.852 L1624.56 682.852 L1624 682.852 L1623.44 682.852 L1622.88 682.852 L1622.32 682.852 L1621.76 682.852 L1621.2 682.852 L1620.64 682.852 L1620.08 682.852 L1619.52 682.852 L1618.96 682.852 L1618.4 682.852 L1617.84 682.852 L1617.29 682.852 L1616.73 682.852 L1616.17 682.852 L1615.61 682.852 L1615.05 682.852 L1614.49 682.852 L1613.93 682.852 L1613.37 682.852 L1612.81 682.852 L1612.25 682.852 L1611.69 682.852 L1611.13 682.852 L1610.57 682.852 L1610.02 682.852 L1609.46 682.852 L1608.9 682.852 L1608.34 682.852 L1607.78 682.852 L1607.22 682.852 L1606.66 682.852 L1606.1 682.852 L1605.54 682.852 L1604.98 682.852 L1604.42 682.852 L1603.86 682.852 L1603.3 682.852 L1602.74 682.852 L1602.19 682.852 L1601.63 682.852 L1601.07 682.852 L1600.51 682.852 L1599.95 682.852 L1599.39 682.852 L1598.83 682.852 L1598.27 682.852 L1597.71 682.852 L1597.15 682.852 L1596.59 682.852 L1596.03 682.852 L1595.47 682.852 L1594.92 682.852 L1594.36 682.852 L1593.8 682.852 L1593.24 682.852 L1592.68 682.852 L1592.12 682.852 L1591.56 682.852 L1591 682.852 L1590.44 682.852 L1589.88 682.852 L1589.32 682.852 L1588.76 682.852 L1588.2 682.852 L1587.65 682.852 L1587.09 682.852 L1586.53 682.852 L1585.97 682.852 L1585.41 682.852 L1584.85 682.852 L1584.29 682.852 L1583.73 682.852 L1583.17 682.852 L1582.61 682.852 L1582.05 682.852 L1581.49 682.852 L1580.93 682.852 L1580.37 682.852 L1579.82 682.852 L1579.26 682.852 L1578.7 682.852 L1578.14 682.852 L1577.58 682.852 L1577.02 682.852 L1576.46 682.852 L1575.9 682.852 L1575.34 682.852 L1574.78 682.852 L1574.22 682.852 L1573.66 682.852 L1573.1 682.852 L1572.55 682.852 L1571.99 682.852 L1571.43 682.852 L1570.87 682.852 L1570.31 682.852 L1569.75 682.852 L1569.19 682.852 L1568.63 682.852 L1568.07 682.852 L1567.51 682.852 L1566.95 682.852 L1566.39 682.852 L1565.83 682.852 L1565.28 682.852 L1564.72 682.852 L1564.16 682.852 L1563.6 682.852 L1563.04 682.852 L1562.48 682.852 L1561.92 682.852 L1561.36 682.852 L1560.8 682.852 L1560.24 682.852 L1559.68 682.852 L1559.12 682.852 L1558.56 682.852 L1558 682.852 L1557.45 682.852 L1556.89 682.852 L1556.33 682.852 L1555.77 682.852 L1555.21 682.852 L1554.65 682.852 L1554.09 682.852 L1553.53 682.852 L1552.97 682.852 L1552.41 682.852 L1551.85 682.852 L1551.29 682.852 L1550.73 682.852 L1550.18 682.852 L1549.62 682.852 L1549.06 682.852 L1548.5 682.852 L1547.94 682.852 L1547.38 682.852 L1546.82 682.852 L1546.26 682.852 L1545.7 682.852 L1545.14 682.852 L1544.58 682.852 L1544.02 682.852 L1543.46 682.852 L1542.9 682.852 L1542.35 682.852 L1541.79 682.852 L1541.23 682.852 L1540.67 682.852 L1540.11 682.852 L1539.55 682.852 L1538.99 682.852 L1538.43 682.852 L1537.87 682.852 L1537.31 682.852 L1536.75 682.852 L1536.19 682.852 L1535.63 682.852 L1535.08 682.852 L1534.52 682.852 L1533.96 682.852 L1533.4 682.852 L1532.84 682.852 L1532.28 682.852 L1531.72 682.852 L1531.16 682.852 L1530.6 682.852 L1530.04 682.852 L1529.48 682.852 L1528.92 682.852 L1528.36 682.852 L1527.81 682.852 L1527.25 682.852 L1526.69 682.852 L1526.13 682.852 L1525.57 682.852 L1525.01 682.852 L1524.45 682.852 L1523.89 682.852 L1523.33 682.852 L1522.77 682.852 L1522.21 682.852 L1521.65 682.852 L1521.09 682.852 L1520.53 682.852 L1519.98 682.852 L1519.42 682.852 L1518.86 682.852 L1518.3 682.852 L1517.74 682.852 L1517.18 682.852 L1516.62 682.852 L1516.06 682.852 L1515.5 682.852 L1514.94 682.852 L1514.38 682.852 L1513.82 682.852 L1513.26 682.852 L1512.71 682.852 L1512.15 682.852 L1511.59 682.852 L1511.03 682.852 L1510.47 682.852 L1509.91 682.852 L1509.35 682.852 L1508.79 682.852 L1508.23 682.852 L1507.67 682.852 L1507.11 682.852 L1506.55 682.852 L1505.99 682.852 L1505.44 682.852 L1504.88 682.852 L1504.32 682.852 L1503.76 682.852 L1503.2 682.852 L1502.64 682.852 L1502.08 682.852 L1501.52 682.852 L1500.96 682.852 L1500.4 682.852 L1499.84 682.852 L1499.28 682.852 L1498.72 682.852 L1498.16 682.852 L1497.61 682.852 L1497.05 682.852 L1496.49 682.852 L1495.93 682.852 L1495.37 682.852 L1494.81 682.852 L1494.25 682.852 L1493.69 682.852 L1493.13 682.852 L1492.57 682.852 L1492.01 682.852 L1491.45 682.852 L1490.89 682.852 L1490.34 682.852 L1489.78 682.852 L1489.22 682.852 L1488.66 682.852 L1488.1 682.852 L1487.54 682.852 L1486.98 682.852 L1486.42 682.852 L1485.86 682.852 L1485.3 682.852 L1484.74 682.852 L1484.18 682.852 L1483.62 682.852 L1483.07 682.852 L1482.51 682.852 L1481.95 682.852 L1481.39 682.852 L1480.83 682.852 L1480.27 682.852 L1479.71 682.852 L1479.15 682.852 L1478.59 682.852 L1478.03 682.852 L1477.47 682.852 L1476.91 682.852 L1476.35 682.852 L1475.79 682.852 L1475.24 682.852 L1474.68 682.852 L1474.12 682.852 L1473.56 682.852 L1473 682.852 L1472.44 682.852 L1471.88 682.852 L1471.32 682.852 L1470.76 682.852 L1470.2 682.852 L1469.64 682.852 L1469.08 682.852 L1468.52 682.852 L1467.97 682.852 L1467.41 682.852 L1466.85 682.852 L1466.29 682.852 L1465.73 682.852 L1465.17 682.852 L1464.61 682.852 L1464.05 682.852 L1463.49 682.852 L1462.93 682.852 L1462.37 682.852 L1461.81 682.852 L1461.25 682.852 L1460.7 682.852 L1460.14 682.852 L1459.58 682.852 L1459.02 682.852 L1458.46 682.852 L1457.9 682.852 L1457.34 682.852 L1456.78 682.852 L1456.22 682.852 L1455.66 682.852 L1455.1 682.852 L1454.54 682.852 L1453.98 682.852 L1453.42 682.852 L1452.87 682.852 L1452.31 682.852 L1451.75 682.852 L1451.19 682.852 L1450.63 682.852 L1450.07 682.852 L1449.51 682.852 L1448.95 682.852 L1448.39 682.852 L1447.83 682.852 L1447.27 682.852 L1446.71 682.852 L1446.15 682.852 L1445.6 682.852 L1445.04 682.852 L1444.48 682.852 L1443.92 682.852 L1443.36 682.852 L1442.8 682.852 L1442.24 682.852 L1441.68 682.852 L1441.12 682.852 L1440.56 682.852 L1440 682.852 L1439.44 682.852 L1438.88 682.852 L1438.33 682.852 L1437.77 682.852 L1437.21 682.852 L1436.65 682.852 L1436.09 682.852 L1435.53 682.852 L1434.97 682.852 L1434.41 682.852 L1433.85 682.852 L1433.29 682.852 L1432.73 682.852 L1432.17 682.852 L1431.61 682.852 L1431.05 682.852 L1430.5 682.852 L1429.94 682.852 L1429.38 682.852 L1428.82 682.852 L1428.26 682.852 L1427.7 682.852 L1427.14 682.852 L1426.58 682.852 L1426.02 682.852 L1425.46 682.852 L1424.9 682.852 L1424.34 682.852 L1423.78 682.852 L1423.23 682.852 L1422.67 682.852 L1422.11 682.852 L1421.55 682.852 L1420.99 682.852 L1420.43 682.852 L1419.87 682.852 L1419.31 682.852 L1418.75 682.852 L1418.19 682.852 L1417.63 682.852 L1417.07 682.852 L1416.51 682.852 L1415.95 682.852 L1415.4 682.852 L1414.84 682.852 L1414.28 682.852 L1413.72 682.852 L1413.16 682.852 L1412.6 682.852 L1412.04 682.852 L1411.48 682.852 L1410.92 682.852 L1410.36 682.852 L1409.8 682.852 L1409.24 682.852 L1408.68 682.852 L1408.13 682.852 L1407.57 682.852 L1407.01 682.852 L1406.45 682.852 L1405.89 682.852 L1405.33 682.852 L1404.77 682.852 L1404.21 682.852 L1403.65 682.852 L1403.09 682.852 L1402.53 682.852 L1401.97 682.852 L1401.41 682.852 L1400.86 682.852 L1400.3 682.852 L1399.74 682.852 L1399.18 682.852 L1398.62 682.852 L1398.06 682.852 L1397.5 682.852 L1396.94 682.852 L1396.38 682.852 L1395.82 682.852 L1395.26 682.852 L1394.7 682.852 L1394.14 682.852 L1393.58 682.852 L1393.03 682.852 L1392.47 682.852 L1391.91 682.852 L1391.35 682.852 L1390.79 682.852 L1390.23 682.852 L1389.67 682.852 L1389.11 682.852 L1388.55 682.852 L1387.99 682.852 L1387.43 682.852 L1386.87 682.852 L1386.31 682.852 L1385.76 682.852 L1385.2 682.852 L1384.64 682.852 L1384.08 682.852 L1383.52 682.852 L1382.96 682.852 L1382.4 682.852 L1381.84 682.852 L1381.28 682.852 L1380.72 682.852 L1380.16 682.852 L1379.6 682.852 L1379.04 682.852 L1378.49 682.852 L1377.93 682.852 L1377.37 682.852 L1376.81 682.852 L1376.25 682.852 L1375.69 682.852 L1375.13 682.852 L1374.57 682.852 L1374.01 682.852 L1373.45 682.852 L1372.89 682.852 L1372.33 682.852 L1371.77 682.852 L1371.21 682.852 L1370.66 682.852 L1370.1 682.852 L1369.54 682.852 L1368.98 682.852 L1368.42 682.852 L1367.86 682.852 L1367.3 682.852 L1366.74 682.852 L1366.18 682.852 L1365.62 682.852 L1365.06 682.852 L1364.5 682.852 L1363.94 682.852 L1363.39 682.852 L1362.83 682.852 L1362.27 682.852 L1361.71 682.852 L1361.15 682.852 L1360.59 682.852 L1360.03 682.852 L1359.47 682.852 L1358.91 682.852 L1358.35 682.852 L1357.79 682.852 L1357.23 682.852 L1356.67 682.852 L1356.12 682.852 L1355.56 682.852 L1355 682.852 L1354.44 682.852 L1353.88 682.852 L1353.32 682.852 L1352.76 682.852 L1352.2 682.852 L1351.64 682.852 L1351.08 682.852 L1350.52 682.852 L1349.96 682.852 L1349.4 682.852 L1348.84 682.852 L1348.29 682.852 L1347.73 682.852 L1347.17 682.852 L1346.61 682.852 L1346.05 682.852 L1345.49 682.852 L1344.93 682.852 L1344.37 682.852 L1343.81 682.852 L1343.25 682.852 L1342.69 682.852 L1342.13 682.852 L1341.57 682.852 L1341.02 682.852 L1340.46 682.852 L1339.9 682.852 L1339.34 682.852 L1338.78 682.852 L1338.22 682.852 L1337.66 682.852 L1337.1 682.852 L1336.54 682.852 L1335.98 682.852 L1335.42 682.852 L1334.86 682.852 L1334.3 682.852 L1333.75 682.852 L1333.19 682.852 L1332.63 682.852 L1332.07 682.852 L1331.51 682.852 L1330.95 682.852 L1330.39 682.852 L1329.83 682.852 L1329.27 682.852 L1328.71 682.852 L1328.15 682.852 L1327.59 682.852 L1327.03 682.852 L1326.47 682.852 L1325.92 682.852 L1325.36 682.852 L1324.8 682.852 L1324.24 682.852 L1323.68 682.852 L1323.12 682.852 L1322.56 682.852 L1322 682.852 L1321.44 682.852 L1320.88 682.852 L1320.32 682.852 L1319.76 682.852 L1319.2 682.852 L1318.65 682.852 L1318.09 682.852 L1317.53 682.852 L1316.97 682.852 L1316.41 682.852 L1315.85 682.852 L1315.29 682.852 L1314.73 682.852 L1314.17 682.852 L1313.61 682.852 L1313.05 682.852 L1312.49 682.852 L1311.93 682.852 L1311.38 682.852 L1310.82 682.852 L1310.26 682.852 L1309.7 682.852 L1309.14 682.852 L1308.58 682.852 L1308.02 682.852 L1307.46 682.852 L1306.9 682.852 L1306.34 682.852 L1305.78 682.852 L1305.22 682.852 L1304.66 682.852 L1304.1 682.852 L1303.55 682.852 L1302.99 682.852 L1302.43 682.852 L1301.87 682.852 L1301.31 682.852 L1300.75 682.852 L1300.19 682.852 L1299.63 682.852 L1299.07 682.852 L1298.51 682.852 L1297.95 682.852 L1297.39 682.852 L1296.83 682.852 L1296.28 682.852 L1295.72 682.852 L1295.16 682.852 L1294.6 682.852 L1294.04 682.852 L1293.48 682.852 L1292.92 682.852 L1292.36 682.852 L1291.8 682.852 L1291.24 682.852 L1290.68 682.852 L1290.12 682.852 L1289.56 682.852 L1289 682.852 L1288.45 682.852 L1287.89 682.852 L1287.33 682.852 L1286.77 682.852 L1286.21 682.852 L1285.65 682.852 L1285.09 682.852 L1284.53 682.852 L1283.97 682.852 L1283.41 682.852 L1282.85 682.852 L1282.29 682.852 L1281.73 682.852 L1281.18 682.852 L1280.62 682.852 L1280.06 682.852 L1279.5 682.852 L1278.94 682.852 L1278.38 682.852 L1277.82 682.852 L1277.26 682.852 L1276.7 682.852 L1276.14 682.852 L1275.58 682.852 L1275.02 682.852 L1274.46 682.852 L1273.91 682.852 L1273.35 682.852 L1272.79 682.852 L1272.23 682.852 L1271.67 682.852 L1271.11 682.852 L1270.55 682.852 L1269.99 682.852 L1269.43 682.852 L1268.87 682.852 L1268.31 682.852 L1267.75 682.852 L1267.19 682.852 L1266.63 682.852 L1266.08 682.852 L1265.52 682.852 L1264.96 682.852 L1264.4 682.852 L1263.84 682.852 L1263.28 682.852 L1262.72 682.852 L1262.16 682.852 L1261.6 682.852 L1261.04 682.852 L1260.48 682.852 L1259.92 682.852 L1259.36 682.852 L1258.81 682.852 L1258.25 682.852 L1257.69 682.852 L1257.13 682.852 L1256.57 682.852 L1256.01 682.852 L1255.45 682.852 L1254.89 682.852 L1254.33 682.852 L1253.77 682.852 L1253.21 682.852 L1252.65 682.852 L1252.09 682.852 L1251.54 682.852 L1250.98 682.852 L1250.42 682.852 L1249.86 682.852 L1249.3 682.852 L1248.74 682.852 L1248.18 682.852 L1247.62 682.852 L1247.06 682.852 L1246.5 682.852 L1245.94 682.852 L1245.38 682.852 L1244.82 682.852 L1244.26 682.852 L1243.71 682.852 L1243.15 682.852 L1242.59 682.852 L1242.03 682.852 L1241.47 682.852 L1240.91 682.852 L1240.35 682.852 L1239.79 682.852 L1239.23 682.852 L1238.67 682.852 L1238.11 682.852 L1237.55 682.852 L1236.99 682.852 L1236.44 682.852 L1235.88 682.852 L1235.32 682.852 L1234.76 682.852 L1234.2 682.852 L1233.64 682.852 L1233.08 682.852 L1232.52 682.852 L1231.96 682.852 L1231.4 682.852 L1230.84 682.852 L1230.28 682.852 L1229.72 682.852 L1229.17 682.852 L1228.61 682.852 L1228.05 682.852 L1227.49 682.852 L1226.93 682.852 L1226.37 682.852 L1225.81 682.852 L1225.25 682.852 L1224.69 682.852 L1224.13 682.852 L1223.57 682.852 L1223.01 682.852 L1222.45 682.852 L1221.89 682.852 L1221.34 682.852 L1220.78 682.852 L1220.22 682.852 L1219.66 682.852 L1219.1 682.852 L1218.54 682.852 L1217.98 682.852 L1217.42 682.852 L1216.86 682.852 L1216.3 682.852 L1215.74 682.852 L1215.18 682.852 L1214.62 682.852 L1214.07 682.852 L1213.51 682.852 L1212.95 682.852 L1212.39 682.852 L1211.83 682.852 L1211.27 682.852 L1210.71 682.852 L1210.15 682.852 L1209.59 682.852 L1209.03 682.852 L1208.47 682.852 L1207.91 682.852 L1207.35 682.852 L1206.8 682.852 L1206.24 682.852 L1205.68 682.852 L1205.12 682.852 L1204.56 682.852 L1204 682.852 L1203.44 682.852 L1202.88 682.852 L1202.32 682.852 L1201.76 682.852 L1201.2 682.852 L1200.64 682.852 L1200.08 682.852 L1199.52 682.852 L1198.97 682.852 L1198.41 682.852 L1197.85 682.852 L1197.29 682.852 L1196.73 682.852 L1196.17 682.852 L1195.61 682.852 L1195.05 682.852 L1194.49 682.852 L1193.93 682.852 L1193.37 682.852 L1192.81 682.852 L1192.25 682.852 L1191.7 682.852 L1191.14 682.852 L1190.58 682.852 L1190.02 682.852 L1189.46 682.852 L1188.9 682.852 L1188.34 682.852 L1187.78 682.852 L1187.22 682.852 L1186.66 682.852 L1186.1 682.852 L1185.54 682.852 L1184.98 682.852 L1184.43 682.852 L1183.87 682.852 L1183.31 682.852 L1182.75 682.852 L1182.19 682.852 L1181.63 682.852 L1181.07 682.852 L1180.51 682.852 L1179.95 682.852 L1179.39 682.852 L1178.83 682.852 L1178.27 682.852 L1177.71 682.852 L1177.15 682.852 L1176.6 682.852 L1176.04 682.852 L1175.48 682.852 L1174.92 682.852 L1174.36 682.852 L1173.8 682.852 L1173.24 682.852 L1172.68 682.852 L1172.12 682.852 L1171.56 682.852 L1171 682.852 L1170.44 682.852 L1169.88 682.852 L1169.33 682.852 L1168.77 682.852 L1168.21 682.852 L1167.65 682.852 L1167.09 682.852 L1166.53 682.852 L1165.97 682.852 L1165.41 682.852 L1164.85 682.852 L1164.29 682.852 L1163.73 682.852 L1163.17 682.852 L1162.61 682.852 L1162.05 682.852 L1161.5 682.852 L1160.94 682.852 L1160.38 682.852 L1159.82 682.852 L1159.26 682.852 L1158.7 682.852 L1158.14 682.852 L1157.58 682.852 L1157.02 682.852 L1156.46 682.852 L1155.9 682.852 L1155.34 682.852 L1154.78 682.852 L1154.23 682.852 L1153.67 682.852 L1153.11 682.852 L1152.55 682.852 L1151.99 682.852 L1151.43 682.852 L1150.87 682.852 L1150.31 682.852 L1149.75 682.852 L1149.19 682.852 L1148.63 682.852 L1148.07 682.852 L1147.51 682.852 L1146.96 682.852 L1146.4 682.852 L1145.84 682.852 L1145.28 682.852 L1144.72 682.852 L1144.16 682.852 L1143.6 682.852 L1143.04 682.852 L1142.48 682.852 L1141.92 682.852 L1141.36 682.852 L1140.8 682.852 L1140.24 682.852 L1139.68 682.852 L1139.13 682.852 L1138.57 682.852 L1138.01 682.852 L1137.45 682.852 L1136.89 682.852 L1136.33 682.852 L1135.77 682.852 L1135.21 682.852 L1134.65 682.852 L1134.09 682.852 L1133.53 682.852 L1132.97 682.852 L1132.41 682.852 L1131.86 682.852 L1131.3 682.852 L1130.74 682.852 L1130.18 682.852 L1129.62 682.852 L1129.06 682.852 L1128.5 682.852 L1127.94 682.852 L1127.38 682.852 L1126.82 682.852 L1126.26 682.852 L1125.7 682.852 L1125.14 682.852 L1124.59 682.852 L1124.03 682.852 L1123.47 682.852 L1122.91 682.852 L1122.35 682.852 L1121.79 682.852 L1121.23 682.852 L1120.67 682.852 L1120.11 682.852 L1119.55 682.852 L1118.99 682.852 L1118.43 682.852 L1117.87 682.852 L1117.31 682.852 L1116.76 682.852 L1116.2 682.852 L1115.64 682.852 L1115.08 682.852 L1114.52 682.852 L1113.96 682.852 L1113.4 682.852 L1112.84 682.852 L1112.28 682.852 L1111.72 682.852 L1111.16 682.852 L1110.6 682.852 L1110.04 682.852 L1109.49 682.852 L1108.93 682.852 L1108.37 682.852 L1107.81 682.852 L1107.25 682.852 L1106.69 682.852 L1106.13 682.852 L1105.57 682.852 L1105.01 682.852 L1104.45 682.852 L1103.89 682.852 L1103.33 682.852 L1102.77 682.852 L1102.22 682.852 L1101.66 682.852 L1101.1 682.852 L1100.54 682.852 L1099.98 682.852 L1099.42 682.852 L1098.86 682.852 L1098.3 682.852 L1097.74 682.852 L1097.18 682.852 L1096.62 682.852 L1096.06 682.852 L1095.5 682.852 L1094.94 682.852 L1094.39 682.852 L1093.83 682.852 L1093.27 682.852 L1092.71 682.852 L1092.15 682.852 L1091.59 682.852 L1091.03 682.852 L1090.47 682.852 L1089.91 682.852 L1089.35 682.852 L1088.79 682.852 L1088.23 682.852 L1087.67 682.852 L1087.12 682.852 L1086.56 682.852 L1086 682.852 L1085.44 682.852 L1084.88 682.852 L1084.32 682.852 L1083.76 682.852 L1083.2 682.852 L1082.64 682.852 L1082.08 682.852 L1081.52 682.852 L1080.96 682.852 L1080.4 682.852 L1079.85 682.852 L1079.29 682.852 L1078.73 682.852 L1078.17 682.852 L1077.61 682.852 L1077.05 682.852 L1076.49 682.852 L1075.93 682.852 L1075.37 682.852 L1074.81 682.852 L1074.25 682.852 L1073.69 682.852 L1073.13 682.852 L1072.57 682.852 L1072.02 682.852 L1071.46 682.852 L1070.9 682.852 L1070.34 682.852 L1069.78 682.852 L1069.22 682.852 L1068.66 682.852 L1068.1 682.852 L1067.54 682.852 L1066.98 682.852 L1066.42 682.852 L1065.86 682.852 L1065.3 682.852 L1064.75 682.852 L1064.19 682.852 L1063.63 682.852 L1063.07 682.852 L1062.51 682.852 L1061.95 682.852 L1061.39 682.852 L1060.83 682.852 L1060.27 682.852 L1059.71 682.852 L1059.15 682.852 L1058.59 682.852 L1058.03 682.852 L1057.48 682.852 L1056.92 682.852 L1056.36 682.852 L1055.8 682.852 L1055.24 682.852 L1054.68 682.852 L1054.12 682.852 L1053.56 682.852 L1053 682.852 L1052.44 682.852 L1051.88 682.852 L1051.32 682.852 L1050.76 682.852 L1050.2 682.852 L1049.65 682.852 L1049.09 682.852 L1048.53 682.852 L1047.97 682.852 L1047.41 682.852 L1046.85 682.852 L1046.29 682.852 L1045.73 682.852 L1045.17 682.852 L1044.61 682.852 L1044.05 682.852 L1043.49 682.852 L1042.93 682.852 L1042.38 682.852 L1041.82 682.852 L1041.26 682.852 L1040.7 682.852 L1040.14 682.852 L1039.58 682.852 L1039.02 682.852 L1038.46 682.852 L1037.9 682.852 L1037.34 682.852 L1036.78 682.852 L1036.22 682.852 L1035.66 682.852 L1035.1 682.852 L1034.55 682.852 L1033.99 682.852 L1033.43 682.852 L1032.87 682.852 L1032.31 682.852 L1031.75 682.852 L1031.19 682.852 L1030.63 682.852 L1030.07 682.852 L1029.51 682.852 L1028.95 682.852 L1028.39 682.852 L1027.83 682.852 L1027.28 682.852 L1026.72 682.852 L1026.16 682.852 L1025.6 682.852 L1025.04 682.852 L1024.48 682.852 L1023.92 682.852 L1023.36 682.852 L1022.8 682.852 L1022.24 682.852 L1021.68 682.852 L1021.12 682.852 L1020.56 682.852 L1020.01 682.852 L1019.45 682.852 L1018.89 682.852 L1018.33 682.852 L1017.77 682.852 L1017.21 682.852 L1016.65 682.852 L1016.09 682.852 L1015.53 682.852 L1014.97 682.852 L1014.41 682.852 L1013.85 682.852 L1013.29 682.852 L1012.73 682.852 L1012.18 682.852 L1011.62 682.852 L1011.06 682.852 L1010.5 682.852 L1009.94 682.852 L1009.38 682.852 L1008.82 682.852 L1008.26 682.852 L1007.7 682.852 L1007.14 682.852 L1006.58 682.852 L1006.02 682.852 L1005.46 682.852 L1004.91 682.852 L1004.35 682.852 L1003.79 682.852 L1003.23 682.852 L1002.67 682.852 L1002.11 682.852 L1001.55 682.852 L1000.99 682.852 L1000.43 682.852 L999.872 682.852 L999.313 682.852 L998.754 682.852 L998.194 682.852 L997.635 682.852 L997.076 682.852 L996.517 682.852 L995.957 682.852 L995.398 682.852 L994.839 682.852 L994.28 682.852 L993.72 682.852 L993.161 682.852 L992.602 682.852 L992.043 682.852 L991.483 682.852 L990.924 682.852 L990.365 682.852 L989.806 682.852 L989.246 682.852 L988.687 682.852 L988.128 682.852 L987.569 682.852 L987.009 682.852 L986.45 682.852 L985.891 682.852 L985.332 682.852 L984.772 682.852 L984.213 682.852 L983.654 682.852 L983.095 682.852 L982.535 682.852 L981.976 682.852 L981.417 682.852 L980.858 682.852 L980.298 682.852 L979.739 682.852 L979.18 682.852 L978.621 682.852 L978.061 682.852 L977.502 682.852 L976.943 682.852 L976.384 682.852 L975.824 682.852 L975.265 682.852 L974.706 682.852 L974.147 682.852 L973.587 682.852 L973.028 682.852 L972.469 682.852 L971.91 682.852 L971.35 682.852 L970.791 682.852 L970.232 682.852 L969.673 682.852 L969.113 682.852 L968.554 682.852 L967.995 682.852 L967.436 682.852 L966.876 682.852 L966.317 682.852 L965.758 682.852 L965.199 682.852 L964.639 682.852 L964.08 682.852 L963.521 682.852 L962.962 682.852 L962.402 682.852 L961.843 682.852 L961.284 682.852 L960.725 682.852 L960.165 682.852 L959.606 682.852 L959.047 682.852 L958.488 682.852 L957.928 682.852 L957.369 682.852 L956.81 682.852 L956.251 682.852 L955.691 682.852 L955.132 682.852 L954.573 682.852 L954.014 682.852 L953.454 682.852 L952.895 682.852 L952.336 682.852 L951.777 682.852 L951.217 682.852 L950.658 682.852 L950.099 682.852 L949.54 682.852 L948.98 682.852 L948.421 682.852 L947.862 682.852 L947.303 682.852 L946.743 682.852 L946.184 682.852 L945.625 682.852 L945.066 682.852 L944.506 682.852 L943.947 682.852 L943.388 682.852 L942.829 682.852 L942.269 682.852 L941.71 682.852 L941.151 682.852 L940.592 682.852 L940.032 682.852 L939.473 682.852 L938.914 682.852 L938.355 682.852 L937.795 682.852 L937.236 682.852 L936.677 682.852 L936.118 682.852 L935.558 682.852 L934.999 682.852 L934.44 682.852 L933.881 682.852 L933.321 682.852 L932.762 682.852 L932.203 682.852 L931.644 682.852 L931.084 682.852 L930.525 682.852 L929.966 682.852 L929.406 682.852 L928.847 682.852 L928.288 682.852 L927.729 682.852 L927.169 682.852 L926.61 682.852 L926.051 682.852 L925.492 682.852 L924.932 682.852 L924.373 682.852 L923.814 682.852 L923.255 682.852 L922.695 682.852 L922.136 682.852 L921.577 682.852 L921.018 682.852 L920.458 682.852 L919.899 682.852 L919.34 682.852 L918.781 682.852 L918.221 682.852 L917.662 682.852 L917.103 682.852 L916.544 682.852 L915.984 682.852 L915.425 682.852 L914.866 682.852 L914.307 682.852 L913.747 682.852 L913.188 682.852 L912.629 682.852 L912.07 682.852 L911.51 682.852 L910.951 682.852 L910.392 682.852 L909.833 682.852 L909.273 682.852 L908.714 682.852 L908.155 682.852 L907.596 682.852 L907.036 682.852 L906.477 682.852 L905.918 682.852 L905.359 682.852 L904.799 682.852 L904.24 682.852 L903.681 682.852 L903.122 682.852 L902.562 682.852 L902.003 682.852 L901.444 682.852 L900.885 682.852 L900.325 682.852 L899.766 682.852 L899.207 682.852 L898.648 682.852 L898.088 682.852 L897.529 682.852 L896.97 682.852 L896.411 682.852 L895.851 682.852 L895.292 682.852 L894.733 682.852 L894.174 682.852 L893.614 682.852 L893.055 682.852 L892.496 682.852 L891.937 682.852 L891.377 682.852 L890.818 682.852 L890.259 682.852 L889.7 682.852 L889.14 682.852 L888.581 682.852 L888.022 682.852 L887.463 682.852 L886.903 682.852 L886.344 682.852 L885.785 682.852 L885.226 682.852 L884.666 682.852 L884.107 682.852 L883.548 682.852 L882.989 682.852 L882.429 682.852 L881.87 682.852 L881.311 682.852 L880.752 682.852 L880.192 682.852 L879.633 682.852 L879.074 682.852 L878.515 682.852 L877.955 682.852 L877.396 682.852 L876.837 682.852 L876.278 682.852 L875.718 682.852 L875.159 682.852 L874.6 682.852 L874.041 682.852 L873.481 682.852 L872.922 682.852 L872.363 682.852 L871.804 682.852 L871.244 682.852 L870.685 682.852 L870.126 682.852 L869.567 682.852 L869.007 682.852 L868.448 682.852 L867.889 682.852 L867.33 682.852 L866.77 682.852 L866.211 682.852 L865.652 682.852 L865.093 682.852 L864.533 682.852 L863.974 682.852 L863.415 682.852 L862.856 682.852 L862.296 682.852 L861.737 682.852 L861.178 682.852 L860.619 682.852 L860.059 682.852 L859.5 682.852 L858.941 682.852 L858.382 682.852 L857.822 682.852 L857.263 682.852 L856.704 682.852 L856.145 682.852 L855.585 682.852 L855.026 682.852 L854.467 682.852 L853.908 682.852 L853.348 682.852 L852.789 682.852 L852.23 682.852 L851.671 682.852 L851.111 682.852 L850.552 682.852 L849.993 682.852 L849.434 682.852 L848.874 682.852 L848.315 682.852 L847.756 682.852 L847.197 682.852 L846.637 682.852 L846.078 682.852 L845.519 682.852 L844.96 682.852 L844.4 682.852 L843.841 682.852 L843.282 682.852 L842.723 682.852 L842.163 682.852 L841.604 682.852 L841.045 682.852 L840.486 682.852 L839.926 682.852 L839.367 682.852 L838.808 682.852 L838.249 682.852 L837.689 682.852 L837.13 682.852 L836.571 682.852 L836.012 682.852 L835.452 682.852 L834.893 682.852 L834.334 682.852 L833.775 682.852 L833.215 682.852 L832.656 682.852 L832.097 682.852 L831.538 682.852 L830.978 682.852 L830.419 682.852 L829.86 682.852 L829.301 682.852 L828.741 682.852 L828.182 682.852 L827.623 682.852 L827.064 682.852 L826.504 682.852 L825.945 682.852 L825.386 682.852 L824.827 682.852 L824.267 682.852 L823.708 682.852 L823.149 682.852 L822.59 682.852 L822.03 682.852 L821.471 682.852 L820.912 682.852 L820.353 682.852 L819.793 682.852 L819.234 682.852 L818.675 682.852 L818.116 682.852 L817.556 682.852 L816.997 682.852 L816.438 682.852 L815.879 682.852 L815.319 682.852 L814.76 682.852 L814.201 682.852 L813.642 682.852 L813.082 682.852 L812.523 682.852 L811.964 682.852 L811.405 682.852 L810.845 682.852 L810.286 682.852 L809.727 682.852 L809.168 682.852 L808.608 682.852 L808.049 682.852 L807.49 682.852 L806.931 682.852 L806.371 682.852 L805.812 682.852 L805.253 682.852 L804.693 682.852 L804.134 682.852 L803.575 682.852 L803.016 682.852 L802.456 682.852 L801.897 682.852 L801.338 682.852 L800.779 682.852 L800.219 682.852 L799.66 682.852 L799.101 682.852 L798.542 682.852 L797.982 682.852 L797.423 682.852 L796.864 682.852 L796.305 682.852 L795.745 682.852 L795.186 682.852 L794.627 682.852 L794.068 682.852 L793.508 682.852 L792.949 682.852 L792.39 682.852 L791.831 682.852 L791.271 682.852 L790.712 682.852 L790.153 682.852 L789.594 682.852 L789.034 682.852 L788.475 682.852 L787.916 682.852 L787.357 682.852 L786.797 682.852 L786.238 682.852 L785.679 682.852 L785.12 682.852 L784.56 682.852 L784.001 682.852 L783.442 682.852 L782.883 682.852 L782.323 682.852 L781.764 682.852 L781.205 682.852 L780.646 682.852 L780.086 682.852 L779.527 682.852 L778.968 682.852 L778.409 682.852 L777.849 682.852 L777.29 682.852 L776.731 682.852 L776.172 682.852 L775.612 682.852 L775.053 682.852 L774.494 682.852 L773.935 682.852 L773.375 682.852 L772.816 682.852 L772.257 682.852 L771.698 682.852 L771.138 682.852 L770.579 682.852 L770.02 682.852 L769.461 682.852 L768.901 682.852 L768.342 682.852 L767.783 682.852 L767.224 682.852 L766.664 682.852 L766.105 682.852 L765.546 682.852 L764.987 682.852 L764.427 682.852 L763.868 682.852 L763.309 682.852 L762.75 682.852 L762.19 682.852 L761.631 682.852 L761.072 682.852 L760.513 682.852 L759.953 682.852 L759.394 682.852 L758.835 682.852 L758.276 682.852 L757.716 682.852 L757.157 682.852 L756.598 682.852 L756.039 682.852 L755.479 682.852 L754.92 682.852 L754.361 682.852 L753.802 682.852 L753.242 682.852 L752.683 682.852 L752.124 682.852 L751.565 682.852 L751.005 682.852 L750.446 682.852 L749.887 682.852 L749.328 682.852 L748.768 682.852 L748.209 682.852 L747.65 682.852 L747.091 682.852 L746.531 682.852 L745.972 682.852 L745.413 682.852 L744.854 682.852 L744.294 682.852 L743.735 682.852 L743.176 682.852 L742.617 682.852 L742.057 682.852 L741.498 682.852 L740.939 682.852 L740.38 682.852 L739.82 682.852 L739.261 682.852 L738.702 682.852 L738.143 682.852 L737.583 682.852 L737.024 682.852 L736.465 682.852 L735.906 682.852 L735.346 682.852 L734.787 682.852 L734.228 682.852 L733.669 682.852 L733.109 682.852 L732.55 682.852 L731.991 682.852 L731.432 682.852 L730.872 682.852 L730.313 682.852 L729.754 682.852 L729.195 682.852 L728.635 682.852 L728.076 682.852 L727.517 682.852 L726.958 682.852 L726.398 682.852 L725.839 682.852 L725.28 682.852 L724.721 682.852 L724.161 682.852 L723.602 682.852 L723.043 682.852 L722.484 682.852 L721.924 682.852 L721.365 682.852 L720.806 682.852 L720.247 682.852  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip483)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.552 720.806,683.552 721.365,683.552 721.924,683.552 722.484,683.552 723.043,683.552 723.602,683.552 724.161,683.552 724.721,683.552 725.28,683.552 725.839,683.552 726.398,683.552 726.958,683.552 727.517,683.552 728.076,683.552 728.635,683.552 729.195,683.552 729.754,683.552 730.313,683.552 730.872,683.552 731.432,683.552 731.991,683.552 732.55,683.552 733.109,683.552 733.669,683.552 734.228,683.552 734.787,683.552 735.346,683.552 735.906,683.552 736.465,683.552 737.024,683.552 737.583,683.552 738.143,683.552 738.702,683.552 739.261,683.552 739.82,683.552 740.38,683.552 740.939,683.552 741.498,683.552 742.057,683.552 742.617,683.552 743.176,683.552 743.735,683.552 744.294,683.552 744.854,683.552 745.413,683.552 745.972,683.552 746.531,683.552 747.091,683.552 747.65,683.552 748.209,683.552 748.768,683.552 749.328,683.552 749.887,683.552 750.446,683.552 751.005,683.552 751.565,683.552 752.124,683.552 752.683,683.552 753.242,683.552 753.802,683.552 754.361,683.552 754.92,683.552 755.479,683.552 756.039,683.552 756.598,683.552 757.157,683.552 757.716,683.552 758.276,683.552 758.835,683.552 759.394,683.552 759.953,683.552 760.513,683.552 761.072,683.552 761.631,683.552 762.19,683.552 762.75,683.552 763.309,683.552 763.868,683.552 764.427,683.552 764.987,683.552 765.546,683.552 766.105,683.552 766.664,683.552 767.224,683.552 767.783,683.552 768.342,683.552 768.901,683.552 769.461,683.552 770.02,683.552 770.579,683.552 771.138,683.552 771.698,683.552 772.257,683.552 772.816,683.552 773.375,683.552 773.935,683.552 774.494,683.552 775.053,683.552 775.612,683.552 776.172,683.552 776.731,683.552 777.29,683.552 777.849,683.552 778.409,683.552 778.968,683.552 779.527,683.552 780.086,683.552 780.646,683.552 781.205,683.552 781.764,683.552 782.323,683.552 782.883,683.552 783.442,683.552 784.001,683.552 784.56,683.552 785.12,683.552 785.679,683.552 786.238,683.552 786.797,683.552 787.357,683.552 787.916,683.552 788.475,683.552 789.034,683.552 789.594,683.552 790.153,683.552 790.712,683.552 791.271,683.552 791.831,683.552 792.39,683.552 792.949,683.552 793.508,683.552 794.068,683.552 794.627,683.552 795.186,683.552 795.745,683.552 796.305,683.552 796.864,683.552 797.423,683.552 797.982,683.552 798.542,683.552 799.101,683.552 799.66,683.552 800.219,683.552 800.779,683.552 801.338,683.552 801.897,683.552 802.456,683.552 803.016,683.552 803.575,683.552 804.134,683.552 804.693,683.552 805.253,683.552 805.812,683.552 806.371,683.552 806.931,683.552 807.49,683.552 808.049,683.552 808.608,683.552 809.168,683.552 809.727,683.552 810.286,683.552 810.845,683.552 811.405,683.552 811.964,683.552 812.523,683.552 813.082,683.552 813.642,683.552 814.201,683.552 814.76,683.552 815.319,683.552 815.879,683.552 816.438,683.552 816.997,683.552 817.556,683.552 818.116,683.552 818.675,683.552 819.234,683.552 819.793,683.552 820.353,683.552 820.912,683.552 821.471,683.552 822.03,683.552 822.59,683.552 823.149,683.552 823.708,683.552 824.267,683.552 824.827,683.552 825.386,683.552 825.945,683.552 826.504,683.552 827.064,683.552 827.623,683.552 828.182,683.552 828.741,683.552 829.301,683.552 829.86,683.552 830.419,683.552 830.978,683.552 831.538,683.552 832.097,683.552 832.656,683.552 833.215,683.552 833.775,683.552 834.334,683.552 834.893,683.552 835.452,683.552 836.012,683.552 836.571,683.552 837.13,683.552 837.689,683.552 838.249,683.552 838.808,683.552 839.367,683.552 839.926,683.552 840.486,683.552 841.045,683.552 841.604,683.552 842.163,683.552 842.723,683.552 843.282,683.552 843.841,683.552 844.4,683.552 844.96,683.552 845.519,683.552 846.078,683.552 846.637,683.552 847.197,683.552 847.756,683.552 848.315,683.552 848.874,683.552 849.434,683.552 849.993,683.552 850.552,683.552 851.111,683.552 851.671,683.552 852.23,683.552 852.789,683.552 853.348,683.552 853.908,683.552 854.467,683.552 855.026,683.552 855.585,683.552 856.145,683.552 856.704,683.552 857.263,683.552 857.822,683.552 858.382,683.552 858.941,683.552 859.5,683.552 860.059,683.552 860.619,683.552 861.178,683.552 861.737,683.552 862.296,683.552 862.856,683.552 863.415,683.552 863.974,683.552 864.533,683.552 865.093,683.552 865.652,683.552 866.211,683.552 866.77,683.552 867.33,683.552 867.889,683.552 868.448,683.552 869.007,683.552 869.567,683.552 870.126,683.552 870.685,683.552 871.244,683.552 871.804,683.552 872.363,683.552 872.922,683.552 873.481,683.552 874.041,683.552 874.6,683.552 875.159,683.552 875.718,683.552 876.278,683.552 876.837,683.552 877.396,683.552 877.955,683.552 878.515,683.552 879.074,683.552 879.633,683.552 880.192,683.552 880.752,683.552 881.311,683.552 881.87,683.552 882.429,683.552 882.989,683.552 883.548,683.552 884.107,683.552 884.666,683.552 885.226,683.552 885.785,683.552 886.344,683.552 886.903,683.552 887.463,683.552 888.022,683.552 888.581,683.552 889.14,683.552 889.7,683.552 890.259,683.552 890.818,683.552 891.377,683.552 891.937,683.552 892.496,683.552 893.055,683.552 893.614,683.552 894.174,683.552 894.733,683.552 895.292,683.552 895.851,683.552 896.411,683.552 896.97,683.552 897.529,683.552 898.088,683.552 898.648,683.552 899.207,683.552 899.766,683.552 900.325,683.552 900.885,683.552 901.444,683.552 902.003,683.552 902.562,683.552 903.122,683.552 903.681,683.552 904.24,683.552 904.799,683.552 905.359,683.552 905.918,683.552 906.477,683.552 907.036,683.552 907.596,683.552 908.155,683.552 908.714,683.552 909.273,683.552 909.833,683.552 910.392,683.552 910.951,683.552 911.51,683.552 912.07,683.552 912.629,683.552 913.188,683.552 913.747,683.552 914.307,683.552 914.866,683.552 915.425,683.552 915.984,683.552 916.544,683.552 917.103,683.552 917.662,683.552 918.221,683.552 918.781,683.552 919.34,683.552 919.899,683.552 920.458,683.552 921.018,683.552 921.577,683.552 922.136,683.552 922.695,683.552 923.255,683.552 923.814,683.552 924.373,683.552 924.932,683.552 925.492,683.552 926.051,683.552 926.61,683.552 927.169,683.552 927.729,683.552 928.288,683.552 928.847,683.552 929.406,683.552 929.966,683.552 930.525,683.552 931.084,683.552 931.644,683.552 932.203,683.552 932.762,683.552 933.321,683.552 933.881,683.552 934.44,683.552 934.999,683.552 935.558,683.552 936.118,683.552 936.677,683.552 937.236,683.552 937.795,683.552 938.355,683.552 938.914,683.552 939.473,683.552 940.032,683.552 940.592,683.552 941.151,683.552 941.71,683.552 942.269,683.552 942.829,683.552 943.388,683.552 943.947,683.552 944.506,683.552 945.066,683.552 945.625,683.552 946.184,683.552 946.743,683.552 947.303,683.552 947.862,683.552 948.421,683.552 948.98,683.552 949.54,683.552 950.099,683.552 950.658,683.552 951.217,683.552 951.777,683.552 952.336,683.552 952.895,683.552 953.454,683.552 954.014,683.552 954.573,683.552 955.132,683.552 955.691,683.552 956.251,683.552 956.81,683.552 957.369,683.552 957.928,683.552 958.488,683.552 959.047,683.552 959.606,683.552 960.165,683.552 960.725,683.552 961.284,683.552 961.843,683.552 962.402,683.552 962.962,683.552 963.521,683.552 964.08,683.552 964.639,683.552 965.199,683.552 965.758,683.552 966.317,683.552 966.876,683.552 967.436,683.552 967.995,683.552 968.554,683.552 969.113,683.552 969.673,683.552 970.232,683.552 970.791,683.552 971.35,683.552 971.91,683.552 972.469,683.552 973.028,683.552 973.587,683.552 974.147,683.552 974.706,683.552 975.265,683.552 975.824,683.552 976.384,683.552 976.943,683.552 977.502,683.552 978.061,683.552 978.621,683.552 979.18,683.552 979.739,683.552 980.298,683.552 980.858,683.552 981.417,683.552 981.976,683.552 982.535,683.552 983.095,683.552 983.654,683.552 984.213,683.552 984.772,683.552 985.332,683.552 985.891,683.552 986.45,683.552 987.009,683.552 987.569,683.552 988.128,683.552 988.687,683.552 989.246,683.552 989.806,683.552 990.365,683.552 990.924,683.552 991.483,683.552 992.043,683.552 992.602,683.552 993.161,683.552 993.72,683.552 994.28,683.552 994.839,683.552 995.398,683.552 995.957,683.552 996.517,683.552 997.076,683.552 997.635,683.552 998.194,683.552 998.754,683.552 999.313,683.552 999.872,683.552 1000.43,683.552 1000.99,683.552 1001.55,683.552 1002.11,683.552 1002.67,683.552 1003.23,683.552 1003.79,683.552 1004.35,683.552 1004.91,683.552 1005.46,683.552 1006.02,683.552 1006.58,683.552 1007.14,683.552 1007.7,683.552 1008.26,683.552 1008.82,683.552 1009.38,683.552 1009.94,683.552 1010.5,683.552 1011.06,683.552 1011.62,683.552 1012.18,683.552 1012.73,683.552 1013.29,683.552 1013.85,683.552 1014.41,683.552 1014.97,683.552 1015.53,683.552 1016.09,683.552 1016.65,683.552 1017.21,683.552 1017.77,683.552 1018.33,683.552 1018.89,683.552 1019.45,683.552 1020.01,683.552 1020.56,683.552 1021.12,683.552 1021.68,683.552 1022.24,683.552 1022.8,683.552 1023.36,683.552 1023.92,683.552 1024.48,683.552 1025.04,683.552 1025.6,683.552 1026.16,683.552 1026.72,683.552 1027.28,683.552 1027.83,683.552 1028.39,683.552 1028.95,683.552 1029.51,683.552 1030.07,683.552 1030.63,683.552 1031.19,683.552 1031.75,683.552 1032.31,683.552 1032.87,683.552 1033.43,683.552 1033.99,683.552 1034.55,683.552 1035.1,683.552 1035.66,683.552 1036.22,683.552 1036.78,683.552 1037.34,683.552 1037.9,683.552 1038.46,683.552 1039.02,683.552 1039.58,683.552 1040.14,683.552 1040.7,683.552 1041.26,683.552 1041.82,683.552 1042.38,683.552 1042.93,683.552 1043.49,683.552 1044.05,683.552 1044.61,683.552 1045.17,683.552 1045.73,683.552 1046.29,683.552 1046.85,683.552 1047.41,683.552 1047.97,683.552 1048.53,683.552 1049.09,683.552 1049.65,683.552 1050.2,683.552 1050.76,683.552 1051.32,683.552 1051.88,683.552 1052.44,683.552 1053,683.552 1053.56,683.552 1054.12,683.552 1054.68,683.552 1055.24,683.552 1055.8,683.552 1056.36,683.552 1056.92,683.552 1057.48,683.552 1058.03,683.552 1058.59,683.552 1059.15,683.552 1059.71,683.552 1060.27,683.552 1060.83,683.552 1061.39,683.552 1061.95,683.552 1062.51,683.552 1063.07,683.552 1063.63,683.552 1064.19,683.552 1064.75,683.552 1065.3,683.552 1065.86,683.552 1066.42,683.552 1066.98,683.552 1067.54,683.552 1068.1,683.552 1068.66,683.552 1069.22,683.552 1069.78,683.552 1070.34,683.552 1070.9,683.552 1071.46,683.552 1072.02,683.552 1072.57,683.552 1073.13,683.552 1073.69,683.552 1074.25,683.552 1074.81,683.552 1075.37,683.552 1075.93,683.552 1076.49,683.552 1077.05,683.552 1077.61,683.552 1078.17,683.552 1078.73,683.552 1079.29,683.552 1079.85,683.552 1080.4,683.552 1080.96,683.552 1081.52,683.552 1082.08,683.552 1082.64,683.552 1083.2,683.552 1083.76,683.552 1084.32,683.552 1084.88,683.552 1085.44,683.552 1086,683.552 1086.56,683.552 1087.12,683.552 1087.67,683.552 1088.23,683.552 1088.79,683.552 1089.35,683.552 1089.91,683.552 1090.47,683.552 1091.03,683.552 1091.59,683.552 1092.15,683.552 1092.71,683.552 1093.27,683.552 1093.83,683.552 1094.39,683.552 1094.94,683.552 1095.5,683.552 1096.06,683.552 1096.62,683.552 1097.18,683.552 1097.74,683.552 1098.3,683.552 1098.86,683.552 1099.42,683.552 1099.98,683.552 1100.54,683.552 1101.1,683.552 1101.66,683.552 1102.22,683.552 1102.77,683.552 1103.33,683.552 1103.89,683.552 1104.45,683.552 1105.01,683.552 1105.57,683.552 1106.13,683.552 1106.69,683.552 1107.25,683.552 1107.81,683.552 1108.37,683.552 1108.93,683.552 1109.49,683.552 1110.04,683.552 1110.6,683.552 1111.16,683.552 1111.72,683.552 1112.28,683.552 1112.84,683.552 1113.4,683.552 1113.96,683.552 1114.52,683.552 1115.08,683.552 1115.64,683.552 1116.2,683.552 1116.76,683.552 1117.31,683.552 1117.87,683.552 1118.43,683.552 1118.99,683.552 1119.55,683.552 1120.11,683.552 1120.67,683.552 1121.23,683.552 1121.79,683.552 1122.35,683.552 1122.91,683.552 1123.47,683.552 1124.03,683.552 1124.59,683.552 1125.14,683.552 1125.7,683.552 1126.26,683.552 1126.82,683.552 1127.38,683.552 1127.94,683.552 1128.5,683.552 1129.06,683.552 1129.62,683.552 1130.18,683.552 1130.74,683.552 1131.3,683.552 1131.86,683.552 1132.41,683.552 1132.97,683.552 1133.53,683.552 1134.09,683.552 1134.65,683.552 1135.21,683.552 1135.77,683.552 1136.33,683.552 1136.89,683.552 1137.45,683.552 1138.01,683.552 1138.57,683.552 1139.13,683.552 1139.68,683.552 1140.24,683.552 1140.8,683.552 1141.36,683.552 1141.92,683.552 1142.48,683.552 1143.04,683.552 1143.6,683.552 1144.16,683.552 1144.72,683.552 1145.28,683.552 1145.84,683.552 1146.4,683.552 1146.96,683.552 1147.51,683.552 1148.07,683.552 1148.63,683.552 1149.19,683.552 1149.75,683.552 1150.31,683.552 1150.87,683.552 1151.43,683.552 1151.99,683.552 1152.55,683.552 1153.11,683.552 1153.67,683.552 1154.23,683.552 1154.78,683.552 1155.34,683.552 1155.9,683.552 1156.46,683.552 1157.02,683.552 1157.58,683.552 1158.14,683.552 1158.7,683.552 1159.26,683.552 1159.82,683.552 1160.38,683.552 1160.94,683.552 1161.5,683.552 1162.05,683.552 1162.61,683.552 1163.17,683.552 1163.73,683.552 1164.29,683.552 1164.85,683.552 1165.41,683.552 1165.97,683.552 1166.53,683.552 1167.09,683.552 1167.65,683.552 1168.21,683.552 1168.77,683.552 1169.33,683.552 1169.88,683.552 1170.44,683.552 1171,683.552 1171.56,683.552 1172.12,683.552 1172.68,683.552 1173.24,683.552 1173.8,683.552 1174.36,683.552 1174.92,683.552 1175.48,683.552 1176.04,683.552 1176.6,683.552 1177.15,683.552 1177.71,683.552 1178.27,683.552 1178.83,683.552 1179.39,683.552 1179.95,683.552 1180.51,683.552 1181.07,683.552 1181.63,683.552 1182.19,683.552 1182.75,683.552 1183.31,683.552 1183.87,683.552 1184.43,683.552 1184.98,683.552 1185.54,683.552 1186.1,683.552 1186.66,683.552 1187.22,683.552 1187.78,683.552 1188.34,683.552 1188.9,683.552 1189.46,683.552 1190.02,683.552 1190.58,683.552 1191.14,683.552 1191.7,683.552 1192.25,683.552 1192.81,683.552 1193.37,683.552 1193.93,683.552 1194.49,683.552 1195.05,683.552 1195.61,683.552 1196.17,683.552 1196.73,683.552 1197.29,683.552 1197.85,683.552 1198.41,683.552 1198.97,683.552 1199.52,683.552 1200.08,683.552 1200.64,683.552 1201.2,683.552 1201.76,683.552 1202.32,683.552 1202.88,683.552 1203.44,683.552 1204,683.552 1204.56,683.552 1205.12,683.552 1205.68,683.552 1206.24,683.552 1206.8,683.552 1207.35,683.552 1207.91,683.552 1208.47,683.552 1209.03,683.552 1209.59,683.552 1210.15,683.552 1210.71,683.552 1211.27,683.552 1211.83,683.552 1212.39,683.552 1212.95,683.552 1213.51,683.552 1214.07,683.552 1214.62,683.552 1215.18,683.552 1215.74,683.552 1216.3,683.552 1216.86,683.552 1217.42,683.552 1217.98,683.552 1218.54,683.552 1219.1,683.552 1219.66,683.552 1220.22,683.552 1220.78,683.552 1221.34,683.552 1221.89,683.552 1222.45,683.552 1223.01,683.552 1223.57,683.552 1224.13,683.552 1224.69,683.552 1225.25,683.552 1225.81,683.552 1226.37,683.552 1226.93,683.552 1227.49,683.552 1228.05,683.552 1228.61,683.552 1229.17,683.552 1229.72,683.552 1230.28,683.552 1230.84,683.552 1231.4,683.552 1231.96,683.552 1232.52,683.552 1233.08,683.552 1233.64,683.552 1234.2,683.552 1234.76,683.552 1235.32,683.552 1235.88,683.552 1236.44,683.552 1236.99,683.552 1237.55,683.552 1238.11,683.552 1238.67,683.552 1239.23,683.552 1239.79,683.552 1240.35,683.552 1240.91,683.552 1241.47,683.552 1242.03,683.552 1242.59,683.552 1243.15,683.552 1243.71,683.552 1244.26,683.552 1244.82,683.552 1245.38,683.552 1245.94,683.552 1246.5,683.552 1247.06,683.552 1247.62,683.552 1248.18,683.552 1248.74,683.552 1249.3,683.552 1249.86,683.552 1250.42,683.552 1250.98,683.552 1251.54,683.552 1252.09,683.552 1252.65,683.552 1253.21,683.552 1253.77,683.552 1254.33,683.552 1254.89,683.552 1255.45,683.552 1256.01,683.552 1256.57,683.552 1257.13,683.552 1257.69,683.552 1258.25,683.552 1258.81,683.552 1259.36,683.552 1259.92,683.552 1260.48,683.552 1261.04,683.552 1261.6,683.552 1262.16,683.552 1262.72,683.552 1263.28,683.552 1263.84,683.552 1264.4,683.552 1264.96,683.552 1265.52,683.552 1266.08,683.552 1266.63,683.552 1267.19,683.552 1267.75,683.552 1268.31,683.552 1268.87,683.552 1269.43,683.552 1269.99,683.552 1270.55,683.552 1271.11,683.552 1271.67,683.552 1272.23,683.552 1272.79,683.552 1273.35,683.552 1273.91,683.552 1274.46,683.552 1275.02,683.552 1275.58,683.552 1276.14,683.552 1276.7,683.552 1277.26,683.552 1277.82,683.552 1278.38,683.552 1278.94,683.552 1279.5,683.552 1280.06,683.552 1280.62,683.552 1281.18,683.552 1281.73,683.552 1282.29,683.552 1282.85,683.552 1283.41,683.552 1283.97,683.552 1284.53,683.552 1285.09,683.552 1285.65,683.552 1286.21,683.552 1286.77,683.552 1287.33,683.552 1287.89,683.552 1288.45,683.552 1289,683.552 1289.56,683.552 1290.12,683.552 1290.68,683.552 1291.24,683.552 1291.8,683.552 1292.36,683.552 1292.92,683.552 1293.48,683.552 1294.04,683.552 1294.6,683.552 1295.16,683.552 1295.72,683.552 1296.28,683.552 1296.83,683.552 1297.39,683.552 1297.95,683.552 1298.51,683.552 1299.07,683.552 1299.63,683.552 1300.19,683.552 1300.75,683.552 1301.31,683.552 1301.87,683.552 1302.43,683.552 1302.99,683.552 1303.55,683.552 1304.1,683.552 1304.66,683.552 1305.22,683.552 1305.78,683.552 1306.34,683.552 1306.9,683.552 1307.46,683.552 1308.02,683.552 1308.58,683.552 1309.14,683.552 1309.7,683.552 1310.26,683.552 1310.82,683.552 1311.38,683.552 1311.93,683.552 1312.49,683.552 1313.05,683.552 1313.61,683.552 1314.17,683.552 1314.73,683.552 1315.29,683.552 1315.85,683.552 1316.41,683.552 1316.97,683.552 1317.53,683.552 1318.09,683.552 1318.65,683.552 1319.2,683.552 1319.76,683.552 1320.32,683.552 1320.88,683.552 1321.44,683.552 1322,683.552 1322.56,683.552 1323.12,683.552 1323.68,683.552 1324.24,683.552 1324.8,683.552 1325.36,683.552 1325.92,683.552 1326.47,683.552 1327.03,683.552 1327.59,683.552 1328.15,683.552 1328.71,683.552 1329.27,683.552 1329.83,683.552 1330.39,683.552 1330.95,683.552 1331.51,683.552 1332.07,683.552 1332.63,683.552 1333.19,683.552 1333.75,683.552 1334.3,683.552 1334.86,683.552 1335.42,683.552 1335.98,683.552 1336.54,683.552 1337.1,683.552 1337.66,683.552 1338.22,683.552 1338.78,683.552 1339.34,683.552 1339.9,683.552 1340.46,683.552 1341.02,683.552 1341.57,683.552 1342.13,683.552 1342.69,683.552 1343.25,683.552 1343.81,683.552 1344.37,683.552 1344.93,683.552 1345.49,683.552 1346.05,683.552 1346.61,683.552 1347.17,683.552 1347.73,683.552 1348.29,683.552 1348.84,683.552 1349.4,683.552 1349.96,683.552 1350.52,683.552 1351.08,683.552 1351.64,683.552 1352.2,683.552 1352.76,683.552 1353.32,683.552 1353.88,683.552 1354.44,683.552 1355,683.552 1355.56,683.552 1356.12,683.552 1356.67,683.552 1357.23,683.552 1357.79,683.552 1358.35,683.552 1358.91,683.552 1359.47,683.552 1360.03,683.552 1360.59,683.552 1361.15,683.552 1361.71,683.552 1362.27,683.552 1362.83,683.552 1363.39,683.552 1363.94,683.552 1364.5,683.552 1365.06,683.552 1365.62,683.552 1366.18,683.552 1366.74,683.552 1367.3,683.552 1367.86,683.552 1368.42,683.552 1368.98,683.552 1369.54,683.552 1370.1,683.552 1370.66,683.552 1371.21,683.552 1371.77,683.552 1372.33,683.552 1372.89,683.552 1373.45,683.552 1374.01,683.552 1374.57,683.552 1375.13,683.552 1375.69,683.552 1376.25,683.552 1376.81,683.552 1377.37,683.552 1377.93,683.552 1378.49,683.552 1379.04,683.552 1379.6,683.552 1380.16,683.552 1380.72,683.552 1381.28,683.552 1381.84,683.552 1382.4,683.552 1382.96,683.552 1383.52,683.552 1384.08,683.552 1384.64,683.552 1385.2,683.552 1385.76,683.552 1386.31,683.552 1386.87,683.552 1387.43,683.552 1387.99,683.552 1388.55,683.552 1389.11,683.552 1389.67,683.552 1390.23,683.552 1390.79,683.552 1391.35,683.552 1391.91,683.552 1392.47,683.552 1393.03,683.552 1393.58,683.552 1394.14,683.552 1394.7,683.552 1395.26,683.552 1395.82,683.552 1396.38,683.552 1396.94,683.552 1397.5,683.552 1398.06,683.552 1398.62,683.552 1399.18,683.552 1399.74,683.552 1400.3,683.552 1400.86,683.552 1401.41,683.552 1401.97,683.552 1402.53,683.552 1403.09,683.552 1403.65,683.552 1404.21,683.552 1404.77,683.552 1405.33,683.552 1405.89,683.552 1406.45,683.552 1407.01,683.552 1407.57,683.552 1408.13,683.552 1408.68,683.552 1409.24,683.552 1409.8,683.552 1410.36,683.552 1410.92,683.552 1411.48,683.552 1412.04,683.552 1412.6,683.552 1413.16,683.552 1413.72,683.552 1414.28,683.552 1414.84,683.552 1415.4,683.552 1415.95,683.552 1416.51,683.552 1417.07,683.552 1417.63,683.552 1418.19,683.552 1418.75,683.552 1419.31,683.552 1419.87,683.552 1420.43,683.552 1420.99,683.552 1421.55,683.552 1422.11,683.552 1422.67,683.552 1423.23,683.552 1423.78,683.552 1424.34,683.552 1424.9,683.552 1425.46,683.552 1426.02,683.552 1426.58,683.552 1427.14,683.552 1427.7,683.552 1428.26,683.552 1428.82,683.552 1429.38,683.552 1429.94,683.552 1430.5,683.552 1431.05,683.552 1431.61,683.552 1432.17,683.552 1432.73,683.552 1433.29,683.552 1433.85,683.552 1434.41,683.552 1434.97,683.552 1435.53,683.552 1436.09,683.552 1436.65,683.552 1437.21,683.552 1437.77,683.552 1438.33,683.552 1438.88,683.552 1439.44,683.552 1440,683.552 1440.56,683.552 1441.12,683.552 1441.68,683.552 1442.24,683.552 1442.8,683.552 1443.36,683.552 1443.92,683.552 1444.48,683.552 1445.04,683.552 1445.6,683.552 1446.15,683.552 1446.71,683.552 1447.27,683.552 1447.83,683.552 1448.39,683.552 1448.95,683.552 1449.51,683.552 1450.07,683.552 1450.63,683.552 1451.19,683.552 1451.75,683.552 1452.31,683.552 1452.87,683.552 1453.42,683.552 1453.98,683.552 1454.54,683.552 1455.1,683.552 1455.66,683.552 1456.22,683.552 1456.78,683.552 1457.34,683.552 1457.9,683.552 1458.46,683.552 1459.02,683.552 1459.58,683.552 1460.14,683.552 1460.7,683.552 1461.25,683.552 1461.81,683.552 1462.37,683.552 1462.93,683.552 1463.49,683.552 1464.05,683.552 1464.61,683.552 1465.17,683.552 1465.73,683.552 1466.29,683.552 1466.85,683.552 1467.41,683.552 1467.97,683.552 1468.52,683.552 1469.08,683.552 1469.64,683.552 1470.2,683.552 1470.76,683.552 1471.32,683.552 1471.88,683.552 1472.44,683.552 1473,683.552 1473.56,683.552 1474.12,683.552 1474.68,683.552 1475.24,683.552 1475.79,683.552 1476.35,683.552 1476.91,683.552 1477.47,683.552 1478.03,683.552 1478.59,683.552 1479.15,683.552 1479.71,683.552 1480.27,683.552 1480.83,683.552 1481.39,683.552 1481.95,683.552 1482.51,683.552 1483.07,683.552 1483.62,683.552 1484.18,683.552 1484.74,683.552 1485.3,683.552 1485.86,683.552 1486.42,683.552 1486.98,683.552 1487.54,683.552 1488.1,683.552 1488.66,683.552 1489.22,683.552 1489.78,683.552 1490.34,683.552 1490.89,683.552 1491.45,683.552 1492.01,683.552 1492.57,683.552 1493.13,683.552 1493.69,683.552 1494.25,683.552 1494.81,683.552 1495.37,683.552 1495.93,683.552 1496.49,683.552 1497.05,683.552 1497.61,683.552 1498.16,683.552 1498.72,683.552 1499.28,683.552 1499.84,683.552 1500.4,683.552 1500.96,683.552 1501.52,683.552 1502.08,683.552 1502.64,683.552 1503.2,683.552 1503.76,683.552 1504.32,683.552 1504.88,683.552 1505.44,683.552 1505.99,683.552 1506.55,683.552 1507.11,683.552 1507.67,683.552 1508.23,683.552 1508.79,683.552 1509.35,683.552 1509.91,683.552 1510.47,683.552 1511.03,683.552 1511.59,683.552 1512.15,683.552 1512.71,683.552 1513.26,683.552 1513.82,683.552 1514.38,683.552 1514.94,683.552 1515.5,683.552 1516.06,683.552 1516.62,683.552 1517.18,683.552 1517.74,683.552 1518.3,683.552 1518.86,683.552 1519.42,683.552 1519.98,683.552 1520.53,683.552 1521.09,683.552 1521.65,683.552 1522.21,683.552 1522.77,683.552 1523.33,683.552 1523.89,683.552 1524.45,683.552 1525.01,683.552 1525.57,683.552 1526.13,683.552 1526.69,683.552 1527.25,683.552 1527.81,683.552 1528.36,683.552 1528.92,683.552 1529.48,683.552 1530.04,683.552 1530.6,683.552 1531.16,683.552 1531.72,683.552 1532.28,683.552 1532.84,683.552 1533.4,683.552 1533.96,683.552 1534.52,683.552 1535.08,683.552 1535.63,683.552 1536.19,683.552 1536.75,683.552 1537.31,683.552 1537.87,683.552 1538.43,683.552 1538.99,683.552 1539.55,683.552 1540.11,683.552 1540.67,683.552 1541.23,683.552 1541.79,683.552 1542.35,683.552 1542.9,683.552 1543.46,683.552 1544.02,683.552 1544.58,683.552 1545.14,683.552 1545.7,683.552 1546.26,683.552 1546.82,683.552 1547.38,683.552 1547.94,683.552 1548.5,683.552 1549.06,683.552 1549.62,683.552 1550.18,683.552 1550.73,683.552 1551.29,683.552 1551.85,683.552 1552.41,683.552 1552.97,683.552 1553.53,683.552 1554.09,683.552 1554.65,683.552 1555.21,683.552 1555.77,683.552 1556.33,683.552 1556.89,683.552 1557.45,683.552 1558,683.552 1558.56,683.552 1559.12,683.552 1559.68,683.552 1560.24,683.552 1560.8,683.552 1561.36,683.552 1561.92,683.552 1562.48,683.552 1563.04,683.552 1563.6,683.552 1564.16,683.552 1564.72,683.552 1565.28,683.552 1565.83,683.552 1566.39,683.552 1566.95,683.552 1567.51,683.552 1568.07,683.552 1568.63,683.552 1569.19,683.552 1569.75,683.552 1570.31,683.552 1570.87,683.552 1571.43,683.552 1571.99,683.552 1572.55,683.552 1573.1,683.552 1573.66,683.552 1574.22,683.552 1574.78,683.552 1575.34,683.552 1575.9,683.552 1576.46,683.552 1577.02,683.552 1577.58,683.552 1578.14,683.552 1578.7,683.552 1579.26,683.552 1579.82,683.552 1580.37,683.552 1580.93,683.552 1581.49,683.552 1582.05,683.552 1582.61,683.552 1583.17,683.552 1583.73,683.552 1584.29,683.552 1584.85,683.552 1585.41,683.552 1585.97,683.552 1586.53,683.552 1587.09,683.552 1587.65,683.552 1588.2,683.552 1588.76,683.552 1589.32,683.552 1589.88,683.552 1590.44,683.552 1591,683.552 1591.56,683.552 1592.12,683.552 1592.68,683.552 1593.24,683.552 1593.8,683.552 1594.36,683.552 1594.92,683.552 1595.47,683.552 1596.03,683.552 1596.59,683.552 1597.15,683.552 1597.71,683.552 1598.27,683.552 1598.83,683.552 1599.39,683.552 1599.95,683.552 1600.51,683.552 1601.07,683.552 1601.63,683.552 1602.19,683.552 1602.74,683.552 1603.3,683.552 1603.86,683.552 1604.42,683.552 1604.98,683.552 1605.54,683.552 1606.1,683.552 1606.66,683.552 1607.22,683.552 1607.78,683.552 1608.34,683.552 1608.9,683.552 1609.46,683.552 1610.02,683.552 1610.57,683.552 1611.13,683.552 1611.69,683.552 1612.25,683.552 1612.81,683.552 1613.37,683.552 1613.93,683.552 1614.49,683.552 1615.05,683.552 1615.61,683.552 1616.17,683.552 1616.73,683.552 1617.29,683.552 1617.84,683.552 1618.4,683.552 1618.96,683.552 1619.52,683.552 1620.08,683.552 1620.64,683.552 1621.2,683.552 1621.76,683.552 1622.32,683.552 1622.88,683.552 1623.44,683.552 1624,683.552 1624.56,683.552 1625.11,683.552 1625.67,683.552 1626.23,683.552 1626.79,683.552 1627.35,683.552 1627.91,683.552 1628.47,683.552 1629.03,683.552 1629.59,683.552 1630.15,683.552 1630.71,683.552 1631.27,683.552 1631.83,683.552 1632.39,683.552 1632.94,683.552 1633.5,683.552 1634.06,683.552 1634.62,683.552 1635.18,683.552 1635.74,683.552 1636.3,683.552 1636.86,683.552 1637.42,683.552 1637.98,683.552 1638.54,683.552 1639.1,683.552 1639.66,683.552 1640.21,683.552 1640.77,683.552 1641.33,683.552 1641.89,683.552 1642.45,683.552 1643.01,683.552 1643.57,683.552 1644.13,683.552 1644.69,683.552 1645.25,683.552 1645.81,683.552 1646.37,683.552 1646.93,683.552 1647.48,683.552 1648.04,683.552 1648.6,683.552 1649.16,683.552 1649.72,683.552 1650.28,683.552 1650.84,683.552 1651.4,683.552 1651.96,683.552 1652.52,683.552 1653.08,683.552 1653.64,683.552 1654.2,683.552 1654.76,683.552 1655.31,683.552 1655.87,683.552 1656.43,683.552 1656.99,683.552 1657.55,683.552 1658.11,683.552 1658.67,683.552 1659.23,683.552 1659.79,683.552 1660.35,683.552 1660.91,683.552 1661.47,683.552 1662.03,683.552 1662.58,683.552 1663.14,683.552 1663.7,683.552 1664.26,683.552 1664.82,683.552 1665.38,683.552 1665.94,683.552 1666.5,683.552 1667.06,683.552 1667.62,683.552 1668.18,683.552 1668.74,683.552 1669.3,683.552 1669.85,683.552 1670.41,683.552 1670.97,683.552 1671.53,683.552 1672.09,683.552 1672.65,683.552 1673.21,683.552 1673.77,683.552 1674.33,683.552 1674.89,683.552 1675.45,683.552 1676.01,683.552 1676.57,683.552 1677.13,683.552 1677.68,683.552 1678.24,683.552 1678.8,683.552 1679.36,683.552 1679.92,683.552 1680.48,683.552 1681.04,683.552 1681.6,683.552 1682.16,683.552 1682.72,683.552 1683.28,683.552 1683.84,683.552 1684.4,683.552 1684.95,683.552 1685.51,683.552 1686.07,683.552 1686.63,683.552 1687.19,683.552 1687.75,683.552 1688.31,683.552 1688.87,683.552 1689.43,683.552 1689.99,683.552 1690.55,683.552 1691.11,683.552 1691.67,683.552 1692.23,683.552 1692.78,683.552 1693.34,683.552 1693.9,683.552 1694.46,683.552 1695.02,683.552 1695.58,683.552 1696.14,683.552 1696.7,683.552 1697.26,683.552 1697.82,683.552 1698.38,683.552 1698.94,683.552 1699.5,683.552 1700.05,683.552 1700.61,683.552 1701.17,683.552 1701.73,683.552 1702.29,683.552 1702.85,683.552 1703.41,683.552 1703.97,683.552 1704.53,683.552 1705.09,683.552 1705.65,683.552 1706.21,683.552 1706.77,683.552 1707.32,683.552 1707.88,683.552 1708.44,683.552 1709,683.552 1709.56,683.552 1710.12,683.552 1710.68,683.552 1711.24,683.552 1711.8,683.552 1712.36,683.552 1712.92,683.552 1713.48,683.552 1714.04,683.552 1714.6,683.552 1715.15,683.552 1715.71,683.552 1716.27,683.552 1716.83,683.552 1717.39,683.552 1717.95,683.552 1718.51,683.552 1719.07,683.552 1719.63,683.552 1720.19,683.552 1720.75,683.552 1721.31,683.552 1721.87,683.552 1722.42,683.552 1722.98,683.552 1723.54,683.552 1724.1,683.552 1724.66,683.552 1725.22,683.552 1725.78,683.552 1726.34,683.552 1726.9,683.552 1727.46,683.552 1728.02,683.552 1728.58,683.552 1729.14,683.552 1729.69,683.552 1730.25,683.552 1730.81,683.552 1731.37,683.552 1731.93,683.552 1732.49,683.552 1733.05,683.552 1733.61,683.552 1734.17,683.552 1734.73,683.552 1735.29,683.552 1735.85,683.552 1736.41,683.552 1736.97,683.552 1737.52,683.552 1738.08,683.552 1738.64,683.552 1739.2,683.552 1739.76,683.552 1740.32,683.552 1740.88,683.552 1741.44,683.552 1742,683.552 1742.56,683.552 1743.12,683.552 1743.68,683.552 1744.24,683.552 1744.79,683.552 1745.35,683.552 1745.91,683.552 1746.47,683.552 1747.03,683.552 1747.59,683.552 1748.15,683.552 1748.71,683.552 1749.27,683.552 1749.83,683.552 1750.39,683.552 1750.95,683.552 1751.51,683.552 1752.06,683.552 1752.62,683.552 1753.18,683.552 1753.74,683.552 1754.3,683.552 1754.86,683.552 1755.42,683.552 1755.98,683.552 1756.54,683.552 1757.1,683.552 1757.66,683.552 1758.22,683.552 1758.78,683.552 1759.34,683.552 1759.89,683.552 1760.45,683.552 1761.01,683.552 1761.57,683.552 1762.13,683.552 1762.69,683.552 1763.25,683.552 1763.81,683.552 1764.37,683.552 1764.93,683.552 1765.49,683.552 1766.05,683.552 1766.61,683.552 1767.16,683.552 1767.72,683.552 1768.28,683.552 1768.84,683.552 1769.4,683.552 1769.96,683.552 1770.52,683.552 1771.08,683.552 1771.64,683.552 1772.2,683.552 1772.76,683.552 1773.32,683.552 1773.88,683.552 1774.43,683.552 1774.99,683.552 1775.55,683.552 1776.11,683.552 1776.67,683.552 1777.23,683.552 1777.79,683.552 1778.35,683.552 1778.91,683.552 1779.47,683.552 1780.03,683.552 1780.59,683.552 1781.15,683.552 1781.71,683.552 1782.26,683.552 1782.82,683.552 1783.38,683.552 1783.94,683.552 1784.5,683.552 1785.06,683.552 1785.62,683.552 1786.18,683.552 1786.74,683.552 1787.3,683.552 1787.86,683.552 1788.42,683.552 1788.98,683.552 1789.53,683.552 1790.09,683.552 1790.65,683.552 1791.21,683.552 1791.77,683.552 1792.33,683.552 1792.89,683.552 1793.45,683.552 1794.01,683.552 1794.57,683.552 1795.13,683.552 1795.69,683.552 1796.25,683.552 1796.8,683.552 1797.36,683.552 1797.92,683.552 1798.48,683.552 1799.04,683.552 1799.6,683.552 1800.16,683.552 1800.72,683.552 1801.28,683.552 1801.84,683.552 1802.4,683.552 1802.96,683.552 1803.52,683.552 1804.08,683.552 1804.63,683.552 1805.19,683.552 1805.75,683.552 1806.31,683.552 1806.87,683.552 1807.43,683.552 1807.99,683.552 1808.55,683.552 1809.11,683.552 1809.67,683.552 1810.23,683.552 1810.79,683.552 1811.35,683.552 1811.9,683.552 1812.46,683.552 1813.02,683.552 1813.58,683.552 1814.14,683.552 1814.7,683.552 1815.26,683.552 1815.82,683.552 1816.38,683.552 1816.94,683.552 1817.5,683.552 1818.06,683.552 1818.62,683.552 1819.18,683.552 1819.73,683.552 1820.29,683.552 1820.85,683.552 1821.41,683.552 1821.97,683.552 1822.53,683.552 1823.09,683.552 1823.65,683.552 1824.21,683.552 1824.77,683.552 1825.33,683.552 1825.89,683.552 1826.45,683.552 1827,683.552 1827.56,683.552 1828.12,683.552 1828.68,683.552 1829.24,683.552 1829.8,683.552 1830.36,683.552 1830.92,683.552 1831.48,683.552 1832.04,683.552 1832.6,683.552 1833.16,683.552 1833.72,683.552 1834.27,683.552 1834.83,683.552 1835.39,683.552 1835.95,683.552 1836.51,683.552 1837.07,683.552 1837.63,683.552 1838.19,683.552 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.034208125273087 ± 0.025372120531464867\nProjected Energy: -4.014920759787795 ± (0.0038148495506993285, 0.0035241893350130837)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.472343</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.4527e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.2293e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.477e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.443e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.605e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.606e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0, boundary_condition=:periodic)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space. This model can define both purely real as well as complex Hamiltonian.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\nboundary_condition : applied boundray condition \n\nBoundary conditions\n\nFor purely real Hamiltonian\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\nFor complex Hamiltonian\n\nFor θ-twisted -> Number \"θ\"\n\nwhere,\n\na_M+1 = exp(-iota θ) a_1\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen, boundary_condition)\n\nCompute the new address of a hopping event for the Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes multiplied by a term consistent with boundary condition.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions can be periodic, pi-twisted, hard-wall and θ-twisted.\n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\nFor θ-twisted -> Number \"θ\"\n\nwhere,\n\na_M+1 = exp(-iota θ) a_1\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, :twisted)\n(BoseFS{2,3}(2, 0, 0), -1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, :hard_wall)\n(BoseFS{2,3}(2, 0, 0), 0.0)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, π/4)\n(BoseFS{2,3}(2, 0, 0), 1.0000000000000002 + 1.0im)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
