var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip600\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip600)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip601\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip600)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip602\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip600)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1261.88 2211.02,1261.88 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.88 2211.02,1003.88 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.88 2211.02,745.88 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,487.88 2211.02,487.88 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,229.88 2211.02,229.88 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1261.88 423.181,1261.88 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.88 423.181,1003.88 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.88 423.181,745.88 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,487.88 423.181,487.88 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,229.88 423.181,229.88 \"/>\n<path clip-path=\"url(#clip600)\" d=\"M356.339 1247.68 Q352.728 1247.68 350.899 1251.24 Q349.094 1254.79 349.094 1261.92 Q349.094 1269.02 350.899 1272.59 Q352.728 1276.13 356.339 1276.13 Q359.973 1276.13 361.779 1272.59 Q363.608 1269.02 363.608 1261.92 Q363.608 1254.79 361.779 1251.24 Q359.973 1247.68 356.339 1247.68 M356.339 1243.98 Q362.149 1243.98 365.205 1248.58 Q368.284 1253.17 368.284 1261.92 Q368.284 1270.64 365.205 1275.25 Q362.149 1279.83 356.339 1279.83 Q350.529 1279.83 347.45 1275.25 Q344.395 1270.64 344.395 1261.92 Q344.395 1253.17 347.45 1248.58 Q350.529 1243.98 356.339 1243.98 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M290.043 1017.23 L306.363 1017.23 L306.363 1021.16 L284.418 1021.16 L284.418 1017.23 Q287.08 1014.47 291.664 1009.84 Q296.27 1005.19 297.451 1003.85 Q299.696 1001.32 300.576 999.586 Q301.478 997.827 301.478 996.137 Q301.478 993.383 299.534 991.647 Q297.613 989.911 294.511 989.911 Q292.312 989.911 289.858 990.674 Q287.427 991.438 284.65 992.989 L284.65 988.267 Q287.474 987.133 289.927 986.554 Q292.381 985.975 294.418 985.975 Q299.789 985.975 302.983 988.661 Q306.177 991.346 306.177 995.836 Q306.177 997.966 305.367 999.887 Q304.58 1001.79 302.474 1004.38 Q301.895 1005.05 298.793 1008.27 Q295.691 1011.46 290.043 1017.23 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M316.224 986.6 L334.58 986.6 L334.58 990.536 L320.506 990.536 L320.506 999.008 Q321.524 998.66 322.543 998.498 Q323.562 998.313 324.58 998.313 Q330.367 998.313 333.747 1001.48 Q337.126 1004.66 337.126 1010.07 Q337.126 1015.65 333.654 1018.75 Q330.182 1021.83 323.862 1021.83 Q321.687 1021.83 319.418 1021.46 Q317.173 1021.09 314.765 1020.35 L314.765 1015.65 Q316.849 1016.79 319.071 1017.34 Q321.293 1017.9 323.77 1017.9 Q327.774 1017.9 330.112 1015.79 Q332.45 1013.68 332.45 1010.07 Q332.45 1006.46 330.112 1004.35 Q327.774 1002.25 323.77 1002.25 Q321.895 1002.25 320.02 1002.67 Q318.168 1003.08 316.224 1003.96 L316.224 986.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M356.339 989.679 Q352.728 989.679 350.899 993.244 Q349.094 996.785 349.094 1003.92 Q349.094 1011.02 350.899 1014.59 Q352.728 1018.13 356.339 1018.13 Q359.973 1018.13 361.779 1014.59 Q363.608 1011.02 363.608 1003.92 Q363.608 996.785 361.779 993.244 Q359.973 989.679 356.339 989.679 M356.339 985.975 Q362.149 985.975 365.205 990.582 Q368.284 995.165 368.284 1003.92 Q368.284 1012.64 365.205 1017.25 Q362.149 1021.83 356.339 1021.83 Q350.529 1021.83 347.45 1017.25 Q344.395 1012.64 344.395 1003.92 Q344.395 995.165 347.45 990.582 Q350.529 985.975 356.339 985.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M286.062 728.6 L304.418 728.6 L304.418 732.535 L290.344 732.535 L290.344 741.007 Q291.363 740.66 292.381 740.498 Q293.4 740.313 294.418 740.313 Q300.205 740.313 303.585 743.484 Q306.964 746.656 306.964 752.072 Q306.964 757.651 303.492 760.753 Q300.02 763.831 293.701 763.831 Q291.525 763.831 289.256 763.461 Q287.011 763.091 284.603 762.35 L284.603 757.651 Q286.687 758.785 288.909 759.341 Q291.131 759.896 293.608 759.896 Q297.613 759.896 299.951 757.79 Q302.288 755.683 302.288 752.072 Q302.288 748.461 299.951 746.355 Q297.613 744.248 293.608 744.248 Q291.733 744.248 289.858 744.665 Q288.006 745.082 286.062 745.961 L286.062 728.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M326.177 731.679 Q322.566 731.679 320.737 735.244 Q318.932 738.785 318.932 745.915 Q318.932 753.021 320.737 756.586 Q322.566 760.128 326.177 760.128 Q329.811 760.128 331.617 756.586 Q333.446 753.021 333.446 745.915 Q333.446 738.785 331.617 735.244 Q329.811 731.679 326.177 731.679 M326.177 727.975 Q331.987 727.975 335.043 732.582 Q338.122 737.165 338.122 745.915 Q338.122 754.642 335.043 759.248 Q331.987 763.831 326.177 763.831 Q320.367 763.831 317.288 759.248 Q314.233 754.642 314.233 745.915 Q314.233 737.165 317.288 732.582 Q320.367 727.975 326.177 727.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M356.339 731.679 Q352.728 731.679 350.899 735.244 Q349.094 738.785 349.094 745.915 Q349.094 753.021 350.899 756.586 Q352.728 760.128 356.339 760.128 Q359.973 760.128 361.779 756.586 Q363.608 753.021 363.608 745.915 Q363.608 738.785 361.779 735.244 Q359.973 731.679 356.339 731.679 M356.339 727.975 Q362.149 727.975 365.205 732.582 Q368.284 737.165 368.284 745.915 Q368.284 754.642 365.205 759.248 Q362.149 763.831 356.339 763.831 Q350.529 763.831 347.45 759.248 Q344.395 754.642 344.395 745.915 Q344.395 737.165 347.45 732.582 Q350.529 727.975 356.339 727.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M284.835 470.6 L307.057 470.6 L307.057 472.591 L294.511 505.16 L289.627 505.16 L301.432 474.535 L284.835 474.535 L284.835 470.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M316.224 470.6 L334.58 470.6 L334.58 474.535 L320.506 474.535 L320.506 483.007 Q321.524 482.66 322.543 482.498 Q323.562 482.313 324.58 482.313 Q330.367 482.313 333.747 485.484 Q337.126 488.655 337.126 494.072 Q337.126 499.651 333.654 502.752 Q330.182 505.831 323.862 505.831 Q321.687 505.831 319.418 505.461 Q317.173 505.09 314.765 504.35 L314.765 499.651 Q316.849 500.785 319.071 501.34 Q321.293 501.896 323.77 501.896 Q327.774 501.896 330.112 499.79 Q332.45 497.683 332.45 494.072 Q332.45 490.461 330.112 488.354 Q327.774 486.248 323.77 486.248 Q321.895 486.248 320.02 486.665 Q318.168 487.081 316.224 487.961 L316.224 470.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M356.339 473.679 Q352.728 473.679 350.899 477.243 Q349.094 480.785 349.094 487.915 Q349.094 495.021 350.899 498.586 Q352.728 502.128 356.339 502.128 Q359.973 502.128 361.779 498.586 Q363.608 495.021 363.608 487.915 Q363.608 480.785 361.779 477.243 Q359.973 473.679 356.339 473.679 M356.339 469.975 Q362.149 469.975 365.205 474.581 Q368.284 479.165 368.284 487.915 Q368.284 496.641 365.205 501.248 Q362.149 505.831 356.339 505.831 Q350.529 505.831 347.45 501.248 Q344.395 496.641 344.395 487.915 Q344.395 479.165 347.45 474.581 Q350.529 469.975 356.339 469.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M256.664 243.225 L264.303 243.225 L264.303 216.859 L255.992 218.526 L255.992 214.266 L264.256 212.6 L268.932 212.6 L268.932 243.225 L276.571 243.225 L276.571 247.16 L256.664 247.16 L256.664 243.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M296.015 215.678 Q292.404 215.678 290.576 219.243 Q288.77 222.785 288.77 229.914 Q288.77 237.021 290.576 240.586 Q292.404 244.127 296.015 244.127 Q299.65 244.127 301.455 240.586 Q303.284 237.021 303.284 229.914 Q303.284 222.785 301.455 219.243 Q299.65 215.678 296.015 215.678 M296.015 211.975 Q301.826 211.975 304.881 216.581 Q307.96 221.164 307.96 229.914 Q307.96 238.641 304.881 243.248 Q301.826 247.831 296.015 247.831 Q290.205 247.831 287.127 243.248 Q284.071 238.641 284.071 229.914 Q284.071 221.164 287.127 216.581 Q290.205 211.975 296.015 211.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M326.177 215.678 Q322.566 215.678 320.737 219.243 Q318.932 222.785 318.932 229.914 Q318.932 237.021 320.737 240.586 Q322.566 244.127 326.177 244.127 Q329.811 244.127 331.617 240.586 Q333.446 237.021 333.446 229.914 Q333.446 222.785 331.617 219.243 Q329.811 215.678 326.177 215.678 M326.177 211.975 Q331.987 211.975 335.043 216.581 Q338.122 221.164 338.122 229.914 Q338.122 238.641 335.043 243.248 Q331.987 247.831 326.177 247.831 Q320.367 247.831 317.288 243.248 Q314.233 238.641 314.233 229.914 Q314.233 221.164 317.288 216.581 Q320.367 211.975 326.177 211.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M356.339 215.678 Q352.728 215.678 350.899 219.243 Q349.094 222.785 349.094 229.914 Q349.094 237.021 350.899 240.586 Q352.728 244.127 356.339 244.127 Q359.973 244.127 361.779 240.586 Q363.608 237.021 363.608 229.914 Q363.608 222.785 361.779 219.243 Q359.973 215.678 356.339 215.678 M356.339 211.975 Q362.149 211.975 365.205 216.581 Q368.284 221.164 368.284 229.914 Q368.284 238.641 365.205 243.248 Q362.149 247.831 356.339 247.831 Q350.529 247.831 347.45 243.248 Q344.395 238.641 344.395 229.914 Q344.395 221.164 347.45 216.581 Q350.529 211.975 356.339 211.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip602)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,229.88 4017.76,229.88 \"/>\n<polyline clip-path=\"url(#clip602)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.5 456.554,1250.44 457.123,1250.25 457.691,1250.04 458.259,1249.73 458.828,1248.32 459.396,1246.86 459.964,1245.38 460.533,1244.89 461.101,1244.37 461.669,1243.73 462.238,1243 462.806,1242.16 463.375,1240.2 463.943,1239.21 464.511,1238.08 465.08,1236.87 465.648,1233.5 466.216,1232.13 466.785,1230.66 467.353,1229.07 467.921,1227.35 468.49,1225.46 469.058,1223.41 469.626,1220.2 470.195,1217.87 470.763,1214.36 471.331,1210.63 471.9,1206.8 472.468,1203.9 473.036,1199.71 473.605,1194.35 474.173,1190.91 474.741,1186.32 475.31,1181.59 475.878,1176.63 476.446,1171.5 477.015,1165.11 477.583,1159.59 478.152,1152.93 478.72,1148.12 479.288,1143.07 479.857,1134.81 480.425,1129.52 480.993,1122.97 481.562,1116.2 482.13,1110.37 482.698,1102.21 483.267,1094.82 483.835,1087.24 484.403,1079.4 484.972,1071.36 485.54,1063.23 486.108,1053.83 486.677,1044.33 487.245,1033.77 487.813,1024.2 488.382,1015.55 488.95,1005.61 489.518,996.853 490.087,986.889 490.655,976.927 491.224,968.737 491.792,960.425 492.36,950.668 492.929,941.095 493.497,930.364 494.065,921.626 494.634,912.742 495.202,900.809 495.77,892.017 496.339,880.947 496.907,870.873 497.475,860.752 498.044,850.702 498.612,840.407 499.18,828.138 499.749,816.062 500.317,805.13 500.885,792.26 501.454,782.598 502.022,771.948 502.59,759.215 503.159,749.836 503.727,740.471 504.295,730.165 504.864,721.882 505.432,712.55 506.001,701.226 506.569,692.212 507.137,684.336 507.706,673.226 508.274,662.248 508.842,653.437 509.411,646.765 509.979,637.052 510.547,627.586 511.116,620.085 511.684,612.797 512.252,605.435 512.821,595.021 513.389,587.935 513.957,578.763 514.526,571.631 515.094,563.712 515.662,557.003 516.231,550.284 516.799,543.598 517.367,535.111 517.936,527.91 518.504,518.704 519.072,512.824 519.641,506.099 520.209,497.343 520.778,489.871 521.346,483.552 521.914,477.255 522.483,470.126 523.051,464.275 523.619,459.473 524.188,452.698 524.756,447.107 525.324,442.776 525.893,435.963 526.461,429.606 527.029,422.386 527.598,417.407 528.166,411.57 528.734,410.141 529.303,403.486 529.871,398.163 530.439,391.878 531.008,389.83 531.576,386.706 532.144,384.881 532.713,381.53 533.281,377.462 533.85,373.333 534.418,372.637 534.986,367.477 535.555,364.695 536.123,361.093 536.691,360.457 537.26,355.596 537.828,349.792 538.396,347.364 538.965,343.838 539.533,340.614 540.101,336.241 540.67,334.47 541.238,332.385 541.806,330.479 542.375,328.562 542.943,326.806 543.511,320.533 544.08,316.901 544.648,315.447 545.216,311.716 545.785,309.544 546.353,306.261 546.921,303.147 547.49,302.146 548.058,302.091 548.627,297.915 549.195,297.074 549.763,296.275 550.332,296.448 550.9,296.385 551.468,294.399 552.037,293.572 552.605,290.346 553.173,289.4 553.742,285.386 554.31,284.651 554.878,283.934 555.447,278.997 556.015,281.525 556.583,281.901 557.152,279.054 557.72,276.4 558.288,274.903 558.857,276.504 559.425,272.781 559.993,271.273 560.562,270.041 561.13,269.737 561.698,270.571 562.267,269.007 562.835,267.721 563.404,265.563 563.972,265.259 564.54,263.959 565.109,263.791 565.677,261.881 566.245,260.779 566.814,261.587 567.382,260.675 567.95,261.723 568.519,262.795 569.087,262.368 569.655,262.257 570.224,262.85 570.792,263.64 571.36,265.119 571.929,261.69 572.497,260.128 573.065,260.742 573.634,262.409 574.202,259.732 574.77,259.373 575.339,258.982 575.907,258.434 576.476,259.854 577.044,258.323 577.612,258.002 578.181,254.451 578.749,253.075 579.317,251.797 579.886,251.709 580.454,251.486 581.022,251.195 581.591,251.164 582.159,251.209 582.727,249.795 583.296,250.682 583.864,249.454 584.432,250.352 585.001,250.069 585.569,252.16 586.137,251.769 586.706,251.298 587.274,251.16 587.842,251.747 588.411,249.375 588.979,249.156 589.547,246.796 590.116,244.629 590.684,243.842 591.253,243.731 591.821,243.774 592.389,243.84 592.958,243.996 593.526,241.014 594.094,236.014 594.663,233.488 595.231,235.404 595.799,234.883 596.368,234.596 596.936,235.133 597.504,235.592 598.073,234.078 598.641,233.708 599.209,235.533 599.778,237.118 600.346,236.668 600.914,238.285 601.483,238.786 602.051,240.053 602.619,240.266 603.188,239.657 603.756,238.881 604.325,240.049 604.893,239.302 605.461,240.459 606.03,241.836 606.598,242.937 607.166,242.759 607.735,243.689 608.303,244.708 608.871,244.775 609.44,245.71 610.008,243.374 610.576,243.23 611.145,243.997 611.713,244.714 612.281,243.486 612.85,243.309 613.418,243.089 613.986,242.985 614.555,244.888 615.123,240.558 615.691,239.477 616.26,241.523 616.828,241.682 617.396,239.514 617.965,239.46 618.533,238.662 619.102,237.613 619.67,236.881 620.238,237.04 620.807,238.336 621.375,235.369 621.943,236.923 622.512,236.243 623.08,236.462 623.648,235.566 624.217,235.726 624.785,237.924 625.353,237.883 625.922,236.871 626.49,237.154 627.058,238.571 627.627,241.608 628.195,242.472 628.763,242.988 629.332,241.62 629.9,241.437 630.468,238.934 631.037,238.943 631.605,238.657 632.173,238.542 632.742,236.395 633.31,238.303 633.879,238.325 634.447,236.046 635.015,233.894 635.584,234.937 636.152,236.176 636.72,234.105 637.289,229.202 637.857,227.669 638.425,226.221 638.994,226.94 639.562,226.731 640.13,226.543 640.699,227.407 641.267,229.161 641.835,229.74 642.404,228.214 642.972,229.963 643.54,230.639 644.109,232.106 644.677,233.494 645.245,234.682 645.814,233.769 646.382,233.954 646.951,234.55 647.519,236.681 648.087,236.905 648.656,234.805 649.224,233.901 649.792,234.194 650.361,231.329 650.929,231.67 651.497,231.282 652.066,231.907 652.634,231.327 653.202,231.616 653.771,234.198 654.339,234.47 654.907,234.582 655.476,235.887 656.044,233.975 656.612,234.294 657.181,237.689 657.749,237.529 658.317,239.44 658.886,238.082 659.454,235.855 660.022,235.705 660.591,236.769 661.159,235.786 661.728,235.85 662.296,233.399 662.864,233.539 663.433,235.97 664.001,237.082 664.569,235.089 665.138,237.195 665.706,238.227 666.274,238.038 666.843,239.127 667.411,240.014 667.979,239.808 668.548,241.489 669.116,238.927 669.684,236.635 670.253,235.494 670.821,233.329 671.389,235.565 671.958,235.468 672.526,235.575 673.094,234.538 673.663,235.608 674.231,235.58 674.799,234.519 675.368,234.384 675.936,236.269 676.505,237.144 677.073,235.806 677.641,237.84 678.21,236.587 678.778,238.427 679.346,241.128 679.915,239.619 680.483,239.007 681.051,238.508 681.62,237.078 682.188,236.561 682.756,236.277 683.325,236.137 683.893,236.992 684.461,235.854 685.03,233.592 685.598,233.481 686.166,234.51 686.735,233.344 687.303,235.173 687.871,234.93 688.44,231.616 689.008,230.906 689.577,229.846 690.145,231.084 690.713,230.187 691.282,230.454 691.85,232.763 692.418,232.76 692.987,231.693 693.555,232.493 694.123,233.584 694.692,233.441 695.26,230.184 695.828,230.536 696.397,231.605 696.965,230.923 697.533,228.982 698.102,229.174 698.67,229.545 699.238,229.761 699.807,230.925 700.375,231.327 700.943,231.364 701.512,230.479 702.08,231.868 702.648,231.875 703.217,229.961 703.785,227.393 704.354,226.745 704.922,228.189 705.49,230.536 706.059,229.664 706.627,229.965 707.195,231.319 707.764,230.433 708.332,229.562 708.9,229.678 709.469,227.912 710.037,226.467 710.605,228.047 711.174,230.647 711.742,231.742 712.31,230.834 712.879,232.233 713.447,232.484 714.015,230.658 714.584,229.821 715.152,232.095 715.72,228.157 716.289,229.724 716.857,229.982 717.425,231.268 717.994,232.507 718.562,233.594 719.131,235.636 719.699,236.576 720.267,234.275 720.836,235.257 721.404,236.037 721.972,235.742 722.541,237.611 723.109,237.492 723.677,235.023 724.246,236.992 724.814,236.498 725.382,233.996 725.951,234.922 726.519,233.66 727.087,233.526 727.656,233.237 728.224,231.746 728.792,233.458 729.361,232.197 729.929,230.214 730.497,229.246 731.066,230.581 731.634,228.683 732.203,228.999 732.771,232.373 733.339,232.363 733.908,231.267 734.476,230.389 735.044,228.616 735.613,230.943 736.181,232.023 736.749,230.841 737.318,230.853 737.886,231.225 738.454,231.306 739.023,230.26 739.591,229.555 740.159,230.822 740.728,231.634 741.296,234.734 741.864,234.324 742.433,236.294 743.001,236.034 743.569,231.538 744.138,233.54 744.706,233.371 745.274,232.352 745.843,232.416 746.411,231.336 746.98,231.456 747.548,230.606 748.116,231.684 748.685,232.72 749.253,233.615 749.821,234.651 750.39,234.3 750.958,234.98 751.526,236.731 752.095,238.325 752.663,237.828 753.231,238.129 753.8,234.397 754.368,235.254 754.936,233.765 755.505,231.451 756.073,230.35 756.641,231.387 757.21,231.521 757.778,229.449 758.346,227.528 758.915,227.759 759.483,227.04 760.052,230.474 760.62,231.512 761.188,231.279 761.757,231.299 762.325,231.167 762.893,230.246 763.462,227.219 764.03,228.586 764.598,229.815 765.167,229.767 765.735,227.877 766.303,227.146 766.872,228.448 767.44,227.466 768.008,232.998 768.577,232.974 769.145,232.634 769.713,233.358 770.282,230.154 770.85,231.272 771.418,230.261 771.987,230.111 772.555,231.365 773.123,232.231 773.692,231.014 774.26,229.903 774.829,230.971 775.397,231.98 775.965,233.025 776.534,231.901 777.102,229.711 777.67,228.93 778.239,225.98 778.807,224.163 779.375,225.689 779.944,222.052 780.512,221.577 781.08,223.268 781.649,223.678 782.217,222.338 782.785,222.993 783.354,223.62 783.922,226.263 784.49,227.749 785.059,228.04 785.627,229.465 786.195,228.854 786.764,230.064 787.332,231.222 787.9,231.314 788.469,231.297 789.037,231.364 789.606,232.44 790.174,231.383 790.742,230.433 791.311,231.726 791.879,232.009 792.447,232.868 793.016,234.913 793.584,233.723 794.152,233.569 794.721,233.378 795.289,233.133 795.857,232.036 796.426,232.285 796.994,232.171 797.562,230.973 798.131,231.866 798.699,231.854 799.267,231.764 799.836,229.772 800.404,230.861 800.972,229.788 801.541,229.904 802.109,232.254 802.678,231.231 803.246,231.034 803.814,232.166 804.383,231.949 804.951,231.986 805.519,231.872 806.088,231.549 806.656,232.374 807.224,232.274 807.793,232.319 808.361,232.117 808.929,231.07 809.498,228.023 810.066,225.126 810.634,223.64 811.203,227.434 811.771,226.642 812.339,224.003 812.908,223.446 813.476,221.985 814.044,221.491 814.613,223.186 815.181,224.85 815.749,226.213 816.318,226.802 816.886,227.416 817.455,227.853 818.023,230.353 818.591,230.541 819.16,230.483 819.728,229.565 820.296,230.842 820.865,231.902 821.433,233.024 822.001,231.069 822.57,229.188 823.138,228.23 823.706,230.579 824.275,230.65 824.843,229.687 825.411,226.861 825.98,229.329 826.548,231.414 827.116,231.294 827.685,230.37 828.253,230.679 828.821,230.936 829.39,234.26 829.958,234.001 830.526,230.861 831.095,230.922 831.663,229.781 832.232,229.744 832.8,230.714 833.368,231.758 833.937,231.846 834.505,232.123 835.073,229.128 835.642,232.629 836.21,233.634 836.778,232.235 837.347,232.225 837.915,231.22 838.483,231.25 839.052,230.211 839.62,229.399 840.188,228.645 840.757,228.839 841.325,229.011 841.893,226.089 842.462,225.666 843.03,227.316 843.598,226.927 844.167,226.401 844.735,226.952 845.304,228.38 845.872,230.787 846.44,231.783 847.009,232.889 847.577,234.963 848.145,234.733 848.714,235.675 849.282,234.477 849.85,233.176 850.419,233.013 850.987,233.958 851.555,231.71 852.124,231.969 852.692,230.952 853.26,233.133 853.829,231.937 854.397,230.889 854.965,231.896 855.534,232.166 856.102,228.825 856.67,230.084 857.239,230.199 857.807,231.175 858.375,230.139 858.944,228.237 859.512,227.624 860.081,227.904 860.649,230.178 861.217,232.295 861.786,233.455 862.354,235.343 862.922,236.292 863.491,237.058 864.059,236.533 864.627,237.23 865.196,236.912 865.764,237.514 866.332,239.137 866.901,239.39 867.469,239.826 868.037,237.212 868.606,236.782 869.174,234.098 869.742,230.724 870.311,234.718 870.879,234.602 871.447,236.56 872.016,235.296 872.584,233.845 873.152,234.64 873.721,233.447 874.289,233.155 874.858,232.809 875.426,230.558 875.994,229.548 876.563,229.546 877.131,229.538 877.699,229.486 878.268,229.454 878.836,228.283 879.404,228.396 879.973,228.36 880.541,228.339 881.109,230.418 881.678,230.332 882.246,228.408 882.814,226.372 883.383,227.625 883.951,228.793 884.519,227.886 885.088,228.058 885.656,227.124 886.224,225.307 886.793,229.688 887.361,227.654 887.93,228.93 888.498,228.844 889.066,228.993 889.635,229.248 890.203,231.498 890.771,231.492 891.34,231.377 891.908,232.383 892.476,233.274 893.045,234.18 893.613,235.109 894.181,232.903 894.75,232.679 895.318,228.245 895.886,227.347 896.455,226.565 897.023,227.841 897.591,230.068 898.16,233.264 898.728,233.202 899.296,233.229 899.865,233.764 900.433,235.707 901.001,235.183 901.57,236.035 902.138,233.836 902.707,235.704 903.275,235.331 903.843,234.051 904.412,232.678 904.98,234.697 905.548,237.43 906.117,236.755 906.685,236.121 907.253,234.723 907.822,235.679 908.39,234.162 908.958,235.057 909.527,234.551 910.095,232.116 910.663,228.735 911.232,228.753 911.8,226.62 912.368,227.785 912.937,227.996 913.505,231.927 914.073,229.869 914.642,227.714 915.21,228.588 915.779,227.376 916.347,226.373 916.915,225.486 917.484,224.965 918.052,226.403 918.62,226.553 919.189,224.604 919.757,224.97 920.325,225.36 920.894,224.395 921.462,225.982 922.03,226.142 922.599,226.499 923.167,224.673 923.735,226.007 924.304,225.311 924.872,225.957 925.44,224.219 926.009,224.825 926.577,225.12 927.145,226.524 927.714,224.872 928.282,226.395 928.85,226.934 929.419,229.333 929.987,227.248 930.556,226.501 931.124,226.729 931.692,226.224 932.261,228.635 932.829,228.621 933.397,228.921 933.966,227.055 934.534,227.555 935.102,227.774 935.671,229.114 936.239,228.189 936.807,229.376 937.376,232.331 937.944,233.058 938.512,235.174 939.081,232.796 939.649,231.747 940.217,231.571 940.786,233.767 941.354,232.498 941.922,231.53 942.491,231.544 943.059,233.337 943.627,230.071 944.196,230.228 944.764,231.447 945.333,233.448 945.901,232.04 946.469,231.645 947.038,232.552 947.606,232.434 948.174,232.363 948.743,230.204 949.311,232.261 949.879,232.221 950.448,233.129 951.016,232.84 951.584,234.562 952.153,235.383 952.721,235.027 953.289,232.605 953.858,231.256 954.426,233.26 954.994,231.881 955.563,231.555 956.131,229.456 956.699,230.445 957.268,229.245 957.836,230.435 958.405,230.27 958.973,230.356 959.541,229.415 960.11,231.682 960.678,230.601 961.246,231.639 961.815,231.477 962.383,230.25 962.951,231.321 963.52,231.105 964.088,231.987 964.656,231.711 965.225,233.396 965.793,234.284 966.361,234.848 966.93,236.545 967.498,238.196 968.066,237.507 968.635,233.836 969.203,234.421 969.771,231.979 970.34,233.797 970.908,232.341 971.476,232.113 972.045,231.867 972.613,233.553 973.182,233.279 973.75,233.048 974.318,230.807 974.887,230.724 975.455,230.547 976.023,230.521 976.592,230.392 977.16,231.195 977.728,232.177 978.297,231.844 978.865,232.78 979.433,232.544 980.002,232.12 980.57,231.849 981.138,231.755 981.707,230.406 982.275,229.968 982.843,226.705 983.412,227.056 983.98,227.174 984.548,229.01 985.117,230.165 985.685,229.814 986.253,230.764 986.822,229.709 987.39,230.604 987.959,230.479 988.527,229.352 989.095,229.226 989.664,228.942 990.232,227.959 990.8,227.916 991.369,226.961 991.937,227.103 992.505,229.055 993.074,228.902 993.642,227.738 994.21,225.767 994.779,228.879 995.347,228.848 995.915,228.852 996.484,227.6 997.052,229.696 997.62,230.719 998.189,228.52 998.757,228.565 999.325,228.608 999.894,228.619 1000.46,227.617 1001.03,226.83 1001.6,225.911 1002.17,226.088 1002.74,227.352 1003.3,226.351 1003.87,226.506 1004.44,225.626 1005.01,224.834 1005.58,225.133 1006.15,227.657 1006.71,230.093 1007.28,230.241 1007.85,231.351 1008.42,230.236 1008.99,229.317 1009.56,229.6 1010.12,228.445 1010.69,231.629 1011.26,231.737 1011.83,230.469 1012.4,227.323 1012.97,227.489 1013.53,228.681 1014.1,227.849 1014.67,227.99 1015.24,225.995 1015.81,226.198 1016.38,226.531 1016.94,225.943 1017.51,225.392 1018.08,226.852 1018.65,227.396 1019.22,228.617 1019.79,228.639 1020.35,229.704 1020.92,226.907 1021.49,226.877 1022.06,227.245 1022.63,225.719 1023.2,228.19 1023.76,228.228 1024.33,227.305 1024.9,228.58 1025.47,231.768 1026.04,231.867 1026.61,232.008 1027.17,232.918 1027.74,229.715 1028.31,230.741 1028.88,230.883 1029.45,231.035 1030.02,230.937 1030.58,230.914 1031.15,231.679 1031.72,230.616 1032.29,230.506 1032.86,230.277 1033.43,230.486 1033.99,229.573 1034.56,229.529 1035.13,229.531 1035.7,228.444 1036.27,228.399 1036.84,226.665 1037.4,225.762 1037.97,225.133 1038.54,224.472 1039.11,225.826 1039.68,225.53 1040.25,226.063 1040.81,224.531 1041.38,223.129 1041.95,225.899 1042.52,227.376 1043.09,225.521 1043.66,224.997 1044.22,225.284 1044.79,226.852 1045.36,227.296 1045.93,230.001 1046.5,231.154 1047.07,231.349 1047.63,230.421 1048.2,231.675 1048.77,229.723 1049.34,231.007 1049.91,231.493 1050.48,230.308 1051.05,229.355 1051.61,229.651 1052.18,229.017 1052.75,230.204 1053.32,233.407 1053.89,235.157 1054.46,233.993 1055.02,233.778 1055.59,234.782 1056.16,235.562 1056.73,235.453 1057.3,234.138 1057.87,236.913 1058.43,234.447 1059,235.247 1059.57,233.856 1060.14,230.462 1060.71,232.733 1061.28,235.398 1061.84,232.86 1062.41,231.698 1062.98,232.73 1063.55,231.739 1064.12,231.777 1064.69,231.675 1065.25,231.738 1065.82,230.428 1066.39,230.224 1066.96,230.901 1067.53,230.674 1068.1,232.631 1068.66,231.454 1069.23,231.244 1069.8,227.973 1070.37,227.946 1070.94,228.077 1071.51,226.139 1072.07,226.449 1072.64,224.696 1073.21,226.246 1073.78,229.354 1074.35,229.272 1074.92,229.242 1075.48,228.365 1076.05,226.803 1076.62,227.993 1077.19,227.987 1077.76,228.29 1078.33,228.378 1078.89,229.6 1079.46,229.666 1080.03,230.653 1080.6,231.565 1081.17,229.324 1081.74,230.405 1082.3,227.227 1082.87,227.286 1083.44,227.413 1084.01,228.827 1084.58,227.993 1085.15,228.075 1085.71,233.493 1086.28,232.225 1086.85,234.203 1087.42,234.028 1087.99,232.792 1088.56,233.954 1089.12,234.759 1089.69,235.544 1090.26,232.365 1090.83,233.369 1091.4,234.299 1091.97,236.055 1092.53,234.566 1093.1,232.117 1093.67,229.863 1094.24,230.908 1094.81,231.865 1095.38,229.855 1095.94,230.886 1096.51,228.668 1097.08,227.7 1097.65,228.764 1098.22,228.757 1098.79,228.682 1099.35,228.649 1099.92,226.689 1100.49,230.063 1101.06,230.164 1101.63,231.133 1102.2,229.942 1102.76,229.857 1103.33,227.929 1103.9,227.171 1104.47,225.387 1105.04,225.73 1105.61,227.022 1106.17,227.113 1106.74,227.35 1107.31,226.487 1107.88,228.917 1108.45,231.092 1109.02,230.796 1109.58,230.68 1110.15,231.568 1110.72,230.483 1111.29,233.691 1111.86,233.247 1112.43,235.177 1112.99,234.632 1113.56,232.119 1114.13,230.142 1114.7,232.157 1115.27,230.927 1115.84,230.686 1116.4,229.808 1116.97,231.087 1117.54,232.171 1118.11,230.101 1118.68,229.172 1119.25,228.279 1119.81,227.568 1120.38,228.938 1120.95,229.097 1121.52,227.879 1122.09,231.031 1122.66,229.722 1123.23,228.788 1123.79,227.799 1124.36,229.04 1124.93,229.212 1125.5,230.531 1126.07,229.449 1126.64,230.504 1127.2,231.489 1127.77,230.315 1128.34,232.335 1128.91,230.189 1129.48,229.255 1130.05,231.385 1130.61,230.099 1131.18,228.093 1131.75,226.29 1132.32,225.789 1132.89,227.148 1133.46,228.401 1134.02,229.522 1134.59,229.624 1135.16,227.418 1135.73,224.897 1136.3,226.343 1136.87,226.481 1137.43,225.777 1138,226.375 1138.57,226.544 1139.14,228.003 1139.71,227.276 1140.28,226.463 1140.84,224.817 1141.41,227.378 1141.98,228.627 1142.55,229.862 1143.12,230.092 1143.69,227.035 1144.25,228.511 1144.82,229.66 1145.39,230.773 1145.96,229.652 1146.53,230.548 1147.1,230.477 1147.66,229.513 1148.23,230.61 1148.8,228.377 1149.37,228.638 1149.94,229.135 1150.51,230.371 1151.07,230.49 1151.64,229.396 1152.21,231.607 1152.78,231.939 1153.35,231.796 1153.92,231.603 1154.48,231.533 1155.05,233.568 1155.62,234.609 1156.19,234.485 1156.76,234.248 1157.33,232.894 1157.89,231.786 1158.46,229.707 1159.03,231.687 1159.6,228.613 1160.17,227.59 1160.74,228.858 1161.3,230.129 1161.87,230.109 1162.44,231.441 1163.01,231.343 1163.58,230.093 1164.15,230.12 1164.71,228.157 1165.28,226.35 1165.85,228.759 1166.42,230.698 1166.99,229.481 1167.56,232.731 1168.12,232.666 1168.69,235.493 1169.26,235.142 1169.83,233.507 1170.4,234.432 1170.97,230.918 1171.53,231.88 1172.1,235.034 1172.67,233.776 1173.24,235.347 1173.81,231.834 1174.38,232.83 1174.94,230.583 1175.51,231.544 1176.08,229.322 1176.65,231.613 1177.22,231.533 1177.79,232.359 1178.35,234.427 1178.92,234.03 1179.49,235.818 1180.06,236.512 1180.63,234.847 1181.2,233.174 1181.76,234.199 1182.33,234.754 1182.9,235.391 1183.47,235.98 1184.04,234.75 1184.61,234.069 1185.17,233.627 1185.74,234.301 1186.31,236.036 1186.88,234.361 1187.45,235.836 1188.02,236.401 1188.58,234.021 1189.15,230.424 1189.72,229.071 1190.29,227.945 1190.86,224.641 1191.43,224.791 1192,224.955 1192.56,224.259 1193.13,224.509 1193.7,224.654 1194.27,225.094 1194.84,225.362 1195.41,227.79 1195.97,226.816 1196.54,227.065 1197.11,229 1197.68,229.091 1198.25,228.939 1198.82,225.933 1199.38,227.214 1199.95,227.507 1200.52,229.621 1201.09,229.504 1201.66,230.377 1202.23,231.224 1202.79,232.302 1203.36,233.089 1203.93,232.597 1204.5,233.152 1205.07,232.865 1205.64,232.545 1206.2,232.413 1206.77,231.904 1207.34,231.66 1207.91,232.367 1208.48,230.264 1209.05,231.166 1209.61,232.166 1210.18,231.074 1210.75,231.007 1211.32,230.873 1211.89,230.863 1212.46,230.838 1213.02,233.63 1213.59,233.353 1214.16,232.787 1214.73,231.474 1215.3,231.304 1215.87,231.119 1216.43,225.72 1217,225.855 1217.57,223.86 1218.14,225.27 1218.71,226.745 1219.28,224.686 1219.84,225.907 1220.41,226.255 1220.98,226.316 1221.55,224.397 1222.12,225.722 1222.69,225.125 1223.25,224.306 1223.82,226.563 1224.39,227.638 1224.96,229.82 1225.53,227.603 1226.1,227.71 1226.66,225.688 1227.23,225.777 1227.8,225.983 1228.37,229.223 1228.94,229.101 1229.51,229.11 1230.07,229.186 1230.64,228.318 1231.21,227.269 1231.78,228.458 1232.35,227.24 1232.92,227.294 1233.48,228.54 1234.05,227.719 1234.62,228.992 1235.19,228.983 1235.76,229.054 1236.33,227.989 1236.89,228.288 1237.46,230.566 1238.03,229.501 1238.6,231.778 1239.17,227.59 1239.74,227.933 1240.3,227.231 1240.87,227.491 1241.44,226.681 1242.01,224.889 1242.58,225.411 1243.15,226.552 1243.71,225.933 1244.28,225.278 1244.85,224.392 1245.42,225.758 1245.99,227.189 1246.56,229.628 1247.12,228.725 1247.69,228.937 1248.26,229.035 1248.83,227.225 1249.4,225.145 1249.97,227.664 1250.53,230.064 1251.1,229.123 1251.67,229.317 1252.24,229.556 1252.81,230.835 1253.38,232.183 1253.94,232.134 1254.51,230.95 1255.08,228.056 1255.65,229.114 1256.22,228.399 1256.79,228.697 1257.35,226.759 1257.92,226.129 1258.49,226.608 1259.06,227.088 1259.63,230.537 1260.2,231.503 1260.76,228.493 1261.33,225.684 1261.9,225.222 1262.47,225.649 1263.04,226.217 1263.61,228.973 1264.18,231.256 1264.74,231.364 1265.31,232.49 1265.88,233.581 1266.45,231.699 1267.02,231.734 1267.59,229.672 1268.15,230.823 1268.72,229.766 1269.29,231.091 1269.86,229.091 1270.43,228.388 1271,229.957 1271.56,228.074 1272.13,229.412 1272.7,230.748 1273.27,233.014 1273.84,232.827 1274.41,230.581 1274.97,230.554 1275.54,231.572 1276.11,229.658 1276.68,229.68 1277.25,230.661 1277.82,229.768 1278.38,229.88 1278.95,231.147 1279.52,231.28 1280.09,232.442 1280.66,233.426 1281.23,233.176 1281.79,231.277 1282.36,231.309 1282.93,235.278 1283.5,236.136 1284.07,235.658 1284.64,235.06 1285.2,234.545 1285.77,234.226 1286.34,235.002 1286.91,234.782 1287.48,234.608 1288.05,234.021 1288.61,233.948 1289.18,232.762 1289.75,230.495 1290.32,227.54 1290.89,227.645 1291.46,228.836 1292.02,230.891 1292.59,235.874 1293.16,234.222 1293.73,232.889 1294.3,231.502 1294.87,232.464 1295.43,232.238 1296,233.077 1296.57,231.681 1297.14,231.624 1297.71,230.376 1298.28,230.238 1298.84,229.091 1299.41,227.974 1299.98,228.063 1300.55,228.24 1301.12,228.232 1301.69,228.462 1302.25,233.066 1302.82,232.749 1303.39,232.605 1303.96,232.695 1304.53,231.326 1305.1,231.37 1305.66,233.546 1306.23,231.936 1306.8,229.77 1307.37,229.751 1307.94,230.811 1308.51,229.396 1309.07,227.438 1309.64,226.549 1310.21,226.864 1310.78,226.038 1311.35,227.339 1311.92,229.544 1312.48,229.31 1313.05,231.318 1313.62,229.042 1314.19,231.024 1314.76,232.101 1315.33,230.832 1315.89,229.659 1316.46,231.574 1317.03,232.32 1317.6,229.936 1318.17,231.887 1318.74,231.713 1319.3,231.387 1319.87,232.476 1320.44,235.216 1321.01,235.969 1321.58,237.457 1322.15,235.796 1322.71,234.369 1323.28,234.918 1323.85,235.367 1324.42,232.917 1324.99,232.572 1325.56,231.266 1326.12,231.035 1326.69,230.884 1327.26,231.571 1327.83,230.303 1328.4,230.033 1328.97,230.097 1329.53,227.92 1330.1,225.836 1330.67,226.981 1331.24,229.042 1331.81,230.096 1332.38,231.094 1332.94,231.754 1333.51,231.522 1334.08,229.479 1334.65,229.416 1335.22,229.574 1335.79,233.644 1336.36,232.306 1336.92,231.235 1337.49,232.151 1338.06,232.015 1338.63,231.976 1339.2,231.812 1339.77,229.503 1340.33,229.535 1340.9,230.693 1341.47,230.281 1342.04,232.21 1342.61,234.094 1343.18,230.403 1343.74,230.235 1344.31,231.942 1344.88,229.726 1345.45,230.496 1346.02,230.427 1346.59,231.314 1347.15,229.114 1347.72,229.065 1348.29,225.988 1348.86,226.223 1349.43,225.226 1350,226.49 1350.56,224.593 1351.13,225.923 1351.7,224.056 1352.27,226.379 1352.84,225.513 1353.41,226.941 1353.97,225.104 1354.54,224.282 1355.11,225.904 1355.68,227.236 1356.25,225.309 1356.82,226.621 1357.38,228.657 1357.95,229.681 1358.52,227.881 1359.09,229.048 1359.66,229.02 1360.23,229.17 1360.79,228.969 1361.36,228.014 1361.93,228.912 1362.5,229.017 1363.07,230.306 1363.64,229.286 1364.2,228.464 1364.77,231.722 1365.34,231.862 1365.91,230.661 1366.48,229.465 1367.05,230.486 1367.61,229.384 1368.18,228.39 1368.75,230.517 1369.32,232.665 1369.89,234.411 1370.46,234.187 1371.02,232.67 1371.59,233.593 1372.16,233.229 1372.73,232.878 1373.3,233.78 1373.87,233.577 1374.43,234.085 1375,235.124 1375.57,233.67 1376.14,231.327 1376.71,231.158 1377.28,229.853 1377.84,229.679 1378.41,231.876 1378.98,231.778 1379.55,233.6 1380.12,231.076 1380.69,231.959 1381.25,232.781 1381.82,232.44 1382.39,230.971 1382.96,232.854 1383.53,233.442 1384.1,233.946 1384.66,234.568 1385.23,235.257 1385.8,233.564 1386.37,233.103 1386.94,233.987 1387.51,234.686 1388.07,234.152 1388.64,234.869 1389.21,234.604 1389.78,233.082 1390.35,229.584 1390.92,227.277 1391.48,227.372 1392.05,226.526 1392.62,226.557 1393.19,226.569 1393.76,226.739 1394.33,226.872 1394.89,225.012 1395.46,225.521 1396.03,225.731 1396.6,225.971 1397.17,225.084 1397.74,227.447 1398.3,227.584 1398.87,227.762 1399.44,227.835 1400.01,224.798 1400.58,221.845 1401.15,220.25 1401.71,221 1402.28,222.515 1402.85,223.212 1403.42,223.649 1403.99,225.134 1404.56,226.473 1405.13,223.702 1405.69,220.841 1406.26,220.602 1406.83,220.317 1407.4,222.013 1407.97,224.422 1408.54,222.818 1409.1,224.356 1409.67,226.996 1410.24,227.07 1410.81,229.517 1411.38,230.687 1411.95,231.725 1412.51,232.699 1413.08,234.361 1413.65,234.133 1414.22,232.974 1414.79,232.559 1415.36,232.415 1415.92,231.277 1416.49,229.064 1417.06,228.099 1417.63,230.47 1418.2,230.378 1418.77,230.288 1419.33,232.301 1419.9,232.186 1420.47,233.02 1421.04,232.806 1421.61,232.545 1422.18,234.351 1422.74,233.981 1423.31,233.616 1423.88,235.352 1424.45,235.003 1425.02,233.515 1425.59,233.308 1426.15,232.027 1426.72,234.002 1427.29,233.466 1427.86,230.292 1428.43,229.358 1429,229.456 1429.56,228.506 1430.13,225.576 1430.7,226.044 1431.27,227.34 1431.84,226.469 1432.41,225.687 1432.97,226.036 1433.54,226.147 1434.11,226.418 1434.68,225.569 1435.25,225.743 1435.82,227.025 1436.38,229.578 1436.95,231.503 1437.52,230.472 1438.09,229.358 1438.66,227.649 1439.23,228.894 1439.79,230.707 1440.36,228.489 1440.93,230.725 1441.5,231.467 1442.07,228.138 1442.64,229.003 1443.2,229.061 1443.77,230.329 1444.34,230.142 1444.91,230.876 1445.48,232.89 1446.05,230.767 1446.61,230.612 1447.18,230.527 1447.75,229.65 1448.32,228.683 1448.89,227.676 1449.46,226.69 1450.02,225.699 1450.59,226.161 1451.16,225.449 1451.73,223.605 1452.3,226.21 1452.87,227.468 1453.43,227.516 1454,228.712 1454.57,228.937 1455.14,228.976 1455.71,232.227 1456.28,233.26 1456.84,230.956 1457.41,229.778 1457.98,230.993 1458.55,233.091 1459.12,232.129 1459.69,232.969 1460.25,231.781 1460.82,231.915 1461.39,231.774 1461.96,231.79 1462.53,232.916 1463.1,232.808 1463.66,231.791 1464.23,232.789 1464.8,232.502 1465.37,232.24 1465.94,235.087 1466.51,233.603 1467.07,232.263 1467.64,233.896 1468.21,234.572 1468.78,234.169 1469.35,233.926 1469.92,233.393 1470.48,233.148 1471.05,233.964 1471.62,234.467 1472.19,238.079 1472.76,237.333 1473.33,235.669 1473.89,234.098 1474.46,233.779 1475.03,233.53 1475.6,232.262 1476.17,232.942 1476.74,232.779 1477.31,230.439 1477.87,231.37 1478.44,229.139 1479.01,227.916 1479.58,229.111 1480.15,227.091 1480.72,226.123 1481.28,226.276 1481.85,226.401 1482.42,224.763 1482.99,224.179 1483.56,223.441 1484.13,224.794 1484.69,224.977 1485.26,224.09 1485.83,226.327 1486.4,226.662 1486.97,225.64 1487.54,225.908 1488.1,225.25 1488.67,226.572 1489.24,228.992 1489.81,227.235 1490.38,227.639 1490.95,228.738 1491.51,227.91 1492.08,227.986 1492.65,229.168 1493.22,230.403 1493.79,229.579 1494.36,228.496 1494.92,229.644 1495.49,229.599 1496.06,232.792 1496.63,232.71 1497.2,232.506 1497.77,234.456 1498.33,236.084 1498.9,231.439 1499.47,229.113 1500.04,229.06 1500.61,228.348 1501.18,228.45 1501.74,226.315 1502.31,224.265 1502.88,224.453 1503.45,224.838 1504.02,225.166 1504.59,225.583 1505.15,221.924 1505.72,222.559 1506.29,223.256 1506.86,223.639 1507.43,224.2 1508,223.842 1508.56,226.327 1509.13,227.668 1509.7,227.783 1510.27,227.709 1510.84,228.862 1511.41,227.152 1511.97,228.339 1512.54,228.534 1513.11,229.874 1513.68,229.086 1514.25,228.1 1514.82,227.396 1515.38,226.794 1515.95,225.141 1516.52,224.415 1517.09,224.062 1517.66,227.585 1518.23,226.621 1518.79,229.099 1519.36,229.436 1519.93,230.691 1520.5,229.704 1521.07,232.215 1521.64,231.237 1522.2,229.166 1522.77,231.304 1523.34,232.395 1523.91,231.197 1524.48,230.378 1525.05,230.548 1525.61,230.749 1526.18,231.966 1526.75,231.922 1527.32,229.8 1527.89,230.092 1528.46,231.418 1529.02,232.426 1529.59,232.351 1530.16,234.255 1530.73,235.151 1531.3,235.857 1531.87,235.412 1532.43,235.016 1533,235.788 1533.57,235.35 1534.14,235.965 1534.71,237.489 1535.28,237.048 1535.84,233.242 1536.41,233.087 1536.98,231.692 1537.55,231.597 1538.12,231.912 1538.69,230.851 1539.25,230.566 1539.82,230.596 1540.39,230.64 1540.96,227.685 1541.53,229.691 1542.1,230.61 1542.66,230.581 1543.23,229.711 1543.8,231.575 1544.37,231.493 1544.94,234.563 1545.51,236.441 1546.08,237.167 1546.64,237.583 1547.21,234.795 1547.78,233.383 1548.35,232.102 1548.92,230.848 1549.49,231.895 1550.05,233.801 1550.62,230.522 1551.19,232.446 1551.76,234.266 1552.33,230.962 1552.9,230.984 1553.46,231.799 1554.03,234.721 1554.6,233.453 1555.17,233.26 1555.74,232.765 1556.31,231.609 1556.87,230.327 1557.44,232.173 1558.01,231.72 1558.58,232.531 1559.15,233.224 1559.72,232.967 1560.28,233.724 1560.85,235.391 1561.42,237.04 1561.99,236.357 1562.56,236.06 1563.13,234.373 1563.69,233.764 1564.26,231.063 1564.83,230.153 1565.4,231.111 1565.97,229.81 1566.54,228.506 1567.1,229.419 1567.67,228.205 1568.24,224.101 1568.81,224.293 1569.38,224.533 1569.95,223.768 1570.51,226.275 1571.08,226.444 1571.65,226.593 1572.22,225.709 1572.79,226.803 1573.36,226.949 1573.92,228.152 1574.49,227.085 1575.06,226.954 1575.63,228.152 1576.2,227.206 1576.77,228.346 1577.33,228.433 1577.9,228.499 1578.47,228.736 1579.04,228.89 1579.61,228.914 1580.18,231.079 1580.74,229.908 1581.31,227.967 1581.88,228.206 1582.45,229.275 1583.02,229.001 1583.59,227.199 1584.15,226.124 1584.72,225.411 1585.29,226.601 1585.86,227.662 1586.43,226.904 1587,227.124 1587.56,229.387 1588.13,229.336 1588.7,229.253 1589.27,229.353 1589.84,228.22 1590.41,228.379 1590.97,229.409 1591.54,230.445 1592.11,229.321 1592.68,229.255 1593.25,228.125 1593.82,228.285 1594.38,228.351 1594.95,230.505 1595.52,229.488 1596.09,228.603 1596.66,226.516 1597.23,225.541 1597.79,225.829 1598.36,227.152 1598.93,231.389 1599.5,231.32 1600.07,231.486 1600.64,231.405 1601.2,230.309 1601.77,230.096 1602.34,231.257 1602.91,230.335 1603.48,229.052 1604.05,230.384 1604.61,230.45 1605.18,229.599 1605.75,229.36 1606.32,226.329 1606.89,229.675 1607.46,229.463 1608.02,229.685 1608.59,226.567 1609.16,226.786 1609.73,228.137 1610.3,228.234 1610.87,228.27 1611.43,229.586 1612,229.679 1612.57,229.648 1613.14,229.833 1613.71,228.587 1614.28,230.757 1614.84,231.741 1615.41,233.822 1615.98,234.695 1616.55,232.557 1617.12,230.323 1617.69,231.047 1618.26,230.891 1618.82,231.955 1619.39,234.811 1619.96,234.468 1620.53,232.195 1621.1,232.064 1621.67,232.066 1622.23,230.743 1622.8,230.331 1623.37,229.332 1623.94,229.23 1624.51,229.45 1625.08,229.612 1625.64,231.534 1626.21,229.634 1626.78,229.64 1627.35,225.655 1627.92,225.033 1628.49,226.456 1629.05,223.819 1629.62,224.061 1630.19,225.428 1630.76,223.559 1631.33,225 1631.9,227.424 1632.46,227.582 1633.03,228.482 1633.6,230.569 1634.17,230.43 1634.74,229.433 1635.31,230.49 1635.87,230.38 1636.44,230.358 1637.01,230.351 1637.58,231.171 1638.15,231.115 1638.72,232.162 1639.28,231.92 1639.85,232.555 1640.42,233.355 1640.99,232.139 1641.56,230.996 1642.13,230.83 1642.69,229.759 1643.26,228.76 1643.83,226.671 1644.4,228.007 1644.97,227.861 1645.54,229.087 1646.1,229.105 1646.67,229.077 1647.24,229.083 1647.81,229.075 1648.38,228.19 1648.95,227.558 1649.51,226.698 1650.08,226.992 1650.65,225.127 1651.22,222.507 1651.79,223.125 1652.36,225.645 1652.92,225.874 1653.49,229.22 1654.06,228.288 1654.63,227.607 1655.2,228.88 1655.77,228.871 1656.33,228.73 1656.9,231.98 1657.47,233.851 1658.04,234.687 1658.61,235.442 1659.18,236.052 1659.74,235.794 1660.31,234.316 1660.88,235.067 1661.45,234.746 1662.02,234.413 1662.59,233.959 1663.15,233.69 1663.72,235.295 1664.29,233.928 1664.86,235.55 1665.43,234.023 1666,232.552 1666.56,232.129 1667.13,233.002 1667.7,232.891 1668.27,231.335 1668.84,232.214 1669.41,233.091 1669.97,235.914 1670.54,232.464 1671.11,233.588 1671.68,233.096 1672.25,233.884 1672.82,233.435 1673.38,234.294 1673.95,232.939 1674.52,229.525 1675.09,230.401 1675.66,230.254 1676.23,230.005 1676.79,226.757 1677.36,225.792 1677.93,223.951 1678.5,225.168 1679.07,227.577 1679.64,225.507 1680.2,226.772 1680.77,226.043 1681.34,225.294 1681.91,225.649 1682.48,226.884 1683.05,225.937 1683.61,225.214 1684.18,226.495 1684.75,227.749 1685.32,227.915 1685.89,230.047 1686.46,230.259 1687.02,231.062 1687.59,232.211 1688.16,234.148 1688.73,234.921 1689.3,232.705 1689.87,233.598 1690.44,231.344 1691,228.104 1691.57,228.259 1692.14,228.252 1692.71,229.676 1693.28,228.768 1693.85,228.997 1694.41,229.066 1694.98,225.764 1695.55,228.009 1696.12,228.077 1696.69,227.271 1697.26,228.297 1697.82,228.413 1698.39,228.34 1698.96,228.28 1699.53,227.62 1700.1,227.669 1700.67,226.759 1701.23,225.822 1701.8,226.992 1702.37,226.29 1702.94,227.574 1703.51,227.831 1704.08,227.996 1704.64,226.065 1705.21,227.267 1705.78,227.532 1706.35,225.573 1706.92,225.072 1707.49,228.58 1708.05,226.511 1708.62,227.885 1709.19,228.058 1709.76,231.207 1710.33,231.022 1710.9,232.944 1711.46,231.786 1712.03,230.619 1712.6,230.623 1713.17,230.649 1713.74,231.706 1714.31,231.576 1714.87,230.355 1715.44,229.375 1716.01,228.323 1716.58,228.604 1717.15,230.852 1717.72,233.073 1718.28,233.093 1718.85,231.872 1719.42,232.97 1719.99,232.901 1720.56,231.794 1721.13,231.727 1721.69,229.531 1722.26,228.668 1722.83,226.759 1723.4,226.999 1723.97,225.261 1724.54,224.442 1725.1,225.648 1725.67,223.891 1726.24,223.311 1726.81,225.863 1727.38,227.087 1727.95,225.369 1728.51,227.817 1729.08,228.906 1729.65,228.063 1730.22,227.262 1730.79,228.712 1731.36,229.072 1731.92,228.153 1732.49,229.509 1733.06,232.786 1733.63,232.723 1734.2,232.685 1734.77,232.684 1735.33,233.554 1735.9,232.431 1736.47,231.253 1737.04,232.208 1737.61,232.163 1738.18,230.153 1738.74,229.222 1739.31,226.237 1739.88,226.761 1740.45,228.174 1741.02,230.424 1741.59,227.285 1742.15,226.49 1742.72,225.703 1743.29,228.214 1743.86,228.53 1744.43,226.784 1745,228.043 1745.56,229.217 1746.13,229.507 1746.7,228.643 1747.27,228.859 1747.84,231.384 1748.41,230.423 1748.97,231.32 1749.54,231.488 1750.11,232.391 1750.68,233.046 1751.25,232.763 1751.82,232.556 1752.38,233.632 1752.95,233.19 1753.52,233.012 1754.09,236.254 1754.66,235.778 1755.23,236.492 1755.79,236.214 1756.36,235.839 1756.93,235.465 1757.5,235.143 1758.07,231.372 1758.64,232.269 1759.21,233.29 1759.77,230.107 1760.34,230.977 1760.91,229.875 1761.48,229.693 1762.05,230.965 1762.62,231.964 1763.18,230.823 1763.75,232.737 1764.32,233.407 1764.89,234.018 1765.46,235.778 1766.03,236.433 1766.59,235.042 1767.16,234.584 1767.73,236.305 1768.3,234.785 1768.87,235.476 1769.44,231.949 1770,229.729 1770.57,229.66 1771.14,228.545 1771.71,225.589 1772.28,225.711 1772.85,224.783 1773.41,225.415 1773.98,225.72 1774.55,223.766 1775.12,224.268 1775.69,220.565 1776.26,222.456 1776.82,223.083 1777.39,222.509 1777.96,222.907 1778.53,223.339 1779.1,222.89 1779.67,223.544 1780.23,225.103 1780.8,226.772 1781.37,228.033 1781.94,229.379 1782.51,229.142 1783.08,229.43 1783.64,229.583 1784.21,226.604 1784.78,227.863 1785.35,227.994 1785.92,228.199 1786.49,229.512 1787.05,227.704 1787.62,228.002 1788.19,230.32 1788.76,230.38 1789.33,231.344 1789.9,231.106 1790.46,230.128 1791.03,230.05 1791.6,231.135 1792.17,230.912 1792.74,232.939 1793.31,231.891 1793.87,231.777 1794.44,232.761 1795.01,232.72 1795.58,233.695 1796.15,232.539 1796.72,233.309 1797.28,233.089 1797.85,233.972 1798.42,236.721 1798.99,235.28 1799.56,232.899 1800.13,234.916 1800.69,233.746 1801.26,233.332 1801.83,233.093 1802.4,232.871 1802.97,233.659 1803.54,233.338 1804.1,232.028 1804.67,231.755 1805.24,231.571 1805.81,231.212 1806.38,230.949 1806.95,232.82 1807.51,232.442 1808.08,230.204 1808.65,229.247 1809.22,230.403 1809.79,229.173 1810.36,230.198 1810.92,230.183 1811.49,230.992 1812.06,228.976 1812.63,230.151 1813.2,229.26 1813.77,229.301 1814.33,230.516 1814.9,231.316 1815.47,228.994 1816.04,230.074 1816.61,230.012 1817.18,229.981 1817.74,229.984 1818.31,231.836 1818.88,232.667 1819.45,232.235 1820.02,232.063 1820.59,231.879 1821.15,232.908 1821.72,233.619 1822.29,233.214 1822.86,233.105 1823.43,232.812 1824,231.519 1824.56,227.308 1825.13,229.515 1825.7,230.41 1826.27,232.437 1826.84,233.239 1827.41,230.8 1827.97,230.929 1828.54,230.79 1829.11,231.828 1829.68,231.48 1830.25,234.205 1830.82,233.563 1831.39,233.359 1831.95,229.923 1832.52,231.03 1833.09,230.897 1833.66,232.973 1834.23,233.731 1834.8,231.195 1835.36,231.063 1835.93,230.885 1836.5,230.565 1837.07,228.353 1837.64,228.413 1838.21,229.384 1838.77,229.376 1839.34,232.233 1839.91,232.243 1840.48,231.972 1841.05,232.73 1841.62,233.418 1842.18,234.133 1842.75,234.499 1843.32,232.895 1843.89,231.639 1844.46,231.539 1845.03,231.414 1845.59,230.137 1846.16,229.019 1846.73,228.041 1847.3,230.028 1847.87,229.757 1848.44,228.706 1849,228.657 1849.57,228.385 1850.14,227.282 1850.71,228.429 1851.28,228.424 1851.85,227.179 1852.41,228.538 1852.98,226.495 1853.55,224.533 1854.12,223.648 1854.69,223.958 1855.26,222.959 1855.82,223.478 1856.39,225.762 1856.96,224.929 1857.53,227.189 1858.1,225.301 1858.67,225.547 1859.23,225.821 1859.8,224.946 1860.37,225.261 1860.94,225.487 1861.51,224.935 1862.08,225.457 1862.64,225.641 1863.21,228.257 1863.78,228.491 1864.35,229.618 1864.92,228.524 1865.49,227.653 1866.05,225.563 1866.62,224.812 1867.19,225.032 1867.76,225.542 1868.33,224.809 1868.9,226.051 1869.46,224.557 1870.03,226.875 1870.6,228.224 1871.17,228.37 1871.74,229.406 1872.31,229.632 1872.87,229.67 1873.44,229.76 1874.01,231.896 1874.58,229.755 1875.15,229.774 1875.72,229.775 1876.28,230.076 1876.85,227.962 1877.42,224.992 1877.99,223.434 1878.56,223.01 1879.13,222.523 1879.69,222.15 1880.26,220.934 1880.83,221.661 1881.4,221.225 1881.97,219.895 1882.54,221.486 1883.1,221.015 1883.67,222.497 1884.24,225.178 1884.81,224.656 1885.38,226.187 1885.95,227.686 1886.51,231.275 1887.08,231.336 1887.65,232.269 1888.22,230.201 1888.79,230.46 1889.36,230.497 1889.92,230.21 1890.49,229.444 1891.06,232.597 1891.63,233.699 1892.2,234.516 1892.77,234.507 1893.33,235.278 1893.9,234.063 1894.47,234.022 1895.04,234.596 1895.61,234.488 1896.18,235.439 1896.74,234.087 1897.31,235.029 1897.88,234.649 1898.45,234.322 1899.02,233.04 1899.59,233.857 1900.16,232.682 1900.72,235.532 1901.29,233.981 1901.86,233.708 1902.43,236.543 1903,237.233 1903.57,237.907 1904.13,232.312 1904.7,229.812 1905.27,232.857 1905.84,233.685 1906.41,233.49 1906.98,233.026 1907.54,232.715 1908.11,231.423 1908.68,230.277 1909.25,231.34 1909.82,230.131 1910.39,229.18 1910.95,231.286 1911.52,231.96 1912.09,231.582 1912.66,233.424 1913.23,235.385 1913.8,236.23 1914.36,237.01 1914.93,234.333 1915.5,235.138 1916.07,232.757 1916.64,232.336 1917.21,231.206 1917.77,229.878 1918.34,230.911 1918.91,228.568 1919.48,230.37 1920.05,229.394 1920.62,230.585 1921.18,230.635 1921.75,231.555 1922.32,230.482 1922.89,229.466 1923.46,229.638 1924.03,229.697 1924.59,228.592 1925.16,226.342 1925.73,226.695 1926.3,227.664 1926.87,226.773 1927.44,226.845 1928,223.082 1928.57,222.873 1929.14,223.504 1929.71,223.116 1930.28,225.495 1930.85,227.067 1931.41,227.346 1931.98,227.358 1932.55,227.548 1933.12,228.798 1933.69,227.788 1934.26,228.824 1934.82,232.227 1935.39,230.782 1935.96,231.795 1936.53,228.546 1937.1,229.796 1937.67,230.979 1938.23,232.733 1938.8,232.383 1939.37,232.153 1939.94,231.081 1940.51,230.953 1941.08,229.857 1941.64,231 1942.21,234.045 1942.78,233.705 1943.35,232.219 1943.92,233.116 1944.49,231.81 1945.05,231.679 1945.62,231.448 1946.19,231.195 1946.76,231.034 1947.33,229.811 1947.9,229.712 1948.46,231.776 1949.03,229.603 1949.6,227.647 1950.17,227.873 1950.74,226.935 1951.31,226.028 1951.87,227.282 1952.44,227.484 1953.01,228.874 1953.58,228.007 1954.15,227.922 1954.72,228.03 1955.28,226.231 1955.85,226.451 1956.42,226.593 1956.99,227.754 1957.56,224.938 1958.13,226.379 1958.69,226.591 1959.26,224.752 1959.83,226.166 1960.4,227.427 1960.97,225.922 1961.54,226.191 1962.1,227.386 1962.67,227.624 1963.24,226.761 1963.81,225.014 1964.38,227.646 1964.95,227.071 1965.51,227.444 1966.08,227.753 1966.65,227.949 1967.22,228.097 1967.79,226.255 1968.36,221.599 1968.92,222.229 1969.49,221.911 1970.06,225.601 1970.63,228.961 1971.2,231.193 1971.77,231.32 1972.34,231.117 1972.9,229.968 1973.47,229.873 1974.04,230.148 1974.61,228.16 1975.18,229.396 1975.75,228.6 1976.31,230.956 1976.88,230.959 1977.45,231.159 1978.02,232.332 1978.59,233.296 1979.16,233.263 1979.72,230.93 1980.29,230.891 1980.86,233.052 1981.43,232.672 1982,233.436 1982.57,236.28 1983.13,236.308 1983.7,235.975 1984.27,235.565 1984.84,235.096 1985.41,235.68 1985.98,235.157 1986.54,236.775 1987.11,235.401 1987.68,236.006 1988.25,236.534 1988.82,238.313 1989.39,238.899 1989.95,240.421 1990.52,241.667 1991.09,240.885 1991.66,239.191 1992.23,239.552 1992.8,238.813 1993.36,236.944 1993.93,233.406 1994.5,233.969 1995.07,229.316 1995.64,229.164 1996.21,229.028 1996.77,230.013 1997.34,230.955 1997.91,230.559 1998.48,228.393 1999.05,228.436 1999.62,230.726 2000.18,231.783 2000.75,229.524 2001.32,228.27 2001.89,229.171 2002.46,230.501 2003.03,228.254 2003.59,229.437 2004.16,228.412 2004.73,228.486 2005.3,228.534 2005.87,228.403 2006.44,227.321 2007,228.305 2007.57,228.061 2008.14,227.238 2008.71,228.361 2009.28,227.211 2009.85,226.173 2010.41,225.336 2010.98,224.409 2011.55,226.841 2012.12,227.846 2012.69,226.113 2013.26,226.452 2013.82,225.515 2014.39,225.777 2014.96,227.099 2015.53,226.044 2016.1,226.166 2016.67,227.335 2017.23,227.353 2017.8,226.328 2018.37,228.804 2018.94,229.529 2019.51,227.608 2020.08,228.875 2020.64,231.067 2021.21,229.922 2021.78,229.845 2022.35,228.827 2022.92,227.914 2023.49,227.895 2024.05,230.055 2024.62,231.162 2025.19,229.964 2025.76,229.07 2026.33,230.017 2026.9,229.986 2027.46,230.008 2028.03,231.098 2028.6,230.071 2029.17,230.01 2029.74,229.857 2030.31,231.78 2030.87,230.571 2031.44,231.868 2032.01,232.665 2032.58,229.151 2033.15,230.191 2033.72,231.297 2034.28,231.128 2034.85,230.886 2035.42,230.655 2035.99,229.466 2036.56,229.505 2037.13,230.527 2037.69,229.393 2038.26,228.505 2038.83,229.571 2039.4,228.791 2039.97,228.844 2040.54,232.225 2041.11,230.832 2041.67,230.686 2042.24,229.649 2042.81,228.805 2043.38,228.91 2043.95,228.782 2044.52,228.935 2045.08,227.729 2045.65,227.621 2046.22,227.776 2046.79,226.627 2047.36,226.806 2047.93,227.068 2048.49,225.392 2049.06,227.866 2049.63,229.153 2050.2,227.193 2050.77,226.465 2051.34,227.721 2051.9,227.943 2052.47,228.119 2053.04,227.113 2053.61,225.13 2054.18,225.516 2054.75,226.032 2055.31,227.676 2055.88,228.129 2056.45,229.479 2057.02,230.772 2057.59,229.741 2058.16,229.834 2058.72,230.128 2059.29,232.324 2059.86,231.21 2060.43,232.309 2061,232.235 2061.57,231.954 2062.13,230.914 2062.7,230.94 2063.27,230.92 2063.84,230.84 2064.41,230.806 2064.98,230.686 2065.54,230.67 2066.11,230.692 2066.68,230.838 2067.25,232.845 2067.82,232.71 2068.39,231.475 2068.95,231.32 2069.52,230.05 2070.09,229.967 2070.66,226.925 2071.23,231.399 2071.8,229.27 2072.36,229.461 2072.93,228.859 2073.5,230.239 2074.07,231.272 2074.64,231.325 2075.21,229.119 2075.77,230.101 2076.34,229.028 2076.91,228.102 2077.48,229.253 2078.05,230.446 2078.62,231.622 2079.18,234.692 2079.75,232.193 2080.32,230.16 2080.89,230.048 2081.46,228.078 2082.03,229.366 2082.59,229.562 2083.16,230.517 2083.73,231.401 2084.3,229.443 2084.87,228.425 2085.44,230.527 2086,228.628 2086.57,226.688 2087.14,226.975 2087.71,227.086 2088.28,227.508 2088.85,227.653 2089.41,226.733 2089.98,229.902 2090.55,229.938 2091.12,228.939 2091.69,230.06 2092.26,232.119 2092.82,229.923 2093.39,229.918 2093.96,231.918 2094.53,233.6 2095.1,233.225 2095.67,228.897 2096.23,229.878 2096.8,229.78 2097.37,229.831 2097.94,231.874 2098.51,229.833 2099.08,231.999 2099.64,233.048 2100.21,232.669 2100.78,233.485 2101.35,233.08 2101.92,230.59 2102.49,230.734 2103.05,234.797 2103.62,233.199 2104.19,234.042 2104.76,235.546 2105.33,234.99 2105.9,235.587 2106.46,235.034 2107.03,234.719 2107.6,233.185 2108.17,232.144 2108.74,230.775 2109.31,230.828 2109.87,230.529 2110.44,230.154 2111.01,231.97 2111.58,231.897 2112.15,230.654 2112.72,230.636 2113.29,230.3 2113.85,229.21 2114.42,228.077 2114.99,228.348 2115.56,227.481 2116.13,226.766 2116.7,228.981 2117.26,231.184 2117.83,229.967 2118.4,229.172 2118.97,232.266 2119.54,232.972 2120.11,231.709 2120.67,230.445 2121.24,233.401 2121.81,232.082 2122.38,231.63 2122.95,229.608 2123.52,228.441 2124.08,229.413 2124.65,230.521 2125.22,230.534 2125.79,232.473 2126.36,231.073 2126.93,231.047 2127.49,229.992 2128.06,228.742 2128.63,226.533 2129.2,226.599 2129.77,225.526 2130.34,227.762 2130.9,227.923 2131.47,228.211 2132.04,227.321 2132.61,229.633 2133.18,229.654 2133.75,229.72 2134.31,227.549 2134.88,228.7 2135.45,228.497 2136.02,226.38 2136.59,224.724 2137.16,223.883 2137.72,224.513 2138.29,224.812 2138.86,225.106 2139.43,226.554 2140,229.067 2140.57,232.323 2141.13,231.104 2141.7,230.171 2142.27,231.029 2142.84,230.915 2143.41,228.425 2143.98,230.646 2144.54,229.575 2145.11,226.491 2145.68,226.306 2146.25,225.367 2146.82,226.762 2147.39,227.98 2147.95,230.329 2148.52,232.334 2149.09,231.237 2149.66,230.98 2150.23,231.659 2150.8,233.608 2151.36,234.606 2151.93,234.209 2152.5,233.994 2153.07,233.65 2153.64,234.441 2154.21,236.284 2154.77,234.836 2155.34,232.53 2155.91,234.416 2156.48,232.802 2157.05,231.562 2157.62,231.346 2158.18,230.266 2158.75,230.134 2159.32,231.22 2159.89,229.952 \"/>\n<path clip-path=\"url(#clip600)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip600)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip600)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip600)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip600)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip600)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.031 ± 0.022\n  with uncertainty of ± 0.00195816452325029\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01425 ± (0.00213673, 0.00244351) (MC)\n  95% confidence interval: [-4.019, -4.00969]) (MC)\n  linear error propagation: -4.01447 ± 0.00229884\n  |δ_y| = |0.00136976| (≤ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.014245544335896, val_l = 0.004751982404385124, val_u = 0.004551357709862813)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip630\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip630)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip631\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip630)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip632\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip632)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip632)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip632)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip632)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip630)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip632)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1141.87 2211.02,1141.87 \"/>\n<polyline clip-path=\"url(#clip632)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,968.811 2211.02,968.811 \"/>\n<polyline clip-path=\"url(#clip632)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,795.747 2211.02,795.747 \"/>\n<polyline clip-path=\"url(#clip632)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,622.683 2211.02,622.683 \"/>\n<polyline clip-path=\"url(#clip632)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,449.619 2211.02,449.619 \"/>\n<polyline clip-path=\"url(#clip632)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,276.555 2211.02,276.555 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1141.87 365.751,1141.87 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,968.811 365.751,968.811 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,795.747 365.751,795.747 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,622.683 365.751,622.683 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,449.619 365.751,449.619 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,276.555 365.751,276.555 \"/>\n<path clip-path=\"url(#clip630)\" d=\"M298.909 1127.67 Q295.298 1127.67 293.469 1131.24 Q291.664 1134.78 291.664 1141.91 Q291.664 1149.02 293.469 1152.58 Q295.298 1156.12 298.909 1156.12 Q302.543 1156.12 304.349 1152.58 Q306.177 1149.02 306.177 1141.91 Q306.177 1134.78 304.349 1131.24 Q302.543 1127.67 298.909 1127.67 M298.909 1123.97 Q304.719 1123.97 307.775 1128.58 Q310.853 1133.16 310.853 1141.91 Q310.853 1150.64 307.775 1155.24 Q304.719 1159.83 298.909 1159.83 Q293.099 1159.83 290.02 1155.24 Q286.964 1150.64 286.964 1141.91 Q286.964 1133.16 290.02 1128.58 Q293.099 1123.97 298.909 1123.97 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M259.557 982.155 L267.196 982.155 L267.196 955.79 L258.886 957.456 L258.886 953.197 L267.15 951.531 L271.826 951.531 L271.826 982.155 L279.465 982.155 L279.465 986.091 L259.557 986.091 L259.557 982.155 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M298.909 954.609 Q295.298 954.609 293.469 958.174 Q291.664 961.716 291.664 968.845 Q291.664 975.952 293.469 979.516 Q295.298 983.058 298.909 983.058 Q302.543 983.058 304.349 979.516 Q306.177 975.952 306.177 968.845 Q306.177 961.716 304.349 958.174 Q302.543 954.609 298.909 954.609 M298.909 950.906 Q304.719 950.906 307.775 955.512 Q310.853 960.095 310.853 968.845 Q310.853 977.572 307.775 982.179 Q304.719 986.762 298.909 986.762 Q293.099 986.762 290.02 982.179 Q286.964 977.572 286.964 968.845 Q286.964 960.095 290.02 955.512 Q293.099 950.906 298.909 950.906 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M262.775 809.092 L279.094 809.092 L279.094 813.027 L257.15 813.027 L257.15 809.092 Q259.812 806.337 264.395 801.707 Q269.002 797.055 270.182 795.712 Q272.428 793.189 273.307 791.453 Q274.21 789.693 274.21 788.004 Q274.21 785.249 272.266 783.513 Q270.344 781.777 267.242 781.777 Q265.043 781.777 262.59 782.541 Q260.159 783.305 257.381 784.856 L257.381 780.133 Q260.205 778.999 262.659 778.42 Q265.113 777.842 267.15 777.842 Q272.52 777.842 275.715 780.527 Q278.909 783.212 278.909 787.703 Q278.909 789.832 278.099 791.754 Q277.312 793.652 275.205 796.244 Q274.627 796.916 271.525 800.133 Q268.423 803.328 262.775 809.092 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M298.909 781.545 Q295.298 781.545 293.469 785.11 Q291.664 788.652 291.664 795.781 Q291.664 802.888 293.469 806.453 Q295.298 809.994 298.909 809.994 Q302.543 809.994 304.349 806.453 Q306.177 802.888 306.177 795.781 Q306.177 788.652 304.349 785.11 Q302.543 781.545 298.909 781.545 M298.909 777.842 Q304.719 777.842 307.775 782.448 Q310.853 787.031 310.853 795.781 Q310.853 804.508 307.775 809.115 Q304.719 813.698 298.909 813.698 Q293.099 813.698 290.02 809.115 Q286.964 804.508 286.964 795.781 Q286.964 787.031 290.02 782.448 Q293.099 777.842 298.909 777.842 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M272.914 621.329 Q276.27 622.046 278.145 624.315 Q280.043 626.583 280.043 629.917 Q280.043 635.032 276.525 637.833 Q273.006 640.634 266.525 640.634 Q264.349 640.634 262.034 640.194 Q259.742 639.778 257.289 638.921 L257.289 634.407 Q259.233 635.542 261.548 636.12 Q263.863 636.699 266.386 636.699 Q270.784 636.699 273.076 634.963 Q275.39 633.227 275.39 629.917 Q275.39 626.861 273.238 625.148 Q271.108 623.412 267.289 623.412 L263.261 623.412 L263.261 619.569 L267.474 619.569 Q270.923 619.569 272.752 618.204 Q274.58 616.815 274.58 614.222 Q274.58 611.56 272.682 610.148 Q270.807 608.713 267.289 608.713 Q265.367 608.713 263.168 609.13 Q260.969 609.546 258.33 610.426 L258.33 606.259 Q260.992 605.519 263.307 605.148 Q265.645 604.778 267.705 604.778 Q273.029 604.778 276.131 607.208 Q279.233 609.616 279.233 613.736 Q279.233 616.606 277.59 618.597 Q275.946 620.565 272.914 621.329 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M298.909 608.482 Q295.298 608.482 293.469 612.046 Q291.664 615.588 291.664 622.718 Q291.664 629.824 293.469 633.389 Q295.298 636.93 298.909 636.93 Q302.543 636.93 304.349 633.389 Q306.177 629.824 306.177 622.718 Q306.177 615.588 304.349 612.046 Q302.543 608.482 298.909 608.482 M298.909 604.778 Q304.719 604.778 307.775 609.384 Q310.853 613.968 310.853 622.718 Q310.853 631.444 307.775 636.051 Q304.719 640.634 298.909 640.634 Q293.099 640.634 290.02 636.051 Q286.964 631.444 286.964 622.718 Q286.964 613.968 290.02 609.384 Q293.099 604.778 298.909 604.778 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M271.594 436.413 L259.789 454.862 L271.594 454.862 L271.594 436.413 M270.367 432.339 L276.247 432.339 L276.247 454.862 L281.177 454.862 L281.177 458.751 L276.247 458.751 L276.247 466.899 L271.594 466.899 L271.594 458.751 L255.992 458.751 L255.992 454.237 L270.367 432.339 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M298.909 435.418 Q295.298 435.418 293.469 438.982 Q291.664 442.524 291.664 449.654 Q291.664 456.76 293.469 460.325 Q295.298 463.867 298.909 463.867 Q302.543 463.867 304.349 460.325 Q306.177 456.76 306.177 449.654 Q306.177 442.524 304.349 438.982 Q302.543 435.418 298.909 435.418 M298.909 431.714 Q304.719 431.714 307.775 436.32 Q310.853 440.904 310.853 449.654 Q310.853 458.38 307.775 462.987 Q304.719 467.57 298.909 467.57 Q293.099 467.57 290.02 462.987 Q286.964 458.38 286.964 449.654 Q286.964 440.904 290.02 436.32 Q293.099 431.714 298.909 431.714 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M258.793 259.275 L277.15 259.275 L277.15 263.21 L263.076 263.21 L263.076 271.682 Q264.094 271.335 265.113 271.173 Q266.131 270.988 267.15 270.988 Q272.937 270.988 276.316 274.159 Q279.696 277.331 279.696 282.747 Q279.696 288.326 276.224 291.428 Q272.752 294.506 266.432 294.506 Q264.256 294.506 261.988 294.136 Q259.742 293.766 257.335 293.025 L257.335 288.326 Q259.418 289.46 261.641 290.016 Q263.863 290.571 266.34 290.571 Q270.344 290.571 272.682 288.465 Q275.02 286.358 275.02 282.747 Q275.02 279.136 272.682 277.03 Q270.344 274.923 266.34 274.923 Q264.465 274.923 262.59 275.34 Q260.738 275.757 258.793 276.636 L258.793 259.275 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M298.909 262.354 Q295.298 262.354 293.469 265.919 Q291.664 269.46 291.664 276.59 Q291.664 283.696 293.469 287.261 Q295.298 290.803 298.909 290.803 Q302.543 290.803 304.349 287.261 Q306.177 283.696 306.177 276.59 Q306.177 269.46 304.349 265.919 Q302.543 262.354 298.909 262.354 M298.909 258.65 Q304.719 258.65 307.775 263.257 Q310.853 267.84 310.853 276.59 Q310.853 285.317 307.775 289.923 Q304.719 294.506 298.909 294.506 Q293.099 294.506 290.02 289.923 Q286.964 285.317 286.964 276.59 Q286.964 267.84 290.02 263.257 Q293.099 258.65 298.909 258.65 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip632)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1148.95 400.199,1027.08 400.786,910.812 401.372,808.401 401.958,710.348 402.545,622.761 403.131,654.616 403.718,678.883 404.304,694.659 404.891,621.587 405.477,550.479 406.063,488.352 406.65,432.076 407.236,382.803 407.823,407.137 408.409,362.838 408.995,325.887 409.582,291.904 410.168,367.083 410.755,334.187 411.341,303.941 411.927,277.359 412.514,254.199 413.1,235.135 413.687,219.895 414.273,242.097 414.86,230.137 415.446,250.996 416.032,272.509 416.619,291.084 417.205,282.473 417.792,301.204 418.378,340.228 418.964,334.98 419.551,349.326 420.137,362.695 420.724,376.605 421.31,390.054 421.896,419.143 422.483,431.908 423.069,456.971 423.656,455.715 424.242,456.024 424.829,491.079 425.415,490.673 426.001,502.058 426.588,513.711 427.174,514.878 427.761,535.851 428.347,548.047 428.933,560.322 429.52,573.162 430.106,586.046 430.693,598.287 431.279,617.936 431.865,636.635 432.452,660.482 433.038,676.731 433.625,686.576 434.211,702.72 434.798,711.626 435.384,726.1 435.97,739.736 436.557,744.114 437.143,748.751 437.73,759.657 438.316,769.25 438.902,783.362 439.489,788.655 440.075,794.334 440.662,811.781 441.248,816.676 441.835,829.911 442.421,839.176 443.007,848.389 443.594,857.168 444.18,866.611 444.767,882.337 445.353,897.115 445.939,908.084 446.526,924.754 447.112,931.712 447.699,941.513 448.285,957.115 448.871,963.304 449.458,969.494 450.044,978.229 450.631,981.695 451.217,987.959 451.804,999.314 452.39,1004.94 452.976,1007.88 453.563,1018.71 454.149,1029.26 454.736,1034.83 455.322,1035.6 455.908,1043.4 456.495,1050.74 457.081,1053.86 457.668,1056.65 458.254,1059.74 458.84,1069.44 459.427,1072.28 460.013,1079.57 460.6,1082.81 461.186,1087.78 461.773,1090.47 462.359,1093.31 462.945,1096.22 463.532,1102.78 464.118,1106.99 464.705,1115.16 465.291,1117.19 465.877,1120.94 466.464,1128.58 467.05,1134.01 467.637,1137.49 468.223,1141.05 468.809,1146.24 469.396,1149.3 469.982,1150.64 470.569,1155.55 471.155,1158.54 471.742,1159.48 472.328,1164.78 472.914,1169.44 473.501,1175.68 474.087,1178.32 474.674,1182.49 475.26,1179.5 475.846,1185.17 476.433,1188.8 477.019,1194.11 477.606,1192.71 478.192,1193.09 478.778,1191.47 479.365,1192.35 479.951,1194.46 480.538,1196.76 481.124,1193.72 481.711,1197.77 482.297,1198.2 482.883,1199.98 483.47,1197.21 484.056,1201.06 484.643,1206.48 485.229,1206.81 485.815,1208.9 486.402,1210.61 486.988,1214.15 487.575,1213.84 488.161,1214.05 488.748,1214.05 489.334,1214.11 489.92,1213.98 490.507,1220.7 491.093,1223.59 491.68,1223.32 492.266,1226.48 492.852,1227.42 493.439,1230.05 494.025,1232.52 494.612,1231.95 495.198,1230.02 495.784,1234.14 496.371,1233.49 496.957,1232.79 497.544,1230.7 498.13,1228.94 498.717,1230 499.303,1229.42 499.889,1232.35 500.476,1232.05 501.062,1236.23 501.649,1235.76 502.235,1235.28 502.821,1240.91 503.408,1235.92 503.994,1233.96 504.581,1236.62 505.167,1239.08 505.753,1239.94 506.34,1236.42 506.926,1240.46 507.513,1241.44 508.099,1242.06 508.686,1241.39 509.272,1239.11 509.858,1240.23 510.445,1240.98 511.031,1243.01 511.618,1242.47 512.204,1243.34 512.79,1242.65 513.377,1244.43 513.963,1245.11 514.55,1243.13 515.136,1243.55 515.722,1241.23 516.309,1238.85 516.895,1238.55 517.482,1237.83 518.068,1236.11 518.655,1234.09 519.241,1231.07 519.827,1234.96 520.414,1236.3 521,1234.61 521.587,1231.42 522.173,1234.31 522.759,1234 523.346,1233.75 523.932,1233.73 524.519,1230.95 525.105,1232.29 525.691,1231.97 526.278,1236.19 526.864,1237.45 527.451,1238.61 528.037,1238.14 528.624,1237.85 529.21,1237.68 529.796,1237.14 530.383,1236.5 530.969,1237.9 531.556,1236.12 532.142,1237.27 532.728,1235.49 533.315,1235.33 533.901,1231.86 534.488,1231.8 535.074,1231.86 535.661,1231.48 536.247,1230.08 536.833,1232.8 537.42,1232.58 538.006,1235.34 538.593,1237.9 539.179,1238.59 539.765,1238.37 540.352,1237.93 540.938,1237.47 541.525,1236.87 542.111,1240.62 542.697,1247.22 543.284,1250.53 543.87,1247.8 544.457,1248.37 545.043,1248.63 545.63,1247.76 546.216,1246.99 546.802,1248.92 547.389,1249.31 547.975,1246.7 548.562,1244.37 549.148,1244.79 549.734,1242.38 550.321,1241.46 550.907,1239.47 551.494,1238.9 552.08,1239.46 552.666,1240.27 553.253,1238.42 553.839,1239.17 554.426,1237.32 555.012,1235.13 555.599,1233.28 556.185,1233.18 556.771,1231.54 557.358,1229.75 557.944,1229.26 558.531,1227.56 559.117,1230.37 559.703,1230.21 560.29,1228.78 560.876,1227.41 561.463,1228.71 562.049,1228.59 562.635,1228.53 563.222,1228.32 563.808,1225.32 564.395,1230.92 564.981,1232.12 565.568,1229.04 566.154,1228.5 566.74,1231.18 567.327,1230.99 567.913,1231.84 568.5,1233.05 569.086,1233.85 569.672,1233.44 570.259,1231.46 570.845,1235.32 571.432,1233.04 572.018,1233.78 572.605,1233.31 573.191,1234.37 573.777,1233.99 574.364,1230.81 574.95,1230.65 575.537,1231.83 576.123,1231.25 576.709,1229.1 577.296,1224.67 577.882,1223.15 578.469,1222.1 579.055,1223.64 579.641,1223.58 580.228,1226.72 580.814,1226.47 581.401,1226.62 581.987,1226.54 582.574,1229.27 583.16,1226.46 583.746,1226.2 584.333,1229.12 584.919,1231.91 585.506,1230.37 586.092,1228.53 586.678,1231.21 587.265,1237.81 587.851,1239.93 588.438,1241.96 589.024,1241.08 589.61,1241.44 590.197,1241.78 590.783,1240.69 591.37,1238.37 591.956,1237.59 592.543,1239.68 593.129,1237.34 593.715,1236.41 594.302,1234.38 594.888,1232.41 595.475,1230.68 596.061,1231.81 596.647,1231.45 597.234,1230.52 597.82,1227.46 598.407,1226.97 598.993,1229.67 599.579,1230.78 600.166,1230.27 600.752,1234.09 601.339,1233.58 601.925,1234.06 602.512,1233.17 603.098,1233.91 603.684,1233.48 604.271,1229.89 604.857,1229.4 605.444,1229.12 606.03,1227.2 606.616,1229.66 607.203,1229.12 607.789,1224.32 608.376,1224.33 608.962,1221.49 609.548,1223.11 610.135,1225.95 610.721,1226 611.308,1224.38 611.894,1225.55 612.481,1225.3 613.067,1228.51 613.653,1228.22 614.24,1224.78 614.826,1223.09 615.413,1225.64 615.999,1222.6 616.585,1220.98 617.172,1221.01 617.758,1219.29 618.345,1217.81 618.931,1217.83 619.518,1215.23 620.104,1218.46 620.69,1221.38 621.277,1222.77 621.863,1225.59 622.45,1222.43 623.036,1222.41 623.622,1222.11 624.209,1223.38 624.795,1221.78 625.382,1221.67 625.968,1222.98 626.554,1223.04 627.141,1220.32 627.727,1218.95 628.314,1220.59 628.9,1217.63 629.487,1219.14 630.073,1216.43 630.659,1212.46 631.246,1214.25 631.832,1214.83 632.419,1215.27 633.005,1217.01 633.591,1217.53 634.178,1217.74 634.764,1217.76 635.351,1216.42 635.937,1217.79 636.523,1220.74 637.11,1220.79 637.696,1219.28 638.283,1220.76 638.869,1218.15 639.456,1218.34 640.042,1222.76 640.628,1223.69 641.215,1225.11 641.801,1223.42 642.388,1224.61 642.974,1224.24 643.56,1221.06 644.147,1220.98 644.733,1222.37 645.32,1221.22 645.906,1219.66 646.492,1219.75 647.079,1224.12 647.665,1223.63 648.252,1222.15 648.838,1223.04 649.425,1225.67 650.011,1225.43 650.597,1224.94 651.184,1224.65 651.77,1223.06 652.357,1222.48 652.943,1222.39 653.529,1223.57 654.116,1221.65 654.702,1221.58 655.289,1224.15 655.875,1227.66 656.462,1228.61 657.048,1226.72 657.634,1223.56 658.221,1224.73 658.807,1224.33 659.394,1222.47 659.98,1223.65 660.566,1224.82 661.153,1224.67 661.739,1227.09 662.326,1229.12 662.912,1227.05 663.498,1223.55 664.085,1222.03 664.671,1223.22 665.258,1221.28 665.844,1220.87 666.431,1223.3 667.017,1224.43 667.603,1221.31 668.19,1226.64 668.776,1224.55 669.363,1224.2 669.949,1222.43 670.535,1220.7 671.122,1219.14 671.708,1216.23 672.295,1214.78 672.881,1217.77 673.467,1216.3 674.054,1215.08 674.64,1215.32 675.227,1212.59 675.813,1212.54 676.4,1215.74 676.986,1212.89 677.572,1213.38 678.159,1216.64 678.745,1215.26 679.332,1216.86 679.918,1216.94 680.504,1217.24 681.091,1219.19 681.677,1216.8 682.264,1218.43 682.85,1221.08 683.436,1222.4 684.023,1220.59 684.609,1223.17 685.196,1222.77 685.782,1218.17 686.369,1218.12 686.955,1219.55 687.541,1220.72 688.128,1223.13 688.714,1219.98 689.301,1218.47 689.887,1220.03 690.473,1219.99 691.06,1219.46 691.646,1219.31 692.233,1220.7 692.819,1221.66 693.405,1219.93 693.992,1218.79 694.578,1214.49 695.165,1214.92 695.751,1212.09 696.338,1212.28 696.924,1218.29 697.51,1215.5 698.097,1215.63 698.683,1216.94 699.27,1216.78 699.856,1218.2 700.442,1217.99 701.029,1219.11 701.615,1217.62 702.202,1216.15 702.788,1214.84 703.375,1213.32 703.961,1213.67 704.547,1212.62 705.134,1210.07 705.72,1207.69 706.307,1208.15 706.893,1207.52 707.479,1212.44 708.066,1211.14 708.652,1213.04 709.239,1216.11 709.825,1217.57 710.411,1216.14 710.998,1215.92 711.584,1218.71 712.171,1221.35 712.757,1221.09 713.344,1222.13 713.93,1217.52 714.516,1216.08 715.103,1216.35 715.689,1216.29 716.276,1216.43 716.862,1217.66 717.448,1221.79 718.035,1219.99 718.621,1218.34 719.208,1218.41 719.794,1221 720.38,1222.05 720.967,1220.34 721.553,1221.72 722.14,1214.21 722.726,1214.16 723.313,1214.55 723.899,1213.48 724.485,1217.78 725.072,1216.24 725.658,1217.59 726.245,1217.78 726.831,1216.06 727.417,1214.83 728.004,1216.44 728.59,1217.93 729.177,1216.47 729.763,1215.05 730.349,1213.56 730.936,1215.02 731.522,1217.97 732.109,1219.04 732.695,1223.09 733.282,1225.67 733.868,1223.74 734.454,1228.81 735.041,1229.66 735.627,1227.58 736.214,1227.2 736.8,1229.19 737.386,1228.5 737.973,1227.83 738.559,1224.4 739.146,1222.47 739.732,1222.13 740.318,1220.23 740.905,1221.08 741.491,1219.45 742.078,1217.86 742.664,1217.7 743.251,1217.68 743.837,1217.55 744.423,1216.04 745.01,1217.42 745.596,1218.68 746.183,1216.89 746.769,1216.46 747.355,1215.22 747.942,1212.33 748.528,1213.83 749.115,1213.94 749.701,1214.1 750.288,1214.34 750.874,1215.76 751.46,1215.36 752.047,1215.45 752.633,1217.04 753.22,1215.78 753.806,1215.74 754.392,1215.81 754.979,1218.49 755.565,1217 756.152,1218.45 756.738,1218.29 757.324,1215.07 757.911,1216.41 758.497,1216.64 759.084,1215.06 759.67,1215.3 760.257,1215.19 760.843,1215.29 761.429,1215.68 762.016,1214.5 762.602,1214.57 763.189,1214.45 763.775,1214.66 764.361,1216.03 764.948,1220.17 765.534,1224.17 766.121,1226.32 766.707,1221.32 767.293,1222.46 767.88,1226.15 768.466,1227.06 769.053,1229.22 769.639,1230.1 770.226,1228.02 770.812,1225.94 771.398,1224.21 771.985,1223.51 772.571,1222.75 773.158,1222.22 773.744,1218.86 774.33,1218.59 774.917,1218.65 775.503,1219.89 776.09,1218.15 776.676,1216.67 777.262,1215.08 777.849,1217.68 778.435,1220.22 779.022,1221.55 779.608,1218.38 780.195,1218.26 780.781,1219.56 781.367,1223.43 781.954,1220.14 782.54,1217.29 783.127,1217.42 783.713,1218.65 784.299,1218.21 784.886,1217.84 785.472,1213.25 786.059,1213.49 786.645,1217.68 787.232,1217.57 787.818,1219.11 788.404,1219.16 788.991,1217.84 789.577,1216.38 790.164,1216.21 790.75,1215.78 791.336,1219.82 791.923,1215.04 792.509,1213.59 793.096,1215.41 793.682,1215.36 794.268,1216.68 794.855,1216.6 795.441,1217.99 796.028,1219.09 796.614,1220.13 797.201,1219.9 797.787,1219.69 798.373,1223.7 798.96,1224.38 799.546,1222.24 800.133,1222.84 800.719,1223.64 801.305,1222.98 801.892,1221.11 802.478,1217.86 803.065,1216.47 803.651,1214.9 804.237,1211.97 804.824,1212.15 805.41,1210.72 805.997,1212.22 806.583,1213.88 807.17,1214.01 807.756,1212.63 808.342,1215.61 808.929,1215.2 809.515,1216.54 810.102,1213.52 810.688,1215.08 811.274,1216.46 811.861,1215.05 812.447,1214.62 813.034,1219.14 813.62,1217.44 814.206,1217.28 814.793,1215.94 815.379,1217.32 815.966,1219.91 816.552,1220.79 817.139,1220.47 817.725,1217.42 818.311,1214.51 818.898,1212.85 819.484,1210.16 820.071,1208.71 820.657,1207.48 821.243,1208.01 821.83,1206.87 822.416,1207.11 823.003,1206.09 823.589,1203.65 824.175,1203.05 824.762,1202.19 825.348,1205.53 825.935,1205.92 826.521,1209.43 827.108,1213.95 827.694,1208.44 828.28,1208.47 828.867,1205.65 829.453,1207.21 830.04,1209.06 830.626,1207.86 831.212,1209.37 831.799,1209.68 832.385,1210.06 832.972,1213.07 833.558,1214.43 834.145,1214.45 834.731,1214.47 835.317,1214.55 835.904,1214.6 836.49,1216.21 837.077,1216.1 837.663,1216.19 838.249,1216.26 838.836,1213.46 839.422,1213.56 840.009,1216.18 840.595,1219 841.181,1217.38 841.768,1215.85 842.354,1217.12 842.941,1216.93 843.527,1218.26 844.114,1220.81 844.7,1214.95 845.286,1217.74 845.873,1216.05 846.459,1216.2 847.046,1216.02 847.632,1215.69 848.218,1212.63 848.805,1212.6 849.391,1212.71 849.978,1211.29 850.564,1210 851.15,1208.66 851.737,1207.27 852.323,1210.16 852.91,1210.39 853.496,1216.38 854.083,1217.65 854.669,1218.79 855.255,1217.14 855.842,1214.15 856.428,1209.76 857.015,1209.75 857.601,1209.63 858.187,1208.8 858.774,1206.03 859.36,1206.59 859.947,1205.28 860.533,1208.14 861.119,1205.46 861.706,1205.82 862.292,1207.43 862.879,1209.2 863.465,1206.36 864.052,1202.46 864.638,1203.19 865.224,1203.88 865.811,1205.63 866.397,1204.19 866.984,1206.12 867.57,1204.77 868.156,1205.33 868.743,1208.55 869.329,1213.11 869.916,1213.12 870.502,1216.06 871.089,1214.56 871.675,1214.33 872.261,1209 872.848,1211.76 873.434,1214.71 874.021,1213.57 874.607,1215.27 875.193,1216.7 875.78,1218 876.366,1218.83 876.953,1217 877.539,1216.89 878.125,1219.64 878.712,1219.28 879.298,1218.88 879.885,1220.31 880.471,1218.3 881.058,1218.19 881.644,1217.8 882.23,1220.38 882.817,1218.7 883.403,1219.75 883.99,1218.99 884.576,1221.47 885.162,1220.79 885.749,1220.53 886.335,1218.74 886.922,1221.08 887.508,1219.14 888.094,1218.5 888.681,1215.3 889.267,1218.16 889.854,1219.25 890.44,1219.03 891.027,1219.81 891.613,1216.61 892.199,1216.66 892.786,1216.29 893.372,1218.86 893.959,1218.26 894.545,1218.02 895.131,1216.24 895.718,1217.53 896.304,1215.95 896.891,1211.92 897.477,1210.85 898.063,1207.86 898.65,1210.99 899.236,1212.35 899.823,1212.54 900.409,1209.48 900.996,1211.12 901.582,1212.37 902.168,1212.31 902.755,1209.81 903.341,1214.19 903.928,1213.97 904.514,1212.29 905.1,1209.5 905.687,1211.34 906.273,1211.82 906.86,1210.53 907.446,1210.62 908.032,1210.65 908.619,1213.54 909.205,1210.72 909.792,1210.71 910.378,1209.4 910.965,1209.71 911.551,1207.26 912.137,1206.01 912.724,1206.35 913.31,1209.54 913.897,1211.31 914.483,1208.53 915.069,1210.33 915.656,1210.72 916.242,1213.55 916.829,1212.21 917.415,1213.84 918.002,1212.23 918.588,1212.44 919.174,1212.31 919.761,1213.58 920.347,1210.49 920.934,1211.92 921.52,1210.48 922.106,1210.66 922.693,1212.3 923.279,1210.82 923.866,1211.07 924.452,1209.83 925.038,1210.16 925.625,1207.79 926.211,1206.48 926.798,1205.59 927.384,1203.12 927.971,1200.66 928.557,1201.39 929.143,1206.23 929.73,1205.32 930.316,1208.55 930.903,1206 931.489,1207.9 932.075,1208.14 932.662,1208.42 933.248,1206.05 933.835,1206.33 934.421,1206.56 935.007,1209.54 935.594,1209.63 936.18,1209.85 936.767,1209.87 937.353,1210.03 937.94,1208.92 938.526,1207.54 939.112,1207.93 939.699,1206.59 940.285,1206.84 940.872,1207.35 941.458,1207.66 942.044,1207.74 942.631,1209.53 943.217,1210.12 943.804,1214.58 944.39,1214.18 944.976,1214.1 945.563,1211.66 946.149,1210.1 946.736,1210.58 947.322,1209.28 947.909,1210.7 948.495,1209.48 949.081,1209.63 949.668,1211.16 950.254,1211.34 950.841,1211.75 951.427,1213.12 952.013,1213.23 952.6,1214.58 953.186,1214.47 953.773,1211.88 954.359,1212.11 954.945,1213.72 955.532,1216.47 956.118,1212.33 956.705,1212.4 957.291,1212.42 957.878,1214.16 958.464,1211.36 959.05,1209.96 959.637,1212.95 960.223,1212.92 960.81,1212.9 961.396,1212.92 961.982,1214.32 962.569,1215.46 963.155,1216.79 963.742,1216.66 964.328,1215.03 964.915,1216.47 965.501,1216.35 966.087,1217.64 966.674,1218.83 967.26,1218.56 967.847,1215.25 968.433,1211.98 969.019,1211.77 969.606,1210.24 970.192,1211.72 970.779,1212.97 971.365,1212.6 971.951,1214.19 972.538,1209.87 973.124,1209.67 973.711,1211.36 974.297,1215.65 974.884,1215.49 975.47,1213.92 976.056,1215.09 976.643,1214.95 977.229,1217.73 977.816,1217.55 978.402,1217.2 978.988,1218.09 979.575,1218.95 980.161,1217.08 980.748,1216.42 981.334,1214.81 981.92,1214.82 982.507,1213.39 983.093,1217.22 983.68,1217.34 984.266,1216.92 984.853,1219.07 985.439,1215.81 986.025,1215.8 986.612,1217.11 987.198,1215.44 987.785,1211.11 988.371,1210.92 988.957,1210.67 989.544,1209.37 990.13,1213.68 990.717,1212.28 991.303,1212.06 991.889,1211.82 992.476,1211.93 993.062,1211.93 993.649,1210.85 994.235,1212.26 994.822,1212.39 995.408,1212.69 995.994,1212.39 996.581,1213.63 997.167,1213.69 997.754,1213.7 998.34,1215.2 998.926,1215.3 999.513,1217.7 1000.1,1219.02 1000.69,1219.99 1001.27,1221.02 1001.86,1219.32 1002.44,1219.83 1003.03,1219.22 1003.62,1221.41 1004.2,1223.46 1004.79,1219.87 1005.38,1217.96 1005.96,1220.56 1006.55,1221.39 1007.14,1221.13 1007.72,1219.11 1008.31,1218.59 1008.9,1214.96 1009.48,1213.38 1010.07,1213.08 1010.65,1214.31 1011.24,1212.57 1011.83,1215.2 1012.41,1213.45 1013,1212.75 1013.59,1214.33 1014.17,1215.62 1014.76,1215.23 1015.35,1216.11 1015.93,1214.5 1016.52,1210.1 1017.11,1207.6 1017.69,1209.06 1018.28,1209.25 1018.86,1207.76 1019.45,1206.56 1020.04,1206.55 1020.62,1208.21 1021.21,1204.28 1021.8,1207.48 1022.38,1206.26 1022.97,1208.03 1023.56,1212.58 1024.14,1209.45 1024.73,1205.71 1025.32,1209.05 1025.9,1210.56 1026.49,1209.1 1027.07,1210.38 1027.66,1210.28 1028.25,1210.37 1028.83,1210.23 1029.42,1211.98 1030.01,1212.24 1030.59,1211.31 1031.18,1211.59 1031.77,1208.89 1032.35,1210.43 1032.94,1210.67 1033.52,1215.11 1034.11,1215.2 1034.7,1215.07 1035.28,1217.76 1035.87,1217.44 1036.46,1219.92 1037.04,1217.95 1037.63,1213.8 1038.22,1213.93 1038.8,1213.99 1039.39,1215.2 1039.98,1217.38 1040.56,1215.83 1041.15,1215.89 1041.73,1215.53 1042.32,1215.45 1042.91,1213.82 1043.49,1213.74 1044.08,1212.39 1044.67,1211.12 1045.25,1214.15 1045.84,1212.68 1046.43,1217.01 1047.01,1217 1047.6,1216.9 1048.19,1215.03 1048.77,1216.2 1049.36,1216.14 1049.94,1208.77 1050.53,1210.41 1051.12,1207.63 1051.7,1207.76 1052.29,1209.34 1052.88,1207.67 1053.46,1206.45 1054.05,1205.24 1054.64,1209.46 1055.22,1208.01 1055.81,1206.64 1056.39,1204.11 1056.98,1205.99 1057.57,1209.22 1058.15,1212.25 1058.74,1210.82 1059.33,1209.48 1059.91,1212.18 1060.5,1210.77 1061.09,1213.78 1061.67,1215.13 1062.26,1213.74 1062.85,1213.78 1063.43,1213.91 1064.02,1213.99 1064.6,1216.7 1065.19,1212.17 1065.78,1212.03 1066.36,1210.7 1066.95,1212.29 1067.54,1212.41 1068.12,1215.04 1068.71,1216.13 1069.3,1218.64 1069.88,1218.29 1070.47,1216.64 1071.06,1216.59 1071.64,1216.34 1072.23,1217.59 1072.81,1214.36 1073.4,1211.41 1073.99,1211.78 1074.57,1211.92 1075.16,1210.68 1075.75,1212.12 1076.33,1207.7 1076.92,1208.21 1077.51,1205.47 1078.09,1206.07 1078.68,1209.4 1079.26,1212.04 1079.85,1209.28 1080.44,1210.9 1081.02,1211.2 1081.61,1212.38 1082.2,1210.64 1082.78,1209.12 1083.37,1211.89 1083.96,1213.16 1084.54,1214.4 1085.13,1215.41 1085.72,1213.6 1086.3,1213.41 1086.89,1215.09 1087.47,1210.84 1088.06,1212.6 1088.65,1213.88 1089.23,1215.26 1089.82,1213.62 1090.41,1213.41 1090.99,1211.62 1091.58,1213.08 1092.17,1211.65 1092.75,1210.28 1093.34,1211.85 1093.93,1209.07 1094.51,1211.94 1095.1,1213.21 1095.68,1210.31 1096.27,1212.04 1096.86,1214.77 1097.44,1217.28 1098.03,1218.06 1098.62,1216.32 1099.2,1214.68 1099.79,1213.19 1100.38,1213.06 1100.96,1216.08 1101.55,1219.58 1102.14,1217.74 1102.72,1217.65 1103.31,1218.7 1103.89,1217.99 1104.48,1217.86 1105.07,1215.96 1105.65,1217 1106.24,1218.18 1106.83,1220.51 1107.41,1217.16 1108,1215.52 1108.59,1213.86 1109.17,1213.55 1109.76,1217.72 1110.34,1215.78 1110.93,1214.25 1111.52,1212.73 1112.1,1214.24 1112.69,1213.02 1113.28,1213.1 1113.86,1214.4 1114.45,1212.91 1115.04,1215.94 1115.62,1215.63 1116.21,1214.98 1116.8,1213.31 1117.38,1213.14 1117.97,1214.62 1118.55,1211.6 1119.14,1211.1 1119.73,1211.24 1120.31,1211.45 1120.9,1211.5 1121.49,1208.67 1122.07,1207.14 1122.66,1207.18 1123.25,1207.38 1123.83,1209.13 1124.42,1210.56 1125.01,1213.36 1125.59,1210.65 1126.18,1214.81 1126.76,1216.24 1127.35,1214.57 1127.94,1212.86 1128.52,1212.88 1129.11,1211.05 1129.7,1211.14 1130.28,1212.82 1130.87,1212.77 1131.46,1215.45 1132.04,1217.96 1132.63,1214.77 1133.21,1212.15 1133.8,1213.79 1134.39,1209.35 1134.97,1209.36 1135.56,1205.4 1136.15,1205.73 1136.73,1207.84 1137.32,1206.47 1137.91,1211.17 1138.49,1209.82 1139.08,1205.44 1139.67,1207.03 1140.25,1204.77 1140.84,1209.44 1141.42,1208.02 1142.01,1211.03 1142.6,1209.69 1143.18,1212.69 1143.77,1209.57 1144.36,1209.63 1144.94,1208.45 1145.53,1205.55 1146.12,1205.97 1146.7,1203.4 1147.29,1202.28 1147.88,1204.4 1148.46,1206.56 1149.05,1205.06 1149.63,1204.18 1150.22,1203.18 1150.81,1202.22 1151.39,1203.75 1151.98,1204.55 1152.57,1205.05 1153.15,1204.02 1153.74,1201.52 1154.33,1203.65 1154.91,1201.5 1155.5,1200.57 1156.09,1203.66 1156.67,1208.49 1157.26,1210.32 1157.84,1211.88 1158.43,1216.44 1159.02,1216.38 1159.6,1216.29 1160.19,1217.37 1160.78,1217.18 1161.36,1217.12 1161.95,1216.67 1162.54,1216.43 1163.12,1213.24 1163.71,1214.62 1164.29,1214.37 1164.88,1211.8 1165.47,1211.7 1166.05,1211.93 1166.64,1216.06 1167.23,1214.41 1167.81,1214.09 1168.4,1211.26 1168.99,1211.43 1169.57,1210.24 1170.16,1209.07 1170.75,1207.55 1171.33,1206.41 1171.92,1207 1172.5,1206.16 1173.09,1206.47 1173.68,1206.83 1174.26,1206.94 1174.85,1207.57 1175.44,1207.85 1176.02,1206.83 1176.61,1209.65 1177.2,1208.4 1177.78,1206.99 1178.37,1208.43 1178.96,1208.49 1179.54,1208.64 1180.13,1208.63 1180.71,1208.64 1181.3,1204.78 1181.89,1205.06 1182.47,1205.75 1183.06,1207.47 1183.65,1207.66 1184.23,1207.87 1184.82,1215.22 1185.41,1215.15 1185.99,1217.97 1186.58,1216.21 1187.16,1214.33 1187.75,1217.21 1188.34,1215.69 1188.92,1215.32 1189.51,1215.34 1190.1,1218.05 1190.68,1216.39 1191.27,1217.31 1191.86,1218.56 1192.44,1215.63 1193.03,1214.25 1193.62,1211.33 1194.2,1214.36 1194.79,1214.28 1195.37,1217.09 1195.96,1217.08 1196.55,1216.91 1197.13,1212.59 1197.72,1212.78 1198.31,1212.79 1198.89,1212.7 1199.48,1213.91 1200.07,1215.38 1200.65,1213.83 1201.24,1215.53 1201.83,1215.53 1202.41,1213.89 1203,1215.05 1203.58,1213.37 1204.17,1213.41 1204.76,1213.33 1205.34,1214.81 1205.93,1214.45 1206.52,1211.38 1207.1,1212.82 1207.69,1209.71 1208.28,1215.39 1208.86,1214.98 1209.45,1215.99 1210.03,1215.71 1210.62,1216.88 1211.21,1219.41 1211.79,1218.83 1212.38,1217.39 1212.97,1218.33 1213.55,1219.32 1214.14,1220.65 1214.73,1218.94 1215.31,1217.1 1215.9,1213.84 1216.49,1215.08 1217.07,1214.82 1217.66,1214.71 1218.24,1217.21 1218.83,1220.12 1219.42,1216.81 1220,1213.59 1220.59,1214.87 1221.18,1214.62 1221.76,1214.31 1222.35,1212.57 1222.94,1210.7 1223.52,1210.7 1224.11,1212.26 1224.7,1216.19 1225.28,1214.8 1225.87,1215.79 1226.45,1215.43 1227.04,1218.1 1227.63,1219.05 1228.21,1218.49 1228.8,1217.93 1229.39,1213.29 1229.97,1211.95 1230.56,1216.02 1231.15,1219.89 1231.73,1220.63 1232.32,1220.18 1232.91,1219.52 1233.49,1215.85 1234.08,1212.75 1234.66,1212.57 1235.25,1210.98 1235.84,1209.42 1236.42,1211.9 1237.01,1211.8 1237.6,1214.57 1238.18,1213 1238.77,1214.43 1239.36,1212.62 1239.94,1215.32 1240.53,1216.3 1241.11,1214.2 1241.7,1216.77 1242.29,1214.99 1242.87,1213.17 1243.46,1210.04 1244.05,1210.22 1244.63,1213.22 1245.22,1213.23 1245.81,1211.82 1246.39,1214.4 1246.98,1214.37 1247.57,1213.03 1248.15,1214.24 1248.74,1214.09 1249.32,1212.35 1249.91,1212.13 1250.5,1210.5 1251.08,1209.08 1251.67,1209.33 1252.26,1211.85 1252.84,1211.77 1253.43,1206.28 1254.02,1204.95 1254.6,1205.44 1255.19,1206.11 1255.78,1206.68 1256.36,1206.99 1256.95,1205.81 1257.53,1205.97 1258.12,1206.08 1258.71,1206.76 1259.29,1206.75 1259.88,1208.27 1260.47,1211.3 1261.05,1215.32 1261.64,1215.24 1262.23,1213.67 1262.81,1210.89 1263.4,1204.02 1263.98,1206.13 1264.57,1207.84 1265.16,1209.67 1265.74,1208.3 1266.33,1208.54 1266.92,1207.33 1267.5,1209.16 1268.09,1209.19 1268.68,1210.85 1269.26,1211.03 1269.85,1212.59 1270.44,1214.13 1271.02,1214.06 1271.61,1213.87 1272.19,1213.92 1272.78,1213.66 1273.37,1207.39 1273.95,1207.74 1274.54,1207.86 1275.13,1207.66 1275.71,1209.46 1276.3,1209.36 1276.89,1206.34 1277.47,1208.45 1278.06,1211.36 1278.65,1211.39 1279.23,1209.94 1279.82,1211.85 1280.4,1214.54 1280.99,1215.82 1281.58,1215.48 1282.16,1216.69 1282.75,1215.01 1283.34,1212.07 1283.92,1212.4 1284.51,1209.67 1285.1,1212.74 1285.68,1210.05 1286.27,1208.55 1286.86,1210.22 1287.44,1211.81 1288.03,1209.19 1288.61,1208.12 1289.2,1211.32 1289.79,1208.65 1290.37,1208.83 1290.96,1209.23 1291.55,1207.7 1292.13,1203.86 1292.72,1202.68 1293.31,1200.47 1293.89,1202.55 1294.48,1204.36 1295.06,1203.48 1295.65,1202.73 1296.24,1205.95 1296.82,1206.34 1297.41,1208.06 1298,1208.34 1298.58,1208.51 1299.17,1207.54 1299.76,1209.24 1300.34,1209.59 1300.93,1209.5 1301.52,1212.47 1302.1,1215.37 1302.69,1213.91 1303.27,1211.18 1303.86,1209.76 1304.45,1208.39 1305.03,1207.45 1305.62,1207.72 1306.21,1210.47 1306.79,1210.57 1307.38,1210.36 1307.97,1204.79 1308.55,1206.53 1309.14,1207.93 1309.73,1206.64 1310.31,1206.76 1310.9,1206.76 1311.48,1206.93 1312.07,1210.04 1312.66,1210 1313.24,1208.43 1313.83,1208.97 1314.42,1206.32 1315,1203.67 1315.59,1208.62 1316.18,1208.83 1316.76,1206.48 1317.35,1209.46 1317.93,1208.42 1318.52,1208.49 1319.11,1207.26 1319.69,1210.24 1320.28,1210.32 1320.87,1214.55 1321.45,1214.33 1322.04,1215.79 1322.63,1214.19 1323.21,1216.87 1323.8,1215.19 1324.39,1217.84 1324.97,1214.83 1325.56,1216.11 1326.14,1214.28 1326.73,1216.86 1327.32,1218.11 1327.9,1216.05 1328.49,1214.34 1329.08,1217.04 1329.66,1215.37 1330.25,1212.68 1330.84,1211.31 1331.42,1213.78 1332.01,1212.24 1332.6,1212.3 1333.18,1212.11 1333.77,1212.41 1334.35,1213.74 1334.94,1212.56 1335.53,1212.44 1336.11,1210.7 1336.7,1212.09 1337.29,1213.23 1337.87,1208.81 1338.46,1208.56 1339.05,1210.16 1339.63,1211.77 1340.22,1210.39 1340.8,1211.88 1341.39,1213.25 1341.98,1210.38 1342.56,1207.42 1343.15,1204.95 1343.74,1205.13 1344.32,1207.1 1344.91,1205.76 1345.5,1206.16 1346.08,1206.55 1346.67,1205.23 1347.26,1205.4 1347.84,1204.61 1348.43,1203.07 1349.01,1204.92 1349.6,1208.04 1350.19,1208.23 1350.77,1209.98 1351.36,1210.22 1351.95,1207.22 1352.53,1207.3 1353.12,1204.75 1353.71,1208.11 1354.29,1206.87 1354.88,1205.68 1355.47,1206.07 1356.05,1208.02 1356.64,1205.41 1357.22,1204.52 1357.81,1203.73 1358.4,1202.77 1358.98,1201.69 1359.57,1203.88 1360.16,1204.41 1360.74,1203.11 1361.33,1202.04 1361.92,1202.64 1362.5,1201.54 1363.09,1201.77 1363.68,1203.74 1364.26,1208.44 1364.85,1211.6 1365.43,1211.54 1366.02,1212.77 1366.61,1212.81 1367.19,1212.89 1367.78,1212.74 1368.37,1212.64 1368.95,1215.26 1369.54,1214.7 1370.13,1214.53 1370.71,1214.31 1371.3,1215.63 1371.88,1212.53 1372.47,1212.41 1373.06,1212.23 1373.64,1212.19 1374.23,1216.38 1374.82,1220.53 1375.4,1222.91 1375.99,1222.15 1376.58,1220.33 1377.16,1219.58 1377.75,1219.17 1378.34,1217.31 1378.92,1215.61 1379.51,1219.48 1380.09,1223.53 1380.68,1224.1 1381.27,1224.73 1381.85,1222.69 1382.44,1219.62 1383.03,1221.95 1383.61,1220.04 1384.2,1216.59 1384.79,1216.57 1385.37,1213.3 1385.96,1211.71 1386.55,1210.27 1387.13,1208.88 1387.72,1206.52 1388.3,1206.72 1388.89,1208.19 1389.48,1208.68 1390.06,1208.81 1390.65,1210.3 1391.24,1213.29 1391.82,1214.63 1392.41,1211.44 1393,1211.55 1393.58,1211.65 1394.17,1208.89 1394.75,1208.98 1395.34,1207.77 1395.93,1207.98 1396.51,1208.26 1397.1,1205.71 1397.69,1206.1 1398.27,1206.49 1398.86,1204 1399.45,1204.33 1400.03,1206.24 1400.62,1206.43 1401.21,1208.09 1401.79,1205.33 1402.38,1205.95 1402.96,1210.21 1403.55,1211.47 1404.14,1211.35 1404.72,1212.66 1405.31,1216.7 1405.9,1216.18 1406.48,1214.51 1407.07,1215.77 1407.66,1216.92 1408.24,1216.56 1408.83,1216.51 1409.42,1216.24 1410,1217.49 1410.59,1217.37 1411.17,1215.73 1411.76,1212.32 1412.35,1209.69 1412.93,1211.06 1413.52,1212.57 1414.11,1214.92 1414.69,1213.28 1415.28,1210.83 1415.87,1213.84 1416.45,1210.82 1417.04,1209.78 1417.63,1214.29 1418.21,1213.15 1418.8,1213.1 1419.38,1211.39 1419.97,1211.63 1420.56,1210.62 1421.14,1207.83 1421.73,1210.66 1422.32,1210.85 1422.9,1210.94 1423.49,1212.13 1424.08,1213.46 1424.66,1214.86 1425.25,1216.27 1425.83,1217.7 1426.42,1217.19 1427.01,1218.26 1427.59,1220.89 1428.18,1217.51 1428.77,1215.89 1429.35,1215.89 1429.94,1214.32 1430.53,1214.04 1431.11,1214.01 1431.7,1209.58 1432.29,1208.1 1432.87,1211.17 1433.46,1212.76 1434.04,1211.1 1434.63,1208.19 1435.22,1209.42 1435.8,1208.21 1436.39,1209.76 1436.98,1209.52 1437.56,1209.66 1438.15,1209.59 1438.74,1207.99 1439.32,1208.06 1439.91,1209.37 1440.5,1207.95 1441.08,1208.27 1441.67,1208.56 1442.25,1204.59 1442.84,1206.49 1443.43,1208.22 1444.01,1205.92 1444.6,1204.88 1445.19,1205.31 1445.77,1205.53 1446.36,1206.15 1446.95,1206.39 1447.53,1205.18 1448.12,1204.38 1448.7,1199.29 1449.29,1200.09 1449.88,1202.19 1450.46,1204.19 1451.05,1204.52 1451.64,1204.75 1452.22,1206.39 1452.81,1205.4 1453.4,1205.54 1453.98,1208.67 1454.57,1207.38 1455.16,1210.39 1455.74,1212.08 1456.33,1210.5 1456.91,1213.28 1457.5,1214.68 1458.09,1214.57 1458.67,1214.5 1459.26,1216.82 1459.85,1217.75 1460.43,1218.91 1461.02,1217.24 1461.61,1217.13 1462.19,1218.47 1462.78,1215.57 1463.37,1215.21 1463.95,1216.69 1464.54,1216.44 1465.12,1217.44 1465.71,1215.77 1466.3,1212.55 1466.88,1214.97 1467.47,1214.49 1468.06,1213.05 1468.64,1214.21 1469.23,1214.16 1469.82,1212.6 1470.4,1210.93 1470.99,1212.04 1471.57,1213.53 1472.16,1212 1472.75,1212.06 1473.33,1207.7 1473.92,1207.73 1474.51,1207.94 1475.09,1205.19 1475.68,1202.82 1476.27,1209.04 1476.85,1212.18 1477.44,1212.27 1478.03,1213.27 1478.61,1213.17 1479.2,1216.12 1479.78,1219.01 1480.37,1218.9 1480.96,1218.53 1481.54,1218.21 1482.13,1217.77 1482.72,1222.86 1483.3,1222.21 1483.89,1221.46 1484.48,1221.12 1485.06,1220.52 1485.65,1221.16 1486.24,1217.94 1486.82,1216.2 1487.41,1216.11 1487.99,1216.26 1488.58,1214.75 1489.17,1217.11 1489.75,1215.56 1490.34,1215.34 1490.93,1213.54 1491.51,1214.62 1492.1,1215.99 1492.69,1217 1493.27,1217.88 1493.86,1220.22 1494.45,1221.34 1495.03,1221.96 1495.62,1217.32 1496.2,1218.69 1496.79,1215.4 1497.38,1214.96 1497.96,1213.25 1498.55,1214.58 1499.14,1211.14 1499.72,1212.42 1500.31,1215.22 1500.9,1212.31 1501.48,1210.78 1502.07,1212.35 1502.65,1213.44 1503.24,1213.2 1503.83,1212.9 1504.41,1211.21 1505,1211.22 1505.59,1214.07 1506.17,1213.67 1506.76,1211.85 1507.35,1210.42 1507.93,1210.46 1508.52,1207.78 1509.11,1206.43 1509.69,1205.31 1510.28,1205.77 1510.86,1206.16 1511.45,1204.96 1512.04,1205.41 1512.62,1204.41 1513.21,1202.15 1513.8,1202.55 1514.38,1207.59 1514.97,1207.72 1515.56,1209.54 1516.14,1209.63 1516.73,1209.15 1517.32,1210.55 1517.9,1210.91 1518.49,1210.85 1519.07,1210.77 1519.66,1214.79 1520.25,1212.11 1520.83,1210.86 1521.42,1210.88 1522.01,1212.05 1522.59,1209.5 1523.18,1209.57 1523.77,1205.31 1524.35,1202.6 1524.94,1201.42 1525.52,1200.65 1526.11,1204.28 1526.7,1206.09 1527.28,1207.76 1527.87,1209.42 1528.46,1207.96 1529.04,1205.29 1529.63,1209.68 1530.22,1207.02 1530.8,1204.45 1531.39,1208.87 1531.98,1208.81 1532.56,1207.66 1533.15,1203.6 1533.73,1205.21 1534.32,1205.38 1534.91,1205.97 1535.49,1207.48 1536.08,1209.19 1536.67,1206.65 1537.25,1207.21 1537.84,1206.04 1538.43,1205.02 1539.01,1205.29 1539.6,1204.16 1540.19,1201.77 1540.77,1199.35 1541.36,1200.1 1541.94,1200.33 1542.53,1202.49 1543.12,1203.2 1543.7,1206.8 1544.29,1208.02 1544.88,1206.7 1545.46,1208.45 1546.05,1210.23 1546.64,1209.02 1547.22,1210.69 1547.81,1216.33 1548.4,1216.23 1548.98,1216.05 1549.57,1217.23 1550.15,1213.98 1550.74,1213.85 1551.33,1213.74 1551.91,1215.03 1552.5,1213.65 1553.09,1213.53 1553.67,1211.97 1554.26,1213.47 1554.85,1213.73 1555.43,1212.17 1556.02,1213.51 1556.6,1212.02 1557.19,1211.94 1557.78,1211.89 1558.36,1211.6 1558.95,1211.43 1559.54,1211.42 1560.12,1208.48 1560.71,1210.05 1561.3,1212.71 1561.88,1212.43 1562.47,1211.01 1563.06,1211.41 1563.64,1213.89 1564.23,1215.43 1564.81,1216.5 1565.4,1215 1565.99,1213.64 1566.57,1214.73 1567.16,1214.51 1567.75,1211.49 1568.33,1211.58 1568.92,1211.71 1569.51,1211.59 1570.09,1213.15 1570.68,1212.98 1571.27,1211.61 1571.85,1210.2 1572.44,1211.73 1573.02,1211.83 1573.61,1213.39 1574.2,1213.22 1574.78,1213.17 1575.37,1210.27 1575.96,1211.64 1576.54,1212.86 1577.13,1215.75 1577.72,1217.17 1578.3,1216.89 1578.89,1215.19 1579.47,1209.47 1580.06,1209.53 1580.65,1209.26 1581.23,1209.33 1581.82,1210.79 1582.41,1211.07 1582.99,1209.47 1583.58,1210.7 1584.17,1212.44 1584.75,1210.64 1585.34,1210.54 1585.93,1211.69 1586.51,1212.02 1587.1,1216.17 1587.68,1211.7 1588.27,1211.99 1588.86,1211.7 1589.44,1215.97 1590.03,1215.76 1590.62,1214 1591.2,1213.91 1591.79,1213.9 1592.38,1212.15 1592.96,1212.03 1593.55,1212.08 1594.14,1211.83 1594.72,1213.54 1595.31,1210.6 1595.89,1209.23 1596.48,1206.32 1597.07,1205.02 1597.65,1207.82 1598.24,1210.81 1598.83,1209.81 1599.41,1209.99 1600,1208.51 1600.59,1204.53 1601.17,1204.87 1601.76,1207.87 1602.34,1207.99 1602.93,1207.92 1603.52,1209.68 1604.1,1210.22 1604.69,1211.57 1605.28,1211.73 1605.86,1211.44 1606.45,1211.23 1607.04,1208.61 1607.62,1211.17 1608.21,1211.17 1608.8,1216.61 1609.38,1217.57 1609.97,1215.76 1610.55,1219.45 1611.14,1219.28 1611.73,1217.58 1612.31,1220.24 1612.9,1218.45 1613.49,1215.27 1614.07,1215.12 1614.66,1213.95 1615.25,1211.14 1615.83,1211.31 1616.42,1212.66 1617.01,1211.22 1617.59,1211.36 1618.18,1211.37 1618.76,1211.37 1619.35,1210.24 1619.94,1210.28 1620.52,1208.81 1621.11,1209.08 1621.7,1208.15 1622.28,1206.98 1622.87,1208.56 1623.46,1210.07 1624.04,1210.26 1624.63,1211.7 1625.22,1213.07 1625.8,1215.96 1626.39,1214.22 1626.97,1214.47 1627.56,1212.85 1628.15,1212.84 1628.73,1212.9 1629.32,1212.91 1629.91,1212.95 1630.49,1214.18 1631.08,1215.09 1631.67,1216.32 1632.25,1216.01 1632.84,1218.63 1633.42,1222.32 1634.01,1221.68 1634.6,1218.43 1635.18,1218.23 1635.77,1213.77 1636.36,1215.06 1636.94,1216.03 1637.53,1214.35 1638.12,1214.39 1638.7,1214.61 1639.29,1210.19 1639.88,1207.57 1640.46,1206.31 1641.05,1205.14 1641.63,1204.16 1642.22,1204.35 1642.81,1206.22 1643.39,1205.07 1643.98,1205.37 1644.57,1205.7 1645.15,1206.2 1645.74,1206.46 1646.33,1204.15 1646.91,1205.88 1647.5,1203.54 1648.09,1205.49 1648.67,1207.4 1649.26,1207.91 1649.84,1206.65 1650.43,1206.72 1651.02,1208.77 1651.6,1207.53 1652.19,1206.26 1652.78,1202.29 1653.36,1206.87 1653.95,1205.26 1654.54,1205.84 1655.12,1204.67 1655.71,1205.18 1656.29,1203.9 1656.88,1205.64 1657.47,1210.24 1658.05,1209.05 1658.64,1209.24 1659.23,1209.57 1659.81,1214 1660.4,1215.4 1660.99,1218.02 1661.57,1216.52 1662.16,1213.36 1662.75,1216.25 1663.33,1214.64 1663.92,1215.72 1664.5,1216.84 1665.09,1216.48 1665.68,1214.91 1666.26,1216.28 1666.85,1217.37 1667.44,1215.75 1668.02,1214.13 1668.61,1213.96 1669.2,1211.1 1669.78,1210.8 1670.37,1209.69 1670.96,1208.08 1671.54,1205.36 1672.13,1204.19 1672.71,1207.09 1673.3,1205.79 1673.89,1208.78 1674.47,1213.18 1675.06,1213.01 1675.65,1213.07 1676.23,1211.16 1676.82,1212.41 1677.41,1212.13 1677.99,1212.06 1678.58,1216.59 1679.17,1213.63 1679.75,1213.59 1680.34,1214.74 1680.92,1213.41 1681.51,1213.29 1682.1,1213.43 1682.68,1213.56 1683.27,1214.5 1683.86,1214.49 1684.44,1215.8 1685.03,1217.16 1685.62,1215.67 1686.2,1216.7 1686.79,1215.05 1687.37,1214.76 1687.96,1214.59 1688.55,1217.27 1689.13,1215.74 1689.72,1215.44 1690.31,1218.18 1690.89,1218.98 1691.48,1214.32 1692.07,1217.18 1692.65,1215.39 1693.24,1215.21 1693.83,1210.95 1694.41,1211.17 1695,1208.5 1695.58,1210.01 1696.17,1211.56 1696.76,1211.53 1697.34,1211.48 1697.93,1210.01 1698.52,1210.14 1699.1,1211.76 1699.69,1213.09 1700.28,1214.54 1700.86,1214.2 1701.45,1211.16 1702.04,1208.09 1702.62,1207.98 1703.21,1209.56 1703.79,1208.01 1704.38,1208.02 1704.97,1209.45 1705.55,1209.49 1706.14,1212.45 1706.73,1213.64 1707.31,1216.28 1707.9,1216.04 1708.49,1218.48 1709.07,1219.72 1709.66,1218.23 1710.24,1220.73 1710.83,1221.68 1711.42,1218.38 1712,1216.82 1712.59,1219.24 1713.18,1216.02 1713.76,1214.59 1714.35,1215.76 1714.94,1216.91 1715.52,1215 1716.11,1214.54 1716.7,1215.81 1717.28,1214.01 1717.87,1209.53 1718.45,1209.53 1719.04,1209.51 1719.63,1209.44 1720.21,1208.17 1720.8,1209.61 1721.39,1211.16 1721.97,1209.81 1722.56,1209.81 1723.15,1212.5 1723.73,1213.77 1724.32,1217.86 1724.91,1217.24 1725.49,1215.4 1726.08,1212.37 1726.66,1216.64 1727.25,1217.8 1727.84,1218.96 1728.42,1215.65 1729.01,1215.26 1729.6,1217.68 1730.18,1216.04 1730.77,1214.49 1731.36,1214.11 1731.94,1215.3 1732.53,1215.04 1733.11,1211.61 1733.7,1212.89 1734.29,1211.64 1734.87,1211.37 1735.46,1210.09 1736.05,1209.13 1736.63,1209.43 1737.22,1209.64 1737.81,1208.09 1738.39,1208.59 1738.98,1208.75 1739.57,1204.21 1740.15,1204.69 1740.74,1203.55 1741.32,1203.76 1741.91,1204.1 1742.5,1204.46 1743.08,1204.75 1743.67,1209.78 1744.26,1208.51 1744.84,1207.05 1745.43,1211.32 1746.02,1210.12 1746.6,1211.6 1747.19,1211.85 1747.78,1210.12 1748.36,1208.72 1748.95,1210.22 1749.53,1207.58 1750.12,1206.58 1750.71,1205.65 1751.29,1203.11 1751.88,1202.05 1752.47,1203.79 1753.05,1204.28 1753.64,1201.79 1754.23,1203.71 1754.81,1202.62 1755.4,1207.32 1755.99,1210.3 1756.57,1210.4 1757.16,1211.93 1757.74,1216 1758.33,1215.95 1758.92,1217.33 1759.5,1216.6 1760.09,1216.3 1760.68,1219.08 1761.26,1218.56 1761.85,1223.74 1762.44,1221.42 1763.02,1220.77 1763.61,1221.73 1764.19,1221.39 1764.78,1220.98 1765.37,1221.77 1765.95,1221.07 1766.54,1219.11 1767.13,1216.97 1767.71,1215.33 1768.3,1213.54 1768.89,1213.88 1769.47,1213.5 1770.06,1213.31 1770.65,1217.38 1771.23,1215.75 1771.82,1215.63 1772.4,1215.4 1772.99,1213.65 1773.58,1216.13 1774.16,1215.78 1774.75,1212.66 1775.34,1212.57 1775.92,1211.23 1776.51,1211.52 1777.1,1212.83 1777.68,1212.93 1778.27,1211.44 1778.86,1211.71 1779.44,1208.9 1780.03,1210.26 1780.61,1210.36 1781.2,1208.96 1781.79,1208.94 1782.37,1207.52 1782.96,1209.01 1783.55,1207.88 1784.13,1208.09 1784.72,1206.79 1785.31,1202.9 1785.89,1204.7 1786.48,1207.82 1787.06,1204.97 1787.65,1206.44 1788.24,1206.91 1788.82,1207.14 1789.41,1207.36 1790,1206.2 1790.58,1206.54 1791.17,1208.24 1791.76,1208.56 1792.34,1208.76 1792.93,1209.21 1793.52,1209.53 1794.1,1206.94 1794.69,1207.38 1795.27,1210.38 1795.86,1211.68 1796.45,1210.11 1797.03,1211.78 1797.62,1210.4 1798.21,1210.41 1798.79,1209.29 1799.38,1212.02 1799.97,1210.44 1800.55,1211.65 1801.14,1211.61 1801.73,1209.96 1802.31,1208.85 1802.9,1211.99 1803.48,1210.54 1804.07,1210.62 1804.66,1210.66 1805.24,1210.65 1805.83,1208.11 1806.42,1206.92 1807,1207.43 1807.59,1207.61 1808.18,1207.8 1808.76,1206.34 1809.35,1205.28 1809.94,1205.74 1810.52,1205.79 1811.11,1206.11 1811.69,1207.8 1812.28,1213.52 1812.87,1210.57 1813.45,1209.36 1814.04,1206.57 1814.63,1205.4 1815.21,1208.65 1815.8,1208.45 1816.39,1208.61 1816.97,1207.17 1817.56,1207.59 1818.14,1203.81 1818.73,1204.57 1819.32,1204.75 1819.9,1209.37 1820.49,1207.85 1821.08,1208 1821.66,1205.13 1822.25,1204.01 1822.84,1207.38 1823.42,1207.53 1824.01,1207.74 1824.6,1208.15 1825.18,1211.16 1825.77,1211.12 1826.35,1209.83 1826.94,1209.85 1827.53,1205.95 1828.11,1205.88 1828.7,1206.19 1829.29,1205.09 1829.87,1204.07 1830.46,1202.99 1831.05,1202.37 1831.63,1204.45 1832.22,1206.09 1832.81,1206.18 1833.39,1206.31 1833.98,1208.02 1834.56,1209.54 1835.15,1210.9 1835.74,1208.23 1836.32,1208.6 1836.91,1210.04 1837.5,1210.14 1838.08,1210.54 1838.67,1212.09 1839.26,1210.59 1839.84,1210.64 1840.43,1212.38 1841.01,1210.6 1841.6,1213.42 1842.19,1216.18 1842.77,1217.53 1843.36,1217.28 1843.95,1218.79 1844.53,1218.27 1845.12,1215.33 1845.71,1216.58 1846.29,1213.63 1846.88,1216.28 1847.47,1216.07 1848.05,1215.81 1848.64,1217.11 1849.22,1216.81 1849.81,1216.63 1850.4,1217.5 1850.98,1216.92 1851.57,1216.79 1852.16,1213.33 1852.74,1213.05 1853.33,1211.55 1853.92,1213.05 1854.5,1214.28 1855.09,1217.19 1855.68,1218.33 1856.26,1218.16 1856.85,1217.6 1857.43,1218.71 1858.02,1217.16 1858.61,1219.3 1859.19,1216.28 1859.78,1214.52 1860.37,1214.36 1860.95,1212.99 1861.54,1212.69 1862.13,1212.64 1862.71,1212.53 1863.3,1209.6 1863.88,1212.48 1864.47,1212.46 1865.06,1212.46 1865.64,1212.05 1866.23,1214.94 1866.82,1219.04 1867.4,1221.29 1867.99,1222.04 1868.58,1222.88 1869.16,1223.59 1869.75,1225.45 1870.34,1224.7 1870.92,1225.51 1871.51,1227.54 1872.09,1225.65 1872.68,1226.52 1873.27,1224.74 1873.85,1221.29 1874.44,1222.13 1875.03,1220.18 1875.61,1218.24 1876.2,1213.39 1876.79,1213.26 1877.37,1211.95 1877.96,1214.71 1878.55,1214.35 1879.13,1214.29 1879.72,1214.66 1880.3,1215.7 1880.89,1211.39 1881.48,1209.81 1882.06,1208.58 1882.65,1208.47 1883.24,1207.29 1883.82,1208.81 1884.41,1208.75 1885,1207.85 1885.58,1207.88 1886.17,1206.44 1886.76,1208.15 1887.34,1206.75 1887.93,1207.13 1888.51,1207.45 1889.1,1209.09 1889.69,1207.88 1890.27,1209.39 1890.86,1205.4 1891.45,1207.38 1892.03,1207.65 1892.62,1203.64 1893.21,1202.51 1893.79,1201.39 1894.38,1208.86 1894.96,1212.22 1895.55,1208.05 1896.14,1206.84 1896.72,1207 1897.31,1207.54 1897.9,1207.88 1898.48,1209.58 1899.07,1211.11 1899.66,1209.64 1900.24,1211.26 1900.83,1212.55 1901.42,1209.69 1902,1208.73 1902.59,1209.19 1903.17,1206.62 1903.76,1203.83 1904.35,1202.52 1904.93,1201.27 1905.52,1204.76 1906.11,1203.53 1906.69,1206.67 1907.28,1207.17 1907.87,1208.65 1908.45,1210.43 1909.04,1209.02 1909.63,1212.19 1910.21,1209.76 1910.8,1211.09 1911.38,1209.47 1911.97,1209.38 1912.56,1208.1 1913.14,1209.53 1913.73,1210.9 1914.32,1210.68 1914.9,1210.6 1915.49,1212.12 1916.08,1215.23 1916.66,1214.84 1917.25,1213.6 1917.83,1214.88 1918.42,1214.86 1919.01,1220.07 1919.59,1220.53 1920.18,1219.86 1920.77,1220.56 1921.35,1217.5 1921.94,1215.48 1922.53,1215.17 1923.11,1215.22 1923.7,1215.03 1924.29,1213.39 1924.87,1214.8 1925.46,1213.44 1926.04,1208.81 1926.63,1210.72 1927.22,1209.31 1927.8,1213.71 1928.39,1212.03 1928.98,1210.42 1929.56,1207.98 1930.15,1208.38 1930.74,1208.63 1931.32,1210.04 1931.91,1210.18 1932.5,1211.66 1933.08,1210.09 1933.67,1205.88 1934.25,1206.24 1934.84,1208.18 1935.43,1206.88 1936.01,1208.59 1936.6,1208.72 1937.19,1208.98 1937.77,1209.29 1938.36,1209.47 1938.95,1211.12 1939.53,1211.25 1940.12,1208.43 1940.71,1211.36 1941.29,1214.04 1941.88,1213.79 1942.46,1215.12 1943.05,1216.44 1943.64,1214.83 1944.22,1214.62 1944.81,1212.79 1945.4,1214 1945.98,1214.17 1946.57,1214.07 1947.16,1216.58 1947.74,1216.38 1948.33,1216.27 1948.91,1214.78 1949.5,1218.68 1950.09,1216.84 1950.67,1216.65 1951.26,1219.24 1951.85,1217.45 1952.43,1215.83 1953.02,1217.95 1953.61,1217.69 1954.19,1216.16 1954.78,1215.9 1955.37,1217.14 1955.95,1219.6 1956.54,1216.15 1957.12,1216.99 1957.71,1216.56 1958.3,1216.2 1958.88,1215.99 1959.47,1215.84 1960.06,1218.4 1960.64,1224.83 1961.23,1224.2 1961.82,1224.83 1962.4,1220.03 1962.99,1215.56 1963.58,1212.53 1964.16,1212.31 1964.75,1212.56 1965.33,1214.1 1965.92,1214.22 1966.51,1213.85 1967.09,1216.56 1967.68,1214.91 1968.27,1216.02 1968.85,1212.83 1969.44,1212.79 1970.03,1212.49 1970.61,1210.85 1971.2,1209.46 1971.78,1209.41 1972.37,1212.52 1972.96,1212.55 1973.54,1209.56 1974.13,1209.99 1974.72,1208.87 1975.3,1204.86 1975.89,1204.65 1976.48,1204.94 1977.06,1205.34 1977.65,1205.83 1978.24,1204.89 1978.82,1205.45 1979.41,1203.08 1979.99,1204.79 1980.58,1203.8 1981.17,1202.91 1981.75,1200.28 1982.34,1199.25 1982.93,1196.9 1983.51,1194.89 1984.1,1195.66 1984.69,1197.7 1985.27,1196.95 1985.86,1197.71 1986.45,1200.05 1987.03,1204.72 1987.62,1203.86 1988.2,1210.12 1988.79,1210.35 1989.38,1210.55 1989.96,1209.23 1990.55,1207.93 1991.14,1208.45 1991.72,1211.39 1992.31,1211.37 1992.9,1208.28 1993.48,1206.81 1994.07,1209.85 1994.65,1211.57 1995.24,1210.39 1995.83,1208.58 1996.41,1211.64 1997,1210.07 1997.59,1211.48 1998.17,1211.42 1998.76,1211.39 1999.35,1211.61 1999.93,1213.12 2000.52,1211.85 2001.11,1212.22 2001.69,1213.4 2002.28,1211.93 2002.86,1213.55 2003.45,1215.03 2004.04,1216.27 2004.62,1217.66 2005.21,1214.49 2005.8,1213.2 2006.38,1215.62 2006.97,1215.26 2007.56,1216.63 2008.14,1216.38 2008.73,1214.69 2009.32,1216.21 2009.9,1216.14 2010.49,1214.65 2011.07,1214.69 2011.66,1216.16 2012.25,1212.87 2012.83,1211.91 2013.42,1214.54 2014.01,1212.87 2014.59,1209.9 2015.18,1211.44 2015.77,1211.54 2016.35,1212.93 2016.94,1214.21 2017.53,1214.29 2018.11,1211.39 2018.7,1209.87 2019.28,1211.47 2019.87,1212.69 2020.46,1211.42 2021.04,1211.46 2021.63,1211.43 2022.22,1209.93 2022.8,1211.3 2023.39,1211.38 2023.98,1211.59 2024.56,1208.95 2025.15,1210.56 2025.73,1208.76 2026.32,1207.62 2026.91,1212.36 2027.49,1210.95 2028.08,1209.43 2028.67,1209.62 2029.25,1209.92 2029.84,1210.21 2030.43,1211.82 2031.01,1211.78 2031.6,1210.39 2032.19,1211.92 2032.77,1213.15 2033.36,1211.73 2033.94,1212.8 2034.53,1212.76 2035.12,1208.16 2035.7,1210 2036.29,1210.18 2036.88,1211.58 2037.46,1212.74 2038.05,1212.62 2038.64,1212.82 2039.22,1212.64 2039.81,1214.32 2040.4,1214.52 2040.98,1214.37 2041.57,1215.99 2042.15,1215.84 2042.74,1215.56 2043.33,1217.92 2043.91,1214.67 2044.5,1212.96 2045.09,1215.66 2045.67,1216.73 2046.26,1215.1 2046.85,1214.86 2047.43,1214.67 2048.02,1216.09 2048.6,1218.87 2049.19,1218.47 2049.78,1217.88 2050.36,1215.74 2050.95,1215.18 2051.54,1213.38 2052.12,1211.62 2052.71,1213.01 2053.3,1212.89 2053.88,1212.49 2054.47,1209.47 2055.06,1210.93 2055.64,1209.39 2056.23,1209.43 2056.81,1209.75 2057.4,1211.12 2057.99,1211.06 2058.57,1211.05 2059.16,1211.14 2059.75,1211.16 2060.33,1211.3 2060.92,1211.3 2061.51,1211.25 2062.09,1211.02 2062.68,1208.25 2063.27,1208.35 2063.85,1209.97 2064.44,1210.14 2065.02,1211.84 2065.61,1211.95 2066.2,1216.1 2066.78,1210.06 2067.37,1212.94 2067.96,1212.69 2068.54,1213.53 2069.13,1211.67 2069.72,1210.24 2070.3,1210.13 2070.89,1213.11 2071.48,1211.79 2072.06,1213.25 2072.65,1214.54 2073.23,1213.02 2073.82,1211.4 2074.41,1209.77 2074.99,1205.51 2075.58,1208.81 2076.17,1211.54 2076.75,1211.68 2077.34,1214.37 2077.93,1212.66 2078.51,1212.41 2079.1,1211.11 2079.68,1209.88 2080.27,1212.52 2080.86,1213.92 2081.44,1211.09 2082.03,1213.67 2082.62,1216.35 2083.2,1216.04 2083.79,1215.97 2084.38,1215.47 2084.96,1215.34 2085.55,1216.65 2086.14,1212.4 2086.72,1212.35 2087.31,1213.72 2087.89,1212.21 2088.48,1209.39 2089.07,1212.33 2089.65,1212.34 2090.24,1209.6 2090.83,1207.24 2091.41,1207.65 2092,1213.49 2092.59,1212.18 2093.17,1212.31 2093.76,1212.24 2094.35,1209.44 2094.93,1212.19 2095.52,1209.22 2096.1,1207.73 2096.69,1208.16 2097.28,1206.96 2097.86,1207.42 2098.45,1210.75 2099.04,1210.54 2099.62,1204.94 2100.21,1207 2100.8,1205.75 2101.38,1203.57 2101.97,1204.19 2102.55,1203.23 2103.14,1203.84 2103.73,1204.13 2104.31,1206.11 2104.9,1207.45 2105.49,1209.26 2106.07,1209.17 2106.66,1209.55 2107.25,1210.04 2107.83,1207.55 2108.42,1207.59 2109.01,1209.24 2109.59,1209.25 2110.18,1209.69 2110.76,1211.17 2111.35,1212.73 2111.94,1212.41 2112.52,1213.64 2113.11,1214.68 2113.7,1211.74 2114.28,1208.74 2114.87,1210.37 2115.46,1211.46 2116.04,1207.24 2116.63,1206.21 2117.22,1207.86 2117.8,1209.54 2118.39,1205.47 2118.97,1207.19 2119.56,1207.75 2120.15,1210.47 2120.73,1212.07 2121.32,1210.78 2121.91,1209.28 2122.49,1209.24 2123.08,1206.57 2123.67,1208.42 2124.25,1208.42 2124.84,1209.84 2125.42,1211.54 2126.01,1214.59 2126.6,1214.59 2127.18,1216.14 2127.77,1213.21 2128.36,1213.04 2128.94,1212.7 2129.53,1213.96 2130.12,1210.87 2130.7,1210.85 2131.29,1210.76 2131.88,1213.74 2132.46,1212.23 2133.05,1212.54 2133.63,1215.46 2134.22,1217.81 2134.81,1219.1 2135.39,1218.4 2135.98,1218.13 2136.57,1217.87 2137.15,1216.02 2137.74,1212.68 2138.33,1208.24 2138.91,1209.85 2139.5,1211.09 2140.09,1209.91 2140.67,1210.04 2141.26,1213.42 2141.84,1210.42 2142.43,1211.86 2143.02,1216.08 2143.6,1216.43 2144.19,1217.8 2144.78,1216.02 2145.36,1214.44 2145.95,1211.28 2146.54,1208.52 2147.12,1209.96 2147.71,1210.27 2148.3,1209.31 2148.88,1206.59 2149.47,1205.12 2150.05,1205.54 2150.64,1205.72 2151.23,1206.08 2151.81,1204.89 2152.4,1202.23 2152.99,1204.05 2153.57,1207.09 2154.16,1204.43 2154.75,1206.52 2155.33,1208.14 2155.92,1208.39 2156.5,1209.83 2157.09,1210.01 2157.68,1208.51 2158.26,1210.21 \"/>\n<path clip-path=\"url(#clip632)\" d=\"M986.025 1212.01 L986.612 1212.01 L987.198 1212.01 L987.785 1212.01 L988.371 1212.01 L988.957 1212.01 L989.544 1212.01 L990.13 1212.01 L990.717 1212.01 L991.303 1212.01 L991.889 1212.01 L992.476 1212.01 L993.062 1212.01 L993.649 1212.01 L994.235 1212.01 L994.822 1212.01 L995.408 1212.01 L995.994 1212.01 L996.581 1212.01 L997.167 1212.01 L997.754 1212.01 L998.34 1212.01 L998.926 1212.01 L999.513 1212.01 L1000.1 1212.01 L1000.69 1212.01 L1001.27 1212.01 L1001.86 1212.01 L1002.44 1212.01 L1003.03 1212.01 L1003.62 1212.01 L1004.2 1212.01 L1004.79 1212.01 L1005.38 1212.01 L1005.96 1212.01 L1006.55 1212.01 L1007.14 1212.01 L1007.72 1212.01 L1008.31 1212.01 L1008.9 1212.01 L1009.48 1212.01 L1010.07 1212.01 L1010.65 1212.01 L1011.24 1212.01 L1011.83 1212.01 L1012.41 1212.01 L1013 1212.01 L1013.59 1212.01 L1014.17 1212.01 L1014.76 1212.01 L1015.35 1212.01 L1015.93 1212.01 L1016.52 1212.01 L1017.11 1212.01 L1017.69 1212.01 L1018.28 1212.01 L1018.86 1212.01 L1019.45 1212.01 L1020.04 1212.01 L1020.62 1212.01 L1021.21 1212.01 L1021.8 1212.01 L1022.38 1212.01 L1022.97 1212.01 L1023.56 1212.01 L1024.14 1212.01 L1024.73 1212.01 L1025.32 1212.01 L1025.9 1212.01 L1026.49 1212.01 L1027.07 1212.01 L1027.66 1212.01 L1028.25 1212.01 L1028.83 1212.01 L1029.42 1212.01 L1030.01 1212.01 L1030.59 1212.01 L1031.18 1212.01 L1031.77 1212.01 L1032.35 1212.01 L1032.94 1212.01 L1033.52 1212.01 L1034.11 1212.01 L1034.7 1212.01 L1035.28 1212.01 L1035.87 1212.01 L1036.46 1212.01 L1037.04 1212.01 L1037.63 1212.01 L1038.22 1212.01 L1038.8 1212.01 L1039.39 1212.01 L1039.98 1212.01 L1040.56 1212.01 L1041.15 1212.01 L1041.73 1212.01 L1042.32 1212.01 L1042.91 1212.01 L1043.49 1212.01 L1044.08 1212.01 L1044.67 1212.01 L1045.25 1212.01 L1045.84 1212.01 L1046.43 1212.01 L1047.01 1212.01 L1047.6 1212.01 L1048.19 1212.01 L1048.77 1212.01 L1049.36 1212.01 L1049.94 1212.01 L1050.53 1212.01 L1051.12 1212.01 L1051.7 1212.01 L1052.29 1212.01 L1052.88 1212.01 L1053.46 1212.01 L1054.05 1212.01 L1054.64 1212.01 L1055.22 1212.01 L1055.81 1212.01 L1056.39 1212.01 L1056.98 1212.01 L1057.57 1212.01 L1058.15 1212.01 L1058.74 1212.01 L1059.33 1212.01 L1059.91 1212.01 L1060.5 1212.01 L1061.09 1212.01 L1061.67 1212.01 L1062.26 1212.01 L1062.85 1212.01 L1063.43 1212.01 L1064.02 1212.01 L1064.6 1212.01 L1065.19 1212.01 L1065.78 1212.01 L1066.36 1212.01 L1066.95 1212.01 L1067.54 1212.01 L1068.12 1212.01 L1068.71 1212.01 L1069.3 1212.01 L1069.88 1212.01 L1070.47 1212.01 L1071.06 1212.01 L1071.64 1212.01 L1072.23 1212.01 L1072.81 1212.01 L1073.4 1212.01 L1073.99 1212.01 L1074.57 1212.01 L1075.16 1212.01 L1075.75 1212.01 L1076.33 1212.01 L1076.92 1212.01 L1077.51 1212.01 L1078.09 1212.01 L1078.68 1212.01 L1079.26 1212.01 L1079.85 1212.01 L1080.44 1212.01 L1081.02 1212.01 L1081.61 1212.01 L1082.2 1212.01 L1082.78 1212.01 L1083.37 1212.01 L1083.96 1212.01 L1084.54 1212.01 L1085.13 1212.01 L1085.72 1212.01 L1086.3 1212.01 L1086.89 1212.01 L1087.47 1212.01 L1088.06 1212.01 L1088.65 1212.01 L1089.23 1212.01 L1089.82 1212.01 L1090.41 1212.01 L1090.99 1212.01 L1091.58 1212.01 L1092.17 1212.01 L1092.75 1212.01 L1093.34 1212.01 L1093.93 1212.01 L1094.51 1212.01 L1095.1 1212.01 L1095.68 1212.01 L1096.27 1212.01 L1096.86 1212.01 L1097.44 1212.01 L1098.03 1212.01 L1098.62 1212.01 L1099.2 1212.01 L1099.79 1212.01 L1100.38 1212.01 L1100.96 1212.01 L1101.55 1212.01 L1102.14 1212.01 L1102.72 1212.01 L1103.31 1212.01 L1103.89 1212.01 L1104.48 1212.01 L1105.07 1212.01 L1105.65 1212.01 L1106.24 1212.01 L1106.83 1212.01 L1107.41 1212.01 L1108 1212.01 L1108.59 1212.01 L1109.17 1212.01 L1109.76 1212.01 L1110.34 1212.01 L1110.93 1212.01 L1111.52 1212.01 L1112.1 1212.01 L1112.69 1212.01 L1113.28 1212.01 L1113.86 1212.01 L1114.45 1212.01 L1115.04 1212.01 L1115.62 1212.01 L1116.21 1212.01 L1116.8 1212.01 L1117.38 1212.01 L1117.97 1212.01 L1118.55 1212.01 L1119.14 1212.01 L1119.73 1212.01 L1120.31 1212.01 L1120.9 1212.01 L1121.49 1212.01 L1122.07 1212.01 L1122.66 1212.01 L1123.25 1212.01 L1123.83 1212.01 L1124.42 1212.01 L1125.01 1212.01 L1125.59 1212.01 L1126.18 1212.01 L1126.76 1212.01 L1127.35 1212.01 L1127.94 1212.01 L1128.52 1212.01 L1129.11 1212.01 L1129.7 1212.01 L1130.28 1212.01 L1130.87 1212.01 L1131.46 1212.01 L1132.04 1212.01 L1132.63 1212.01 L1133.21 1212.01 L1133.8 1212.01 L1134.39 1212.01 L1134.97 1212.01 L1135.56 1212.01 L1136.15 1212.01 L1136.73 1212.01 L1137.32 1212.01 L1137.91 1212.01 L1138.49 1212.01 L1139.08 1212.01 L1139.67 1212.01 L1140.25 1212.01 L1140.84 1212.01 L1141.42 1212.01 L1142.01 1212.01 L1142.6 1212.01 L1143.18 1212.01 L1143.77 1212.01 L1144.36 1212.01 L1144.94 1212.01 L1145.53 1212.01 L1146.12 1212.01 L1146.7 1212.01 L1147.29 1212.01 L1147.88 1212.01 L1148.46 1212.01 L1149.05 1212.01 L1149.63 1212.01 L1150.22 1212.01 L1150.81 1212.01 L1151.39 1212.01 L1151.98 1212.01 L1152.57 1212.01 L1153.15 1212.01 L1153.74 1212.01 L1154.33 1212.01 L1154.91 1212.01 L1155.5 1212.01 L1156.09 1212.01 L1156.67 1212.01 L1157.26 1212.01 L1157.84 1212.01 L1158.43 1212.01 L1159.02 1212.01 L1159.6 1212.01 L1160.19 1212.01 L1160.78 1212.01 L1161.36 1212.01 L1161.95 1212.01 L1162.54 1212.01 L1163.12 1212.01 L1163.71 1212.01 L1164.29 1212.01 L1164.88 1212.01 L1165.47 1212.01 L1166.05 1212.01 L1166.64 1212.01 L1167.23 1212.01 L1167.81 1212.01 L1168.4 1212.01 L1168.99 1212.01 L1169.57 1212.01 L1170.16 1212.01 L1170.75 1212.01 L1171.33 1212.01 L1171.92 1212.01 L1172.5 1212.01 L1173.09 1212.01 L1173.68 1212.01 L1174.26 1212.01 L1174.85 1212.01 L1175.44 1212.01 L1176.02 1212.01 L1176.61 1212.01 L1177.2 1212.01 L1177.78 1212.01 L1178.37 1212.01 L1178.96 1212.01 L1179.54 1212.01 L1180.13 1212.01 L1180.71 1212.01 L1181.3 1212.01 L1181.89 1212.01 L1182.47 1212.01 L1183.06 1212.01 L1183.65 1212.01 L1184.23 1212.01 L1184.82 1212.01 L1185.41 1212.01 L1185.99 1212.01 L1186.58 1212.01 L1187.16 1212.01 L1187.75 1212.01 L1188.34 1212.01 L1188.92 1212.01 L1189.51 1212.01 L1190.1 1212.01 L1190.68 1212.01 L1191.27 1212.01 L1191.86 1212.01 L1192.44 1212.01 L1193.03 1212.01 L1193.62 1212.01 L1194.2 1212.01 L1194.79 1212.01 L1195.37 1212.01 L1195.96 1212.01 L1196.55 1212.01 L1197.13 1212.01 L1197.72 1212.01 L1198.31 1212.01 L1198.89 1212.01 L1199.48 1212.01 L1200.07 1212.01 L1200.65 1212.01 L1201.24 1212.01 L1201.83 1212.01 L1202.41 1212.01 L1203 1212.01 L1203.58 1212.01 L1204.17 1212.01 L1204.76 1212.01 L1205.34 1212.01 L1205.93 1212.01 L1206.52 1212.01 L1207.1 1212.01 L1207.69 1212.01 L1208.28 1212.01 L1208.86 1212.01 L1209.45 1212.01 L1210.03 1212.01 L1210.62 1212.01 L1211.21 1212.01 L1211.79 1212.01 L1212.38 1212.01 L1212.97 1212.01 L1213.55 1212.01 L1214.14 1212.01 L1214.73 1212.01 L1215.31 1212.01 L1215.9 1212.01 L1216.49 1212.01 L1217.07 1212.01 L1217.66 1212.01 L1218.24 1212.01 L1218.83 1212.01 L1219.42 1212.01 L1220 1212.01 L1220.59 1212.01 L1221.18 1212.01 L1221.76 1212.01 L1222.35 1212.01 L1222.94 1212.01 L1223.52 1212.01 L1224.11 1212.01 L1224.7 1212.01 L1225.28 1212.01 L1225.87 1212.01 L1226.45 1212.01 L1227.04 1212.01 L1227.63 1212.01 L1228.21 1212.01 L1228.8 1212.01 L1229.39 1212.01 L1229.97 1212.01 L1230.56 1212.01 L1231.15 1212.01 L1231.73 1212.01 L1232.32 1212.01 L1232.91 1212.01 L1233.49 1212.01 L1234.08 1212.01 L1234.66 1212.01 L1235.25 1212.01 L1235.84 1212.01 L1236.42 1212.01 L1237.01 1212.01 L1237.6 1212.01 L1238.18 1212.01 L1238.77 1212.01 L1239.36 1212.01 L1239.94 1212.01 L1240.53 1212.01 L1241.11 1212.01 L1241.7 1212.01 L1242.29 1212.01 L1242.87 1212.01 L1243.46 1212.01 L1244.05 1212.01 L1244.63 1212.01 L1245.22 1212.01 L1245.81 1212.01 L1246.39 1212.01 L1246.98 1212.01 L1247.57 1212.01 L1248.15 1212.01 L1248.74 1212.01 L1249.32 1212.01 L1249.91 1212.01 L1250.5 1212.01 L1251.08 1212.01 L1251.67 1212.01 L1252.26 1212.01 L1252.84 1212.01 L1253.43 1212.01 L1254.02 1212.01 L1254.6 1212.01 L1255.19 1212.01 L1255.78 1212.01 L1256.36 1212.01 L1256.95 1212.01 L1257.53 1212.01 L1258.12 1212.01 L1258.71 1212.01 L1259.29 1212.01 L1259.88 1212.01 L1260.47 1212.01 L1261.05 1212.01 L1261.64 1212.01 L1262.23 1212.01 L1262.81 1212.01 L1263.4 1212.01 L1263.98 1212.01 L1264.57 1212.01 L1265.16 1212.01 L1265.74 1212.01 L1266.33 1212.01 L1266.92 1212.01 L1267.5 1212.01 L1268.09 1212.01 L1268.68 1212.01 L1269.26 1212.01 L1269.85 1212.01 L1270.44 1212.01 L1271.02 1212.01 L1271.61 1212.01 L1272.19 1212.01 L1272.78 1212.01 L1273.37 1212.01 L1273.95 1212.01 L1274.54 1212.01 L1275.13 1212.01 L1275.71 1212.01 L1276.3 1212.01 L1276.89 1212.01 L1277.47 1212.01 L1278.06 1212.01 L1278.65 1212.01 L1279.23 1212.01 L1279.82 1212.01 L1280.4 1212.01 L1280.99 1212.01 L1281.58 1212.01 L1282.16 1212.01 L1282.75 1212.01 L1283.34 1212.01 L1283.92 1212.01 L1284.51 1212.01 L1285.1 1212.01 L1285.68 1212.01 L1286.27 1212.01 L1286.86 1212.01 L1287.44 1212.01 L1288.03 1212.01 L1288.61 1212.01 L1289.2 1212.01 L1289.79 1212.01 L1290.37 1212.01 L1290.96 1212.01 L1291.55 1212.01 L1292.13 1212.01 L1292.72 1212.01 L1293.31 1212.01 L1293.89 1212.01 L1294.48 1212.01 L1295.06 1212.01 L1295.65 1212.01 L1296.24 1212.01 L1296.82 1212.01 L1297.41 1212.01 L1298 1212.01 L1298.58 1212.01 L1299.17 1212.01 L1299.76 1212.01 L1300.34 1212.01 L1300.93 1212.01 L1301.52 1212.01 L1302.1 1212.01 L1302.69 1212.01 L1303.27 1212.01 L1303.86 1212.01 L1304.45 1212.01 L1305.03 1212.01 L1305.62 1212.01 L1306.21 1212.01 L1306.79 1212.01 L1307.38 1212.01 L1307.97 1212.01 L1308.55 1212.01 L1309.14 1212.01 L1309.73 1212.01 L1310.31 1212.01 L1310.9 1212.01 L1311.48 1212.01 L1312.07 1212.01 L1312.66 1212.01 L1313.24 1212.01 L1313.83 1212.01 L1314.42 1212.01 L1315 1212.01 L1315.59 1212.01 L1316.18 1212.01 L1316.76 1212.01 L1317.35 1212.01 L1317.93 1212.01 L1318.52 1212.01 L1319.11 1212.01 L1319.69 1212.01 L1320.28 1212.01 L1320.87 1212.01 L1321.45 1212.01 L1322.04 1212.01 L1322.63 1212.01 L1323.21 1212.01 L1323.8 1212.01 L1324.39 1212.01 L1324.97 1212.01 L1325.56 1212.01 L1326.14 1212.01 L1326.73 1212.01 L1327.32 1212.01 L1327.9 1212.01 L1328.49 1212.01 L1329.08 1212.01 L1329.66 1212.01 L1330.25 1212.01 L1330.84 1212.01 L1331.42 1212.01 L1332.01 1212.01 L1332.6 1212.01 L1333.18 1212.01 L1333.77 1212.01 L1334.35 1212.01 L1334.94 1212.01 L1335.53 1212.01 L1336.11 1212.01 L1336.7 1212.01 L1337.29 1212.01 L1337.87 1212.01 L1338.46 1212.01 L1339.05 1212.01 L1339.63 1212.01 L1340.22 1212.01 L1340.8 1212.01 L1341.39 1212.01 L1341.98 1212.01 L1342.56 1212.01 L1343.15 1212.01 L1343.74 1212.01 L1344.32 1212.01 L1344.91 1212.01 L1345.5 1212.01 L1346.08 1212.01 L1346.67 1212.01 L1347.26 1212.01 L1347.84 1212.01 L1348.43 1212.01 L1349.01 1212.01 L1349.6 1212.01 L1350.19 1212.01 L1350.77 1212.01 L1351.36 1212.01 L1351.95 1212.01 L1352.53 1212.01 L1353.12 1212.01 L1353.71 1212.01 L1354.29 1212.01 L1354.88 1212.01 L1355.47 1212.01 L1356.05 1212.01 L1356.64 1212.01 L1357.22 1212.01 L1357.81 1212.01 L1358.4 1212.01 L1358.98 1212.01 L1359.57 1212.01 L1360.16 1212.01 L1360.74 1212.01 L1361.33 1212.01 L1361.92 1212.01 L1362.5 1212.01 L1363.09 1212.01 L1363.68 1212.01 L1364.26 1212.01 L1364.85 1212.01 L1365.43 1212.01 L1366.02 1212.01 L1366.61 1212.01 L1367.19 1212.01 L1367.78 1212.01 L1368.37 1212.01 L1368.95 1212.01 L1369.54 1212.01 L1370.13 1212.01 L1370.71 1212.01 L1371.3 1212.01 L1371.88 1212.01 L1372.47 1212.01 L1373.06 1212.01 L1373.64 1212.01 L1374.23 1212.01 L1374.82 1212.01 L1375.4 1212.01 L1375.99 1212.01 L1376.58 1212.01 L1377.16 1212.01 L1377.75 1212.01 L1378.34 1212.01 L1378.92 1212.01 L1379.51 1212.01 L1380.09 1212.01 L1380.68 1212.01 L1381.27 1212.01 L1381.85 1212.01 L1382.44 1212.01 L1383.03 1212.01 L1383.61 1212.01 L1384.2 1212.01 L1384.79 1212.01 L1385.37 1212.01 L1385.96 1212.01 L1386.55 1212.01 L1387.13 1212.01 L1387.72 1212.01 L1388.3 1212.01 L1388.89 1212.01 L1389.48 1212.01 L1390.06 1212.01 L1390.65 1212.01 L1391.24 1212.01 L1391.82 1212.01 L1392.41 1212.01 L1393 1212.01 L1393.58 1212.01 L1394.17 1212.01 L1394.75 1212.01 L1395.34 1212.01 L1395.93 1212.01 L1396.51 1212.01 L1397.1 1212.01 L1397.69 1212.01 L1398.27 1212.01 L1398.86 1212.01 L1399.45 1212.01 L1400.03 1212.01 L1400.62 1212.01 L1401.21 1212.01 L1401.79 1212.01 L1402.38 1212.01 L1402.96 1212.01 L1403.55 1212.01 L1404.14 1212.01 L1404.72 1212.01 L1405.31 1212.01 L1405.9 1212.01 L1406.48 1212.01 L1407.07 1212.01 L1407.66 1212.01 L1408.24 1212.01 L1408.83 1212.01 L1409.42 1212.01 L1410 1212.01 L1410.59 1212.01 L1411.17 1212.01 L1411.76 1212.01 L1412.35 1212.01 L1412.93 1212.01 L1413.52 1212.01 L1414.11 1212.01 L1414.69 1212.01 L1415.28 1212.01 L1415.87 1212.01 L1416.45 1212.01 L1417.04 1212.01 L1417.63 1212.01 L1418.21 1212.01 L1418.8 1212.01 L1419.38 1212.01 L1419.97 1212.01 L1420.56 1212.01 L1421.14 1212.01 L1421.73 1212.01 L1422.32 1212.01 L1422.9 1212.01 L1423.49 1212.01 L1424.08 1212.01 L1424.66 1212.01 L1425.25 1212.01 L1425.83 1212.01 L1426.42 1212.01 L1427.01 1212.01 L1427.59 1212.01 L1428.18 1212.01 L1428.77 1212.01 L1429.35 1212.01 L1429.94 1212.01 L1430.53 1212.01 L1431.11 1212.01 L1431.7 1212.01 L1432.29 1212.01 L1432.87 1212.01 L1433.46 1212.01 L1434.04 1212.01 L1434.63 1212.01 L1435.22 1212.01 L1435.8 1212.01 L1436.39 1212.01 L1436.98 1212.01 L1437.56 1212.01 L1438.15 1212.01 L1438.74 1212.01 L1439.32 1212.01 L1439.91 1212.01 L1440.5 1212.01 L1441.08 1212.01 L1441.67 1212.01 L1442.25 1212.01 L1442.84 1212.01 L1443.43 1212.01 L1444.01 1212.01 L1444.6 1212.01 L1445.19 1212.01 L1445.77 1212.01 L1446.36 1212.01 L1446.95 1212.01 L1447.53 1212.01 L1448.12 1212.01 L1448.7 1212.01 L1449.29 1212.01 L1449.88 1212.01 L1450.46 1212.01 L1451.05 1212.01 L1451.64 1212.01 L1452.22 1212.01 L1452.81 1212.01 L1453.4 1212.01 L1453.98 1212.01 L1454.57 1212.01 L1455.16 1212.01 L1455.74 1212.01 L1456.33 1212.01 L1456.91 1212.01 L1457.5 1212.01 L1458.09 1212.01 L1458.67 1212.01 L1459.26 1212.01 L1459.85 1212.01 L1460.43 1212.01 L1461.02 1212.01 L1461.61 1212.01 L1462.19 1212.01 L1462.78 1212.01 L1463.37 1212.01 L1463.95 1212.01 L1464.54 1212.01 L1465.12 1212.01 L1465.71 1212.01 L1466.3 1212.01 L1466.88 1212.01 L1467.47 1212.01 L1468.06 1212.01 L1468.64 1212.01 L1469.23 1212.01 L1469.82 1212.01 L1470.4 1212.01 L1470.99 1212.01 L1471.57 1212.01 L1472.16 1212.01 L1472.75 1212.01 L1473.33 1212.01 L1473.92 1212.01 L1474.51 1212.01 L1475.09 1212.01 L1475.68 1212.01 L1476.27 1212.01 L1476.85 1212.01 L1477.44 1212.01 L1478.03 1212.01 L1478.61 1212.01 L1479.2 1212.01 L1479.78 1212.01 L1480.37 1212.01 L1480.96 1212.01 L1481.54 1212.01 L1482.13 1212.01 L1482.72 1212.01 L1483.3 1212.01 L1483.89 1212.01 L1484.48 1212.01 L1485.06 1212.01 L1485.65 1212.01 L1486.24 1212.01 L1486.82 1212.01 L1487.41 1212.01 L1487.99 1212.01 L1488.58 1212.01 L1489.17 1212.01 L1489.75 1212.01 L1490.34 1212.01 L1490.93 1212.01 L1491.51 1212.01 L1492.1 1212.01 L1492.69 1212.01 L1493.27 1212.01 L1493.86 1212.01 L1494.45 1212.01 L1495.03 1212.01 L1495.62 1212.01 L1496.2 1212.01 L1496.79 1212.01 L1497.38 1212.01 L1497.96 1212.01 L1498.55 1212.01 L1499.14 1212.01 L1499.72 1212.01 L1500.31 1212.01 L1500.9 1212.01 L1501.48 1212.01 L1502.07 1212.01 L1502.65 1212.01 L1503.24 1212.01 L1503.83 1212.01 L1504.41 1212.01 L1505 1212.01 L1505.59 1212.01 L1506.17 1212.01 L1506.76 1212.01 L1507.35 1212.01 L1507.93 1212.01 L1508.52 1212.01 L1509.11 1212.01 L1509.69 1212.01 L1510.28 1212.01 L1510.86 1212.01 L1511.45 1212.01 L1512.04 1212.01 L1512.62 1212.01 L1513.21 1212.01 L1513.8 1212.01 L1514.38 1212.01 L1514.97 1212.01 L1515.56 1212.01 L1516.14 1212.01 L1516.73 1212.01 L1517.32 1212.01 L1517.9 1212.01 L1518.49 1212.01 L1519.07 1212.01 L1519.66 1212.01 L1520.25 1212.01 L1520.83 1212.01 L1521.42 1212.01 L1522.01 1212.01 L1522.59 1212.01 L1523.18 1212.01 L1523.77 1212.01 L1524.35 1212.01 L1524.94 1212.01 L1525.52 1212.01 L1526.11 1212.01 L1526.7 1212.01 L1527.28 1212.01 L1527.87 1212.01 L1528.46 1212.01 L1529.04 1212.01 L1529.63 1212.01 L1530.22 1212.01 L1530.8 1212.01 L1531.39 1212.01 L1531.98 1212.01 L1532.56 1212.01 L1533.15 1212.01 L1533.73 1212.01 L1534.32 1212.01 L1534.91 1212.01 L1535.49 1212.01 L1536.08 1212.01 L1536.67 1212.01 L1537.25 1212.01 L1537.84 1212.01 L1538.43 1212.01 L1539.01 1212.01 L1539.6 1212.01 L1540.19 1212.01 L1540.77 1212.01 L1541.36 1212.01 L1541.94 1212.01 L1542.53 1212.01 L1543.12 1212.01 L1543.7 1212.01 L1544.29 1212.01 L1544.88 1212.01 L1545.46 1212.01 L1546.05 1212.01 L1546.64 1212.01 L1547.22 1212.01 L1547.81 1212.01 L1548.4 1212.01 L1548.98 1212.01 L1549.57 1212.01 L1550.15 1212.01 L1550.74 1212.01 L1551.33 1212.01 L1551.91 1212.01 L1552.5 1212.01 L1553.09 1212.01 L1553.67 1212.01 L1554.26 1212.01 L1554.85 1212.01 L1555.43 1212.01 L1556.02 1212.01 L1556.6 1212.01 L1557.19 1212.01 L1557.78 1212.01 L1558.36 1212.01 L1558.95 1212.01 L1559.54 1212.01 L1560.12 1212.01 L1560.71 1212.01 L1561.3 1212.01 L1561.88 1212.01 L1562.47 1212.01 L1563.06 1212.01 L1563.64 1212.01 L1564.23 1212.01 L1564.81 1212.01 L1565.4 1212.01 L1565.99 1212.01 L1566.57 1212.01 L1567.16 1212.01 L1567.75 1212.01 L1568.33 1212.01 L1568.92 1212.01 L1569.51 1212.01 L1570.09 1212.01 L1570.68 1212.01 L1571.27 1212.01 L1571.85 1212.01 L1572.44 1212.01 L1573.02 1212.01 L1573.61 1212.01 L1574.2 1212.01 L1574.78 1212.01 L1575.37 1212.01 L1575.96 1212.01 L1576.54 1212.01 L1577.13 1212.01 L1577.72 1212.01 L1578.3 1212.01 L1578.89 1212.01 L1579.47 1212.01 L1580.06 1212.01 L1580.65 1212.01 L1581.23 1212.01 L1581.82 1212.01 L1582.41 1212.01 L1582.99 1212.01 L1583.58 1212.01 L1584.17 1212.01 L1584.75 1212.01 L1585.34 1212.01 L1585.93 1212.01 L1586.51 1212.01 L1587.1 1212.01 L1587.68 1212.01 L1588.27 1212.01 L1588.86 1212.01 L1589.44 1212.01 L1590.03 1212.01 L1590.62 1212.01 L1591.2 1212.01 L1591.79 1212.01 L1592.38 1212.01 L1592.96 1212.01 L1593.55 1212.01 L1594.14 1212.01 L1594.72 1212.01 L1595.31 1212.01 L1595.89 1212.01 L1596.48 1212.01 L1597.07 1212.01 L1597.65 1212.01 L1598.24 1212.01 L1598.83 1212.01 L1599.41 1212.01 L1600 1212.01 L1600.59 1212.01 L1601.17 1212.01 L1601.76 1212.01 L1602.34 1212.01 L1602.93 1212.01 L1603.52 1212.01 L1604.1 1212.01 L1604.69 1212.01 L1605.28 1212.01 L1605.86 1212.01 L1606.45 1212.01 L1607.04 1212.01 L1607.62 1212.01 L1608.21 1212.01 L1608.8 1212.01 L1609.38 1212.01 L1609.97 1212.01 L1610.55 1212.01 L1611.14 1212.01 L1611.73 1212.01 L1612.31 1212.01 L1612.9 1212.01 L1613.49 1212.01 L1614.07 1212.01 L1614.66 1212.01 L1615.25 1212.01 L1615.83 1212.01 L1616.42 1212.01 L1617.01 1212.01 L1617.59 1212.01 L1618.18 1212.01 L1618.76 1212.01 L1619.35 1212.01 L1619.94 1212.01 L1620.52 1212.01 L1621.11 1212.01 L1621.7 1212.01 L1622.28 1212.01 L1622.87 1212.01 L1623.46 1212.01 L1624.04 1212.01 L1624.63 1212.01 L1625.22 1212.01 L1625.8 1212.01 L1626.39 1212.01 L1626.97 1212.01 L1627.56 1212.01 L1628.15 1212.01 L1628.73 1212.01 L1629.32 1212.01 L1629.91 1212.01 L1630.49 1212.01 L1631.08 1212.01 L1631.67 1212.01 L1632.25 1212.01 L1632.84 1212.01 L1633.42 1212.01 L1634.01 1212.01 L1634.6 1212.01 L1635.18 1212.01 L1635.77 1212.01 L1636.36 1212.01 L1636.94 1212.01 L1637.53 1212.01 L1638.12 1212.01 L1638.7 1212.01 L1639.29 1212.01 L1639.88 1212.01 L1640.46 1212.01 L1641.05 1212.01 L1641.63 1212.01 L1642.22 1212.01 L1642.81 1212.01 L1643.39 1212.01 L1643.98 1212.01 L1644.57 1212.01 L1645.15 1212.01 L1645.74 1212.01 L1646.33 1212.01 L1646.91 1212.01 L1647.5 1212.01 L1648.09 1212.01 L1648.67 1212.01 L1649.26 1212.01 L1649.84 1212.01 L1650.43 1212.01 L1651.02 1212.01 L1651.6 1212.01 L1652.19 1212.01 L1652.78 1212.01 L1653.36 1212.01 L1653.95 1212.01 L1654.54 1212.01 L1655.12 1212.01 L1655.71 1212.01 L1656.29 1212.01 L1656.88 1212.01 L1657.47 1212.01 L1658.05 1212.01 L1658.64 1212.01 L1659.23 1212.01 L1659.81 1212.01 L1660.4 1212.01 L1660.99 1212.01 L1661.57 1212.01 L1662.16 1212.01 L1662.75 1212.01 L1663.33 1212.01 L1663.92 1212.01 L1664.5 1212.01 L1665.09 1212.01 L1665.68 1212.01 L1666.26 1212.01 L1666.85 1212.01 L1667.44 1212.01 L1668.02 1212.01 L1668.61 1212.01 L1669.2 1212.01 L1669.78 1212.01 L1670.37 1212.01 L1670.96 1212.01 L1671.54 1212.01 L1672.13 1212.01 L1672.71 1212.01 L1673.3 1212.01 L1673.89 1212.01 L1674.47 1212.01 L1675.06 1212.01 L1675.65 1212.01 L1676.23 1212.01 L1676.82 1212.01 L1677.41 1212.01 L1677.99 1212.01 L1678.58 1212.01 L1679.17 1212.01 L1679.75 1212.01 L1680.34 1212.01 L1680.92 1212.01 L1681.51 1212.01 L1682.1 1212.01 L1682.68 1212.01 L1683.27 1212.01 L1683.86 1212.01 L1684.44 1212.01 L1685.03 1212.01 L1685.62 1212.01 L1686.2 1212.01 L1686.79 1212.01 L1687.37 1212.01 L1687.96 1212.01 L1688.55 1212.01 L1689.13 1212.01 L1689.72 1212.01 L1690.31 1212.01 L1690.89 1212.01 L1691.48 1212.01 L1692.07 1212.01 L1692.65 1212.01 L1693.24 1212.01 L1693.83 1212.01 L1694.41 1212.01 L1695 1212.01 L1695.58 1212.01 L1696.17 1212.01 L1696.76 1212.01 L1697.34 1212.01 L1697.93 1212.01 L1698.52 1212.01 L1699.1 1212.01 L1699.69 1212.01 L1700.28 1212.01 L1700.86 1212.01 L1701.45 1212.01 L1702.04 1212.01 L1702.62 1212.01 L1703.21 1212.01 L1703.79 1212.01 L1704.38 1212.01 L1704.97 1212.01 L1705.55 1212.01 L1706.14 1212.01 L1706.73 1212.01 L1707.31 1212.01 L1707.9 1212.01 L1708.49 1212.01 L1709.07 1212.01 L1709.66 1212.01 L1710.24 1212.01 L1710.83 1212.01 L1711.42 1212.01 L1712 1212.01 L1712.59 1212.01 L1713.18 1212.01 L1713.76 1212.01 L1714.35 1212.01 L1714.94 1212.01 L1715.52 1212.01 L1716.11 1212.01 L1716.7 1212.01 L1717.28 1212.01 L1717.87 1212.01 L1718.45 1212.01 L1719.04 1212.01 L1719.63 1212.01 L1720.21 1212.01 L1720.8 1212.01 L1721.39 1212.01 L1721.97 1212.01 L1722.56 1212.01 L1723.15 1212.01 L1723.73 1212.01 L1724.32 1212.01 L1724.91 1212.01 L1725.49 1212.01 L1726.08 1212.01 L1726.66 1212.01 L1727.25 1212.01 L1727.84 1212.01 L1728.42 1212.01 L1729.01 1212.01 L1729.6 1212.01 L1730.18 1212.01 L1730.77 1212.01 L1731.36 1212.01 L1731.94 1212.01 L1732.53 1212.01 L1733.11 1212.01 L1733.7 1212.01 L1734.29 1212.01 L1734.87 1212.01 L1735.46 1212.01 L1736.05 1212.01 L1736.63 1212.01 L1737.22 1212.01 L1737.81 1212.01 L1738.39 1212.01 L1738.98 1212.01 L1739.57 1212.01 L1740.15 1212.01 L1740.74 1212.01 L1741.32 1212.01 L1741.91 1212.01 L1742.5 1212.01 L1743.08 1212.01 L1743.67 1212.01 L1744.26 1212.01 L1744.84 1212.01 L1745.43 1212.01 L1746.02 1212.01 L1746.6 1212.01 L1747.19 1212.01 L1747.78 1212.01 L1748.36 1212.01 L1748.95 1212.01 L1749.53 1212.01 L1750.12 1212.01 L1750.71 1212.01 L1751.29 1212.01 L1751.88 1212.01 L1752.47 1212.01 L1753.05 1212.01 L1753.64 1212.01 L1754.23 1212.01 L1754.81 1212.01 L1755.4 1212.01 L1755.99 1212.01 L1756.57 1212.01 L1757.16 1212.01 L1757.74 1212.01 L1758.33 1212.01 L1758.92 1212.01 L1759.5 1212.01 L1760.09 1212.01 L1760.68 1212.01 L1761.26 1212.01 L1761.85 1212.01 L1762.44 1212.01 L1763.02 1212.01 L1763.61 1212.01 L1764.19 1212.01 L1764.78 1212.01 L1765.37 1212.01 L1765.95 1212.01 L1766.54 1212.01 L1767.13 1212.01 L1767.71 1212.01 L1768.3 1212.01 L1768.89 1212.01 L1769.47 1212.01 L1770.06 1212.01 L1770.65 1212.01 L1771.23 1212.01 L1771.82 1212.01 L1772.4 1212.01 L1772.99 1212.01 L1773.58 1212.01 L1774.16 1212.01 L1774.75 1212.01 L1775.34 1212.01 L1775.92 1212.01 L1776.51 1212.01 L1777.1 1212.01 L1777.68 1212.01 L1778.27 1212.01 L1778.86 1212.01 L1779.44 1212.01 L1780.03 1212.01 L1780.61 1212.01 L1781.2 1212.01 L1781.79 1212.01 L1782.37 1212.01 L1782.96 1212.01 L1783.55 1212.01 L1784.13 1212.01 L1784.72 1212.01 L1785.31 1212.01 L1785.89 1212.01 L1786.48 1212.01 L1787.06 1212.01 L1787.65 1212.01 L1788.24 1212.01 L1788.82 1212.01 L1789.41 1212.01 L1790 1212.01 L1790.58 1212.01 L1791.17 1212.01 L1791.76 1212.01 L1792.34 1212.01 L1792.93 1212.01 L1793.52 1212.01 L1794.1 1212.01 L1794.69 1212.01 L1795.27 1212.01 L1795.86 1212.01 L1796.45 1212.01 L1797.03 1212.01 L1797.62 1212.01 L1798.21 1212.01 L1798.79 1212.01 L1799.38 1212.01 L1799.97 1212.01 L1800.55 1212.01 L1801.14 1212.01 L1801.73 1212.01 L1802.31 1212.01 L1802.9 1212.01 L1803.48 1212.01 L1804.07 1212.01 L1804.66 1212.01 L1805.24 1212.01 L1805.83 1212.01 L1806.42 1212.01 L1807 1212.01 L1807.59 1212.01 L1808.18 1212.01 L1808.76 1212.01 L1809.35 1212.01 L1809.94 1212.01 L1810.52 1212.01 L1811.11 1212.01 L1811.69 1212.01 L1812.28 1212.01 L1812.87 1212.01 L1813.45 1212.01 L1814.04 1212.01 L1814.63 1212.01 L1815.21 1212.01 L1815.8 1212.01 L1816.39 1212.01 L1816.97 1212.01 L1817.56 1212.01 L1818.14 1212.01 L1818.73 1212.01 L1819.32 1212.01 L1819.9 1212.01 L1820.49 1212.01 L1821.08 1212.01 L1821.66 1212.01 L1822.25 1212.01 L1822.84 1212.01 L1823.42 1212.01 L1824.01 1212.01 L1824.6 1212.01 L1825.18 1212.01 L1825.77 1212.01 L1826.35 1212.01 L1826.94 1212.01 L1827.53 1212.01 L1828.11 1212.01 L1828.7 1212.01 L1829.29 1212.01 L1829.87 1212.01 L1830.46 1212.01 L1831.05 1212.01 L1831.63 1212.01 L1832.22 1212.01 L1832.81 1212.01 L1833.39 1212.01 L1833.98 1212.01 L1834.56 1212.01 L1835.15 1212.01 L1835.74 1212.01 L1836.32 1212.01 L1836.91 1212.01 L1837.5 1212.01 L1838.08 1212.01 L1838.67 1212.01 L1839.26 1212.01 L1839.84 1212.01 L1840.43 1212.01 L1841.01 1212.01 L1841.6 1212.01 L1842.19 1212.01 L1842.77 1212.01 L1843.36 1212.01 L1843.95 1212.01 L1844.53 1212.01 L1845.12 1212.01 L1845.71 1212.01 L1846.29 1212.01 L1846.88 1212.01 L1847.47 1212.01 L1848.05 1212.01 L1848.64 1212.01 L1849.22 1212.01 L1849.81 1212.01 L1850.4 1212.01 L1850.98 1212.01 L1851.57 1212.01 L1852.16 1212.01 L1852.74 1212.01 L1853.33 1212.01 L1853.92 1212.01 L1854.5 1212.01 L1855.09 1212.01 L1855.68 1212.01 L1856.26 1212.01 L1856.85 1212.01 L1857.43 1212.01 L1858.02 1212.01 L1858.61 1212.01 L1859.19 1212.01 L1859.78 1212.01 L1860.37 1212.01 L1860.95 1212.01 L1861.54 1212.01 L1862.13 1212.01 L1862.71 1212.01 L1863.3 1212.01 L1863.88 1212.01 L1864.47 1212.01 L1865.06 1212.01 L1865.64 1212.01 L1866.23 1212.01 L1866.82 1212.01 L1867.4 1212.01 L1867.99 1212.01 L1868.58 1212.01 L1869.16 1212.01 L1869.75 1212.01 L1870.34 1212.01 L1870.92 1212.01 L1871.51 1212.01 L1872.09 1212.01 L1872.68 1212.01 L1873.27 1212.01 L1873.85 1212.01 L1874.44 1212.01 L1875.03 1212.01 L1875.61 1212.01 L1876.2 1212.01 L1876.79 1212.01 L1877.37 1212.01 L1877.96 1212.01 L1878.55 1212.01 L1879.13 1212.01 L1879.72 1212.01 L1880.3 1212.01 L1880.89 1212.01 L1881.48 1212.01 L1882.06 1212.01 L1882.65 1212.01 L1883.24 1212.01 L1883.82 1212.01 L1884.41 1212.01 L1885 1212.01 L1885.58 1212.01 L1886.17 1212.01 L1886.76 1212.01 L1887.34 1212.01 L1887.93 1212.01 L1888.51 1212.01 L1889.1 1212.01 L1889.69 1212.01 L1890.27 1212.01 L1890.86 1212.01 L1891.45 1212.01 L1892.03 1212.01 L1892.62 1212.01 L1893.21 1212.01 L1893.79 1212.01 L1894.38 1212.01 L1894.96 1212.01 L1895.55 1212.01 L1896.14 1212.01 L1896.72 1212.01 L1897.31 1212.01 L1897.9 1212.01 L1898.48 1212.01 L1899.07 1212.01 L1899.66 1212.01 L1900.24 1212.01 L1900.83 1212.01 L1901.42 1212.01 L1902 1212.01 L1902.59 1212.01 L1903.17 1212.01 L1903.76 1212.01 L1904.35 1212.01 L1904.93 1212.01 L1905.52 1212.01 L1906.11 1212.01 L1906.69 1212.01 L1907.28 1212.01 L1907.87 1212.01 L1908.45 1212.01 L1909.04 1212.01 L1909.63 1212.01 L1910.21 1212.01 L1910.8 1212.01 L1911.38 1212.01 L1911.97 1212.01 L1912.56 1212.01 L1913.14 1212.01 L1913.73 1212.01 L1914.32 1212.01 L1914.9 1212.01 L1915.49 1212.01 L1916.08 1212.01 L1916.66 1212.01 L1917.25 1212.01 L1917.83 1212.01 L1918.42 1212.01 L1919.01 1212.01 L1919.59 1212.01 L1920.18 1212.01 L1920.77 1212.01 L1921.35 1212.01 L1921.94 1212.01 L1922.53 1212.01 L1923.11 1212.01 L1923.7 1212.01 L1924.29 1212.01 L1924.87 1212.01 L1925.46 1212.01 L1926.04 1212.01 L1926.63 1212.01 L1927.22 1212.01 L1927.8 1212.01 L1928.39 1212.01 L1928.98 1212.01 L1929.56 1212.01 L1930.15 1212.01 L1930.74 1212.01 L1931.32 1212.01 L1931.91 1212.01 L1932.5 1212.01 L1933.08 1212.01 L1933.67 1212.01 L1934.25 1212.01 L1934.84 1212.01 L1935.43 1212.01 L1936.01 1212.01 L1936.6 1212.01 L1937.19 1212.01 L1937.77 1212.01 L1938.36 1212.01 L1938.95 1212.01 L1939.53 1212.01 L1940.12 1212.01 L1940.71 1212.01 L1941.29 1212.01 L1941.88 1212.01 L1942.46 1212.01 L1943.05 1212.01 L1943.64 1212.01 L1944.22 1212.01 L1944.81 1212.01 L1945.4 1212.01 L1945.98 1212.01 L1946.57 1212.01 L1947.16 1212.01 L1947.74 1212.01 L1948.33 1212.01 L1948.91 1212.01 L1949.5 1212.01 L1950.09 1212.01 L1950.67 1212.01 L1951.26 1212.01 L1951.85 1212.01 L1952.43 1212.01 L1953.02 1212.01 L1953.61 1212.01 L1954.19 1212.01 L1954.78 1212.01 L1955.37 1212.01 L1955.95 1212.01 L1956.54 1212.01 L1957.12 1212.01 L1957.71 1212.01 L1958.3 1212.01 L1958.88 1212.01 L1959.47 1212.01 L1960.06 1212.01 L1960.64 1212.01 L1961.23 1212.01 L1961.82 1212.01 L1962.4 1212.01 L1962.99 1212.01 L1963.58 1212.01 L1964.16 1212.01 L1964.75 1212.01 L1965.33 1212.01 L1965.92 1212.01 L1966.51 1212.01 L1967.09 1212.01 L1967.68 1212.01 L1968.27 1212.01 L1968.85 1212.01 L1969.44 1212.01 L1970.03 1212.01 L1970.61 1212.01 L1971.2 1212.01 L1971.78 1212.01 L1972.37 1212.01 L1972.96 1212.01 L1973.54 1212.01 L1974.13 1212.01 L1974.72 1212.01 L1975.3 1212.01 L1975.89 1212.01 L1976.48 1212.01 L1977.06 1212.01 L1977.65 1212.01 L1978.24 1212.01 L1978.82 1212.01 L1979.41 1212.01 L1979.99 1212.01 L1980.58 1212.01 L1981.17 1212.01 L1981.75 1212.01 L1982.34 1212.01 L1982.93 1212.01 L1983.51 1212.01 L1984.1 1212.01 L1984.69 1212.01 L1985.27 1212.01 L1985.86 1212.01 L1986.45 1212.01 L1987.03 1212.01 L1987.62 1212.01 L1988.2 1212.01 L1988.79 1212.01 L1989.38 1212.01 L1989.96 1212.01 L1990.55 1212.01 L1991.14 1212.01 L1991.72 1212.01 L1992.31 1212.01 L1992.9 1212.01 L1993.48 1212.01 L1994.07 1212.01 L1994.65 1212.01 L1995.24 1212.01 L1995.83 1212.01 L1996.41 1212.01 L1997 1212.01 L1997.59 1212.01 L1998.17 1212.01 L1998.76 1212.01 L1999.35 1212.01 L1999.93 1212.01 L2000.52 1212.01 L2001.11 1212.01 L2001.69 1212.01 L2002.28 1212.01 L2002.86 1212.01 L2003.45 1212.01 L2004.04 1212.01 L2004.62 1212.01 L2005.21 1212.01 L2005.8 1212.01 L2006.38 1212.01 L2006.97 1212.01 L2007.56 1212.01 L2008.14 1212.01 L2008.73 1212.01 L2009.32 1212.01 L2009.9 1212.01 L2010.49 1212.01 L2011.07 1212.01 L2011.66 1212.01 L2012.25 1212.01 L2012.83 1212.01 L2013.42 1212.01 L2014.01 1212.01 L2014.59 1212.01 L2015.18 1212.01 L2015.77 1212.01 L2016.35 1212.01 L2016.94 1212.01 L2017.53 1212.01 L2018.11 1212.01 L2018.7 1212.01 L2019.28 1212.01 L2019.87 1212.01 L2020.46 1212.01 L2021.04 1212.01 L2021.63 1212.01 L2022.22 1212.01 L2022.8 1212.01 L2023.39 1212.01 L2023.98 1212.01 L2024.56 1212.01 L2025.15 1212.01 L2025.73 1212.01 L2026.32 1212.01 L2026.91 1212.01 L2027.49 1212.01 L2028.08 1212.01 L2028.67 1212.01 L2029.25 1212.01 L2029.84 1212.01 L2030.43 1212.01 L2031.01 1212.01 L2031.6 1212.01 L2032.19 1212.01 L2032.77 1212.01 L2033.36 1212.01 L2033.94 1212.01 L2034.53 1212.01 L2035.12 1212.01 L2035.7 1212.01 L2036.29 1212.01 L2036.88 1212.01 L2037.46 1212.01 L2038.05 1212.01 L2038.64 1212.01 L2039.22 1212.01 L2039.81 1212.01 L2040.4 1212.01 L2040.98 1212.01 L2041.57 1212.01 L2042.15 1212.01 L2042.74 1212.01 L2043.33 1212.01 L2043.91 1212.01 L2044.5 1212.01 L2045.09 1212.01 L2045.67 1212.01 L2046.26 1212.01 L2046.85 1212.01 L2047.43 1212.01 L2048.02 1212.01 L2048.6 1212.01 L2049.19 1212.01 L2049.78 1212.01 L2050.36 1212.01 L2050.95 1212.01 L2051.54 1212.01 L2052.12 1212.01 L2052.71 1212.01 L2053.3 1212.01 L2053.88 1212.01 L2054.47 1212.01 L2055.06 1212.01 L2055.64 1212.01 L2056.23 1212.01 L2056.81 1212.01 L2057.4 1212.01 L2057.99 1212.01 L2058.57 1212.01 L2059.16 1212.01 L2059.75 1212.01 L2060.33 1212.01 L2060.92 1212.01 L2061.51 1212.01 L2062.09 1212.01 L2062.68 1212.01 L2063.27 1212.01 L2063.85 1212.01 L2064.44 1212.01 L2065.02 1212.01 L2065.61 1212.01 L2066.2 1212.01 L2066.78 1212.01 L2067.37 1212.01 L2067.96 1212.01 L2068.54 1212.01 L2069.13 1212.01 L2069.72 1212.01 L2070.3 1212.01 L2070.89 1212.01 L2071.48 1212.01 L2072.06 1212.01 L2072.65 1212.01 L2073.23 1212.01 L2073.82 1212.01 L2074.41 1212.01 L2074.99 1212.01 L2075.58 1212.01 L2076.17 1212.01 L2076.75 1212.01 L2077.34 1212.01 L2077.93 1212.01 L2078.51 1212.01 L2079.1 1212.01 L2079.68 1212.01 L2080.27 1212.01 L2080.86 1212.01 L2081.44 1212.01 L2082.03 1212.01 L2082.62 1212.01 L2083.2 1212.01 L2083.79 1212.01 L2084.38 1212.01 L2084.96 1212.01 L2085.55 1212.01 L2086.14 1212.01 L2086.72 1212.01 L2087.31 1212.01 L2087.89 1212.01 L2088.48 1212.01 L2089.07 1212.01 L2089.65 1212.01 L2090.24 1212.01 L2090.83 1212.01 L2091.41 1212.01 L2092 1212.01 L2092.59 1212.01 L2093.17 1212.01 L2093.76 1212.01 L2094.35 1212.01 L2094.93 1212.01 L2095.52 1212.01 L2096.1 1212.01 L2096.69 1212.01 L2097.28 1212.01 L2097.86 1212.01 L2098.45 1212.01 L2099.04 1212.01 L2099.62 1212.01 L2100.21 1212.01 L2100.8 1212.01 L2101.38 1212.01 L2101.97 1212.01 L2102.55 1212.01 L2103.14 1212.01 L2103.73 1212.01 L2104.31 1212.01 L2104.9 1212.01 L2105.49 1212.01 L2106.07 1212.01 L2106.66 1212.01 L2107.25 1212.01 L2107.83 1212.01 L2108.42 1212.01 L2109.01 1212.01 L2109.59 1212.01 L2110.18 1212.01 L2110.76 1212.01 L2111.35 1212.01 L2111.94 1212.01 L2112.52 1212.01 L2113.11 1212.01 L2113.7 1212.01 L2114.28 1212.01 L2114.87 1212.01 L2115.46 1212.01 L2116.04 1212.01 L2116.63 1212.01 L2117.22 1212.01 L2117.8 1212.01 L2118.39 1212.01 L2118.97 1212.01 L2119.56 1212.01 L2120.15 1212.01 L2120.73 1212.01 L2121.32 1212.01 L2121.91 1212.01 L2122.49 1212.01 L2123.08 1212.01 L2123.67 1212.01 L2124.25 1212.01 L2124.84 1212.01 L2125.42 1212.01 L2126.01 1212.01 L2126.6 1212.01 L2127.18 1212.01 L2127.77 1212.01 L2128.36 1212.01 L2128.94 1212.01 L2129.53 1212.01 L2130.12 1212.01 L2130.7 1212.01 L2131.29 1212.01 L2131.88 1212.01 L2132.46 1212.01 L2133.05 1212.01 L2133.63 1212.01 L2134.22 1212.01 L2134.81 1212.01 L2135.39 1212.01 L2135.98 1212.01 L2136.57 1212.01 L2137.15 1212.01 L2137.74 1212.01 L2138.33 1212.01 L2138.91 1212.01 L2139.5 1212.01 L2140.09 1212.01 L2140.67 1212.01 L2141.26 1212.01 L2141.84 1212.01 L2142.43 1212.01 L2143.02 1212.01 L2143.6 1212.01 L2144.19 1212.01 L2144.78 1212.01 L2145.36 1212.01 L2145.95 1212.01 L2146.54 1212.01 L2147.12 1212.01 L2147.71 1212.01 L2148.3 1212.01 L2148.88 1212.01 L2149.47 1212.01 L2150.05 1212.01 L2150.64 1212.01 L2151.23 1212.01 L2151.81 1212.01 L2152.4 1212.01 L2152.99 1212.01 L2153.57 1212.01 L2154.16 1212.01 L2154.75 1212.01 L2155.33 1212.01 L2155.92 1212.01 L2156.5 1212.01 L2157.09 1212.01 L2157.68 1212.01 L2158.26 1212.01 L2158.26 1211.26 L2157.68 1211.26 L2157.09 1211.26 L2156.5 1211.26 L2155.92 1211.26 L2155.33 1211.26 L2154.75 1211.26 L2154.16 1211.26 L2153.57 1211.26 L2152.99 1211.26 L2152.4 1211.26 L2151.81 1211.26 L2151.23 1211.26 L2150.64 1211.26 L2150.05 1211.26 L2149.47 1211.26 L2148.88 1211.26 L2148.3 1211.26 L2147.71 1211.26 L2147.12 1211.26 L2146.54 1211.26 L2145.95 1211.26 L2145.36 1211.26 L2144.78 1211.26 L2144.19 1211.26 L2143.6 1211.26 L2143.02 1211.26 L2142.43 1211.26 L2141.84 1211.26 L2141.26 1211.26 L2140.67 1211.26 L2140.09 1211.26 L2139.5 1211.26 L2138.91 1211.26 L2138.33 1211.26 L2137.74 1211.26 L2137.15 1211.26 L2136.57 1211.26 L2135.98 1211.26 L2135.39 1211.26 L2134.81 1211.26 L2134.22 1211.26 L2133.63 1211.26 L2133.05 1211.26 L2132.46 1211.26 L2131.88 1211.26 L2131.29 1211.26 L2130.7 1211.26 L2130.12 1211.26 L2129.53 1211.26 L2128.94 1211.26 L2128.36 1211.26 L2127.77 1211.26 L2127.18 1211.26 L2126.6 1211.26 L2126.01 1211.26 L2125.42 1211.26 L2124.84 1211.26 L2124.25 1211.26 L2123.67 1211.26 L2123.08 1211.26 L2122.49 1211.26 L2121.91 1211.26 L2121.32 1211.26 L2120.73 1211.26 L2120.15 1211.26 L2119.56 1211.26 L2118.97 1211.26 L2118.39 1211.26 L2117.8 1211.26 L2117.22 1211.26 L2116.63 1211.26 L2116.04 1211.26 L2115.46 1211.26 L2114.87 1211.26 L2114.28 1211.26 L2113.7 1211.26 L2113.11 1211.26 L2112.52 1211.26 L2111.94 1211.26 L2111.35 1211.26 L2110.76 1211.26 L2110.18 1211.26 L2109.59 1211.26 L2109.01 1211.26 L2108.42 1211.26 L2107.83 1211.26 L2107.25 1211.26 L2106.66 1211.26 L2106.07 1211.26 L2105.49 1211.26 L2104.9 1211.26 L2104.31 1211.26 L2103.73 1211.26 L2103.14 1211.26 L2102.55 1211.26 L2101.97 1211.26 L2101.38 1211.26 L2100.8 1211.26 L2100.21 1211.26 L2099.62 1211.26 L2099.04 1211.26 L2098.45 1211.26 L2097.86 1211.26 L2097.28 1211.26 L2096.69 1211.26 L2096.1 1211.26 L2095.52 1211.26 L2094.93 1211.26 L2094.35 1211.26 L2093.76 1211.26 L2093.17 1211.26 L2092.59 1211.26 L2092 1211.26 L2091.41 1211.26 L2090.83 1211.26 L2090.24 1211.26 L2089.65 1211.26 L2089.07 1211.26 L2088.48 1211.26 L2087.89 1211.26 L2087.31 1211.26 L2086.72 1211.26 L2086.14 1211.26 L2085.55 1211.26 L2084.96 1211.26 L2084.38 1211.26 L2083.79 1211.26 L2083.2 1211.26 L2082.62 1211.26 L2082.03 1211.26 L2081.44 1211.26 L2080.86 1211.26 L2080.27 1211.26 L2079.68 1211.26 L2079.1 1211.26 L2078.51 1211.26 L2077.93 1211.26 L2077.34 1211.26 L2076.75 1211.26 L2076.17 1211.26 L2075.58 1211.26 L2074.99 1211.26 L2074.41 1211.26 L2073.82 1211.26 L2073.23 1211.26 L2072.65 1211.26 L2072.06 1211.26 L2071.48 1211.26 L2070.89 1211.26 L2070.3 1211.26 L2069.72 1211.26 L2069.13 1211.26 L2068.54 1211.26 L2067.96 1211.26 L2067.37 1211.26 L2066.78 1211.26 L2066.2 1211.26 L2065.61 1211.26 L2065.02 1211.26 L2064.44 1211.26 L2063.85 1211.26 L2063.27 1211.26 L2062.68 1211.26 L2062.09 1211.26 L2061.51 1211.26 L2060.92 1211.26 L2060.33 1211.26 L2059.75 1211.26 L2059.16 1211.26 L2058.57 1211.26 L2057.99 1211.26 L2057.4 1211.26 L2056.81 1211.26 L2056.23 1211.26 L2055.64 1211.26 L2055.06 1211.26 L2054.47 1211.26 L2053.88 1211.26 L2053.3 1211.26 L2052.71 1211.26 L2052.12 1211.26 L2051.54 1211.26 L2050.95 1211.26 L2050.36 1211.26 L2049.78 1211.26 L2049.19 1211.26 L2048.6 1211.26 L2048.02 1211.26 L2047.43 1211.26 L2046.85 1211.26 L2046.26 1211.26 L2045.67 1211.26 L2045.09 1211.26 L2044.5 1211.26 L2043.91 1211.26 L2043.33 1211.26 L2042.74 1211.26 L2042.15 1211.26 L2041.57 1211.26 L2040.98 1211.26 L2040.4 1211.26 L2039.81 1211.26 L2039.22 1211.26 L2038.64 1211.26 L2038.05 1211.26 L2037.46 1211.26 L2036.88 1211.26 L2036.29 1211.26 L2035.7 1211.26 L2035.12 1211.26 L2034.53 1211.26 L2033.94 1211.26 L2033.36 1211.26 L2032.77 1211.26 L2032.19 1211.26 L2031.6 1211.26 L2031.01 1211.26 L2030.43 1211.26 L2029.84 1211.26 L2029.25 1211.26 L2028.67 1211.26 L2028.08 1211.26 L2027.49 1211.26 L2026.91 1211.26 L2026.32 1211.26 L2025.73 1211.26 L2025.15 1211.26 L2024.56 1211.26 L2023.98 1211.26 L2023.39 1211.26 L2022.8 1211.26 L2022.22 1211.26 L2021.63 1211.26 L2021.04 1211.26 L2020.46 1211.26 L2019.87 1211.26 L2019.28 1211.26 L2018.7 1211.26 L2018.11 1211.26 L2017.53 1211.26 L2016.94 1211.26 L2016.35 1211.26 L2015.77 1211.26 L2015.18 1211.26 L2014.59 1211.26 L2014.01 1211.26 L2013.42 1211.26 L2012.83 1211.26 L2012.25 1211.26 L2011.66 1211.26 L2011.07 1211.26 L2010.49 1211.26 L2009.9 1211.26 L2009.32 1211.26 L2008.73 1211.26 L2008.14 1211.26 L2007.56 1211.26 L2006.97 1211.26 L2006.38 1211.26 L2005.8 1211.26 L2005.21 1211.26 L2004.62 1211.26 L2004.04 1211.26 L2003.45 1211.26 L2002.86 1211.26 L2002.28 1211.26 L2001.69 1211.26 L2001.11 1211.26 L2000.52 1211.26 L1999.93 1211.26 L1999.35 1211.26 L1998.76 1211.26 L1998.17 1211.26 L1997.59 1211.26 L1997 1211.26 L1996.41 1211.26 L1995.83 1211.26 L1995.24 1211.26 L1994.65 1211.26 L1994.07 1211.26 L1993.48 1211.26 L1992.9 1211.26 L1992.31 1211.26 L1991.72 1211.26 L1991.14 1211.26 L1990.55 1211.26 L1989.96 1211.26 L1989.38 1211.26 L1988.79 1211.26 L1988.2 1211.26 L1987.62 1211.26 L1987.03 1211.26 L1986.45 1211.26 L1985.86 1211.26 L1985.27 1211.26 L1984.69 1211.26 L1984.1 1211.26 L1983.51 1211.26 L1982.93 1211.26 L1982.34 1211.26 L1981.75 1211.26 L1981.17 1211.26 L1980.58 1211.26 L1979.99 1211.26 L1979.41 1211.26 L1978.82 1211.26 L1978.24 1211.26 L1977.65 1211.26 L1977.06 1211.26 L1976.48 1211.26 L1975.89 1211.26 L1975.3 1211.26 L1974.72 1211.26 L1974.13 1211.26 L1973.54 1211.26 L1972.96 1211.26 L1972.37 1211.26 L1971.78 1211.26 L1971.2 1211.26 L1970.61 1211.26 L1970.03 1211.26 L1969.44 1211.26 L1968.85 1211.26 L1968.27 1211.26 L1967.68 1211.26 L1967.09 1211.26 L1966.51 1211.26 L1965.92 1211.26 L1965.33 1211.26 L1964.75 1211.26 L1964.16 1211.26 L1963.58 1211.26 L1962.99 1211.26 L1962.4 1211.26 L1961.82 1211.26 L1961.23 1211.26 L1960.64 1211.26 L1960.06 1211.26 L1959.47 1211.26 L1958.88 1211.26 L1958.3 1211.26 L1957.71 1211.26 L1957.12 1211.26 L1956.54 1211.26 L1955.95 1211.26 L1955.37 1211.26 L1954.78 1211.26 L1954.19 1211.26 L1953.61 1211.26 L1953.02 1211.26 L1952.43 1211.26 L1951.85 1211.26 L1951.26 1211.26 L1950.67 1211.26 L1950.09 1211.26 L1949.5 1211.26 L1948.91 1211.26 L1948.33 1211.26 L1947.74 1211.26 L1947.16 1211.26 L1946.57 1211.26 L1945.98 1211.26 L1945.4 1211.26 L1944.81 1211.26 L1944.22 1211.26 L1943.64 1211.26 L1943.05 1211.26 L1942.46 1211.26 L1941.88 1211.26 L1941.29 1211.26 L1940.71 1211.26 L1940.12 1211.26 L1939.53 1211.26 L1938.95 1211.26 L1938.36 1211.26 L1937.77 1211.26 L1937.19 1211.26 L1936.6 1211.26 L1936.01 1211.26 L1935.43 1211.26 L1934.84 1211.26 L1934.25 1211.26 L1933.67 1211.26 L1933.08 1211.26 L1932.5 1211.26 L1931.91 1211.26 L1931.32 1211.26 L1930.74 1211.26 L1930.15 1211.26 L1929.56 1211.26 L1928.98 1211.26 L1928.39 1211.26 L1927.8 1211.26 L1927.22 1211.26 L1926.63 1211.26 L1926.04 1211.26 L1925.46 1211.26 L1924.87 1211.26 L1924.29 1211.26 L1923.7 1211.26 L1923.11 1211.26 L1922.53 1211.26 L1921.94 1211.26 L1921.35 1211.26 L1920.77 1211.26 L1920.18 1211.26 L1919.59 1211.26 L1919.01 1211.26 L1918.42 1211.26 L1917.83 1211.26 L1917.25 1211.26 L1916.66 1211.26 L1916.08 1211.26 L1915.49 1211.26 L1914.9 1211.26 L1914.32 1211.26 L1913.73 1211.26 L1913.14 1211.26 L1912.56 1211.26 L1911.97 1211.26 L1911.38 1211.26 L1910.8 1211.26 L1910.21 1211.26 L1909.63 1211.26 L1909.04 1211.26 L1908.45 1211.26 L1907.87 1211.26 L1907.28 1211.26 L1906.69 1211.26 L1906.11 1211.26 L1905.52 1211.26 L1904.93 1211.26 L1904.35 1211.26 L1903.76 1211.26 L1903.17 1211.26 L1902.59 1211.26 L1902 1211.26 L1901.42 1211.26 L1900.83 1211.26 L1900.24 1211.26 L1899.66 1211.26 L1899.07 1211.26 L1898.48 1211.26 L1897.9 1211.26 L1897.31 1211.26 L1896.72 1211.26 L1896.14 1211.26 L1895.55 1211.26 L1894.96 1211.26 L1894.38 1211.26 L1893.79 1211.26 L1893.21 1211.26 L1892.62 1211.26 L1892.03 1211.26 L1891.45 1211.26 L1890.86 1211.26 L1890.27 1211.26 L1889.69 1211.26 L1889.1 1211.26 L1888.51 1211.26 L1887.93 1211.26 L1887.34 1211.26 L1886.76 1211.26 L1886.17 1211.26 L1885.58 1211.26 L1885 1211.26 L1884.41 1211.26 L1883.82 1211.26 L1883.24 1211.26 L1882.65 1211.26 L1882.06 1211.26 L1881.48 1211.26 L1880.89 1211.26 L1880.3 1211.26 L1879.72 1211.26 L1879.13 1211.26 L1878.55 1211.26 L1877.96 1211.26 L1877.37 1211.26 L1876.79 1211.26 L1876.2 1211.26 L1875.61 1211.26 L1875.03 1211.26 L1874.44 1211.26 L1873.85 1211.26 L1873.27 1211.26 L1872.68 1211.26 L1872.09 1211.26 L1871.51 1211.26 L1870.92 1211.26 L1870.34 1211.26 L1869.75 1211.26 L1869.16 1211.26 L1868.58 1211.26 L1867.99 1211.26 L1867.4 1211.26 L1866.82 1211.26 L1866.23 1211.26 L1865.64 1211.26 L1865.06 1211.26 L1864.47 1211.26 L1863.88 1211.26 L1863.3 1211.26 L1862.71 1211.26 L1862.13 1211.26 L1861.54 1211.26 L1860.95 1211.26 L1860.37 1211.26 L1859.78 1211.26 L1859.19 1211.26 L1858.61 1211.26 L1858.02 1211.26 L1857.43 1211.26 L1856.85 1211.26 L1856.26 1211.26 L1855.68 1211.26 L1855.09 1211.26 L1854.5 1211.26 L1853.92 1211.26 L1853.33 1211.26 L1852.74 1211.26 L1852.16 1211.26 L1851.57 1211.26 L1850.98 1211.26 L1850.4 1211.26 L1849.81 1211.26 L1849.22 1211.26 L1848.64 1211.26 L1848.05 1211.26 L1847.47 1211.26 L1846.88 1211.26 L1846.29 1211.26 L1845.71 1211.26 L1845.12 1211.26 L1844.53 1211.26 L1843.95 1211.26 L1843.36 1211.26 L1842.77 1211.26 L1842.19 1211.26 L1841.6 1211.26 L1841.01 1211.26 L1840.43 1211.26 L1839.84 1211.26 L1839.26 1211.26 L1838.67 1211.26 L1838.08 1211.26 L1837.5 1211.26 L1836.91 1211.26 L1836.32 1211.26 L1835.74 1211.26 L1835.15 1211.26 L1834.56 1211.26 L1833.98 1211.26 L1833.39 1211.26 L1832.81 1211.26 L1832.22 1211.26 L1831.63 1211.26 L1831.05 1211.26 L1830.46 1211.26 L1829.87 1211.26 L1829.29 1211.26 L1828.7 1211.26 L1828.11 1211.26 L1827.53 1211.26 L1826.94 1211.26 L1826.35 1211.26 L1825.77 1211.26 L1825.18 1211.26 L1824.6 1211.26 L1824.01 1211.26 L1823.42 1211.26 L1822.84 1211.26 L1822.25 1211.26 L1821.66 1211.26 L1821.08 1211.26 L1820.49 1211.26 L1819.9 1211.26 L1819.32 1211.26 L1818.73 1211.26 L1818.14 1211.26 L1817.56 1211.26 L1816.97 1211.26 L1816.39 1211.26 L1815.8 1211.26 L1815.21 1211.26 L1814.63 1211.26 L1814.04 1211.26 L1813.45 1211.26 L1812.87 1211.26 L1812.28 1211.26 L1811.69 1211.26 L1811.11 1211.26 L1810.52 1211.26 L1809.94 1211.26 L1809.35 1211.26 L1808.76 1211.26 L1808.18 1211.26 L1807.59 1211.26 L1807 1211.26 L1806.42 1211.26 L1805.83 1211.26 L1805.24 1211.26 L1804.66 1211.26 L1804.07 1211.26 L1803.48 1211.26 L1802.9 1211.26 L1802.31 1211.26 L1801.73 1211.26 L1801.14 1211.26 L1800.55 1211.26 L1799.97 1211.26 L1799.38 1211.26 L1798.79 1211.26 L1798.21 1211.26 L1797.62 1211.26 L1797.03 1211.26 L1796.45 1211.26 L1795.86 1211.26 L1795.27 1211.26 L1794.69 1211.26 L1794.1 1211.26 L1793.52 1211.26 L1792.93 1211.26 L1792.34 1211.26 L1791.76 1211.26 L1791.17 1211.26 L1790.58 1211.26 L1790 1211.26 L1789.41 1211.26 L1788.82 1211.26 L1788.24 1211.26 L1787.65 1211.26 L1787.06 1211.26 L1786.48 1211.26 L1785.89 1211.26 L1785.31 1211.26 L1784.72 1211.26 L1784.13 1211.26 L1783.55 1211.26 L1782.96 1211.26 L1782.37 1211.26 L1781.79 1211.26 L1781.2 1211.26 L1780.61 1211.26 L1780.03 1211.26 L1779.44 1211.26 L1778.86 1211.26 L1778.27 1211.26 L1777.68 1211.26 L1777.1 1211.26 L1776.51 1211.26 L1775.92 1211.26 L1775.34 1211.26 L1774.75 1211.26 L1774.16 1211.26 L1773.58 1211.26 L1772.99 1211.26 L1772.4 1211.26 L1771.82 1211.26 L1771.23 1211.26 L1770.65 1211.26 L1770.06 1211.26 L1769.47 1211.26 L1768.89 1211.26 L1768.3 1211.26 L1767.71 1211.26 L1767.13 1211.26 L1766.54 1211.26 L1765.95 1211.26 L1765.37 1211.26 L1764.78 1211.26 L1764.19 1211.26 L1763.61 1211.26 L1763.02 1211.26 L1762.44 1211.26 L1761.85 1211.26 L1761.26 1211.26 L1760.68 1211.26 L1760.09 1211.26 L1759.5 1211.26 L1758.92 1211.26 L1758.33 1211.26 L1757.74 1211.26 L1757.16 1211.26 L1756.57 1211.26 L1755.99 1211.26 L1755.4 1211.26 L1754.81 1211.26 L1754.23 1211.26 L1753.64 1211.26 L1753.05 1211.26 L1752.47 1211.26 L1751.88 1211.26 L1751.29 1211.26 L1750.71 1211.26 L1750.12 1211.26 L1749.53 1211.26 L1748.95 1211.26 L1748.36 1211.26 L1747.78 1211.26 L1747.19 1211.26 L1746.6 1211.26 L1746.02 1211.26 L1745.43 1211.26 L1744.84 1211.26 L1744.26 1211.26 L1743.67 1211.26 L1743.08 1211.26 L1742.5 1211.26 L1741.91 1211.26 L1741.32 1211.26 L1740.74 1211.26 L1740.15 1211.26 L1739.57 1211.26 L1738.98 1211.26 L1738.39 1211.26 L1737.81 1211.26 L1737.22 1211.26 L1736.63 1211.26 L1736.05 1211.26 L1735.46 1211.26 L1734.87 1211.26 L1734.29 1211.26 L1733.7 1211.26 L1733.11 1211.26 L1732.53 1211.26 L1731.94 1211.26 L1731.36 1211.26 L1730.77 1211.26 L1730.18 1211.26 L1729.6 1211.26 L1729.01 1211.26 L1728.42 1211.26 L1727.84 1211.26 L1727.25 1211.26 L1726.66 1211.26 L1726.08 1211.26 L1725.49 1211.26 L1724.91 1211.26 L1724.32 1211.26 L1723.73 1211.26 L1723.15 1211.26 L1722.56 1211.26 L1721.97 1211.26 L1721.39 1211.26 L1720.8 1211.26 L1720.21 1211.26 L1719.63 1211.26 L1719.04 1211.26 L1718.45 1211.26 L1717.87 1211.26 L1717.28 1211.26 L1716.7 1211.26 L1716.11 1211.26 L1715.52 1211.26 L1714.94 1211.26 L1714.35 1211.26 L1713.76 1211.26 L1713.18 1211.26 L1712.59 1211.26 L1712 1211.26 L1711.42 1211.26 L1710.83 1211.26 L1710.24 1211.26 L1709.66 1211.26 L1709.07 1211.26 L1708.49 1211.26 L1707.9 1211.26 L1707.31 1211.26 L1706.73 1211.26 L1706.14 1211.26 L1705.55 1211.26 L1704.97 1211.26 L1704.38 1211.26 L1703.79 1211.26 L1703.21 1211.26 L1702.62 1211.26 L1702.04 1211.26 L1701.45 1211.26 L1700.86 1211.26 L1700.28 1211.26 L1699.69 1211.26 L1699.1 1211.26 L1698.52 1211.26 L1697.93 1211.26 L1697.34 1211.26 L1696.76 1211.26 L1696.17 1211.26 L1695.58 1211.26 L1695 1211.26 L1694.41 1211.26 L1693.83 1211.26 L1693.24 1211.26 L1692.65 1211.26 L1692.07 1211.26 L1691.48 1211.26 L1690.89 1211.26 L1690.31 1211.26 L1689.72 1211.26 L1689.13 1211.26 L1688.55 1211.26 L1687.96 1211.26 L1687.37 1211.26 L1686.79 1211.26 L1686.2 1211.26 L1685.62 1211.26 L1685.03 1211.26 L1684.44 1211.26 L1683.86 1211.26 L1683.27 1211.26 L1682.68 1211.26 L1682.1 1211.26 L1681.51 1211.26 L1680.92 1211.26 L1680.34 1211.26 L1679.75 1211.26 L1679.17 1211.26 L1678.58 1211.26 L1677.99 1211.26 L1677.41 1211.26 L1676.82 1211.26 L1676.23 1211.26 L1675.65 1211.26 L1675.06 1211.26 L1674.47 1211.26 L1673.89 1211.26 L1673.3 1211.26 L1672.71 1211.26 L1672.13 1211.26 L1671.54 1211.26 L1670.96 1211.26 L1670.37 1211.26 L1669.78 1211.26 L1669.2 1211.26 L1668.61 1211.26 L1668.02 1211.26 L1667.44 1211.26 L1666.85 1211.26 L1666.26 1211.26 L1665.68 1211.26 L1665.09 1211.26 L1664.5 1211.26 L1663.92 1211.26 L1663.33 1211.26 L1662.75 1211.26 L1662.16 1211.26 L1661.57 1211.26 L1660.99 1211.26 L1660.4 1211.26 L1659.81 1211.26 L1659.23 1211.26 L1658.64 1211.26 L1658.05 1211.26 L1657.47 1211.26 L1656.88 1211.26 L1656.29 1211.26 L1655.71 1211.26 L1655.12 1211.26 L1654.54 1211.26 L1653.95 1211.26 L1653.36 1211.26 L1652.78 1211.26 L1652.19 1211.26 L1651.6 1211.26 L1651.02 1211.26 L1650.43 1211.26 L1649.84 1211.26 L1649.26 1211.26 L1648.67 1211.26 L1648.09 1211.26 L1647.5 1211.26 L1646.91 1211.26 L1646.33 1211.26 L1645.74 1211.26 L1645.15 1211.26 L1644.57 1211.26 L1643.98 1211.26 L1643.39 1211.26 L1642.81 1211.26 L1642.22 1211.26 L1641.63 1211.26 L1641.05 1211.26 L1640.46 1211.26 L1639.88 1211.26 L1639.29 1211.26 L1638.7 1211.26 L1638.12 1211.26 L1637.53 1211.26 L1636.94 1211.26 L1636.36 1211.26 L1635.77 1211.26 L1635.18 1211.26 L1634.6 1211.26 L1634.01 1211.26 L1633.42 1211.26 L1632.84 1211.26 L1632.25 1211.26 L1631.67 1211.26 L1631.08 1211.26 L1630.49 1211.26 L1629.91 1211.26 L1629.32 1211.26 L1628.73 1211.26 L1628.15 1211.26 L1627.56 1211.26 L1626.97 1211.26 L1626.39 1211.26 L1625.8 1211.26 L1625.22 1211.26 L1624.63 1211.26 L1624.04 1211.26 L1623.46 1211.26 L1622.87 1211.26 L1622.28 1211.26 L1621.7 1211.26 L1621.11 1211.26 L1620.52 1211.26 L1619.94 1211.26 L1619.35 1211.26 L1618.76 1211.26 L1618.18 1211.26 L1617.59 1211.26 L1617.01 1211.26 L1616.42 1211.26 L1615.83 1211.26 L1615.25 1211.26 L1614.66 1211.26 L1614.07 1211.26 L1613.49 1211.26 L1612.9 1211.26 L1612.31 1211.26 L1611.73 1211.26 L1611.14 1211.26 L1610.55 1211.26 L1609.97 1211.26 L1609.38 1211.26 L1608.8 1211.26 L1608.21 1211.26 L1607.62 1211.26 L1607.04 1211.26 L1606.45 1211.26 L1605.86 1211.26 L1605.28 1211.26 L1604.69 1211.26 L1604.1 1211.26 L1603.52 1211.26 L1602.93 1211.26 L1602.34 1211.26 L1601.76 1211.26 L1601.17 1211.26 L1600.59 1211.26 L1600 1211.26 L1599.41 1211.26 L1598.83 1211.26 L1598.24 1211.26 L1597.65 1211.26 L1597.07 1211.26 L1596.48 1211.26 L1595.89 1211.26 L1595.31 1211.26 L1594.72 1211.26 L1594.14 1211.26 L1593.55 1211.26 L1592.96 1211.26 L1592.38 1211.26 L1591.79 1211.26 L1591.2 1211.26 L1590.62 1211.26 L1590.03 1211.26 L1589.44 1211.26 L1588.86 1211.26 L1588.27 1211.26 L1587.68 1211.26 L1587.1 1211.26 L1586.51 1211.26 L1585.93 1211.26 L1585.34 1211.26 L1584.75 1211.26 L1584.17 1211.26 L1583.58 1211.26 L1582.99 1211.26 L1582.41 1211.26 L1581.82 1211.26 L1581.23 1211.26 L1580.65 1211.26 L1580.06 1211.26 L1579.47 1211.26 L1578.89 1211.26 L1578.3 1211.26 L1577.72 1211.26 L1577.13 1211.26 L1576.54 1211.26 L1575.96 1211.26 L1575.37 1211.26 L1574.78 1211.26 L1574.2 1211.26 L1573.61 1211.26 L1573.02 1211.26 L1572.44 1211.26 L1571.85 1211.26 L1571.27 1211.26 L1570.68 1211.26 L1570.09 1211.26 L1569.51 1211.26 L1568.92 1211.26 L1568.33 1211.26 L1567.75 1211.26 L1567.16 1211.26 L1566.57 1211.26 L1565.99 1211.26 L1565.4 1211.26 L1564.81 1211.26 L1564.23 1211.26 L1563.64 1211.26 L1563.06 1211.26 L1562.47 1211.26 L1561.88 1211.26 L1561.3 1211.26 L1560.71 1211.26 L1560.12 1211.26 L1559.54 1211.26 L1558.95 1211.26 L1558.36 1211.26 L1557.78 1211.26 L1557.19 1211.26 L1556.6 1211.26 L1556.02 1211.26 L1555.43 1211.26 L1554.85 1211.26 L1554.26 1211.26 L1553.67 1211.26 L1553.09 1211.26 L1552.5 1211.26 L1551.91 1211.26 L1551.33 1211.26 L1550.74 1211.26 L1550.15 1211.26 L1549.57 1211.26 L1548.98 1211.26 L1548.4 1211.26 L1547.81 1211.26 L1547.22 1211.26 L1546.64 1211.26 L1546.05 1211.26 L1545.46 1211.26 L1544.88 1211.26 L1544.29 1211.26 L1543.7 1211.26 L1543.12 1211.26 L1542.53 1211.26 L1541.94 1211.26 L1541.36 1211.26 L1540.77 1211.26 L1540.19 1211.26 L1539.6 1211.26 L1539.01 1211.26 L1538.43 1211.26 L1537.84 1211.26 L1537.25 1211.26 L1536.67 1211.26 L1536.08 1211.26 L1535.49 1211.26 L1534.91 1211.26 L1534.32 1211.26 L1533.73 1211.26 L1533.15 1211.26 L1532.56 1211.26 L1531.98 1211.26 L1531.39 1211.26 L1530.8 1211.26 L1530.22 1211.26 L1529.63 1211.26 L1529.04 1211.26 L1528.46 1211.26 L1527.87 1211.26 L1527.28 1211.26 L1526.7 1211.26 L1526.11 1211.26 L1525.52 1211.26 L1524.94 1211.26 L1524.35 1211.26 L1523.77 1211.26 L1523.18 1211.26 L1522.59 1211.26 L1522.01 1211.26 L1521.42 1211.26 L1520.83 1211.26 L1520.25 1211.26 L1519.66 1211.26 L1519.07 1211.26 L1518.49 1211.26 L1517.9 1211.26 L1517.32 1211.26 L1516.73 1211.26 L1516.14 1211.26 L1515.56 1211.26 L1514.97 1211.26 L1514.38 1211.26 L1513.8 1211.26 L1513.21 1211.26 L1512.62 1211.26 L1512.04 1211.26 L1511.45 1211.26 L1510.86 1211.26 L1510.28 1211.26 L1509.69 1211.26 L1509.11 1211.26 L1508.52 1211.26 L1507.93 1211.26 L1507.35 1211.26 L1506.76 1211.26 L1506.17 1211.26 L1505.59 1211.26 L1505 1211.26 L1504.41 1211.26 L1503.83 1211.26 L1503.24 1211.26 L1502.65 1211.26 L1502.07 1211.26 L1501.48 1211.26 L1500.9 1211.26 L1500.31 1211.26 L1499.72 1211.26 L1499.14 1211.26 L1498.55 1211.26 L1497.96 1211.26 L1497.38 1211.26 L1496.79 1211.26 L1496.2 1211.26 L1495.62 1211.26 L1495.03 1211.26 L1494.45 1211.26 L1493.86 1211.26 L1493.27 1211.26 L1492.69 1211.26 L1492.1 1211.26 L1491.51 1211.26 L1490.93 1211.26 L1490.34 1211.26 L1489.75 1211.26 L1489.17 1211.26 L1488.58 1211.26 L1487.99 1211.26 L1487.41 1211.26 L1486.82 1211.26 L1486.24 1211.26 L1485.65 1211.26 L1485.06 1211.26 L1484.48 1211.26 L1483.89 1211.26 L1483.3 1211.26 L1482.72 1211.26 L1482.13 1211.26 L1481.54 1211.26 L1480.96 1211.26 L1480.37 1211.26 L1479.78 1211.26 L1479.2 1211.26 L1478.61 1211.26 L1478.03 1211.26 L1477.44 1211.26 L1476.85 1211.26 L1476.27 1211.26 L1475.68 1211.26 L1475.09 1211.26 L1474.51 1211.26 L1473.92 1211.26 L1473.33 1211.26 L1472.75 1211.26 L1472.16 1211.26 L1471.57 1211.26 L1470.99 1211.26 L1470.4 1211.26 L1469.82 1211.26 L1469.23 1211.26 L1468.64 1211.26 L1468.06 1211.26 L1467.47 1211.26 L1466.88 1211.26 L1466.3 1211.26 L1465.71 1211.26 L1465.12 1211.26 L1464.54 1211.26 L1463.95 1211.26 L1463.37 1211.26 L1462.78 1211.26 L1462.19 1211.26 L1461.61 1211.26 L1461.02 1211.26 L1460.43 1211.26 L1459.85 1211.26 L1459.26 1211.26 L1458.67 1211.26 L1458.09 1211.26 L1457.5 1211.26 L1456.91 1211.26 L1456.33 1211.26 L1455.74 1211.26 L1455.16 1211.26 L1454.57 1211.26 L1453.98 1211.26 L1453.4 1211.26 L1452.81 1211.26 L1452.22 1211.26 L1451.64 1211.26 L1451.05 1211.26 L1450.46 1211.26 L1449.88 1211.26 L1449.29 1211.26 L1448.7 1211.26 L1448.12 1211.26 L1447.53 1211.26 L1446.95 1211.26 L1446.36 1211.26 L1445.77 1211.26 L1445.19 1211.26 L1444.6 1211.26 L1444.01 1211.26 L1443.43 1211.26 L1442.84 1211.26 L1442.25 1211.26 L1441.67 1211.26 L1441.08 1211.26 L1440.5 1211.26 L1439.91 1211.26 L1439.32 1211.26 L1438.74 1211.26 L1438.15 1211.26 L1437.56 1211.26 L1436.98 1211.26 L1436.39 1211.26 L1435.8 1211.26 L1435.22 1211.26 L1434.63 1211.26 L1434.04 1211.26 L1433.46 1211.26 L1432.87 1211.26 L1432.29 1211.26 L1431.7 1211.26 L1431.11 1211.26 L1430.53 1211.26 L1429.94 1211.26 L1429.35 1211.26 L1428.77 1211.26 L1428.18 1211.26 L1427.59 1211.26 L1427.01 1211.26 L1426.42 1211.26 L1425.83 1211.26 L1425.25 1211.26 L1424.66 1211.26 L1424.08 1211.26 L1423.49 1211.26 L1422.9 1211.26 L1422.32 1211.26 L1421.73 1211.26 L1421.14 1211.26 L1420.56 1211.26 L1419.97 1211.26 L1419.38 1211.26 L1418.8 1211.26 L1418.21 1211.26 L1417.63 1211.26 L1417.04 1211.26 L1416.45 1211.26 L1415.87 1211.26 L1415.28 1211.26 L1414.69 1211.26 L1414.11 1211.26 L1413.52 1211.26 L1412.93 1211.26 L1412.35 1211.26 L1411.76 1211.26 L1411.17 1211.26 L1410.59 1211.26 L1410 1211.26 L1409.42 1211.26 L1408.83 1211.26 L1408.24 1211.26 L1407.66 1211.26 L1407.07 1211.26 L1406.48 1211.26 L1405.9 1211.26 L1405.31 1211.26 L1404.72 1211.26 L1404.14 1211.26 L1403.55 1211.26 L1402.96 1211.26 L1402.38 1211.26 L1401.79 1211.26 L1401.21 1211.26 L1400.62 1211.26 L1400.03 1211.26 L1399.45 1211.26 L1398.86 1211.26 L1398.27 1211.26 L1397.69 1211.26 L1397.1 1211.26 L1396.51 1211.26 L1395.93 1211.26 L1395.34 1211.26 L1394.75 1211.26 L1394.17 1211.26 L1393.58 1211.26 L1393 1211.26 L1392.41 1211.26 L1391.82 1211.26 L1391.24 1211.26 L1390.65 1211.26 L1390.06 1211.26 L1389.48 1211.26 L1388.89 1211.26 L1388.3 1211.26 L1387.72 1211.26 L1387.13 1211.26 L1386.55 1211.26 L1385.96 1211.26 L1385.37 1211.26 L1384.79 1211.26 L1384.2 1211.26 L1383.61 1211.26 L1383.03 1211.26 L1382.44 1211.26 L1381.85 1211.26 L1381.27 1211.26 L1380.68 1211.26 L1380.09 1211.26 L1379.51 1211.26 L1378.92 1211.26 L1378.34 1211.26 L1377.75 1211.26 L1377.16 1211.26 L1376.58 1211.26 L1375.99 1211.26 L1375.4 1211.26 L1374.82 1211.26 L1374.23 1211.26 L1373.64 1211.26 L1373.06 1211.26 L1372.47 1211.26 L1371.88 1211.26 L1371.3 1211.26 L1370.71 1211.26 L1370.13 1211.26 L1369.54 1211.26 L1368.95 1211.26 L1368.37 1211.26 L1367.78 1211.26 L1367.19 1211.26 L1366.61 1211.26 L1366.02 1211.26 L1365.43 1211.26 L1364.85 1211.26 L1364.26 1211.26 L1363.68 1211.26 L1363.09 1211.26 L1362.5 1211.26 L1361.92 1211.26 L1361.33 1211.26 L1360.74 1211.26 L1360.16 1211.26 L1359.57 1211.26 L1358.98 1211.26 L1358.4 1211.26 L1357.81 1211.26 L1357.22 1211.26 L1356.64 1211.26 L1356.05 1211.26 L1355.47 1211.26 L1354.88 1211.26 L1354.29 1211.26 L1353.71 1211.26 L1353.12 1211.26 L1352.53 1211.26 L1351.95 1211.26 L1351.36 1211.26 L1350.77 1211.26 L1350.19 1211.26 L1349.6 1211.26 L1349.01 1211.26 L1348.43 1211.26 L1347.84 1211.26 L1347.26 1211.26 L1346.67 1211.26 L1346.08 1211.26 L1345.5 1211.26 L1344.91 1211.26 L1344.32 1211.26 L1343.74 1211.26 L1343.15 1211.26 L1342.56 1211.26 L1341.98 1211.26 L1341.39 1211.26 L1340.8 1211.26 L1340.22 1211.26 L1339.63 1211.26 L1339.05 1211.26 L1338.46 1211.26 L1337.87 1211.26 L1337.29 1211.26 L1336.7 1211.26 L1336.11 1211.26 L1335.53 1211.26 L1334.94 1211.26 L1334.35 1211.26 L1333.77 1211.26 L1333.18 1211.26 L1332.6 1211.26 L1332.01 1211.26 L1331.42 1211.26 L1330.84 1211.26 L1330.25 1211.26 L1329.66 1211.26 L1329.08 1211.26 L1328.49 1211.26 L1327.9 1211.26 L1327.32 1211.26 L1326.73 1211.26 L1326.14 1211.26 L1325.56 1211.26 L1324.97 1211.26 L1324.39 1211.26 L1323.8 1211.26 L1323.21 1211.26 L1322.63 1211.26 L1322.04 1211.26 L1321.45 1211.26 L1320.87 1211.26 L1320.28 1211.26 L1319.69 1211.26 L1319.11 1211.26 L1318.52 1211.26 L1317.93 1211.26 L1317.35 1211.26 L1316.76 1211.26 L1316.18 1211.26 L1315.59 1211.26 L1315 1211.26 L1314.42 1211.26 L1313.83 1211.26 L1313.24 1211.26 L1312.66 1211.26 L1312.07 1211.26 L1311.48 1211.26 L1310.9 1211.26 L1310.31 1211.26 L1309.73 1211.26 L1309.14 1211.26 L1308.55 1211.26 L1307.97 1211.26 L1307.38 1211.26 L1306.79 1211.26 L1306.21 1211.26 L1305.62 1211.26 L1305.03 1211.26 L1304.45 1211.26 L1303.86 1211.26 L1303.27 1211.26 L1302.69 1211.26 L1302.1 1211.26 L1301.52 1211.26 L1300.93 1211.26 L1300.34 1211.26 L1299.76 1211.26 L1299.17 1211.26 L1298.58 1211.26 L1298 1211.26 L1297.41 1211.26 L1296.82 1211.26 L1296.24 1211.26 L1295.65 1211.26 L1295.06 1211.26 L1294.48 1211.26 L1293.89 1211.26 L1293.31 1211.26 L1292.72 1211.26 L1292.13 1211.26 L1291.55 1211.26 L1290.96 1211.26 L1290.37 1211.26 L1289.79 1211.26 L1289.2 1211.26 L1288.61 1211.26 L1288.03 1211.26 L1287.44 1211.26 L1286.86 1211.26 L1286.27 1211.26 L1285.68 1211.26 L1285.1 1211.26 L1284.51 1211.26 L1283.92 1211.26 L1283.34 1211.26 L1282.75 1211.26 L1282.16 1211.26 L1281.58 1211.26 L1280.99 1211.26 L1280.4 1211.26 L1279.82 1211.26 L1279.23 1211.26 L1278.65 1211.26 L1278.06 1211.26 L1277.47 1211.26 L1276.89 1211.26 L1276.3 1211.26 L1275.71 1211.26 L1275.13 1211.26 L1274.54 1211.26 L1273.95 1211.26 L1273.37 1211.26 L1272.78 1211.26 L1272.19 1211.26 L1271.61 1211.26 L1271.02 1211.26 L1270.44 1211.26 L1269.85 1211.26 L1269.26 1211.26 L1268.68 1211.26 L1268.09 1211.26 L1267.5 1211.26 L1266.92 1211.26 L1266.33 1211.26 L1265.74 1211.26 L1265.16 1211.26 L1264.57 1211.26 L1263.98 1211.26 L1263.4 1211.26 L1262.81 1211.26 L1262.23 1211.26 L1261.64 1211.26 L1261.05 1211.26 L1260.47 1211.26 L1259.88 1211.26 L1259.29 1211.26 L1258.71 1211.26 L1258.12 1211.26 L1257.53 1211.26 L1256.95 1211.26 L1256.36 1211.26 L1255.78 1211.26 L1255.19 1211.26 L1254.6 1211.26 L1254.02 1211.26 L1253.43 1211.26 L1252.84 1211.26 L1252.26 1211.26 L1251.67 1211.26 L1251.08 1211.26 L1250.5 1211.26 L1249.91 1211.26 L1249.32 1211.26 L1248.74 1211.26 L1248.15 1211.26 L1247.57 1211.26 L1246.98 1211.26 L1246.39 1211.26 L1245.81 1211.26 L1245.22 1211.26 L1244.63 1211.26 L1244.05 1211.26 L1243.46 1211.26 L1242.87 1211.26 L1242.29 1211.26 L1241.7 1211.26 L1241.11 1211.26 L1240.53 1211.26 L1239.94 1211.26 L1239.36 1211.26 L1238.77 1211.26 L1238.18 1211.26 L1237.6 1211.26 L1237.01 1211.26 L1236.42 1211.26 L1235.84 1211.26 L1235.25 1211.26 L1234.66 1211.26 L1234.08 1211.26 L1233.49 1211.26 L1232.91 1211.26 L1232.32 1211.26 L1231.73 1211.26 L1231.15 1211.26 L1230.56 1211.26 L1229.97 1211.26 L1229.39 1211.26 L1228.8 1211.26 L1228.21 1211.26 L1227.63 1211.26 L1227.04 1211.26 L1226.45 1211.26 L1225.87 1211.26 L1225.28 1211.26 L1224.7 1211.26 L1224.11 1211.26 L1223.52 1211.26 L1222.94 1211.26 L1222.35 1211.26 L1221.76 1211.26 L1221.18 1211.26 L1220.59 1211.26 L1220 1211.26 L1219.42 1211.26 L1218.83 1211.26 L1218.24 1211.26 L1217.66 1211.26 L1217.07 1211.26 L1216.49 1211.26 L1215.9 1211.26 L1215.31 1211.26 L1214.73 1211.26 L1214.14 1211.26 L1213.55 1211.26 L1212.97 1211.26 L1212.38 1211.26 L1211.79 1211.26 L1211.21 1211.26 L1210.62 1211.26 L1210.03 1211.26 L1209.45 1211.26 L1208.86 1211.26 L1208.28 1211.26 L1207.69 1211.26 L1207.1 1211.26 L1206.52 1211.26 L1205.93 1211.26 L1205.34 1211.26 L1204.76 1211.26 L1204.17 1211.26 L1203.58 1211.26 L1203 1211.26 L1202.41 1211.26 L1201.83 1211.26 L1201.24 1211.26 L1200.65 1211.26 L1200.07 1211.26 L1199.48 1211.26 L1198.89 1211.26 L1198.31 1211.26 L1197.72 1211.26 L1197.13 1211.26 L1196.55 1211.26 L1195.96 1211.26 L1195.37 1211.26 L1194.79 1211.26 L1194.2 1211.26 L1193.62 1211.26 L1193.03 1211.26 L1192.44 1211.26 L1191.86 1211.26 L1191.27 1211.26 L1190.68 1211.26 L1190.1 1211.26 L1189.51 1211.26 L1188.92 1211.26 L1188.34 1211.26 L1187.75 1211.26 L1187.16 1211.26 L1186.58 1211.26 L1185.99 1211.26 L1185.41 1211.26 L1184.82 1211.26 L1184.23 1211.26 L1183.65 1211.26 L1183.06 1211.26 L1182.47 1211.26 L1181.89 1211.26 L1181.3 1211.26 L1180.71 1211.26 L1180.13 1211.26 L1179.54 1211.26 L1178.96 1211.26 L1178.37 1211.26 L1177.78 1211.26 L1177.2 1211.26 L1176.61 1211.26 L1176.02 1211.26 L1175.44 1211.26 L1174.85 1211.26 L1174.26 1211.26 L1173.68 1211.26 L1173.09 1211.26 L1172.5 1211.26 L1171.92 1211.26 L1171.33 1211.26 L1170.75 1211.26 L1170.16 1211.26 L1169.57 1211.26 L1168.99 1211.26 L1168.4 1211.26 L1167.81 1211.26 L1167.23 1211.26 L1166.64 1211.26 L1166.05 1211.26 L1165.47 1211.26 L1164.88 1211.26 L1164.29 1211.26 L1163.71 1211.26 L1163.12 1211.26 L1162.54 1211.26 L1161.95 1211.26 L1161.36 1211.26 L1160.78 1211.26 L1160.19 1211.26 L1159.6 1211.26 L1159.02 1211.26 L1158.43 1211.26 L1157.84 1211.26 L1157.26 1211.26 L1156.67 1211.26 L1156.09 1211.26 L1155.5 1211.26 L1154.91 1211.26 L1154.33 1211.26 L1153.74 1211.26 L1153.15 1211.26 L1152.57 1211.26 L1151.98 1211.26 L1151.39 1211.26 L1150.81 1211.26 L1150.22 1211.26 L1149.63 1211.26 L1149.05 1211.26 L1148.46 1211.26 L1147.88 1211.26 L1147.29 1211.26 L1146.7 1211.26 L1146.12 1211.26 L1145.53 1211.26 L1144.94 1211.26 L1144.36 1211.26 L1143.77 1211.26 L1143.18 1211.26 L1142.6 1211.26 L1142.01 1211.26 L1141.42 1211.26 L1140.84 1211.26 L1140.25 1211.26 L1139.67 1211.26 L1139.08 1211.26 L1138.49 1211.26 L1137.91 1211.26 L1137.32 1211.26 L1136.73 1211.26 L1136.15 1211.26 L1135.56 1211.26 L1134.97 1211.26 L1134.39 1211.26 L1133.8 1211.26 L1133.21 1211.26 L1132.63 1211.26 L1132.04 1211.26 L1131.46 1211.26 L1130.87 1211.26 L1130.28 1211.26 L1129.7 1211.26 L1129.11 1211.26 L1128.52 1211.26 L1127.94 1211.26 L1127.35 1211.26 L1126.76 1211.26 L1126.18 1211.26 L1125.59 1211.26 L1125.01 1211.26 L1124.42 1211.26 L1123.83 1211.26 L1123.25 1211.26 L1122.66 1211.26 L1122.07 1211.26 L1121.49 1211.26 L1120.9 1211.26 L1120.31 1211.26 L1119.73 1211.26 L1119.14 1211.26 L1118.55 1211.26 L1117.97 1211.26 L1117.38 1211.26 L1116.8 1211.26 L1116.21 1211.26 L1115.62 1211.26 L1115.04 1211.26 L1114.45 1211.26 L1113.86 1211.26 L1113.28 1211.26 L1112.69 1211.26 L1112.1 1211.26 L1111.52 1211.26 L1110.93 1211.26 L1110.34 1211.26 L1109.76 1211.26 L1109.17 1211.26 L1108.59 1211.26 L1108 1211.26 L1107.41 1211.26 L1106.83 1211.26 L1106.24 1211.26 L1105.65 1211.26 L1105.07 1211.26 L1104.48 1211.26 L1103.89 1211.26 L1103.31 1211.26 L1102.72 1211.26 L1102.14 1211.26 L1101.55 1211.26 L1100.96 1211.26 L1100.38 1211.26 L1099.79 1211.26 L1099.2 1211.26 L1098.62 1211.26 L1098.03 1211.26 L1097.44 1211.26 L1096.86 1211.26 L1096.27 1211.26 L1095.68 1211.26 L1095.1 1211.26 L1094.51 1211.26 L1093.93 1211.26 L1093.34 1211.26 L1092.75 1211.26 L1092.17 1211.26 L1091.58 1211.26 L1090.99 1211.26 L1090.41 1211.26 L1089.82 1211.26 L1089.23 1211.26 L1088.65 1211.26 L1088.06 1211.26 L1087.47 1211.26 L1086.89 1211.26 L1086.3 1211.26 L1085.72 1211.26 L1085.13 1211.26 L1084.54 1211.26 L1083.96 1211.26 L1083.37 1211.26 L1082.78 1211.26 L1082.2 1211.26 L1081.61 1211.26 L1081.02 1211.26 L1080.44 1211.26 L1079.85 1211.26 L1079.26 1211.26 L1078.68 1211.26 L1078.09 1211.26 L1077.51 1211.26 L1076.92 1211.26 L1076.33 1211.26 L1075.75 1211.26 L1075.16 1211.26 L1074.57 1211.26 L1073.99 1211.26 L1073.4 1211.26 L1072.81 1211.26 L1072.23 1211.26 L1071.64 1211.26 L1071.06 1211.26 L1070.47 1211.26 L1069.88 1211.26 L1069.3 1211.26 L1068.71 1211.26 L1068.12 1211.26 L1067.54 1211.26 L1066.95 1211.26 L1066.36 1211.26 L1065.78 1211.26 L1065.19 1211.26 L1064.6 1211.26 L1064.02 1211.26 L1063.43 1211.26 L1062.85 1211.26 L1062.26 1211.26 L1061.67 1211.26 L1061.09 1211.26 L1060.5 1211.26 L1059.91 1211.26 L1059.33 1211.26 L1058.74 1211.26 L1058.15 1211.26 L1057.57 1211.26 L1056.98 1211.26 L1056.39 1211.26 L1055.81 1211.26 L1055.22 1211.26 L1054.64 1211.26 L1054.05 1211.26 L1053.46 1211.26 L1052.88 1211.26 L1052.29 1211.26 L1051.7 1211.26 L1051.12 1211.26 L1050.53 1211.26 L1049.94 1211.26 L1049.36 1211.26 L1048.77 1211.26 L1048.19 1211.26 L1047.6 1211.26 L1047.01 1211.26 L1046.43 1211.26 L1045.84 1211.26 L1045.25 1211.26 L1044.67 1211.26 L1044.08 1211.26 L1043.49 1211.26 L1042.91 1211.26 L1042.32 1211.26 L1041.73 1211.26 L1041.15 1211.26 L1040.56 1211.26 L1039.98 1211.26 L1039.39 1211.26 L1038.8 1211.26 L1038.22 1211.26 L1037.63 1211.26 L1037.04 1211.26 L1036.46 1211.26 L1035.87 1211.26 L1035.28 1211.26 L1034.7 1211.26 L1034.11 1211.26 L1033.52 1211.26 L1032.94 1211.26 L1032.35 1211.26 L1031.77 1211.26 L1031.18 1211.26 L1030.59 1211.26 L1030.01 1211.26 L1029.42 1211.26 L1028.83 1211.26 L1028.25 1211.26 L1027.66 1211.26 L1027.07 1211.26 L1026.49 1211.26 L1025.9 1211.26 L1025.32 1211.26 L1024.73 1211.26 L1024.14 1211.26 L1023.56 1211.26 L1022.97 1211.26 L1022.38 1211.26 L1021.8 1211.26 L1021.21 1211.26 L1020.62 1211.26 L1020.04 1211.26 L1019.45 1211.26 L1018.86 1211.26 L1018.28 1211.26 L1017.69 1211.26 L1017.11 1211.26 L1016.52 1211.26 L1015.93 1211.26 L1015.35 1211.26 L1014.76 1211.26 L1014.17 1211.26 L1013.59 1211.26 L1013 1211.26 L1012.41 1211.26 L1011.83 1211.26 L1011.24 1211.26 L1010.65 1211.26 L1010.07 1211.26 L1009.48 1211.26 L1008.9 1211.26 L1008.31 1211.26 L1007.72 1211.26 L1007.14 1211.26 L1006.55 1211.26 L1005.96 1211.26 L1005.38 1211.26 L1004.79 1211.26 L1004.2 1211.26 L1003.62 1211.26 L1003.03 1211.26 L1002.44 1211.26 L1001.86 1211.26 L1001.27 1211.26 L1000.69 1211.26 L1000.1 1211.26 L999.513 1211.26 L998.926 1211.26 L998.34 1211.26 L997.754 1211.26 L997.167 1211.26 L996.581 1211.26 L995.994 1211.26 L995.408 1211.26 L994.822 1211.26 L994.235 1211.26 L993.649 1211.26 L993.062 1211.26 L992.476 1211.26 L991.889 1211.26 L991.303 1211.26 L990.717 1211.26 L990.13 1211.26 L989.544 1211.26 L988.957 1211.26 L988.371 1211.26 L987.785 1211.26 L987.198 1211.26 L986.612 1211.26 L986.025 1211.26  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip632)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1211.63 986.612,1211.63 987.198,1211.63 987.785,1211.63 988.371,1211.63 988.957,1211.63 989.544,1211.63 990.13,1211.63 990.717,1211.63 991.303,1211.63 991.889,1211.63 992.476,1211.63 993.062,1211.63 993.649,1211.63 994.235,1211.63 994.822,1211.63 995.408,1211.63 995.994,1211.63 996.581,1211.63 997.167,1211.63 997.754,1211.63 998.34,1211.63 998.926,1211.63 999.513,1211.63 1000.1,1211.63 1000.69,1211.63 1001.27,1211.63 1001.86,1211.63 1002.44,1211.63 1003.03,1211.63 1003.62,1211.63 1004.2,1211.63 1004.79,1211.63 1005.38,1211.63 1005.96,1211.63 1006.55,1211.63 1007.14,1211.63 1007.72,1211.63 1008.31,1211.63 1008.9,1211.63 1009.48,1211.63 1010.07,1211.63 1010.65,1211.63 1011.24,1211.63 1011.83,1211.63 1012.41,1211.63 1013,1211.63 1013.59,1211.63 1014.17,1211.63 1014.76,1211.63 1015.35,1211.63 1015.93,1211.63 1016.52,1211.63 1017.11,1211.63 1017.69,1211.63 1018.28,1211.63 1018.86,1211.63 1019.45,1211.63 1020.04,1211.63 1020.62,1211.63 1021.21,1211.63 1021.8,1211.63 1022.38,1211.63 1022.97,1211.63 1023.56,1211.63 1024.14,1211.63 1024.73,1211.63 1025.32,1211.63 1025.9,1211.63 1026.49,1211.63 1027.07,1211.63 1027.66,1211.63 1028.25,1211.63 1028.83,1211.63 1029.42,1211.63 1030.01,1211.63 1030.59,1211.63 1031.18,1211.63 1031.77,1211.63 1032.35,1211.63 1032.94,1211.63 1033.52,1211.63 1034.11,1211.63 1034.7,1211.63 1035.28,1211.63 1035.87,1211.63 1036.46,1211.63 1037.04,1211.63 1037.63,1211.63 1038.22,1211.63 1038.8,1211.63 1039.39,1211.63 1039.98,1211.63 1040.56,1211.63 1041.15,1211.63 1041.73,1211.63 1042.32,1211.63 1042.91,1211.63 1043.49,1211.63 1044.08,1211.63 1044.67,1211.63 1045.25,1211.63 1045.84,1211.63 1046.43,1211.63 1047.01,1211.63 1047.6,1211.63 1048.19,1211.63 1048.77,1211.63 1049.36,1211.63 1049.94,1211.63 1050.53,1211.63 1051.12,1211.63 1051.7,1211.63 1052.29,1211.63 1052.88,1211.63 1053.46,1211.63 1054.05,1211.63 1054.64,1211.63 1055.22,1211.63 1055.81,1211.63 1056.39,1211.63 1056.98,1211.63 1057.57,1211.63 1058.15,1211.63 1058.74,1211.63 1059.33,1211.63 1059.91,1211.63 1060.5,1211.63 1061.09,1211.63 1061.67,1211.63 1062.26,1211.63 1062.85,1211.63 1063.43,1211.63 1064.02,1211.63 1064.6,1211.63 1065.19,1211.63 1065.78,1211.63 1066.36,1211.63 1066.95,1211.63 1067.54,1211.63 1068.12,1211.63 1068.71,1211.63 1069.3,1211.63 1069.88,1211.63 1070.47,1211.63 1071.06,1211.63 1071.64,1211.63 1072.23,1211.63 1072.81,1211.63 1073.4,1211.63 1073.99,1211.63 1074.57,1211.63 1075.16,1211.63 1075.75,1211.63 1076.33,1211.63 1076.92,1211.63 1077.51,1211.63 1078.09,1211.63 1078.68,1211.63 1079.26,1211.63 1079.85,1211.63 1080.44,1211.63 1081.02,1211.63 1081.61,1211.63 1082.2,1211.63 1082.78,1211.63 1083.37,1211.63 1083.96,1211.63 1084.54,1211.63 1085.13,1211.63 1085.72,1211.63 1086.3,1211.63 1086.89,1211.63 1087.47,1211.63 1088.06,1211.63 1088.65,1211.63 1089.23,1211.63 1089.82,1211.63 1090.41,1211.63 1090.99,1211.63 1091.58,1211.63 1092.17,1211.63 1092.75,1211.63 1093.34,1211.63 1093.93,1211.63 1094.51,1211.63 1095.1,1211.63 1095.68,1211.63 1096.27,1211.63 1096.86,1211.63 1097.44,1211.63 1098.03,1211.63 1098.62,1211.63 1099.2,1211.63 1099.79,1211.63 1100.38,1211.63 1100.96,1211.63 1101.55,1211.63 1102.14,1211.63 1102.72,1211.63 1103.31,1211.63 1103.89,1211.63 1104.48,1211.63 1105.07,1211.63 1105.65,1211.63 1106.24,1211.63 1106.83,1211.63 1107.41,1211.63 1108,1211.63 1108.59,1211.63 1109.17,1211.63 1109.76,1211.63 1110.34,1211.63 1110.93,1211.63 1111.52,1211.63 1112.1,1211.63 1112.69,1211.63 1113.28,1211.63 1113.86,1211.63 1114.45,1211.63 1115.04,1211.63 1115.62,1211.63 1116.21,1211.63 1116.8,1211.63 1117.38,1211.63 1117.97,1211.63 1118.55,1211.63 1119.14,1211.63 1119.73,1211.63 1120.31,1211.63 1120.9,1211.63 1121.49,1211.63 1122.07,1211.63 1122.66,1211.63 1123.25,1211.63 1123.83,1211.63 1124.42,1211.63 1125.01,1211.63 1125.59,1211.63 1126.18,1211.63 1126.76,1211.63 1127.35,1211.63 1127.94,1211.63 1128.52,1211.63 1129.11,1211.63 1129.7,1211.63 1130.28,1211.63 1130.87,1211.63 1131.46,1211.63 1132.04,1211.63 1132.63,1211.63 1133.21,1211.63 1133.8,1211.63 1134.39,1211.63 1134.97,1211.63 1135.56,1211.63 1136.15,1211.63 1136.73,1211.63 1137.32,1211.63 1137.91,1211.63 1138.49,1211.63 1139.08,1211.63 1139.67,1211.63 1140.25,1211.63 1140.84,1211.63 1141.42,1211.63 1142.01,1211.63 1142.6,1211.63 1143.18,1211.63 1143.77,1211.63 1144.36,1211.63 1144.94,1211.63 1145.53,1211.63 1146.12,1211.63 1146.7,1211.63 1147.29,1211.63 1147.88,1211.63 1148.46,1211.63 1149.05,1211.63 1149.63,1211.63 1150.22,1211.63 1150.81,1211.63 1151.39,1211.63 1151.98,1211.63 1152.57,1211.63 1153.15,1211.63 1153.74,1211.63 1154.33,1211.63 1154.91,1211.63 1155.5,1211.63 1156.09,1211.63 1156.67,1211.63 1157.26,1211.63 1157.84,1211.63 1158.43,1211.63 1159.02,1211.63 1159.6,1211.63 1160.19,1211.63 1160.78,1211.63 1161.36,1211.63 1161.95,1211.63 1162.54,1211.63 1163.12,1211.63 1163.71,1211.63 1164.29,1211.63 1164.88,1211.63 1165.47,1211.63 1166.05,1211.63 1166.64,1211.63 1167.23,1211.63 1167.81,1211.63 1168.4,1211.63 1168.99,1211.63 1169.57,1211.63 1170.16,1211.63 1170.75,1211.63 1171.33,1211.63 1171.92,1211.63 1172.5,1211.63 1173.09,1211.63 1173.68,1211.63 1174.26,1211.63 1174.85,1211.63 1175.44,1211.63 1176.02,1211.63 1176.61,1211.63 1177.2,1211.63 1177.78,1211.63 1178.37,1211.63 1178.96,1211.63 1179.54,1211.63 1180.13,1211.63 1180.71,1211.63 1181.3,1211.63 1181.89,1211.63 1182.47,1211.63 1183.06,1211.63 1183.65,1211.63 1184.23,1211.63 1184.82,1211.63 1185.41,1211.63 1185.99,1211.63 1186.58,1211.63 1187.16,1211.63 1187.75,1211.63 1188.34,1211.63 1188.92,1211.63 1189.51,1211.63 1190.1,1211.63 1190.68,1211.63 1191.27,1211.63 1191.86,1211.63 1192.44,1211.63 1193.03,1211.63 1193.62,1211.63 1194.2,1211.63 1194.79,1211.63 1195.37,1211.63 1195.96,1211.63 1196.55,1211.63 1197.13,1211.63 1197.72,1211.63 1198.31,1211.63 1198.89,1211.63 1199.48,1211.63 1200.07,1211.63 1200.65,1211.63 1201.24,1211.63 1201.83,1211.63 1202.41,1211.63 1203,1211.63 1203.58,1211.63 1204.17,1211.63 1204.76,1211.63 1205.34,1211.63 1205.93,1211.63 1206.52,1211.63 1207.1,1211.63 1207.69,1211.63 1208.28,1211.63 1208.86,1211.63 1209.45,1211.63 1210.03,1211.63 1210.62,1211.63 1211.21,1211.63 1211.79,1211.63 1212.38,1211.63 1212.97,1211.63 1213.55,1211.63 1214.14,1211.63 1214.73,1211.63 1215.31,1211.63 1215.9,1211.63 1216.49,1211.63 1217.07,1211.63 1217.66,1211.63 1218.24,1211.63 1218.83,1211.63 1219.42,1211.63 1220,1211.63 1220.59,1211.63 1221.18,1211.63 1221.76,1211.63 1222.35,1211.63 1222.94,1211.63 1223.52,1211.63 1224.11,1211.63 1224.7,1211.63 1225.28,1211.63 1225.87,1211.63 1226.45,1211.63 1227.04,1211.63 1227.63,1211.63 1228.21,1211.63 1228.8,1211.63 1229.39,1211.63 1229.97,1211.63 1230.56,1211.63 1231.15,1211.63 1231.73,1211.63 1232.32,1211.63 1232.91,1211.63 1233.49,1211.63 1234.08,1211.63 1234.66,1211.63 1235.25,1211.63 1235.84,1211.63 1236.42,1211.63 1237.01,1211.63 1237.6,1211.63 1238.18,1211.63 1238.77,1211.63 1239.36,1211.63 1239.94,1211.63 1240.53,1211.63 1241.11,1211.63 1241.7,1211.63 1242.29,1211.63 1242.87,1211.63 1243.46,1211.63 1244.05,1211.63 1244.63,1211.63 1245.22,1211.63 1245.81,1211.63 1246.39,1211.63 1246.98,1211.63 1247.57,1211.63 1248.15,1211.63 1248.74,1211.63 1249.32,1211.63 1249.91,1211.63 1250.5,1211.63 1251.08,1211.63 1251.67,1211.63 1252.26,1211.63 1252.84,1211.63 1253.43,1211.63 1254.02,1211.63 1254.6,1211.63 1255.19,1211.63 1255.78,1211.63 1256.36,1211.63 1256.95,1211.63 1257.53,1211.63 1258.12,1211.63 1258.71,1211.63 1259.29,1211.63 1259.88,1211.63 1260.47,1211.63 1261.05,1211.63 1261.64,1211.63 1262.23,1211.63 1262.81,1211.63 1263.4,1211.63 1263.98,1211.63 1264.57,1211.63 1265.16,1211.63 1265.74,1211.63 1266.33,1211.63 1266.92,1211.63 1267.5,1211.63 1268.09,1211.63 1268.68,1211.63 1269.26,1211.63 1269.85,1211.63 1270.44,1211.63 1271.02,1211.63 1271.61,1211.63 1272.19,1211.63 1272.78,1211.63 1273.37,1211.63 1273.95,1211.63 1274.54,1211.63 1275.13,1211.63 1275.71,1211.63 1276.3,1211.63 1276.89,1211.63 1277.47,1211.63 1278.06,1211.63 1278.65,1211.63 1279.23,1211.63 1279.82,1211.63 1280.4,1211.63 1280.99,1211.63 1281.58,1211.63 1282.16,1211.63 1282.75,1211.63 1283.34,1211.63 1283.92,1211.63 1284.51,1211.63 1285.1,1211.63 1285.68,1211.63 1286.27,1211.63 1286.86,1211.63 1287.44,1211.63 1288.03,1211.63 1288.61,1211.63 1289.2,1211.63 1289.79,1211.63 1290.37,1211.63 1290.96,1211.63 1291.55,1211.63 1292.13,1211.63 1292.72,1211.63 1293.31,1211.63 1293.89,1211.63 1294.48,1211.63 1295.06,1211.63 1295.65,1211.63 1296.24,1211.63 1296.82,1211.63 1297.41,1211.63 1298,1211.63 1298.58,1211.63 1299.17,1211.63 1299.76,1211.63 1300.34,1211.63 1300.93,1211.63 1301.52,1211.63 1302.1,1211.63 1302.69,1211.63 1303.27,1211.63 1303.86,1211.63 1304.45,1211.63 1305.03,1211.63 1305.62,1211.63 1306.21,1211.63 1306.79,1211.63 1307.38,1211.63 1307.97,1211.63 1308.55,1211.63 1309.14,1211.63 1309.73,1211.63 1310.31,1211.63 1310.9,1211.63 1311.48,1211.63 1312.07,1211.63 1312.66,1211.63 1313.24,1211.63 1313.83,1211.63 1314.42,1211.63 1315,1211.63 1315.59,1211.63 1316.18,1211.63 1316.76,1211.63 1317.35,1211.63 1317.93,1211.63 1318.52,1211.63 1319.11,1211.63 1319.69,1211.63 1320.28,1211.63 1320.87,1211.63 1321.45,1211.63 1322.04,1211.63 1322.63,1211.63 1323.21,1211.63 1323.8,1211.63 1324.39,1211.63 1324.97,1211.63 1325.56,1211.63 1326.14,1211.63 1326.73,1211.63 1327.32,1211.63 1327.9,1211.63 1328.49,1211.63 1329.08,1211.63 1329.66,1211.63 1330.25,1211.63 1330.84,1211.63 1331.42,1211.63 1332.01,1211.63 1332.6,1211.63 1333.18,1211.63 1333.77,1211.63 1334.35,1211.63 1334.94,1211.63 1335.53,1211.63 1336.11,1211.63 1336.7,1211.63 1337.29,1211.63 1337.87,1211.63 1338.46,1211.63 1339.05,1211.63 1339.63,1211.63 1340.22,1211.63 1340.8,1211.63 1341.39,1211.63 1341.98,1211.63 1342.56,1211.63 1343.15,1211.63 1343.74,1211.63 1344.32,1211.63 1344.91,1211.63 1345.5,1211.63 1346.08,1211.63 1346.67,1211.63 1347.26,1211.63 1347.84,1211.63 1348.43,1211.63 1349.01,1211.63 1349.6,1211.63 1350.19,1211.63 1350.77,1211.63 1351.36,1211.63 1351.95,1211.63 1352.53,1211.63 1353.12,1211.63 1353.71,1211.63 1354.29,1211.63 1354.88,1211.63 1355.47,1211.63 1356.05,1211.63 1356.64,1211.63 1357.22,1211.63 1357.81,1211.63 1358.4,1211.63 1358.98,1211.63 1359.57,1211.63 1360.16,1211.63 1360.74,1211.63 1361.33,1211.63 1361.92,1211.63 1362.5,1211.63 1363.09,1211.63 1363.68,1211.63 1364.26,1211.63 1364.85,1211.63 1365.43,1211.63 1366.02,1211.63 1366.61,1211.63 1367.19,1211.63 1367.78,1211.63 1368.37,1211.63 1368.95,1211.63 1369.54,1211.63 1370.13,1211.63 1370.71,1211.63 1371.3,1211.63 1371.88,1211.63 1372.47,1211.63 1373.06,1211.63 1373.64,1211.63 1374.23,1211.63 1374.82,1211.63 1375.4,1211.63 1375.99,1211.63 1376.58,1211.63 1377.16,1211.63 1377.75,1211.63 1378.34,1211.63 1378.92,1211.63 1379.51,1211.63 1380.09,1211.63 1380.68,1211.63 1381.27,1211.63 1381.85,1211.63 1382.44,1211.63 1383.03,1211.63 1383.61,1211.63 1384.2,1211.63 1384.79,1211.63 1385.37,1211.63 1385.96,1211.63 1386.55,1211.63 1387.13,1211.63 1387.72,1211.63 1388.3,1211.63 1388.89,1211.63 1389.48,1211.63 1390.06,1211.63 1390.65,1211.63 1391.24,1211.63 1391.82,1211.63 1392.41,1211.63 1393,1211.63 1393.58,1211.63 1394.17,1211.63 1394.75,1211.63 1395.34,1211.63 1395.93,1211.63 1396.51,1211.63 1397.1,1211.63 1397.69,1211.63 1398.27,1211.63 1398.86,1211.63 1399.45,1211.63 1400.03,1211.63 1400.62,1211.63 1401.21,1211.63 1401.79,1211.63 1402.38,1211.63 1402.96,1211.63 1403.55,1211.63 1404.14,1211.63 1404.72,1211.63 1405.31,1211.63 1405.9,1211.63 1406.48,1211.63 1407.07,1211.63 1407.66,1211.63 1408.24,1211.63 1408.83,1211.63 1409.42,1211.63 1410,1211.63 1410.59,1211.63 1411.17,1211.63 1411.76,1211.63 1412.35,1211.63 1412.93,1211.63 1413.52,1211.63 1414.11,1211.63 1414.69,1211.63 1415.28,1211.63 1415.87,1211.63 1416.45,1211.63 1417.04,1211.63 1417.63,1211.63 1418.21,1211.63 1418.8,1211.63 1419.38,1211.63 1419.97,1211.63 1420.56,1211.63 1421.14,1211.63 1421.73,1211.63 1422.32,1211.63 1422.9,1211.63 1423.49,1211.63 1424.08,1211.63 1424.66,1211.63 1425.25,1211.63 1425.83,1211.63 1426.42,1211.63 1427.01,1211.63 1427.59,1211.63 1428.18,1211.63 1428.77,1211.63 1429.35,1211.63 1429.94,1211.63 1430.53,1211.63 1431.11,1211.63 1431.7,1211.63 1432.29,1211.63 1432.87,1211.63 1433.46,1211.63 1434.04,1211.63 1434.63,1211.63 1435.22,1211.63 1435.8,1211.63 1436.39,1211.63 1436.98,1211.63 1437.56,1211.63 1438.15,1211.63 1438.74,1211.63 1439.32,1211.63 1439.91,1211.63 1440.5,1211.63 1441.08,1211.63 1441.67,1211.63 1442.25,1211.63 1442.84,1211.63 1443.43,1211.63 1444.01,1211.63 1444.6,1211.63 1445.19,1211.63 1445.77,1211.63 1446.36,1211.63 1446.95,1211.63 1447.53,1211.63 1448.12,1211.63 1448.7,1211.63 1449.29,1211.63 1449.88,1211.63 1450.46,1211.63 1451.05,1211.63 1451.64,1211.63 1452.22,1211.63 1452.81,1211.63 1453.4,1211.63 1453.98,1211.63 1454.57,1211.63 1455.16,1211.63 1455.74,1211.63 1456.33,1211.63 1456.91,1211.63 1457.5,1211.63 1458.09,1211.63 1458.67,1211.63 1459.26,1211.63 1459.85,1211.63 1460.43,1211.63 1461.02,1211.63 1461.61,1211.63 1462.19,1211.63 1462.78,1211.63 1463.37,1211.63 1463.95,1211.63 1464.54,1211.63 1465.12,1211.63 1465.71,1211.63 1466.3,1211.63 1466.88,1211.63 1467.47,1211.63 1468.06,1211.63 1468.64,1211.63 1469.23,1211.63 1469.82,1211.63 1470.4,1211.63 1470.99,1211.63 1471.57,1211.63 1472.16,1211.63 1472.75,1211.63 1473.33,1211.63 1473.92,1211.63 1474.51,1211.63 1475.09,1211.63 1475.68,1211.63 1476.27,1211.63 1476.85,1211.63 1477.44,1211.63 1478.03,1211.63 1478.61,1211.63 1479.2,1211.63 1479.78,1211.63 1480.37,1211.63 1480.96,1211.63 1481.54,1211.63 1482.13,1211.63 1482.72,1211.63 1483.3,1211.63 1483.89,1211.63 1484.48,1211.63 1485.06,1211.63 1485.65,1211.63 1486.24,1211.63 1486.82,1211.63 1487.41,1211.63 1487.99,1211.63 1488.58,1211.63 1489.17,1211.63 1489.75,1211.63 1490.34,1211.63 1490.93,1211.63 1491.51,1211.63 1492.1,1211.63 1492.69,1211.63 1493.27,1211.63 1493.86,1211.63 1494.45,1211.63 1495.03,1211.63 1495.62,1211.63 1496.2,1211.63 1496.79,1211.63 1497.38,1211.63 1497.96,1211.63 1498.55,1211.63 1499.14,1211.63 1499.72,1211.63 1500.31,1211.63 1500.9,1211.63 1501.48,1211.63 1502.07,1211.63 1502.65,1211.63 1503.24,1211.63 1503.83,1211.63 1504.41,1211.63 1505,1211.63 1505.59,1211.63 1506.17,1211.63 1506.76,1211.63 1507.35,1211.63 1507.93,1211.63 1508.52,1211.63 1509.11,1211.63 1509.69,1211.63 1510.28,1211.63 1510.86,1211.63 1511.45,1211.63 1512.04,1211.63 1512.62,1211.63 1513.21,1211.63 1513.8,1211.63 1514.38,1211.63 1514.97,1211.63 1515.56,1211.63 1516.14,1211.63 1516.73,1211.63 1517.32,1211.63 1517.9,1211.63 1518.49,1211.63 1519.07,1211.63 1519.66,1211.63 1520.25,1211.63 1520.83,1211.63 1521.42,1211.63 1522.01,1211.63 1522.59,1211.63 1523.18,1211.63 1523.77,1211.63 1524.35,1211.63 1524.94,1211.63 1525.52,1211.63 1526.11,1211.63 1526.7,1211.63 1527.28,1211.63 1527.87,1211.63 1528.46,1211.63 1529.04,1211.63 1529.63,1211.63 1530.22,1211.63 1530.8,1211.63 1531.39,1211.63 1531.98,1211.63 1532.56,1211.63 1533.15,1211.63 1533.73,1211.63 1534.32,1211.63 1534.91,1211.63 1535.49,1211.63 1536.08,1211.63 1536.67,1211.63 1537.25,1211.63 1537.84,1211.63 1538.43,1211.63 1539.01,1211.63 1539.6,1211.63 1540.19,1211.63 1540.77,1211.63 1541.36,1211.63 1541.94,1211.63 1542.53,1211.63 1543.12,1211.63 1543.7,1211.63 1544.29,1211.63 1544.88,1211.63 1545.46,1211.63 1546.05,1211.63 1546.64,1211.63 1547.22,1211.63 1547.81,1211.63 1548.4,1211.63 1548.98,1211.63 1549.57,1211.63 1550.15,1211.63 1550.74,1211.63 1551.33,1211.63 1551.91,1211.63 1552.5,1211.63 1553.09,1211.63 1553.67,1211.63 1554.26,1211.63 1554.85,1211.63 1555.43,1211.63 1556.02,1211.63 1556.6,1211.63 1557.19,1211.63 1557.78,1211.63 1558.36,1211.63 1558.95,1211.63 1559.54,1211.63 1560.12,1211.63 1560.71,1211.63 1561.3,1211.63 1561.88,1211.63 1562.47,1211.63 1563.06,1211.63 1563.64,1211.63 1564.23,1211.63 1564.81,1211.63 1565.4,1211.63 1565.99,1211.63 1566.57,1211.63 1567.16,1211.63 1567.75,1211.63 1568.33,1211.63 1568.92,1211.63 1569.51,1211.63 1570.09,1211.63 1570.68,1211.63 1571.27,1211.63 1571.85,1211.63 1572.44,1211.63 1573.02,1211.63 1573.61,1211.63 1574.2,1211.63 1574.78,1211.63 1575.37,1211.63 1575.96,1211.63 1576.54,1211.63 1577.13,1211.63 1577.72,1211.63 1578.3,1211.63 1578.89,1211.63 1579.47,1211.63 1580.06,1211.63 1580.65,1211.63 1581.23,1211.63 1581.82,1211.63 1582.41,1211.63 1582.99,1211.63 1583.58,1211.63 1584.17,1211.63 1584.75,1211.63 1585.34,1211.63 1585.93,1211.63 1586.51,1211.63 1587.1,1211.63 1587.68,1211.63 1588.27,1211.63 1588.86,1211.63 1589.44,1211.63 1590.03,1211.63 1590.62,1211.63 1591.2,1211.63 1591.79,1211.63 1592.38,1211.63 1592.96,1211.63 1593.55,1211.63 1594.14,1211.63 1594.72,1211.63 1595.31,1211.63 1595.89,1211.63 1596.48,1211.63 1597.07,1211.63 1597.65,1211.63 1598.24,1211.63 1598.83,1211.63 1599.41,1211.63 1600,1211.63 1600.59,1211.63 1601.17,1211.63 1601.76,1211.63 1602.34,1211.63 1602.93,1211.63 1603.52,1211.63 1604.1,1211.63 1604.69,1211.63 1605.28,1211.63 1605.86,1211.63 1606.45,1211.63 1607.04,1211.63 1607.62,1211.63 1608.21,1211.63 1608.8,1211.63 1609.38,1211.63 1609.97,1211.63 1610.55,1211.63 1611.14,1211.63 1611.73,1211.63 1612.31,1211.63 1612.9,1211.63 1613.49,1211.63 1614.07,1211.63 1614.66,1211.63 1615.25,1211.63 1615.83,1211.63 1616.42,1211.63 1617.01,1211.63 1617.59,1211.63 1618.18,1211.63 1618.76,1211.63 1619.35,1211.63 1619.94,1211.63 1620.52,1211.63 1621.11,1211.63 1621.7,1211.63 1622.28,1211.63 1622.87,1211.63 1623.46,1211.63 1624.04,1211.63 1624.63,1211.63 1625.22,1211.63 1625.8,1211.63 1626.39,1211.63 1626.97,1211.63 1627.56,1211.63 1628.15,1211.63 1628.73,1211.63 1629.32,1211.63 1629.91,1211.63 1630.49,1211.63 1631.08,1211.63 1631.67,1211.63 1632.25,1211.63 1632.84,1211.63 1633.42,1211.63 1634.01,1211.63 1634.6,1211.63 1635.18,1211.63 1635.77,1211.63 1636.36,1211.63 1636.94,1211.63 1637.53,1211.63 1638.12,1211.63 1638.7,1211.63 1639.29,1211.63 1639.88,1211.63 1640.46,1211.63 1641.05,1211.63 1641.63,1211.63 1642.22,1211.63 1642.81,1211.63 1643.39,1211.63 1643.98,1211.63 1644.57,1211.63 1645.15,1211.63 1645.74,1211.63 1646.33,1211.63 1646.91,1211.63 1647.5,1211.63 1648.09,1211.63 1648.67,1211.63 1649.26,1211.63 1649.84,1211.63 1650.43,1211.63 1651.02,1211.63 1651.6,1211.63 1652.19,1211.63 1652.78,1211.63 1653.36,1211.63 1653.95,1211.63 1654.54,1211.63 1655.12,1211.63 1655.71,1211.63 1656.29,1211.63 1656.88,1211.63 1657.47,1211.63 1658.05,1211.63 1658.64,1211.63 1659.23,1211.63 1659.81,1211.63 1660.4,1211.63 1660.99,1211.63 1661.57,1211.63 1662.16,1211.63 1662.75,1211.63 1663.33,1211.63 1663.92,1211.63 1664.5,1211.63 1665.09,1211.63 1665.68,1211.63 1666.26,1211.63 1666.85,1211.63 1667.44,1211.63 1668.02,1211.63 1668.61,1211.63 1669.2,1211.63 1669.78,1211.63 1670.37,1211.63 1670.96,1211.63 1671.54,1211.63 1672.13,1211.63 1672.71,1211.63 1673.3,1211.63 1673.89,1211.63 1674.47,1211.63 1675.06,1211.63 1675.65,1211.63 1676.23,1211.63 1676.82,1211.63 1677.41,1211.63 1677.99,1211.63 1678.58,1211.63 1679.17,1211.63 1679.75,1211.63 1680.34,1211.63 1680.92,1211.63 1681.51,1211.63 1682.1,1211.63 1682.68,1211.63 1683.27,1211.63 1683.86,1211.63 1684.44,1211.63 1685.03,1211.63 1685.62,1211.63 1686.2,1211.63 1686.79,1211.63 1687.37,1211.63 1687.96,1211.63 1688.55,1211.63 1689.13,1211.63 1689.72,1211.63 1690.31,1211.63 1690.89,1211.63 1691.48,1211.63 1692.07,1211.63 1692.65,1211.63 1693.24,1211.63 1693.83,1211.63 1694.41,1211.63 1695,1211.63 1695.58,1211.63 1696.17,1211.63 1696.76,1211.63 1697.34,1211.63 1697.93,1211.63 1698.52,1211.63 1699.1,1211.63 1699.69,1211.63 1700.28,1211.63 1700.86,1211.63 1701.45,1211.63 1702.04,1211.63 1702.62,1211.63 1703.21,1211.63 1703.79,1211.63 1704.38,1211.63 1704.97,1211.63 1705.55,1211.63 1706.14,1211.63 1706.73,1211.63 1707.31,1211.63 1707.9,1211.63 1708.49,1211.63 1709.07,1211.63 1709.66,1211.63 1710.24,1211.63 1710.83,1211.63 1711.42,1211.63 1712,1211.63 1712.59,1211.63 1713.18,1211.63 1713.76,1211.63 1714.35,1211.63 1714.94,1211.63 1715.52,1211.63 1716.11,1211.63 1716.7,1211.63 1717.28,1211.63 1717.87,1211.63 1718.45,1211.63 1719.04,1211.63 1719.63,1211.63 1720.21,1211.63 1720.8,1211.63 1721.39,1211.63 1721.97,1211.63 1722.56,1211.63 1723.15,1211.63 1723.73,1211.63 1724.32,1211.63 1724.91,1211.63 1725.49,1211.63 1726.08,1211.63 1726.66,1211.63 1727.25,1211.63 1727.84,1211.63 1728.42,1211.63 1729.01,1211.63 1729.6,1211.63 1730.18,1211.63 1730.77,1211.63 1731.36,1211.63 1731.94,1211.63 1732.53,1211.63 1733.11,1211.63 1733.7,1211.63 1734.29,1211.63 1734.87,1211.63 1735.46,1211.63 1736.05,1211.63 1736.63,1211.63 1737.22,1211.63 1737.81,1211.63 1738.39,1211.63 1738.98,1211.63 1739.57,1211.63 1740.15,1211.63 1740.74,1211.63 1741.32,1211.63 1741.91,1211.63 1742.5,1211.63 1743.08,1211.63 1743.67,1211.63 1744.26,1211.63 1744.84,1211.63 1745.43,1211.63 1746.02,1211.63 1746.6,1211.63 1747.19,1211.63 1747.78,1211.63 1748.36,1211.63 1748.95,1211.63 1749.53,1211.63 1750.12,1211.63 1750.71,1211.63 1751.29,1211.63 1751.88,1211.63 1752.47,1211.63 1753.05,1211.63 1753.64,1211.63 1754.23,1211.63 1754.81,1211.63 1755.4,1211.63 1755.99,1211.63 1756.57,1211.63 1757.16,1211.63 1757.74,1211.63 1758.33,1211.63 1758.92,1211.63 1759.5,1211.63 1760.09,1211.63 1760.68,1211.63 1761.26,1211.63 1761.85,1211.63 1762.44,1211.63 1763.02,1211.63 1763.61,1211.63 1764.19,1211.63 1764.78,1211.63 1765.37,1211.63 1765.95,1211.63 1766.54,1211.63 1767.13,1211.63 1767.71,1211.63 1768.3,1211.63 1768.89,1211.63 1769.47,1211.63 1770.06,1211.63 1770.65,1211.63 1771.23,1211.63 1771.82,1211.63 1772.4,1211.63 1772.99,1211.63 1773.58,1211.63 1774.16,1211.63 1774.75,1211.63 1775.34,1211.63 1775.92,1211.63 1776.51,1211.63 1777.1,1211.63 1777.68,1211.63 1778.27,1211.63 1778.86,1211.63 1779.44,1211.63 1780.03,1211.63 1780.61,1211.63 1781.2,1211.63 1781.79,1211.63 1782.37,1211.63 1782.96,1211.63 1783.55,1211.63 1784.13,1211.63 1784.72,1211.63 1785.31,1211.63 1785.89,1211.63 1786.48,1211.63 1787.06,1211.63 1787.65,1211.63 1788.24,1211.63 1788.82,1211.63 1789.41,1211.63 1790,1211.63 1790.58,1211.63 1791.17,1211.63 1791.76,1211.63 1792.34,1211.63 1792.93,1211.63 1793.52,1211.63 1794.1,1211.63 1794.69,1211.63 1795.27,1211.63 1795.86,1211.63 1796.45,1211.63 1797.03,1211.63 1797.62,1211.63 1798.21,1211.63 1798.79,1211.63 1799.38,1211.63 1799.97,1211.63 1800.55,1211.63 1801.14,1211.63 1801.73,1211.63 1802.31,1211.63 1802.9,1211.63 1803.48,1211.63 1804.07,1211.63 1804.66,1211.63 1805.24,1211.63 1805.83,1211.63 1806.42,1211.63 1807,1211.63 1807.59,1211.63 1808.18,1211.63 1808.76,1211.63 1809.35,1211.63 1809.94,1211.63 1810.52,1211.63 1811.11,1211.63 1811.69,1211.63 1812.28,1211.63 1812.87,1211.63 1813.45,1211.63 1814.04,1211.63 1814.63,1211.63 1815.21,1211.63 1815.8,1211.63 1816.39,1211.63 1816.97,1211.63 1817.56,1211.63 1818.14,1211.63 1818.73,1211.63 1819.32,1211.63 1819.9,1211.63 1820.49,1211.63 1821.08,1211.63 1821.66,1211.63 1822.25,1211.63 1822.84,1211.63 1823.42,1211.63 1824.01,1211.63 1824.6,1211.63 1825.18,1211.63 1825.77,1211.63 1826.35,1211.63 1826.94,1211.63 1827.53,1211.63 1828.11,1211.63 1828.7,1211.63 1829.29,1211.63 1829.87,1211.63 1830.46,1211.63 1831.05,1211.63 1831.63,1211.63 1832.22,1211.63 1832.81,1211.63 1833.39,1211.63 1833.98,1211.63 1834.56,1211.63 1835.15,1211.63 1835.74,1211.63 1836.32,1211.63 1836.91,1211.63 1837.5,1211.63 1838.08,1211.63 1838.67,1211.63 1839.26,1211.63 1839.84,1211.63 1840.43,1211.63 1841.01,1211.63 1841.6,1211.63 1842.19,1211.63 1842.77,1211.63 1843.36,1211.63 1843.95,1211.63 1844.53,1211.63 1845.12,1211.63 1845.71,1211.63 1846.29,1211.63 1846.88,1211.63 1847.47,1211.63 1848.05,1211.63 1848.64,1211.63 1849.22,1211.63 1849.81,1211.63 1850.4,1211.63 1850.98,1211.63 1851.57,1211.63 1852.16,1211.63 1852.74,1211.63 1853.33,1211.63 1853.92,1211.63 1854.5,1211.63 1855.09,1211.63 1855.68,1211.63 1856.26,1211.63 1856.85,1211.63 1857.43,1211.63 1858.02,1211.63 1858.61,1211.63 1859.19,1211.63 1859.78,1211.63 1860.37,1211.63 1860.95,1211.63 1861.54,1211.63 1862.13,1211.63 1862.71,1211.63 1863.3,1211.63 1863.88,1211.63 1864.47,1211.63 1865.06,1211.63 1865.64,1211.63 1866.23,1211.63 1866.82,1211.63 1867.4,1211.63 1867.99,1211.63 1868.58,1211.63 1869.16,1211.63 1869.75,1211.63 1870.34,1211.63 1870.92,1211.63 1871.51,1211.63 1872.09,1211.63 1872.68,1211.63 1873.27,1211.63 1873.85,1211.63 1874.44,1211.63 1875.03,1211.63 1875.61,1211.63 1876.2,1211.63 1876.79,1211.63 1877.37,1211.63 1877.96,1211.63 1878.55,1211.63 1879.13,1211.63 1879.72,1211.63 1880.3,1211.63 1880.89,1211.63 1881.48,1211.63 1882.06,1211.63 1882.65,1211.63 1883.24,1211.63 1883.82,1211.63 1884.41,1211.63 1885,1211.63 1885.58,1211.63 1886.17,1211.63 1886.76,1211.63 1887.34,1211.63 1887.93,1211.63 1888.51,1211.63 1889.1,1211.63 1889.69,1211.63 1890.27,1211.63 1890.86,1211.63 1891.45,1211.63 1892.03,1211.63 1892.62,1211.63 1893.21,1211.63 1893.79,1211.63 1894.38,1211.63 1894.96,1211.63 1895.55,1211.63 1896.14,1211.63 1896.72,1211.63 1897.31,1211.63 1897.9,1211.63 1898.48,1211.63 1899.07,1211.63 1899.66,1211.63 1900.24,1211.63 1900.83,1211.63 1901.42,1211.63 1902,1211.63 1902.59,1211.63 1903.17,1211.63 1903.76,1211.63 1904.35,1211.63 1904.93,1211.63 1905.52,1211.63 1906.11,1211.63 1906.69,1211.63 1907.28,1211.63 1907.87,1211.63 1908.45,1211.63 1909.04,1211.63 1909.63,1211.63 1910.21,1211.63 1910.8,1211.63 1911.38,1211.63 1911.97,1211.63 1912.56,1211.63 1913.14,1211.63 1913.73,1211.63 1914.32,1211.63 1914.9,1211.63 1915.49,1211.63 1916.08,1211.63 1916.66,1211.63 1917.25,1211.63 1917.83,1211.63 1918.42,1211.63 1919.01,1211.63 1919.59,1211.63 1920.18,1211.63 1920.77,1211.63 1921.35,1211.63 1921.94,1211.63 1922.53,1211.63 1923.11,1211.63 1923.7,1211.63 1924.29,1211.63 1924.87,1211.63 1925.46,1211.63 1926.04,1211.63 1926.63,1211.63 1927.22,1211.63 1927.8,1211.63 1928.39,1211.63 1928.98,1211.63 1929.56,1211.63 1930.15,1211.63 1930.74,1211.63 1931.32,1211.63 1931.91,1211.63 1932.5,1211.63 1933.08,1211.63 1933.67,1211.63 1934.25,1211.63 1934.84,1211.63 1935.43,1211.63 1936.01,1211.63 1936.6,1211.63 1937.19,1211.63 1937.77,1211.63 1938.36,1211.63 1938.95,1211.63 1939.53,1211.63 1940.12,1211.63 1940.71,1211.63 1941.29,1211.63 1941.88,1211.63 1942.46,1211.63 1943.05,1211.63 1943.64,1211.63 1944.22,1211.63 1944.81,1211.63 1945.4,1211.63 1945.98,1211.63 1946.57,1211.63 1947.16,1211.63 1947.74,1211.63 1948.33,1211.63 1948.91,1211.63 1949.5,1211.63 1950.09,1211.63 1950.67,1211.63 1951.26,1211.63 1951.85,1211.63 1952.43,1211.63 1953.02,1211.63 1953.61,1211.63 1954.19,1211.63 1954.78,1211.63 1955.37,1211.63 1955.95,1211.63 1956.54,1211.63 1957.12,1211.63 1957.71,1211.63 1958.3,1211.63 1958.88,1211.63 1959.47,1211.63 1960.06,1211.63 1960.64,1211.63 1961.23,1211.63 1961.82,1211.63 1962.4,1211.63 1962.99,1211.63 1963.58,1211.63 1964.16,1211.63 1964.75,1211.63 1965.33,1211.63 1965.92,1211.63 1966.51,1211.63 1967.09,1211.63 1967.68,1211.63 1968.27,1211.63 1968.85,1211.63 1969.44,1211.63 1970.03,1211.63 1970.61,1211.63 1971.2,1211.63 1971.78,1211.63 1972.37,1211.63 1972.96,1211.63 1973.54,1211.63 1974.13,1211.63 1974.72,1211.63 1975.3,1211.63 1975.89,1211.63 1976.48,1211.63 1977.06,1211.63 1977.65,1211.63 1978.24,1211.63 1978.82,1211.63 1979.41,1211.63 1979.99,1211.63 1980.58,1211.63 1981.17,1211.63 1981.75,1211.63 1982.34,1211.63 1982.93,1211.63 1983.51,1211.63 1984.1,1211.63 1984.69,1211.63 1985.27,1211.63 1985.86,1211.63 1986.45,1211.63 1987.03,1211.63 1987.62,1211.63 1988.2,1211.63 1988.79,1211.63 1989.38,1211.63 1989.96,1211.63 1990.55,1211.63 1991.14,1211.63 1991.72,1211.63 1992.31,1211.63 1992.9,1211.63 1993.48,1211.63 1994.07,1211.63 1994.65,1211.63 1995.24,1211.63 1995.83,1211.63 1996.41,1211.63 1997,1211.63 1997.59,1211.63 1998.17,1211.63 1998.76,1211.63 1999.35,1211.63 1999.93,1211.63 2000.52,1211.63 2001.11,1211.63 2001.69,1211.63 2002.28,1211.63 2002.86,1211.63 2003.45,1211.63 2004.04,1211.63 2004.62,1211.63 2005.21,1211.63 2005.8,1211.63 2006.38,1211.63 2006.97,1211.63 2007.56,1211.63 2008.14,1211.63 2008.73,1211.63 2009.32,1211.63 2009.9,1211.63 2010.49,1211.63 2011.07,1211.63 2011.66,1211.63 2012.25,1211.63 2012.83,1211.63 2013.42,1211.63 2014.01,1211.63 2014.59,1211.63 2015.18,1211.63 2015.77,1211.63 2016.35,1211.63 2016.94,1211.63 2017.53,1211.63 2018.11,1211.63 2018.7,1211.63 2019.28,1211.63 2019.87,1211.63 2020.46,1211.63 2021.04,1211.63 2021.63,1211.63 2022.22,1211.63 2022.8,1211.63 2023.39,1211.63 2023.98,1211.63 2024.56,1211.63 2025.15,1211.63 2025.73,1211.63 2026.32,1211.63 2026.91,1211.63 2027.49,1211.63 2028.08,1211.63 2028.67,1211.63 2029.25,1211.63 2029.84,1211.63 2030.43,1211.63 2031.01,1211.63 2031.6,1211.63 2032.19,1211.63 2032.77,1211.63 2033.36,1211.63 2033.94,1211.63 2034.53,1211.63 2035.12,1211.63 2035.7,1211.63 2036.29,1211.63 2036.88,1211.63 2037.46,1211.63 2038.05,1211.63 2038.64,1211.63 2039.22,1211.63 2039.81,1211.63 2040.4,1211.63 2040.98,1211.63 2041.57,1211.63 2042.15,1211.63 2042.74,1211.63 2043.33,1211.63 2043.91,1211.63 2044.5,1211.63 2045.09,1211.63 2045.67,1211.63 2046.26,1211.63 2046.85,1211.63 2047.43,1211.63 2048.02,1211.63 2048.6,1211.63 2049.19,1211.63 2049.78,1211.63 2050.36,1211.63 2050.95,1211.63 2051.54,1211.63 2052.12,1211.63 2052.71,1211.63 2053.3,1211.63 2053.88,1211.63 2054.47,1211.63 2055.06,1211.63 2055.64,1211.63 2056.23,1211.63 2056.81,1211.63 2057.4,1211.63 2057.99,1211.63 2058.57,1211.63 2059.16,1211.63 2059.75,1211.63 2060.33,1211.63 2060.92,1211.63 2061.51,1211.63 2062.09,1211.63 2062.68,1211.63 2063.27,1211.63 2063.85,1211.63 2064.44,1211.63 2065.02,1211.63 2065.61,1211.63 2066.2,1211.63 2066.78,1211.63 2067.37,1211.63 2067.96,1211.63 2068.54,1211.63 2069.13,1211.63 2069.72,1211.63 2070.3,1211.63 2070.89,1211.63 2071.48,1211.63 2072.06,1211.63 2072.65,1211.63 2073.23,1211.63 2073.82,1211.63 2074.41,1211.63 2074.99,1211.63 2075.58,1211.63 2076.17,1211.63 2076.75,1211.63 2077.34,1211.63 2077.93,1211.63 2078.51,1211.63 2079.1,1211.63 2079.68,1211.63 2080.27,1211.63 2080.86,1211.63 2081.44,1211.63 2082.03,1211.63 2082.62,1211.63 2083.2,1211.63 2083.79,1211.63 2084.38,1211.63 2084.96,1211.63 2085.55,1211.63 2086.14,1211.63 2086.72,1211.63 2087.31,1211.63 2087.89,1211.63 2088.48,1211.63 2089.07,1211.63 2089.65,1211.63 2090.24,1211.63 2090.83,1211.63 2091.41,1211.63 2092,1211.63 2092.59,1211.63 2093.17,1211.63 2093.76,1211.63 2094.35,1211.63 2094.93,1211.63 2095.52,1211.63 2096.1,1211.63 2096.69,1211.63 2097.28,1211.63 2097.86,1211.63 2098.45,1211.63 2099.04,1211.63 2099.62,1211.63 2100.21,1211.63 2100.8,1211.63 2101.38,1211.63 2101.97,1211.63 2102.55,1211.63 2103.14,1211.63 2103.73,1211.63 2104.31,1211.63 2104.9,1211.63 2105.49,1211.63 2106.07,1211.63 2106.66,1211.63 2107.25,1211.63 2107.83,1211.63 2108.42,1211.63 2109.01,1211.63 2109.59,1211.63 2110.18,1211.63 2110.76,1211.63 2111.35,1211.63 2111.94,1211.63 2112.52,1211.63 2113.11,1211.63 2113.7,1211.63 2114.28,1211.63 2114.87,1211.63 2115.46,1211.63 2116.04,1211.63 2116.63,1211.63 2117.22,1211.63 2117.8,1211.63 2118.39,1211.63 2118.97,1211.63 2119.56,1211.63 2120.15,1211.63 2120.73,1211.63 2121.32,1211.63 2121.91,1211.63 2122.49,1211.63 2123.08,1211.63 2123.67,1211.63 2124.25,1211.63 2124.84,1211.63 2125.42,1211.63 2126.01,1211.63 2126.6,1211.63 2127.18,1211.63 2127.77,1211.63 2128.36,1211.63 2128.94,1211.63 2129.53,1211.63 2130.12,1211.63 2130.7,1211.63 2131.29,1211.63 2131.88,1211.63 2132.46,1211.63 2133.05,1211.63 2133.63,1211.63 2134.22,1211.63 2134.81,1211.63 2135.39,1211.63 2135.98,1211.63 2136.57,1211.63 2137.15,1211.63 2137.74,1211.63 2138.33,1211.63 2138.91,1211.63 2139.5,1211.63 2140.09,1211.63 2140.67,1211.63 2141.26,1211.63 2141.84,1211.63 2142.43,1211.63 2143.02,1211.63 2143.6,1211.63 2144.19,1211.63 2144.78,1211.63 2145.36,1211.63 2145.95,1211.63 2146.54,1211.63 2147.12,1211.63 2147.71,1211.63 2148.3,1211.63 2148.88,1211.63 2149.47,1211.63 2150.05,1211.63 2150.64,1211.63 2151.23,1211.63 2151.81,1211.63 2152.4,1211.63 2152.99,1211.63 2153.57,1211.63 2154.16,1211.63 2154.75,1211.63 2155.33,1211.63 2155.92,1211.63 2156.5,1211.63 2157.09,1211.63 2157.68,1211.63 2158.26,1211.63 \"/>\n<path clip-path=\"url(#clip632)\" d=\"M986.025 1211.43 L986.612 1211.43 L987.198 1211.43 L987.785 1211.43 L988.371 1211.43 L988.957 1211.43 L989.544 1211.43 L990.13 1211.43 L990.717 1211.43 L991.303 1211.43 L991.889 1211.43 L992.476 1211.43 L993.062 1211.43 L993.649 1211.43 L994.235 1211.43 L994.822 1211.43 L995.408 1211.43 L995.994 1211.43 L996.581 1211.43 L997.167 1211.43 L997.754 1211.43 L998.34 1211.43 L998.926 1211.43 L999.513 1211.43 L1000.1 1211.43 L1000.69 1211.43 L1001.27 1211.43 L1001.86 1211.43 L1002.44 1211.43 L1003.03 1211.43 L1003.62 1211.43 L1004.2 1211.43 L1004.79 1211.43 L1005.38 1211.43 L1005.96 1211.43 L1006.55 1211.43 L1007.14 1211.43 L1007.72 1211.43 L1008.31 1211.43 L1008.9 1211.43 L1009.48 1211.43 L1010.07 1211.43 L1010.65 1211.43 L1011.24 1211.43 L1011.83 1211.43 L1012.41 1211.43 L1013 1211.43 L1013.59 1211.43 L1014.17 1211.43 L1014.76 1211.43 L1015.35 1211.43 L1015.93 1211.43 L1016.52 1211.43 L1017.11 1211.43 L1017.69 1211.43 L1018.28 1211.43 L1018.86 1211.43 L1019.45 1211.43 L1020.04 1211.43 L1020.62 1211.43 L1021.21 1211.43 L1021.8 1211.43 L1022.38 1211.43 L1022.97 1211.43 L1023.56 1211.43 L1024.14 1211.43 L1024.73 1211.43 L1025.32 1211.43 L1025.9 1211.43 L1026.49 1211.43 L1027.07 1211.43 L1027.66 1211.43 L1028.25 1211.43 L1028.83 1211.43 L1029.42 1211.43 L1030.01 1211.43 L1030.59 1211.43 L1031.18 1211.43 L1031.77 1211.43 L1032.35 1211.43 L1032.94 1211.43 L1033.52 1211.43 L1034.11 1211.43 L1034.7 1211.43 L1035.28 1211.43 L1035.87 1211.43 L1036.46 1211.43 L1037.04 1211.43 L1037.63 1211.43 L1038.22 1211.43 L1038.8 1211.43 L1039.39 1211.43 L1039.98 1211.43 L1040.56 1211.43 L1041.15 1211.43 L1041.73 1211.43 L1042.32 1211.43 L1042.91 1211.43 L1043.49 1211.43 L1044.08 1211.43 L1044.67 1211.43 L1045.25 1211.43 L1045.84 1211.43 L1046.43 1211.43 L1047.01 1211.43 L1047.6 1211.43 L1048.19 1211.43 L1048.77 1211.43 L1049.36 1211.43 L1049.94 1211.43 L1050.53 1211.43 L1051.12 1211.43 L1051.7 1211.43 L1052.29 1211.43 L1052.88 1211.43 L1053.46 1211.43 L1054.05 1211.43 L1054.64 1211.43 L1055.22 1211.43 L1055.81 1211.43 L1056.39 1211.43 L1056.98 1211.43 L1057.57 1211.43 L1058.15 1211.43 L1058.74 1211.43 L1059.33 1211.43 L1059.91 1211.43 L1060.5 1211.43 L1061.09 1211.43 L1061.67 1211.43 L1062.26 1211.43 L1062.85 1211.43 L1063.43 1211.43 L1064.02 1211.43 L1064.6 1211.43 L1065.19 1211.43 L1065.78 1211.43 L1066.36 1211.43 L1066.95 1211.43 L1067.54 1211.43 L1068.12 1211.43 L1068.71 1211.43 L1069.3 1211.43 L1069.88 1211.43 L1070.47 1211.43 L1071.06 1211.43 L1071.64 1211.43 L1072.23 1211.43 L1072.81 1211.43 L1073.4 1211.43 L1073.99 1211.43 L1074.57 1211.43 L1075.16 1211.43 L1075.75 1211.43 L1076.33 1211.43 L1076.92 1211.43 L1077.51 1211.43 L1078.09 1211.43 L1078.68 1211.43 L1079.26 1211.43 L1079.85 1211.43 L1080.44 1211.43 L1081.02 1211.43 L1081.61 1211.43 L1082.2 1211.43 L1082.78 1211.43 L1083.37 1211.43 L1083.96 1211.43 L1084.54 1211.43 L1085.13 1211.43 L1085.72 1211.43 L1086.3 1211.43 L1086.89 1211.43 L1087.47 1211.43 L1088.06 1211.43 L1088.65 1211.43 L1089.23 1211.43 L1089.82 1211.43 L1090.41 1211.43 L1090.99 1211.43 L1091.58 1211.43 L1092.17 1211.43 L1092.75 1211.43 L1093.34 1211.43 L1093.93 1211.43 L1094.51 1211.43 L1095.1 1211.43 L1095.68 1211.43 L1096.27 1211.43 L1096.86 1211.43 L1097.44 1211.43 L1098.03 1211.43 L1098.62 1211.43 L1099.2 1211.43 L1099.79 1211.43 L1100.38 1211.43 L1100.96 1211.43 L1101.55 1211.43 L1102.14 1211.43 L1102.72 1211.43 L1103.31 1211.43 L1103.89 1211.43 L1104.48 1211.43 L1105.07 1211.43 L1105.65 1211.43 L1106.24 1211.43 L1106.83 1211.43 L1107.41 1211.43 L1108 1211.43 L1108.59 1211.43 L1109.17 1211.43 L1109.76 1211.43 L1110.34 1211.43 L1110.93 1211.43 L1111.52 1211.43 L1112.1 1211.43 L1112.69 1211.43 L1113.28 1211.43 L1113.86 1211.43 L1114.45 1211.43 L1115.04 1211.43 L1115.62 1211.43 L1116.21 1211.43 L1116.8 1211.43 L1117.38 1211.43 L1117.97 1211.43 L1118.55 1211.43 L1119.14 1211.43 L1119.73 1211.43 L1120.31 1211.43 L1120.9 1211.43 L1121.49 1211.43 L1122.07 1211.43 L1122.66 1211.43 L1123.25 1211.43 L1123.83 1211.43 L1124.42 1211.43 L1125.01 1211.43 L1125.59 1211.43 L1126.18 1211.43 L1126.76 1211.43 L1127.35 1211.43 L1127.94 1211.43 L1128.52 1211.43 L1129.11 1211.43 L1129.7 1211.43 L1130.28 1211.43 L1130.87 1211.43 L1131.46 1211.43 L1132.04 1211.43 L1132.63 1211.43 L1133.21 1211.43 L1133.8 1211.43 L1134.39 1211.43 L1134.97 1211.43 L1135.56 1211.43 L1136.15 1211.43 L1136.73 1211.43 L1137.32 1211.43 L1137.91 1211.43 L1138.49 1211.43 L1139.08 1211.43 L1139.67 1211.43 L1140.25 1211.43 L1140.84 1211.43 L1141.42 1211.43 L1142.01 1211.43 L1142.6 1211.43 L1143.18 1211.43 L1143.77 1211.43 L1144.36 1211.43 L1144.94 1211.43 L1145.53 1211.43 L1146.12 1211.43 L1146.7 1211.43 L1147.29 1211.43 L1147.88 1211.43 L1148.46 1211.43 L1149.05 1211.43 L1149.63 1211.43 L1150.22 1211.43 L1150.81 1211.43 L1151.39 1211.43 L1151.98 1211.43 L1152.57 1211.43 L1153.15 1211.43 L1153.74 1211.43 L1154.33 1211.43 L1154.91 1211.43 L1155.5 1211.43 L1156.09 1211.43 L1156.67 1211.43 L1157.26 1211.43 L1157.84 1211.43 L1158.43 1211.43 L1159.02 1211.43 L1159.6 1211.43 L1160.19 1211.43 L1160.78 1211.43 L1161.36 1211.43 L1161.95 1211.43 L1162.54 1211.43 L1163.12 1211.43 L1163.71 1211.43 L1164.29 1211.43 L1164.88 1211.43 L1165.47 1211.43 L1166.05 1211.43 L1166.64 1211.43 L1167.23 1211.43 L1167.81 1211.43 L1168.4 1211.43 L1168.99 1211.43 L1169.57 1211.43 L1170.16 1211.43 L1170.75 1211.43 L1171.33 1211.43 L1171.92 1211.43 L1172.5 1211.43 L1173.09 1211.43 L1173.68 1211.43 L1174.26 1211.43 L1174.85 1211.43 L1175.44 1211.43 L1176.02 1211.43 L1176.61 1211.43 L1177.2 1211.43 L1177.78 1211.43 L1178.37 1211.43 L1178.96 1211.43 L1179.54 1211.43 L1180.13 1211.43 L1180.71 1211.43 L1181.3 1211.43 L1181.89 1211.43 L1182.47 1211.43 L1183.06 1211.43 L1183.65 1211.43 L1184.23 1211.43 L1184.82 1211.43 L1185.41 1211.43 L1185.99 1211.43 L1186.58 1211.43 L1187.16 1211.43 L1187.75 1211.43 L1188.34 1211.43 L1188.92 1211.43 L1189.51 1211.43 L1190.1 1211.43 L1190.68 1211.43 L1191.27 1211.43 L1191.86 1211.43 L1192.44 1211.43 L1193.03 1211.43 L1193.62 1211.43 L1194.2 1211.43 L1194.79 1211.43 L1195.37 1211.43 L1195.96 1211.43 L1196.55 1211.43 L1197.13 1211.43 L1197.72 1211.43 L1198.31 1211.43 L1198.89 1211.43 L1199.48 1211.43 L1200.07 1211.43 L1200.65 1211.43 L1201.24 1211.43 L1201.83 1211.43 L1202.41 1211.43 L1203 1211.43 L1203.58 1211.43 L1204.17 1211.43 L1204.76 1211.43 L1205.34 1211.43 L1205.93 1211.43 L1206.52 1211.43 L1207.1 1211.43 L1207.69 1211.43 L1208.28 1211.43 L1208.86 1211.43 L1209.45 1211.43 L1210.03 1211.43 L1210.62 1211.43 L1211.21 1211.43 L1211.79 1211.43 L1212.38 1211.43 L1212.97 1211.43 L1213.55 1211.43 L1214.14 1211.43 L1214.73 1211.43 L1215.31 1211.43 L1215.9 1211.43 L1216.49 1211.43 L1217.07 1211.43 L1217.66 1211.43 L1218.24 1211.43 L1218.83 1211.43 L1219.42 1211.43 L1220 1211.43 L1220.59 1211.43 L1221.18 1211.43 L1221.76 1211.43 L1222.35 1211.43 L1222.94 1211.43 L1223.52 1211.43 L1224.11 1211.43 L1224.7 1211.43 L1225.28 1211.43 L1225.87 1211.43 L1226.45 1211.43 L1227.04 1211.43 L1227.63 1211.43 L1228.21 1211.43 L1228.8 1211.43 L1229.39 1211.43 L1229.97 1211.43 L1230.56 1211.43 L1231.15 1211.43 L1231.73 1211.43 L1232.32 1211.43 L1232.91 1211.43 L1233.49 1211.43 L1234.08 1211.43 L1234.66 1211.43 L1235.25 1211.43 L1235.84 1211.43 L1236.42 1211.43 L1237.01 1211.43 L1237.6 1211.43 L1238.18 1211.43 L1238.77 1211.43 L1239.36 1211.43 L1239.94 1211.43 L1240.53 1211.43 L1241.11 1211.43 L1241.7 1211.43 L1242.29 1211.43 L1242.87 1211.43 L1243.46 1211.43 L1244.05 1211.43 L1244.63 1211.43 L1245.22 1211.43 L1245.81 1211.43 L1246.39 1211.43 L1246.98 1211.43 L1247.57 1211.43 L1248.15 1211.43 L1248.74 1211.43 L1249.32 1211.43 L1249.91 1211.43 L1250.5 1211.43 L1251.08 1211.43 L1251.67 1211.43 L1252.26 1211.43 L1252.84 1211.43 L1253.43 1211.43 L1254.02 1211.43 L1254.6 1211.43 L1255.19 1211.43 L1255.78 1211.43 L1256.36 1211.43 L1256.95 1211.43 L1257.53 1211.43 L1258.12 1211.43 L1258.71 1211.43 L1259.29 1211.43 L1259.88 1211.43 L1260.47 1211.43 L1261.05 1211.43 L1261.64 1211.43 L1262.23 1211.43 L1262.81 1211.43 L1263.4 1211.43 L1263.98 1211.43 L1264.57 1211.43 L1265.16 1211.43 L1265.74 1211.43 L1266.33 1211.43 L1266.92 1211.43 L1267.5 1211.43 L1268.09 1211.43 L1268.68 1211.43 L1269.26 1211.43 L1269.85 1211.43 L1270.44 1211.43 L1271.02 1211.43 L1271.61 1211.43 L1272.19 1211.43 L1272.78 1211.43 L1273.37 1211.43 L1273.95 1211.43 L1274.54 1211.43 L1275.13 1211.43 L1275.71 1211.43 L1276.3 1211.43 L1276.89 1211.43 L1277.47 1211.43 L1278.06 1211.43 L1278.65 1211.43 L1279.23 1211.43 L1279.82 1211.43 L1280.4 1211.43 L1280.99 1211.43 L1281.58 1211.43 L1282.16 1211.43 L1282.75 1211.43 L1283.34 1211.43 L1283.92 1211.43 L1284.51 1211.43 L1285.1 1211.43 L1285.68 1211.43 L1286.27 1211.43 L1286.86 1211.43 L1287.44 1211.43 L1288.03 1211.43 L1288.61 1211.43 L1289.2 1211.43 L1289.79 1211.43 L1290.37 1211.43 L1290.96 1211.43 L1291.55 1211.43 L1292.13 1211.43 L1292.72 1211.43 L1293.31 1211.43 L1293.89 1211.43 L1294.48 1211.43 L1295.06 1211.43 L1295.65 1211.43 L1296.24 1211.43 L1296.82 1211.43 L1297.41 1211.43 L1298 1211.43 L1298.58 1211.43 L1299.17 1211.43 L1299.76 1211.43 L1300.34 1211.43 L1300.93 1211.43 L1301.52 1211.43 L1302.1 1211.43 L1302.69 1211.43 L1303.27 1211.43 L1303.86 1211.43 L1304.45 1211.43 L1305.03 1211.43 L1305.62 1211.43 L1306.21 1211.43 L1306.79 1211.43 L1307.38 1211.43 L1307.97 1211.43 L1308.55 1211.43 L1309.14 1211.43 L1309.73 1211.43 L1310.31 1211.43 L1310.9 1211.43 L1311.48 1211.43 L1312.07 1211.43 L1312.66 1211.43 L1313.24 1211.43 L1313.83 1211.43 L1314.42 1211.43 L1315 1211.43 L1315.59 1211.43 L1316.18 1211.43 L1316.76 1211.43 L1317.35 1211.43 L1317.93 1211.43 L1318.52 1211.43 L1319.11 1211.43 L1319.69 1211.43 L1320.28 1211.43 L1320.87 1211.43 L1321.45 1211.43 L1322.04 1211.43 L1322.63 1211.43 L1323.21 1211.43 L1323.8 1211.43 L1324.39 1211.43 L1324.97 1211.43 L1325.56 1211.43 L1326.14 1211.43 L1326.73 1211.43 L1327.32 1211.43 L1327.9 1211.43 L1328.49 1211.43 L1329.08 1211.43 L1329.66 1211.43 L1330.25 1211.43 L1330.84 1211.43 L1331.42 1211.43 L1332.01 1211.43 L1332.6 1211.43 L1333.18 1211.43 L1333.77 1211.43 L1334.35 1211.43 L1334.94 1211.43 L1335.53 1211.43 L1336.11 1211.43 L1336.7 1211.43 L1337.29 1211.43 L1337.87 1211.43 L1338.46 1211.43 L1339.05 1211.43 L1339.63 1211.43 L1340.22 1211.43 L1340.8 1211.43 L1341.39 1211.43 L1341.98 1211.43 L1342.56 1211.43 L1343.15 1211.43 L1343.74 1211.43 L1344.32 1211.43 L1344.91 1211.43 L1345.5 1211.43 L1346.08 1211.43 L1346.67 1211.43 L1347.26 1211.43 L1347.84 1211.43 L1348.43 1211.43 L1349.01 1211.43 L1349.6 1211.43 L1350.19 1211.43 L1350.77 1211.43 L1351.36 1211.43 L1351.95 1211.43 L1352.53 1211.43 L1353.12 1211.43 L1353.71 1211.43 L1354.29 1211.43 L1354.88 1211.43 L1355.47 1211.43 L1356.05 1211.43 L1356.64 1211.43 L1357.22 1211.43 L1357.81 1211.43 L1358.4 1211.43 L1358.98 1211.43 L1359.57 1211.43 L1360.16 1211.43 L1360.74 1211.43 L1361.33 1211.43 L1361.92 1211.43 L1362.5 1211.43 L1363.09 1211.43 L1363.68 1211.43 L1364.26 1211.43 L1364.85 1211.43 L1365.43 1211.43 L1366.02 1211.43 L1366.61 1211.43 L1367.19 1211.43 L1367.78 1211.43 L1368.37 1211.43 L1368.95 1211.43 L1369.54 1211.43 L1370.13 1211.43 L1370.71 1211.43 L1371.3 1211.43 L1371.88 1211.43 L1372.47 1211.43 L1373.06 1211.43 L1373.64 1211.43 L1374.23 1211.43 L1374.82 1211.43 L1375.4 1211.43 L1375.99 1211.43 L1376.58 1211.43 L1377.16 1211.43 L1377.75 1211.43 L1378.34 1211.43 L1378.92 1211.43 L1379.51 1211.43 L1380.09 1211.43 L1380.68 1211.43 L1381.27 1211.43 L1381.85 1211.43 L1382.44 1211.43 L1383.03 1211.43 L1383.61 1211.43 L1384.2 1211.43 L1384.79 1211.43 L1385.37 1211.43 L1385.96 1211.43 L1386.55 1211.43 L1387.13 1211.43 L1387.72 1211.43 L1388.3 1211.43 L1388.89 1211.43 L1389.48 1211.43 L1390.06 1211.43 L1390.65 1211.43 L1391.24 1211.43 L1391.82 1211.43 L1392.41 1211.43 L1393 1211.43 L1393.58 1211.43 L1394.17 1211.43 L1394.75 1211.43 L1395.34 1211.43 L1395.93 1211.43 L1396.51 1211.43 L1397.1 1211.43 L1397.69 1211.43 L1398.27 1211.43 L1398.86 1211.43 L1399.45 1211.43 L1400.03 1211.43 L1400.62 1211.43 L1401.21 1211.43 L1401.79 1211.43 L1402.38 1211.43 L1402.96 1211.43 L1403.55 1211.43 L1404.14 1211.43 L1404.72 1211.43 L1405.31 1211.43 L1405.9 1211.43 L1406.48 1211.43 L1407.07 1211.43 L1407.66 1211.43 L1408.24 1211.43 L1408.83 1211.43 L1409.42 1211.43 L1410 1211.43 L1410.59 1211.43 L1411.17 1211.43 L1411.76 1211.43 L1412.35 1211.43 L1412.93 1211.43 L1413.52 1211.43 L1414.11 1211.43 L1414.69 1211.43 L1415.28 1211.43 L1415.87 1211.43 L1416.45 1211.43 L1417.04 1211.43 L1417.63 1211.43 L1418.21 1211.43 L1418.8 1211.43 L1419.38 1211.43 L1419.97 1211.43 L1420.56 1211.43 L1421.14 1211.43 L1421.73 1211.43 L1422.32 1211.43 L1422.9 1211.43 L1423.49 1211.43 L1424.08 1211.43 L1424.66 1211.43 L1425.25 1211.43 L1425.83 1211.43 L1426.42 1211.43 L1427.01 1211.43 L1427.59 1211.43 L1428.18 1211.43 L1428.77 1211.43 L1429.35 1211.43 L1429.94 1211.43 L1430.53 1211.43 L1431.11 1211.43 L1431.7 1211.43 L1432.29 1211.43 L1432.87 1211.43 L1433.46 1211.43 L1434.04 1211.43 L1434.63 1211.43 L1435.22 1211.43 L1435.8 1211.43 L1436.39 1211.43 L1436.98 1211.43 L1437.56 1211.43 L1438.15 1211.43 L1438.74 1211.43 L1439.32 1211.43 L1439.91 1211.43 L1440.5 1211.43 L1441.08 1211.43 L1441.67 1211.43 L1442.25 1211.43 L1442.84 1211.43 L1443.43 1211.43 L1444.01 1211.43 L1444.6 1211.43 L1445.19 1211.43 L1445.77 1211.43 L1446.36 1211.43 L1446.95 1211.43 L1447.53 1211.43 L1448.12 1211.43 L1448.7 1211.43 L1449.29 1211.43 L1449.88 1211.43 L1450.46 1211.43 L1451.05 1211.43 L1451.64 1211.43 L1452.22 1211.43 L1452.81 1211.43 L1453.4 1211.43 L1453.98 1211.43 L1454.57 1211.43 L1455.16 1211.43 L1455.74 1211.43 L1456.33 1211.43 L1456.91 1211.43 L1457.5 1211.43 L1458.09 1211.43 L1458.67 1211.43 L1459.26 1211.43 L1459.85 1211.43 L1460.43 1211.43 L1461.02 1211.43 L1461.61 1211.43 L1462.19 1211.43 L1462.78 1211.43 L1463.37 1211.43 L1463.95 1211.43 L1464.54 1211.43 L1465.12 1211.43 L1465.71 1211.43 L1466.3 1211.43 L1466.88 1211.43 L1467.47 1211.43 L1468.06 1211.43 L1468.64 1211.43 L1469.23 1211.43 L1469.82 1211.43 L1470.4 1211.43 L1470.99 1211.43 L1471.57 1211.43 L1472.16 1211.43 L1472.75 1211.43 L1473.33 1211.43 L1473.92 1211.43 L1474.51 1211.43 L1475.09 1211.43 L1475.68 1211.43 L1476.27 1211.43 L1476.85 1211.43 L1477.44 1211.43 L1478.03 1211.43 L1478.61 1211.43 L1479.2 1211.43 L1479.78 1211.43 L1480.37 1211.43 L1480.96 1211.43 L1481.54 1211.43 L1482.13 1211.43 L1482.72 1211.43 L1483.3 1211.43 L1483.89 1211.43 L1484.48 1211.43 L1485.06 1211.43 L1485.65 1211.43 L1486.24 1211.43 L1486.82 1211.43 L1487.41 1211.43 L1487.99 1211.43 L1488.58 1211.43 L1489.17 1211.43 L1489.75 1211.43 L1490.34 1211.43 L1490.93 1211.43 L1491.51 1211.43 L1492.1 1211.43 L1492.69 1211.43 L1493.27 1211.43 L1493.86 1211.43 L1494.45 1211.43 L1495.03 1211.43 L1495.62 1211.43 L1496.2 1211.43 L1496.79 1211.43 L1497.38 1211.43 L1497.96 1211.43 L1498.55 1211.43 L1499.14 1211.43 L1499.72 1211.43 L1500.31 1211.43 L1500.9 1211.43 L1501.48 1211.43 L1502.07 1211.43 L1502.65 1211.43 L1503.24 1211.43 L1503.83 1211.43 L1504.41 1211.43 L1505 1211.43 L1505.59 1211.43 L1506.17 1211.43 L1506.76 1211.43 L1507.35 1211.43 L1507.93 1211.43 L1508.52 1211.43 L1509.11 1211.43 L1509.69 1211.43 L1510.28 1211.43 L1510.86 1211.43 L1511.45 1211.43 L1512.04 1211.43 L1512.62 1211.43 L1513.21 1211.43 L1513.8 1211.43 L1514.38 1211.43 L1514.97 1211.43 L1515.56 1211.43 L1516.14 1211.43 L1516.73 1211.43 L1517.32 1211.43 L1517.9 1211.43 L1518.49 1211.43 L1519.07 1211.43 L1519.66 1211.43 L1520.25 1211.43 L1520.83 1211.43 L1521.42 1211.43 L1522.01 1211.43 L1522.59 1211.43 L1523.18 1211.43 L1523.77 1211.43 L1524.35 1211.43 L1524.94 1211.43 L1525.52 1211.43 L1526.11 1211.43 L1526.7 1211.43 L1527.28 1211.43 L1527.87 1211.43 L1528.46 1211.43 L1529.04 1211.43 L1529.63 1211.43 L1530.22 1211.43 L1530.8 1211.43 L1531.39 1211.43 L1531.98 1211.43 L1532.56 1211.43 L1533.15 1211.43 L1533.73 1211.43 L1534.32 1211.43 L1534.91 1211.43 L1535.49 1211.43 L1536.08 1211.43 L1536.67 1211.43 L1537.25 1211.43 L1537.84 1211.43 L1538.43 1211.43 L1539.01 1211.43 L1539.6 1211.43 L1540.19 1211.43 L1540.77 1211.43 L1541.36 1211.43 L1541.94 1211.43 L1542.53 1211.43 L1543.12 1211.43 L1543.7 1211.43 L1544.29 1211.43 L1544.88 1211.43 L1545.46 1211.43 L1546.05 1211.43 L1546.64 1211.43 L1547.22 1211.43 L1547.81 1211.43 L1548.4 1211.43 L1548.98 1211.43 L1549.57 1211.43 L1550.15 1211.43 L1550.74 1211.43 L1551.33 1211.43 L1551.91 1211.43 L1552.5 1211.43 L1553.09 1211.43 L1553.67 1211.43 L1554.26 1211.43 L1554.85 1211.43 L1555.43 1211.43 L1556.02 1211.43 L1556.6 1211.43 L1557.19 1211.43 L1557.78 1211.43 L1558.36 1211.43 L1558.95 1211.43 L1559.54 1211.43 L1560.12 1211.43 L1560.71 1211.43 L1561.3 1211.43 L1561.88 1211.43 L1562.47 1211.43 L1563.06 1211.43 L1563.64 1211.43 L1564.23 1211.43 L1564.81 1211.43 L1565.4 1211.43 L1565.99 1211.43 L1566.57 1211.43 L1567.16 1211.43 L1567.75 1211.43 L1568.33 1211.43 L1568.92 1211.43 L1569.51 1211.43 L1570.09 1211.43 L1570.68 1211.43 L1571.27 1211.43 L1571.85 1211.43 L1572.44 1211.43 L1573.02 1211.43 L1573.61 1211.43 L1574.2 1211.43 L1574.78 1211.43 L1575.37 1211.43 L1575.96 1211.43 L1576.54 1211.43 L1577.13 1211.43 L1577.72 1211.43 L1578.3 1211.43 L1578.89 1211.43 L1579.47 1211.43 L1580.06 1211.43 L1580.65 1211.43 L1581.23 1211.43 L1581.82 1211.43 L1582.41 1211.43 L1582.99 1211.43 L1583.58 1211.43 L1584.17 1211.43 L1584.75 1211.43 L1585.34 1211.43 L1585.93 1211.43 L1586.51 1211.43 L1587.1 1211.43 L1587.68 1211.43 L1588.27 1211.43 L1588.86 1211.43 L1589.44 1211.43 L1590.03 1211.43 L1590.62 1211.43 L1591.2 1211.43 L1591.79 1211.43 L1592.38 1211.43 L1592.96 1211.43 L1593.55 1211.43 L1594.14 1211.43 L1594.72 1211.43 L1595.31 1211.43 L1595.89 1211.43 L1596.48 1211.43 L1597.07 1211.43 L1597.65 1211.43 L1598.24 1211.43 L1598.83 1211.43 L1599.41 1211.43 L1600 1211.43 L1600.59 1211.43 L1601.17 1211.43 L1601.76 1211.43 L1602.34 1211.43 L1602.93 1211.43 L1603.52 1211.43 L1604.1 1211.43 L1604.69 1211.43 L1605.28 1211.43 L1605.86 1211.43 L1606.45 1211.43 L1607.04 1211.43 L1607.62 1211.43 L1608.21 1211.43 L1608.8 1211.43 L1609.38 1211.43 L1609.97 1211.43 L1610.55 1211.43 L1611.14 1211.43 L1611.73 1211.43 L1612.31 1211.43 L1612.9 1211.43 L1613.49 1211.43 L1614.07 1211.43 L1614.66 1211.43 L1615.25 1211.43 L1615.83 1211.43 L1616.42 1211.43 L1617.01 1211.43 L1617.59 1211.43 L1618.18 1211.43 L1618.76 1211.43 L1619.35 1211.43 L1619.94 1211.43 L1620.52 1211.43 L1621.11 1211.43 L1621.7 1211.43 L1622.28 1211.43 L1622.87 1211.43 L1623.46 1211.43 L1624.04 1211.43 L1624.63 1211.43 L1625.22 1211.43 L1625.8 1211.43 L1626.39 1211.43 L1626.97 1211.43 L1627.56 1211.43 L1628.15 1211.43 L1628.73 1211.43 L1629.32 1211.43 L1629.91 1211.43 L1630.49 1211.43 L1631.08 1211.43 L1631.67 1211.43 L1632.25 1211.43 L1632.84 1211.43 L1633.42 1211.43 L1634.01 1211.43 L1634.6 1211.43 L1635.18 1211.43 L1635.77 1211.43 L1636.36 1211.43 L1636.94 1211.43 L1637.53 1211.43 L1638.12 1211.43 L1638.7 1211.43 L1639.29 1211.43 L1639.88 1211.43 L1640.46 1211.43 L1641.05 1211.43 L1641.63 1211.43 L1642.22 1211.43 L1642.81 1211.43 L1643.39 1211.43 L1643.98 1211.43 L1644.57 1211.43 L1645.15 1211.43 L1645.74 1211.43 L1646.33 1211.43 L1646.91 1211.43 L1647.5 1211.43 L1648.09 1211.43 L1648.67 1211.43 L1649.26 1211.43 L1649.84 1211.43 L1650.43 1211.43 L1651.02 1211.43 L1651.6 1211.43 L1652.19 1211.43 L1652.78 1211.43 L1653.36 1211.43 L1653.95 1211.43 L1654.54 1211.43 L1655.12 1211.43 L1655.71 1211.43 L1656.29 1211.43 L1656.88 1211.43 L1657.47 1211.43 L1658.05 1211.43 L1658.64 1211.43 L1659.23 1211.43 L1659.81 1211.43 L1660.4 1211.43 L1660.99 1211.43 L1661.57 1211.43 L1662.16 1211.43 L1662.75 1211.43 L1663.33 1211.43 L1663.92 1211.43 L1664.5 1211.43 L1665.09 1211.43 L1665.68 1211.43 L1666.26 1211.43 L1666.85 1211.43 L1667.44 1211.43 L1668.02 1211.43 L1668.61 1211.43 L1669.2 1211.43 L1669.78 1211.43 L1670.37 1211.43 L1670.96 1211.43 L1671.54 1211.43 L1672.13 1211.43 L1672.71 1211.43 L1673.3 1211.43 L1673.89 1211.43 L1674.47 1211.43 L1675.06 1211.43 L1675.65 1211.43 L1676.23 1211.43 L1676.82 1211.43 L1677.41 1211.43 L1677.99 1211.43 L1678.58 1211.43 L1679.17 1211.43 L1679.75 1211.43 L1680.34 1211.43 L1680.92 1211.43 L1681.51 1211.43 L1682.1 1211.43 L1682.68 1211.43 L1683.27 1211.43 L1683.86 1211.43 L1684.44 1211.43 L1685.03 1211.43 L1685.62 1211.43 L1686.2 1211.43 L1686.79 1211.43 L1687.37 1211.43 L1687.96 1211.43 L1688.55 1211.43 L1689.13 1211.43 L1689.72 1211.43 L1690.31 1211.43 L1690.89 1211.43 L1691.48 1211.43 L1692.07 1211.43 L1692.65 1211.43 L1693.24 1211.43 L1693.83 1211.43 L1694.41 1211.43 L1695 1211.43 L1695.58 1211.43 L1696.17 1211.43 L1696.76 1211.43 L1697.34 1211.43 L1697.93 1211.43 L1698.52 1211.43 L1699.1 1211.43 L1699.69 1211.43 L1700.28 1211.43 L1700.86 1211.43 L1701.45 1211.43 L1702.04 1211.43 L1702.62 1211.43 L1703.21 1211.43 L1703.79 1211.43 L1704.38 1211.43 L1704.97 1211.43 L1705.55 1211.43 L1706.14 1211.43 L1706.73 1211.43 L1707.31 1211.43 L1707.9 1211.43 L1708.49 1211.43 L1709.07 1211.43 L1709.66 1211.43 L1710.24 1211.43 L1710.83 1211.43 L1711.42 1211.43 L1712 1211.43 L1712.59 1211.43 L1713.18 1211.43 L1713.76 1211.43 L1714.35 1211.43 L1714.94 1211.43 L1715.52 1211.43 L1716.11 1211.43 L1716.7 1211.43 L1717.28 1211.43 L1717.87 1211.43 L1718.45 1211.43 L1719.04 1211.43 L1719.63 1211.43 L1720.21 1211.43 L1720.8 1211.43 L1721.39 1211.43 L1721.97 1211.43 L1722.56 1211.43 L1723.15 1211.43 L1723.73 1211.43 L1724.32 1211.43 L1724.91 1211.43 L1725.49 1211.43 L1726.08 1211.43 L1726.66 1211.43 L1727.25 1211.43 L1727.84 1211.43 L1728.42 1211.43 L1729.01 1211.43 L1729.6 1211.43 L1730.18 1211.43 L1730.77 1211.43 L1731.36 1211.43 L1731.94 1211.43 L1732.53 1211.43 L1733.11 1211.43 L1733.7 1211.43 L1734.29 1211.43 L1734.87 1211.43 L1735.46 1211.43 L1736.05 1211.43 L1736.63 1211.43 L1737.22 1211.43 L1737.81 1211.43 L1738.39 1211.43 L1738.98 1211.43 L1739.57 1211.43 L1740.15 1211.43 L1740.74 1211.43 L1741.32 1211.43 L1741.91 1211.43 L1742.5 1211.43 L1743.08 1211.43 L1743.67 1211.43 L1744.26 1211.43 L1744.84 1211.43 L1745.43 1211.43 L1746.02 1211.43 L1746.6 1211.43 L1747.19 1211.43 L1747.78 1211.43 L1748.36 1211.43 L1748.95 1211.43 L1749.53 1211.43 L1750.12 1211.43 L1750.71 1211.43 L1751.29 1211.43 L1751.88 1211.43 L1752.47 1211.43 L1753.05 1211.43 L1753.64 1211.43 L1754.23 1211.43 L1754.81 1211.43 L1755.4 1211.43 L1755.99 1211.43 L1756.57 1211.43 L1757.16 1211.43 L1757.74 1211.43 L1758.33 1211.43 L1758.92 1211.43 L1759.5 1211.43 L1760.09 1211.43 L1760.68 1211.43 L1761.26 1211.43 L1761.85 1211.43 L1762.44 1211.43 L1763.02 1211.43 L1763.61 1211.43 L1764.19 1211.43 L1764.78 1211.43 L1765.37 1211.43 L1765.95 1211.43 L1766.54 1211.43 L1767.13 1211.43 L1767.71 1211.43 L1768.3 1211.43 L1768.89 1211.43 L1769.47 1211.43 L1770.06 1211.43 L1770.65 1211.43 L1771.23 1211.43 L1771.82 1211.43 L1772.4 1211.43 L1772.99 1211.43 L1773.58 1211.43 L1774.16 1211.43 L1774.75 1211.43 L1775.34 1211.43 L1775.92 1211.43 L1776.51 1211.43 L1777.1 1211.43 L1777.68 1211.43 L1778.27 1211.43 L1778.86 1211.43 L1779.44 1211.43 L1780.03 1211.43 L1780.61 1211.43 L1781.2 1211.43 L1781.79 1211.43 L1782.37 1211.43 L1782.96 1211.43 L1783.55 1211.43 L1784.13 1211.43 L1784.72 1211.43 L1785.31 1211.43 L1785.89 1211.43 L1786.48 1211.43 L1787.06 1211.43 L1787.65 1211.43 L1788.24 1211.43 L1788.82 1211.43 L1789.41 1211.43 L1790 1211.43 L1790.58 1211.43 L1791.17 1211.43 L1791.76 1211.43 L1792.34 1211.43 L1792.93 1211.43 L1793.52 1211.43 L1794.1 1211.43 L1794.69 1211.43 L1795.27 1211.43 L1795.86 1211.43 L1796.45 1211.43 L1797.03 1211.43 L1797.62 1211.43 L1798.21 1211.43 L1798.79 1211.43 L1799.38 1211.43 L1799.97 1211.43 L1800.55 1211.43 L1801.14 1211.43 L1801.73 1211.43 L1802.31 1211.43 L1802.9 1211.43 L1803.48 1211.43 L1804.07 1211.43 L1804.66 1211.43 L1805.24 1211.43 L1805.83 1211.43 L1806.42 1211.43 L1807 1211.43 L1807.59 1211.43 L1808.18 1211.43 L1808.76 1211.43 L1809.35 1211.43 L1809.94 1211.43 L1810.52 1211.43 L1811.11 1211.43 L1811.69 1211.43 L1812.28 1211.43 L1812.87 1211.43 L1813.45 1211.43 L1814.04 1211.43 L1814.63 1211.43 L1815.21 1211.43 L1815.8 1211.43 L1816.39 1211.43 L1816.97 1211.43 L1817.56 1211.43 L1818.14 1211.43 L1818.73 1211.43 L1819.32 1211.43 L1819.9 1211.43 L1820.49 1211.43 L1821.08 1211.43 L1821.66 1211.43 L1822.25 1211.43 L1822.84 1211.43 L1823.42 1211.43 L1824.01 1211.43 L1824.6 1211.43 L1825.18 1211.43 L1825.77 1211.43 L1826.35 1211.43 L1826.94 1211.43 L1827.53 1211.43 L1828.11 1211.43 L1828.7 1211.43 L1829.29 1211.43 L1829.87 1211.43 L1830.46 1211.43 L1831.05 1211.43 L1831.63 1211.43 L1832.22 1211.43 L1832.81 1211.43 L1833.39 1211.43 L1833.98 1211.43 L1834.56 1211.43 L1835.15 1211.43 L1835.74 1211.43 L1836.32 1211.43 L1836.91 1211.43 L1837.5 1211.43 L1838.08 1211.43 L1838.67 1211.43 L1839.26 1211.43 L1839.84 1211.43 L1840.43 1211.43 L1841.01 1211.43 L1841.6 1211.43 L1842.19 1211.43 L1842.77 1211.43 L1843.36 1211.43 L1843.95 1211.43 L1844.53 1211.43 L1845.12 1211.43 L1845.71 1211.43 L1846.29 1211.43 L1846.88 1211.43 L1847.47 1211.43 L1848.05 1211.43 L1848.64 1211.43 L1849.22 1211.43 L1849.81 1211.43 L1850.4 1211.43 L1850.98 1211.43 L1851.57 1211.43 L1852.16 1211.43 L1852.74 1211.43 L1853.33 1211.43 L1853.92 1211.43 L1854.5 1211.43 L1855.09 1211.43 L1855.68 1211.43 L1856.26 1211.43 L1856.85 1211.43 L1857.43 1211.43 L1858.02 1211.43 L1858.61 1211.43 L1859.19 1211.43 L1859.78 1211.43 L1860.37 1211.43 L1860.95 1211.43 L1861.54 1211.43 L1862.13 1211.43 L1862.71 1211.43 L1863.3 1211.43 L1863.88 1211.43 L1864.47 1211.43 L1865.06 1211.43 L1865.64 1211.43 L1866.23 1211.43 L1866.82 1211.43 L1867.4 1211.43 L1867.99 1211.43 L1868.58 1211.43 L1869.16 1211.43 L1869.75 1211.43 L1870.34 1211.43 L1870.92 1211.43 L1871.51 1211.43 L1872.09 1211.43 L1872.68 1211.43 L1873.27 1211.43 L1873.85 1211.43 L1874.44 1211.43 L1875.03 1211.43 L1875.61 1211.43 L1876.2 1211.43 L1876.79 1211.43 L1877.37 1211.43 L1877.96 1211.43 L1878.55 1211.43 L1879.13 1211.43 L1879.72 1211.43 L1880.3 1211.43 L1880.89 1211.43 L1881.48 1211.43 L1882.06 1211.43 L1882.65 1211.43 L1883.24 1211.43 L1883.82 1211.43 L1884.41 1211.43 L1885 1211.43 L1885.58 1211.43 L1886.17 1211.43 L1886.76 1211.43 L1887.34 1211.43 L1887.93 1211.43 L1888.51 1211.43 L1889.1 1211.43 L1889.69 1211.43 L1890.27 1211.43 L1890.86 1211.43 L1891.45 1211.43 L1892.03 1211.43 L1892.62 1211.43 L1893.21 1211.43 L1893.79 1211.43 L1894.38 1211.43 L1894.96 1211.43 L1895.55 1211.43 L1896.14 1211.43 L1896.72 1211.43 L1897.31 1211.43 L1897.9 1211.43 L1898.48 1211.43 L1899.07 1211.43 L1899.66 1211.43 L1900.24 1211.43 L1900.83 1211.43 L1901.42 1211.43 L1902 1211.43 L1902.59 1211.43 L1903.17 1211.43 L1903.76 1211.43 L1904.35 1211.43 L1904.93 1211.43 L1905.52 1211.43 L1906.11 1211.43 L1906.69 1211.43 L1907.28 1211.43 L1907.87 1211.43 L1908.45 1211.43 L1909.04 1211.43 L1909.63 1211.43 L1910.21 1211.43 L1910.8 1211.43 L1911.38 1211.43 L1911.97 1211.43 L1912.56 1211.43 L1913.14 1211.43 L1913.73 1211.43 L1914.32 1211.43 L1914.9 1211.43 L1915.49 1211.43 L1916.08 1211.43 L1916.66 1211.43 L1917.25 1211.43 L1917.83 1211.43 L1918.42 1211.43 L1919.01 1211.43 L1919.59 1211.43 L1920.18 1211.43 L1920.77 1211.43 L1921.35 1211.43 L1921.94 1211.43 L1922.53 1211.43 L1923.11 1211.43 L1923.7 1211.43 L1924.29 1211.43 L1924.87 1211.43 L1925.46 1211.43 L1926.04 1211.43 L1926.63 1211.43 L1927.22 1211.43 L1927.8 1211.43 L1928.39 1211.43 L1928.98 1211.43 L1929.56 1211.43 L1930.15 1211.43 L1930.74 1211.43 L1931.32 1211.43 L1931.91 1211.43 L1932.5 1211.43 L1933.08 1211.43 L1933.67 1211.43 L1934.25 1211.43 L1934.84 1211.43 L1935.43 1211.43 L1936.01 1211.43 L1936.6 1211.43 L1937.19 1211.43 L1937.77 1211.43 L1938.36 1211.43 L1938.95 1211.43 L1939.53 1211.43 L1940.12 1211.43 L1940.71 1211.43 L1941.29 1211.43 L1941.88 1211.43 L1942.46 1211.43 L1943.05 1211.43 L1943.64 1211.43 L1944.22 1211.43 L1944.81 1211.43 L1945.4 1211.43 L1945.98 1211.43 L1946.57 1211.43 L1947.16 1211.43 L1947.74 1211.43 L1948.33 1211.43 L1948.91 1211.43 L1949.5 1211.43 L1950.09 1211.43 L1950.67 1211.43 L1951.26 1211.43 L1951.85 1211.43 L1952.43 1211.43 L1953.02 1211.43 L1953.61 1211.43 L1954.19 1211.43 L1954.78 1211.43 L1955.37 1211.43 L1955.95 1211.43 L1956.54 1211.43 L1957.12 1211.43 L1957.71 1211.43 L1958.3 1211.43 L1958.88 1211.43 L1959.47 1211.43 L1960.06 1211.43 L1960.64 1211.43 L1961.23 1211.43 L1961.82 1211.43 L1962.4 1211.43 L1962.99 1211.43 L1963.58 1211.43 L1964.16 1211.43 L1964.75 1211.43 L1965.33 1211.43 L1965.92 1211.43 L1966.51 1211.43 L1967.09 1211.43 L1967.68 1211.43 L1968.27 1211.43 L1968.85 1211.43 L1969.44 1211.43 L1970.03 1211.43 L1970.61 1211.43 L1971.2 1211.43 L1971.78 1211.43 L1972.37 1211.43 L1972.96 1211.43 L1973.54 1211.43 L1974.13 1211.43 L1974.72 1211.43 L1975.3 1211.43 L1975.89 1211.43 L1976.48 1211.43 L1977.06 1211.43 L1977.65 1211.43 L1978.24 1211.43 L1978.82 1211.43 L1979.41 1211.43 L1979.99 1211.43 L1980.58 1211.43 L1981.17 1211.43 L1981.75 1211.43 L1982.34 1211.43 L1982.93 1211.43 L1983.51 1211.43 L1984.1 1211.43 L1984.69 1211.43 L1985.27 1211.43 L1985.86 1211.43 L1986.45 1211.43 L1987.03 1211.43 L1987.62 1211.43 L1988.2 1211.43 L1988.79 1211.43 L1989.38 1211.43 L1989.96 1211.43 L1990.55 1211.43 L1991.14 1211.43 L1991.72 1211.43 L1992.31 1211.43 L1992.9 1211.43 L1993.48 1211.43 L1994.07 1211.43 L1994.65 1211.43 L1995.24 1211.43 L1995.83 1211.43 L1996.41 1211.43 L1997 1211.43 L1997.59 1211.43 L1998.17 1211.43 L1998.76 1211.43 L1999.35 1211.43 L1999.93 1211.43 L2000.52 1211.43 L2001.11 1211.43 L2001.69 1211.43 L2002.28 1211.43 L2002.86 1211.43 L2003.45 1211.43 L2004.04 1211.43 L2004.62 1211.43 L2005.21 1211.43 L2005.8 1211.43 L2006.38 1211.43 L2006.97 1211.43 L2007.56 1211.43 L2008.14 1211.43 L2008.73 1211.43 L2009.32 1211.43 L2009.9 1211.43 L2010.49 1211.43 L2011.07 1211.43 L2011.66 1211.43 L2012.25 1211.43 L2012.83 1211.43 L2013.42 1211.43 L2014.01 1211.43 L2014.59 1211.43 L2015.18 1211.43 L2015.77 1211.43 L2016.35 1211.43 L2016.94 1211.43 L2017.53 1211.43 L2018.11 1211.43 L2018.7 1211.43 L2019.28 1211.43 L2019.87 1211.43 L2020.46 1211.43 L2021.04 1211.43 L2021.63 1211.43 L2022.22 1211.43 L2022.8 1211.43 L2023.39 1211.43 L2023.98 1211.43 L2024.56 1211.43 L2025.15 1211.43 L2025.73 1211.43 L2026.32 1211.43 L2026.91 1211.43 L2027.49 1211.43 L2028.08 1211.43 L2028.67 1211.43 L2029.25 1211.43 L2029.84 1211.43 L2030.43 1211.43 L2031.01 1211.43 L2031.6 1211.43 L2032.19 1211.43 L2032.77 1211.43 L2033.36 1211.43 L2033.94 1211.43 L2034.53 1211.43 L2035.12 1211.43 L2035.7 1211.43 L2036.29 1211.43 L2036.88 1211.43 L2037.46 1211.43 L2038.05 1211.43 L2038.64 1211.43 L2039.22 1211.43 L2039.81 1211.43 L2040.4 1211.43 L2040.98 1211.43 L2041.57 1211.43 L2042.15 1211.43 L2042.74 1211.43 L2043.33 1211.43 L2043.91 1211.43 L2044.5 1211.43 L2045.09 1211.43 L2045.67 1211.43 L2046.26 1211.43 L2046.85 1211.43 L2047.43 1211.43 L2048.02 1211.43 L2048.6 1211.43 L2049.19 1211.43 L2049.78 1211.43 L2050.36 1211.43 L2050.95 1211.43 L2051.54 1211.43 L2052.12 1211.43 L2052.71 1211.43 L2053.3 1211.43 L2053.88 1211.43 L2054.47 1211.43 L2055.06 1211.43 L2055.64 1211.43 L2056.23 1211.43 L2056.81 1211.43 L2057.4 1211.43 L2057.99 1211.43 L2058.57 1211.43 L2059.16 1211.43 L2059.75 1211.43 L2060.33 1211.43 L2060.92 1211.43 L2061.51 1211.43 L2062.09 1211.43 L2062.68 1211.43 L2063.27 1211.43 L2063.85 1211.43 L2064.44 1211.43 L2065.02 1211.43 L2065.61 1211.43 L2066.2 1211.43 L2066.78 1211.43 L2067.37 1211.43 L2067.96 1211.43 L2068.54 1211.43 L2069.13 1211.43 L2069.72 1211.43 L2070.3 1211.43 L2070.89 1211.43 L2071.48 1211.43 L2072.06 1211.43 L2072.65 1211.43 L2073.23 1211.43 L2073.82 1211.43 L2074.41 1211.43 L2074.99 1211.43 L2075.58 1211.43 L2076.17 1211.43 L2076.75 1211.43 L2077.34 1211.43 L2077.93 1211.43 L2078.51 1211.43 L2079.1 1211.43 L2079.68 1211.43 L2080.27 1211.43 L2080.86 1211.43 L2081.44 1211.43 L2082.03 1211.43 L2082.62 1211.43 L2083.2 1211.43 L2083.79 1211.43 L2084.38 1211.43 L2084.96 1211.43 L2085.55 1211.43 L2086.14 1211.43 L2086.72 1211.43 L2087.31 1211.43 L2087.89 1211.43 L2088.48 1211.43 L2089.07 1211.43 L2089.65 1211.43 L2090.24 1211.43 L2090.83 1211.43 L2091.41 1211.43 L2092 1211.43 L2092.59 1211.43 L2093.17 1211.43 L2093.76 1211.43 L2094.35 1211.43 L2094.93 1211.43 L2095.52 1211.43 L2096.1 1211.43 L2096.69 1211.43 L2097.28 1211.43 L2097.86 1211.43 L2098.45 1211.43 L2099.04 1211.43 L2099.62 1211.43 L2100.21 1211.43 L2100.8 1211.43 L2101.38 1211.43 L2101.97 1211.43 L2102.55 1211.43 L2103.14 1211.43 L2103.73 1211.43 L2104.31 1211.43 L2104.9 1211.43 L2105.49 1211.43 L2106.07 1211.43 L2106.66 1211.43 L2107.25 1211.43 L2107.83 1211.43 L2108.42 1211.43 L2109.01 1211.43 L2109.59 1211.43 L2110.18 1211.43 L2110.76 1211.43 L2111.35 1211.43 L2111.94 1211.43 L2112.52 1211.43 L2113.11 1211.43 L2113.7 1211.43 L2114.28 1211.43 L2114.87 1211.43 L2115.46 1211.43 L2116.04 1211.43 L2116.63 1211.43 L2117.22 1211.43 L2117.8 1211.43 L2118.39 1211.43 L2118.97 1211.43 L2119.56 1211.43 L2120.15 1211.43 L2120.73 1211.43 L2121.32 1211.43 L2121.91 1211.43 L2122.49 1211.43 L2123.08 1211.43 L2123.67 1211.43 L2124.25 1211.43 L2124.84 1211.43 L2125.42 1211.43 L2126.01 1211.43 L2126.6 1211.43 L2127.18 1211.43 L2127.77 1211.43 L2128.36 1211.43 L2128.94 1211.43 L2129.53 1211.43 L2130.12 1211.43 L2130.7 1211.43 L2131.29 1211.43 L2131.88 1211.43 L2132.46 1211.43 L2133.05 1211.43 L2133.63 1211.43 L2134.22 1211.43 L2134.81 1211.43 L2135.39 1211.43 L2135.98 1211.43 L2136.57 1211.43 L2137.15 1211.43 L2137.74 1211.43 L2138.33 1211.43 L2138.91 1211.43 L2139.5 1211.43 L2140.09 1211.43 L2140.67 1211.43 L2141.26 1211.43 L2141.84 1211.43 L2142.43 1211.43 L2143.02 1211.43 L2143.6 1211.43 L2144.19 1211.43 L2144.78 1211.43 L2145.36 1211.43 L2145.95 1211.43 L2146.54 1211.43 L2147.12 1211.43 L2147.71 1211.43 L2148.3 1211.43 L2148.88 1211.43 L2149.47 1211.43 L2150.05 1211.43 L2150.64 1211.43 L2151.23 1211.43 L2151.81 1211.43 L2152.4 1211.43 L2152.99 1211.43 L2153.57 1211.43 L2154.16 1211.43 L2154.75 1211.43 L2155.33 1211.43 L2155.92 1211.43 L2156.5 1211.43 L2157.09 1211.43 L2157.68 1211.43 L2158.26 1211.43 L2158.26 1211.27 L2157.68 1211.27 L2157.09 1211.27 L2156.5 1211.27 L2155.92 1211.27 L2155.33 1211.27 L2154.75 1211.27 L2154.16 1211.27 L2153.57 1211.27 L2152.99 1211.27 L2152.4 1211.27 L2151.81 1211.27 L2151.23 1211.27 L2150.64 1211.27 L2150.05 1211.27 L2149.47 1211.27 L2148.88 1211.27 L2148.3 1211.27 L2147.71 1211.27 L2147.12 1211.27 L2146.54 1211.27 L2145.95 1211.27 L2145.36 1211.27 L2144.78 1211.27 L2144.19 1211.27 L2143.6 1211.27 L2143.02 1211.27 L2142.43 1211.27 L2141.84 1211.27 L2141.26 1211.27 L2140.67 1211.27 L2140.09 1211.27 L2139.5 1211.27 L2138.91 1211.27 L2138.33 1211.27 L2137.74 1211.27 L2137.15 1211.27 L2136.57 1211.27 L2135.98 1211.27 L2135.39 1211.27 L2134.81 1211.27 L2134.22 1211.27 L2133.63 1211.27 L2133.05 1211.27 L2132.46 1211.27 L2131.88 1211.27 L2131.29 1211.27 L2130.7 1211.27 L2130.12 1211.27 L2129.53 1211.27 L2128.94 1211.27 L2128.36 1211.27 L2127.77 1211.27 L2127.18 1211.27 L2126.6 1211.27 L2126.01 1211.27 L2125.42 1211.27 L2124.84 1211.27 L2124.25 1211.27 L2123.67 1211.27 L2123.08 1211.27 L2122.49 1211.27 L2121.91 1211.27 L2121.32 1211.27 L2120.73 1211.27 L2120.15 1211.27 L2119.56 1211.27 L2118.97 1211.27 L2118.39 1211.27 L2117.8 1211.27 L2117.22 1211.27 L2116.63 1211.27 L2116.04 1211.27 L2115.46 1211.27 L2114.87 1211.27 L2114.28 1211.27 L2113.7 1211.27 L2113.11 1211.27 L2112.52 1211.27 L2111.94 1211.27 L2111.35 1211.27 L2110.76 1211.27 L2110.18 1211.27 L2109.59 1211.27 L2109.01 1211.27 L2108.42 1211.27 L2107.83 1211.27 L2107.25 1211.27 L2106.66 1211.27 L2106.07 1211.27 L2105.49 1211.27 L2104.9 1211.27 L2104.31 1211.27 L2103.73 1211.27 L2103.14 1211.27 L2102.55 1211.27 L2101.97 1211.27 L2101.38 1211.27 L2100.8 1211.27 L2100.21 1211.27 L2099.62 1211.27 L2099.04 1211.27 L2098.45 1211.27 L2097.86 1211.27 L2097.28 1211.27 L2096.69 1211.27 L2096.1 1211.27 L2095.52 1211.27 L2094.93 1211.27 L2094.35 1211.27 L2093.76 1211.27 L2093.17 1211.27 L2092.59 1211.27 L2092 1211.27 L2091.41 1211.27 L2090.83 1211.27 L2090.24 1211.27 L2089.65 1211.27 L2089.07 1211.27 L2088.48 1211.27 L2087.89 1211.27 L2087.31 1211.27 L2086.72 1211.27 L2086.14 1211.27 L2085.55 1211.27 L2084.96 1211.27 L2084.38 1211.27 L2083.79 1211.27 L2083.2 1211.27 L2082.62 1211.27 L2082.03 1211.27 L2081.44 1211.27 L2080.86 1211.27 L2080.27 1211.27 L2079.68 1211.27 L2079.1 1211.27 L2078.51 1211.27 L2077.93 1211.27 L2077.34 1211.27 L2076.75 1211.27 L2076.17 1211.27 L2075.58 1211.27 L2074.99 1211.27 L2074.41 1211.27 L2073.82 1211.27 L2073.23 1211.27 L2072.65 1211.27 L2072.06 1211.27 L2071.48 1211.27 L2070.89 1211.27 L2070.3 1211.27 L2069.72 1211.27 L2069.13 1211.27 L2068.54 1211.27 L2067.96 1211.27 L2067.37 1211.27 L2066.78 1211.27 L2066.2 1211.27 L2065.61 1211.27 L2065.02 1211.27 L2064.44 1211.27 L2063.85 1211.27 L2063.27 1211.27 L2062.68 1211.27 L2062.09 1211.27 L2061.51 1211.27 L2060.92 1211.27 L2060.33 1211.27 L2059.75 1211.27 L2059.16 1211.27 L2058.57 1211.27 L2057.99 1211.27 L2057.4 1211.27 L2056.81 1211.27 L2056.23 1211.27 L2055.64 1211.27 L2055.06 1211.27 L2054.47 1211.27 L2053.88 1211.27 L2053.3 1211.27 L2052.71 1211.27 L2052.12 1211.27 L2051.54 1211.27 L2050.95 1211.27 L2050.36 1211.27 L2049.78 1211.27 L2049.19 1211.27 L2048.6 1211.27 L2048.02 1211.27 L2047.43 1211.27 L2046.85 1211.27 L2046.26 1211.27 L2045.67 1211.27 L2045.09 1211.27 L2044.5 1211.27 L2043.91 1211.27 L2043.33 1211.27 L2042.74 1211.27 L2042.15 1211.27 L2041.57 1211.27 L2040.98 1211.27 L2040.4 1211.27 L2039.81 1211.27 L2039.22 1211.27 L2038.64 1211.27 L2038.05 1211.27 L2037.46 1211.27 L2036.88 1211.27 L2036.29 1211.27 L2035.7 1211.27 L2035.12 1211.27 L2034.53 1211.27 L2033.94 1211.27 L2033.36 1211.27 L2032.77 1211.27 L2032.19 1211.27 L2031.6 1211.27 L2031.01 1211.27 L2030.43 1211.27 L2029.84 1211.27 L2029.25 1211.27 L2028.67 1211.27 L2028.08 1211.27 L2027.49 1211.27 L2026.91 1211.27 L2026.32 1211.27 L2025.73 1211.27 L2025.15 1211.27 L2024.56 1211.27 L2023.98 1211.27 L2023.39 1211.27 L2022.8 1211.27 L2022.22 1211.27 L2021.63 1211.27 L2021.04 1211.27 L2020.46 1211.27 L2019.87 1211.27 L2019.28 1211.27 L2018.7 1211.27 L2018.11 1211.27 L2017.53 1211.27 L2016.94 1211.27 L2016.35 1211.27 L2015.77 1211.27 L2015.18 1211.27 L2014.59 1211.27 L2014.01 1211.27 L2013.42 1211.27 L2012.83 1211.27 L2012.25 1211.27 L2011.66 1211.27 L2011.07 1211.27 L2010.49 1211.27 L2009.9 1211.27 L2009.32 1211.27 L2008.73 1211.27 L2008.14 1211.27 L2007.56 1211.27 L2006.97 1211.27 L2006.38 1211.27 L2005.8 1211.27 L2005.21 1211.27 L2004.62 1211.27 L2004.04 1211.27 L2003.45 1211.27 L2002.86 1211.27 L2002.28 1211.27 L2001.69 1211.27 L2001.11 1211.27 L2000.52 1211.27 L1999.93 1211.27 L1999.35 1211.27 L1998.76 1211.27 L1998.17 1211.27 L1997.59 1211.27 L1997 1211.27 L1996.41 1211.27 L1995.83 1211.27 L1995.24 1211.27 L1994.65 1211.27 L1994.07 1211.27 L1993.48 1211.27 L1992.9 1211.27 L1992.31 1211.27 L1991.72 1211.27 L1991.14 1211.27 L1990.55 1211.27 L1989.96 1211.27 L1989.38 1211.27 L1988.79 1211.27 L1988.2 1211.27 L1987.62 1211.27 L1987.03 1211.27 L1986.45 1211.27 L1985.86 1211.27 L1985.27 1211.27 L1984.69 1211.27 L1984.1 1211.27 L1983.51 1211.27 L1982.93 1211.27 L1982.34 1211.27 L1981.75 1211.27 L1981.17 1211.27 L1980.58 1211.27 L1979.99 1211.27 L1979.41 1211.27 L1978.82 1211.27 L1978.24 1211.27 L1977.65 1211.27 L1977.06 1211.27 L1976.48 1211.27 L1975.89 1211.27 L1975.3 1211.27 L1974.72 1211.27 L1974.13 1211.27 L1973.54 1211.27 L1972.96 1211.27 L1972.37 1211.27 L1971.78 1211.27 L1971.2 1211.27 L1970.61 1211.27 L1970.03 1211.27 L1969.44 1211.27 L1968.85 1211.27 L1968.27 1211.27 L1967.68 1211.27 L1967.09 1211.27 L1966.51 1211.27 L1965.92 1211.27 L1965.33 1211.27 L1964.75 1211.27 L1964.16 1211.27 L1963.58 1211.27 L1962.99 1211.27 L1962.4 1211.27 L1961.82 1211.27 L1961.23 1211.27 L1960.64 1211.27 L1960.06 1211.27 L1959.47 1211.27 L1958.88 1211.27 L1958.3 1211.27 L1957.71 1211.27 L1957.12 1211.27 L1956.54 1211.27 L1955.95 1211.27 L1955.37 1211.27 L1954.78 1211.27 L1954.19 1211.27 L1953.61 1211.27 L1953.02 1211.27 L1952.43 1211.27 L1951.85 1211.27 L1951.26 1211.27 L1950.67 1211.27 L1950.09 1211.27 L1949.5 1211.27 L1948.91 1211.27 L1948.33 1211.27 L1947.74 1211.27 L1947.16 1211.27 L1946.57 1211.27 L1945.98 1211.27 L1945.4 1211.27 L1944.81 1211.27 L1944.22 1211.27 L1943.64 1211.27 L1943.05 1211.27 L1942.46 1211.27 L1941.88 1211.27 L1941.29 1211.27 L1940.71 1211.27 L1940.12 1211.27 L1939.53 1211.27 L1938.95 1211.27 L1938.36 1211.27 L1937.77 1211.27 L1937.19 1211.27 L1936.6 1211.27 L1936.01 1211.27 L1935.43 1211.27 L1934.84 1211.27 L1934.25 1211.27 L1933.67 1211.27 L1933.08 1211.27 L1932.5 1211.27 L1931.91 1211.27 L1931.32 1211.27 L1930.74 1211.27 L1930.15 1211.27 L1929.56 1211.27 L1928.98 1211.27 L1928.39 1211.27 L1927.8 1211.27 L1927.22 1211.27 L1926.63 1211.27 L1926.04 1211.27 L1925.46 1211.27 L1924.87 1211.27 L1924.29 1211.27 L1923.7 1211.27 L1923.11 1211.27 L1922.53 1211.27 L1921.94 1211.27 L1921.35 1211.27 L1920.77 1211.27 L1920.18 1211.27 L1919.59 1211.27 L1919.01 1211.27 L1918.42 1211.27 L1917.83 1211.27 L1917.25 1211.27 L1916.66 1211.27 L1916.08 1211.27 L1915.49 1211.27 L1914.9 1211.27 L1914.32 1211.27 L1913.73 1211.27 L1913.14 1211.27 L1912.56 1211.27 L1911.97 1211.27 L1911.38 1211.27 L1910.8 1211.27 L1910.21 1211.27 L1909.63 1211.27 L1909.04 1211.27 L1908.45 1211.27 L1907.87 1211.27 L1907.28 1211.27 L1906.69 1211.27 L1906.11 1211.27 L1905.52 1211.27 L1904.93 1211.27 L1904.35 1211.27 L1903.76 1211.27 L1903.17 1211.27 L1902.59 1211.27 L1902 1211.27 L1901.42 1211.27 L1900.83 1211.27 L1900.24 1211.27 L1899.66 1211.27 L1899.07 1211.27 L1898.48 1211.27 L1897.9 1211.27 L1897.31 1211.27 L1896.72 1211.27 L1896.14 1211.27 L1895.55 1211.27 L1894.96 1211.27 L1894.38 1211.27 L1893.79 1211.27 L1893.21 1211.27 L1892.62 1211.27 L1892.03 1211.27 L1891.45 1211.27 L1890.86 1211.27 L1890.27 1211.27 L1889.69 1211.27 L1889.1 1211.27 L1888.51 1211.27 L1887.93 1211.27 L1887.34 1211.27 L1886.76 1211.27 L1886.17 1211.27 L1885.58 1211.27 L1885 1211.27 L1884.41 1211.27 L1883.82 1211.27 L1883.24 1211.27 L1882.65 1211.27 L1882.06 1211.27 L1881.48 1211.27 L1880.89 1211.27 L1880.3 1211.27 L1879.72 1211.27 L1879.13 1211.27 L1878.55 1211.27 L1877.96 1211.27 L1877.37 1211.27 L1876.79 1211.27 L1876.2 1211.27 L1875.61 1211.27 L1875.03 1211.27 L1874.44 1211.27 L1873.85 1211.27 L1873.27 1211.27 L1872.68 1211.27 L1872.09 1211.27 L1871.51 1211.27 L1870.92 1211.27 L1870.34 1211.27 L1869.75 1211.27 L1869.16 1211.27 L1868.58 1211.27 L1867.99 1211.27 L1867.4 1211.27 L1866.82 1211.27 L1866.23 1211.27 L1865.64 1211.27 L1865.06 1211.27 L1864.47 1211.27 L1863.88 1211.27 L1863.3 1211.27 L1862.71 1211.27 L1862.13 1211.27 L1861.54 1211.27 L1860.95 1211.27 L1860.37 1211.27 L1859.78 1211.27 L1859.19 1211.27 L1858.61 1211.27 L1858.02 1211.27 L1857.43 1211.27 L1856.85 1211.27 L1856.26 1211.27 L1855.68 1211.27 L1855.09 1211.27 L1854.5 1211.27 L1853.92 1211.27 L1853.33 1211.27 L1852.74 1211.27 L1852.16 1211.27 L1851.57 1211.27 L1850.98 1211.27 L1850.4 1211.27 L1849.81 1211.27 L1849.22 1211.27 L1848.64 1211.27 L1848.05 1211.27 L1847.47 1211.27 L1846.88 1211.27 L1846.29 1211.27 L1845.71 1211.27 L1845.12 1211.27 L1844.53 1211.27 L1843.95 1211.27 L1843.36 1211.27 L1842.77 1211.27 L1842.19 1211.27 L1841.6 1211.27 L1841.01 1211.27 L1840.43 1211.27 L1839.84 1211.27 L1839.26 1211.27 L1838.67 1211.27 L1838.08 1211.27 L1837.5 1211.27 L1836.91 1211.27 L1836.32 1211.27 L1835.74 1211.27 L1835.15 1211.27 L1834.56 1211.27 L1833.98 1211.27 L1833.39 1211.27 L1832.81 1211.27 L1832.22 1211.27 L1831.63 1211.27 L1831.05 1211.27 L1830.46 1211.27 L1829.87 1211.27 L1829.29 1211.27 L1828.7 1211.27 L1828.11 1211.27 L1827.53 1211.27 L1826.94 1211.27 L1826.35 1211.27 L1825.77 1211.27 L1825.18 1211.27 L1824.6 1211.27 L1824.01 1211.27 L1823.42 1211.27 L1822.84 1211.27 L1822.25 1211.27 L1821.66 1211.27 L1821.08 1211.27 L1820.49 1211.27 L1819.9 1211.27 L1819.32 1211.27 L1818.73 1211.27 L1818.14 1211.27 L1817.56 1211.27 L1816.97 1211.27 L1816.39 1211.27 L1815.8 1211.27 L1815.21 1211.27 L1814.63 1211.27 L1814.04 1211.27 L1813.45 1211.27 L1812.87 1211.27 L1812.28 1211.27 L1811.69 1211.27 L1811.11 1211.27 L1810.52 1211.27 L1809.94 1211.27 L1809.35 1211.27 L1808.76 1211.27 L1808.18 1211.27 L1807.59 1211.27 L1807 1211.27 L1806.42 1211.27 L1805.83 1211.27 L1805.24 1211.27 L1804.66 1211.27 L1804.07 1211.27 L1803.48 1211.27 L1802.9 1211.27 L1802.31 1211.27 L1801.73 1211.27 L1801.14 1211.27 L1800.55 1211.27 L1799.97 1211.27 L1799.38 1211.27 L1798.79 1211.27 L1798.21 1211.27 L1797.62 1211.27 L1797.03 1211.27 L1796.45 1211.27 L1795.86 1211.27 L1795.27 1211.27 L1794.69 1211.27 L1794.1 1211.27 L1793.52 1211.27 L1792.93 1211.27 L1792.34 1211.27 L1791.76 1211.27 L1791.17 1211.27 L1790.58 1211.27 L1790 1211.27 L1789.41 1211.27 L1788.82 1211.27 L1788.24 1211.27 L1787.65 1211.27 L1787.06 1211.27 L1786.48 1211.27 L1785.89 1211.27 L1785.31 1211.27 L1784.72 1211.27 L1784.13 1211.27 L1783.55 1211.27 L1782.96 1211.27 L1782.37 1211.27 L1781.79 1211.27 L1781.2 1211.27 L1780.61 1211.27 L1780.03 1211.27 L1779.44 1211.27 L1778.86 1211.27 L1778.27 1211.27 L1777.68 1211.27 L1777.1 1211.27 L1776.51 1211.27 L1775.92 1211.27 L1775.34 1211.27 L1774.75 1211.27 L1774.16 1211.27 L1773.58 1211.27 L1772.99 1211.27 L1772.4 1211.27 L1771.82 1211.27 L1771.23 1211.27 L1770.65 1211.27 L1770.06 1211.27 L1769.47 1211.27 L1768.89 1211.27 L1768.3 1211.27 L1767.71 1211.27 L1767.13 1211.27 L1766.54 1211.27 L1765.95 1211.27 L1765.37 1211.27 L1764.78 1211.27 L1764.19 1211.27 L1763.61 1211.27 L1763.02 1211.27 L1762.44 1211.27 L1761.85 1211.27 L1761.26 1211.27 L1760.68 1211.27 L1760.09 1211.27 L1759.5 1211.27 L1758.92 1211.27 L1758.33 1211.27 L1757.74 1211.27 L1757.16 1211.27 L1756.57 1211.27 L1755.99 1211.27 L1755.4 1211.27 L1754.81 1211.27 L1754.23 1211.27 L1753.64 1211.27 L1753.05 1211.27 L1752.47 1211.27 L1751.88 1211.27 L1751.29 1211.27 L1750.71 1211.27 L1750.12 1211.27 L1749.53 1211.27 L1748.95 1211.27 L1748.36 1211.27 L1747.78 1211.27 L1747.19 1211.27 L1746.6 1211.27 L1746.02 1211.27 L1745.43 1211.27 L1744.84 1211.27 L1744.26 1211.27 L1743.67 1211.27 L1743.08 1211.27 L1742.5 1211.27 L1741.91 1211.27 L1741.32 1211.27 L1740.74 1211.27 L1740.15 1211.27 L1739.57 1211.27 L1738.98 1211.27 L1738.39 1211.27 L1737.81 1211.27 L1737.22 1211.27 L1736.63 1211.27 L1736.05 1211.27 L1735.46 1211.27 L1734.87 1211.27 L1734.29 1211.27 L1733.7 1211.27 L1733.11 1211.27 L1732.53 1211.27 L1731.94 1211.27 L1731.36 1211.27 L1730.77 1211.27 L1730.18 1211.27 L1729.6 1211.27 L1729.01 1211.27 L1728.42 1211.27 L1727.84 1211.27 L1727.25 1211.27 L1726.66 1211.27 L1726.08 1211.27 L1725.49 1211.27 L1724.91 1211.27 L1724.32 1211.27 L1723.73 1211.27 L1723.15 1211.27 L1722.56 1211.27 L1721.97 1211.27 L1721.39 1211.27 L1720.8 1211.27 L1720.21 1211.27 L1719.63 1211.27 L1719.04 1211.27 L1718.45 1211.27 L1717.87 1211.27 L1717.28 1211.27 L1716.7 1211.27 L1716.11 1211.27 L1715.52 1211.27 L1714.94 1211.27 L1714.35 1211.27 L1713.76 1211.27 L1713.18 1211.27 L1712.59 1211.27 L1712 1211.27 L1711.42 1211.27 L1710.83 1211.27 L1710.24 1211.27 L1709.66 1211.27 L1709.07 1211.27 L1708.49 1211.27 L1707.9 1211.27 L1707.31 1211.27 L1706.73 1211.27 L1706.14 1211.27 L1705.55 1211.27 L1704.97 1211.27 L1704.38 1211.27 L1703.79 1211.27 L1703.21 1211.27 L1702.62 1211.27 L1702.04 1211.27 L1701.45 1211.27 L1700.86 1211.27 L1700.28 1211.27 L1699.69 1211.27 L1699.1 1211.27 L1698.52 1211.27 L1697.93 1211.27 L1697.34 1211.27 L1696.76 1211.27 L1696.17 1211.27 L1695.58 1211.27 L1695 1211.27 L1694.41 1211.27 L1693.83 1211.27 L1693.24 1211.27 L1692.65 1211.27 L1692.07 1211.27 L1691.48 1211.27 L1690.89 1211.27 L1690.31 1211.27 L1689.72 1211.27 L1689.13 1211.27 L1688.55 1211.27 L1687.96 1211.27 L1687.37 1211.27 L1686.79 1211.27 L1686.2 1211.27 L1685.62 1211.27 L1685.03 1211.27 L1684.44 1211.27 L1683.86 1211.27 L1683.27 1211.27 L1682.68 1211.27 L1682.1 1211.27 L1681.51 1211.27 L1680.92 1211.27 L1680.34 1211.27 L1679.75 1211.27 L1679.17 1211.27 L1678.58 1211.27 L1677.99 1211.27 L1677.41 1211.27 L1676.82 1211.27 L1676.23 1211.27 L1675.65 1211.27 L1675.06 1211.27 L1674.47 1211.27 L1673.89 1211.27 L1673.3 1211.27 L1672.71 1211.27 L1672.13 1211.27 L1671.54 1211.27 L1670.96 1211.27 L1670.37 1211.27 L1669.78 1211.27 L1669.2 1211.27 L1668.61 1211.27 L1668.02 1211.27 L1667.44 1211.27 L1666.85 1211.27 L1666.26 1211.27 L1665.68 1211.27 L1665.09 1211.27 L1664.5 1211.27 L1663.92 1211.27 L1663.33 1211.27 L1662.75 1211.27 L1662.16 1211.27 L1661.57 1211.27 L1660.99 1211.27 L1660.4 1211.27 L1659.81 1211.27 L1659.23 1211.27 L1658.64 1211.27 L1658.05 1211.27 L1657.47 1211.27 L1656.88 1211.27 L1656.29 1211.27 L1655.71 1211.27 L1655.12 1211.27 L1654.54 1211.27 L1653.95 1211.27 L1653.36 1211.27 L1652.78 1211.27 L1652.19 1211.27 L1651.6 1211.27 L1651.02 1211.27 L1650.43 1211.27 L1649.84 1211.27 L1649.26 1211.27 L1648.67 1211.27 L1648.09 1211.27 L1647.5 1211.27 L1646.91 1211.27 L1646.33 1211.27 L1645.74 1211.27 L1645.15 1211.27 L1644.57 1211.27 L1643.98 1211.27 L1643.39 1211.27 L1642.81 1211.27 L1642.22 1211.27 L1641.63 1211.27 L1641.05 1211.27 L1640.46 1211.27 L1639.88 1211.27 L1639.29 1211.27 L1638.7 1211.27 L1638.12 1211.27 L1637.53 1211.27 L1636.94 1211.27 L1636.36 1211.27 L1635.77 1211.27 L1635.18 1211.27 L1634.6 1211.27 L1634.01 1211.27 L1633.42 1211.27 L1632.84 1211.27 L1632.25 1211.27 L1631.67 1211.27 L1631.08 1211.27 L1630.49 1211.27 L1629.91 1211.27 L1629.32 1211.27 L1628.73 1211.27 L1628.15 1211.27 L1627.56 1211.27 L1626.97 1211.27 L1626.39 1211.27 L1625.8 1211.27 L1625.22 1211.27 L1624.63 1211.27 L1624.04 1211.27 L1623.46 1211.27 L1622.87 1211.27 L1622.28 1211.27 L1621.7 1211.27 L1621.11 1211.27 L1620.52 1211.27 L1619.94 1211.27 L1619.35 1211.27 L1618.76 1211.27 L1618.18 1211.27 L1617.59 1211.27 L1617.01 1211.27 L1616.42 1211.27 L1615.83 1211.27 L1615.25 1211.27 L1614.66 1211.27 L1614.07 1211.27 L1613.49 1211.27 L1612.9 1211.27 L1612.31 1211.27 L1611.73 1211.27 L1611.14 1211.27 L1610.55 1211.27 L1609.97 1211.27 L1609.38 1211.27 L1608.8 1211.27 L1608.21 1211.27 L1607.62 1211.27 L1607.04 1211.27 L1606.45 1211.27 L1605.86 1211.27 L1605.28 1211.27 L1604.69 1211.27 L1604.1 1211.27 L1603.52 1211.27 L1602.93 1211.27 L1602.34 1211.27 L1601.76 1211.27 L1601.17 1211.27 L1600.59 1211.27 L1600 1211.27 L1599.41 1211.27 L1598.83 1211.27 L1598.24 1211.27 L1597.65 1211.27 L1597.07 1211.27 L1596.48 1211.27 L1595.89 1211.27 L1595.31 1211.27 L1594.72 1211.27 L1594.14 1211.27 L1593.55 1211.27 L1592.96 1211.27 L1592.38 1211.27 L1591.79 1211.27 L1591.2 1211.27 L1590.62 1211.27 L1590.03 1211.27 L1589.44 1211.27 L1588.86 1211.27 L1588.27 1211.27 L1587.68 1211.27 L1587.1 1211.27 L1586.51 1211.27 L1585.93 1211.27 L1585.34 1211.27 L1584.75 1211.27 L1584.17 1211.27 L1583.58 1211.27 L1582.99 1211.27 L1582.41 1211.27 L1581.82 1211.27 L1581.23 1211.27 L1580.65 1211.27 L1580.06 1211.27 L1579.47 1211.27 L1578.89 1211.27 L1578.3 1211.27 L1577.72 1211.27 L1577.13 1211.27 L1576.54 1211.27 L1575.96 1211.27 L1575.37 1211.27 L1574.78 1211.27 L1574.2 1211.27 L1573.61 1211.27 L1573.02 1211.27 L1572.44 1211.27 L1571.85 1211.27 L1571.27 1211.27 L1570.68 1211.27 L1570.09 1211.27 L1569.51 1211.27 L1568.92 1211.27 L1568.33 1211.27 L1567.75 1211.27 L1567.16 1211.27 L1566.57 1211.27 L1565.99 1211.27 L1565.4 1211.27 L1564.81 1211.27 L1564.23 1211.27 L1563.64 1211.27 L1563.06 1211.27 L1562.47 1211.27 L1561.88 1211.27 L1561.3 1211.27 L1560.71 1211.27 L1560.12 1211.27 L1559.54 1211.27 L1558.95 1211.27 L1558.36 1211.27 L1557.78 1211.27 L1557.19 1211.27 L1556.6 1211.27 L1556.02 1211.27 L1555.43 1211.27 L1554.85 1211.27 L1554.26 1211.27 L1553.67 1211.27 L1553.09 1211.27 L1552.5 1211.27 L1551.91 1211.27 L1551.33 1211.27 L1550.74 1211.27 L1550.15 1211.27 L1549.57 1211.27 L1548.98 1211.27 L1548.4 1211.27 L1547.81 1211.27 L1547.22 1211.27 L1546.64 1211.27 L1546.05 1211.27 L1545.46 1211.27 L1544.88 1211.27 L1544.29 1211.27 L1543.7 1211.27 L1543.12 1211.27 L1542.53 1211.27 L1541.94 1211.27 L1541.36 1211.27 L1540.77 1211.27 L1540.19 1211.27 L1539.6 1211.27 L1539.01 1211.27 L1538.43 1211.27 L1537.84 1211.27 L1537.25 1211.27 L1536.67 1211.27 L1536.08 1211.27 L1535.49 1211.27 L1534.91 1211.27 L1534.32 1211.27 L1533.73 1211.27 L1533.15 1211.27 L1532.56 1211.27 L1531.98 1211.27 L1531.39 1211.27 L1530.8 1211.27 L1530.22 1211.27 L1529.63 1211.27 L1529.04 1211.27 L1528.46 1211.27 L1527.87 1211.27 L1527.28 1211.27 L1526.7 1211.27 L1526.11 1211.27 L1525.52 1211.27 L1524.94 1211.27 L1524.35 1211.27 L1523.77 1211.27 L1523.18 1211.27 L1522.59 1211.27 L1522.01 1211.27 L1521.42 1211.27 L1520.83 1211.27 L1520.25 1211.27 L1519.66 1211.27 L1519.07 1211.27 L1518.49 1211.27 L1517.9 1211.27 L1517.32 1211.27 L1516.73 1211.27 L1516.14 1211.27 L1515.56 1211.27 L1514.97 1211.27 L1514.38 1211.27 L1513.8 1211.27 L1513.21 1211.27 L1512.62 1211.27 L1512.04 1211.27 L1511.45 1211.27 L1510.86 1211.27 L1510.28 1211.27 L1509.69 1211.27 L1509.11 1211.27 L1508.52 1211.27 L1507.93 1211.27 L1507.35 1211.27 L1506.76 1211.27 L1506.17 1211.27 L1505.59 1211.27 L1505 1211.27 L1504.41 1211.27 L1503.83 1211.27 L1503.24 1211.27 L1502.65 1211.27 L1502.07 1211.27 L1501.48 1211.27 L1500.9 1211.27 L1500.31 1211.27 L1499.72 1211.27 L1499.14 1211.27 L1498.55 1211.27 L1497.96 1211.27 L1497.38 1211.27 L1496.79 1211.27 L1496.2 1211.27 L1495.62 1211.27 L1495.03 1211.27 L1494.45 1211.27 L1493.86 1211.27 L1493.27 1211.27 L1492.69 1211.27 L1492.1 1211.27 L1491.51 1211.27 L1490.93 1211.27 L1490.34 1211.27 L1489.75 1211.27 L1489.17 1211.27 L1488.58 1211.27 L1487.99 1211.27 L1487.41 1211.27 L1486.82 1211.27 L1486.24 1211.27 L1485.65 1211.27 L1485.06 1211.27 L1484.48 1211.27 L1483.89 1211.27 L1483.3 1211.27 L1482.72 1211.27 L1482.13 1211.27 L1481.54 1211.27 L1480.96 1211.27 L1480.37 1211.27 L1479.78 1211.27 L1479.2 1211.27 L1478.61 1211.27 L1478.03 1211.27 L1477.44 1211.27 L1476.85 1211.27 L1476.27 1211.27 L1475.68 1211.27 L1475.09 1211.27 L1474.51 1211.27 L1473.92 1211.27 L1473.33 1211.27 L1472.75 1211.27 L1472.16 1211.27 L1471.57 1211.27 L1470.99 1211.27 L1470.4 1211.27 L1469.82 1211.27 L1469.23 1211.27 L1468.64 1211.27 L1468.06 1211.27 L1467.47 1211.27 L1466.88 1211.27 L1466.3 1211.27 L1465.71 1211.27 L1465.12 1211.27 L1464.54 1211.27 L1463.95 1211.27 L1463.37 1211.27 L1462.78 1211.27 L1462.19 1211.27 L1461.61 1211.27 L1461.02 1211.27 L1460.43 1211.27 L1459.85 1211.27 L1459.26 1211.27 L1458.67 1211.27 L1458.09 1211.27 L1457.5 1211.27 L1456.91 1211.27 L1456.33 1211.27 L1455.74 1211.27 L1455.16 1211.27 L1454.57 1211.27 L1453.98 1211.27 L1453.4 1211.27 L1452.81 1211.27 L1452.22 1211.27 L1451.64 1211.27 L1451.05 1211.27 L1450.46 1211.27 L1449.88 1211.27 L1449.29 1211.27 L1448.7 1211.27 L1448.12 1211.27 L1447.53 1211.27 L1446.95 1211.27 L1446.36 1211.27 L1445.77 1211.27 L1445.19 1211.27 L1444.6 1211.27 L1444.01 1211.27 L1443.43 1211.27 L1442.84 1211.27 L1442.25 1211.27 L1441.67 1211.27 L1441.08 1211.27 L1440.5 1211.27 L1439.91 1211.27 L1439.32 1211.27 L1438.74 1211.27 L1438.15 1211.27 L1437.56 1211.27 L1436.98 1211.27 L1436.39 1211.27 L1435.8 1211.27 L1435.22 1211.27 L1434.63 1211.27 L1434.04 1211.27 L1433.46 1211.27 L1432.87 1211.27 L1432.29 1211.27 L1431.7 1211.27 L1431.11 1211.27 L1430.53 1211.27 L1429.94 1211.27 L1429.35 1211.27 L1428.77 1211.27 L1428.18 1211.27 L1427.59 1211.27 L1427.01 1211.27 L1426.42 1211.27 L1425.83 1211.27 L1425.25 1211.27 L1424.66 1211.27 L1424.08 1211.27 L1423.49 1211.27 L1422.9 1211.27 L1422.32 1211.27 L1421.73 1211.27 L1421.14 1211.27 L1420.56 1211.27 L1419.97 1211.27 L1419.38 1211.27 L1418.8 1211.27 L1418.21 1211.27 L1417.63 1211.27 L1417.04 1211.27 L1416.45 1211.27 L1415.87 1211.27 L1415.28 1211.27 L1414.69 1211.27 L1414.11 1211.27 L1413.52 1211.27 L1412.93 1211.27 L1412.35 1211.27 L1411.76 1211.27 L1411.17 1211.27 L1410.59 1211.27 L1410 1211.27 L1409.42 1211.27 L1408.83 1211.27 L1408.24 1211.27 L1407.66 1211.27 L1407.07 1211.27 L1406.48 1211.27 L1405.9 1211.27 L1405.31 1211.27 L1404.72 1211.27 L1404.14 1211.27 L1403.55 1211.27 L1402.96 1211.27 L1402.38 1211.27 L1401.79 1211.27 L1401.21 1211.27 L1400.62 1211.27 L1400.03 1211.27 L1399.45 1211.27 L1398.86 1211.27 L1398.27 1211.27 L1397.69 1211.27 L1397.1 1211.27 L1396.51 1211.27 L1395.93 1211.27 L1395.34 1211.27 L1394.75 1211.27 L1394.17 1211.27 L1393.58 1211.27 L1393 1211.27 L1392.41 1211.27 L1391.82 1211.27 L1391.24 1211.27 L1390.65 1211.27 L1390.06 1211.27 L1389.48 1211.27 L1388.89 1211.27 L1388.3 1211.27 L1387.72 1211.27 L1387.13 1211.27 L1386.55 1211.27 L1385.96 1211.27 L1385.37 1211.27 L1384.79 1211.27 L1384.2 1211.27 L1383.61 1211.27 L1383.03 1211.27 L1382.44 1211.27 L1381.85 1211.27 L1381.27 1211.27 L1380.68 1211.27 L1380.09 1211.27 L1379.51 1211.27 L1378.92 1211.27 L1378.34 1211.27 L1377.75 1211.27 L1377.16 1211.27 L1376.58 1211.27 L1375.99 1211.27 L1375.4 1211.27 L1374.82 1211.27 L1374.23 1211.27 L1373.64 1211.27 L1373.06 1211.27 L1372.47 1211.27 L1371.88 1211.27 L1371.3 1211.27 L1370.71 1211.27 L1370.13 1211.27 L1369.54 1211.27 L1368.95 1211.27 L1368.37 1211.27 L1367.78 1211.27 L1367.19 1211.27 L1366.61 1211.27 L1366.02 1211.27 L1365.43 1211.27 L1364.85 1211.27 L1364.26 1211.27 L1363.68 1211.27 L1363.09 1211.27 L1362.5 1211.27 L1361.92 1211.27 L1361.33 1211.27 L1360.74 1211.27 L1360.16 1211.27 L1359.57 1211.27 L1358.98 1211.27 L1358.4 1211.27 L1357.81 1211.27 L1357.22 1211.27 L1356.64 1211.27 L1356.05 1211.27 L1355.47 1211.27 L1354.88 1211.27 L1354.29 1211.27 L1353.71 1211.27 L1353.12 1211.27 L1352.53 1211.27 L1351.95 1211.27 L1351.36 1211.27 L1350.77 1211.27 L1350.19 1211.27 L1349.6 1211.27 L1349.01 1211.27 L1348.43 1211.27 L1347.84 1211.27 L1347.26 1211.27 L1346.67 1211.27 L1346.08 1211.27 L1345.5 1211.27 L1344.91 1211.27 L1344.32 1211.27 L1343.74 1211.27 L1343.15 1211.27 L1342.56 1211.27 L1341.98 1211.27 L1341.39 1211.27 L1340.8 1211.27 L1340.22 1211.27 L1339.63 1211.27 L1339.05 1211.27 L1338.46 1211.27 L1337.87 1211.27 L1337.29 1211.27 L1336.7 1211.27 L1336.11 1211.27 L1335.53 1211.27 L1334.94 1211.27 L1334.35 1211.27 L1333.77 1211.27 L1333.18 1211.27 L1332.6 1211.27 L1332.01 1211.27 L1331.42 1211.27 L1330.84 1211.27 L1330.25 1211.27 L1329.66 1211.27 L1329.08 1211.27 L1328.49 1211.27 L1327.9 1211.27 L1327.32 1211.27 L1326.73 1211.27 L1326.14 1211.27 L1325.56 1211.27 L1324.97 1211.27 L1324.39 1211.27 L1323.8 1211.27 L1323.21 1211.27 L1322.63 1211.27 L1322.04 1211.27 L1321.45 1211.27 L1320.87 1211.27 L1320.28 1211.27 L1319.69 1211.27 L1319.11 1211.27 L1318.52 1211.27 L1317.93 1211.27 L1317.35 1211.27 L1316.76 1211.27 L1316.18 1211.27 L1315.59 1211.27 L1315 1211.27 L1314.42 1211.27 L1313.83 1211.27 L1313.24 1211.27 L1312.66 1211.27 L1312.07 1211.27 L1311.48 1211.27 L1310.9 1211.27 L1310.31 1211.27 L1309.73 1211.27 L1309.14 1211.27 L1308.55 1211.27 L1307.97 1211.27 L1307.38 1211.27 L1306.79 1211.27 L1306.21 1211.27 L1305.62 1211.27 L1305.03 1211.27 L1304.45 1211.27 L1303.86 1211.27 L1303.27 1211.27 L1302.69 1211.27 L1302.1 1211.27 L1301.52 1211.27 L1300.93 1211.27 L1300.34 1211.27 L1299.76 1211.27 L1299.17 1211.27 L1298.58 1211.27 L1298 1211.27 L1297.41 1211.27 L1296.82 1211.27 L1296.24 1211.27 L1295.65 1211.27 L1295.06 1211.27 L1294.48 1211.27 L1293.89 1211.27 L1293.31 1211.27 L1292.72 1211.27 L1292.13 1211.27 L1291.55 1211.27 L1290.96 1211.27 L1290.37 1211.27 L1289.79 1211.27 L1289.2 1211.27 L1288.61 1211.27 L1288.03 1211.27 L1287.44 1211.27 L1286.86 1211.27 L1286.27 1211.27 L1285.68 1211.27 L1285.1 1211.27 L1284.51 1211.27 L1283.92 1211.27 L1283.34 1211.27 L1282.75 1211.27 L1282.16 1211.27 L1281.58 1211.27 L1280.99 1211.27 L1280.4 1211.27 L1279.82 1211.27 L1279.23 1211.27 L1278.65 1211.27 L1278.06 1211.27 L1277.47 1211.27 L1276.89 1211.27 L1276.3 1211.27 L1275.71 1211.27 L1275.13 1211.27 L1274.54 1211.27 L1273.95 1211.27 L1273.37 1211.27 L1272.78 1211.27 L1272.19 1211.27 L1271.61 1211.27 L1271.02 1211.27 L1270.44 1211.27 L1269.85 1211.27 L1269.26 1211.27 L1268.68 1211.27 L1268.09 1211.27 L1267.5 1211.27 L1266.92 1211.27 L1266.33 1211.27 L1265.74 1211.27 L1265.16 1211.27 L1264.57 1211.27 L1263.98 1211.27 L1263.4 1211.27 L1262.81 1211.27 L1262.23 1211.27 L1261.64 1211.27 L1261.05 1211.27 L1260.47 1211.27 L1259.88 1211.27 L1259.29 1211.27 L1258.71 1211.27 L1258.12 1211.27 L1257.53 1211.27 L1256.95 1211.27 L1256.36 1211.27 L1255.78 1211.27 L1255.19 1211.27 L1254.6 1211.27 L1254.02 1211.27 L1253.43 1211.27 L1252.84 1211.27 L1252.26 1211.27 L1251.67 1211.27 L1251.08 1211.27 L1250.5 1211.27 L1249.91 1211.27 L1249.32 1211.27 L1248.74 1211.27 L1248.15 1211.27 L1247.57 1211.27 L1246.98 1211.27 L1246.39 1211.27 L1245.81 1211.27 L1245.22 1211.27 L1244.63 1211.27 L1244.05 1211.27 L1243.46 1211.27 L1242.87 1211.27 L1242.29 1211.27 L1241.7 1211.27 L1241.11 1211.27 L1240.53 1211.27 L1239.94 1211.27 L1239.36 1211.27 L1238.77 1211.27 L1238.18 1211.27 L1237.6 1211.27 L1237.01 1211.27 L1236.42 1211.27 L1235.84 1211.27 L1235.25 1211.27 L1234.66 1211.27 L1234.08 1211.27 L1233.49 1211.27 L1232.91 1211.27 L1232.32 1211.27 L1231.73 1211.27 L1231.15 1211.27 L1230.56 1211.27 L1229.97 1211.27 L1229.39 1211.27 L1228.8 1211.27 L1228.21 1211.27 L1227.63 1211.27 L1227.04 1211.27 L1226.45 1211.27 L1225.87 1211.27 L1225.28 1211.27 L1224.7 1211.27 L1224.11 1211.27 L1223.52 1211.27 L1222.94 1211.27 L1222.35 1211.27 L1221.76 1211.27 L1221.18 1211.27 L1220.59 1211.27 L1220 1211.27 L1219.42 1211.27 L1218.83 1211.27 L1218.24 1211.27 L1217.66 1211.27 L1217.07 1211.27 L1216.49 1211.27 L1215.9 1211.27 L1215.31 1211.27 L1214.73 1211.27 L1214.14 1211.27 L1213.55 1211.27 L1212.97 1211.27 L1212.38 1211.27 L1211.79 1211.27 L1211.21 1211.27 L1210.62 1211.27 L1210.03 1211.27 L1209.45 1211.27 L1208.86 1211.27 L1208.28 1211.27 L1207.69 1211.27 L1207.1 1211.27 L1206.52 1211.27 L1205.93 1211.27 L1205.34 1211.27 L1204.76 1211.27 L1204.17 1211.27 L1203.58 1211.27 L1203 1211.27 L1202.41 1211.27 L1201.83 1211.27 L1201.24 1211.27 L1200.65 1211.27 L1200.07 1211.27 L1199.48 1211.27 L1198.89 1211.27 L1198.31 1211.27 L1197.72 1211.27 L1197.13 1211.27 L1196.55 1211.27 L1195.96 1211.27 L1195.37 1211.27 L1194.79 1211.27 L1194.2 1211.27 L1193.62 1211.27 L1193.03 1211.27 L1192.44 1211.27 L1191.86 1211.27 L1191.27 1211.27 L1190.68 1211.27 L1190.1 1211.27 L1189.51 1211.27 L1188.92 1211.27 L1188.34 1211.27 L1187.75 1211.27 L1187.16 1211.27 L1186.58 1211.27 L1185.99 1211.27 L1185.41 1211.27 L1184.82 1211.27 L1184.23 1211.27 L1183.65 1211.27 L1183.06 1211.27 L1182.47 1211.27 L1181.89 1211.27 L1181.3 1211.27 L1180.71 1211.27 L1180.13 1211.27 L1179.54 1211.27 L1178.96 1211.27 L1178.37 1211.27 L1177.78 1211.27 L1177.2 1211.27 L1176.61 1211.27 L1176.02 1211.27 L1175.44 1211.27 L1174.85 1211.27 L1174.26 1211.27 L1173.68 1211.27 L1173.09 1211.27 L1172.5 1211.27 L1171.92 1211.27 L1171.33 1211.27 L1170.75 1211.27 L1170.16 1211.27 L1169.57 1211.27 L1168.99 1211.27 L1168.4 1211.27 L1167.81 1211.27 L1167.23 1211.27 L1166.64 1211.27 L1166.05 1211.27 L1165.47 1211.27 L1164.88 1211.27 L1164.29 1211.27 L1163.71 1211.27 L1163.12 1211.27 L1162.54 1211.27 L1161.95 1211.27 L1161.36 1211.27 L1160.78 1211.27 L1160.19 1211.27 L1159.6 1211.27 L1159.02 1211.27 L1158.43 1211.27 L1157.84 1211.27 L1157.26 1211.27 L1156.67 1211.27 L1156.09 1211.27 L1155.5 1211.27 L1154.91 1211.27 L1154.33 1211.27 L1153.74 1211.27 L1153.15 1211.27 L1152.57 1211.27 L1151.98 1211.27 L1151.39 1211.27 L1150.81 1211.27 L1150.22 1211.27 L1149.63 1211.27 L1149.05 1211.27 L1148.46 1211.27 L1147.88 1211.27 L1147.29 1211.27 L1146.7 1211.27 L1146.12 1211.27 L1145.53 1211.27 L1144.94 1211.27 L1144.36 1211.27 L1143.77 1211.27 L1143.18 1211.27 L1142.6 1211.27 L1142.01 1211.27 L1141.42 1211.27 L1140.84 1211.27 L1140.25 1211.27 L1139.67 1211.27 L1139.08 1211.27 L1138.49 1211.27 L1137.91 1211.27 L1137.32 1211.27 L1136.73 1211.27 L1136.15 1211.27 L1135.56 1211.27 L1134.97 1211.27 L1134.39 1211.27 L1133.8 1211.27 L1133.21 1211.27 L1132.63 1211.27 L1132.04 1211.27 L1131.46 1211.27 L1130.87 1211.27 L1130.28 1211.27 L1129.7 1211.27 L1129.11 1211.27 L1128.52 1211.27 L1127.94 1211.27 L1127.35 1211.27 L1126.76 1211.27 L1126.18 1211.27 L1125.59 1211.27 L1125.01 1211.27 L1124.42 1211.27 L1123.83 1211.27 L1123.25 1211.27 L1122.66 1211.27 L1122.07 1211.27 L1121.49 1211.27 L1120.9 1211.27 L1120.31 1211.27 L1119.73 1211.27 L1119.14 1211.27 L1118.55 1211.27 L1117.97 1211.27 L1117.38 1211.27 L1116.8 1211.27 L1116.21 1211.27 L1115.62 1211.27 L1115.04 1211.27 L1114.45 1211.27 L1113.86 1211.27 L1113.28 1211.27 L1112.69 1211.27 L1112.1 1211.27 L1111.52 1211.27 L1110.93 1211.27 L1110.34 1211.27 L1109.76 1211.27 L1109.17 1211.27 L1108.59 1211.27 L1108 1211.27 L1107.41 1211.27 L1106.83 1211.27 L1106.24 1211.27 L1105.65 1211.27 L1105.07 1211.27 L1104.48 1211.27 L1103.89 1211.27 L1103.31 1211.27 L1102.72 1211.27 L1102.14 1211.27 L1101.55 1211.27 L1100.96 1211.27 L1100.38 1211.27 L1099.79 1211.27 L1099.2 1211.27 L1098.62 1211.27 L1098.03 1211.27 L1097.44 1211.27 L1096.86 1211.27 L1096.27 1211.27 L1095.68 1211.27 L1095.1 1211.27 L1094.51 1211.27 L1093.93 1211.27 L1093.34 1211.27 L1092.75 1211.27 L1092.17 1211.27 L1091.58 1211.27 L1090.99 1211.27 L1090.41 1211.27 L1089.82 1211.27 L1089.23 1211.27 L1088.65 1211.27 L1088.06 1211.27 L1087.47 1211.27 L1086.89 1211.27 L1086.3 1211.27 L1085.72 1211.27 L1085.13 1211.27 L1084.54 1211.27 L1083.96 1211.27 L1083.37 1211.27 L1082.78 1211.27 L1082.2 1211.27 L1081.61 1211.27 L1081.02 1211.27 L1080.44 1211.27 L1079.85 1211.27 L1079.26 1211.27 L1078.68 1211.27 L1078.09 1211.27 L1077.51 1211.27 L1076.92 1211.27 L1076.33 1211.27 L1075.75 1211.27 L1075.16 1211.27 L1074.57 1211.27 L1073.99 1211.27 L1073.4 1211.27 L1072.81 1211.27 L1072.23 1211.27 L1071.64 1211.27 L1071.06 1211.27 L1070.47 1211.27 L1069.88 1211.27 L1069.3 1211.27 L1068.71 1211.27 L1068.12 1211.27 L1067.54 1211.27 L1066.95 1211.27 L1066.36 1211.27 L1065.78 1211.27 L1065.19 1211.27 L1064.6 1211.27 L1064.02 1211.27 L1063.43 1211.27 L1062.85 1211.27 L1062.26 1211.27 L1061.67 1211.27 L1061.09 1211.27 L1060.5 1211.27 L1059.91 1211.27 L1059.33 1211.27 L1058.74 1211.27 L1058.15 1211.27 L1057.57 1211.27 L1056.98 1211.27 L1056.39 1211.27 L1055.81 1211.27 L1055.22 1211.27 L1054.64 1211.27 L1054.05 1211.27 L1053.46 1211.27 L1052.88 1211.27 L1052.29 1211.27 L1051.7 1211.27 L1051.12 1211.27 L1050.53 1211.27 L1049.94 1211.27 L1049.36 1211.27 L1048.77 1211.27 L1048.19 1211.27 L1047.6 1211.27 L1047.01 1211.27 L1046.43 1211.27 L1045.84 1211.27 L1045.25 1211.27 L1044.67 1211.27 L1044.08 1211.27 L1043.49 1211.27 L1042.91 1211.27 L1042.32 1211.27 L1041.73 1211.27 L1041.15 1211.27 L1040.56 1211.27 L1039.98 1211.27 L1039.39 1211.27 L1038.8 1211.27 L1038.22 1211.27 L1037.63 1211.27 L1037.04 1211.27 L1036.46 1211.27 L1035.87 1211.27 L1035.28 1211.27 L1034.7 1211.27 L1034.11 1211.27 L1033.52 1211.27 L1032.94 1211.27 L1032.35 1211.27 L1031.77 1211.27 L1031.18 1211.27 L1030.59 1211.27 L1030.01 1211.27 L1029.42 1211.27 L1028.83 1211.27 L1028.25 1211.27 L1027.66 1211.27 L1027.07 1211.27 L1026.49 1211.27 L1025.9 1211.27 L1025.32 1211.27 L1024.73 1211.27 L1024.14 1211.27 L1023.56 1211.27 L1022.97 1211.27 L1022.38 1211.27 L1021.8 1211.27 L1021.21 1211.27 L1020.62 1211.27 L1020.04 1211.27 L1019.45 1211.27 L1018.86 1211.27 L1018.28 1211.27 L1017.69 1211.27 L1017.11 1211.27 L1016.52 1211.27 L1015.93 1211.27 L1015.35 1211.27 L1014.76 1211.27 L1014.17 1211.27 L1013.59 1211.27 L1013 1211.27 L1012.41 1211.27 L1011.83 1211.27 L1011.24 1211.27 L1010.65 1211.27 L1010.07 1211.27 L1009.48 1211.27 L1008.9 1211.27 L1008.31 1211.27 L1007.72 1211.27 L1007.14 1211.27 L1006.55 1211.27 L1005.96 1211.27 L1005.38 1211.27 L1004.79 1211.27 L1004.2 1211.27 L1003.62 1211.27 L1003.03 1211.27 L1002.44 1211.27 L1001.86 1211.27 L1001.27 1211.27 L1000.69 1211.27 L1000.1 1211.27 L999.513 1211.27 L998.926 1211.27 L998.34 1211.27 L997.754 1211.27 L997.167 1211.27 L996.581 1211.27 L995.994 1211.27 L995.408 1211.27 L994.822 1211.27 L994.235 1211.27 L993.649 1211.27 L993.062 1211.27 L992.476 1211.27 L991.889 1211.27 L991.303 1211.27 L990.717 1211.27 L990.13 1211.27 L989.544 1211.27 L988.957 1211.27 L988.371 1211.27 L987.785 1211.27 L987.198 1211.27 L986.612 1211.27 L986.025 1211.27  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip632)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1211.35 986.612,1211.35 987.198,1211.35 987.785,1211.35 988.371,1211.35 988.957,1211.35 989.544,1211.35 990.13,1211.35 990.717,1211.35 991.303,1211.35 991.889,1211.35 992.476,1211.35 993.062,1211.35 993.649,1211.35 994.235,1211.35 994.822,1211.35 995.408,1211.35 995.994,1211.35 996.581,1211.35 997.167,1211.35 997.754,1211.35 998.34,1211.35 998.926,1211.35 999.513,1211.35 1000.1,1211.35 1000.69,1211.35 1001.27,1211.35 1001.86,1211.35 1002.44,1211.35 1003.03,1211.35 1003.62,1211.35 1004.2,1211.35 1004.79,1211.35 1005.38,1211.35 1005.96,1211.35 1006.55,1211.35 1007.14,1211.35 1007.72,1211.35 1008.31,1211.35 1008.9,1211.35 1009.48,1211.35 1010.07,1211.35 1010.65,1211.35 1011.24,1211.35 1011.83,1211.35 1012.41,1211.35 1013,1211.35 1013.59,1211.35 1014.17,1211.35 1014.76,1211.35 1015.35,1211.35 1015.93,1211.35 1016.52,1211.35 1017.11,1211.35 1017.69,1211.35 1018.28,1211.35 1018.86,1211.35 1019.45,1211.35 1020.04,1211.35 1020.62,1211.35 1021.21,1211.35 1021.8,1211.35 1022.38,1211.35 1022.97,1211.35 1023.56,1211.35 1024.14,1211.35 1024.73,1211.35 1025.32,1211.35 1025.9,1211.35 1026.49,1211.35 1027.07,1211.35 1027.66,1211.35 1028.25,1211.35 1028.83,1211.35 1029.42,1211.35 1030.01,1211.35 1030.59,1211.35 1031.18,1211.35 1031.77,1211.35 1032.35,1211.35 1032.94,1211.35 1033.52,1211.35 1034.11,1211.35 1034.7,1211.35 1035.28,1211.35 1035.87,1211.35 1036.46,1211.35 1037.04,1211.35 1037.63,1211.35 1038.22,1211.35 1038.8,1211.35 1039.39,1211.35 1039.98,1211.35 1040.56,1211.35 1041.15,1211.35 1041.73,1211.35 1042.32,1211.35 1042.91,1211.35 1043.49,1211.35 1044.08,1211.35 1044.67,1211.35 1045.25,1211.35 1045.84,1211.35 1046.43,1211.35 1047.01,1211.35 1047.6,1211.35 1048.19,1211.35 1048.77,1211.35 1049.36,1211.35 1049.94,1211.35 1050.53,1211.35 1051.12,1211.35 1051.7,1211.35 1052.29,1211.35 1052.88,1211.35 1053.46,1211.35 1054.05,1211.35 1054.64,1211.35 1055.22,1211.35 1055.81,1211.35 1056.39,1211.35 1056.98,1211.35 1057.57,1211.35 1058.15,1211.35 1058.74,1211.35 1059.33,1211.35 1059.91,1211.35 1060.5,1211.35 1061.09,1211.35 1061.67,1211.35 1062.26,1211.35 1062.85,1211.35 1063.43,1211.35 1064.02,1211.35 1064.6,1211.35 1065.19,1211.35 1065.78,1211.35 1066.36,1211.35 1066.95,1211.35 1067.54,1211.35 1068.12,1211.35 1068.71,1211.35 1069.3,1211.35 1069.88,1211.35 1070.47,1211.35 1071.06,1211.35 1071.64,1211.35 1072.23,1211.35 1072.81,1211.35 1073.4,1211.35 1073.99,1211.35 1074.57,1211.35 1075.16,1211.35 1075.75,1211.35 1076.33,1211.35 1076.92,1211.35 1077.51,1211.35 1078.09,1211.35 1078.68,1211.35 1079.26,1211.35 1079.85,1211.35 1080.44,1211.35 1081.02,1211.35 1081.61,1211.35 1082.2,1211.35 1082.78,1211.35 1083.37,1211.35 1083.96,1211.35 1084.54,1211.35 1085.13,1211.35 1085.72,1211.35 1086.3,1211.35 1086.89,1211.35 1087.47,1211.35 1088.06,1211.35 1088.65,1211.35 1089.23,1211.35 1089.82,1211.35 1090.41,1211.35 1090.99,1211.35 1091.58,1211.35 1092.17,1211.35 1092.75,1211.35 1093.34,1211.35 1093.93,1211.35 1094.51,1211.35 1095.1,1211.35 1095.68,1211.35 1096.27,1211.35 1096.86,1211.35 1097.44,1211.35 1098.03,1211.35 1098.62,1211.35 1099.2,1211.35 1099.79,1211.35 1100.38,1211.35 1100.96,1211.35 1101.55,1211.35 1102.14,1211.35 1102.72,1211.35 1103.31,1211.35 1103.89,1211.35 1104.48,1211.35 1105.07,1211.35 1105.65,1211.35 1106.24,1211.35 1106.83,1211.35 1107.41,1211.35 1108,1211.35 1108.59,1211.35 1109.17,1211.35 1109.76,1211.35 1110.34,1211.35 1110.93,1211.35 1111.52,1211.35 1112.1,1211.35 1112.69,1211.35 1113.28,1211.35 1113.86,1211.35 1114.45,1211.35 1115.04,1211.35 1115.62,1211.35 1116.21,1211.35 1116.8,1211.35 1117.38,1211.35 1117.97,1211.35 1118.55,1211.35 1119.14,1211.35 1119.73,1211.35 1120.31,1211.35 1120.9,1211.35 1121.49,1211.35 1122.07,1211.35 1122.66,1211.35 1123.25,1211.35 1123.83,1211.35 1124.42,1211.35 1125.01,1211.35 1125.59,1211.35 1126.18,1211.35 1126.76,1211.35 1127.35,1211.35 1127.94,1211.35 1128.52,1211.35 1129.11,1211.35 1129.7,1211.35 1130.28,1211.35 1130.87,1211.35 1131.46,1211.35 1132.04,1211.35 1132.63,1211.35 1133.21,1211.35 1133.8,1211.35 1134.39,1211.35 1134.97,1211.35 1135.56,1211.35 1136.15,1211.35 1136.73,1211.35 1137.32,1211.35 1137.91,1211.35 1138.49,1211.35 1139.08,1211.35 1139.67,1211.35 1140.25,1211.35 1140.84,1211.35 1141.42,1211.35 1142.01,1211.35 1142.6,1211.35 1143.18,1211.35 1143.77,1211.35 1144.36,1211.35 1144.94,1211.35 1145.53,1211.35 1146.12,1211.35 1146.7,1211.35 1147.29,1211.35 1147.88,1211.35 1148.46,1211.35 1149.05,1211.35 1149.63,1211.35 1150.22,1211.35 1150.81,1211.35 1151.39,1211.35 1151.98,1211.35 1152.57,1211.35 1153.15,1211.35 1153.74,1211.35 1154.33,1211.35 1154.91,1211.35 1155.5,1211.35 1156.09,1211.35 1156.67,1211.35 1157.26,1211.35 1157.84,1211.35 1158.43,1211.35 1159.02,1211.35 1159.6,1211.35 1160.19,1211.35 1160.78,1211.35 1161.36,1211.35 1161.95,1211.35 1162.54,1211.35 1163.12,1211.35 1163.71,1211.35 1164.29,1211.35 1164.88,1211.35 1165.47,1211.35 1166.05,1211.35 1166.64,1211.35 1167.23,1211.35 1167.81,1211.35 1168.4,1211.35 1168.99,1211.35 1169.57,1211.35 1170.16,1211.35 1170.75,1211.35 1171.33,1211.35 1171.92,1211.35 1172.5,1211.35 1173.09,1211.35 1173.68,1211.35 1174.26,1211.35 1174.85,1211.35 1175.44,1211.35 1176.02,1211.35 1176.61,1211.35 1177.2,1211.35 1177.78,1211.35 1178.37,1211.35 1178.96,1211.35 1179.54,1211.35 1180.13,1211.35 1180.71,1211.35 1181.3,1211.35 1181.89,1211.35 1182.47,1211.35 1183.06,1211.35 1183.65,1211.35 1184.23,1211.35 1184.82,1211.35 1185.41,1211.35 1185.99,1211.35 1186.58,1211.35 1187.16,1211.35 1187.75,1211.35 1188.34,1211.35 1188.92,1211.35 1189.51,1211.35 1190.1,1211.35 1190.68,1211.35 1191.27,1211.35 1191.86,1211.35 1192.44,1211.35 1193.03,1211.35 1193.62,1211.35 1194.2,1211.35 1194.79,1211.35 1195.37,1211.35 1195.96,1211.35 1196.55,1211.35 1197.13,1211.35 1197.72,1211.35 1198.31,1211.35 1198.89,1211.35 1199.48,1211.35 1200.07,1211.35 1200.65,1211.35 1201.24,1211.35 1201.83,1211.35 1202.41,1211.35 1203,1211.35 1203.58,1211.35 1204.17,1211.35 1204.76,1211.35 1205.34,1211.35 1205.93,1211.35 1206.52,1211.35 1207.1,1211.35 1207.69,1211.35 1208.28,1211.35 1208.86,1211.35 1209.45,1211.35 1210.03,1211.35 1210.62,1211.35 1211.21,1211.35 1211.79,1211.35 1212.38,1211.35 1212.97,1211.35 1213.55,1211.35 1214.14,1211.35 1214.73,1211.35 1215.31,1211.35 1215.9,1211.35 1216.49,1211.35 1217.07,1211.35 1217.66,1211.35 1218.24,1211.35 1218.83,1211.35 1219.42,1211.35 1220,1211.35 1220.59,1211.35 1221.18,1211.35 1221.76,1211.35 1222.35,1211.35 1222.94,1211.35 1223.52,1211.35 1224.11,1211.35 1224.7,1211.35 1225.28,1211.35 1225.87,1211.35 1226.45,1211.35 1227.04,1211.35 1227.63,1211.35 1228.21,1211.35 1228.8,1211.35 1229.39,1211.35 1229.97,1211.35 1230.56,1211.35 1231.15,1211.35 1231.73,1211.35 1232.32,1211.35 1232.91,1211.35 1233.49,1211.35 1234.08,1211.35 1234.66,1211.35 1235.25,1211.35 1235.84,1211.35 1236.42,1211.35 1237.01,1211.35 1237.6,1211.35 1238.18,1211.35 1238.77,1211.35 1239.36,1211.35 1239.94,1211.35 1240.53,1211.35 1241.11,1211.35 1241.7,1211.35 1242.29,1211.35 1242.87,1211.35 1243.46,1211.35 1244.05,1211.35 1244.63,1211.35 1245.22,1211.35 1245.81,1211.35 1246.39,1211.35 1246.98,1211.35 1247.57,1211.35 1248.15,1211.35 1248.74,1211.35 1249.32,1211.35 1249.91,1211.35 1250.5,1211.35 1251.08,1211.35 1251.67,1211.35 1252.26,1211.35 1252.84,1211.35 1253.43,1211.35 1254.02,1211.35 1254.6,1211.35 1255.19,1211.35 1255.78,1211.35 1256.36,1211.35 1256.95,1211.35 1257.53,1211.35 1258.12,1211.35 1258.71,1211.35 1259.29,1211.35 1259.88,1211.35 1260.47,1211.35 1261.05,1211.35 1261.64,1211.35 1262.23,1211.35 1262.81,1211.35 1263.4,1211.35 1263.98,1211.35 1264.57,1211.35 1265.16,1211.35 1265.74,1211.35 1266.33,1211.35 1266.92,1211.35 1267.5,1211.35 1268.09,1211.35 1268.68,1211.35 1269.26,1211.35 1269.85,1211.35 1270.44,1211.35 1271.02,1211.35 1271.61,1211.35 1272.19,1211.35 1272.78,1211.35 1273.37,1211.35 1273.95,1211.35 1274.54,1211.35 1275.13,1211.35 1275.71,1211.35 1276.3,1211.35 1276.89,1211.35 1277.47,1211.35 1278.06,1211.35 1278.65,1211.35 1279.23,1211.35 1279.82,1211.35 1280.4,1211.35 1280.99,1211.35 1281.58,1211.35 1282.16,1211.35 1282.75,1211.35 1283.34,1211.35 1283.92,1211.35 1284.51,1211.35 1285.1,1211.35 1285.68,1211.35 1286.27,1211.35 1286.86,1211.35 1287.44,1211.35 1288.03,1211.35 1288.61,1211.35 1289.2,1211.35 1289.79,1211.35 1290.37,1211.35 1290.96,1211.35 1291.55,1211.35 1292.13,1211.35 1292.72,1211.35 1293.31,1211.35 1293.89,1211.35 1294.48,1211.35 1295.06,1211.35 1295.65,1211.35 1296.24,1211.35 1296.82,1211.35 1297.41,1211.35 1298,1211.35 1298.58,1211.35 1299.17,1211.35 1299.76,1211.35 1300.34,1211.35 1300.93,1211.35 1301.52,1211.35 1302.1,1211.35 1302.69,1211.35 1303.27,1211.35 1303.86,1211.35 1304.45,1211.35 1305.03,1211.35 1305.62,1211.35 1306.21,1211.35 1306.79,1211.35 1307.38,1211.35 1307.97,1211.35 1308.55,1211.35 1309.14,1211.35 1309.73,1211.35 1310.31,1211.35 1310.9,1211.35 1311.48,1211.35 1312.07,1211.35 1312.66,1211.35 1313.24,1211.35 1313.83,1211.35 1314.42,1211.35 1315,1211.35 1315.59,1211.35 1316.18,1211.35 1316.76,1211.35 1317.35,1211.35 1317.93,1211.35 1318.52,1211.35 1319.11,1211.35 1319.69,1211.35 1320.28,1211.35 1320.87,1211.35 1321.45,1211.35 1322.04,1211.35 1322.63,1211.35 1323.21,1211.35 1323.8,1211.35 1324.39,1211.35 1324.97,1211.35 1325.56,1211.35 1326.14,1211.35 1326.73,1211.35 1327.32,1211.35 1327.9,1211.35 1328.49,1211.35 1329.08,1211.35 1329.66,1211.35 1330.25,1211.35 1330.84,1211.35 1331.42,1211.35 1332.01,1211.35 1332.6,1211.35 1333.18,1211.35 1333.77,1211.35 1334.35,1211.35 1334.94,1211.35 1335.53,1211.35 1336.11,1211.35 1336.7,1211.35 1337.29,1211.35 1337.87,1211.35 1338.46,1211.35 1339.05,1211.35 1339.63,1211.35 1340.22,1211.35 1340.8,1211.35 1341.39,1211.35 1341.98,1211.35 1342.56,1211.35 1343.15,1211.35 1343.74,1211.35 1344.32,1211.35 1344.91,1211.35 1345.5,1211.35 1346.08,1211.35 1346.67,1211.35 1347.26,1211.35 1347.84,1211.35 1348.43,1211.35 1349.01,1211.35 1349.6,1211.35 1350.19,1211.35 1350.77,1211.35 1351.36,1211.35 1351.95,1211.35 1352.53,1211.35 1353.12,1211.35 1353.71,1211.35 1354.29,1211.35 1354.88,1211.35 1355.47,1211.35 1356.05,1211.35 1356.64,1211.35 1357.22,1211.35 1357.81,1211.35 1358.4,1211.35 1358.98,1211.35 1359.57,1211.35 1360.16,1211.35 1360.74,1211.35 1361.33,1211.35 1361.92,1211.35 1362.5,1211.35 1363.09,1211.35 1363.68,1211.35 1364.26,1211.35 1364.85,1211.35 1365.43,1211.35 1366.02,1211.35 1366.61,1211.35 1367.19,1211.35 1367.78,1211.35 1368.37,1211.35 1368.95,1211.35 1369.54,1211.35 1370.13,1211.35 1370.71,1211.35 1371.3,1211.35 1371.88,1211.35 1372.47,1211.35 1373.06,1211.35 1373.64,1211.35 1374.23,1211.35 1374.82,1211.35 1375.4,1211.35 1375.99,1211.35 1376.58,1211.35 1377.16,1211.35 1377.75,1211.35 1378.34,1211.35 1378.92,1211.35 1379.51,1211.35 1380.09,1211.35 1380.68,1211.35 1381.27,1211.35 1381.85,1211.35 1382.44,1211.35 1383.03,1211.35 1383.61,1211.35 1384.2,1211.35 1384.79,1211.35 1385.37,1211.35 1385.96,1211.35 1386.55,1211.35 1387.13,1211.35 1387.72,1211.35 1388.3,1211.35 1388.89,1211.35 1389.48,1211.35 1390.06,1211.35 1390.65,1211.35 1391.24,1211.35 1391.82,1211.35 1392.41,1211.35 1393,1211.35 1393.58,1211.35 1394.17,1211.35 1394.75,1211.35 1395.34,1211.35 1395.93,1211.35 1396.51,1211.35 1397.1,1211.35 1397.69,1211.35 1398.27,1211.35 1398.86,1211.35 1399.45,1211.35 1400.03,1211.35 1400.62,1211.35 1401.21,1211.35 1401.79,1211.35 1402.38,1211.35 1402.96,1211.35 1403.55,1211.35 1404.14,1211.35 1404.72,1211.35 1405.31,1211.35 1405.9,1211.35 1406.48,1211.35 1407.07,1211.35 1407.66,1211.35 1408.24,1211.35 1408.83,1211.35 1409.42,1211.35 1410,1211.35 1410.59,1211.35 1411.17,1211.35 1411.76,1211.35 1412.35,1211.35 1412.93,1211.35 1413.52,1211.35 1414.11,1211.35 1414.69,1211.35 1415.28,1211.35 1415.87,1211.35 1416.45,1211.35 1417.04,1211.35 1417.63,1211.35 1418.21,1211.35 1418.8,1211.35 1419.38,1211.35 1419.97,1211.35 1420.56,1211.35 1421.14,1211.35 1421.73,1211.35 1422.32,1211.35 1422.9,1211.35 1423.49,1211.35 1424.08,1211.35 1424.66,1211.35 1425.25,1211.35 1425.83,1211.35 1426.42,1211.35 1427.01,1211.35 1427.59,1211.35 1428.18,1211.35 1428.77,1211.35 1429.35,1211.35 1429.94,1211.35 1430.53,1211.35 1431.11,1211.35 1431.7,1211.35 1432.29,1211.35 1432.87,1211.35 1433.46,1211.35 1434.04,1211.35 1434.63,1211.35 1435.22,1211.35 1435.8,1211.35 1436.39,1211.35 1436.98,1211.35 1437.56,1211.35 1438.15,1211.35 1438.74,1211.35 1439.32,1211.35 1439.91,1211.35 1440.5,1211.35 1441.08,1211.35 1441.67,1211.35 1442.25,1211.35 1442.84,1211.35 1443.43,1211.35 1444.01,1211.35 1444.6,1211.35 1445.19,1211.35 1445.77,1211.35 1446.36,1211.35 1446.95,1211.35 1447.53,1211.35 1448.12,1211.35 1448.7,1211.35 1449.29,1211.35 1449.88,1211.35 1450.46,1211.35 1451.05,1211.35 1451.64,1211.35 1452.22,1211.35 1452.81,1211.35 1453.4,1211.35 1453.98,1211.35 1454.57,1211.35 1455.16,1211.35 1455.74,1211.35 1456.33,1211.35 1456.91,1211.35 1457.5,1211.35 1458.09,1211.35 1458.67,1211.35 1459.26,1211.35 1459.85,1211.35 1460.43,1211.35 1461.02,1211.35 1461.61,1211.35 1462.19,1211.35 1462.78,1211.35 1463.37,1211.35 1463.95,1211.35 1464.54,1211.35 1465.12,1211.35 1465.71,1211.35 1466.3,1211.35 1466.88,1211.35 1467.47,1211.35 1468.06,1211.35 1468.64,1211.35 1469.23,1211.35 1469.82,1211.35 1470.4,1211.35 1470.99,1211.35 1471.57,1211.35 1472.16,1211.35 1472.75,1211.35 1473.33,1211.35 1473.92,1211.35 1474.51,1211.35 1475.09,1211.35 1475.68,1211.35 1476.27,1211.35 1476.85,1211.35 1477.44,1211.35 1478.03,1211.35 1478.61,1211.35 1479.2,1211.35 1479.78,1211.35 1480.37,1211.35 1480.96,1211.35 1481.54,1211.35 1482.13,1211.35 1482.72,1211.35 1483.3,1211.35 1483.89,1211.35 1484.48,1211.35 1485.06,1211.35 1485.65,1211.35 1486.24,1211.35 1486.82,1211.35 1487.41,1211.35 1487.99,1211.35 1488.58,1211.35 1489.17,1211.35 1489.75,1211.35 1490.34,1211.35 1490.93,1211.35 1491.51,1211.35 1492.1,1211.35 1492.69,1211.35 1493.27,1211.35 1493.86,1211.35 1494.45,1211.35 1495.03,1211.35 1495.62,1211.35 1496.2,1211.35 1496.79,1211.35 1497.38,1211.35 1497.96,1211.35 1498.55,1211.35 1499.14,1211.35 1499.72,1211.35 1500.31,1211.35 1500.9,1211.35 1501.48,1211.35 1502.07,1211.35 1502.65,1211.35 1503.24,1211.35 1503.83,1211.35 1504.41,1211.35 1505,1211.35 1505.59,1211.35 1506.17,1211.35 1506.76,1211.35 1507.35,1211.35 1507.93,1211.35 1508.52,1211.35 1509.11,1211.35 1509.69,1211.35 1510.28,1211.35 1510.86,1211.35 1511.45,1211.35 1512.04,1211.35 1512.62,1211.35 1513.21,1211.35 1513.8,1211.35 1514.38,1211.35 1514.97,1211.35 1515.56,1211.35 1516.14,1211.35 1516.73,1211.35 1517.32,1211.35 1517.9,1211.35 1518.49,1211.35 1519.07,1211.35 1519.66,1211.35 1520.25,1211.35 1520.83,1211.35 1521.42,1211.35 1522.01,1211.35 1522.59,1211.35 1523.18,1211.35 1523.77,1211.35 1524.35,1211.35 1524.94,1211.35 1525.52,1211.35 1526.11,1211.35 1526.7,1211.35 1527.28,1211.35 1527.87,1211.35 1528.46,1211.35 1529.04,1211.35 1529.63,1211.35 1530.22,1211.35 1530.8,1211.35 1531.39,1211.35 1531.98,1211.35 1532.56,1211.35 1533.15,1211.35 1533.73,1211.35 1534.32,1211.35 1534.91,1211.35 1535.49,1211.35 1536.08,1211.35 1536.67,1211.35 1537.25,1211.35 1537.84,1211.35 1538.43,1211.35 1539.01,1211.35 1539.6,1211.35 1540.19,1211.35 1540.77,1211.35 1541.36,1211.35 1541.94,1211.35 1542.53,1211.35 1543.12,1211.35 1543.7,1211.35 1544.29,1211.35 1544.88,1211.35 1545.46,1211.35 1546.05,1211.35 1546.64,1211.35 1547.22,1211.35 1547.81,1211.35 1548.4,1211.35 1548.98,1211.35 1549.57,1211.35 1550.15,1211.35 1550.74,1211.35 1551.33,1211.35 1551.91,1211.35 1552.5,1211.35 1553.09,1211.35 1553.67,1211.35 1554.26,1211.35 1554.85,1211.35 1555.43,1211.35 1556.02,1211.35 1556.6,1211.35 1557.19,1211.35 1557.78,1211.35 1558.36,1211.35 1558.95,1211.35 1559.54,1211.35 1560.12,1211.35 1560.71,1211.35 1561.3,1211.35 1561.88,1211.35 1562.47,1211.35 1563.06,1211.35 1563.64,1211.35 1564.23,1211.35 1564.81,1211.35 1565.4,1211.35 1565.99,1211.35 1566.57,1211.35 1567.16,1211.35 1567.75,1211.35 1568.33,1211.35 1568.92,1211.35 1569.51,1211.35 1570.09,1211.35 1570.68,1211.35 1571.27,1211.35 1571.85,1211.35 1572.44,1211.35 1573.02,1211.35 1573.61,1211.35 1574.2,1211.35 1574.78,1211.35 1575.37,1211.35 1575.96,1211.35 1576.54,1211.35 1577.13,1211.35 1577.72,1211.35 1578.3,1211.35 1578.89,1211.35 1579.47,1211.35 1580.06,1211.35 1580.65,1211.35 1581.23,1211.35 1581.82,1211.35 1582.41,1211.35 1582.99,1211.35 1583.58,1211.35 1584.17,1211.35 1584.75,1211.35 1585.34,1211.35 1585.93,1211.35 1586.51,1211.35 1587.1,1211.35 1587.68,1211.35 1588.27,1211.35 1588.86,1211.35 1589.44,1211.35 1590.03,1211.35 1590.62,1211.35 1591.2,1211.35 1591.79,1211.35 1592.38,1211.35 1592.96,1211.35 1593.55,1211.35 1594.14,1211.35 1594.72,1211.35 1595.31,1211.35 1595.89,1211.35 1596.48,1211.35 1597.07,1211.35 1597.65,1211.35 1598.24,1211.35 1598.83,1211.35 1599.41,1211.35 1600,1211.35 1600.59,1211.35 1601.17,1211.35 1601.76,1211.35 1602.34,1211.35 1602.93,1211.35 1603.52,1211.35 1604.1,1211.35 1604.69,1211.35 1605.28,1211.35 1605.86,1211.35 1606.45,1211.35 1607.04,1211.35 1607.62,1211.35 1608.21,1211.35 1608.8,1211.35 1609.38,1211.35 1609.97,1211.35 1610.55,1211.35 1611.14,1211.35 1611.73,1211.35 1612.31,1211.35 1612.9,1211.35 1613.49,1211.35 1614.07,1211.35 1614.66,1211.35 1615.25,1211.35 1615.83,1211.35 1616.42,1211.35 1617.01,1211.35 1617.59,1211.35 1618.18,1211.35 1618.76,1211.35 1619.35,1211.35 1619.94,1211.35 1620.52,1211.35 1621.11,1211.35 1621.7,1211.35 1622.28,1211.35 1622.87,1211.35 1623.46,1211.35 1624.04,1211.35 1624.63,1211.35 1625.22,1211.35 1625.8,1211.35 1626.39,1211.35 1626.97,1211.35 1627.56,1211.35 1628.15,1211.35 1628.73,1211.35 1629.32,1211.35 1629.91,1211.35 1630.49,1211.35 1631.08,1211.35 1631.67,1211.35 1632.25,1211.35 1632.84,1211.35 1633.42,1211.35 1634.01,1211.35 1634.6,1211.35 1635.18,1211.35 1635.77,1211.35 1636.36,1211.35 1636.94,1211.35 1637.53,1211.35 1638.12,1211.35 1638.7,1211.35 1639.29,1211.35 1639.88,1211.35 1640.46,1211.35 1641.05,1211.35 1641.63,1211.35 1642.22,1211.35 1642.81,1211.35 1643.39,1211.35 1643.98,1211.35 1644.57,1211.35 1645.15,1211.35 1645.74,1211.35 1646.33,1211.35 1646.91,1211.35 1647.5,1211.35 1648.09,1211.35 1648.67,1211.35 1649.26,1211.35 1649.84,1211.35 1650.43,1211.35 1651.02,1211.35 1651.6,1211.35 1652.19,1211.35 1652.78,1211.35 1653.36,1211.35 1653.95,1211.35 1654.54,1211.35 1655.12,1211.35 1655.71,1211.35 1656.29,1211.35 1656.88,1211.35 1657.47,1211.35 1658.05,1211.35 1658.64,1211.35 1659.23,1211.35 1659.81,1211.35 1660.4,1211.35 1660.99,1211.35 1661.57,1211.35 1662.16,1211.35 1662.75,1211.35 1663.33,1211.35 1663.92,1211.35 1664.5,1211.35 1665.09,1211.35 1665.68,1211.35 1666.26,1211.35 1666.85,1211.35 1667.44,1211.35 1668.02,1211.35 1668.61,1211.35 1669.2,1211.35 1669.78,1211.35 1670.37,1211.35 1670.96,1211.35 1671.54,1211.35 1672.13,1211.35 1672.71,1211.35 1673.3,1211.35 1673.89,1211.35 1674.47,1211.35 1675.06,1211.35 1675.65,1211.35 1676.23,1211.35 1676.82,1211.35 1677.41,1211.35 1677.99,1211.35 1678.58,1211.35 1679.17,1211.35 1679.75,1211.35 1680.34,1211.35 1680.92,1211.35 1681.51,1211.35 1682.1,1211.35 1682.68,1211.35 1683.27,1211.35 1683.86,1211.35 1684.44,1211.35 1685.03,1211.35 1685.62,1211.35 1686.2,1211.35 1686.79,1211.35 1687.37,1211.35 1687.96,1211.35 1688.55,1211.35 1689.13,1211.35 1689.72,1211.35 1690.31,1211.35 1690.89,1211.35 1691.48,1211.35 1692.07,1211.35 1692.65,1211.35 1693.24,1211.35 1693.83,1211.35 1694.41,1211.35 1695,1211.35 1695.58,1211.35 1696.17,1211.35 1696.76,1211.35 1697.34,1211.35 1697.93,1211.35 1698.52,1211.35 1699.1,1211.35 1699.69,1211.35 1700.28,1211.35 1700.86,1211.35 1701.45,1211.35 1702.04,1211.35 1702.62,1211.35 1703.21,1211.35 1703.79,1211.35 1704.38,1211.35 1704.97,1211.35 1705.55,1211.35 1706.14,1211.35 1706.73,1211.35 1707.31,1211.35 1707.9,1211.35 1708.49,1211.35 1709.07,1211.35 1709.66,1211.35 1710.24,1211.35 1710.83,1211.35 1711.42,1211.35 1712,1211.35 1712.59,1211.35 1713.18,1211.35 1713.76,1211.35 1714.35,1211.35 1714.94,1211.35 1715.52,1211.35 1716.11,1211.35 1716.7,1211.35 1717.28,1211.35 1717.87,1211.35 1718.45,1211.35 1719.04,1211.35 1719.63,1211.35 1720.21,1211.35 1720.8,1211.35 1721.39,1211.35 1721.97,1211.35 1722.56,1211.35 1723.15,1211.35 1723.73,1211.35 1724.32,1211.35 1724.91,1211.35 1725.49,1211.35 1726.08,1211.35 1726.66,1211.35 1727.25,1211.35 1727.84,1211.35 1728.42,1211.35 1729.01,1211.35 1729.6,1211.35 1730.18,1211.35 1730.77,1211.35 1731.36,1211.35 1731.94,1211.35 1732.53,1211.35 1733.11,1211.35 1733.7,1211.35 1734.29,1211.35 1734.87,1211.35 1735.46,1211.35 1736.05,1211.35 1736.63,1211.35 1737.22,1211.35 1737.81,1211.35 1738.39,1211.35 1738.98,1211.35 1739.57,1211.35 1740.15,1211.35 1740.74,1211.35 1741.32,1211.35 1741.91,1211.35 1742.5,1211.35 1743.08,1211.35 1743.67,1211.35 1744.26,1211.35 1744.84,1211.35 1745.43,1211.35 1746.02,1211.35 1746.6,1211.35 1747.19,1211.35 1747.78,1211.35 1748.36,1211.35 1748.95,1211.35 1749.53,1211.35 1750.12,1211.35 1750.71,1211.35 1751.29,1211.35 1751.88,1211.35 1752.47,1211.35 1753.05,1211.35 1753.64,1211.35 1754.23,1211.35 1754.81,1211.35 1755.4,1211.35 1755.99,1211.35 1756.57,1211.35 1757.16,1211.35 1757.74,1211.35 1758.33,1211.35 1758.92,1211.35 1759.5,1211.35 1760.09,1211.35 1760.68,1211.35 1761.26,1211.35 1761.85,1211.35 1762.44,1211.35 1763.02,1211.35 1763.61,1211.35 1764.19,1211.35 1764.78,1211.35 1765.37,1211.35 1765.95,1211.35 1766.54,1211.35 1767.13,1211.35 1767.71,1211.35 1768.3,1211.35 1768.89,1211.35 1769.47,1211.35 1770.06,1211.35 1770.65,1211.35 1771.23,1211.35 1771.82,1211.35 1772.4,1211.35 1772.99,1211.35 1773.58,1211.35 1774.16,1211.35 1774.75,1211.35 1775.34,1211.35 1775.92,1211.35 1776.51,1211.35 1777.1,1211.35 1777.68,1211.35 1778.27,1211.35 1778.86,1211.35 1779.44,1211.35 1780.03,1211.35 1780.61,1211.35 1781.2,1211.35 1781.79,1211.35 1782.37,1211.35 1782.96,1211.35 1783.55,1211.35 1784.13,1211.35 1784.72,1211.35 1785.31,1211.35 1785.89,1211.35 1786.48,1211.35 1787.06,1211.35 1787.65,1211.35 1788.24,1211.35 1788.82,1211.35 1789.41,1211.35 1790,1211.35 1790.58,1211.35 1791.17,1211.35 1791.76,1211.35 1792.34,1211.35 1792.93,1211.35 1793.52,1211.35 1794.1,1211.35 1794.69,1211.35 1795.27,1211.35 1795.86,1211.35 1796.45,1211.35 1797.03,1211.35 1797.62,1211.35 1798.21,1211.35 1798.79,1211.35 1799.38,1211.35 1799.97,1211.35 1800.55,1211.35 1801.14,1211.35 1801.73,1211.35 1802.31,1211.35 1802.9,1211.35 1803.48,1211.35 1804.07,1211.35 1804.66,1211.35 1805.24,1211.35 1805.83,1211.35 1806.42,1211.35 1807,1211.35 1807.59,1211.35 1808.18,1211.35 1808.76,1211.35 1809.35,1211.35 1809.94,1211.35 1810.52,1211.35 1811.11,1211.35 1811.69,1211.35 1812.28,1211.35 1812.87,1211.35 1813.45,1211.35 1814.04,1211.35 1814.63,1211.35 1815.21,1211.35 1815.8,1211.35 1816.39,1211.35 1816.97,1211.35 1817.56,1211.35 1818.14,1211.35 1818.73,1211.35 1819.32,1211.35 1819.9,1211.35 1820.49,1211.35 1821.08,1211.35 1821.66,1211.35 1822.25,1211.35 1822.84,1211.35 1823.42,1211.35 1824.01,1211.35 1824.6,1211.35 1825.18,1211.35 1825.77,1211.35 1826.35,1211.35 1826.94,1211.35 1827.53,1211.35 1828.11,1211.35 1828.7,1211.35 1829.29,1211.35 1829.87,1211.35 1830.46,1211.35 1831.05,1211.35 1831.63,1211.35 1832.22,1211.35 1832.81,1211.35 1833.39,1211.35 1833.98,1211.35 1834.56,1211.35 1835.15,1211.35 1835.74,1211.35 1836.32,1211.35 1836.91,1211.35 1837.5,1211.35 1838.08,1211.35 1838.67,1211.35 1839.26,1211.35 1839.84,1211.35 1840.43,1211.35 1841.01,1211.35 1841.6,1211.35 1842.19,1211.35 1842.77,1211.35 1843.36,1211.35 1843.95,1211.35 1844.53,1211.35 1845.12,1211.35 1845.71,1211.35 1846.29,1211.35 1846.88,1211.35 1847.47,1211.35 1848.05,1211.35 1848.64,1211.35 1849.22,1211.35 1849.81,1211.35 1850.4,1211.35 1850.98,1211.35 1851.57,1211.35 1852.16,1211.35 1852.74,1211.35 1853.33,1211.35 1853.92,1211.35 1854.5,1211.35 1855.09,1211.35 1855.68,1211.35 1856.26,1211.35 1856.85,1211.35 1857.43,1211.35 1858.02,1211.35 1858.61,1211.35 1859.19,1211.35 1859.78,1211.35 1860.37,1211.35 1860.95,1211.35 1861.54,1211.35 1862.13,1211.35 1862.71,1211.35 1863.3,1211.35 1863.88,1211.35 1864.47,1211.35 1865.06,1211.35 1865.64,1211.35 1866.23,1211.35 1866.82,1211.35 1867.4,1211.35 1867.99,1211.35 1868.58,1211.35 1869.16,1211.35 1869.75,1211.35 1870.34,1211.35 1870.92,1211.35 1871.51,1211.35 1872.09,1211.35 1872.68,1211.35 1873.27,1211.35 1873.85,1211.35 1874.44,1211.35 1875.03,1211.35 1875.61,1211.35 1876.2,1211.35 1876.79,1211.35 1877.37,1211.35 1877.96,1211.35 1878.55,1211.35 1879.13,1211.35 1879.72,1211.35 1880.3,1211.35 1880.89,1211.35 1881.48,1211.35 1882.06,1211.35 1882.65,1211.35 1883.24,1211.35 1883.82,1211.35 1884.41,1211.35 1885,1211.35 1885.58,1211.35 1886.17,1211.35 1886.76,1211.35 1887.34,1211.35 1887.93,1211.35 1888.51,1211.35 1889.1,1211.35 1889.69,1211.35 1890.27,1211.35 1890.86,1211.35 1891.45,1211.35 1892.03,1211.35 1892.62,1211.35 1893.21,1211.35 1893.79,1211.35 1894.38,1211.35 1894.96,1211.35 1895.55,1211.35 1896.14,1211.35 1896.72,1211.35 1897.31,1211.35 1897.9,1211.35 1898.48,1211.35 1899.07,1211.35 1899.66,1211.35 1900.24,1211.35 1900.83,1211.35 1901.42,1211.35 1902,1211.35 1902.59,1211.35 1903.17,1211.35 1903.76,1211.35 1904.35,1211.35 1904.93,1211.35 1905.52,1211.35 1906.11,1211.35 1906.69,1211.35 1907.28,1211.35 1907.87,1211.35 1908.45,1211.35 1909.04,1211.35 1909.63,1211.35 1910.21,1211.35 1910.8,1211.35 1911.38,1211.35 1911.97,1211.35 1912.56,1211.35 1913.14,1211.35 1913.73,1211.35 1914.32,1211.35 1914.9,1211.35 1915.49,1211.35 1916.08,1211.35 1916.66,1211.35 1917.25,1211.35 1917.83,1211.35 1918.42,1211.35 1919.01,1211.35 1919.59,1211.35 1920.18,1211.35 1920.77,1211.35 1921.35,1211.35 1921.94,1211.35 1922.53,1211.35 1923.11,1211.35 1923.7,1211.35 1924.29,1211.35 1924.87,1211.35 1925.46,1211.35 1926.04,1211.35 1926.63,1211.35 1927.22,1211.35 1927.8,1211.35 1928.39,1211.35 1928.98,1211.35 1929.56,1211.35 1930.15,1211.35 1930.74,1211.35 1931.32,1211.35 1931.91,1211.35 1932.5,1211.35 1933.08,1211.35 1933.67,1211.35 1934.25,1211.35 1934.84,1211.35 1935.43,1211.35 1936.01,1211.35 1936.6,1211.35 1937.19,1211.35 1937.77,1211.35 1938.36,1211.35 1938.95,1211.35 1939.53,1211.35 1940.12,1211.35 1940.71,1211.35 1941.29,1211.35 1941.88,1211.35 1942.46,1211.35 1943.05,1211.35 1943.64,1211.35 1944.22,1211.35 1944.81,1211.35 1945.4,1211.35 1945.98,1211.35 1946.57,1211.35 1947.16,1211.35 1947.74,1211.35 1948.33,1211.35 1948.91,1211.35 1949.5,1211.35 1950.09,1211.35 1950.67,1211.35 1951.26,1211.35 1951.85,1211.35 1952.43,1211.35 1953.02,1211.35 1953.61,1211.35 1954.19,1211.35 1954.78,1211.35 1955.37,1211.35 1955.95,1211.35 1956.54,1211.35 1957.12,1211.35 1957.71,1211.35 1958.3,1211.35 1958.88,1211.35 1959.47,1211.35 1960.06,1211.35 1960.64,1211.35 1961.23,1211.35 1961.82,1211.35 1962.4,1211.35 1962.99,1211.35 1963.58,1211.35 1964.16,1211.35 1964.75,1211.35 1965.33,1211.35 1965.92,1211.35 1966.51,1211.35 1967.09,1211.35 1967.68,1211.35 1968.27,1211.35 1968.85,1211.35 1969.44,1211.35 1970.03,1211.35 1970.61,1211.35 1971.2,1211.35 1971.78,1211.35 1972.37,1211.35 1972.96,1211.35 1973.54,1211.35 1974.13,1211.35 1974.72,1211.35 1975.3,1211.35 1975.89,1211.35 1976.48,1211.35 1977.06,1211.35 1977.65,1211.35 1978.24,1211.35 1978.82,1211.35 1979.41,1211.35 1979.99,1211.35 1980.58,1211.35 1981.17,1211.35 1981.75,1211.35 1982.34,1211.35 1982.93,1211.35 1983.51,1211.35 1984.1,1211.35 1984.69,1211.35 1985.27,1211.35 1985.86,1211.35 1986.45,1211.35 1987.03,1211.35 1987.62,1211.35 1988.2,1211.35 1988.79,1211.35 1989.38,1211.35 1989.96,1211.35 1990.55,1211.35 1991.14,1211.35 1991.72,1211.35 1992.31,1211.35 1992.9,1211.35 1993.48,1211.35 1994.07,1211.35 1994.65,1211.35 1995.24,1211.35 1995.83,1211.35 1996.41,1211.35 1997,1211.35 1997.59,1211.35 1998.17,1211.35 1998.76,1211.35 1999.35,1211.35 1999.93,1211.35 2000.52,1211.35 2001.11,1211.35 2001.69,1211.35 2002.28,1211.35 2002.86,1211.35 2003.45,1211.35 2004.04,1211.35 2004.62,1211.35 2005.21,1211.35 2005.8,1211.35 2006.38,1211.35 2006.97,1211.35 2007.56,1211.35 2008.14,1211.35 2008.73,1211.35 2009.32,1211.35 2009.9,1211.35 2010.49,1211.35 2011.07,1211.35 2011.66,1211.35 2012.25,1211.35 2012.83,1211.35 2013.42,1211.35 2014.01,1211.35 2014.59,1211.35 2015.18,1211.35 2015.77,1211.35 2016.35,1211.35 2016.94,1211.35 2017.53,1211.35 2018.11,1211.35 2018.7,1211.35 2019.28,1211.35 2019.87,1211.35 2020.46,1211.35 2021.04,1211.35 2021.63,1211.35 2022.22,1211.35 2022.8,1211.35 2023.39,1211.35 2023.98,1211.35 2024.56,1211.35 2025.15,1211.35 2025.73,1211.35 2026.32,1211.35 2026.91,1211.35 2027.49,1211.35 2028.08,1211.35 2028.67,1211.35 2029.25,1211.35 2029.84,1211.35 2030.43,1211.35 2031.01,1211.35 2031.6,1211.35 2032.19,1211.35 2032.77,1211.35 2033.36,1211.35 2033.94,1211.35 2034.53,1211.35 2035.12,1211.35 2035.7,1211.35 2036.29,1211.35 2036.88,1211.35 2037.46,1211.35 2038.05,1211.35 2038.64,1211.35 2039.22,1211.35 2039.81,1211.35 2040.4,1211.35 2040.98,1211.35 2041.57,1211.35 2042.15,1211.35 2042.74,1211.35 2043.33,1211.35 2043.91,1211.35 2044.5,1211.35 2045.09,1211.35 2045.67,1211.35 2046.26,1211.35 2046.85,1211.35 2047.43,1211.35 2048.02,1211.35 2048.6,1211.35 2049.19,1211.35 2049.78,1211.35 2050.36,1211.35 2050.95,1211.35 2051.54,1211.35 2052.12,1211.35 2052.71,1211.35 2053.3,1211.35 2053.88,1211.35 2054.47,1211.35 2055.06,1211.35 2055.64,1211.35 2056.23,1211.35 2056.81,1211.35 2057.4,1211.35 2057.99,1211.35 2058.57,1211.35 2059.16,1211.35 2059.75,1211.35 2060.33,1211.35 2060.92,1211.35 2061.51,1211.35 2062.09,1211.35 2062.68,1211.35 2063.27,1211.35 2063.85,1211.35 2064.44,1211.35 2065.02,1211.35 2065.61,1211.35 2066.2,1211.35 2066.78,1211.35 2067.37,1211.35 2067.96,1211.35 2068.54,1211.35 2069.13,1211.35 2069.72,1211.35 2070.3,1211.35 2070.89,1211.35 2071.48,1211.35 2072.06,1211.35 2072.65,1211.35 2073.23,1211.35 2073.82,1211.35 2074.41,1211.35 2074.99,1211.35 2075.58,1211.35 2076.17,1211.35 2076.75,1211.35 2077.34,1211.35 2077.93,1211.35 2078.51,1211.35 2079.1,1211.35 2079.68,1211.35 2080.27,1211.35 2080.86,1211.35 2081.44,1211.35 2082.03,1211.35 2082.62,1211.35 2083.2,1211.35 2083.79,1211.35 2084.38,1211.35 2084.96,1211.35 2085.55,1211.35 2086.14,1211.35 2086.72,1211.35 2087.31,1211.35 2087.89,1211.35 2088.48,1211.35 2089.07,1211.35 2089.65,1211.35 2090.24,1211.35 2090.83,1211.35 2091.41,1211.35 2092,1211.35 2092.59,1211.35 2093.17,1211.35 2093.76,1211.35 2094.35,1211.35 2094.93,1211.35 2095.52,1211.35 2096.1,1211.35 2096.69,1211.35 2097.28,1211.35 2097.86,1211.35 2098.45,1211.35 2099.04,1211.35 2099.62,1211.35 2100.21,1211.35 2100.8,1211.35 2101.38,1211.35 2101.97,1211.35 2102.55,1211.35 2103.14,1211.35 2103.73,1211.35 2104.31,1211.35 2104.9,1211.35 2105.49,1211.35 2106.07,1211.35 2106.66,1211.35 2107.25,1211.35 2107.83,1211.35 2108.42,1211.35 2109.01,1211.35 2109.59,1211.35 2110.18,1211.35 2110.76,1211.35 2111.35,1211.35 2111.94,1211.35 2112.52,1211.35 2113.11,1211.35 2113.7,1211.35 2114.28,1211.35 2114.87,1211.35 2115.46,1211.35 2116.04,1211.35 2116.63,1211.35 2117.22,1211.35 2117.8,1211.35 2118.39,1211.35 2118.97,1211.35 2119.56,1211.35 2120.15,1211.35 2120.73,1211.35 2121.32,1211.35 2121.91,1211.35 2122.49,1211.35 2123.08,1211.35 2123.67,1211.35 2124.25,1211.35 2124.84,1211.35 2125.42,1211.35 2126.01,1211.35 2126.6,1211.35 2127.18,1211.35 2127.77,1211.35 2128.36,1211.35 2128.94,1211.35 2129.53,1211.35 2130.12,1211.35 2130.7,1211.35 2131.29,1211.35 2131.88,1211.35 2132.46,1211.35 2133.05,1211.35 2133.63,1211.35 2134.22,1211.35 2134.81,1211.35 2135.39,1211.35 2135.98,1211.35 2136.57,1211.35 2137.15,1211.35 2137.74,1211.35 2138.33,1211.35 2138.91,1211.35 2139.5,1211.35 2140.09,1211.35 2140.67,1211.35 2141.26,1211.35 2141.84,1211.35 2142.43,1211.35 2143.02,1211.35 2143.6,1211.35 2144.19,1211.35 2144.78,1211.35 2145.36,1211.35 2145.95,1211.35 2146.54,1211.35 2147.12,1211.35 2147.71,1211.35 2148.3,1211.35 2148.88,1211.35 2149.47,1211.35 2150.05,1211.35 2150.64,1211.35 2151.23,1211.35 2151.81,1211.35 2152.4,1211.35 2152.99,1211.35 2153.57,1211.35 2154.16,1211.35 2154.75,1211.35 2155.33,1211.35 2155.92,1211.35 2156.5,1211.35 2157.09,1211.35 2157.68,1211.35 2158.26,1211.35 \"/>\n<polyline clip-path=\"url(#clip632)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1561.34,1192.06 1399.58,899.083 \"/>\n<polyline clip-path=\"url(#clip632)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1230.14 985.439,1192.06 2158.26,1192.06 2158.26,1230.14 985.439,1230.14 \"/>\n<path clip-path=\"url(#clip630)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip630)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip630)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip630)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip630)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip630)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip633\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip633)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip633)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip633)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip633)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip633)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip630)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip633)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip633)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip633)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip633)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip633)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip630)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip630)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip630)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip633)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-32.6883 161.555,-1431.46 162.114,-2765.92 162.673,-3941.32 163.232,-5066.71 163.792,-6071.97 164.351,-5706.36 164.91,-5427.84 165.469,-5246.78 166.029,-6085.45 166.588,-6901.58 167.147,-7614.63 167.706,-8260.53 168.266,-8826.05 168.825,-8546.76 169.384,-9055.2 169.943,-9479.29 170.503,-9869.33 171.062,-9006.48 171.621,-9384.04 172.18,-9731.17 172.74,-10036.3 173.299,-10302.1 173.858,-10520.9 174.417,-10695.8 174.977,-10441 175.536,-10578.3 176.095,-10338.8 176.655,-10091.9 177.214,-9878.74 177.773,-9977.57 178.332,-9762.59 178.892,-9314.7 179.451,-9374.93 180.01,-9210.27 180.569,-9056.84 181.129,-8897.19 181.688,-8742.82 182.247,-8408.96 182.806,-8262.45 183.366,-7974.8 183.925,-7989.22 184.484,-7985.67 185.043,-7583.33 185.603,-7587.99 186.162,-7457.32 186.721,-7323.57 187.28,-7310.18 187.84,-7069.46 188.399,-6929.49 188.958,-6788.61 189.517,-6641.24 190.077,-6493.36 190.636,-6352.87 191.195,-6127.35 191.754,-5912.73 192.314,-5639.04 192.873,-5452.55 193.432,-5339.55 193.991,-5154.26 194.551,-5052.04 195.11,-4885.92 195.669,-4729.41 196.228,-4679.17 196.788,-4625.94 197.347,-4500.78 197.906,-4390.67 198.465,-4228.7 199.025,-4167.95 199.584,-4102.78 200.143,-3902.53 200.702,-3846.35 201.262,-3694.44 201.821,-3588.11 202.38,-3482.37 202.939,-3381.6 203.499,-3273.23 204.058,-3092.74 204.617,-2923.13 205.176,-2797.23 205.736,-2605.9 206.295,-2526.04 206.854,-2413.55 207.413,-2234.48 207.973,-2163.45 208.532,-2092.41 209.091,-1992.15 209.65,-1952.36 210.21,-1880.47 210.769,-1750.15 211.328,-1685.56 211.887,-1651.85 212.447,-1527.49 213.006,-1406.41 213.565,-1342.54 214.124,-1333.68 214.684,-1244.19 215.243,-1159.96 215.802,-1124.09 216.361,-1092.03 216.921,-1056.61 217.48,-945.261 218.039,-912.726 218.598,-829.04 219.158,-791.817 219.717,-734.758 220.276,-703.956 220.835,-671.342 221.395,-637.907 221.954,-562.689 222.513,-514.314 223.072,-420.581 223.632,-397.202 224.191,-354.176 224.75,-266.473 225.309,-204.16 225.869,-164.298 226.428,-123.345 226.987,-63.8384 227.546,-28.7172 228.106,-13.3182 228.665,42.9898 229.224,77.3059 229.783,88.1149 230.343,148.951 230.902,202.417 231.461,274.067 232.02,304.309 232.58,352.213 233.139,317.888 233.698,383.019 234.257,424.694 234.817,485.632 235.376,469.475 235.935,473.917 236.494,455.28 237.054,465.371 237.613,489.586 238.172,516.048 238.731,481.157 239.291,527.622 239.85,532.49 240.409,552.943 240.968,521.152 241.528,565.334 242.087,627.517 242.646,631.357 243.205,655.323 243.765,674.955 244.324,715.629 244.883,712.041 245.442,714.483 246.002,714.447 246.561,715.163 247.12,713.699 247.679,790.72 248.239,823.911 248.798,820.838 249.357,857.096 249.916,867.851 250.476,898.107 251.035,926.387 251.594,919.897 252.153,897.752 252.713,945.077 253.272,937.53 253.831,929.559 254.39,905.523 254.95,885.385 255.509,897.522 256.068,890.855 256.627,924.517 257.187,921.094 257.746,968.982 258.305,963.613 258.864,958.162 259.424,1022.68 259.983,965.443 260.542,942.914 261.101,973.501 261.661,1001.69 262.22,1011.64 262.779,971.142 263.338,1017.57 263.898,1028.78 264.457,1035.91 265.016,1028.25 265.575,1002.11 266.135,1014.88 266.694,1023.58 267.253,1046.85 267.812,1040.61 268.372,1050.64 268.931,1042.7 269.49,1063.07 270.049,1070.91 270.609,1048.16 271.168,1053.01 271.727,1026.41 272.286,999.068 272.846,995.698 273.405,987.328 273.964,967.588 274.523,944.437 275.083,909.836 275.642,954.455 276.201,969.807 276.76,950.404 277.32,913.757 277.879,946.929 278.438,943.397 278.997,940.505 279.557,940.264 280.116,908.398 280.675,923.775 281.234,920.08 281.794,968.539 282.353,983 282.912,996.298 283.471,990.88 284.031,987.661 284.59,985.617 285.149,979.475 285.708,972.131 286.268,988.156 286.827,967.75 287.386,980.942 287.945,960.473 288.505,958.647 289.064,918.842 289.623,918.172 290.182,918.915 290.742,914.469 291.301,898.431 291.86,929.64 292.419,927.085 292.979,958.814 293.538,988.128 294.097,996.088 294.656,993.521 295.216,988.544 295.775,983.191 296.334,976.372 296.893,1019.41 297.453,1095.16 298.012,1133.12 298.571,1101.78 299.13,1108.29 299.69,1111.29 300.249,1101.35 300.808,1092.48 301.368,1114.62 301.927,1119.15 302.486,1089.17 303.045,1062.39 303.605,1067.25 304.164,1039.57 304.723,1029.04 305.282,1006.21 305.842,999.679 306.401,1006.12 306.96,1015.4 307.519,994.101 308.079,1002.8 308.638,981.534 309.197,956.387 309.756,935.179 310.316,933.967 310.875,915.17 311.434,894.673 311.993,888.991 312.553,869.472 313.112,901.768 313.671,899.877 314.23,883.536 314.79,867.737 315.349,882.687 315.908,881.283 316.467,880.634 317.027,878.183 317.586,843.833 318.145,908.028 318.704,921.869 319.264,886.439 319.823,880.303 320.382,911.063 320.941,908.927 321.501,918.616 322.06,932.509 322.619,941.687 323.178,937.013 323.738,914.301 324.297,958.602 324.856,932.348 325.415,940.923 325.975,935.496 326.534,947.615 327.093,943.329 327.652,906.774 328.212,904.931 328.771,918.466 329.33,911.835 329.889,887.152 330.449,836.286 331.008,818.934 331.567,806.822 332.126,824.511 332.686,823.769 333.245,859.913 333.804,856.96 334.363,858.695 334.923,857.796 335.482,889.08 336.041,856.886 336.6,853.931 337.16,887.381 337.719,919.438 338.278,901.746 338.837,880.617 339.397,911.371 339.956,987.193 340.515,1011.44 341.074,1034.8 341.634,1024.67 342.193,1028.85 342.752,1032.76 343.311,1020.26 343.871,993.519 344.43,984.643 344.989,1008.64 345.548,981.699 346.108,971.048 346.667,947.744 347.226,925.196 347.785,905.344 348.345,918.258 348.904,914.152 349.463,903.482 350.022,868.387 350.582,862.75 351.141,893.758 351.7,906.497 352.259,900.634 352.819,944.424 353.378,938.614 353.937,944.154 354.496,933.903 355.056,942.391 355.615,937.4 356.174,896.198 356.733,890.582 357.293,887.395 357.852,865.343 358.411,893.654 358.97,887.367 359.53,832.356 360.089,832.488 360.648,799.846 361.207,818.407 361.767,851.082 362.326,851.611 362.885,833.006 363.444,846.413 364.004,843.578 364.563,880.394 365.122,877.105 365.681,837.609 366.241,818.157 366.8,847.416 367.359,812.528 367.918,793.935 368.478,794.359 369.037,774.585 369.596,757.655 370.155,757.788 370.715,728.042 371.274,765.084 371.833,798.568 372.392,814.5 372.952,846.916 373.511,810.579 374.07,810.365 374.629,806.951 375.189,821.558 375.748,803.224 376.307,801.907 376.866,816.884 377.426,817.593 377.985,786.432 378.544,770.629 379.103,789.535 379.663,755.54 380.222,772.891 380.781,741.714 381.34,696.231 381.9,716.697 382.459,723.39 383.018,728.472 383.577,748.428 384.137,754.375 384.696,756.808 385.255,757.047 385.814,741.6 386.374,757.375 386.933,791.235 387.492,791.839 388.051,774.501 388.611,791.449 389.17,761.535 389.729,763.732 390.288,814.401 390.848,825.034 391.407,841.376 391.966,821.933 392.525,835.649 393.085,831.367 393.644,794.868 394.203,794.013 394.762,809.927 395.322,796.783 395.881,778.78 396.44,779.896 396.999,830.047 397.559,824.424 398.118,807.418 398.677,817.604 399.236,847.777 399.796,845.037 400.355,839.432 400.914,836.136 401.473,817.881 402.033,811.238 402.592,810.211 403.151,823.672 403.71,801.645 404.27,800.927 404.829,830.394 405.388,870.659 405.947,881.577 406.507,859.904 407.066,823.593 407.625,837.079 408.184,832.428 408.744,811.113 409.303,824.591 409.862,838.107 410.421,836.392 410.981,864.149 411.54,887.394 412.099,863.695 412.658,823.441 413.218,805.981 413.777,819.688 414.336,797.399 414.895,792.714 415.455,820.632 416.014,833.547 416.573,797.811 417.132,859.001 417.692,834.931 418.251,830.936 418.81,810.682 419.369,790.767 419.929,772.834 420.488,739.461 421.047,722.828 421.606,757.101 422.166,740.245 422.725,726.26 423.284,729.019 423.843,697.661 424.403,697.16 424.962,733.825 425.521,701.134 426.08,706.737 426.64,744.194 427.199,728.317 427.758,746.67 428.318,747.608 428.877,751.048 429.436,773.48 429.995,745.953 430.555,764.707 431.114,795.176 431.673,810.27 432.232,789.507 432.792,819.084 433.351,814.497 433.91,761.733 434.469,761.129 435.029,777.601 435.588,790.975 436.147,818.652 436.706,782.507 437.266,765.192 437.825,783.117 438.384,782.637 438.943,776.483 439.503,774.802 440.062,790.796 440.621,801.75 441.18,781.946 441.74,768.891 442.299,719.504 442.858,724.483 443.417,691.992 443.977,694.134 444.536,763.112 445.095,731.067 445.654,732.6 446.214,747.575 446.773,745.817 447.332,762.029 447.891,759.685 448.451,772.569 449.01,755.392 449.569,738.523 450.128,723.543 450.688,706.054 451.247,710.117 451.806,698.026 452.365,668.797 452.925,641.457 453.484,646.717 454.043,639.495 454.602,695.917 455.162,680.996 455.721,702.834 456.28,738.064 456.839,754.891 457.399,738.443 457.958,735.879 458.517,767.938 459.076,798.199 459.636,795.298 460.195,807.215 460.754,754.221 461.313,737.706 461.873,740.868 462.432,740.121 462.991,741.772 463.55,755.846 464.11,803.228 464.669,782.612 465.228,763.722 465.787,764.492 466.347,794.183 466.906,806.254 467.465,786.687 468.024,802.519 468.584,716.341 469.143,715.758 469.702,720.162 470.261,707.903 470.821,757.244 471.38,739.588 471.939,755.062 472.498,757.296 473.058,737.513 473.617,723.432 474.176,741.844 474.735,758.96 475.295,742.168 475.854,725.963 476.413,708.86 476.972,725.59 477.532,759.394 478.091,771.708 478.65,818.223 479.209,847.819 479.769,825.72 480.328,883.803 480.887,893.612 481.446,869.79 482.006,865.414 482.565,888.229 483.124,880.319 483.683,872.657 484.243,833.263 484.802,811.093 485.361,807.19 485.92,785.401 486.48,795.123 487.039,776.446 487.598,758.182 488.157,756.33 488.717,756.154 489.276,754.657 489.835,737.263 490.394,753.116 490.954,767.582 491.513,747.081 492.072,742.063 492.631,727.883 493.191,694.709 493.75,711.926 494.309,713.175 494.868,715.038 495.428,717.826 495.987,734.101 496.546,729.517 497.105,730.564 497.665,748.712 498.224,734.327 498.783,733.899 499.342,734.704 499.902,765.432 500.461,748.363 501.02,764.912 501.579,763.126 502.139,726.17 502.698,741.524 503.257,744.214 503.816,726.039 504.376,728.761 504.935,727.537 505.494,728.675 506.053,733.151 506.613,719.654 507.172,720.452 507.731,719.009 508.29,721.431 508.85,737.214 509.409,784.686 509.968,830.61 510.527,855.3 511.087,797.878 511.646,811.021 512.205,853.284 512.764,863.782 513.324,888.551 513.883,898.665 514.442,874.816 515.001,850.885 515.561,831.113 516.12,823.016 516.679,814.342 517.238,808.259 517.798,769.639 518.357,766.542 518.916,767.256 519.475,781.488 520.035,761.528 520.594,744.555 521.153,726.256 521.712,756.065 522.272,785.253 522.831,800.496 523.39,764.113 523.949,762.795 524.509,777.681 525.068,822.062 525.627,784.287 526.186,751.691 526.746,753.113 527.305,767.195 527.864,762.2 528.423,757.912 528.983,705.245 529.542,707.968 530.101,756.143 530.66,754.869 531.22,772.477 531.779,773.093 532.338,757.902 532.897,741.216 533.457,739.253 534.016,734.286 534.575,780.673 535.134,725.861 535.694,709.189 536.253,730.06 536.812,729.494 537.371,744.588 537.931,743.698 538.49,759.611 539.049,772.254 539.608,784.24 540.168,781.569 540.727,779.197 541.286,825.249 541.845,833.035 542.405,808.495 542.964,815.381 543.523,824.524 544.082,816.972 544.642,795.496 545.201,758.163 545.76,742.208 546.319,724.212 546.879,690.577 547.438,692.639 547.997,676.281 548.556,693.4 549.116,712.49 549.675,714.034 550.234,698.178 550.793,732.328 551.353,727.692 551.912,743.044 552.471,708.382 553.031,726.215 553.59,742.058 554.149,725.923 554.708,721.039 555.268,772.839 555.827,753.407 556.386,751.529 556.945,736.092 557.505,751.974 558.064,781.745 558.623,791.86 559.182,788.165 559.742,753.097 560.301,719.712 560.86,700.689 561.419,669.805 561.979,653.122 562.538,639.045 563.097,645.12 563.656,632.046 564.216,634.8 564.775,623.112 565.334,595.044 565.893,588.171 566.453,578.319 567.012,616.633 567.571,621.168 568.13,661.418 568.69,713.245 569.249,650.079 569.808,650.422 570.367,618.036 570.927,635.94 571.486,657.164 572.045,643.394 572.604,660.743 573.164,664.248 573.723,668.681 574.282,703.192 574.841,718.859 575.401,718.983 575.96,719.222 576.519,720.141 577.078,720.765 577.638,739.262 578.197,737.977 578.756,738.998 579.315,739.805 579.875,707.641 580.434,708.831 580.993,738.884 581.552,771.25 582.112,752.703 582.671,735.078 583.23,749.628 583.789,747.556 584.349,762.744 584.908,792.029 585.467,724.783 586.026,756.76 586.586,737.425 587.145,739.067 587.704,737.045 588.263,733.322 588.823,698.164 589.382,697.764 589.941,699.076 590.5,682.777 591.06,667.966 591.619,652.64 592.178,636.66 592.737,669.821 593.297,672.42 593.856,741.246 594.415,755.812 594.974,768.838 595.534,749.88 596.093,715.555 596.652,665.21 597.211,665.142 597.771,663.698 598.33,654.238 598.889,622.382 599.448,628.843 600.008,613.756 600.567,646.559 601.126,615.865 601.685,619.956 602.245,638.472 602.804,658.822 603.363,626.134 603.922,581.457 604.482,589.798 605.041,597.698 605.6,617.849 606.159,601.254 606.719,623.413 607.278,607.974 607.837,614.352 608.396,651.276 608.956,703.716 609.515,703.799 610.074,737.567 610.633,720.317 611.193,717.662 611.752,656.489 612.311,688.217 612.87,722.032 613.43,708.986 613.989,728.393 614.548,744.871 615.107,759.822 615.667,769.327 616.226,748.333 616.785,747.062 617.344,778.566 617.904,774.465 618.463,769.867 619.022,786.346 619.581,763.219 620.141,761.911 620.7,757.476 621.259,787.075 621.818,767.813 622.378,779.892 622.937,771.196 623.496,799.572 624.055,791.834 624.615,788.779 625.174,768.283 625.733,795.148 626.292,772.873 626.852,765.492 627.411,728.784 627.97,761.652 628.529,774.165 629.089,771.624 629.648,780.502 630.207,743.846 630.766,744.457 631.326,740.127 631.885,769.679 632.444,762.714 633.003,760.001 633.563,739.63 634.122,754.37 634.681,736.275 635.24,689.97 635.8,677.764 636.359,643.418 636.918,679.286 637.477,694.89 638.037,697.086 638.596,661.99 639.155,680.774 639.714,695.21 640.274,694.481 640.833,665.732 641.392,716.047 641.951,713.531 642.511,694.26 643.07,662.264 643.629,683.34 644.188,688.901 644.748,674.071 645.307,675.116 645.866,675.442 646.425,708.63 646.985,676.183 647.544,676.077 648.103,661.051 648.662,664.601 649.222,636.55 649.781,622.139 650.34,626.062 650.899,662.665 651.459,683.051 652.018,651.078 652.577,671.742 653.136,676.267 653.696,708.726 654.255,693.322 654.814,711.991 655.373,693.509 655.933,695.919 656.492,694.452 657.051,709.084 657.61,673.595 658.17,690.044 658.729,673.503 659.288,675.508 659.847,694.311 660.407,677.362 660.966,680.301 661.525,666.05 662.084,669.748 662.644,642.647 663.203,627.559 663.762,617.311 664.321,588.963 664.881,560.795 665.44,569.126 665.999,624.746 666.558,614.303 667.118,651.374 667.677,622.099 668.236,643.821 668.795,646.662 669.355,649.841 669.914,622.68 670.473,625.864 671.032,628.456 671.592,662.731 672.151,663.76 672.71,666.28 673.269,666.482 673.829,668.311 674.388,655.537 674.947,639.678 675.506,644.203 676.066,628.873 676.625,631.694 677.184,637.541 677.743,641.115 678.303,641.993 678.862,662.623 679.421,669.349 679.981,720.488 680.54,715.97 681.099,714.979 681.658,687.025 682.218,669.167 682.777,674.589 683.336,659.689 683.895,675.983 684.455,661.974 685.014,663.728 685.573,681.235 686.132,683.369 686.692,688.035 687.251,703.741 687.81,705.005 688.369,720.578 688.929,719.249 689.488,689.503 690.047,692.155 690.606,710.704 691.166,742.227 691.725,694.739 692.284,695.535 692.843,695.781 693.403,715.729 693.962,683.55 694.521,667.535 695.08,701.803 695.64,701.523 696.199,701.25 696.758,701.477 697.317,717.569 697.877,730.594 698.436,745.921 698.995,744.366 699.554,725.737 700.114,742.195 700.673,740.845 701.232,755.665 701.791,769.351 702.351,766.228 702.91,728.169 703.469,690.635 704.028,688.24 704.588,670.693 705.147,687.759 705.706,702.089 706.265,697.808 706.825,716.032 707.384,666.455 707.943,664.211 708.502,683.574 709.062,732.764 709.621,730.94 710.18,712.997 710.739,726.408 711.299,724.83 711.858,756.643 712.417,754.668 712.976,750.594 713.536,760.816 714.095,770.655 714.654,749.182 715.213,741.596 715.773,723.217 716.332,723.255 716.891,706.926 717.45,750.835 718.01,752.225 718.569,747.384 719.128,772.078 719.687,734.667 720.247,734.588 720.806,749.563 721.365,730.361 721.924,680.677 722.484,678.536 723.043,675.708 723.602,660.729 724.161,710.164 724.721,694.086 725.28,691.597 725.839,688.9 726.398,690.088 726.958,690.114 727.517,677.767 728.076,693.933 728.635,695.434 729.195,698.838 729.754,695.431 730.313,709.591 730.872,710.365 731.432,710.454 731.991,727.618 732.55,728.764 733.109,756.392 733.669,771.507 734.228,782.609 734.787,794.392 735.346,774.891 735.906,780.759 736.465,773.759 737.024,798.898 737.583,822.429 738.143,781.223 738.702,759.326 739.261,789.128 739.82,798.662 740.38,795.667 740.939,772.541 741.498,766.527 742.057,724.891 742.617,706.727 743.176,703.268 743.735,717.397 744.294,697.516 744.854,727.644 745.413,707.527 745.972,699.526 746.531,717.668 747.091,732.496 747.65,728.016 748.209,738.034 748.768,719.66 749.328,669.169 749.887,640.471 750.446,657.204 751.005,659.326 751.565,642.286 752.124,628.456 752.683,628.425 753.242,647.465 753.802,602.325 754.361,639.097 754.92,625.066 755.479,645.348 756.039,697.544 756.598,661.65 757.157,618.738 757.716,657.054 758.276,674.427 758.835,657.633 759.394,672.354 759.953,671.174 760.513,672.19 761.072,670.647 761.631,690.681 762.19,693.707 762.75,682.96 763.309,686.217 763.868,655.184 764.427,672.868 764.987,675.682 765.546,726.622 766.105,727.626 766.664,726.177 767.224,757.077 767.783,753.381 768.342,781.857 768.901,759.201 769.461,711.607 770.02,713.052 770.579,713.721 771.138,727.674 771.698,752.617 772.257,734.914 772.816,735.588 773.375,731.425 773.935,730.534 774.494,711.82 775.053,710.867 775.612,695.425 776.172,680.848 776.731,715.542 777.29,698.739 777.849,748.436 778.409,748.325 778.968,747.139 779.527,725.727 780.086,739.133 780.646,738.42 781.205,653.811 781.764,672.67 782.323,640.774 782.883,642.204 783.442,660.407 784.001,641.188 784.56,627.239 785.12,613.343 785.679,661.71 786.238,645.133 786.797,629.398 787.357,600.308 787.916,621.916 788.475,659.053 789.034,693.808 789.594,677.399 790.153,662.022 790.712,693.007 791.271,676.824 791.831,711.338 792.39,726.897 792.949,710.877 793.508,711.336 794.068,712.847 794.627,713.733 795.186,744.837 795.745,692.899 796.305,691.256 796.864,675.946 797.423,694.268 797.982,695.586 798.542,725.846 799.101,738.33 799.66,767.083 800.219,763.096 800.779,744.143 801.338,743.594 801.897,740.737 802.456,755.029 803.016,717.994 803.575,684.124 804.134,688.401 804.693,689.952 805.253,675.735 805.812,692.281 806.371,641.596 806.931,647.422 807.49,615.936 808.049,622.9 808.608,661.043 809.168,691.434 809.727,659.675 810.286,678.315 810.845,681.789 811.405,695.324 811.964,675.261 812.523,657.835 813.082,689.666 813.642,704.194 814.201,718.418 814.76,730.051 815.319,709.278 815.879,707.08 816.438,726.42 816.997,677.553 817.556,697.776 818.116,712.482 818.675,728.322 819.234,709.501 819.793,707.058 820.353,686.55 820.912,703.345 821.471,686.91 822.03,671.226 822.59,689.186 823.149,657.283 823.708,690.279 824.267,704.841 824.827,671.571 825.386,691.321 825.945,722.738 826.504,751.535 827.064,760.469 827.623,740.452 828.182,721.66 828.741,704.525 829.301,703.03 829.86,737.711 830.419,777.92 830.978,756.841 831.538,755.754 832.097,767.825 832.656,759.721 833.215,758.15 833.775,736.334 834.334,748.296 834.893,761.824 835.452,788.621 836.012,750.11 836.571,731.297 837.13,712.3 837.689,708.693 838.249,756.57 838.808,734.316 839.367,716.697 839.926,699.287 840.486,716.62 841.045,702.619 841.604,703.534 842.163,718.486 842.723,701.366 843.282,736.195 843.841,732.573 844.4,725.143 844.96,705.964 845.519,703.955 846.078,720.944 846.637,686.349 847.197,680.593 847.756,682.203 848.315,684.658 848.874,685.215 849.434,652.665 849.993,635.108 850.552,635.606 851.111,637.922 851.671,657.922 852.23,674.439 852.789,706.533 853.348,675.457 853.908,723.187 854.467,739.626 855.026,720.439 855.585,700.803 856.145,701.039 856.704,680.034 857.263,681.086 857.822,700.283 858.382,699.798 858.941,730.54 859.5,759.374 860.059,722.709 860.619,692.595 861.178,711.47 861.737,660.494 862.296,660.623 862.856,615.184 863.415,619.006 863.974,643.167 864.533,627.455 865.093,681.397 865.652,665.946 866.211,615.611 866.77,633.875 867.33,607.888 867.889,661.566 868.448,645.281 869.007,679.729 869.567,664.404 870.126,698.812 870.685,662.975 871.244,663.702 871.804,650.193 872.363,616.843 872.922,621.696 873.481,592.192 874.041,579.396 874.6,603.641 875.159,628.496 875.718,611.321 876.278,601.222 876.837,589.67 877.396,578.661 877.955,596.2 878.515,605.446 879.074,611.12 879.633,599.326 880.192,570.58 880.752,595.12 881.311,570.45 881.87,559.692 882.429,595.241 882.989,650.592 883.548,671.667 884.107,689.584 884.666,741.886 885.226,741.157 885.785,740.148 886.344,752.54 886.903,750.36 887.463,749.739 888.022,744.466 888.581,741.748 889.14,705.131 889.7,721.026 890.259,718.07 890.818,688.594 891.377,687.442 891.937,690.079 892.496,737.47 893.055,718.613 893.614,714.851 894.174,682.419 894.733,684.33 895.292,670.732 895.851,657.276 896.411,639.893 896.97,626.75 897.529,633.511 898.088,623.934 898.648,627.446 899.207,631.562 899.766,632.822 900.325,640.047 900.885,643.266 901.444,631.597 902.003,663.908 902.562,649.607 903.122,633.473 903.681,649.955 904.24,650.633 904.799,652.389 905.359,652.244 905.918,652.332 906.477,608.089 907.036,611.291 907.596,619.141 908.155,638.917 908.714,641.102 909.273,643.57 909.833,727.857 910.392,727.024 910.951,759.447 911.51,739.257 912.07,717.607 912.629,750.766 913.188,733.277 913.747,729.046 914.307,729.211 914.866,760.315 915.425,741.286 915.984,751.894 916.544,766.164 917.103,732.576 917.662,716.76 918.221,683.22 918.781,718.014 919.34,717.041 919.899,749.362 920.458,749.261 921.018,747.291 921.577,697.715 922.136,699.841 922.695,699.937 923.255,698.973 923.814,712.812 924.373,729.736 924.932,711.895 925.492,731.422 926.051,731.392 926.61,712.649 927.169,725.943 927.729,706.637 928.288,707.05 928.847,706.211 929.406,723.174 929.966,719.063 930.525,683.804 931.084,700.308 931.644,664.645 932.203,729.815 932.762,725.152 933.321,736.75 933.881,733.495 934.44,746.915 934.999,775.933 935.558,769.302 936.118,752.819 936.677,763.528 937.236,774.985 937.795,790.251 938.355,770.577 938.914,749.453 939.473,712.025 940.032,726.268 940.592,723.299 941.151,722.064 941.71,750.689 942.269,784.066 942.829,746.084 943.388,709.111 943.947,723.837 944.506,721.015 945.066,717.439 945.625,697.451 946.184,675.949 946.743,676.012 947.303,693.936 947.862,739.047 948.421,723.011 948.98,734.466 949.54,730.251 950.099,760.983 950.658,771.804 951.217,765.462 951.777,758.95 952.336,705.695 952.895,690.3 953.454,737.078 954.014,781.514 954.573,790.019 955.132,784.78 955.691,777.19 956.251,735.133 956.81,699.54 957.369,697.421 957.928,679.241 958.488,661.256 959.047,689.74 959.606,688.627 960.165,720.472 960.725,702.449 961.284,718.769 961.843,697.988 962.402,729.029 962.962,740.307 963.521,716.13 964.08,745.666 964.639,725.227 965.199,704.384 965.758,668.451 966.317,670.433 966.876,704.865 967.436,705.065 967.995,688.85 968.554,718.413 969.113,718.146 969.673,702.783 970.232,716.577 970.791,714.856 971.35,694.945 971.91,692.461 972.469,673.739 973.028,657.452 973.587,660.299 974.147,689.182 974.706,688.237 975.265,625.26 975.824,610.045 976.384,615.661 976.943,623.309 977.502,629.85 978.061,633.44 978.621,619.848 979.18,621.745 979.739,622.98 980.298,630.776 980.858,630.647 981.417,648.08 981.976,682.855 982.535,729.036 983.095,728.111 983.654,710.119 984.213,678.178 984.772,599.338 985.332,623.559 985.891,643.226 986.45,664.134 987.009,648.485 987.569,651.26 988.128,637.319 988.687,658.312 989.246,658.652 989.806,677.731 990.365,679.748 990.924,697.647 991.483,715.406 992.043,714.596 992.602,712.381 993.161,713.012 993.72,709.917 994.28,637.982 994.839,641.985 995.398,643.381 995.957,641.115 996.517,661.795 997.076,660.652 997.635,625.932 998.194,650.154 998.754,683.585 999.313,683.903 999.872,667.292 1000.43,689.232 1000.99,720.101 1001.55,734.766 1002.11,730.86 1002.67,744.716 1003.23,725.522 1003.79,691.73 1004.35,695.505 1004.91,664.126 1005.46,699.446 1006.02,668.564 1006.58,651.271 1007.14,670.543 1007.7,688.69 1008.26,658.649 1008.82,646.393 1009.38,683.123 1009.94,652.44 1010.5,654.548 1011.06,659.123 1011.62,641.519 1012.18,597.514 1012.73,583.982 1013.29,558.577 1013.85,582.48 1014.41,603.18 1014.97,593.137 1015.53,584.501 1016.09,621.441 1016.65,625.939 1017.21,645.655 1017.77,648.863 1018.33,650.88 1018.89,639.77 1019.45,659.186 1020.01,663.289 1020.56,662.247 1021.12,696.339 1021.68,729.581 1022.24,712.891 1022.8,681.477 1023.36,665.178 1023.92,649.429 1024.48,638.673 1025.04,641.752 1025.6,673.345 1026.16,674.457 1026.72,672.118 1027.28,608.191 1027.83,628.111 1028.39,644.209 1028.95,629.38 1029.51,630.812 1030.07,630.778 1030.63,632.707 1031.19,668.4 1031.75,668.015 1032.31,649.927 1032.87,656.149 1033.43,625.695 1033.99,595.294 1034.55,652.095 1035.1,654.574 1035.66,627.619 1036.22,661.819 1036.78,649.777 1037.34,650.677 1037.9,636.553 1038.46,670.679 1039.02,671.691 1039.58,720.156 1040.14,717.669 1040.7,734.389 1041.26,716.047 1041.82,746.762 1042.38,727.578 1042.93,757.986 1043.49,723.455 1044.05,738.083 1044.61,717.067 1045.17,746.725 1045.73,761.03 1046.29,737.39 1046.85,717.757 1047.41,748.74 1047.97,729.617 1048.53,698.711 1049.09,683.017 1049.65,711.308 1050.2,693.619 1050.76,694.328 1051.32,692.236 1051.88,695.602 1052.44,710.868 1053,697.349 1053.56,696.01 1054.12,676.034 1054.68,691.909 1055.24,704.994 1055.8,654.251 1056.36,651.473 1056.92,669.761 1057.48,688.309 1058.03,672.399 1058.59,689.523 1059.15,705.273 1059.71,672.326 1060.27,638.341 1060.83,609.962 1061.39,612.102 1061.95,634.684 1062.51,619.274 1063.07,623.862 1063.63,628.365 1064.19,613.226 1064.75,615.215 1065.3,606.064 1065.86,588.38 1066.42,609.699 1066.98,645.415 1067.54,647.636 1068.1,667.753 1068.66,670.495 1069.22,636.018 1069.78,636.934 1070.34,607.666 1070.9,646.248 1071.46,631.988 1072.02,618.401 1072.57,622.89 1073.13,645.2 1073.69,615.242 1074.25,605.057 1074.81,596.016 1075.37,584.94 1075.93,572.632 1076.49,597.667 1077.05,603.803 1077.61,588.875 1078.17,576.587 1078.73,583.513 1079.29,570.887 1079.85,573.533 1080.4,596.067 1080.96,650.1 1081.52,686.379 1082.08,685.677 1082.64,699.709 1083.2,700.248 1083.76,701.082 1084.32,699.446 1084.88,698.32 1085.44,728.345 1086,721.887 1086.56,719.941 1087.12,717.456 1087.67,732.535 1088.23,697.026 1088.79,695.63 1089.35,693.546 1089.91,693.058 1090.47,741.21 1091.03,788.859 1091.59,816.163 1092.15,807.435 1092.71,786.548 1093.27,777.942 1093.83,773.169 1094.39,751.878 1094.94,732.398 1095.5,776.762 1096.06,823.268 1096.62,829.752 1097.18,837.041 1097.74,813.554 1098.3,778.368 1098.86,805.095 1099.42,783.244 1099.98,743.644 1100.54,743.376 1101.1,705.875 1101.66,687.605 1102.22,671.025 1102.77,655.124 1103.33,628.061 1103.89,630.277 1104.45,647.237 1105.01,652.816 1105.57,654.253 1106.13,671.377 1106.69,705.716 1107.25,721.1 1107.81,684.438 1108.37,685.697 1108.93,686.956 1109.49,655.171 1110.04,656.236 1110.6,642.398 1111.16,644.796 1111.72,648.002 1112.28,618.723 1112.84,623.171 1113.4,627.659 1113.96,599.125 1114.52,602.945 1115.08,624.834 1115.64,626.978 1116.2,646.088 1116.76,614.314 1117.31,621.488 1117.87,670.323 1118.43,684.872 1118.99,683.492 1119.55,698.531 1120.11,744.848 1120.67,738.842 1121.23,719.73 1121.79,734.153 1122.35,747.438 1122.91,743.262 1123.47,742.708 1124.03,739.625 1124.59,753.971 1125.14,752.57 1125.7,733.772 1126.26,694.621 1126.82,664.451 1127.38,680.174 1127.94,697.482 1128.5,724.446 1129.06,705.606 1129.62,677.436 1130.18,712.006 1130.74,677.329 1131.3,665.405 1131.86,717.195 1132.41,704.163 1132.97,703.517 1133.53,683.862 1134.09,686.66 1134.65,675.054 1135.21,643.054 1135.77,675.523 1136.33,677.69 1136.89,678.803 1137.45,692.376 1138.01,707.629 1138.57,723.789 1139.13,739.905 1139.68,756.396 1140.24,750.458 1140.8,762.728 1141.36,792.9 1141.92,754.122 1142.48,735.546 1143.04,735.529 1143.6,717.502 1144.16,714.334 1144.72,714.018 1145.28,663.198 1145.84,646.21 1146.4,681.43 1146.96,699.614 1147.51,680.541 1148.07,647.188 1148.63,661.347 1149.19,647.423 1149.75,665.171 1150.31,662.474 1150.87,664.074 1151.43,663.237 1151.99,644.912 1152.55,645.689 1153.11,660.786 1153.67,644.486 1154.23,648.116 1154.78,651.423 1155.34,605.82 1155.9,627.625 1156.46,647.587 1157.02,621.118 1157.58,609.22 1158.14,614.128 1158.7,616.643 1159.26,623.788 1159.82,626.563 1160.38,612.695 1160.94,603.507 1161.5,545.011 1162.05,554.276 1162.61,578.28 1163.17,601.279 1163.73,605.014 1164.29,607.734 1164.85,626.584 1165.41,615.137 1165.97,616.764 1166.53,652.679 1167.09,637.876 1167.65,672.457 1168.21,691.88 1168.77,673.732 1169.33,705.648 1169.88,721.653 1170.44,720.41 1171,719.572 1171.56,746.256 1172.12,756.951 1172.68,770.231 1173.24,751.067 1173.8,749.765 1174.36,765.143 1174.92,731.934 1175.48,727.793 1176.04,744.775 1176.6,741.878 1177.15,753.387 1177.71,734.137 1178.27,697.219 1178.83,725.041 1179.39,719.521 1179.95,702.983 1180.51,716.316 1181.07,715.729 1181.63,697.77 1182.19,678.601 1182.75,691.376 1183.31,708.471 1183.87,690.872 1184.43,691.662 1184.98,641.536 1185.54,641.918 1186.1,644.269 1186.66,612.725 1187.22,585.611 1187.78,656.918 1188.34,692.973 1188.9,694.047 1189.46,705.469 1190.02,704.334 1190.58,738.236 1191.14,771.383 1191.7,770.166 1192.25,765.813 1192.81,762.237 1193.37,757.171 1193.93,815.614 1194.49,808.151 1195.05,799.527 1195.61,795.587 1196.17,788.74 1196.73,796.081 1197.29,759.079 1197.85,739.166 1198.41,738.049 1198.97,739.853 1199.52,722.449 1200.08,749.568 1200.64,731.793 1201.2,729.218 1201.76,708.599 1202.32,720.971 1202.88,736.682 1203.44,748.27 1204,758.458 1204.56,785.274 1205.12,798.076 1205.68,805.262 1206.24,751.94 1206.8,767.742 1207.35,729.895 1207.91,724.847 1208.47,705.279 1209.03,720.53 1209.59,681.101 1210.15,695.774 1210.71,727.884 1211.27,694.521 1211.83,676.921 1212.39,694.982 1212.95,707.457 1213.51,704.636 1214.07,701.264 1214.62,681.86 1215.18,681.91 1215.74,714.636 1216.3,710.08 1216.86,689.172 1217.42,672.833 1217.98,673.23 1218.54,642.46 1219.1,626.974 1219.66,614.19 1220.22,619.384 1220.78,623.922 1221.34,610.145 1221.89,615.231 1222.45,603.84 1223.01,577.857 1223.57,582.477 1224.13,640.352 1224.69,641.764 1225.25,662.727 1225.81,663.667 1226.37,658.187 1226.93,674.248 1227.49,678.426 1228.05,677.742 1228.61,676.824 1229.17,722.977 1229.72,692.179 1230.28,677.806 1230.84,678.034 1231.4,691.475 1231.96,662.24 1232.52,663 1233.08,614.142 1233.64,583.032 1234.2,569.531 1234.76,560.693 1235.32,602.367 1235.88,623.126 1236.44,642.224 1236.99,661.262 1237.55,644.5 1238.11,613.852 1238.67,664.261 1239.23,633.789 1239.79,604.317 1240.35,654.998 1240.91,654.31 1241.47,641.163 1242.03,594.528 1242.59,613.03 1243.15,614.967 1243.71,621.717 1244.26,639.03 1244.82,658.646 1245.38,629.472 1245.94,635.901 1246.5,622.566 1247.06,610.836 1247.62,613.858 1248.18,600.967 1248.74,573.482 1249.3,545.717 1249.86,554.307 1250.42,557.002 1250.98,581.73 1251.54,589.941 1252.09,631.272 1252.65,645.209 1253.21,630.062 1253.77,650.135 1254.33,670.626 1254.89,656.719 1255.45,675.908 1256.01,740.647 1256.57,739.413 1257.13,737.389 1257.69,750.974 1258.25,713.667 1258.81,712.123 1259.36,710.847 1259.92,725.692 1260.48,709.861 1261.04,708.521 1261.6,690.562 1262.16,707.822 1262.72,710.729 1263.28,692.853 1263.84,708.215 1264.4,691.163 1264.96,690.28 1265.52,689.681 1266.08,686.385 1266.63,684.326 1267.19,684.261 1267.75,650.551 1268.31,668.574 1268.87,699.028 1269.43,695.875 1269.99,679.612 1270.55,684.092 1271.11,712.623 1271.67,730.272 1272.23,742.592 1272.79,725.342 1273.35,709.721 1273.91,722.286 1274.46,719.755 1275.02,685.113 1275.58,686.068 1276.14,687.541 1276.7,686.16 1277.26,704.097 1277.82,702.119 1278.38,686.418 1278.94,670.291 1279.5,687.777 1280.06,688.978 1280.62,706.897 1281.18,704.92 1281.73,704.388 1282.29,671.039 1282.85,686.826 1283.41,700.833 1283.97,733.928 1284.53,750.212 1285.09,747.045 1285.65,727.579 1286.21,661.907 1286.77,662.528 1287.33,659.471 1287.89,660.252 1288.45,677.009 1289,680.229 1289.56,661.914 1290.12,675.979 1290.68,695.988 1291.24,675.33 1291.8,674.138 1292.36,687.321 1292.92,691.162 1293.48,738.83 1294.04,687.476 1294.6,690.859 1295.16,687.514 1295.72,736.451 1296.28,734.039 1296.83,713.823 1297.39,712.845 1297.95,712.783 1298.51,692.631 1299.07,691.258 1299.63,691.806 1300.19,688.977 1300.75,708.551 1301.31,674.871 1301.87,659.125 1302.43,625.777 1302.99,610.784 1303.55,642.995 1304.1,677.309 1304.66,665.795 1305.22,667.895 1305.78,650.839 1306.34,605.202 1306.9,609.089 1307.46,643.486 1308.02,644.839 1308.58,644.138 1309.14,664.262 1309.7,670.48 1310.26,686.032 1310.82,687.794 1311.38,684.547 1311.93,682.136 1312.49,652.001 1313.05,681.358 1313.61,681.337 1314.17,743.873 1314.73,754.899 1315.29,734.12 1315.85,776.403 1316.41,774.478 1316.97,754.905 1317.53,785.468 1318.09,764.908 1318.65,728.471 1319.2,726.756 1319.76,713.342 1320.32,681.015 1320.88,682.979 1321.44,698.466 1322,682.012 1322.56,683.54 1323.12,683.74 1323.68,683.704 1324.24,670.662 1324.8,671.144 1325.36,654.293 1325.92,657.4 1326.47,646.769 1327.03,633.35 1327.59,651.432 1328.15,668.719 1328.71,670.98 1329.27,687.51 1329.83,703.223 1330.39,736.318 1330.95,716.375 1331.51,719.238 1332.07,700.631 1332.63,700.59 1333.19,701.267 1333.75,701.413 1334.3,701.786 1334.86,715.922 1335.42,726.354 1335.98,740.539 1336.54,736.911 1337.1,766.981 1337.66,809.343 1338.22,801.973 1338.78,764.669 1339.34,762.392 1339.9,711.189 1340.46,726.022 1341.02,737.18 1341.57,717.925 1342.13,718.364 1342.69,720.89 1343.25,670.177 1343.81,640.053 1344.37,625.651 1344.93,612.238 1345.49,600.892 1346.05,603.066 1346.61,624.573 1347.17,611.35 1347.73,614.806 1348.29,618.567 1348.84,624.324 1349.4,627.308 1349.96,600.815 1350.52,620.714 1351.08,593.855 1351.64,616.212 1352.2,638.111 1352.76,643.947 1353.32,629.504 1353.88,630.288 1354.44,653.852 1355,639.57 1355.56,625.04 1356.12,579.521 1356.67,632.059 1357.23,613.562 1357.79,620.162 1358.35,606.755 1358.91,612.595 1359.47,597.96 1360.03,617.952 1360.59,670.702 1361.15,657.057 1361.71,659.202 1362.27,662.999 1362.83,713.893 1363.39,729.954 1363.94,759.992 1364.5,742.789 1365.06,706.54 1365.62,739.651 1366.18,721.203 1366.74,733.561 1367.3,746.452 1367.86,742.316 1368.42,724.286 1368.98,740.039 1369.54,752.55 1370.1,733.95 1370.66,715.337 1371.21,713.4 1371.77,680.549 1372.33,677.158 1372.89,664.419 1373.45,645.98 1374.01,614.75 1374.57,601.235 1375.13,634.613 1375.69,619.672 1376.25,654.013 1376.81,704.443 1377.37,702.562 1377.93,703.169 1378.49,681.32 1379.04,695.643 1379.6,692.38 1380.16,691.574 1380.72,743.57 1381.28,709.668 1381.84,709.176 1382.4,722.364 1382.96,707.09 1383.52,705.756 1384.08,707.346 1384.64,708.769 1385.2,719.611 1385.76,719.537 1386.31,734.475 1386.87,750.092 1387.43,733.026 1387.99,744.902 1388.55,725.893 1389.11,722.584 1389.67,720.63 1390.23,751.454 1390.79,733.798 1391.35,730.446 1391.91,761.849 1392.47,771.008 1393.03,717.542 1393.58,750.373 1394.14,729.879 1394.7,727.782 1395.26,678.901 1395.82,681.39 1396.38,650.796 1396.94,668.078 1397.5,685.852 1398.06,685.549 1398.62,684.919 1399.18,668.06 1399.74,669.541 1400.3,688.219 1400.86,703.456 1401.41,720.122 1401.97,716.19 1402.53,681.288 1403.09,646.031 1403.65,644.733 1404.21,662.963 1404.77,645.068 1405.33,645.192 1405.89,661.687 1406.45,662.162 1407.01,696.11 1407.57,709.759 1408.13,740.05 1408.68,737.253 1409.24,765.333 1409.8,779.556 1410.36,762.372 1410.92,791.134 1411.48,802.025 1412.04,764.169 1412.6,746.229 1413.16,773.985 1413.72,737.041 1414.28,720.592 1414.84,734.114 1415.4,747.236 1415.95,725.302 1416.51,720.023 1417.07,734.688 1417.63,713.944 1418.19,662.517 1418.75,662.625 1419.31,662.341 1419.87,661.493 1420.43,646.91 1420.99,663.479 1421.55,681.232 1422.11,665.77 1422.67,665.762 1423.23,696.674 1423.78,711.204 1424.34,758.186 1424.9,751.11 1425.46,729.932 1426.02,695.127 1426.58,744.222 1427.14,757.471 1427.7,770.824 1428.26,732.787 1428.82,728.335 1429.38,756.109 1429.94,737.342 1430.5,719.498 1431.05,715.14 1431.61,728.817 1432.17,725.809 1432.73,686.455 1433.29,701.103 1433.85,686.826 1434.41,683.741 1434.97,669.04 1435.53,657.942 1436.09,661.425 1436.65,663.793 1437.21,646.018 1437.77,651.836 1438.33,653.619 1438.88,601.487 1439.44,607.044 1440,593.935 1440.56,596.294 1441.12,600.255 1441.68,604.324 1442.24,607.685 1442.8,665.484 1443.36,650.901 1443.92,634.084 1444.48,683.115 1445.04,669.378 1445.6,686.349 1446.15,689.209 1446.71,669.286 1447.27,653.242 1447.83,670.543 1448.39,640.133 1448.95,628.69 1449.51,617.984 1450.07,588.922 1450.63,576.755 1451.19,596.699 1451.75,602.335 1452.31,573.703 1452.87,595.723 1453.42,583.294 1453.98,637.179 1454.54,671.429 1455.1,672.569 1455.66,690.132 1456.22,736.835 1456.78,736.247 1457.34,752.046 1457.9,743.731 1458.46,740.323 1459.02,772.153 1459.58,766.183 1460.14,825.652 1460.7,799.046 1461.25,791.54 1461.81,802.573 1462.37,798.639 1462.93,794.029 1463.49,803.041 1464.05,794.983 1464.61,772.578 1465.17,747.93 1465.73,729.123 1466.29,708.586 1466.85,712.459 1467.41,708.155 1467.97,705.903 1468.52,752.698 1469.08,733.978 1469.64,732.554 1470.2,729.919 1470.76,709.828 1471.32,738.306 1471.88,734.306 1472.44,698.505 1473,697.416 1473.56,682.109 1474.12,685.408 1474.68,700.401 1475.24,701.547 1475.79,684.436 1476.35,687.563 1476.91,655.336 1477.47,670.901 1478.03,672.075 1478.59,656.004 1479.15,655.758 1479.71,639.516 1480.27,656.549 1480.83,643.602 1481.39,646.019 1481.95,631.105 1482.51,586.433 1483.07,607.097 1483.62,642.977 1484.18,610.243 1484.74,627.136 1485.3,632.464 1485.86,635.177 1486.42,637.681 1486.98,624.34 1487.54,628.228 1488.1,647.799 1488.66,651.424 1489.22,653.746 1489.78,658.877 1490.34,662.595 1490.89,632.83 1491.45,637.868 1492.01,672.28 1492.57,687.211 1493.13,669.245 1493.69,688.41 1494.25,672.519 1494.81,672.664 1495.37,659.86 1495.93,691.181 1496.49,673.006 1497.05,686.917 1497.61,686.458 1498.16,667.561 1498.72,654.777 1499.28,690.821 1499.84,674.131 1500.4,675.044 1500.96,675.496 1501.52,675.421 1502.08,646.275 1502.64,632.59 1503.2,638.52 1503.76,640.515 1504.32,642.735 1504.88,625.921 1505.44,613.773 1505.99,619.014 1506.55,619.698 1507.11,623.324 1507.67,642.763 1508.23,708.366 1508.79,674.54 1509.35,660.604 1509.91,628.555 1510.47,615.134 1511.03,652.483 1511.59,650.175 1512.15,652.029 1512.71,635.433 1513.26,640.295 1513.82,596.882 1514.38,605.669 1514.94,607.744 1515.5,660.735 1516.06,643.32 1516.62,645.064 1517.18,612.079 1517.74,599.176 1518.3,637.921 1518.86,639.595 1519.42,642.029 1519.98,646.74 1520.53,681.254 1521.09,680.789 1521.65,666.008 1522.21,666.281 1522.77,621.528 1523.33,620.646 1523.89,624.189 1524.45,611.597 1525.01,599.891 1525.57,587.527 1526.13,580.437 1526.69,604.288 1527.25,623.137 1527.81,624.168 1528.36,625.63 1528.92,645.222 1529.48,662.705 1530.04,678.304 1530.6,647.686 1531.16,651.905 1531.72,668.439 1532.28,669.568 1532.84,674.204 1533.4,691.951 1533.96,674.78 1534.52,675.303 1535.08,695.265 1535.63,674.795 1536.19,707.214 1536.75,738.936 1537.31,754.412 1537.87,751.475 1538.43,768.883 1538.99,762.919 1539.55,729.191 1540.11,743.489 1540.67,709.64 1541.23,740.014 1541.79,737.579 1542.35,734.616 1542.9,749.544 1543.46,746.139 1544.02,744.032 1544.58,754.005 1545.14,747.368 1545.7,745.839 1546.26,706.178 1546.82,703.015 1547.38,685.746 1547.94,703.004 1548.5,717.066 1549.06,750.479 1549.62,763.544 1550.18,761.668 1550.73,755.18 1551.29,767.972 1551.85,750.111 1552.41,774.648 1552.97,740.022 1553.53,719.803 1554.09,718.02 1554.65,702.237 1555.21,698.826 1555.77,698.309 1556.33,696.964 1556.89,663.415 1557.45,696.452 1558,696.203 1558.56,696.208 1559.12,691.516 1559.68,724.634 1560.24,771.72 1560.8,797.544 1561.36,806.152 1561.92,815.847 1562.48,823.932 1563.04,845.238 1563.6,836.66 1564.16,845.967 1564.72,869.324 1565.28,847.618 1565.83,857.531 1566.39,837.163 1566.95,797.556 1567.51,807.166 1568.07,784.83 1568.63,762.481 1569.19,706.82 1569.75,705.418 1570.31,690.288 1570.87,722.075 1571.43,717.906 1571.99,717.157 1572.55,721.475 1573.1,733.406 1573.66,683.959 1574.22,665.753 1574.78,651.695 1575.34,650.413 1575.9,636.811 1576.46,654.316 1577.02,653.668 1577.58,643.333 1578.14,643.589 1578.7,627.15 1579.26,646.771 1579.82,630.614 1580.37,635.023 1580.93,638.699 1581.49,657.55 1582.05,643.686 1582.61,660.984 1583.17,615.168 1583.73,637.897 1584.29,640.942 1584.85,595.008 1585.41,582.035 1585.97,569.105 1586.53,654.935 1587.09,693.5 1587.65,645.621 1588.2,631.667 1588.76,633.563 1589.32,639.756 1589.88,643.685 1590.44,663.144 1591,680.683 1591.56,663.853 1592.12,682.407 1592.68,697.258 1593.24,664.396 1593.8,653.357 1594.36,658.668 1594.92,629.125 1595.47,597.112 1596.03,582.059 1596.59,567.767 1597.15,607.843 1597.71,593.761 1598.27,629.692 1598.83,635.432 1599.39,652.451 1599.95,672.913 1600.51,656.673 1601.07,693.148 1601.63,665.264 1602.19,680.45 1602.74,661.887 1603.3,660.885 1603.86,646.192 1604.42,662.542 1604.98,678.321 1605.54,675.74 1606.1,674.894 1606.66,692.292 1607.22,727.939 1607.78,723.499 1608.34,709.294 1608.9,723.94 1609.46,723.767 1610.02,783.526 1610.57,788.87 1611.13,781.18 1611.69,789.191 1612.25,754.097 1612.81,730.842 1613.37,727.334 1613.93,727.933 1614.49,725.725 1615.05,706.837 1615.61,723.009 1616.17,707.412 1616.73,654.261 1617.29,676.267 1617.84,660.061 1618.4,710.508 1618.96,691.303 1619.52,672.73 1620.08,644.79 1620.64,649.427 1621.2,652.282 1621.76,668.44 1622.32,670.083 1622.88,686.979 1623.44,669.026 1624,620.731 1624.56,624.802 1625.11,647.027 1625.67,632.181 1626.23,651.742 1626.79,653.217 1627.35,656.292 1627.91,659.785 1628.47,661.912 1629.03,680.78 1629.59,682.36 1630.15,649.955 1630.71,683.537 1631.27,714.306 1631.83,711.448 1632.39,726.767 1632.94,741.869 1633.5,723.412 1634.06,721.043 1634.62,699.996 1635.18,713.893 1635.74,715.802 1636.3,714.722 1636.86,743.469 1637.42,741.147 1637.98,739.967 1638.54,722.796 1639.1,767.534 1639.66,746.506 1640.21,744.27 1640.77,774.041 1641.33,753.506 1641.89,734.892 1642.45,759.219 1643.01,756.224 1643.57,738.649 1644.13,735.68 1644.69,749.896 1645.25,778.183 1645.81,738.493 1646.37,748.177 1646.93,743.203 1647.48,739.105 1648.04,736.693 1648.6,734.972 1649.16,764.367 1649.72,838.183 1650.28,830.916 1650.84,838.219 1651.4,783.04 1651.96,731.723 1652.52,696.951 1653.08,694.534 1653.64,697.292 1654.2,714.969 1654.76,716.428 1655.31,712.109 1655.87,743.225 1656.43,724.369 1656.99,737.007 1657.55,700.404 1658.11,700.03 1658.67,696.543 1659.23,677.696 1659.79,661.754 1660.35,661.23 1660.91,696.907 1661.47,697.192 1662.03,662.876 1662.58,667.884 1663.14,654.983 1663.7,609.005 1664.26,606.573 1664.82,609.856 1665.38,614.454 1665.94,620.102 1666.5,609.262 1667.06,615.735 1667.62,588.542 1668.18,608.116 1668.74,596.857 1669.3,586.626 1669.85,556.416 1670.41,544.531 1670.97,517.613 1671.53,494.572 1672.09,503.338 1672.65,526.797 1673.21,518.188 1673.77,526.916 1674.33,553.733 1674.89,607.408 1675.45,597.44 1676.01,669.374 1676.57,671.937 1677.13,674.29 1677.68,659.099 1678.24,644.24 1678.8,650.144 1679.36,683.935 1679.92,683.717 1680.48,648.204 1681.04,631.332 1681.6,666.244 1682.16,686.034 1682.72,672.388 1683.28,651.72 1683.84,686.797 1684.4,668.741 1684.95,684.957 1685.51,684.247 1686.07,683.925 1686.63,686.393 1687.19,703.816 1687.75,689.175 1688.31,693.489 1688.87,706.942 1689.43,690.161 1689.99,708.652 1690.55,725.721 1691.11,739.954 1691.67,755.831 1692.23,719.472 1692.78,704.664 1693.34,732.438 1693.9,728.287 1694.46,744.007 1695.02,741.241 1695.58,721.812 1696.14,739.188 1696.7,738.45 1697.26,721.284 1697.82,721.791 1698.38,738.615 1698.94,700.912 1699.5,689.859 1700.05,720.103 1700.61,700.931 1701.17,666.812 1701.73,684.435 1702.29,685.645 1702.85,701.626 1703.41,716.271 1703.97,717.173 1704.53,683.894 1705.09,666.438 1705.65,684.862 1706.21,698.873 1706.77,684.267 1707.32,684.704 1707.88,684.33 1708.44,667.154 1709,682.926 1709.56,683.818 1710.12,686.187 1710.68,655.963 1711.24,674.383 1711.8,653.776 1712.36,640.617 1712.92,694.999 1713.48,678.899 1714.04,661.42 1714.6,663.634 1715.15,667.057 1715.71,670.373 1716.27,688.812 1716.83,688.337 1717.39,672.388 1717.95,690 1718.51,704.087 1719.07,687.792 1719.63,700.117 1720.19,699.631 1720.75,646.812 1721.31,668.002 1721.87,670.002 1722.42,686.051 1722.98,699.359 1723.54,698.039 1724.1,700.358 1724.66,698.297 1725.22,717.496 1725.78,719.841 1726.34,718.119 1726.9,736.753 1727.46,734.955 1728.02,731.795 1728.58,758.899 1729.14,721.534 1729.69,701.976 1730.25,732.93 1730.81,745.152 1731.37,726.536 1731.93,723.72 1732.49,721.551 1733.05,737.854 1733.61,769.746 1734.17,765.17 1734.73,758.429 1735.29,733.874 1735.85,727.454 1736.41,706.805 1736.97,686.614 1737.52,702.545 1738.08,701.116 1738.64,696.512 1739.2,661.907 1739.76,678.69 1740.32,660.979 1740.88,661.396 1741.44,665.088 1742,680.818 1742.56,680.08 1743.12,680.066 1743.68,681.017 1744.24,681.255 1744.79,682.846 1745.35,682.857 1745.91,682.27 1746.47,679.724 1747.03,647.839 1747.59,649.046 1748.15,667.616 1748.71,669.57 1749.27,689.091 1749.83,690.337 1750.39,738.022 1750.95,668.706 1751.51,701.697 1752.06,698.885 1752.62,708.466 1753.18,687.101 1753.74,670.76 1754.3,669.497 1754.86,703.704 1755.42,688.524 1755.98,705.3 1756.54,720.082 1757.1,702.58 1757.66,684.029 1758.22,665.37 1758.78,616.462 1759.34,654.36 1759.89,685.621 1760.45,687.286 1761.01,718.163 1761.57,698.508 1762.13,695.589 1762.69,680.676 1763.25,666.586 1763.81,696.892 1764.37,712.997 1764.93,680.444 1765.49,710.063 1766.05,740.853 1766.61,737.339 1767.16,736.483 1767.72,730.732 1768.28,729.199 1768.84,744.292 1769.4,695.564 1769.96,694.993 1770.52,710.659 1771.08,693.346 1771.64,660.919 1772.2,694.745 1772.76,694.822 1773.32,663.357 1773.88,636.237 1774.43,641.004 1774.99,708.029 1775.55,692.929 1776.11,694.473 1776.67,693.694 1777.23,661.594 1777.79,693.072 1778.35,659.028 1778.91,641.861 1779.47,646.842 1780.03,633.129 1780.59,638.406 1781.15,676.594 1781.71,674.109 1782.26,609.861 1782.82,633.543 1783.38,619.237 1783.94,594.211 1784.5,601.238 1785.06,590.236 1785.62,597.21 1786.18,600.59 1786.74,623.281 1787.3,638.66 1787.86,659.487 1788.42,658.382 1788.98,662.786 1789.53,668.48 1790.09,639.837 1790.65,640.349 1791.21,659.274 1791.77,659.312 1792.33,664.371 1792.89,681.359 1793.45,699.33 1794.01,695.632 1794.57,709.705 1795.13,721.641 1795.69,687.88 1796.25,653.542 1796.8,672.267 1797.36,684.726 1797.92,636.306 1798.48,624.451 1799.04,643.392 1799.6,662.698 1800.16,615.999 1800.72,635.697 1801.28,642.131 1801.84,673.37 1802.4,691.766 1802.96,676.95 1803.52,659.699 1804.08,659.295 1804.63,628.587 1805.19,649.814 1805.75,649.865 1806.31,666.071 1806.87,685.662 1807.43,720.628 1807.99,720.627 1808.55,738.437 1809.11,704.76 1809.67,702.885 1810.23,698.967 1810.79,713.44 1811.35,677.968 1811.9,677.711 1812.46,676.74 1813.02,710.851 1813.58,693.524 1814.14,697.069 1814.7,730.655 1815.26,757.633 1815.82,772.355 1816.38,764.36 1816.94,761.332 1817.5,758.296 1818.06,737.104 1818.62,698.737 1819.18,647.811 1819.73,666.245 1820.29,680.526 1820.85,666.954 1821.41,668.39 1821.97,707.178 1822.53,672.746 1823.09,689.329 1823.65,737.777 1824.21,741.721 1824.77,757.504 1825.33,737.061 1825.89,718.936 1826.45,682.663 1827,650.981 1827.56,667.487 1828.12,671.11 1828.68,660.092 1829.24,628.859 1829.8,611.96 1830.36,616.773 1830.92,618.818 1831.48,622.977 1832.04,609.343 1832.6,578.827 1833.16,599.715 1833.72,634.545 1834.27,603.995 1834.83,628.035 1835.39,646.659 1835.95,649.539 1836.51,666.063 1837.07,668.022 1837.63,650.874 1838.19,670.388 \"/>\n<path clip-path=\"url(#clip633)\" d=\"M720.247 691.001 L720.806 691.001 L721.365 691.001 L721.924 691.001 L722.484 691.001 L723.043 691.001 L723.602 691.001 L724.161 691.001 L724.721 691.001 L725.28 691.001 L725.839 691.001 L726.398 691.001 L726.958 691.001 L727.517 691.001 L728.076 691.001 L728.635 691.001 L729.195 691.001 L729.754 691.001 L730.313 691.001 L730.872 691.001 L731.432 691.001 L731.991 691.001 L732.55 691.001 L733.109 691.001 L733.669 691.001 L734.228 691.001 L734.787 691.001 L735.346 691.001 L735.906 691.001 L736.465 691.001 L737.024 691.001 L737.583 691.001 L738.143 691.001 L738.702 691.001 L739.261 691.001 L739.82 691.001 L740.38 691.001 L740.939 691.001 L741.498 691.001 L742.057 691.001 L742.617 691.001 L743.176 691.001 L743.735 691.001 L744.294 691.001 L744.854 691.001 L745.413 691.001 L745.972 691.001 L746.531 691.001 L747.091 691.001 L747.65 691.001 L748.209 691.001 L748.768 691.001 L749.328 691.001 L749.887 691.001 L750.446 691.001 L751.005 691.001 L751.565 691.001 L752.124 691.001 L752.683 691.001 L753.242 691.001 L753.802 691.001 L754.361 691.001 L754.92 691.001 L755.479 691.001 L756.039 691.001 L756.598 691.001 L757.157 691.001 L757.716 691.001 L758.276 691.001 L758.835 691.001 L759.394 691.001 L759.953 691.001 L760.513 691.001 L761.072 691.001 L761.631 691.001 L762.19 691.001 L762.75 691.001 L763.309 691.001 L763.868 691.001 L764.427 691.001 L764.987 691.001 L765.546 691.001 L766.105 691.001 L766.664 691.001 L767.224 691.001 L767.783 691.001 L768.342 691.001 L768.901 691.001 L769.461 691.001 L770.02 691.001 L770.579 691.001 L771.138 691.001 L771.698 691.001 L772.257 691.001 L772.816 691.001 L773.375 691.001 L773.935 691.001 L774.494 691.001 L775.053 691.001 L775.612 691.001 L776.172 691.001 L776.731 691.001 L777.29 691.001 L777.849 691.001 L778.409 691.001 L778.968 691.001 L779.527 691.001 L780.086 691.001 L780.646 691.001 L781.205 691.001 L781.764 691.001 L782.323 691.001 L782.883 691.001 L783.442 691.001 L784.001 691.001 L784.56 691.001 L785.12 691.001 L785.679 691.001 L786.238 691.001 L786.797 691.001 L787.357 691.001 L787.916 691.001 L788.475 691.001 L789.034 691.001 L789.594 691.001 L790.153 691.001 L790.712 691.001 L791.271 691.001 L791.831 691.001 L792.39 691.001 L792.949 691.001 L793.508 691.001 L794.068 691.001 L794.627 691.001 L795.186 691.001 L795.745 691.001 L796.305 691.001 L796.864 691.001 L797.423 691.001 L797.982 691.001 L798.542 691.001 L799.101 691.001 L799.66 691.001 L800.219 691.001 L800.779 691.001 L801.338 691.001 L801.897 691.001 L802.456 691.001 L803.016 691.001 L803.575 691.001 L804.134 691.001 L804.693 691.001 L805.253 691.001 L805.812 691.001 L806.371 691.001 L806.931 691.001 L807.49 691.001 L808.049 691.001 L808.608 691.001 L809.168 691.001 L809.727 691.001 L810.286 691.001 L810.845 691.001 L811.405 691.001 L811.964 691.001 L812.523 691.001 L813.082 691.001 L813.642 691.001 L814.201 691.001 L814.76 691.001 L815.319 691.001 L815.879 691.001 L816.438 691.001 L816.997 691.001 L817.556 691.001 L818.116 691.001 L818.675 691.001 L819.234 691.001 L819.793 691.001 L820.353 691.001 L820.912 691.001 L821.471 691.001 L822.03 691.001 L822.59 691.001 L823.149 691.001 L823.708 691.001 L824.267 691.001 L824.827 691.001 L825.386 691.001 L825.945 691.001 L826.504 691.001 L827.064 691.001 L827.623 691.001 L828.182 691.001 L828.741 691.001 L829.301 691.001 L829.86 691.001 L830.419 691.001 L830.978 691.001 L831.538 691.001 L832.097 691.001 L832.656 691.001 L833.215 691.001 L833.775 691.001 L834.334 691.001 L834.893 691.001 L835.452 691.001 L836.012 691.001 L836.571 691.001 L837.13 691.001 L837.689 691.001 L838.249 691.001 L838.808 691.001 L839.367 691.001 L839.926 691.001 L840.486 691.001 L841.045 691.001 L841.604 691.001 L842.163 691.001 L842.723 691.001 L843.282 691.001 L843.841 691.001 L844.4 691.001 L844.96 691.001 L845.519 691.001 L846.078 691.001 L846.637 691.001 L847.197 691.001 L847.756 691.001 L848.315 691.001 L848.874 691.001 L849.434 691.001 L849.993 691.001 L850.552 691.001 L851.111 691.001 L851.671 691.001 L852.23 691.001 L852.789 691.001 L853.348 691.001 L853.908 691.001 L854.467 691.001 L855.026 691.001 L855.585 691.001 L856.145 691.001 L856.704 691.001 L857.263 691.001 L857.822 691.001 L858.382 691.001 L858.941 691.001 L859.5 691.001 L860.059 691.001 L860.619 691.001 L861.178 691.001 L861.737 691.001 L862.296 691.001 L862.856 691.001 L863.415 691.001 L863.974 691.001 L864.533 691.001 L865.093 691.001 L865.652 691.001 L866.211 691.001 L866.77 691.001 L867.33 691.001 L867.889 691.001 L868.448 691.001 L869.007 691.001 L869.567 691.001 L870.126 691.001 L870.685 691.001 L871.244 691.001 L871.804 691.001 L872.363 691.001 L872.922 691.001 L873.481 691.001 L874.041 691.001 L874.6 691.001 L875.159 691.001 L875.718 691.001 L876.278 691.001 L876.837 691.001 L877.396 691.001 L877.955 691.001 L878.515 691.001 L879.074 691.001 L879.633 691.001 L880.192 691.001 L880.752 691.001 L881.311 691.001 L881.87 691.001 L882.429 691.001 L882.989 691.001 L883.548 691.001 L884.107 691.001 L884.666 691.001 L885.226 691.001 L885.785 691.001 L886.344 691.001 L886.903 691.001 L887.463 691.001 L888.022 691.001 L888.581 691.001 L889.14 691.001 L889.7 691.001 L890.259 691.001 L890.818 691.001 L891.377 691.001 L891.937 691.001 L892.496 691.001 L893.055 691.001 L893.614 691.001 L894.174 691.001 L894.733 691.001 L895.292 691.001 L895.851 691.001 L896.411 691.001 L896.97 691.001 L897.529 691.001 L898.088 691.001 L898.648 691.001 L899.207 691.001 L899.766 691.001 L900.325 691.001 L900.885 691.001 L901.444 691.001 L902.003 691.001 L902.562 691.001 L903.122 691.001 L903.681 691.001 L904.24 691.001 L904.799 691.001 L905.359 691.001 L905.918 691.001 L906.477 691.001 L907.036 691.001 L907.596 691.001 L908.155 691.001 L908.714 691.001 L909.273 691.001 L909.833 691.001 L910.392 691.001 L910.951 691.001 L911.51 691.001 L912.07 691.001 L912.629 691.001 L913.188 691.001 L913.747 691.001 L914.307 691.001 L914.866 691.001 L915.425 691.001 L915.984 691.001 L916.544 691.001 L917.103 691.001 L917.662 691.001 L918.221 691.001 L918.781 691.001 L919.34 691.001 L919.899 691.001 L920.458 691.001 L921.018 691.001 L921.577 691.001 L922.136 691.001 L922.695 691.001 L923.255 691.001 L923.814 691.001 L924.373 691.001 L924.932 691.001 L925.492 691.001 L926.051 691.001 L926.61 691.001 L927.169 691.001 L927.729 691.001 L928.288 691.001 L928.847 691.001 L929.406 691.001 L929.966 691.001 L930.525 691.001 L931.084 691.001 L931.644 691.001 L932.203 691.001 L932.762 691.001 L933.321 691.001 L933.881 691.001 L934.44 691.001 L934.999 691.001 L935.558 691.001 L936.118 691.001 L936.677 691.001 L937.236 691.001 L937.795 691.001 L938.355 691.001 L938.914 691.001 L939.473 691.001 L940.032 691.001 L940.592 691.001 L941.151 691.001 L941.71 691.001 L942.269 691.001 L942.829 691.001 L943.388 691.001 L943.947 691.001 L944.506 691.001 L945.066 691.001 L945.625 691.001 L946.184 691.001 L946.743 691.001 L947.303 691.001 L947.862 691.001 L948.421 691.001 L948.98 691.001 L949.54 691.001 L950.099 691.001 L950.658 691.001 L951.217 691.001 L951.777 691.001 L952.336 691.001 L952.895 691.001 L953.454 691.001 L954.014 691.001 L954.573 691.001 L955.132 691.001 L955.691 691.001 L956.251 691.001 L956.81 691.001 L957.369 691.001 L957.928 691.001 L958.488 691.001 L959.047 691.001 L959.606 691.001 L960.165 691.001 L960.725 691.001 L961.284 691.001 L961.843 691.001 L962.402 691.001 L962.962 691.001 L963.521 691.001 L964.08 691.001 L964.639 691.001 L965.199 691.001 L965.758 691.001 L966.317 691.001 L966.876 691.001 L967.436 691.001 L967.995 691.001 L968.554 691.001 L969.113 691.001 L969.673 691.001 L970.232 691.001 L970.791 691.001 L971.35 691.001 L971.91 691.001 L972.469 691.001 L973.028 691.001 L973.587 691.001 L974.147 691.001 L974.706 691.001 L975.265 691.001 L975.824 691.001 L976.384 691.001 L976.943 691.001 L977.502 691.001 L978.061 691.001 L978.621 691.001 L979.18 691.001 L979.739 691.001 L980.298 691.001 L980.858 691.001 L981.417 691.001 L981.976 691.001 L982.535 691.001 L983.095 691.001 L983.654 691.001 L984.213 691.001 L984.772 691.001 L985.332 691.001 L985.891 691.001 L986.45 691.001 L987.009 691.001 L987.569 691.001 L988.128 691.001 L988.687 691.001 L989.246 691.001 L989.806 691.001 L990.365 691.001 L990.924 691.001 L991.483 691.001 L992.043 691.001 L992.602 691.001 L993.161 691.001 L993.72 691.001 L994.28 691.001 L994.839 691.001 L995.398 691.001 L995.957 691.001 L996.517 691.001 L997.076 691.001 L997.635 691.001 L998.194 691.001 L998.754 691.001 L999.313 691.001 L999.872 691.001 L1000.43 691.001 L1000.99 691.001 L1001.55 691.001 L1002.11 691.001 L1002.67 691.001 L1003.23 691.001 L1003.79 691.001 L1004.35 691.001 L1004.91 691.001 L1005.46 691.001 L1006.02 691.001 L1006.58 691.001 L1007.14 691.001 L1007.7 691.001 L1008.26 691.001 L1008.82 691.001 L1009.38 691.001 L1009.94 691.001 L1010.5 691.001 L1011.06 691.001 L1011.62 691.001 L1012.18 691.001 L1012.73 691.001 L1013.29 691.001 L1013.85 691.001 L1014.41 691.001 L1014.97 691.001 L1015.53 691.001 L1016.09 691.001 L1016.65 691.001 L1017.21 691.001 L1017.77 691.001 L1018.33 691.001 L1018.89 691.001 L1019.45 691.001 L1020.01 691.001 L1020.56 691.001 L1021.12 691.001 L1021.68 691.001 L1022.24 691.001 L1022.8 691.001 L1023.36 691.001 L1023.92 691.001 L1024.48 691.001 L1025.04 691.001 L1025.6 691.001 L1026.16 691.001 L1026.72 691.001 L1027.28 691.001 L1027.83 691.001 L1028.39 691.001 L1028.95 691.001 L1029.51 691.001 L1030.07 691.001 L1030.63 691.001 L1031.19 691.001 L1031.75 691.001 L1032.31 691.001 L1032.87 691.001 L1033.43 691.001 L1033.99 691.001 L1034.55 691.001 L1035.1 691.001 L1035.66 691.001 L1036.22 691.001 L1036.78 691.001 L1037.34 691.001 L1037.9 691.001 L1038.46 691.001 L1039.02 691.001 L1039.58 691.001 L1040.14 691.001 L1040.7 691.001 L1041.26 691.001 L1041.82 691.001 L1042.38 691.001 L1042.93 691.001 L1043.49 691.001 L1044.05 691.001 L1044.61 691.001 L1045.17 691.001 L1045.73 691.001 L1046.29 691.001 L1046.85 691.001 L1047.41 691.001 L1047.97 691.001 L1048.53 691.001 L1049.09 691.001 L1049.65 691.001 L1050.2 691.001 L1050.76 691.001 L1051.32 691.001 L1051.88 691.001 L1052.44 691.001 L1053 691.001 L1053.56 691.001 L1054.12 691.001 L1054.68 691.001 L1055.24 691.001 L1055.8 691.001 L1056.36 691.001 L1056.92 691.001 L1057.48 691.001 L1058.03 691.001 L1058.59 691.001 L1059.15 691.001 L1059.71 691.001 L1060.27 691.001 L1060.83 691.001 L1061.39 691.001 L1061.95 691.001 L1062.51 691.001 L1063.07 691.001 L1063.63 691.001 L1064.19 691.001 L1064.75 691.001 L1065.3 691.001 L1065.86 691.001 L1066.42 691.001 L1066.98 691.001 L1067.54 691.001 L1068.1 691.001 L1068.66 691.001 L1069.22 691.001 L1069.78 691.001 L1070.34 691.001 L1070.9 691.001 L1071.46 691.001 L1072.02 691.001 L1072.57 691.001 L1073.13 691.001 L1073.69 691.001 L1074.25 691.001 L1074.81 691.001 L1075.37 691.001 L1075.93 691.001 L1076.49 691.001 L1077.05 691.001 L1077.61 691.001 L1078.17 691.001 L1078.73 691.001 L1079.29 691.001 L1079.85 691.001 L1080.4 691.001 L1080.96 691.001 L1081.52 691.001 L1082.08 691.001 L1082.64 691.001 L1083.2 691.001 L1083.76 691.001 L1084.32 691.001 L1084.88 691.001 L1085.44 691.001 L1086 691.001 L1086.56 691.001 L1087.12 691.001 L1087.67 691.001 L1088.23 691.001 L1088.79 691.001 L1089.35 691.001 L1089.91 691.001 L1090.47 691.001 L1091.03 691.001 L1091.59 691.001 L1092.15 691.001 L1092.71 691.001 L1093.27 691.001 L1093.83 691.001 L1094.39 691.001 L1094.94 691.001 L1095.5 691.001 L1096.06 691.001 L1096.62 691.001 L1097.18 691.001 L1097.74 691.001 L1098.3 691.001 L1098.86 691.001 L1099.42 691.001 L1099.98 691.001 L1100.54 691.001 L1101.1 691.001 L1101.66 691.001 L1102.22 691.001 L1102.77 691.001 L1103.33 691.001 L1103.89 691.001 L1104.45 691.001 L1105.01 691.001 L1105.57 691.001 L1106.13 691.001 L1106.69 691.001 L1107.25 691.001 L1107.81 691.001 L1108.37 691.001 L1108.93 691.001 L1109.49 691.001 L1110.04 691.001 L1110.6 691.001 L1111.16 691.001 L1111.72 691.001 L1112.28 691.001 L1112.84 691.001 L1113.4 691.001 L1113.96 691.001 L1114.52 691.001 L1115.08 691.001 L1115.64 691.001 L1116.2 691.001 L1116.76 691.001 L1117.31 691.001 L1117.87 691.001 L1118.43 691.001 L1118.99 691.001 L1119.55 691.001 L1120.11 691.001 L1120.67 691.001 L1121.23 691.001 L1121.79 691.001 L1122.35 691.001 L1122.91 691.001 L1123.47 691.001 L1124.03 691.001 L1124.59 691.001 L1125.14 691.001 L1125.7 691.001 L1126.26 691.001 L1126.82 691.001 L1127.38 691.001 L1127.94 691.001 L1128.5 691.001 L1129.06 691.001 L1129.62 691.001 L1130.18 691.001 L1130.74 691.001 L1131.3 691.001 L1131.86 691.001 L1132.41 691.001 L1132.97 691.001 L1133.53 691.001 L1134.09 691.001 L1134.65 691.001 L1135.21 691.001 L1135.77 691.001 L1136.33 691.001 L1136.89 691.001 L1137.45 691.001 L1138.01 691.001 L1138.57 691.001 L1139.13 691.001 L1139.68 691.001 L1140.24 691.001 L1140.8 691.001 L1141.36 691.001 L1141.92 691.001 L1142.48 691.001 L1143.04 691.001 L1143.6 691.001 L1144.16 691.001 L1144.72 691.001 L1145.28 691.001 L1145.84 691.001 L1146.4 691.001 L1146.96 691.001 L1147.51 691.001 L1148.07 691.001 L1148.63 691.001 L1149.19 691.001 L1149.75 691.001 L1150.31 691.001 L1150.87 691.001 L1151.43 691.001 L1151.99 691.001 L1152.55 691.001 L1153.11 691.001 L1153.67 691.001 L1154.23 691.001 L1154.78 691.001 L1155.34 691.001 L1155.9 691.001 L1156.46 691.001 L1157.02 691.001 L1157.58 691.001 L1158.14 691.001 L1158.7 691.001 L1159.26 691.001 L1159.82 691.001 L1160.38 691.001 L1160.94 691.001 L1161.5 691.001 L1162.05 691.001 L1162.61 691.001 L1163.17 691.001 L1163.73 691.001 L1164.29 691.001 L1164.85 691.001 L1165.41 691.001 L1165.97 691.001 L1166.53 691.001 L1167.09 691.001 L1167.65 691.001 L1168.21 691.001 L1168.77 691.001 L1169.33 691.001 L1169.88 691.001 L1170.44 691.001 L1171 691.001 L1171.56 691.001 L1172.12 691.001 L1172.68 691.001 L1173.24 691.001 L1173.8 691.001 L1174.36 691.001 L1174.92 691.001 L1175.48 691.001 L1176.04 691.001 L1176.6 691.001 L1177.15 691.001 L1177.71 691.001 L1178.27 691.001 L1178.83 691.001 L1179.39 691.001 L1179.95 691.001 L1180.51 691.001 L1181.07 691.001 L1181.63 691.001 L1182.19 691.001 L1182.75 691.001 L1183.31 691.001 L1183.87 691.001 L1184.43 691.001 L1184.98 691.001 L1185.54 691.001 L1186.1 691.001 L1186.66 691.001 L1187.22 691.001 L1187.78 691.001 L1188.34 691.001 L1188.9 691.001 L1189.46 691.001 L1190.02 691.001 L1190.58 691.001 L1191.14 691.001 L1191.7 691.001 L1192.25 691.001 L1192.81 691.001 L1193.37 691.001 L1193.93 691.001 L1194.49 691.001 L1195.05 691.001 L1195.61 691.001 L1196.17 691.001 L1196.73 691.001 L1197.29 691.001 L1197.85 691.001 L1198.41 691.001 L1198.97 691.001 L1199.52 691.001 L1200.08 691.001 L1200.64 691.001 L1201.2 691.001 L1201.76 691.001 L1202.32 691.001 L1202.88 691.001 L1203.44 691.001 L1204 691.001 L1204.56 691.001 L1205.12 691.001 L1205.68 691.001 L1206.24 691.001 L1206.8 691.001 L1207.35 691.001 L1207.91 691.001 L1208.47 691.001 L1209.03 691.001 L1209.59 691.001 L1210.15 691.001 L1210.71 691.001 L1211.27 691.001 L1211.83 691.001 L1212.39 691.001 L1212.95 691.001 L1213.51 691.001 L1214.07 691.001 L1214.62 691.001 L1215.18 691.001 L1215.74 691.001 L1216.3 691.001 L1216.86 691.001 L1217.42 691.001 L1217.98 691.001 L1218.54 691.001 L1219.1 691.001 L1219.66 691.001 L1220.22 691.001 L1220.78 691.001 L1221.34 691.001 L1221.89 691.001 L1222.45 691.001 L1223.01 691.001 L1223.57 691.001 L1224.13 691.001 L1224.69 691.001 L1225.25 691.001 L1225.81 691.001 L1226.37 691.001 L1226.93 691.001 L1227.49 691.001 L1228.05 691.001 L1228.61 691.001 L1229.17 691.001 L1229.72 691.001 L1230.28 691.001 L1230.84 691.001 L1231.4 691.001 L1231.96 691.001 L1232.52 691.001 L1233.08 691.001 L1233.64 691.001 L1234.2 691.001 L1234.76 691.001 L1235.32 691.001 L1235.88 691.001 L1236.44 691.001 L1236.99 691.001 L1237.55 691.001 L1238.11 691.001 L1238.67 691.001 L1239.23 691.001 L1239.79 691.001 L1240.35 691.001 L1240.91 691.001 L1241.47 691.001 L1242.03 691.001 L1242.59 691.001 L1243.15 691.001 L1243.71 691.001 L1244.26 691.001 L1244.82 691.001 L1245.38 691.001 L1245.94 691.001 L1246.5 691.001 L1247.06 691.001 L1247.62 691.001 L1248.18 691.001 L1248.74 691.001 L1249.3 691.001 L1249.86 691.001 L1250.42 691.001 L1250.98 691.001 L1251.54 691.001 L1252.09 691.001 L1252.65 691.001 L1253.21 691.001 L1253.77 691.001 L1254.33 691.001 L1254.89 691.001 L1255.45 691.001 L1256.01 691.001 L1256.57 691.001 L1257.13 691.001 L1257.69 691.001 L1258.25 691.001 L1258.81 691.001 L1259.36 691.001 L1259.92 691.001 L1260.48 691.001 L1261.04 691.001 L1261.6 691.001 L1262.16 691.001 L1262.72 691.001 L1263.28 691.001 L1263.84 691.001 L1264.4 691.001 L1264.96 691.001 L1265.52 691.001 L1266.08 691.001 L1266.63 691.001 L1267.19 691.001 L1267.75 691.001 L1268.31 691.001 L1268.87 691.001 L1269.43 691.001 L1269.99 691.001 L1270.55 691.001 L1271.11 691.001 L1271.67 691.001 L1272.23 691.001 L1272.79 691.001 L1273.35 691.001 L1273.91 691.001 L1274.46 691.001 L1275.02 691.001 L1275.58 691.001 L1276.14 691.001 L1276.7 691.001 L1277.26 691.001 L1277.82 691.001 L1278.38 691.001 L1278.94 691.001 L1279.5 691.001 L1280.06 691.001 L1280.62 691.001 L1281.18 691.001 L1281.73 691.001 L1282.29 691.001 L1282.85 691.001 L1283.41 691.001 L1283.97 691.001 L1284.53 691.001 L1285.09 691.001 L1285.65 691.001 L1286.21 691.001 L1286.77 691.001 L1287.33 691.001 L1287.89 691.001 L1288.45 691.001 L1289 691.001 L1289.56 691.001 L1290.12 691.001 L1290.68 691.001 L1291.24 691.001 L1291.8 691.001 L1292.36 691.001 L1292.92 691.001 L1293.48 691.001 L1294.04 691.001 L1294.6 691.001 L1295.16 691.001 L1295.72 691.001 L1296.28 691.001 L1296.83 691.001 L1297.39 691.001 L1297.95 691.001 L1298.51 691.001 L1299.07 691.001 L1299.63 691.001 L1300.19 691.001 L1300.75 691.001 L1301.31 691.001 L1301.87 691.001 L1302.43 691.001 L1302.99 691.001 L1303.55 691.001 L1304.1 691.001 L1304.66 691.001 L1305.22 691.001 L1305.78 691.001 L1306.34 691.001 L1306.9 691.001 L1307.46 691.001 L1308.02 691.001 L1308.58 691.001 L1309.14 691.001 L1309.7 691.001 L1310.26 691.001 L1310.82 691.001 L1311.38 691.001 L1311.93 691.001 L1312.49 691.001 L1313.05 691.001 L1313.61 691.001 L1314.17 691.001 L1314.73 691.001 L1315.29 691.001 L1315.85 691.001 L1316.41 691.001 L1316.97 691.001 L1317.53 691.001 L1318.09 691.001 L1318.65 691.001 L1319.2 691.001 L1319.76 691.001 L1320.32 691.001 L1320.88 691.001 L1321.44 691.001 L1322 691.001 L1322.56 691.001 L1323.12 691.001 L1323.68 691.001 L1324.24 691.001 L1324.8 691.001 L1325.36 691.001 L1325.92 691.001 L1326.47 691.001 L1327.03 691.001 L1327.59 691.001 L1328.15 691.001 L1328.71 691.001 L1329.27 691.001 L1329.83 691.001 L1330.39 691.001 L1330.95 691.001 L1331.51 691.001 L1332.07 691.001 L1332.63 691.001 L1333.19 691.001 L1333.75 691.001 L1334.3 691.001 L1334.86 691.001 L1335.42 691.001 L1335.98 691.001 L1336.54 691.001 L1337.1 691.001 L1337.66 691.001 L1338.22 691.001 L1338.78 691.001 L1339.34 691.001 L1339.9 691.001 L1340.46 691.001 L1341.02 691.001 L1341.57 691.001 L1342.13 691.001 L1342.69 691.001 L1343.25 691.001 L1343.81 691.001 L1344.37 691.001 L1344.93 691.001 L1345.49 691.001 L1346.05 691.001 L1346.61 691.001 L1347.17 691.001 L1347.73 691.001 L1348.29 691.001 L1348.84 691.001 L1349.4 691.001 L1349.96 691.001 L1350.52 691.001 L1351.08 691.001 L1351.64 691.001 L1352.2 691.001 L1352.76 691.001 L1353.32 691.001 L1353.88 691.001 L1354.44 691.001 L1355 691.001 L1355.56 691.001 L1356.12 691.001 L1356.67 691.001 L1357.23 691.001 L1357.79 691.001 L1358.35 691.001 L1358.91 691.001 L1359.47 691.001 L1360.03 691.001 L1360.59 691.001 L1361.15 691.001 L1361.71 691.001 L1362.27 691.001 L1362.83 691.001 L1363.39 691.001 L1363.94 691.001 L1364.5 691.001 L1365.06 691.001 L1365.62 691.001 L1366.18 691.001 L1366.74 691.001 L1367.3 691.001 L1367.86 691.001 L1368.42 691.001 L1368.98 691.001 L1369.54 691.001 L1370.1 691.001 L1370.66 691.001 L1371.21 691.001 L1371.77 691.001 L1372.33 691.001 L1372.89 691.001 L1373.45 691.001 L1374.01 691.001 L1374.57 691.001 L1375.13 691.001 L1375.69 691.001 L1376.25 691.001 L1376.81 691.001 L1377.37 691.001 L1377.93 691.001 L1378.49 691.001 L1379.04 691.001 L1379.6 691.001 L1380.16 691.001 L1380.72 691.001 L1381.28 691.001 L1381.84 691.001 L1382.4 691.001 L1382.96 691.001 L1383.52 691.001 L1384.08 691.001 L1384.64 691.001 L1385.2 691.001 L1385.76 691.001 L1386.31 691.001 L1386.87 691.001 L1387.43 691.001 L1387.99 691.001 L1388.55 691.001 L1389.11 691.001 L1389.67 691.001 L1390.23 691.001 L1390.79 691.001 L1391.35 691.001 L1391.91 691.001 L1392.47 691.001 L1393.03 691.001 L1393.58 691.001 L1394.14 691.001 L1394.7 691.001 L1395.26 691.001 L1395.82 691.001 L1396.38 691.001 L1396.94 691.001 L1397.5 691.001 L1398.06 691.001 L1398.62 691.001 L1399.18 691.001 L1399.74 691.001 L1400.3 691.001 L1400.86 691.001 L1401.41 691.001 L1401.97 691.001 L1402.53 691.001 L1403.09 691.001 L1403.65 691.001 L1404.21 691.001 L1404.77 691.001 L1405.33 691.001 L1405.89 691.001 L1406.45 691.001 L1407.01 691.001 L1407.57 691.001 L1408.13 691.001 L1408.68 691.001 L1409.24 691.001 L1409.8 691.001 L1410.36 691.001 L1410.92 691.001 L1411.48 691.001 L1412.04 691.001 L1412.6 691.001 L1413.16 691.001 L1413.72 691.001 L1414.28 691.001 L1414.84 691.001 L1415.4 691.001 L1415.95 691.001 L1416.51 691.001 L1417.07 691.001 L1417.63 691.001 L1418.19 691.001 L1418.75 691.001 L1419.31 691.001 L1419.87 691.001 L1420.43 691.001 L1420.99 691.001 L1421.55 691.001 L1422.11 691.001 L1422.67 691.001 L1423.23 691.001 L1423.78 691.001 L1424.34 691.001 L1424.9 691.001 L1425.46 691.001 L1426.02 691.001 L1426.58 691.001 L1427.14 691.001 L1427.7 691.001 L1428.26 691.001 L1428.82 691.001 L1429.38 691.001 L1429.94 691.001 L1430.5 691.001 L1431.05 691.001 L1431.61 691.001 L1432.17 691.001 L1432.73 691.001 L1433.29 691.001 L1433.85 691.001 L1434.41 691.001 L1434.97 691.001 L1435.53 691.001 L1436.09 691.001 L1436.65 691.001 L1437.21 691.001 L1437.77 691.001 L1438.33 691.001 L1438.88 691.001 L1439.44 691.001 L1440 691.001 L1440.56 691.001 L1441.12 691.001 L1441.68 691.001 L1442.24 691.001 L1442.8 691.001 L1443.36 691.001 L1443.92 691.001 L1444.48 691.001 L1445.04 691.001 L1445.6 691.001 L1446.15 691.001 L1446.71 691.001 L1447.27 691.001 L1447.83 691.001 L1448.39 691.001 L1448.95 691.001 L1449.51 691.001 L1450.07 691.001 L1450.63 691.001 L1451.19 691.001 L1451.75 691.001 L1452.31 691.001 L1452.87 691.001 L1453.42 691.001 L1453.98 691.001 L1454.54 691.001 L1455.1 691.001 L1455.66 691.001 L1456.22 691.001 L1456.78 691.001 L1457.34 691.001 L1457.9 691.001 L1458.46 691.001 L1459.02 691.001 L1459.58 691.001 L1460.14 691.001 L1460.7 691.001 L1461.25 691.001 L1461.81 691.001 L1462.37 691.001 L1462.93 691.001 L1463.49 691.001 L1464.05 691.001 L1464.61 691.001 L1465.17 691.001 L1465.73 691.001 L1466.29 691.001 L1466.85 691.001 L1467.41 691.001 L1467.97 691.001 L1468.52 691.001 L1469.08 691.001 L1469.64 691.001 L1470.2 691.001 L1470.76 691.001 L1471.32 691.001 L1471.88 691.001 L1472.44 691.001 L1473 691.001 L1473.56 691.001 L1474.12 691.001 L1474.68 691.001 L1475.24 691.001 L1475.79 691.001 L1476.35 691.001 L1476.91 691.001 L1477.47 691.001 L1478.03 691.001 L1478.59 691.001 L1479.15 691.001 L1479.71 691.001 L1480.27 691.001 L1480.83 691.001 L1481.39 691.001 L1481.95 691.001 L1482.51 691.001 L1483.07 691.001 L1483.62 691.001 L1484.18 691.001 L1484.74 691.001 L1485.3 691.001 L1485.86 691.001 L1486.42 691.001 L1486.98 691.001 L1487.54 691.001 L1488.1 691.001 L1488.66 691.001 L1489.22 691.001 L1489.78 691.001 L1490.34 691.001 L1490.89 691.001 L1491.45 691.001 L1492.01 691.001 L1492.57 691.001 L1493.13 691.001 L1493.69 691.001 L1494.25 691.001 L1494.81 691.001 L1495.37 691.001 L1495.93 691.001 L1496.49 691.001 L1497.05 691.001 L1497.61 691.001 L1498.16 691.001 L1498.72 691.001 L1499.28 691.001 L1499.84 691.001 L1500.4 691.001 L1500.96 691.001 L1501.52 691.001 L1502.08 691.001 L1502.64 691.001 L1503.2 691.001 L1503.76 691.001 L1504.32 691.001 L1504.88 691.001 L1505.44 691.001 L1505.99 691.001 L1506.55 691.001 L1507.11 691.001 L1507.67 691.001 L1508.23 691.001 L1508.79 691.001 L1509.35 691.001 L1509.91 691.001 L1510.47 691.001 L1511.03 691.001 L1511.59 691.001 L1512.15 691.001 L1512.71 691.001 L1513.26 691.001 L1513.82 691.001 L1514.38 691.001 L1514.94 691.001 L1515.5 691.001 L1516.06 691.001 L1516.62 691.001 L1517.18 691.001 L1517.74 691.001 L1518.3 691.001 L1518.86 691.001 L1519.42 691.001 L1519.98 691.001 L1520.53 691.001 L1521.09 691.001 L1521.65 691.001 L1522.21 691.001 L1522.77 691.001 L1523.33 691.001 L1523.89 691.001 L1524.45 691.001 L1525.01 691.001 L1525.57 691.001 L1526.13 691.001 L1526.69 691.001 L1527.25 691.001 L1527.81 691.001 L1528.36 691.001 L1528.92 691.001 L1529.48 691.001 L1530.04 691.001 L1530.6 691.001 L1531.16 691.001 L1531.72 691.001 L1532.28 691.001 L1532.84 691.001 L1533.4 691.001 L1533.96 691.001 L1534.52 691.001 L1535.08 691.001 L1535.63 691.001 L1536.19 691.001 L1536.75 691.001 L1537.31 691.001 L1537.87 691.001 L1538.43 691.001 L1538.99 691.001 L1539.55 691.001 L1540.11 691.001 L1540.67 691.001 L1541.23 691.001 L1541.79 691.001 L1542.35 691.001 L1542.9 691.001 L1543.46 691.001 L1544.02 691.001 L1544.58 691.001 L1545.14 691.001 L1545.7 691.001 L1546.26 691.001 L1546.82 691.001 L1547.38 691.001 L1547.94 691.001 L1548.5 691.001 L1549.06 691.001 L1549.62 691.001 L1550.18 691.001 L1550.73 691.001 L1551.29 691.001 L1551.85 691.001 L1552.41 691.001 L1552.97 691.001 L1553.53 691.001 L1554.09 691.001 L1554.65 691.001 L1555.21 691.001 L1555.77 691.001 L1556.33 691.001 L1556.89 691.001 L1557.45 691.001 L1558 691.001 L1558.56 691.001 L1559.12 691.001 L1559.68 691.001 L1560.24 691.001 L1560.8 691.001 L1561.36 691.001 L1561.92 691.001 L1562.48 691.001 L1563.04 691.001 L1563.6 691.001 L1564.16 691.001 L1564.72 691.001 L1565.28 691.001 L1565.83 691.001 L1566.39 691.001 L1566.95 691.001 L1567.51 691.001 L1568.07 691.001 L1568.63 691.001 L1569.19 691.001 L1569.75 691.001 L1570.31 691.001 L1570.87 691.001 L1571.43 691.001 L1571.99 691.001 L1572.55 691.001 L1573.1 691.001 L1573.66 691.001 L1574.22 691.001 L1574.78 691.001 L1575.34 691.001 L1575.9 691.001 L1576.46 691.001 L1577.02 691.001 L1577.58 691.001 L1578.14 691.001 L1578.7 691.001 L1579.26 691.001 L1579.82 691.001 L1580.37 691.001 L1580.93 691.001 L1581.49 691.001 L1582.05 691.001 L1582.61 691.001 L1583.17 691.001 L1583.73 691.001 L1584.29 691.001 L1584.85 691.001 L1585.41 691.001 L1585.97 691.001 L1586.53 691.001 L1587.09 691.001 L1587.65 691.001 L1588.2 691.001 L1588.76 691.001 L1589.32 691.001 L1589.88 691.001 L1590.44 691.001 L1591 691.001 L1591.56 691.001 L1592.12 691.001 L1592.68 691.001 L1593.24 691.001 L1593.8 691.001 L1594.36 691.001 L1594.92 691.001 L1595.47 691.001 L1596.03 691.001 L1596.59 691.001 L1597.15 691.001 L1597.71 691.001 L1598.27 691.001 L1598.83 691.001 L1599.39 691.001 L1599.95 691.001 L1600.51 691.001 L1601.07 691.001 L1601.63 691.001 L1602.19 691.001 L1602.74 691.001 L1603.3 691.001 L1603.86 691.001 L1604.42 691.001 L1604.98 691.001 L1605.54 691.001 L1606.1 691.001 L1606.66 691.001 L1607.22 691.001 L1607.78 691.001 L1608.34 691.001 L1608.9 691.001 L1609.46 691.001 L1610.02 691.001 L1610.57 691.001 L1611.13 691.001 L1611.69 691.001 L1612.25 691.001 L1612.81 691.001 L1613.37 691.001 L1613.93 691.001 L1614.49 691.001 L1615.05 691.001 L1615.61 691.001 L1616.17 691.001 L1616.73 691.001 L1617.29 691.001 L1617.84 691.001 L1618.4 691.001 L1618.96 691.001 L1619.52 691.001 L1620.08 691.001 L1620.64 691.001 L1621.2 691.001 L1621.76 691.001 L1622.32 691.001 L1622.88 691.001 L1623.44 691.001 L1624 691.001 L1624.56 691.001 L1625.11 691.001 L1625.67 691.001 L1626.23 691.001 L1626.79 691.001 L1627.35 691.001 L1627.91 691.001 L1628.47 691.001 L1629.03 691.001 L1629.59 691.001 L1630.15 691.001 L1630.71 691.001 L1631.27 691.001 L1631.83 691.001 L1632.39 691.001 L1632.94 691.001 L1633.5 691.001 L1634.06 691.001 L1634.62 691.001 L1635.18 691.001 L1635.74 691.001 L1636.3 691.001 L1636.86 691.001 L1637.42 691.001 L1637.98 691.001 L1638.54 691.001 L1639.1 691.001 L1639.66 691.001 L1640.21 691.001 L1640.77 691.001 L1641.33 691.001 L1641.89 691.001 L1642.45 691.001 L1643.01 691.001 L1643.57 691.001 L1644.13 691.001 L1644.69 691.001 L1645.25 691.001 L1645.81 691.001 L1646.37 691.001 L1646.93 691.001 L1647.48 691.001 L1648.04 691.001 L1648.6 691.001 L1649.16 691.001 L1649.72 691.001 L1650.28 691.001 L1650.84 691.001 L1651.4 691.001 L1651.96 691.001 L1652.52 691.001 L1653.08 691.001 L1653.64 691.001 L1654.2 691.001 L1654.76 691.001 L1655.31 691.001 L1655.87 691.001 L1656.43 691.001 L1656.99 691.001 L1657.55 691.001 L1658.11 691.001 L1658.67 691.001 L1659.23 691.001 L1659.79 691.001 L1660.35 691.001 L1660.91 691.001 L1661.47 691.001 L1662.03 691.001 L1662.58 691.001 L1663.14 691.001 L1663.7 691.001 L1664.26 691.001 L1664.82 691.001 L1665.38 691.001 L1665.94 691.001 L1666.5 691.001 L1667.06 691.001 L1667.62 691.001 L1668.18 691.001 L1668.74 691.001 L1669.3 691.001 L1669.85 691.001 L1670.41 691.001 L1670.97 691.001 L1671.53 691.001 L1672.09 691.001 L1672.65 691.001 L1673.21 691.001 L1673.77 691.001 L1674.33 691.001 L1674.89 691.001 L1675.45 691.001 L1676.01 691.001 L1676.57 691.001 L1677.13 691.001 L1677.68 691.001 L1678.24 691.001 L1678.8 691.001 L1679.36 691.001 L1679.92 691.001 L1680.48 691.001 L1681.04 691.001 L1681.6 691.001 L1682.16 691.001 L1682.72 691.001 L1683.28 691.001 L1683.84 691.001 L1684.4 691.001 L1684.95 691.001 L1685.51 691.001 L1686.07 691.001 L1686.63 691.001 L1687.19 691.001 L1687.75 691.001 L1688.31 691.001 L1688.87 691.001 L1689.43 691.001 L1689.99 691.001 L1690.55 691.001 L1691.11 691.001 L1691.67 691.001 L1692.23 691.001 L1692.78 691.001 L1693.34 691.001 L1693.9 691.001 L1694.46 691.001 L1695.02 691.001 L1695.58 691.001 L1696.14 691.001 L1696.7 691.001 L1697.26 691.001 L1697.82 691.001 L1698.38 691.001 L1698.94 691.001 L1699.5 691.001 L1700.05 691.001 L1700.61 691.001 L1701.17 691.001 L1701.73 691.001 L1702.29 691.001 L1702.85 691.001 L1703.41 691.001 L1703.97 691.001 L1704.53 691.001 L1705.09 691.001 L1705.65 691.001 L1706.21 691.001 L1706.77 691.001 L1707.32 691.001 L1707.88 691.001 L1708.44 691.001 L1709 691.001 L1709.56 691.001 L1710.12 691.001 L1710.68 691.001 L1711.24 691.001 L1711.8 691.001 L1712.36 691.001 L1712.92 691.001 L1713.48 691.001 L1714.04 691.001 L1714.6 691.001 L1715.15 691.001 L1715.71 691.001 L1716.27 691.001 L1716.83 691.001 L1717.39 691.001 L1717.95 691.001 L1718.51 691.001 L1719.07 691.001 L1719.63 691.001 L1720.19 691.001 L1720.75 691.001 L1721.31 691.001 L1721.87 691.001 L1722.42 691.001 L1722.98 691.001 L1723.54 691.001 L1724.1 691.001 L1724.66 691.001 L1725.22 691.001 L1725.78 691.001 L1726.34 691.001 L1726.9 691.001 L1727.46 691.001 L1728.02 691.001 L1728.58 691.001 L1729.14 691.001 L1729.69 691.001 L1730.25 691.001 L1730.81 691.001 L1731.37 691.001 L1731.93 691.001 L1732.49 691.001 L1733.05 691.001 L1733.61 691.001 L1734.17 691.001 L1734.73 691.001 L1735.29 691.001 L1735.85 691.001 L1736.41 691.001 L1736.97 691.001 L1737.52 691.001 L1738.08 691.001 L1738.64 691.001 L1739.2 691.001 L1739.76 691.001 L1740.32 691.001 L1740.88 691.001 L1741.44 691.001 L1742 691.001 L1742.56 691.001 L1743.12 691.001 L1743.68 691.001 L1744.24 691.001 L1744.79 691.001 L1745.35 691.001 L1745.91 691.001 L1746.47 691.001 L1747.03 691.001 L1747.59 691.001 L1748.15 691.001 L1748.71 691.001 L1749.27 691.001 L1749.83 691.001 L1750.39 691.001 L1750.95 691.001 L1751.51 691.001 L1752.06 691.001 L1752.62 691.001 L1753.18 691.001 L1753.74 691.001 L1754.3 691.001 L1754.86 691.001 L1755.42 691.001 L1755.98 691.001 L1756.54 691.001 L1757.1 691.001 L1757.66 691.001 L1758.22 691.001 L1758.78 691.001 L1759.34 691.001 L1759.89 691.001 L1760.45 691.001 L1761.01 691.001 L1761.57 691.001 L1762.13 691.001 L1762.69 691.001 L1763.25 691.001 L1763.81 691.001 L1764.37 691.001 L1764.93 691.001 L1765.49 691.001 L1766.05 691.001 L1766.61 691.001 L1767.16 691.001 L1767.72 691.001 L1768.28 691.001 L1768.84 691.001 L1769.4 691.001 L1769.96 691.001 L1770.52 691.001 L1771.08 691.001 L1771.64 691.001 L1772.2 691.001 L1772.76 691.001 L1773.32 691.001 L1773.88 691.001 L1774.43 691.001 L1774.99 691.001 L1775.55 691.001 L1776.11 691.001 L1776.67 691.001 L1777.23 691.001 L1777.79 691.001 L1778.35 691.001 L1778.91 691.001 L1779.47 691.001 L1780.03 691.001 L1780.59 691.001 L1781.15 691.001 L1781.71 691.001 L1782.26 691.001 L1782.82 691.001 L1783.38 691.001 L1783.94 691.001 L1784.5 691.001 L1785.06 691.001 L1785.62 691.001 L1786.18 691.001 L1786.74 691.001 L1787.3 691.001 L1787.86 691.001 L1788.42 691.001 L1788.98 691.001 L1789.53 691.001 L1790.09 691.001 L1790.65 691.001 L1791.21 691.001 L1791.77 691.001 L1792.33 691.001 L1792.89 691.001 L1793.45 691.001 L1794.01 691.001 L1794.57 691.001 L1795.13 691.001 L1795.69 691.001 L1796.25 691.001 L1796.8 691.001 L1797.36 691.001 L1797.92 691.001 L1798.48 691.001 L1799.04 691.001 L1799.6 691.001 L1800.16 691.001 L1800.72 691.001 L1801.28 691.001 L1801.84 691.001 L1802.4 691.001 L1802.96 691.001 L1803.52 691.001 L1804.08 691.001 L1804.63 691.001 L1805.19 691.001 L1805.75 691.001 L1806.31 691.001 L1806.87 691.001 L1807.43 691.001 L1807.99 691.001 L1808.55 691.001 L1809.11 691.001 L1809.67 691.001 L1810.23 691.001 L1810.79 691.001 L1811.35 691.001 L1811.9 691.001 L1812.46 691.001 L1813.02 691.001 L1813.58 691.001 L1814.14 691.001 L1814.7 691.001 L1815.26 691.001 L1815.82 691.001 L1816.38 691.001 L1816.94 691.001 L1817.5 691.001 L1818.06 691.001 L1818.62 691.001 L1819.18 691.001 L1819.73 691.001 L1820.29 691.001 L1820.85 691.001 L1821.41 691.001 L1821.97 691.001 L1822.53 691.001 L1823.09 691.001 L1823.65 691.001 L1824.21 691.001 L1824.77 691.001 L1825.33 691.001 L1825.89 691.001 L1826.45 691.001 L1827 691.001 L1827.56 691.001 L1828.12 691.001 L1828.68 691.001 L1829.24 691.001 L1829.8 691.001 L1830.36 691.001 L1830.92 691.001 L1831.48 691.001 L1832.04 691.001 L1832.6 691.001 L1833.16 691.001 L1833.72 691.001 L1834.27 691.001 L1834.83 691.001 L1835.39 691.001 L1835.95 691.001 L1836.51 691.001 L1837.07 691.001 L1837.63 691.001 L1838.19 691.001 L1838.19 682.409 L1837.63 682.409 L1837.07 682.409 L1836.51 682.409 L1835.95 682.409 L1835.39 682.409 L1834.83 682.409 L1834.27 682.409 L1833.72 682.409 L1833.16 682.409 L1832.6 682.409 L1832.04 682.409 L1831.48 682.409 L1830.92 682.409 L1830.36 682.409 L1829.8 682.409 L1829.24 682.409 L1828.68 682.409 L1828.12 682.409 L1827.56 682.409 L1827 682.409 L1826.45 682.409 L1825.89 682.409 L1825.33 682.409 L1824.77 682.409 L1824.21 682.409 L1823.65 682.409 L1823.09 682.409 L1822.53 682.409 L1821.97 682.409 L1821.41 682.409 L1820.85 682.409 L1820.29 682.409 L1819.73 682.409 L1819.18 682.409 L1818.62 682.409 L1818.06 682.409 L1817.5 682.409 L1816.94 682.409 L1816.38 682.409 L1815.82 682.409 L1815.26 682.409 L1814.7 682.409 L1814.14 682.409 L1813.58 682.409 L1813.02 682.409 L1812.46 682.409 L1811.9 682.409 L1811.35 682.409 L1810.79 682.409 L1810.23 682.409 L1809.67 682.409 L1809.11 682.409 L1808.55 682.409 L1807.99 682.409 L1807.43 682.409 L1806.87 682.409 L1806.31 682.409 L1805.75 682.409 L1805.19 682.409 L1804.63 682.409 L1804.08 682.409 L1803.52 682.409 L1802.96 682.409 L1802.4 682.409 L1801.84 682.409 L1801.28 682.409 L1800.72 682.409 L1800.16 682.409 L1799.6 682.409 L1799.04 682.409 L1798.48 682.409 L1797.92 682.409 L1797.36 682.409 L1796.8 682.409 L1796.25 682.409 L1795.69 682.409 L1795.13 682.409 L1794.57 682.409 L1794.01 682.409 L1793.45 682.409 L1792.89 682.409 L1792.33 682.409 L1791.77 682.409 L1791.21 682.409 L1790.65 682.409 L1790.09 682.409 L1789.53 682.409 L1788.98 682.409 L1788.42 682.409 L1787.86 682.409 L1787.3 682.409 L1786.74 682.409 L1786.18 682.409 L1785.62 682.409 L1785.06 682.409 L1784.5 682.409 L1783.94 682.409 L1783.38 682.409 L1782.82 682.409 L1782.26 682.409 L1781.71 682.409 L1781.15 682.409 L1780.59 682.409 L1780.03 682.409 L1779.47 682.409 L1778.91 682.409 L1778.35 682.409 L1777.79 682.409 L1777.23 682.409 L1776.67 682.409 L1776.11 682.409 L1775.55 682.409 L1774.99 682.409 L1774.43 682.409 L1773.88 682.409 L1773.32 682.409 L1772.76 682.409 L1772.2 682.409 L1771.64 682.409 L1771.08 682.409 L1770.52 682.409 L1769.96 682.409 L1769.4 682.409 L1768.84 682.409 L1768.28 682.409 L1767.72 682.409 L1767.16 682.409 L1766.61 682.409 L1766.05 682.409 L1765.49 682.409 L1764.93 682.409 L1764.37 682.409 L1763.81 682.409 L1763.25 682.409 L1762.69 682.409 L1762.13 682.409 L1761.57 682.409 L1761.01 682.409 L1760.45 682.409 L1759.89 682.409 L1759.34 682.409 L1758.78 682.409 L1758.22 682.409 L1757.66 682.409 L1757.1 682.409 L1756.54 682.409 L1755.98 682.409 L1755.42 682.409 L1754.86 682.409 L1754.3 682.409 L1753.74 682.409 L1753.18 682.409 L1752.62 682.409 L1752.06 682.409 L1751.51 682.409 L1750.95 682.409 L1750.39 682.409 L1749.83 682.409 L1749.27 682.409 L1748.71 682.409 L1748.15 682.409 L1747.59 682.409 L1747.03 682.409 L1746.47 682.409 L1745.91 682.409 L1745.35 682.409 L1744.79 682.409 L1744.24 682.409 L1743.68 682.409 L1743.12 682.409 L1742.56 682.409 L1742 682.409 L1741.44 682.409 L1740.88 682.409 L1740.32 682.409 L1739.76 682.409 L1739.2 682.409 L1738.64 682.409 L1738.08 682.409 L1737.52 682.409 L1736.97 682.409 L1736.41 682.409 L1735.85 682.409 L1735.29 682.409 L1734.73 682.409 L1734.17 682.409 L1733.61 682.409 L1733.05 682.409 L1732.49 682.409 L1731.93 682.409 L1731.37 682.409 L1730.81 682.409 L1730.25 682.409 L1729.69 682.409 L1729.14 682.409 L1728.58 682.409 L1728.02 682.409 L1727.46 682.409 L1726.9 682.409 L1726.34 682.409 L1725.78 682.409 L1725.22 682.409 L1724.66 682.409 L1724.1 682.409 L1723.54 682.409 L1722.98 682.409 L1722.42 682.409 L1721.87 682.409 L1721.31 682.409 L1720.75 682.409 L1720.19 682.409 L1719.63 682.409 L1719.07 682.409 L1718.51 682.409 L1717.95 682.409 L1717.39 682.409 L1716.83 682.409 L1716.27 682.409 L1715.71 682.409 L1715.15 682.409 L1714.6 682.409 L1714.04 682.409 L1713.48 682.409 L1712.92 682.409 L1712.36 682.409 L1711.8 682.409 L1711.24 682.409 L1710.68 682.409 L1710.12 682.409 L1709.56 682.409 L1709 682.409 L1708.44 682.409 L1707.88 682.409 L1707.32 682.409 L1706.77 682.409 L1706.21 682.409 L1705.65 682.409 L1705.09 682.409 L1704.53 682.409 L1703.97 682.409 L1703.41 682.409 L1702.85 682.409 L1702.29 682.409 L1701.73 682.409 L1701.17 682.409 L1700.61 682.409 L1700.05 682.409 L1699.5 682.409 L1698.94 682.409 L1698.38 682.409 L1697.82 682.409 L1697.26 682.409 L1696.7 682.409 L1696.14 682.409 L1695.58 682.409 L1695.02 682.409 L1694.46 682.409 L1693.9 682.409 L1693.34 682.409 L1692.78 682.409 L1692.23 682.409 L1691.67 682.409 L1691.11 682.409 L1690.55 682.409 L1689.99 682.409 L1689.43 682.409 L1688.87 682.409 L1688.31 682.409 L1687.75 682.409 L1687.19 682.409 L1686.63 682.409 L1686.07 682.409 L1685.51 682.409 L1684.95 682.409 L1684.4 682.409 L1683.84 682.409 L1683.28 682.409 L1682.72 682.409 L1682.16 682.409 L1681.6 682.409 L1681.04 682.409 L1680.48 682.409 L1679.92 682.409 L1679.36 682.409 L1678.8 682.409 L1678.24 682.409 L1677.68 682.409 L1677.13 682.409 L1676.57 682.409 L1676.01 682.409 L1675.45 682.409 L1674.89 682.409 L1674.33 682.409 L1673.77 682.409 L1673.21 682.409 L1672.65 682.409 L1672.09 682.409 L1671.53 682.409 L1670.97 682.409 L1670.41 682.409 L1669.85 682.409 L1669.3 682.409 L1668.74 682.409 L1668.18 682.409 L1667.62 682.409 L1667.06 682.409 L1666.5 682.409 L1665.94 682.409 L1665.38 682.409 L1664.82 682.409 L1664.26 682.409 L1663.7 682.409 L1663.14 682.409 L1662.58 682.409 L1662.03 682.409 L1661.47 682.409 L1660.91 682.409 L1660.35 682.409 L1659.79 682.409 L1659.23 682.409 L1658.67 682.409 L1658.11 682.409 L1657.55 682.409 L1656.99 682.409 L1656.43 682.409 L1655.87 682.409 L1655.31 682.409 L1654.76 682.409 L1654.2 682.409 L1653.64 682.409 L1653.08 682.409 L1652.52 682.409 L1651.96 682.409 L1651.4 682.409 L1650.84 682.409 L1650.28 682.409 L1649.72 682.409 L1649.16 682.409 L1648.6 682.409 L1648.04 682.409 L1647.48 682.409 L1646.93 682.409 L1646.37 682.409 L1645.81 682.409 L1645.25 682.409 L1644.69 682.409 L1644.13 682.409 L1643.57 682.409 L1643.01 682.409 L1642.45 682.409 L1641.89 682.409 L1641.33 682.409 L1640.77 682.409 L1640.21 682.409 L1639.66 682.409 L1639.1 682.409 L1638.54 682.409 L1637.98 682.409 L1637.42 682.409 L1636.86 682.409 L1636.3 682.409 L1635.74 682.409 L1635.18 682.409 L1634.62 682.409 L1634.06 682.409 L1633.5 682.409 L1632.94 682.409 L1632.39 682.409 L1631.83 682.409 L1631.27 682.409 L1630.71 682.409 L1630.15 682.409 L1629.59 682.409 L1629.03 682.409 L1628.47 682.409 L1627.91 682.409 L1627.35 682.409 L1626.79 682.409 L1626.23 682.409 L1625.67 682.409 L1625.11 682.409 L1624.56 682.409 L1624 682.409 L1623.44 682.409 L1622.88 682.409 L1622.32 682.409 L1621.76 682.409 L1621.2 682.409 L1620.64 682.409 L1620.08 682.409 L1619.52 682.409 L1618.96 682.409 L1618.4 682.409 L1617.84 682.409 L1617.29 682.409 L1616.73 682.409 L1616.17 682.409 L1615.61 682.409 L1615.05 682.409 L1614.49 682.409 L1613.93 682.409 L1613.37 682.409 L1612.81 682.409 L1612.25 682.409 L1611.69 682.409 L1611.13 682.409 L1610.57 682.409 L1610.02 682.409 L1609.46 682.409 L1608.9 682.409 L1608.34 682.409 L1607.78 682.409 L1607.22 682.409 L1606.66 682.409 L1606.1 682.409 L1605.54 682.409 L1604.98 682.409 L1604.42 682.409 L1603.86 682.409 L1603.3 682.409 L1602.74 682.409 L1602.19 682.409 L1601.63 682.409 L1601.07 682.409 L1600.51 682.409 L1599.95 682.409 L1599.39 682.409 L1598.83 682.409 L1598.27 682.409 L1597.71 682.409 L1597.15 682.409 L1596.59 682.409 L1596.03 682.409 L1595.47 682.409 L1594.92 682.409 L1594.36 682.409 L1593.8 682.409 L1593.24 682.409 L1592.68 682.409 L1592.12 682.409 L1591.56 682.409 L1591 682.409 L1590.44 682.409 L1589.88 682.409 L1589.32 682.409 L1588.76 682.409 L1588.2 682.409 L1587.65 682.409 L1587.09 682.409 L1586.53 682.409 L1585.97 682.409 L1585.41 682.409 L1584.85 682.409 L1584.29 682.409 L1583.73 682.409 L1583.17 682.409 L1582.61 682.409 L1582.05 682.409 L1581.49 682.409 L1580.93 682.409 L1580.37 682.409 L1579.82 682.409 L1579.26 682.409 L1578.7 682.409 L1578.14 682.409 L1577.58 682.409 L1577.02 682.409 L1576.46 682.409 L1575.9 682.409 L1575.34 682.409 L1574.78 682.409 L1574.22 682.409 L1573.66 682.409 L1573.1 682.409 L1572.55 682.409 L1571.99 682.409 L1571.43 682.409 L1570.87 682.409 L1570.31 682.409 L1569.75 682.409 L1569.19 682.409 L1568.63 682.409 L1568.07 682.409 L1567.51 682.409 L1566.95 682.409 L1566.39 682.409 L1565.83 682.409 L1565.28 682.409 L1564.72 682.409 L1564.16 682.409 L1563.6 682.409 L1563.04 682.409 L1562.48 682.409 L1561.92 682.409 L1561.36 682.409 L1560.8 682.409 L1560.24 682.409 L1559.68 682.409 L1559.12 682.409 L1558.56 682.409 L1558 682.409 L1557.45 682.409 L1556.89 682.409 L1556.33 682.409 L1555.77 682.409 L1555.21 682.409 L1554.65 682.409 L1554.09 682.409 L1553.53 682.409 L1552.97 682.409 L1552.41 682.409 L1551.85 682.409 L1551.29 682.409 L1550.73 682.409 L1550.18 682.409 L1549.62 682.409 L1549.06 682.409 L1548.5 682.409 L1547.94 682.409 L1547.38 682.409 L1546.82 682.409 L1546.26 682.409 L1545.7 682.409 L1545.14 682.409 L1544.58 682.409 L1544.02 682.409 L1543.46 682.409 L1542.9 682.409 L1542.35 682.409 L1541.79 682.409 L1541.23 682.409 L1540.67 682.409 L1540.11 682.409 L1539.55 682.409 L1538.99 682.409 L1538.43 682.409 L1537.87 682.409 L1537.31 682.409 L1536.75 682.409 L1536.19 682.409 L1535.63 682.409 L1535.08 682.409 L1534.52 682.409 L1533.96 682.409 L1533.4 682.409 L1532.84 682.409 L1532.28 682.409 L1531.72 682.409 L1531.16 682.409 L1530.6 682.409 L1530.04 682.409 L1529.48 682.409 L1528.92 682.409 L1528.36 682.409 L1527.81 682.409 L1527.25 682.409 L1526.69 682.409 L1526.13 682.409 L1525.57 682.409 L1525.01 682.409 L1524.45 682.409 L1523.89 682.409 L1523.33 682.409 L1522.77 682.409 L1522.21 682.409 L1521.65 682.409 L1521.09 682.409 L1520.53 682.409 L1519.98 682.409 L1519.42 682.409 L1518.86 682.409 L1518.3 682.409 L1517.74 682.409 L1517.18 682.409 L1516.62 682.409 L1516.06 682.409 L1515.5 682.409 L1514.94 682.409 L1514.38 682.409 L1513.82 682.409 L1513.26 682.409 L1512.71 682.409 L1512.15 682.409 L1511.59 682.409 L1511.03 682.409 L1510.47 682.409 L1509.91 682.409 L1509.35 682.409 L1508.79 682.409 L1508.23 682.409 L1507.67 682.409 L1507.11 682.409 L1506.55 682.409 L1505.99 682.409 L1505.44 682.409 L1504.88 682.409 L1504.32 682.409 L1503.76 682.409 L1503.2 682.409 L1502.64 682.409 L1502.08 682.409 L1501.52 682.409 L1500.96 682.409 L1500.4 682.409 L1499.84 682.409 L1499.28 682.409 L1498.72 682.409 L1498.16 682.409 L1497.61 682.409 L1497.05 682.409 L1496.49 682.409 L1495.93 682.409 L1495.37 682.409 L1494.81 682.409 L1494.25 682.409 L1493.69 682.409 L1493.13 682.409 L1492.57 682.409 L1492.01 682.409 L1491.45 682.409 L1490.89 682.409 L1490.34 682.409 L1489.78 682.409 L1489.22 682.409 L1488.66 682.409 L1488.1 682.409 L1487.54 682.409 L1486.98 682.409 L1486.42 682.409 L1485.86 682.409 L1485.3 682.409 L1484.74 682.409 L1484.18 682.409 L1483.62 682.409 L1483.07 682.409 L1482.51 682.409 L1481.95 682.409 L1481.39 682.409 L1480.83 682.409 L1480.27 682.409 L1479.71 682.409 L1479.15 682.409 L1478.59 682.409 L1478.03 682.409 L1477.47 682.409 L1476.91 682.409 L1476.35 682.409 L1475.79 682.409 L1475.24 682.409 L1474.68 682.409 L1474.12 682.409 L1473.56 682.409 L1473 682.409 L1472.44 682.409 L1471.88 682.409 L1471.32 682.409 L1470.76 682.409 L1470.2 682.409 L1469.64 682.409 L1469.08 682.409 L1468.52 682.409 L1467.97 682.409 L1467.41 682.409 L1466.85 682.409 L1466.29 682.409 L1465.73 682.409 L1465.17 682.409 L1464.61 682.409 L1464.05 682.409 L1463.49 682.409 L1462.93 682.409 L1462.37 682.409 L1461.81 682.409 L1461.25 682.409 L1460.7 682.409 L1460.14 682.409 L1459.58 682.409 L1459.02 682.409 L1458.46 682.409 L1457.9 682.409 L1457.34 682.409 L1456.78 682.409 L1456.22 682.409 L1455.66 682.409 L1455.1 682.409 L1454.54 682.409 L1453.98 682.409 L1453.42 682.409 L1452.87 682.409 L1452.31 682.409 L1451.75 682.409 L1451.19 682.409 L1450.63 682.409 L1450.07 682.409 L1449.51 682.409 L1448.95 682.409 L1448.39 682.409 L1447.83 682.409 L1447.27 682.409 L1446.71 682.409 L1446.15 682.409 L1445.6 682.409 L1445.04 682.409 L1444.48 682.409 L1443.92 682.409 L1443.36 682.409 L1442.8 682.409 L1442.24 682.409 L1441.68 682.409 L1441.12 682.409 L1440.56 682.409 L1440 682.409 L1439.44 682.409 L1438.88 682.409 L1438.33 682.409 L1437.77 682.409 L1437.21 682.409 L1436.65 682.409 L1436.09 682.409 L1435.53 682.409 L1434.97 682.409 L1434.41 682.409 L1433.85 682.409 L1433.29 682.409 L1432.73 682.409 L1432.17 682.409 L1431.61 682.409 L1431.05 682.409 L1430.5 682.409 L1429.94 682.409 L1429.38 682.409 L1428.82 682.409 L1428.26 682.409 L1427.7 682.409 L1427.14 682.409 L1426.58 682.409 L1426.02 682.409 L1425.46 682.409 L1424.9 682.409 L1424.34 682.409 L1423.78 682.409 L1423.23 682.409 L1422.67 682.409 L1422.11 682.409 L1421.55 682.409 L1420.99 682.409 L1420.43 682.409 L1419.87 682.409 L1419.31 682.409 L1418.75 682.409 L1418.19 682.409 L1417.63 682.409 L1417.07 682.409 L1416.51 682.409 L1415.95 682.409 L1415.4 682.409 L1414.84 682.409 L1414.28 682.409 L1413.72 682.409 L1413.16 682.409 L1412.6 682.409 L1412.04 682.409 L1411.48 682.409 L1410.92 682.409 L1410.36 682.409 L1409.8 682.409 L1409.24 682.409 L1408.68 682.409 L1408.13 682.409 L1407.57 682.409 L1407.01 682.409 L1406.45 682.409 L1405.89 682.409 L1405.33 682.409 L1404.77 682.409 L1404.21 682.409 L1403.65 682.409 L1403.09 682.409 L1402.53 682.409 L1401.97 682.409 L1401.41 682.409 L1400.86 682.409 L1400.3 682.409 L1399.74 682.409 L1399.18 682.409 L1398.62 682.409 L1398.06 682.409 L1397.5 682.409 L1396.94 682.409 L1396.38 682.409 L1395.82 682.409 L1395.26 682.409 L1394.7 682.409 L1394.14 682.409 L1393.58 682.409 L1393.03 682.409 L1392.47 682.409 L1391.91 682.409 L1391.35 682.409 L1390.79 682.409 L1390.23 682.409 L1389.67 682.409 L1389.11 682.409 L1388.55 682.409 L1387.99 682.409 L1387.43 682.409 L1386.87 682.409 L1386.31 682.409 L1385.76 682.409 L1385.2 682.409 L1384.64 682.409 L1384.08 682.409 L1383.52 682.409 L1382.96 682.409 L1382.4 682.409 L1381.84 682.409 L1381.28 682.409 L1380.72 682.409 L1380.16 682.409 L1379.6 682.409 L1379.04 682.409 L1378.49 682.409 L1377.93 682.409 L1377.37 682.409 L1376.81 682.409 L1376.25 682.409 L1375.69 682.409 L1375.13 682.409 L1374.57 682.409 L1374.01 682.409 L1373.45 682.409 L1372.89 682.409 L1372.33 682.409 L1371.77 682.409 L1371.21 682.409 L1370.66 682.409 L1370.1 682.409 L1369.54 682.409 L1368.98 682.409 L1368.42 682.409 L1367.86 682.409 L1367.3 682.409 L1366.74 682.409 L1366.18 682.409 L1365.62 682.409 L1365.06 682.409 L1364.5 682.409 L1363.94 682.409 L1363.39 682.409 L1362.83 682.409 L1362.27 682.409 L1361.71 682.409 L1361.15 682.409 L1360.59 682.409 L1360.03 682.409 L1359.47 682.409 L1358.91 682.409 L1358.35 682.409 L1357.79 682.409 L1357.23 682.409 L1356.67 682.409 L1356.12 682.409 L1355.56 682.409 L1355 682.409 L1354.44 682.409 L1353.88 682.409 L1353.32 682.409 L1352.76 682.409 L1352.2 682.409 L1351.64 682.409 L1351.08 682.409 L1350.52 682.409 L1349.96 682.409 L1349.4 682.409 L1348.84 682.409 L1348.29 682.409 L1347.73 682.409 L1347.17 682.409 L1346.61 682.409 L1346.05 682.409 L1345.49 682.409 L1344.93 682.409 L1344.37 682.409 L1343.81 682.409 L1343.25 682.409 L1342.69 682.409 L1342.13 682.409 L1341.57 682.409 L1341.02 682.409 L1340.46 682.409 L1339.9 682.409 L1339.34 682.409 L1338.78 682.409 L1338.22 682.409 L1337.66 682.409 L1337.1 682.409 L1336.54 682.409 L1335.98 682.409 L1335.42 682.409 L1334.86 682.409 L1334.3 682.409 L1333.75 682.409 L1333.19 682.409 L1332.63 682.409 L1332.07 682.409 L1331.51 682.409 L1330.95 682.409 L1330.39 682.409 L1329.83 682.409 L1329.27 682.409 L1328.71 682.409 L1328.15 682.409 L1327.59 682.409 L1327.03 682.409 L1326.47 682.409 L1325.92 682.409 L1325.36 682.409 L1324.8 682.409 L1324.24 682.409 L1323.68 682.409 L1323.12 682.409 L1322.56 682.409 L1322 682.409 L1321.44 682.409 L1320.88 682.409 L1320.32 682.409 L1319.76 682.409 L1319.2 682.409 L1318.65 682.409 L1318.09 682.409 L1317.53 682.409 L1316.97 682.409 L1316.41 682.409 L1315.85 682.409 L1315.29 682.409 L1314.73 682.409 L1314.17 682.409 L1313.61 682.409 L1313.05 682.409 L1312.49 682.409 L1311.93 682.409 L1311.38 682.409 L1310.82 682.409 L1310.26 682.409 L1309.7 682.409 L1309.14 682.409 L1308.58 682.409 L1308.02 682.409 L1307.46 682.409 L1306.9 682.409 L1306.34 682.409 L1305.78 682.409 L1305.22 682.409 L1304.66 682.409 L1304.1 682.409 L1303.55 682.409 L1302.99 682.409 L1302.43 682.409 L1301.87 682.409 L1301.31 682.409 L1300.75 682.409 L1300.19 682.409 L1299.63 682.409 L1299.07 682.409 L1298.51 682.409 L1297.95 682.409 L1297.39 682.409 L1296.83 682.409 L1296.28 682.409 L1295.72 682.409 L1295.16 682.409 L1294.6 682.409 L1294.04 682.409 L1293.48 682.409 L1292.92 682.409 L1292.36 682.409 L1291.8 682.409 L1291.24 682.409 L1290.68 682.409 L1290.12 682.409 L1289.56 682.409 L1289 682.409 L1288.45 682.409 L1287.89 682.409 L1287.33 682.409 L1286.77 682.409 L1286.21 682.409 L1285.65 682.409 L1285.09 682.409 L1284.53 682.409 L1283.97 682.409 L1283.41 682.409 L1282.85 682.409 L1282.29 682.409 L1281.73 682.409 L1281.18 682.409 L1280.62 682.409 L1280.06 682.409 L1279.5 682.409 L1278.94 682.409 L1278.38 682.409 L1277.82 682.409 L1277.26 682.409 L1276.7 682.409 L1276.14 682.409 L1275.58 682.409 L1275.02 682.409 L1274.46 682.409 L1273.91 682.409 L1273.35 682.409 L1272.79 682.409 L1272.23 682.409 L1271.67 682.409 L1271.11 682.409 L1270.55 682.409 L1269.99 682.409 L1269.43 682.409 L1268.87 682.409 L1268.31 682.409 L1267.75 682.409 L1267.19 682.409 L1266.63 682.409 L1266.08 682.409 L1265.52 682.409 L1264.96 682.409 L1264.4 682.409 L1263.84 682.409 L1263.28 682.409 L1262.72 682.409 L1262.16 682.409 L1261.6 682.409 L1261.04 682.409 L1260.48 682.409 L1259.92 682.409 L1259.36 682.409 L1258.81 682.409 L1258.25 682.409 L1257.69 682.409 L1257.13 682.409 L1256.57 682.409 L1256.01 682.409 L1255.45 682.409 L1254.89 682.409 L1254.33 682.409 L1253.77 682.409 L1253.21 682.409 L1252.65 682.409 L1252.09 682.409 L1251.54 682.409 L1250.98 682.409 L1250.42 682.409 L1249.86 682.409 L1249.3 682.409 L1248.74 682.409 L1248.18 682.409 L1247.62 682.409 L1247.06 682.409 L1246.5 682.409 L1245.94 682.409 L1245.38 682.409 L1244.82 682.409 L1244.26 682.409 L1243.71 682.409 L1243.15 682.409 L1242.59 682.409 L1242.03 682.409 L1241.47 682.409 L1240.91 682.409 L1240.35 682.409 L1239.79 682.409 L1239.23 682.409 L1238.67 682.409 L1238.11 682.409 L1237.55 682.409 L1236.99 682.409 L1236.44 682.409 L1235.88 682.409 L1235.32 682.409 L1234.76 682.409 L1234.2 682.409 L1233.64 682.409 L1233.08 682.409 L1232.52 682.409 L1231.96 682.409 L1231.4 682.409 L1230.84 682.409 L1230.28 682.409 L1229.72 682.409 L1229.17 682.409 L1228.61 682.409 L1228.05 682.409 L1227.49 682.409 L1226.93 682.409 L1226.37 682.409 L1225.81 682.409 L1225.25 682.409 L1224.69 682.409 L1224.13 682.409 L1223.57 682.409 L1223.01 682.409 L1222.45 682.409 L1221.89 682.409 L1221.34 682.409 L1220.78 682.409 L1220.22 682.409 L1219.66 682.409 L1219.1 682.409 L1218.54 682.409 L1217.98 682.409 L1217.42 682.409 L1216.86 682.409 L1216.3 682.409 L1215.74 682.409 L1215.18 682.409 L1214.62 682.409 L1214.07 682.409 L1213.51 682.409 L1212.95 682.409 L1212.39 682.409 L1211.83 682.409 L1211.27 682.409 L1210.71 682.409 L1210.15 682.409 L1209.59 682.409 L1209.03 682.409 L1208.47 682.409 L1207.91 682.409 L1207.35 682.409 L1206.8 682.409 L1206.24 682.409 L1205.68 682.409 L1205.12 682.409 L1204.56 682.409 L1204 682.409 L1203.44 682.409 L1202.88 682.409 L1202.32 682.409 L1201.76 682.409 L1201.2 682.409 L1200.64 682.409 L1200.08 682.409 L1199.52 682.409 L1198.97 682.409 L1198.41 682.409 L1197.85 682.409 L1197.29 682.409 L1196.73 682.409 L1196.17 682.409 L1195.61 682.409 L1195.05 682.409 L1194.49 682.409 L1193.93 682.409 L1193.37 682.409 L1192.81 682.409 L1192.25 682.409 L1191.7 682.409 L1191.14 682.409 L1190.58 682.409 L1190.02 682.409 L1189.46 682.409 L1188.9 682.409 L1188.34 682.409 L1187.78 682.409 L1187.22 682.409 L1186.66 682.409 L1186.1 682.409 L1185.54 682.409 L1184.98 682.409 L1184.43 682.409 L1183.87 682.409 L1183.31 682.409 L1182.75 682.409 L1182.19 682.409 L1181.63 682.409 L1181.07 682.409 L1180.51 682.409 L1179.95 682.409 L1179.39 682.409 L1178.83 682.409 L1178.27 682.409 L1177.71 682.409 L1177.15 682.409 L1176.6 682.409 L1176.04 682.409 L1175.48 682.409 L1174.92 682.409 L1174.36 682.409 L1173.8 682.409 L1173.24 682.409 L1172.68 682.409 L1172.12 682.409 L1171.56 682.409 L1171 682.409 L1170.44 682.409 L1169.88 682.409 L1169.33 682.409 L1168.77 682.409 L1168.21 682.409 L1167.65 682.409 L1167.09 682.409 L1166.53 682.409 L1165.97 682.409 L1165.41 682.409 L1164.85 682.409 L1164.29 682.409 L1163.73 682.409 L1163.17 682.409 L1162.61 682.409 L1162.05 682.409 L1161.5 682.409 L1160.94 682.409 L1160.38 682.409 L1159.82 682.409 L1159.26 682.409 L1158.7 682.409 L1158.14 682.409 L1157.58 682.409 L1157.02 682.409 L1156.46 682.409 L1155.9 682.409 L1155.34 682.409 L1154.78 682.409 L1154.23 682.409 L1153.67 682.409 L1153.11 682.409 L1152.55 682.409 L1151.99 682.409 L1151.43 682.409 L1150.87 682.409 L1150.31 682.409 L1149.75 682.409 L1149.19 682.409 L1148.63 682.409 L1148.07 682.409 L1147.51 682.409 L1146.96 682.409 L1146.4 682.409 L1145.84 682.409 L1145.28 682.409 L1144.72 682.409 L1144.16 682.409 L1143.6 682.409 L1143.04 682.409 L1142.48 682.409 L1141.92 682.409 L1141.36 682.409 L1140.8 682.409 L1140.24 682.409 L1139.68 682.409 L1139.13 682.409 L1138.57 682.409 L1138.01 682.409 L1137.45 682.409 L1136.89 682.409 L1136.33 682.409 L1135.77 682.409 L1135.21 682.409 L1134.65 682.409 L1134.09 682.409 L1133.53 682.409 L1132.97 682.409 L1132.41 682.409 L1131.86 682.409 L1131.3 682.409 L1130.74 682.409 L1130.18 682.409 L1129.62 682.409 L1129.06 682.409 L1128.5 682.409 L1127.94 682.409 L1127.38 682.409 L1126.82 682.409 L1126.26 682.409 L1125.7 682.409 L1125.14 682.409 L1124.59 682.409 L1124.03 682.409 L1123.47 682.409 L1122.91 682.409 L1122.35 682.409 L1121.79 682.409 L1121.23 682.409 L1120.67 682.409 L1120.11 682.409 L1119.55 682.409 L1118.99 682.409 L1118.43 682.409 L1117.87 682.409 L1117.31 682.409 L1116.76 682.409 L1116.2 682.409 L1115.64 682.409 L1115.08 682.409 L1114.52 682.409 L1113.96 682.409 L1113.4 682.409 L1112.84 682.409 L1112.28 682.409 L1111.72 682.409 L1111.16 682.409 L1110.6 682.409 L1110.04 682.409 L1109.49 682.409 L1108.93 682.409 L1108.37 682.409 L1107.81 682.409 L1107.25 682.409 L1106.69 682.409 L1106.13 682.409 L1105.57 682.409 L1105.01 682.409 L1104.45 682.409 L1103.89 682.409 L1103.33 682.409 L1102.77 682.409 L1102.22 682.409 L1101.66 682.409 L1101.1 682.409 L1100.54 682.409 L1099.98 682.409 L1099.42 682.409 L1098.86 682.409 L1098.3 682.409 L1097.74 682.409 L1097.18 682.409 L1096.62 682.409 L1096.06 682.409 L1095.5 682.409 L1094.94 682.409 L1094.39 682.409 L1093.83 682.409 L1093.27 682.409 L1092.71 682.409 L1092.15 682.409 L1091.59 682.409 L1091.03 682.409 L1090.47 682.409 L1089.91 682.409 L1089.35 682.409 L1088.79 682.409 L1088.23 682.409 L1087.67 682.409 L1087.12 682.409 L1086.56 682.409 L1086 682.409 L1085.44 682.409 L1084.88 682.409 L1084.32 682.409 L1083.76 682.409 L1083.2 682.409 L1082.64 682.409 L1082.08 682.409 L1081.52 682.409 L1080.96 682.409 L1080.4 682.409 L1079.85 682.409 L1079.29 682.409 L1078.73 682.409 L1078.17 682.409 L1077.61 682.409 L1077.05 682.409 L1076.49 682.409 L1075.93 682.409 L1075.37 682.409 L1074.81 682.409 L1074.25 682.409 L1073.69 682.409 L1073.13 682.409 L1072.57 682.409 L1072.02 682.409 L1071.46 682.409 L1070.9 682.409 L1070.34 682.409 L1069.78 682.409 L1069.22 682.409 L1068.66 682.409 L1068.1 682.409 L1067.54 682.409 L1066.98 682.409 L1066.42 682.409 L1065.86 682.409 L1065.3 682.409 L1064.75 682.409 L1064.19 682.409 L1063.63 682.409 L1063.07 682.409 L1062.51 682.409 L1061.95 682.409 L1061.39 682.409 L1060.83 682.409 L1060.27 682.409 L1059.71 682.409 L1059.15 682.409 L1058.59 682.409 L1058.03 682.409 L1057.48 682.409 L1056.92 682.409 L1056.36 682.409 L1055.8 682.409 L1055.24 682.409 L1054.68 682.409 L1054.12 682.409 L1053.56 682.409 L1053 682.409 L1052.44 682.409 L1051.88 682.409 L1051.32 682.409 L1050.76 682.409 L1050.2 682.409 L1049.65 682.409 L1049.09 682.409 L1048.53 682.409 L1047.97 682.409 L1047.41 682.409 L1046.85 682.409 L1046.29 682.409 L1045.73 682.409 L1045.17 682.409 L1044.61 682.409 L1044.05 682.409 L1043.49 682.409 L1042.93 682.409 L1042.38 682.409 L1041.82 682.409 L1041.26 682.409 L1040.7 682.409 L1040.14 682.409 L1039.58 682.409 L1039.02 682.409 L1038.46 682.409 L1037.9 682.409 L1037.34 682.409 L1036.78 682.409 L1036.22 682.409 L1035.66 682.409 L1035.1 682.409 L1034.55 682.409 L1033.99 682.409 L1033.43 682.409 L1032.87 682.409 L1032.31 682.409 L1031.75 682.409 L1031.19 682.409 L1030.63 682.409 L1030.07 682.409 L1029.51 682.409 L1028.95 682.409 L1028.39 682.409 L1027.83 682.409 L1027.28 682.409 L1026.72 682.409 L1026.16 682.409 L1025.6 682.409 L1025.04 682.409 L1024.48 682.409 L1023.92 682.409 L1023.36 682.409 L1022.8 682.409 L1022.24 682.409 L1021.68 682.409 L1021.12 682.409 L1020.56 682.409 L1020.01 682.409 L1019.45 682.409 L1018.89 682.409 L1018.33 682.409 L1017.77 682.409 L1017.21 682.409 L1016.65 682.409 L1016.09 682.409 L1015.53 682.409 L1014.97 682.409 L1014.41 682.409 L1013.85 682.409 L1013.29 682.409 L1012.73 682.409 L1012.18 682.409 L1011.62 682.409 L1011.06 682.409 L1010.5 682.409 L1009.94 682.409 L1009.38 682.409 L1008.82 682.409 L1008.26 682.409 L1007.7 682.409 L1007.14 682.409 L1006.58 682.409 L1006.02 682.409 L1005.46 682.409 L1004.91 682.409 L1004.35 682.409 L1003.79 682.409 L1003.23 682.409 L1002.67 682.409 L1002.11 682.409 L1001.55 682.409 L1000.99 682.409 L1000.43 682.409 L999.872 682.409 L999.313 682.409 L998.754 682.409 L998.194 682.409 L997.635 682.409 L997.076 682.409 L996.517 682.409 L995.957 682.409 L995.398 682.409 L994.839 682.409 L994.28 682.409 L993.72 682.409 L993.161 682.409 L992.602 682.409 L992.043 682.409 L991.483 682.409 L990.924 682.409 L990.365 682.409 L989.806 682.409 L989.246 682.409 L988.687 682.409 L988.128 682.409 L987.569 682.409 L987.009 682.409 L986.45 682.409 L985.891 682.409 L985.332 682.409 L984.772 682.409 L984.213 682.409 L983.654 682.409 L983.095 682.409 L982.535 682.409 L981.976 682.409 L981.417 682.409 L980.858 682.409 L980.298 682.409 L979.739 682.409 L979.18 682.409 L978.621 682.409 L978.061 682.409 L977.502 682.409 L976.943 682.409 L976.384 682.409 L975.824 682.409 L975.265 682.409 L974.706 682.409 L974.147 682.409 L973.587 682.409 L973.028 682.409 L972.469 682.409 L971.91 682.409 L971.35 682.409 L970.791 682.409 L970.232 682.409 L969.673 682.409 L969.113 682.409 L968.554 682.409 L967.995 682.409 L967.436 682.409 L966.876 682.409 L966.317 682.409 L965.758 682.409 L965.199 682.409 L964.639 682.409 L964.08 682.409 L963.521 682.409 L962.962 682.409 L962.402 682.409 L961.843 682.409 L961.284 682.409 L960.725 682.409 L960.165 682.409 L959.606 682.409 L959.047 682.409 L958.488 682.409 L957.928 682.409 L957.369 682.409 L956.81 682.409 L956.251 682.409 L955.691 682.409 L955.132 682.409 L954.573 682.409 L954.014 682.409 L953.454 682.409 L952.895 682.409 L952.336 682.409 L951.777 682.409 L951.217 682.409 L950.658 682.409 L950.099 682.409 L949.54 682.409 L948.98 682.409 L948.421 682.409 L947.862 682.409 L947.303 682.409 L946.743 682.409 L946.184 682.409 L945.625 682.409 L945.066 682.409 L944.506 682.409 L943.947 682.409 L943.388 682.409 L942.829 682.409 L942.269 682.409 L941.71 682.409 L941.151 682.409 L940.592 682.409 L940.032 682.409 L939.473 682.409 L938.914 682.409 L938.355 682.409 L937.795 682.409 L937.236 682.409 L936.677 682.409 L936.118 682.409 L935.558 682.409 L934.999 682.409 L934.44 682.409 L933.881 682.409 L933.321 682.409 L932.762 682.409 L932.203 682.409 L931.644 682.409 L931.084 682.409 L930.525 682.409 L929.966 682.409 L929.406 682.409 L928.847 682.409 L928.288 682.409 L927.729 682.409 L927.169 682.409 L926.61 682.409 L926.051 682.409 L925.492 682.409 L924.932 682.409 L924.373 682.409 L923.814 682.409 L923.255 682.409 L922.695 682.409 L922.136 682.409 L921.577 682.409 L921.018 682.409 L920.458 682.409 L919.899 682.409 L919.34 682.409 L918.781 682.409 L918.221 682.409 L917.662 682.409 L917.103 682.409 L916.544 682.409 L915.984 682.409 L915.425 682.409 L914.866 682.409 L914.307 682.409 L913.747 682.409 L913.188 682.409 L912.629 682.409 L912.07 682.409 L911.51 682.409 L910.951 682.409 L910.392 682.409 L909.833 682.409 L909.273 682.409 L908.714 682.409 L908.155 682.409 L907.596 682.409 L907.036 682.409 L906.477 682.409 L905.918 682.409 L905.359 682.409 L904.799 682.409 L904.24 682.409 L903.681 682.409 L903.122 682.409 L902.562 682.409 L902.003 682.409 L901.444 682.409 L900.885 682.409 L900.325 682.409 L899.766 682.409 L899.207 682.409 L898.648 682.409 L898.088 682.409 L897.529 682.409 L896.97 682.409 L896.411 682.409 L895.851 682.409 L895.292 682.409 L894.733 682.409 L894.174 682.409 L893.614 682.409 L893.055 682.409 L892.496 682.409 L891.937 682.409 L891.377 682.409 L890.818 682.409 L890.259 682.409 L889.7 682.409 L889.14 682.409 L888.581 682.409 L888.022 682.409 L887.463 682.409 L886.903 682.409 L886.344 682.409 L885.785 682.409 L885.226 682.409 L884.666 682.409 L884.107 682.409 L883.548 682.409 L882.989 682.409 L882.429 682.409 L881.87 682.409 L881.311 682.409 L880.752 682.409 L880.192 682.409 L879.633 682.409 L879.074 682.409 L878.515 682.409 L877.955 682.409 L877.396 682.409 L876.837 682.409 L876.278 682.409 L875.718 682.409 L875.159 682.409 L874.6 682.409 L874.041 682.409 L873.481 682.409 L872.922 682.409 L872.363 682.409 L871.804 682.409 L871.244 682.409 L870.685 682.409 L870.126 682.409 L869.567 682.409 L869.007 682.409 L868.448 682.409 L867.889 682.409 L867.33 682.409 L866.77 682.409 L866.211 682.409 L865.652 682.409 L865.093 682.409 L864.533 682.409 L863.974 682.409 L863.415 682.409 L862.856 682.409 L862.296 682.409 L861.737 682.409 L861.178 682.409 L860.619 682.409 L860.059 682.409 L859.5 682.409 L858.941 682.409 L858.382 682.409 L857.822 682.409 L857.263 682.409 L856.704 682.409 L856.145 682.409 L855.585 682.409 L855.026 682.409 L854.467 682.409 L853.908 682.409 L853.348 682.409 L852.789 682.409 L852.23 682.409 L851.671 682.409 L851.111 682.409 L850.552 682.409 L849.993 682.409 L849.434 682.409 L848.874 682.409 L848.315 682.409 L847.756 682.409 L847.197 682.409 L846.637 682.409 L846.078 682.409 L845.519 682.409 L844.96 682.409 L844.4 682.409 L843.841 682.409 L843.282 682.409 L842.723 682.409 L842.163 682.409 L841.604 682.409 L841.045 682.409 L840.486 682.409 L839.926 682.409 L839.367 682.409 L838.808 682.409 L838.249 682.409 L837.689 682.409 L837.13 682.409 L836.571 682.409 L836.012 682.409 L835.452 682.409 L834.893 682.409 L834.334 682.409 L833.775 682.409 L833.215 682.409 L832.656 682.409 L832.097 682.409 L831.538 682.409 L830.978 682.409 L830.419 682.409 L829.86 682.409 L829.301 682.409 L828.741 682.409 L828.182 682.409 L827.623 682.409 L827.064 682.409 L826.504 682.409 L825.945 682.409 L825.386 682.409 L824.827 682.409 L824.267 682.409 L823.708 682.409 L823.149 682.409 L822.59 682.409 L822.03 682.409 L821.471 682.409 L820.912 682.409 L820.353 682.409 L819.793 682.409 L819.234 682.409 L818.675 682.409 L818.116 682.409 L817.556 682.409 L816.997 682.409 L816.438 682.409 L815.879 682.409 L815.319 682.409 L814.76 682.409 L814.201 682.409 L813.642 682.409 L813.082 682.409 L812.523 682.409 L811.964 682.409 L811.405 682.409 L810.845 682.409 L810.286 682.409 L809.727 682.409 L809.168 682.409 L808.608 682.409 L808.049 682.409 L807.49 682.409 L806.931 682.409 L806.371 682.409 L805.812 682.409 L805.253 682.409 L804.693 682.409 L804.134 682.409 L803.575 682.409 L803.016 682.409 L802.456 682.409 L801.897 682.409 L801.338 682.409 L800.779 682.409 L800.219 682.409 L799.66 682.409 L799.101 682.409 L798.542 682.409 L797.982 682.409 L797.423 682.409 L796.864 682.409 L796.305 682.409 L795.745 682.409 L795.186 682.409 L794.627 682.409 L794.068 682.409 L793.508 682.409 L792.949 682.409 L792.39 682.409 L791.831 682.409 L791.271 682.409 L790.712 682.409 L790.153 682.409 L789.594 682.409 L789.034 682.409 L788.475 682.409 L787.916 682.409 L787.357 682.409 L786.797 682.409 L786.238 682.409 L785.679 682.409 L785.12 682.409 L784.56 682.409 L784.001 682.409 L783.442 682.409 L782.883 682.409 L782.323 682.409 L781.764 682.409 L781.205 682.409 L780.646 682.409 L780.086 682.409 L779.527 682.409 L778.968 682.409 L778.409 682.409 L777.849 682.409 L777.29 682.409 L776.731 682.409 L776.172 682.409 L775.612 682.409 L775.053 682.409 L774.494 682.409 L773.935 682.409 L773.375 682.409 L772.816 682.409 L772.257 682.409 L771.698 682.409 L771.138 682.409 L770.579 682.409 L770.02 682.409 L769.461 682.409 L768.901 682.409 L768.342 682.409 L767.783 682.409 L767.224 682.409 L766.664 682.409 L766.105 682.409 L765.546 682.409 L764.987 682.409 L764.427 682.409 L763.868 682.409 L763.309 682.409 L762.75 682.409 L762.19 682.409 L761.631 682.409 L761.072 682.409 L760.513 682.409 L759.953 682.409 L759.394 682.409 L758.835 682.409 L758.276 682.409 L757.716 682.409 L757.157 682.409 L756.598 682.409 L756.039 682.409 L755.479 682.409 L754.92 682.409 L754.361 682.409 L753.802 682.409 L753.242 682.409 L752.683 682.409 L752.124 682.409 L751.565 682.409 L751.005 682.409 L750.446 682.409 L749.887 682.409 L749.328 682.409 L748.768 682.409 L748.209 682.409 L747.65 682.409 L747.091 682.409 L746.531 682.409 L745.972 682.409 L745.413 682.409 L744.854 682.409 L744.294 682.409 L743.735 682.409 L743.176 682.409 L742.617 682.409 L742.057 682.409 L741.498 682.409 L740.939 682.409 L740.38 682.409 L739.82 682.409 L739.261 682.409 L738.702 682.409 L738.143 682.409 L737.583 682.409 L737.024 682.409 L736.465 682.409 L735.906 682.409 L735.346 682.409 L734.787 682.409 L734.228 682.409 L733.669 682.409 L733.109 682.409 L732.55 682.409 L731.991 682.409 L731.432 682.409 L730.872 682.409 L730.313 682.409 L729.754 682.409 L729.195 682.409 L728.635 682.409 L728.076 682.409 L727.517 682.409 L726.958 682.409 L726.398 682.409 L725.839 682.409 L725.28 682.409 L724.721 682.409 L724.161 682.409 L723.602 682.409 L723.043 682.409 L722.484 682.409 L721.924 682.409 L721.365 682.409 L720.806 682.409 L720.247 682.409  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip633)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,686.705 720.806,686.705 721.365,686.705 721.924,686.705 722.484,686.705 723.043,686.705 723.602,686.705 724.161,686.705 724.721,686.705 725.28,686.705 725.839,686.705 726.398,686.705 726.958,686.705 727.517,686.705 728.076,686.705 728.635,686.705 729.195,686.705 729.754,686.705 730.313,686.705 730.872,686.705 731.432,686.705 731.991,686.705 732.55,686.705 733.109,686.705 733.669,686.705 734.228,686.705 734.787,686.705 735.346,686.705 735.906,686.705 736.465,686.705 737.024,686.705 737.583,686.705 738.143,686.705 738.702,686.705 739.261,686.705 739.82,686.705 740.38,686.705 740.939,686.705 741.498,686.705 742.057,686.705 742.617,686.705 743.176,686.705 743.735,686.705 744.294,686.705 744.854,686.705 745.413,686.705 745.972,686.705 746.531,686.705 747.091,686.705 747.65,686.705 748.209,686.705 748.768,686.705 749.328,686.705 749.887,686.705 750.446,686.705 751.005,686.705 751.565,686.705 752.124,686.705 752.683,686.705 753.242,686.705 753.802,686.705 754.361,686.705 754.92,686.705 755.479,686.705 756.039,686.705 756.598,686.705 757.157,686.705 757.716,686.705 758.276,686.705 758.835,686.705 759.394,686.705 759.953,686.705 760.513,686.705 761.072,686.705 761.631,686.705 762.19,686.705 762.75,686.705 763.309,686.705 763.868,686.705 764.427,686.705 764.987,686.705 765.546,686.705 766.105,686.705 766.664,686.705 767.224,686.705 767.783,686.705 768.342,686.705 768.901,686.705 769.461,686.705 770.02,686.705 770.579,686.705 771.138,686.705 771.698,686.705 772.257,686.705 772.816,686.705 773.375,686.705 773.935,686.705 774.494,686.705 775.053,686.705 775.612,686.705 776.172,686.705 776.731,686.705 777.29,686.705 777.849,686.705 778.409,686.705 778.968,686.705 779.527,686.705 780.086,686.705 780.646,686.705 781.205,686.705 781.764,686.705 782.323,686.705 782.883,686.705 783.442,686.705 784.001,686.705 784.56,686.705 785.12,686.705 785.679,686.705 786.238,686.705 786.797,686.705 787.357,686.705 787.916,686.705 788.475,686.705 789.034,686.705 789.594,686.705 790.153,686.705 790.712,686.705 791.271,686.705 791.831,686.705 792.39,686.705 792.949,686.705 793.508,686.705 794.068,686.705 794.627,686.705 795.186,686.705 795.745,686.705 796.305,686.705 796.864,686.705 797.423,686.705 797.982,686.705 798.542,686.705 799.101,686.705 799.66,686.705 800.219,686.705 800.779,686.705 801.338,686.705 801.897,686.705 802.456,686.705 803.016,686.705 803.575,686.705 804.134,686.705 804.693,686.705 805.253,686.705 805.812,686.705 806.371,686.705 806.931,686.705 807.49,686.705 808.049,686.705 808.608,686.705 809.168,686.705 809.727,686.705 810.286,686.705 810.845,686.705 811.405,686.705 811.964,686.705 812.523,686.705 813.082,686.705 813.642,686.705 814.201,686.705 814.76,686.705 815.319,686.705 815.879,686.705 816.438,686.705 816.997,686.705 817.556,686.705 818.116,686.705 818.675,686.705 819.234,686.705 819.793,686.705 820.353,686.705 820.912,686.705 821.471,686.705 822.03,686.705 822.59,686.705 823.149,686.705 823.708,686.705 824.267,686.705 824.827,686.705 825.386,686.705 825.945,686.705 826.504,686.705 827.064,686.705 827.623,686.705 828.182,686.705 828.741,686.705 829.301,686.705 829.86,686.705 830.419,686.705 830.978,686.705 831.538,686.705 832.097,686.705 832.656,686.705 833.215,686.705 833.775,686.705 834.334,686.705 834.893,686.705 835.452,686.705 836.012,686.705 836.571,686.705 837.13,686.705 837.689,686.705 838.249,686.705 838.808,686.705 839.367,686.705 839.926,686.705 840.486,686.705 841.045,686.705 841.604,686.705 842.163,686.705 842.723,686.705 843.282,686.705 843.841,686.705 844.4,686.705 844.96,686.705 845.519,686.705 846.078,686.705 846.637,686.705 847.197,686.705 847.756,686.705 848.315,686.705 848.874,686.705 849.434,686.705 849.993,686.705 850.552,686.705 851.111,686.705 851.671,686.705 852.23,686.705 852.789,686.705 853.348,686.705 853.908,686.705 854.467,686.705 855.026,686.705 855.585,686.705 856.145,686.705 856.704,686.705 857.263,686.705 857.822,686.705 858.382,686.705 858.941,686.705 859.5,686.705 860.059,686.705 860.619,686.705 861.178,686.705 861.737,686.705 862.296,686.705 862.856,686.705 863.415,686.705 863.974,686.705 864.533,686.705 865.093,686.705 865.652,686.705 866.211,686.705 866.77,686.705 867.33,686.705 867.889,686.705 868.448,686.705 869.007,686.705 869.567,686.705 870.126,686.705 870.685,686.705 871.244,686.705 871.804,686.705 872.363,686.705 872.922,686.705 873.481,686.705 874.041,686.705 874.6,686.705 875.159,686.705 875.718,686.705 876.278,686.705 876.837,686.705 877.396,686.705 877.955,686.705 878.515,686.705 879.074,686.705 879.633,686.705 880.192,686.705 880.752,686.705 881.311,686.705 881.87,686.705 882.429,686.705 882.989,686.705 883.548,686.705 884.107,686.705 884.666,686.705 885.226,686.705 885.785,686.705 886.344,686.705 886.903,686.705 887.463,686.705 888.022,686.705 888.581,686.705 889.14,686.705 889.7,686.705 890.259,686.705 890.818,686.705 891.377,686.705 891.937,686.705 892.496,686.705 893.055,686.705 893.614,686.705 894.174,686.705 894.733,686.705 895.292,686.705 895.851,686.705 896.411,686.705 896.97,686.705 897.529,686.705 898.088,686.705 898.648,686.705 899.207,686.705 899.766,686.705 900.325,686.705 900.885,686.705 901.444,686.705 902.003,686.705 902.562,686.705 903.122,686.705 903.681,686.705 904.24,686.705 904.799,686.705 905.359,686.705 905.918,686.705 906.477,686.705 907.036,686.705 907.596,686.705 908.155,686.705 908.714,686.705 909.273,686.705 909.833,686.705 910.392,686.705 910.951,686.705 911.51,686.705 912.07,686.705 912.629,686.705 913.188,686.705 913.747,686.705 914.307,686.705 914.866,686.705 915.425,686.705 915.984,686.705 916.544,686.705 917.103,686.705 917.662,686.705 918.221,686.705 918.781,686.705 919.34,686.705 919.899,686.705 920.458,686.705 921.018,686.705 921.577,686.705 922.136,686.705 922.695,686.705 923.255,686.705 923.814,686.705 924.373,686.705 924.932,686.705 925.492,686.705 926.051,686.705 926.61,686.705 927.169,686.705 927.729,686.705 928.288,686.705 928.847,686.705 929.406,686.705 929.966,686.705 930.525,686.705 931.084,686.705 931.644,686.705 932.203,686.705 932.762,686.705 933.321,686.705 933.881,686.705 934.44,686.705 934.999,686.705 935.558,686.705 936.118,686.705 936.677,686.705 937.236,686.705 937.795,686.705 938.355,686.705 938.914,686.705 939.473,686.705 940.032,686.705 940.592,686.705 941.151,686.705 941.71,686.705 942.269,686.705 942.829,686.705 943.388,686.705 943.947,686.705 944.506,686.705 945.066,686.705 945.625,686.705 946.184,686.705 946.743,686.705 947.303,686.705 947.862,686.705 948.421,686.705 948.98,686.705 949.54,686.705 950.099,686.705 950.658,686.705 951.217,686.705 951.777,686.705 952.336,686.705 952.895,686.705 953.454,686.705 954.014,686.705 954.573,686.705 955.132,686.705 955.691,686.705 956.251,686.705 956.81,686.705 957.369,686.705 957.928,686.705 958.488,686.705 959.047,686.705 959.606,686.705 960.165,686.705 960.725,686.705 961.284,686.705 961.843,686.705 962.402,686.705 962.962,686.705 963.521,686.705 964.08,686.705 964.639,686.705 965.199,686.705 965.758,686.705 966.317,686.705 966.876,686.705 967.436,686.705 967.995,686.705 968.554,686.705 969.113,686.705 969.673,686.705 970.232,686.705 970.791,686.705 971.35,686.705 971.91,686.705 972.469,686.705 973.028,686.705 973.587,686.705 974.147,686.705 974.706,686.705 975.265,686.705 975.824,686.705 976.384,686.705 976.943,686.705 977.502,686.705 978.061,686.705 978.621,686.705 979.18,686.705 979.739,686.705 980.298,686.705 980.858,686.705 981.417,686.705 981.976,686.705 982.535,686.705 983.095,686.705 983.654,686.705 984.213,686.705 984.772,686.705 985.332,686.705 985.891,686.705 986.45,686.705 987.009,686.705 987.569,686.705 988.128,686.705 988.687,686.705 989.246,686.705 989.806,686.705 990.365,686.705 990.924,686.705 991.483,686.705 992.043,686.705 992.602,686.705 993.161,686.705 993.72,686.705 994.28,686.705 994.839,686.705 995.398,686.705 995.957,686.705 996.517,686.705 997.076,686.705 997.635,686.705 998.194,686.705 998.754,686.705 999.313,686.705 999.872,686.705 1000.43,686.705 1000.99,686.705 1001.55,686.705 1002.11,686.705 1002.67,686.705 1003.23,686.705 1003.79,686.705 1004.35,686.705 1004.91,686.705 1005.46,686.705 1006.02,686.705 1006.58,686.705 1007.14,686.705 1007.7,686.705 1008.26,686.705 1008.82,686.705 1009.38,686.705 1009.94,686.705 1010.5,686.705 1011.06,686.705 1011.62,686.705 1012.18,686.705 1012.73,686.705 1013.29,686.705 1013.85,686.705 1014.41,686.705 1014.97,686.705 1015.53,686.705 1016.09,686.705 1016.65,686.705 1017.21,686.705 1017.77,686.705 1018.33,686.705 1018.89,686.705 1019.45,686.705 1020.01,686.705 1020.56,686.705 1021.12,686.705 1021.68,686.705 1022.24,686.705 1022.8,686.705 1023.36,686.705 1023.92,686.705 1024.48,686.705 1025.04,686.705 1025.6,686.705 1026.16,686.705 1026.72,686.705 1027.28,686.705 1027.83,686.705 1028.39,686.705 1028.95,686.705 1029.51,686.705 1030.07,686.705 1030.63,686.705 1031.19,686.705 1031.75,686.705 1032.31,686.705 1032.87,686.705 1033.43,686.705 1033.99,686.705 1034.55,686.705 1035.1,686.705 1035.66,686.705 1036.22,686.705 1036.78,686.705 1037.34,686.705 1037.9,686.705 1038.46,686.705 1039.02,686.705 1039.58,686.705 1040.14,686.705 1040.7,686.705 1041.26,686.705 1041.82,686.705 1042.38,686.705 1042.93,686.705 1043.49,686.705 1044.05,686.705 1044.61,686.705 1045.17,686.705 1045.73,686.705 1046.29,686.705 1046.85,686.705 1047.41,686.705 1047.97,686.705 1048.53,686.705 1049.09,686.705 1049.65,686.705 1050.2,686.705 1050.76,686.705 1051.32,686.705 1051.88,686.705 1052.44,686.705 1053,686.705 1053.56,686.705 1054.12,686.705 1054.68,686.705 1055.24,686.705 1055.8,686.705 1056.36,686.705 1056.92,686.705 1057.48,686.705 1058.03,686.705 1058.59,686.705 1059.15,686.705 1059.71,686.705 1060.27,686.705 1060.83,686.705 1061.39,686.705 1061.95,686.705 1062.51,686.705 1063.07,686.705 1063.63,686.705 1064.19,686.705 1064.75,686.705 1065.3,686.705 1065.86,686.705 1066.42,686.705 1066.98,686.705 1067.54,686.705 1068.1,686.705 1068.66,686.705 1069.22,686.705 1069.78,686.705 1070.34,686.705 1070.9,686.705 1071.46,686.705 1072.02,686.705 1072.57,686.705 1073.13,686.705 1073.69,686.705 1074.25,686.705 1074.81,686.705 1075.37,686.705 1075.93,686.705 1076.49,686.705 1077.05,686.705 1077.61,686.705 1078.17,686.705 1078.73,686.705 1079.29,686.705 1079.85,686.705 1080.4,686.705 1080.96,686.705 1081.52,686.705 1082.08,686.705 1082.64,686.705 1083.2,686.705 1083.76,686.705 1084.32,686.705 1084.88,686.705 1085.44,686.705 1086,686.705 1086.56,686.705 1087.12,686.705 1087.67,686.705 1088.23,686.705 1088.79,686.705 1089.35,686.705 1089.91,686.705 1090.47,686.705 1091.03,686.705 1091.59,686.705 1092.15,686.705 1092.71,686.705 1093.27,686.705 1093.83,686.705 1094.39,686.705 1094.94,686.705 1095.5,686.705 1096.06,686.705 1096.62,686.705 1097.18,686.705 1097.74,686.705 1098.3,686.705 1098.86,686.705 1099.42,686.705 1099.98,686.705 1100.54,686.705 1101.1,686.705 1101.66,686.705 1102.22,686.705 1102.77,686.705 1103.33,686.705 1103.89,686.705 1104.45,686.705 1105.01,686.705 1105.57,686.705 1106.13,686.705 1106.69,686.705 1107.25,686.705 1107.81,686.705 1108.37,686.705 1108.93,686.705 1109.49,686.705 1110.04,686.705 1110.6,686.705 1111.16,686.705 1111.72,686.705 1112.28,686.705 1112.84,686.705 1113.4,686.705 1113.96,686.705 1114.52,686.705 1115.08,686.705 1115.64,686.705 1116.2,686.705 1116.76,686.705 1117.31,686.705 1117.87,686.705 1118.43,686.705 1118.99,686.705 1119.55,686.705 1120.11,686.705 1120.67,686.705 1121.23,686.705 1121.79,686.705 1122.35,686.705 1122.91,686.705 1123.47,686.705 1124.03,686.705 1124.59,686.705 1125.14,686.705 1125.7,686.705 1126.26,686.705 1126.82,686.705 1127.38,686.705 1127.94,686.705 1128.5,686.705 1129.06,686.705 1129.62,686.705 1130.18,686.705 1130.74,686.705 1131.3,686.705 1131.86,686.705 1132.41,686.705 1132.97,686.705 1133.53,686.705 1134.09,686.705 1134.65,686.705 1135.21,686.705 1135.77,686.705 1136.33,686.705 1136.89,686.705 1137.45,686.705 1138.01,686.705 1138.57,686.705 1139.13,686.705 1139.68,686.705 1140.24,686.705 1140.8,686.705 1141.36,686.705 1141.92,686.705 1142.48,686.705 1143.04,686.705 1143.6,686.705 1144.16,686.705 1144.72,686.705 1145.28,686.705 1145.84,686.705 1146.4,686.705 1146.96,686.705 1147.51,686.705 1148.07,686.705 1148.63,686.705 1149.19,686.705 1149.75,686.705 1150.31,686.705 1150.87,686.705 1151.43,686.705 1151.99,686.705 1152.55,686.705 1153.11,686.705 1153.67,686.705 1154.23,686.705 1154.78,686.705 1155.34,686.705 1155.9,686.705 1156.46,686.705 1157.02,686.705 1157.58,686.705 1158.14,686.705 1158.7,686.705 1159.26,686.705 1159.82,686.705 1160.38,686.705 1160.94,686.705 1161.5,686.705 1162.05,686.705 1162.61,686.705 1163.17,686.705 1163.73,686.705 1164.29,686.705 1164.85,686.705 1165.41,686.705 1165.97,686.705 1166.53,686.705 1167.09,686.705 1167.65,686.705 1168.21,686.705 1168.77,686.705 1169.33,686.705 1169.88,686.705 1170.44,686.705 1171,686.705 1171.56,686.705 1172.12,686.705 1172.68,686.705 1173.24,686.705 1173.8,686.705 1174.36,686.705 1174.92,686.705 1175.48,686.705 1176.04,686.705 1176.6,686.705 1177.15,686.705 1177.71,686.705 1178.27,686.705 1178.83,686.705 1179.39,686.705 1179.95,686.705 1180.51,686.705 1181.07,686.705 1181.63,686.705 1182.19,686.705 1182.75,686.705 1183.31,686.705 1183.87,686.705 1184.43,686.705 1184.98,686.705 1185.54,686.705 1186.1,686.705 1186.66,686.705 1187.22,686.705 1187.78,686.705 1188.34,686.705 1188.9,686.705 1189.46,686.705 1190.02,686.705 1190.58,686.705 1191.14,686.705 1191.7,686.705 1192.25,686.705 1192.81,686.705 1193.37,686.705 1193.93,686.705 1194.49,686.705 1195.05,686.705 1195.61,686.705 1196.17,686.705 1196.73,686.705 1197.29,686.705 1197.85,686.705 1198.41,686.705 1198.97,686.705 1199.52,686.705 1200.08,686.705 1200.64,686.705 1201.2,686.705 1201.76,686.705 1202.32,686.705 1202.88,686.705 1203.44,686.705 1204,686.705 1204.56,686.705 1205.12,686.705 1205.68,686.705 1206.24,686.705 1206.8,686.705 1207.35,686.705 1207.91,686.705 1208.47,686.705 1209.03,686.705 1209.59,686.705 1210.15,686.705 1210.71,686.705 1211.27,686.705 1211.83,686.705 1212.39,686.705 1212.95,686.705 1213.51,686.705 1214.07,686.705 1214.62,686.705 1215.18,686.705 1215.74,686.705 1216.3,686.705 1216.86,686.705 1217.42,686.705 1217.98,686.705 1218.54,686.705 1219.1,686.705 1219.66,686.705 1220.22,686.705 1220.78,686.705 1221.34,686.705 1221.89,686.705 1222.45,686.705 1223.01,686.705 1223.57,686.705 1224.13,686.705 1224.69,686.705 1225.25,686.705 1225.81,686.705 1226.37,686.705 1226.93,686.705 1227.49,686.705 1228.05,686.705 1228.61,686.705 1229.17,686.705 1229.72,686.705 1230.28,686.705 1230.84,686.705 1231.4,686.705 1231.96,686.705 1232.52,686.705 1233.08,686.705 1233.64,686.705 1234.2,686.705 1234.76,686.705 1235.32,686.705 1235.88,686.705 1236.44,686.705 1236.99,686.705 1237.55,686.705 1238.11,686.705 1238.67,686.705 1239.23,686.705 1239.79,686.705 1240.35,686.705 1240.91,686.705 1241.47,686.705 1242.03,686.705 1242.59,686.705 1243.15,686.705 1243.71,686.705 1244.26,686.705 1244.82,686.705 1245.38,686.705 1245.94,686.705 1246.5,686.705 1247.06,686.705 1247.62,686.705 1248.18,686.705 1248.74,686.705 1249.3,686.705 1249.86,686.705 1250.42,686.705 1250.98,686.705 1251.54,686.705 1252.09,686.705 1252.65,686.705 1253.21,686.705 1253.77,686.705 1254.33,686.705 1254.89,686.705 1255.45,686.705 1256.01,686.705 1256.57,686.705 1257.13,686.705 1257.69,686.705 1258.25,686.705 1258.81,686.705 1259.36,686.705 1259.92,686.705 1260.48,686.705 1261.04,686.705 1261.6,686.705 1262.16,686.705 1262.72,686.705 1263.28,686.705 1263.84,686.705 1264.4,686.705 1264.96,686.705 1265.52,686.705 1266.08,686.705 1266.63,686.705 1267.19,686.705 1267.75,686.705 1268.31,686.705 1268.87,686.705 1269.43,686.705 1269.99,686.705 1270.55,686.705 1271.11,686.705 1271.67,686.705 1272.23,686.705 1272.79,686.705 1273.35,686.705 1273.91,686.705 1274.46,686.705 1275.02,686.705 1275.58,686.705 1276.14,686.705 1276.7,686.705 1277.26,686.705 1277.82,686.705 1278.38,686.705 1278.94,686.705 1279.5,686.705 1280.06,686.705 1280.62,686.705 1281.18,686.705 1281.73,686.705 1282.29,686.705 1282.85,686.705 1283.41,686.705 1283.97,686.705 1284.53,686.705 1285.09,686.705 1285.65,686.705 1286.21,686.705 1286.77,686.705 1287.33,686.705 1287.89,686.705 1288.45,686.705 1289,686.705 1289.56,686.705 1290.12,686.705 1290.68,686.705 1291.24,686.705 1291.8,686.705 1292.36,686.705 1292.92,686.705 1293.48,686.705 1294.04,686.705 1294.6,686.705 1295.16,686.705 1295.72,686.705 1296.28,686.705 1296.83,686.705 1297.39,686.705 1297.95,686.705 1298.51,686.705 1299.07,686.705 1299.63,686.705 1300.19,686.705 1300.75,686.705 1301.31,686.705 1301.87,686.705 1302.43,686.705 1302.99,686.705 1303.55,686.705 1304.1,686.705 1304.66,686.705 1305.22,686.705 1305.78,686.705 1306.34,686.705 1306.9,686.705 1307.46,686.705 1308.02,686.705 1308.58,686.705 1309.14,686.705 1309.7,686.705 1310.26,686.705 1310.82,686.705 1311.38,686.705 1311.93,686.705 1312.49,686.705 1313.05,686.705 1313.61,686.705 1314.17,686.705 1314.73,686.705 1315.29,686.705 1315.85,686.705 1316.41,686.705 1316.97,686.705 1317.53,686.705 1318.09,686.705 1318.65,686.705 1319.2,686.705 1319.76,686.705 1320.32,686.705 1320.88,686.705 1321.44,686.705 1322,686.705 1322.56,686.705 1323.12,686.705 1323.68,686.705 1324.24,686.705 1324.8,686.705 1325.36,686.705 1325.92,686.705 1326.47,686.705 1327.03,686.705 1327.59,686.705 1328.15,686.705 1328.71,686.705 1329.27,686.705 1329.83,686.705 1330.39,686.705 1330.95,686.705 1331.51,686.705 1332.07,686.705 1332.63,686.705 1333.19,686.705 1333.75,686.705 1334.3,686.705 1334.86,686.705 1335.42,686.705 1335.98,686.705 1336.54,686.705 1337.1,686.705 1337.66,686.705 1338.22,686.705 1338.78,686.705 1339.34,686.705 1339.9,686.705 1340.46,686.705 1341.02,686.705 1341.57,686.705 1342.13,686.705 1342.69,686.705 1343.25,686.705 1343.81,686.705 1344.37,686.705 1344.93,686.705 1345.49,686.705 1346.05,686.705 1346.61,686.705 1347.17,686.705 1347.73,686.705 1348.29,686.705 1348.84,686.705 1349.4,686.705 1349.96,686.705 1350.52,686.705 1351.08,686.705 1351.64,686.705 1352.2,686.705 1352.76,686.705 1353.32,686.705 1353.88,686.705 1354.44,686.705 1355,686.705 1355.56,686.705 1356.12,686.705 1356.67,686.705 1357.23,686.705 1357.79,686.705 1358.35,686.705 1358.91,686.705 1359.47,686.705 1360.03,686.705 1360.59,686.705 1361.15,686.705 1361.71,686.705 1362.27,686.705 1362.83,686.705 1363.39,686.705 1363.94,686.705 1364.5,686.705 1365.06,686.705 1365.62,686.705 1366.18,686.705 1366.74,686.705 1367.3,686.705 1367.86,686.705 1368.42,686.705 1368.98,686.705 1369.54,686.705 1370.1,686.705 1370.66,686.705 1371.21,686.705 1371.77,686.705 1372.33,686.705 1372.89,686.705 1373.45,686.705 1374.01,686.705 1374.57,686.705 1375.13,686.705 1375.69,686.705 1376.25,686.705 1376.81,686.705 1377.37,686.705 1377.93,686.705 1378.49,686.705 1379.04,686.705 1379.6,686.705 1380.16,686.705 1380.72,686.705 1381.28,686.705 1381.84,686.705 1382.4,686.705 1382.96,686.705 1383.52,686.705 1384.08,686.705 1384.64,686.705 1385.2,686.705 1385.76,686.705 1386.31,686.705 1386.87,686.705 1387.43,686.705 1387.99,686.705 1388.55,686.705 1389.11,686.705 1389.67,686.705 1390.23,686.705 1390.79,686.705 1391.35,686.705 1391.91,686.705 1392.47,686.705 1393.03,686.705 1393.58,686.705 1394.14,686.705 1394.7,686.705 1395.26,686.705 1395.82,686.705 1396.38,686.705 1396.94,686.705 1397.5,686.705 1398.06,686.705 1398.62,686.705 1399.18,686.705 1399.74,686.705 1400.3,686.705 1400.86,686.705 1401.41,686.705 1401.97,686.705 1402.53,686.705 1403.09,686.705 1403.65,686.705 1404.21,686.705 1404.77,686.705 1405.33,686.705 1405.89,686.705 1406.45,686.705 1407.01,686.705 1407.57,686.705 1408.13,686.705 1408.68,686.705 1409.24,686.705 1409.8,686.705 1410.36,686.705 1410.92,686.705 1411.48,686.705 1412.04,686.705 1412.6,686.705 1413.16,686.705 1413.72,686.705 1414.28,686.705 1414.84,686.705 1415.4,686.705 1415.95,686.705 1416.51,686.705 1417.07,686.705 1417.63,686.705 1418.19,686.705 1418.75,686.705 1419.31,686.705 1419.87,686.705 1420.43,686.705 1420.99,686.705 1421.55,686.705 1422.11,686.705 1422.67,686.705 1423.23,686.705 1423.78,686.705 1424.34,686.705 1424.9,686.705 1425.46,686.705 1426.02,686.705 1426.58,686.705 1427.14,686.705 1427.7,686.705 1428.26,686.705 1428.82,686.705 1429.38,686.705 1429.94,686.705 1430.5,686.705 1431.05,686.705 1431.61,686.705 1432.17,686.705 1432.73,686.705 1433.29,686.705 1433.85,686.705 1434.41,686.705 1434.97,686.705 1435.53,686.705 1436.09,686.705 1436.65,686.705 1437.21,686.705 1437.77,686.705 1438.33,686.705 1438.88,686.705 1439.44,686.705 1440,686.705 1440.56,686.705 1441.12,686.705 1441.68,686.705 1442.24,686.705 1442.8,686.705 1443.36,686.705 1443.92,686.705 1444.48,686.705 1445.04,686.705 1445.6,686.705 1446.15,686.705 1446.71,686.705 1447.27,686.705 1447.83,686.705 1448.39,686.705 1448.95,686.705 1449.51,686.705 1450.07,686.705 1450.63,686.705 1451.19,686.705 1451.75,686.705 1452.31,686.705 1452.87,686.705 1453.42,686.705 1453.98,686.705 1454.54,686.705 1455.1,686.705 1455.66,686.705 1456.22,686.705 1456.78,686.705 1457.34,686.705 1457.9,686.705 1458.46,686.705 1459.02,686.705 1459.58,686.705 1460.14,686.705 1460.7,686.705 1461.25,686.705 1461.81,686.705 1462.37,686.705 1462.93,686.705 1463.49,686.705 1464.05,686.705 1464.61,686.705 1465.17,686.705 1465.73,686.705 1466.29,686.705 1466.85,686.705 1467.41,686.705 1467.97,686.705 1468.52,686.705 1469.08,686.705 1469.64,686.705 1470.2,686.705 1470.76,686.705 1471.32,686.705 1471.88,686.705 1472.44,686.705 1473,686.705 1473.56,686.705 1474.12,686.705 1474.68,686.705 1475.24,686.705 1475.79,686.705 1476.35,686.705 1476.91,686.705 1477.47,686.705 1478.03,686.705 1478.59,686.705 1479.15,686.705 1479.71,686.705 1480.27,686.705 1480.83,686.705 1481.39,686.705 1481.95,686.705 1482.51,686.705 1483.07,686.705 1483.62,686.705 1484.18,686.705 1484.74,686.705 1485.3,686.705 1485.86,686.705 1486.42,686.705 1486.98,686.705 1487.54,686.705 1488.1,686.705 1488.66,686.705 1489.22,686.705 1489.78,686.705 1490.34,686.705 1490.89,686.705 1491.45,686.705 1492.01,686.705 1492.57,686.705 1493.13,686.705 1493.69,686.705 1494.25,686.705 1494.81,686.705 1495.37,686.705 1495.93,686.705 1496.49,686.705 1497.05,686.705 1497.61,686.705 1498.16,686.705 1498.72,686.705 1499.28,686.705 1499.84,686.705 1500.4,686.705 1500.96,686.705 1501.52,686.705 1502.08,686.705 1502.64,686.705 1503.2,686.705 1503.76,686.705 1504.32,686.705 1504.88,686.705 1505.44,686.705 1505.99,686.705 1506.55,686.705 1507.11,686.705 1507.67,686.705 1508.23,686.705 1508.79,686.705 1509.35,686.705 1509.91,686.705 1510.47,686.705 1511.03,686.705 1511.59,686.705 1512.15,686.705 1512.71,686.705 1513.26,686.705 1513.82,686.705 1514.38,686.705 1514.94,686.705 1515.5,686.705 1516.06,686.705 1516.62,686.705 1517.18,686.705 1517.74,686.705 1518.3,686.705 1518.86,686.705 1519.42,686.705 1519.98,686.705 1520.53,686.705 1521.09,686.705 1521.65,686.705 1522.21,686.705 1522.77,686.705 1523.33,686.705 1523.89,686.705 1524.45,686.705 1525.01,686.705 1525.57,686.705 1526.13,686.705 1526.69,686.705 1527.25,686.705 1527.81,686.705 1528.36,686.705 1528.92,686.705 1529.48,686.705 1530.04,686.705 1530.6,686.705 1531.16,686.705 1531.72,686.705 1532.28,686.705 1532.84,686.705 1533.4,686.705 1533.96,686.705 1534.52,686.705 1535.08,686.705 1535.63,686.705 1536.19,686.705 1536.75,686.705 1537.31,686.705 1537.87,686.705 1538.43,686.705 1538.99,686.705 1539.55,686.705 1540.11,686.705 1540.67,686.705 1541.23,686.705 1541.79,686.705 1542.35,686.705 1542.9,686.705 1543.46,686.705 1544.02,686.705 1544.58,686.705 1545.14,686.705 1545.7,686.705 1546.26,686.705 1546.82,686.705 1547.38,686.705 1547.94,686.705 1548.5,686.705 1549.06,686.705 1549.62,686.705 1550.18,686.705 1550.73,686.705 1551.29,686.705 1551.85,686.705 1552.41,686.705 1552.97,686.705 1553.53,686.705 1554.09,686.705 1554.65,686.705 1555.21,686.705 1555.77,686.705 1556.33,686.705 1556.89,686.705 1557.45,686.705 1558,686.705 1558.56,686.705 1559.12,686.705 1559.68,686.705 1560.24,686.705 1560.8,686.705 1561.36,686.705 1561.92,686.705 1562.48,686.705 1563.04,686.705 1563.6,686.705 1564.16,686.705 1564.72,686.705 1565.28,686.705 1565.83,686.705 1566.39,686.705 1566.95,686.705 1567.51,686.705 1568.07,686.705 1568.63,686.705 1569.19,686.705 1569.75,686.705 1570.31,686.705 1570.87,686.705 1571.43,686.705 1571.99,686.705 1572.55,686.705 1573.1,686.705 1573.66,686.705 1574.22,686.705 1574.78,686.705 1575.34,686.705 1575.9,686.705 1576.46,686.705 1577.02,686.705 1577.58,686.705 1578.14,686.705 1578.7,686.705 1579.26,686.705 1579.82,686.705 1580.37,686.705 1580.93,686.705 1581.49,686.705 1582.05,686.705 1582.61,686.705 1583.17,686.705 1583.73,686.705 1584.29,686.705 1584.85,686.705 1585.41,686.705 1585.97,686.705 1586.53,686.705 1587.09,686.705 1587.65,686.705 1588.2,686.705 1588.76,686.705 1589.32,686.705 1589.88,686.705 1590.44,686.705 1591,686.705 1591.56,686.705 1592.12,686.705 1592.68,686.705 1593.24,686.705 1593.8,686.705 1594.36,686.705 1594.92,686.705 1595.47,686.705 1596.03,686.705 1596.59,686.705 1597.15,686.705 1597.71,686.705 1598.27,686.705 1598.83,686.705 1599.39,686.705 1599.95,686.705 1600.51,686.705 1601.07,686.705 1601.63,686.705 1602.19,686.705 1602.74,686.705 1603.3,686.705 1603.86,686.705 1604.42,686.705 1604.98,686.705 1605.54,686.705 1606.1,686.705 1606.66,686.705 1607.22,686.705 1607.78,686.705 1608.34,686.705 1608.9,686.705 1609.46,686.705 1610.02,686.705 1610.57,686.705 1611.13,686.705 1611.69,686.705 1612.25,686.705 1612.81,686.705 1613.37,686.705 1613.93,686.705 1614.49,686.705 1615.05,686.705 1615.61,686.705 1616.17,686.705 1616.73,686.705 1617.29,686.705 1617.84,686.705 1618.4,686.705 1618.96,686.705 1619.52,686.705 1620.08,686.705 1620.64,686.705 1621.2,686.705 1621.76,686.705 1622.32,686.705 1622.88,686.705 1623.44,686.705 1624,686.705 1624.56,686.705 1625.11,686.705 1625.67,686.705 1626.23,686.705 1626.79,686.705 1627.35,686.705 1627.91,686.705 1628.47,686.705 1629.03,686.705 1629.59,686.705 1630.15,686.705 1630.71,686.705 1631.27,686.705 1631.83,686.705 1632.39,686.705 1632.94,686.705 1633.5,686.705 1634.06,686.705 1634.62,686.705 1635.18,686.705 1635.74,686.705 1636.3,686.705 1636.86,686.705 1637.42,686.705 1637.98,686.705 1638.54,686.705 1639.1,686.705 1639.66,686.705 1640.21,686.705 1640.77,686.705 1641.33,686.705 1641.89,686.705 1642.45,686.705 1643.01,686.705 1643.57,686.705 1644.13,686.705 1644.69,686.705 1645.25,686.705 1645.81,686.705 1646.37,686.705 1646.93,686.705 1647.48,686.705 1648.04,686.705 1648.6,686.705 1649.16,686.705 1649.72,686.705 1650.28,686.705 1650.84,686.705 1651.4,686.705 1651.96,686.705 1652.52,686.705 1653.08,686.705 1653.64,686.705 1654.2,686.705 1654.76,686.705 1655.31,686.705 1655.87,686.705 1656.43,686.705 1656.99,686.705 1657.55,686.705 1658.11,686.705 1658.67,686.705 1659.23,686.705 1659.79,686.705 1660.35,686.705 1660.91,686.705 1661.47,686.705 1662.03,686.705 1662.58,686.705 1663.14,686.705 1663.7,686.705 1664.26,686.705 1664.82,686.705 1665.38,686.705 1665.94,686.705 1666.5,686.705 1667.06,686.705 1667.62,686.705 1668.18,686.705 1668.74,686.705 1669.3,686.705 1669.85,686.705 1670.41,686.705 1670.97,686.705 1671.53,686.705 1672.09,686.705 1672.65,686.705 1673.21,686.705 1673.77,686.705 1674.33,686.705 1674.89,686.705 1675.45,686.705 1676.01,686.705 1676.57,686.705 1677.13,686.705 1677.68,686.705 1678.24,686.705 1678.8,686.705 1679.36,686.705 1679.92,686.705 1680.48,686.705 1681.04,686.705 1681.6,686.705 1682.16,686.705 1682.72,686.705 1683.28,686.705 1683.84,686.705 1684.4,686.705 1684.95,686.705 1685.51,686.705 1686.07,686.705 1686.63,686.705 1687.19,686.705 1687.75,686.705 1688.31,686.705 1688.87,686.705 1689.43,686.705 1689.99,686.705 1690.55,686.705 1691.11,686.705 1691.67,686.705 1692.23,686.705 1692.78,686.705 1693.34,686.705 1693.9,686.705 1694.46,686.705 1695.02,686.705 1695.58,686.705 1696.14,686.705 1696.7,686.705 1697.26,686.705 1697.82,686.705 1698.38,686.705 1698.94,686.705 1699.5,686.705 1700.05,686.705 1700.61,686.705 1701.17,686.705 1701.73,686.705 1702.29,686.705 1702.85,686.705 1703.41,686.705 1703.97,686.705 1704.53,686.705 1705.09,686.705 1705.65,686.705 1706.21,686.705 1706.77,686.705 1707.32,686.705 1707.88,686.705 1708.44,686.705 1709,686.705 1709.56,686.705 1710.12,686.705 1710.68,686.705 1711.24,686.705 1711.8,686.705 1712.36,686.705 1712.92,686.705 1713.48,686.705 1714.04,686.705 1714.6,686.705 1715.15,686.705 1715.71,686.705 1716.27,686.705 1716.83,686.705 1717.39,686.705 1717.95,686.705 1718.51,686.705 1719.07,686.705 1719.63,686.705 1720.19,686.705 1720.75,686.705 1721.31,686.705 1721.87,686.705 1722.42,686.705 1722.98,686.705 1723.54,686.705 1724.1,686.705 1724.66,686.705 1725.22,686.705 1725.78,686.705 1726.34,686.705 1726.9,686.705 1727.46,686.705 1728.02,686.705 1728.58,686.705 1729.14,686.705 1729.69,686.705 1730.25,686.705 1730.81,686.705 1731.37,686.705 1731.93,686.705 1732.49,686.705 1733.05,686.705 1733.61,686.705 1734.17,686.705 1734.73,686.705 1735.29,686.705 1735.85,686.705 1736.41,686.705 1736.97,686.705 1737.52,686.705 1738.08,686.705 1738.64,686.705 1739.2,686.705 1739.76,686.705 1740.32,686.705 1740.88,686.705 1741.44,686.705 1742,686.705 1742.56,686.705 1743.12,686.705 1743.68,686.705 1744.24,686.705 1744.79,686.705 1745.35,686.705 1745.91,686.705 1746.47,686.705 1747.03,686.705 1747.59,686.705 1748.15,686.705 1748.71,686.705 1749.27,686.705 1749.83,686.705 1750.39,686.705 1750.95,686.705 1751.51,686.705 1752.06,686.705 1752.62,686.705 1753.18,686.705 1753.74,686.705 1754.3,686.705 1754.86,686.705 1755.42,686.705 1755.98,686.705 1756.54,686.705 1757.1,686.705 1757.66,686.705 1758.22,686.705 1758.78,686.705 1759.34,686.705 1759.89,686.705 1760.45,686.705 1761.01,686.705 1761.57,686.705 1762.13,686.705 1762.69,686.705 1763.25,686.705 1763.81,686.705 1764.37,686.705 1764.93,686.705 1765.49,686.705 1766.05,686.705 1766.61,686.705 1767.16,686.705 1767.72,686.705 1768.28,686.705 1768.84,686.705 1769.4,686.705 1769.96,686.705 1770.52,686.705 1771.08,686.705 1771.64,686.705 1772.2,686.705 1772.76,686.705 1773.32,686.705 1773.88,686.705 1774.43,686.705 1774.99,686.705 1775.55,686.705 1776.11,686.705 1776.67,686.705 1777.23,686.705 1777.79,686.705 1778.35,686.705 1778.91,686.705 1779.47,686.705 1780.03,686.705 1780.59,686.705 1781.15,686.705 1781.71,686.705 1782.26,686.705 1782.82,686.705 1783.38,686.705 1783.94,686.705 1784.5,686.705 1785.06,686.705 1785.62,686.705 1786.18,686.705 1786.74,686.705 1787.3,686.705 1787.86,686.705 1788.42,686.705 1788.98,686.705 1789.53,686.705 1790.09,686.705 1790.65,686.705 1791.21,686.705 1791.77,686.705 1792.33,686.705 1792.89,686.705 1793.45,686.705 1794.01,686.705 1794.57,686.705 1795.13,686.705 1795.69,686.705 1796.25,686.705 1796.8,686.705 1797.36,686.705 1797.92,686.705 1798.48,686.705 1799.04,686.705 1799.6,686.705 1800.16,686.705 1800.72,686.705 1801.28,686.705 1801.84,686.705 1802.4,686.705 1802.96,686.705 1803.52,686.705 1804.08,686.705 1804.63,686.705 1805.19,686.705 1805.75,686.705 1806.31,686.705 1806.87,686.705 1807.43,686.705 1807.99,686.705 1808.55,686.705 1809.11,686.705 1809.67,686.705 1810.23,686.705 1810.79,686.705 1811.35,686.705 1811.9,686.705 1812.46,686.705 1813.02,686.705 1813.58,686.705 1814.14,686.705 1814.7,686.705 1815.26,686.705 1815.82,686.705 1816.38,686.705 1816.94,686.705 1817.5,686.705 1818.06,686.705 1818.62,686.705 1819.18,686.705 1819.73,686.705 1820.29,686.705 1820.85,686.705 1821.41,686.705 1821.97,686.705 1822.53,686.705 1823.09,686.705 1823.65,686.705 1824.21,686.705 1824.77,686.705 1825.33,686.705 1825.89,686.705 1826.45,686.705 1827,686.705 1827.56,686.705 1828.12,686.705 1828.68,686.705 1829.24,686.705 1829.8,686.705 1830.36,686.705 1830.92,686.705 1831.48,686.705 1832.04,686.705 1832.6,686.705 1833.16,686.705 1833.72,686.705 1834.27,686.705 1834.83,686.705 1835.39,686.705 1835.95,686.705 1836.51,686.705 1837.07,686.705 1837.63,686.705 1838.19,686.705 \"/>\n<path clip-path=\"url(#clip633)\" d=\"M720.247 684.362 L720.806 684.362 L721.365 684.362 L721.924 684.362 L722.484 684.362 L723.043 684.362 L723.602 684.362 L724.161 684.362 L724.721 684.362 L725.28 684.362 L725.839 684.362 L726.398 684.362 L726.958 684.362 L727.517 684.362 L728.076 684.362 L728.635 684.362 L729.195 684.362 L729.754 684.362 L730.313 684.362 L730.872 684.362 L731.432 684.362 L731.991 684.362 L732.55 684.362 L733.109 684.362 L733.669 684.362 L734.228 684.362 L734.787 684.362 L735.346 684.362 L735.906 684.362 L736.465 684.362 L737.024 684.362 L737.583 684.362 L738.143 684.362 L738.702 684.362 L739.261 684.362 L739.82 684.362 L740.38 684.362 L740.939 684.362 L741.498 684.362 L742.057 684.362 L742.617 684.362 L743.176 684.362 L743.735 684.362 L744.294 684.362 L744.854 684.362 L745.413 684.362 L745.972 684.362 L746.531 684.362 L747.091 684.362 L747.65 684.362 L748.209 684.362 L748.768 684.362 L749.328 684.362 L749.887 684.362 L750.446 684.362 L751.005 684.362 L751.565 684.362 L752.124 684.362 L752.683 684.362 L753.242 684.362 L753.802 684.362 L754.361 684.362 L754.92 684.362 L755.479 684.362 L756.039 684.362 L756.598 684.362 L757.157 684.362 L757.716 684.362 L758.276 684.362 L758.835 684.362 L759.394 684.362 L759.953 684.362 L760.513 684.362 L761.072 684.362 L761.631 684.362 L762.19 684.362 L762.75 684.362 L763.309 684.362 L763.868 684.362 L764.427 684.362 L764.987 684.362 L765.546 684.362 L766.105 684.362 L766.664 684.362 L767.224 684.362 L767.783 684.362 L768.342 684.362 L768.901 684.362 L769.461 684.362 L770.02 684.362 L770.579 684.362 L771.138 684.362 L771.698 684.362 L772.257 684.362 L772.816 684.362 L773.375 684.362 L773.935 684.362 L774.494 684.362 L775.053 684.362 L775.612 684.362 L776.172 684.362 L776.731 684.362 L777.29 684.362 L777.849 684.362 L778.409 684.362 L778.968 684.362 L779.527 684.362 L780.086 684.362 L780.646 684.362 L781.205 684.362 L781.764 684.362 L782.323 684.362 L782.883 684.362 L783.442 684.362 L784.001 684.362 L784.56 684.362 L785.12 684.362 L785.679 684.362 L786.238 684.362 L786.797 684.362 L787.357 684.362 L787.916 684.362 L788.475 684.362 L789.034 684.362 L789.594 684.362 L790.153 684.362 L790.712 684.362 L791.271 684.362 L791.831 684.362 L792.39 684.362 L792.949 684.362 L793.508 684.362 L794.068 684.362 L794.627 684.362 L795.186 684.362 L795.745 684.362 L796.305 684.362 L796.864 684.362 L797.423 684.362 L797.982 684.362 L798.542 684.362 L799.101 684.362 L799.66 684.362 L800.219 684.362 L800.779 684.362 L801.338 684.362 L801.897 684.362 L802.456 684.362 L803.016 684.362 L803.575 684.362 L804.134 684.362 L804.693 684.362 L805.253 684.362 L805.812 684.362 L806.371 684.362 L806.931 684.362 L807.49 684.362 L808.049 684.362 L808.608 684.362 L809.168 684.362 L809.727 684.362 L810.286 684.362 L810.845 684.362 L811.405 684.362 L811.964 684.362 L812.523 684.362 L813.082 684.362 L813.642 684.362 L814.201 684.362 L814.76 684.362 L815.319 684.362 L815.879 684.362 L816.438 684.362 L816.997 684.362 L817.556 684.362 L818.116 684.362 L818.675 684.362 L819.234 684.362 L819.793 684.362 L820.353 684.362 L820.912 684.362 L821.471 684.362 L822.03 684.362 L822.59 684.362 L823.149 684.362 L823.708 684.362 L824.267 684.362 L824.827 684.362 L825.386 684.362 L825.945 684.362 L826.504 684.362 L827.064 684.362 L827.623 684.362 L828.182 684.362 L828.741 684.362 L829.301 684.362 L829.86 684.362 L830.419 684.362 L830.978 684.362 L831.538 684.362 L832.097 684.362 L832.656 684.362 L833.215 684.362 L833.775 684.362 L834.334 684.362 L834.893 684.362 L835.452 684.362 L836.012 684.362 L836.571 684.362 L837.13 684.362 L837.689 684.362 L838.249 684.362 L838.808 684.362 L839.367 684.362 L839.926 684.362 L840.486 684.362 L841.045 684.362 L841.604 684.362 L842.163 684.362 L842.723 684.362 L843.282 684.362 L843.841 684.362 L844.4 684.362 L844.96 684.362 L845.519 684.362 L846.078 684.362 L846.637 684.362 L847.197 684.362 L847.756 684.362 L848.315 684.362 L848.874 684.362 L849.434 684.362 L849.993 684.362 L850.552 684.362 L851.111 684.362 L851.671 684.362 L852.23 684.362 L852.789 684.362 L853.348 684.362 L853.908 684.362 L854.467 684.362 L855.026 684.362 L855.585 684.362 L856.145 684.362 L856.704 684.362 L857.263 684.362 L857.822 684.362 L858.382 684.362 L858.941 684.362 L859.5 684.362 L860.059 684.362 L860.619 684.362 L861.178 684.362 L861.737 684.362 L862.296 684.362 L862.856 684.362 L863.415 684.362 L863.974 684.362 L864.533 684.362 L865.093 684.362 L865.652 684.362 L866.211 684.362 L866.77 684.362 L867.33 684.362 L867.889 684.362 L868.448 684.362 L869.007 684.362 L869.567 684.362 L870.126 684.362 L870.685 684.362 L871.244 684.362 L871.804 684.362 L872.363 684.362 L872.922 684.362 L873.481 684.362 L874.041 684.362 L874.6 684.362 L875.159 684.362 L875.718 684.362 L876.278 684.362 L876.837 684.362 L877.396 684.362 L877.955 684.362 L878.515 684.362 L879.074 684.362 L879.633 684.362 L880.192 684.362 L880.752 684.362 L881.311 684.362 L881.87 684.362 L882.429 684.362 L882.989 684.362 L883.548 684.362 L884.107 684.362 L884.666 684.362 L885.226 684.362 L885.785 684.362 L886.344 684.362 L886.903 684.362 L887.463 684.362 L888.022 684.362 L888.581 684.362 L889.14 684.362 L889.7 684.362 L890.259 684.362 L890.818 684.362 L891.377 684.362 L891.937 684.362 L892.496 684.362 L893.055 684.362 L893.614 684.362 L894.174 684.362 L894.733 684.362 L895.292 684.362 L895.851 684.362 L896.411 684.362 L896.97 684.362 L897.529 684.362 L898.088 684.362 L898.648 684.362 L899.207 684.362 L899.766 684.362 L900.325 684.362 L900.885 684.362 L901.444 684.362 L902.003 684.362 L902.562 684.362 L903.122 684.362 L903.681 684.362 L904.24 684.362 L904.799 684.362 L905.359 684.362 L905.918 684.362 L906.477 684.362 L907.036 684.362 L907.596 684.362 L908.155 684.362 L908.714 684.362 L909.273 684.362 L909.833 684.362 L910.392 684.362 L910.951 684.362 L911.51 684.362 L912.07 684.362 L912.629 684.362 L913.188 684.362 L913.747 684.362 L914.307 684.362 L914.866 684.362 L915.425 684.362 L915.984 684.362 L916.544 684.362 L917.103 684.362 L917.662 684.362 L918.221 684.362 L918.781 684.362 L919.34 684.362 L919.899 684.362 L920.458 684.362 L921.018 684.362 L921.577 684.362 L922.136 684.362 L922.695 684.362 L923.255 684.362 L923.814 684.362 L924.373 684.362 L924.932 684.362 L925.492 684.362 L926.051 684.362 L926.61 684.362 L927.169 684.362 L927.729 684.362 L928.288 684.362 L928.847 684.362 L929.406 684.362 L929.966 684.362 L930.525 684.362 L931.084 684.362 L931.644 684.362 L932.203 684.362 L932.762 684.362 L933.321 684.362 L933.881 684.362 L934.44 684.362 L934.999 684.362 L935.558 684.362 L936.118 684.362 L936.677 684.362 L937.236 684.362 L937.795 684.362 L938.355 684.362 L938.914 684.362 L939.473 684.362 L940.032 684.362 L940.592 684.362 L941.151 684.362 L941.71 684.362 L942.269 684.362 L942.829 684.362 L943.388 684.362 L943.947 684.362 L944.506 684.362 L945.066 684.362 L945.625 684.362 L946.184 684.362 L946.743 684.362 L947.303 684.362 L947.862 684.362 L948.421 684.362 L948.98 684.362 L949.54 684.362 L950.099 684.362 L950.658 684.362 L951.217 684.362 L951.777 684.362 L952.336 684.362 L952.895 684.362 L953.454 684.362 L954.014 684.362 L954.573 684.362 L955.132 684.362 L955.691 684.362 L956.251 684.362 L956.81 684.362 L957.369 684.362 L957.928 684.362 L958.488 684.362 L959.047 684.362 L959.606 684.362 L960.165 684.362 L960.725 684.362 L961.284 684.362 L961.843 684.362 L962.402 684.362 L962.962 684.362 L963.521 684.362 L964.08 684.362 L964.639 684.362 L965.199 684.362 L965.758 684.362 L966.317 684.362 L966.876 684.362 L967.436 684.362 L967.995 684.362 L968.554 684.362 L969.113 684.362 L969.673 684.362 L970.232 684.362 L970.791 684.362 L971.35 684.362 L971.91 684.362 L972.469 684.362 L973.028 684.362 L973.587 684.362 L974.147 684.362 L974.706 684.362 L975.265 684.362 L975.824 684.362 L976.384 684.362 L976.943 684.362 L977.502 684.362 L978.061 684.362 L978.621 684.362 L979.18 684.362 L979.739 684.362 L980.298 684.362 L980.858 684.362 L981.417 684.362 L981.976 684.362 L982.535 684.362 L983.095 684.362 L983.654 684.362 L984.213 684.362 L984.772 684.362 L985.332 684.362 L985.891 684.362 L986.45 684.362 L987.009 684.362 L987.569 684.362 L988.128 684.362 L988.687 684.362 L989.246 684.362 L989.806 684.362 L990.365 684.362 L990.924 684.362 L991.483 684.362 L992.043 684.362 L992.602 684.362 L993.161 684.362 L993.72 684.362 L994.28 684.362 L994.839 684.362 L995.398 684.362 L995.957 684.362 L996.517 684.362 L997.076 684.362 L997.635 684.362 L998.194 684.362 L998.754 684.362 L999.313 684.362 L999.872 684.362 L1000.43 684.362 L1000.99 684.362 L1001.55 684.362 L1002.11 684.362 L1002.67 684.362 L1003.23 684.362 L1003.79 684.362 L1004.35 684.362 L1004.91 684.362 L1005.46 684.362 L1006.02 684.362 L1006.58 684.362 L1007.14 684.362 L1007.7 684.362 L1008.26 684.362 L1008.82 684.362 L1009.38 684.362 L1009.94 684.362 L1010.5 684.362 L1011.06 684.362 L1011.62 684.362 L1012.18 684.362 L1012.73 684.362 L1013.29 684.362 L1013.85 684.362 L1014.41 684.362 L1014.97 684.362 L1015.53 684.362 L1016.09 684.362 L1016.65 684.362 L1017.21 684.362 L1017.77 684.362 L1018.33 684.362 L1018.89 684.362 L1019.45 684.362 L1020.01 684.362 L1020.56 684.362 L1021.12 684.362 L1021.68 684.362 L1022.24 684.362 L1022.8 684.362 L1023.36 684.362 L1023.92 684.362 L1024.48 684.362 L1025.04 684.362 L1025.6 684.362 L1026.16 684.362 L1026.72 684.362 L1027.28 684.362 L1027.83 684.362 L1028.39 684.362 L1028.95 684.362 L1029.51 684.362 L1030.07 684.362 L1030.63 684.362 L1031.19 684.362 L1031.75 684.362 L1032.31 684.362 L1032.87 684.362 L1033.43 684.362 L1033.99 684.362 L1034.55 684.362 L1035.1 684.362 L1035.66 684.362 L1036.22 684.362 L1036.78 684.362 L1037.34 684.362 L1037.9 684.362 L1038.46 684.362 L1039.02 684.362 L1039.58 684.362 L1040.14 684.362 L1040.7 684.362 L1041.26 684.362 L1041.82 684.362 L1042.38 684.362 L1042.93 684.362 L1043.49 684.362 L1044.05 684.362 L1044.61 684.362 L1045.17 684.362 L1045.73 684.362 L1046.29 684.362 L1046.85 684.362 L1047.41 684.362 L1047.97 684.362 L1048.53 684.362 L1049.09 684.362 L1049.65 684.362 L1050.2 684.362 L1050.76 684.362 L1051.32 684.362 L1051.88 684.362 L1052.44 684.362 L1053 684.362 L1053.56 684.362 L1054.12 684.362 L1054.68 684.362 L1055.24 684.362 L1055.8 684.362 L1056.36 684.362 L1056.92 684.362 L1057.48 684.362 L1058.03 684.362 L1058.59 684.362 L1059.15 684.362 L1059.71 684.362 L1060.27 684.362 L1060.83 684.362 L1061.39 684.362 L1061.95 684.362 L1062.51 684.362 L1063.07 684.362 L1063.63 684.362 L1064.19 684.362 L1064.75 684.362 L1065.3 684.362 L1065.86 684.362 L1066.42 684.362 L1066.98 684.362 L1067.54 684.362 L1068.1 684.362 L1068.66 684.362 L1069.22 684.362 L1069.78 684.362 L1070.34 684.362 L1070.9 684.362 L1071.46 684.362 L1072.02 684.362 L1072.57 684.362 L1073.13 684.362 L1073.69 684.362 L1074.25 684.362 L1074.81 684.362 L1075.37 684.362 L1075.93 684.362 L1076.49 684.362 L1077.05 684.362 L1077.61 684.362 L1078.17 684.362 L1078.73 684.362 L1079.29 684.362 L1079.85 684.362 L1080.4 684.362 L1080.96 684.362 L1081.52 684.362 L1082.08 684.362 L1082.64 684.362 L1083.2 684.362 L1083.76 684.362 L1084.32 684.362 L1084.88 684.362 L1085.44 684.362 L1086 684.362 L1086.56 684.362 L1087.12 684.362 L1087.67 684.362 L1088.23 684.362 L1088.79 684.362 L1089.35 684.362 L1089.91 684.362 L1090.47 684.362 L1091.03 684.362 L1091.59 684.362 L1092.15 684.362 L1092.71 684.362 L1093.27 684.362 L1093.83 684.362 L1094.39 684.362 L1094.94 684.362 L1095.5 684.362 L1096.06 684.362 L1096.62 684.362 L1097.18 684.362 L1097.74 684.362 L1098.3 684.362 L1098.86 684.362 L1099.42 684.362 L1099.98 684.362 L1100.54 684.362 L1101.1 684.362 L1101.66 684.362 L1102.22 684.362 L1102.77 684.362 L1103.33 684.362 L1103.89 684.362 L1104.45 684.362 L1105.01 684.362 L1105.57 684.362 L1106.13 684.362 L1106.69 684.362 L1107.25 684.362 L1107.81 684.362 L1108.37 684.362 L1108.93 684.362 L1109.49 684.362 L1110.04 684.362 L1110.6 684.362 L1111.16 684.362 L1111.72 684.362 L1112.28 684.362 L1112.84 684.362 L1113.4 684.362 L1113.96 684.362 L1114.52 684.362 L1115.08 684.362 L1115.64 684.362 L1116.2 684.362 L1116.76 684.362 L1117.31 684.362 L1117.87 684.362 L1118.43 684.362 L1118.99 684.362 L1119.55 684.362 L1120.11 684.362 L1120.67 684.362 L1121.23 684.362 L1121.79 684.362 L1122.35 684.362 L1122.91 684.362 L1123.47 684.362 L1124.03 684.362 L1124.59 684.362 L1125.14 684.362 L1125.7 684.362 L1126.26 684.362 L1126.82 684.362 L1127.38 684.362 L1127.94 684.362 L1128.5 684.362 L1129.06 684.362 L1129.62 684.362 L1130.18 684.362 L1130.74 684.362 L1131.3 684.362 L1131.86 684.362 L1132.41 684.362 L1132.97 684.362 L1133.53 684.362 L1134.09 684.362 L1134.65 684.362 L1135.21 684.362 L1135.77 684.362 L1136.33 684.362 L1136.89 684.362 L1137.45 684.362 L1138.01 684.362 L1138.57 684.362 L1139.13 684.362 L1139.68 684.362 L1140.24 684.362 L1140.8 684.362 L1141.36 684.362 L1141.92 684.362 L1142.48 684.362 L1143.04 684.362 L1143.6 684.362 L1144.16 684.362 L1144.72 684.362 L1145.28 684.362 L1145.84 684.362 L1146.4 684.362 L1146.96 684.362 L1147.51 684.362 L1148.07 684.362 L1148.63 684.362 L1149.19 684.362 L1149.75 684.362 L1150.31 684.362 L1150.87 684.362 L1151.43 684.362 L1151.99 684.362 L1152.55 684.362 L1153.11 684.362 L1153.67 684.362 L1154.23 684.362 L1154.78 684.362 L1155.34 684.362 L1155.9 684.362 L1156.46 684.362 L1157.02 684.362 L1157.58 684.362 L1158.14 684.362 L1158.7 684.362 L1159.26 684.362 L1159.82 684.362 L1160.38 684.362 L1160.94 684.362 L1161.5 684.362 L1162.05 684.362 L1162.61 684.362 L1163.17 684.362 L1163.73 684.362 L1164.29 684.362 L1164.85 684.362 L1165.41 684.362 L1165.97 684.362 L1166.53 684.362 L1167.09 684.362 L1167.65 684.362 L1168.21 684.362 L1168.77 684.362 L1169.33 684.362 L1169.88 684.362 L1170.44 684.362 L1171 684.362 L1171.56 684.362 L1172.12 684.362 L1172.68 684.362 L1173.24 684.362 L1173.8 684.362 L1174.36 684.362 L1174.92 684.362 L1175.48 684.362 L1176.04 684.362 L1176.6 684.362 L1177.15 684.362 L1177.71 684.362 L1178.27 684.362 L1178.83 684.362 L1179.39 684.362 L1179.95 684.362 L1180.51 684.362 L1181.07 684.362 L1181.63 684.362 L1182.19 684.362 L1182.75 684.362 L1183.31 684.362 L1183.87 684.362 L1184.43 684.362 L1184.98 684.362 L1185.54 684.362 L1186.1 684.362 L1186.66 684.362 L1187.22 684.362 L1187.78 684.362 L1188.34 684.362 L1188.9 684.362 L1189.46 684.362 L1190.02 684.362 L1190.58 684.362 L1191.14 684.362 L1191.7 684.362 L1192.25 684.362 L1192.81 684.362 L1193.37 684.362 L1193.93 684.362 L1194.49 684.362 L1195.05 684.362 L1195.61 684.362 L1196.17 684.362 L1196.73 684.362 L1197.29 684.362 L1197.85 684.362 L1198.41 684.362 L1198.97 684.362 L1199.52 684.362 L1200.08 684.362 L1200.64 684.362 L1201.2 684.362 L1201.76 684.362 L1202.32 684.362 L1202.88 684.362 L1203.44 684.362 L1204 684.362 L1204.56 684.362 L1205.12 684.362 L1205.68 684.362 L1206.24 684.362 L1206.8 684.362 L1207.35 684.362 L1207.91 684.362 L1208.47 684.362 L1209.03 684.362 L1209.59 684.362 L1210.15 684.362 L1210.71 684.362 L1211.27 684.362 L1211.83 684.362 L1212.39 684.362 L1212.95 684.362 L1213.51 684.362 L1214.07 684.362 L1214.62 684.362 L1215.18 684.362 L1215.74 684.362 L1216.3 684.362 L1216.86 684.362 L1217.42 684.362 L1217.98 684.362 L1218.54 684.362 L1219.1 684.362 L1219.66 684.362 L1220.22 684.362 L1220.78 684.362 L1221.34 684.362 L1221.89 684.362 L1222.45 684.362 L1223.01 684.362 L1223.57 684.362 L1224.13 684.362 L1224.69 684.362 L1225.25 684.362 L1225.81 684.362 L1226.37 684.362 L1226.93 684.362 L1227.49 684.362 L1228.05 684.362 L1228.61 684.362 L1229.17 684.362 L1229.72 684.362 L1230.28 684.362 L1230.84 684.362 L1231.4 684.362 L1231.96 684.362 L1232.52 684.362 L1233.08 684.362 L1233.64 684.362 L1234.2 684.362 L1234.76 684.362 L1235.32 684.362 L1235.88 684.362 L1236.44 684.362 L1236.99 684.362 L1237.55 684.362 L1238.11 684.362 L1238.67 684.362 L1239.23 684.362 L1239.79 684.362 L1240.35 684.362 L1240.91 684.362 L1241.47 684.362 L1242.03 684.362 L1242.59 684.362 L1243.15 684.362 L1243.71 684.362 L1244.26 684.362 L1244.82 684.362 L1245.38 684.362 L1245.94 684.362 L1246.5 684.362 L1247.06 684.362 L1247.62 684.362 L1248.18 684.362 L1248.74 684.362 L1249.3 684.362 L1249.86 684.362 L1250.42 684.362 L1250.98 684.362 L1251.54 684.362 L1252.09 684.362 L1252.65 684.362 L1253.21 684.362 L1253.77 684.362 L1254.33 684.362 L1254.89 684.362 L1255.45 684.362 L1256.01 684.362 L1256.57 684.362 L1257.13 684.362 L1257.69 684.362 L1258.25 684.362 L1258.81 684.362 L1259.36 684.362 L1259.92 684.362 L1260.48 684.362 L1261.04 684.362 L1261.6 684.362 L1262.16 684.362 L1262.72 684.362 L1263.28 684.362 L1263.84 684.362 L1264.4 684.362 L1264.96 684.362 L1265.52 684.362 L1266.08 684.362 L1266.63 684.362 L1267.19 684.362 L1267.75 684.362 L1268.31 684.362 L1268.87 684.362 L1269.43 684.362 L1269.99 684.362 L1270.55 684.362 L1271.11 684.362 L1271.67 684.362 L1272.23 684.362 L1272.79 684.362 L1273.35 684.362 L1273.91 684.362 L1274.46 684.362 L1275.02 684.362 L1275.58 684.362 L1276.14 684.362 L1276.7 684.362 L1277.26 684.362 L1277.82 684.362 L1278.38 684.362 L1278.94 684.362 L1279.5 684.362 L1280.06 684.362 L1280.62 684.362 L1281.18 684.362 L1281.73 684.362 L1282.29 684.362 L1282.85 684.362 L1283.41 684.362 L1283.97 684.362 L1284.53 684.362 L1285.09 684.362 L1285.65 684.362 L1286.21 684.362 L1286.77 684.362 L1287.33 684.362 L1287.89 684.362 L1288.45 684.362 L1289 684.362 L1289.56 684.362 L1290.12 684.362 L1290.68 684.362 L1291.24 684.362 L1291.8 684.362 L1292.36 684.362 L1292.92 684.362 L1293.48 684.362 L1294.04 684.362 L1294.6 684.362 L1295.16 684.362 L1295.72 684.362 L1296.28 684.362 L1296.83 684.362 L1297.39 684.362 L1297.95 684.362 L1298.51 684.362 L1299.07 684.362 L1299.63 684.362 L1300.19 684.362 L1300.75 684.362 L1301.31 684.362 L1301.87 684.362 L1302.43 684.362 L1302.99 684.362 L1303.55 684.362 L1304.1 684.362 L1304.66 684.362 L1305.22 684.362 L1305.78 684.362 L1306.34 684.362 L1306.9 684.362 L1307.46 684.362 L1308.02 684.362 L1308.58 684.362 L1309.14 684.362 L1309.7 684.362 L1310.26 684.362 L1310.82 684.362 L1311.38 684.362 L1311.93 684.362 L1312.49 684.362 L1313.05 684.362 L1313.61 684.362 L1314.17 684.362 L1314.73 684.362 L1315.29 684.362 L1315.85 684.362 L1316.41 684.362 L1316.97 684.362 L1317.53 684.362 L1318.09 684.362 L1318.65 684.362 L1319.2 684.362 L1319.76 684.362 L1320.32 684.362 L1320.88 684.362 L1321.44 684.362 L1322 684.362 L1322.56 684.362 L1323.12 684.362 L1323.68 684.362 L1324.24 684.362 L1324.8 684.362 L1325.36 684.362 L1325.92 684.362 L1326.47 684.362 L1327.03 684.362 L1327.59 684.362 L1328.15 684.362 L1328.71 684.362 L1329.27 684.362 L1329.83 684.362 L1330.39 684.362 L1330.95 684.362 L1331.51 684.362 L1332.07 684.362 L1332.63 684.362 L1333.19 684.362 L1333.75 684.362 L1334.3 684.362 L1334.86 684.362 L1335.42 684.362 L1335.98 684.362 L1336.54 684.362 L1337.1 684.362 L1337.66 684.362 L1338.22 684.362 L1338.78 684.362 L1339.34 684.362 L1339.9 684.362 L1340.46 684.362 L1341.02 684.362 L1341.57 684.362 L1342.13 684.362 L1342.69 684.362 L1343.25 684.362 L1343.81 684.362 L1344.37 684.362 L1344.93 684.362 L1345.49 684.362 L1346.05 684.362 L1346.61 684.362 L1347.17 684.362 L1347.73 684.362 L1348.29 684.362 L1348.84 684.362 L1349.4 684.362 L1349.96 684.362 L1350.52 684.362 L1351.08 684.362 L1351.64 684.362 L1352.2 684.362 L1352.76 684.362 L1353.32 684.362 L1353.88 684.362 L1354.44 684.362 L1355 684.362 L1355.56 684.362 L1356.12 684.362 L1356.67 684.362 L1357.23 684.362 L1357.79 684.362 L1358.35 684.362 L1358.91 684.362 L1359.47 684.362 L1360.03 684.362 L1360.59 684.362 L1361.15 684.362 L1361.71 684.362 L1362.27 684.362 L1362.83 684.362 L1363.39 684.362 L1363.94 684.362 L1364.5 684.362 L1365.06 684.362 L1365.62 684.362 L1366.18 684.362 L1366.74 684.362 L1367.3 684.362 L1367.86 684.362 L1368.42 684.362 L1368.98 684.362 L1369.54 684.362 L1370.1 684.362 L1370.66 684.362 L1371.21 684.362 L1371.77 684.362 L1372.33 684.362 L1372.89 684.362 L1373.45 684.362 L1374.01 684.362 L1374.57 684.362 L1375.13 684.362 L1375.69 684.362 L1376.25 684.362 L1376.81 684.362 L1377.37 684.362 L1377.93 684.362 L1378.49 684.362 L1379.04 684.362 L1379.6 684.362 L1380.16 684.362 L1380.72 684.362 L1381.28 684.362 L1381.84 684.362 L1382.4 684.362 L1382.96 684.362 L1383.52 684.362 L1384.08 684.362 L1384.64 684.362 L1385.2 684.362 L1385.76 684.362 L1386.31 684.362 L1386.87 684.362 L1387.43 684.362 L1387.99 684.362 L1388.55 684.362 L1389.11 684.362 L1389.67 684.362 L1390.23 684.362 L1390.79 684.362 L1391.35 684.362 L1391.91 684.362 L1392.47 684.362 L1393.03 684.362 L1393.58 684.362 L1394.14 684.362 L1394.7 684.362 L1395.26 684.362 L1395.82 684.362 L1396.38 684.362 L1396.94 684.362 L1397.5 684.362 L1398.06 684.362 L1398.62 684.362 L1399.18 684.362 L1399.74 684.362 L1400.3 684.362 L1400.86 684.362 L1401.41 684.362 L1401.97 684.362 L1402.53 684.362 L1403.09 684.362 L1403.65 684.362 L1404.21 684.362 L1404.77 684.362 L1405.33 684.362 L1405.89 684.362 L1406.45 684.362 L1407.01 684.362 L1407.57 684.362 L1408.13 684.362 L1408.68 684.362 L1409.24 684.362 L1409.8 684.362 L1410.36 684.362 L1410.92 684.362 L1411.48 684.362 L1412.04 684.362 L1412.6 684.362 L1413.16 684.362 L1413.72 684.362 L1414.28 684.362 L1414.84 684.362 L1415.4 684.362 L1415.95 684.362 L1416.51 684.362 L1417.07 684.362 L1417.63 684.362 L1418.19 684.362 L1418.75 684.362 L1419.31 684.362 L1419.87 684.362 L1420.43 684.362 L1420.99 684.362 L1421.55 684.362 L1422.11 684.362 L1422.67 684.362 L1423.23 684.362 L1423.78 684.362 L1424.34 684.362 L1424.9 684.362 L1425.46 684.362 L1426.02 684.362 L1426.58 684.362 L1427.14 684.362 L1427.7 684.362 L1428.26 684.362 L1428.82 684.362 L1429.38 684.362 L1429.94 684.362 L1430.5 684.362 L1431.05 684.362 L1431.61 684.362 L1432.17 684.362 L1432.73 684.362 L1433.29 684.362 L1433.85 684.362 L1434.41 684.362 L1434.97 684.362 L1435.53 684.362 L1436.09 684.362 L1436.65 684.362 L1437.21 684.362 L1437.77 684.362 L1438.33 684.362 L1438.88 684.362 L1439.44 684.362 L1440 684.362 L1440.56 684.362 L1441.12 684.362 L1441.68 684.362 L1442.24 684.362 L1442.8 684.362 L1443.36 684.362 L1443.92 684.362 L1444.48 684.362 L1445.04 684.362 L1445.6 684.362 L1446.15 684.362 L1446.71 684.362 L1447.27 684.362 L1447.83 684.362 L1448.39 684.362 L1448.95 684.362 L1449.51 684.362 L1450.07 684.362 L1450.63 684.362 L1451.19 684.362 L1451.75 684.362 L1452.31 684.362 L1452.87 684.362 L1453.42 684.362 L1453.98 684.362 L1454.54 684.362 L1455.1 684.362 L1455.66 684.362 L1456.22 684.362 L1456.78 684.362 L1457.34 684.362 L1457.9 684.362 L1458.46 684.362 L1459.02 684.362 L1459.58 684.362 L1460.14 684.362 L1460.7 684.362 L1461.25 684.362 L1461.81 684.362 L1462.37 684.362 L1462.93 684.362 L1463.49 684.362 L1464.05 684.362 L1464.61 684.362 L1465.17 684.362 L1465.73 684.362 L1466.29 684.362 L1466.85 684.362 L1467.41 684.362 L1467.97 684.362 L1468.52 684.362 L1469.08 684.362 L1469.64 684.362 L1470.2 684.362 L1470.76 684.362 L1471.32 684.362 L1471.88 684.362 L1472.44 684.362 L1473 684.362 L1473.56 684.362 L1474.12 684.362 L1474.68 684.362 L1475.24 684.362 L1475.79 684.362 L1476.35 684.362 L1476.91 684.362 L1477.47 684.362 L1478.03 684.362 L1478.59 684.362 L1479.15 684.362 L1479.71 684.362 L1480.27 684.362 L1480.83 684.362 L1481.39 684.362 L1481.95 684.362 L1482.51 684.362 L1483.07 684.362 L1483.62 684.362 L1484.18 684.362 L1484.74 684.362 L1485.3 684.362 L1485.86 684.362 L1486.42 684.362 L1486.98 684.362 L1487.54 684.362 L1488.1 684.362 L1488.66 684.362 L1489.22 684.362 L1489.78 684.362 L1490.34 684.362 L1490.89 684.362 L1491.45 684.362 L1492.01 684.362 L1492.57 684.362 L1493.13 684.362 L1493.69 684.362 L1494.25 684.362 L1494.81 684.362 L1495.37 684.362 L1495.93 684.362 L1496.49 684.362 L1497.05 684.362 L1497.61 684.362 L1498.16 684.362 L1498.72 684.362 L1499.28 684.362 L1499.84 684.362 L1500.4 684.362 L1500.96 684.362 L1501.52 684.362 L1502.08 684.362 L1502.64 684.362 L1503.2 684.362 L1503.76 684.362 L1504.32 684.362 L1504.88 684.362 L1505.44 684.362 L1505.99 684.362 L1506.55 684.362 L1507.11 684.362 L1507.67 684.362 L1508.23 684.362 L1508.79 684.362 L1509.35 684.362 L1509.91 684.362 L1510.47 684.362 L1511.03 684.362 L1511.59 684.362 L1512.15 684.362 L1512.71 684.362 L1513.26 684.362 L1513.82 684.362 L1514.38 684.362 L1514.94 684.362 L1515.5 684.362 L1516.06 684.362 L1516.62 684.362 L1517.18 684.362 L1517.74 684.362 L1518.3 684.362 L1518.86 684.362 L1519.42 684.362 L1519.98 684.362 L1520.53 684.362 L1521.09 684.362 L1521.65 684.362 L1522.21 684.362 L1522.77 684.362 L1523.33 684.362 L1523.89 684.362 L1524.45 684.362 L1525.01 684.362 L1525.57 684.362 L1526.13 684.362 L1526.69 684.362 L1527.25 684.362 L1527.81 684.362 L1528.36 684.362 L1528.92 684.362 L1529.48 684.362 L1530.04 684.362 L1530.6 684.362 L1531.16 684.362 L1531.72 684.362 L1532.28 684.362 L1532.84 684.362 L1533.4 684.362 L1533.96 684.362 L1534.52 684.362 L1535.08 684.362 L1535.63 684.362 L1536.19 684.362 L1536.75 684.362 L1537.31 684.362 L1537.87 684.362 L1538.43 684.362 L1538.99 684.362 L1539.55 684.362 L1540.11 684.362 L1540.67 684.362 L1541.23 684.362 L1541.79 684.362 L1542.35 684.362 L1542.9 684.362 L1543.46 684.362 L1544.02 684.362 L1544.58 684.362 L1545.14 684.362 L1545.7 684.362 L1546.26 684.362 L1546.82 684.362 L1547.38 684.362 L1547.94 684.362 L1548.5 684.362 L1549.06 684.362 L1549.62 684.362 L1550.18 684.362 L1550.73 684.362 L1551.29 684.362 L1551.85 684.362 L1552.41 684.362 L1552.97 684.362 L1553.53 684.362 L1554.09 684.362 L1554.65 684.362 L1555.21 684.362 L1555.77 684.362 L1556.33 684.362 L1556.89 684.362 L1557.45 684.362 L1558 684.362 L1558.56 684.362 L1559.12 684.362 L1559.68 684.362 L1560.24 684.362 L1560.8 684.362 L1561.36 684.362 L1561.92 684.362 L1562.48 684.362 L1563.04 684.362 L1563.6 684.362 L1564.16 684.362 L1564.72 684.362 L1565.28 684.362 L1565.83 684.362 L1566.39 684.362 L1566.95 684.362 L1567.51 684.362 L1568.07 684.362 L1568.63 684.362 L1569.19 684.362 L1569.75 684.362 L1570.31 684.362 L1570.87 684.362 L1571.43 684.362 L1571.99 684.362 L1572.55 684.362 L1573.1 684.362 L1573.66 684.362 L1574.22 684.362 L1574.78 684.362 L1575.34 684.362 L1575.9 684.362 L1576.46 684.362 L1577.02 684.362 L1577.58 684.362 L1578.14 684.362 L1578.7 684.362 L1579.26 684.362 L1579.82 684.362 L1580.37 684.362 L1580.93 684.362 L1581.49 684.362 L1582.05 684.362 L1582.61 684.362 L1583.17 684.362 L1583.73 684.362 L1584.29 684.362 L1584.85 684.362 L1585.41 684.362 L1585.97 684.362 L1586.53 684.362 L1587.09 684.362 L1587.65 684.362 L1588.2 684.362 L1588.76 684.362 L1589.32 684.362 L1589.88 684.362 L1590.44 684.362 L1591 684.362 L1591.56 684.362 L1592.12 684.362 L1592.68 684.362 L1593.24 684.362 L1593.8 684.362 L1594.36 684.362 L1594.92 684.362 L1595.47 684.362 L1596.03 684.362 L1596.59 684.362 L1597.15 684.362 L1597.71 684.362 L1598.27 684.362 L1598.83 684.362 L1599.39 684.362 L1599.95 684.362 L1600.51 684.362 L1601.07 684.362 L1601.63 684.362 L1602.19 684.362 L1602.74 684.362 L1603.3 684.362 L1603.86 684.362 L1604.42 684.362 L1604.98 684.362 L1605.54 684.362 L1606.1 684.362 L1606.66 684.362 L1607.22 684.362 L1607.78 684.362 L1608.34 684.362 L1608.9 684.362 L1609.46 684.362 L1610.02 684.362 L1610.57 684.362 L1611.13 684.362 L1611.69 684.362 L1612.25 684.362 L1612.81 684.362 L1613.37 684.362 L1613.93 684.362 L1614.49 684.362 L1615.05 684.362 L1615.61 684.362 L1616.17 684.362 L1616.73 684.362 L1617.29 684.362 L1617.84 684.362 L1618.4 684.362 L1618.96 684.362 L1619.52 684.362 L1620.08 684.362 L1620.64 684.362 L1621.2 684.362 L1621.76 684.362 L1622.32 684.362 L1622.88 684.362 L1623.44 684.362 L1624 684.362 L1624.56 684.362 L1625.11 684.362 L1625.67 684.362 L1626.23 684.362 L1626.79 684.362 L1627.35 684.362 L1627.91 684.362 L1628.47 684.362 L1629.03 684.362 L1629.59 684.362 L1630.15 684.362 L1630.71 684.362 L1631.27 684.362 L1631.83 684.362 L1632.39 684.362 L1632.94 684.362 L1633.5 684.362 L1634.06 684.362 L1634.62 684.362 L1635.18 684.362 L1635.74 684.362 L1636.3 684.362 L1636.86 684.362 L1637.42 684.362 L1637.98 684.362 L1638.54 684.362 L1639.1 684.362 L1639.66 684.362 L1640.21 684.362 L1640.77 684.362 L1641.33 684.362 L1641.89 684.362 L1642.45 684.362 L1643.01 684.362 L1643.57 684.362 L1644.13 684.362 L1644.69 684.362 L1645.25 684.362 L1645.81 684.362 L1646.37 684.362 L1646.93 684.362 L1647.48 684.362 L1648.04 684.362 L1648.6 684.362 L1649.16 684.362 L1649.72 684.362 L1650.28 684.362 L1650.84 684.362 L1651.4 684.362 L1651.96 684.362 L1652.52 684.362 L1653.08 684.362 L1653.64 684.362 L1654.2 684.362 L1654.76 684.362 L1655.31 684.362 L1655.87 684.362 L1656.43 684.362 L1656.99 684.362 L1657.55 684.362 L1658.11 684.362 L1658.67 684.362 L1659.23 684.362 L1659.79 684.362 L1660.35 684.362 L1660.91 684.362 L1661.47 684.362 L1662.03 684.362 L1662.58 684.362 L1663.14 684.362 L1663.7 684.362 L1664.26 684.362 L1664.82 684.362 L1665.38 684.362 L1665.94 684.362 L1666.5 684.362 L1667.06 684.362 L1667.62 684.362 L1668.18 684.362 L1668.74 684.362 L1669.3 684.362 L1669.85 684.362 L1670.41 684.362 L1670.97 684.362 L1671.53 684.362 L1672.09 684.362 L1672.65 684.362 L1673.21 684.362 L1673.77 684.362 L1674.33 684.362 L1674.89 684.362 L1675.45 684.362 L1676.01 684.362 L1676.57 684.362 L1677.13 684.362 L1677.68 684.362 L1678.24 684.362 L1678.8 684.362 L1679.36 684.362 L1679.92 684.362 L1680.48 684.362 L1681.04 684.362 L1681.6 684.362 L1682.16 684.362 L1682.72 684.362 L1683.28 684.362 L1683.84 684.362 L1684.4 684.362 L1684.95 684.362 L1685.51 684.362 L1686.07 684.362 L1686.63 684.362 L1687.19 684.362 L1687.75 684.362 L1688.31 684.362 L1688.87 684.362 L1689.43 684.362 L1689.99 684.362 L1690.55 684.362 L1691.11 684.362 L1691.67 684.362 L1692.23 684.362 L1692.78 684.362 L1693.34 684.362 L1693.9 684.362 L1694.46 684.362 L1695.02 684.362 L1695.58 684.362 L1696.14 684.362 L1696.7 684.362 L1697.26 684.362 L1697.82 684.362 L1698.38 684.362 L1698.94 684.362 L1699.5 684.362 L1700.05 684.362 L1700.61 684.362 L1701.17 684.362 L1701.73 684.362 L1702.29 684.362 L1702.85 684.362 L1703.41 684.362 L1703.97 684.362 L1704.53 684.362 L1705.09 684.362 L1705.65 684.362 L1706.21 684.362 L1706.77 684.362 L1707.32 684.362 L1707.88 684.362 L1708.44 684.362 L1709 684.362 L1709.56 684.362 L1710.12 684.362 L1710.68 684.362 L1711.24 684.362 L1711.8 684.362 L1712.36 684.362 L1712.92 684.362 L1713.48 684.362 L1714.04 684.362 L1714.6 684.362 L1715.15 684.362 L1715.71 684.362 L1716.27 684.362 L1716.83 684.362 L1717.39 684.362 L1717.95 684.362 L1718.51 684.362 L1719.07 684.362 L1719.63 684.362 L1720.19 684.362 L1720.75 684.362 L1721.31 684.362 L1721.87 684.362 L1722.42 684.362 L1722.98 684.362 L1723.54 684.362 L1724.1 684.362 L1724.66 684.362 L1725.22 684.362 L1725.78 684.362 L1726.34 684.362 L1726.9 684.362 L1727.46 684.362 L1728.02 684.362 L1728.58 684.362 L1729.14 684.362 L1729.69 684.362 L1730.25 684.362 L1730.81 684.362 L1731.37 684.362 L1731.93 684.362 L1732.49 684.362 L1733.05 684.362 L1733.61 684.362 L1734.17 684.362 L1734.73 684.362 L1735.29 684.362 L1735.85 684.362 L1736.41 684.362 L1736.97 684.362 L1737.52 684.362 L1738.08 684.362 L1738.64 684.362 L1739.2 684.362 L1739.76 684.362 L1740.32 684.362 L1740.88 684.362 L1741.44 684.362 L1742 684.362 L1742.56 684.362 L1743.12 684.362 L1743.68 684.362 L1744.24 684.362 L1744.79 684.362 L1745.35 684.362 L1745.91 684.362 L1746.47 684.362 L1747.03 684.362 L1747.59 684.362 L1748.15 684.362 L1748.71 684.362 L1749.27 684.362 L1749.83 684.362 L1750.39 684.362 L1750.95 684.362 L1751.51 684.362 L1752.06 684.362 L1752.62 684.362 L1753.18 684.362 L1753.74 684.362 L1754.3 684.362 L1754.86 684.362 L1755.42 684.362 L1755.98 684.362 L1756.54 684.362 L1757.1 684.362 L1757.66 684.362 L1758.22 684.362 L1758.78 684.362 L1759.34 684.362 L1759.89 684.362 L1760.45 684.362 L1761.01 684.362 L1761.57 684.362 L1762.13 684.362 L1762.69 684.362 L1763.25 684.362 L1763.81 684.362 L1764.37 684.362 L1764.93 684.362 L1765.49 684.362 L1766.05 684.362 L1766.61 684.362 L1767.16 684.362 L1767.72 684.362 L1768.28 684.362 L1768.84 684.362 L1769.4 684.362 L1769.96 684.362 L1770.52 684.362 L1771.08 684.362 L1771.64 684.362 L1772.2 684.362 L1772.76 684.362 L1773.32 684.362 L1773.88 684.362 L1774.43 684.362 L1774.99 684.362 L1775.55 684.362 L1776.11 684.362 L1776.67 684.362 L1777.23 684.362 L1777.79 684.362 L1778.35 684.362 L1778.91 684.362 L1779.47 684.362 L1780.03 684.362 L1780.59 684.362 L1781.15 684.362 L1781.71 684.362 L1782.26 684.362 L1782.82 684.362 L1783.38 684.362 L1783.94 684.362 L1784.5 684.362 L1785.06 684.362 L1785.62 684.362 L1786.18 684.362 L1786.74 684.362 L1787.3 684.362 L1787.86 684.362 L1788.42 684.362 L1788.98 684.362 L1789.53 684.362 L1790.09 684.362 L1790.65 684.362 L1791.21 684.362 L1791.77 684.362 L1792.33 684.362 L1792.89 684.362 L1793.45 684.362 L1794.01 684.362 L1794.57 684.362 L1795.13 684.362 L1795.69 684.362 L1796.25 684.362 L1796.8 684.362 L1797.36 684.362 L1797.92 684.362 L1798.48 684.362 L1799.04 684.362 L1799.6 684.362 L1800.16 684.362 L1800.72 684.362 L1801.28 684.362 L1801.84 684.362 L1802.4 684.362 L1802.96 684.362 L1803.52 684.362 L1804.08 684.362 L1804.63 684.362 L1805.19 684.362 L1805.75 684.362 L1806.31 684.362 L1806.87 684.362 L1807.43 684.362 L1807.99 684.362 L1808.55 684.362 L1809.11 684.362 L1809.67 684.362 L1810.23 684.362 L1810.79 684.362 L1811.35 684.362 L1811.9 684.362 L1812.46 684.362 L1813.02 684.362 L1813.58 684.362 L1814.14 684.362 L1814.7 684.362 L1815.26 684.362 L1815.82 684.362 L1816.38 684.362 L1816.94 684.362 L1817.5 684.362 L1818.06 684.362 L1818.62 684.362 L1819.18 684.362 L1819.73 684.362 L1820.29 684.362 L1820.85 684.362 L1821.41 684.362 L1821.97 684.362 L1822.53 684.362 L1823.09 684.362 L1823.65 684.362 L1824.21 684.362 L1824.77 684.362 L1825.33 684.362 L1825.89 684.362 L1826.45 684.362 L1827 684.362 L1827.56 684.362 L1828.12 684.362 L1828.68 684.362 L1829.24 684.362 L1829.8 684.362 L1830.36 684.362 L1830.92 684.362 L1831.48 684.362 L1832.04 684.362 L1832.6 684.362 L1833.16 684.362 L1833.72 684.362 L1834.27 684.362 L1834.83 684.362 L1835.39 684.362 L1835.95 684.362 L1836.51 684.362 L1837.07 684.362 L1837.63 684.362 L1838.19 684.362 L1838.19 682.514 L1837.63 682.514 L1837.07 682.514 L1836.51 682.514 L1835.95 682.514 L1835.39 682.514 L1834.83 682.514 L1834.27 682.514 L1833.72 682.514 L1833.16 682.514 L1832.6 682.514 L1832.04 682.514 L1831.48 682.514 L1830.92 682.514 L1830.36 682.514 L1829.8 682.514 L1829.24 682.514 L1828.68 682.514 L1828.12 682.514 L1827.56 682.514 L1827 682.514 L1826.45 682.514 L1825.89 682.514 L1825.33 682.514 L1824.77 682.514 L1824.21 682.514 L1823.65 682.514 L1823.09 682.514 L1822.53 682.514 L1821.97 682.514 L1821.41 682.514 L1820.85 682.514 L1820.29 682.514 L1819.73 682.514 L1819.18 682.514 L1818.62 682.514 L1818.06 682.514 L1817.5 682.514 L1816.94 682.514 L1816.38 682.514 L1815.82 682.514 L1815.26 682.514 L1814.7 682.514 L1814.14 682.514 L1813.58 682.514 L1813.02 682.514 L1812.46 682.514 L1811.9 682.514 L1811.35 682.514 L1810.79 682.514 L1810.23 682.514 L1809.67 682.514 L1809.11 682.514 L1808.55 682.514 L1807.99 682.514 L1807.43 682.514 L1806.87 682.514 L1806.31 682.514 L1805.75 682.514 L1805.19 682.514 L1804.63 682.514 L1804.08 682.514 L1803.52 682.514 L1802.96 682.514 L1802.4 682.514 L1801.84 682.514 L1801.28 682.514 L1800.72 682.514 L1800.16 682.514 L1799.6 682.514 L1799.04 682.514 L1798.48 682.514 L1797.92 682.514 L1797.36 682.514 L1796.8 682.514 L1796.25 682.514 L1795.69 682.514 L1795.13 682.514 L1794.57 682.514 L1794.01 682.514 L1793.45 682.514 L1792.89 682.514 L1792.33 682.514 L1791.77 682.514 L1791.21 682.514 L1790.65 682.514 L1790.09 682.514 L1789.53 682.514 L1788.98 682.514 L1788.42 682.514 L1787.86 682.514 L1787.3 682.514 L1786.74 682.514 L1786.18 682.514 L1785.62 682.514 L1785.06 682.514 L1784.5 682.514 L1783.94 682.514 L1783.38 682.514 L1782.82 682.514 L1782.26 682.514 L1781.71 682.514 L1781.15 682.514 L1780.59 682.514 L1780.03 682.514 L1779.47 682.514 L1778.91 682.514 L1778.35 682.514 L1777.79 682.514 L1777.23 682.514 L1776.67 682.514 L1776.11 682.514 L1775.55 682.514 L1774.99 682.514 L1774.43 682.514 L1773.88 682.514 L1773.32 682.514 L1772.76 682.514 L1772.2 682.514 L1771.64 682.514 L1771.08 682.514 L1770.52 682.514 L1769.96 682.514 L1769.4 682.514 L1768.84 682.514 L1768.28 682.514 L1767.72 682.514 L1767.16 682.514 L1766.61 682.514 L1766.05 682.514 L1765.49 682.514 L1764.93 682.514 L1764.37 682.514 L1763.81 682.514 L1763.25 682.514 L1762.69 682.514 L1762.13 682.514 L1761.57 682.514 L1761.01 682.514 L1760.45 682.514 L1759.89 682.514 L1759.34 682.514 L1758.78 682.514 L1758.22 682.514 L1757.66 682.514 L1757.1 682.514 L1756.54 682.514 L1755.98 682.514 L1755.42 682.514 L1754.86 682.514 L1754.3 682.514 L1753.74 682.514 L1753.18 682.514 L1752.62 682.514 L1752.06 682.514 L1751.51 682.514 L1750.95 682.514 L1750.39 682.514 L1749.83 682.514 L1749.27 682.514 L1748.71 682.514 L1748.15 682.514 L1747.59 682.514 L1747.03 682.514 L1746.47 682.514 L1745.91 682.514 L1745.35 682.514 L1744.79 682.514 L1744.24 682.514 L1743.68 682.514 L1743.12 682.514 L1742.56 682.514 L1742 682.514 L1741.44 682.514 L1740.88 682.514 L1740.32 682.514 L1739.76 682.514 L1739.2 682.514 L1738.64 682.514 L1738.08 682.514 L1737.52 682.514 L1736.97 682.514 L1736.41 682.514 L1735.85 682.514 L1735.29 682.514 L1734.73 682.514 L1734.17 682.514 L1733.61 682.514 L1733.05 682.514 L1732.49 682.514 L1731.93 682.514 L1731.37 682.514 L1730.81 682.514 L1730.25 682.514 L1729.69 682.514 L1729.14 682.514 L1728.58 682.514 L1728.02 682.514 L1727.46 682.514 L1726.9 682.514 L1726.34 682.514 L1725.78 682.514 L1725.22 682.514 L1724.66 682.514 L1724.1 682.514 L1723.54 682.514 L1722.98 682.514 L1722.42 682.514 L1721.87 682.514 L1721.31 682.514 L1720.75 682.514 L1720.19 682.514 L1719.63 682.514 L1719.07 682.514 L1718.51 682.514 L1717.95 682.514 L1717.39 682.514 L1716.83 682.514 L1716.27 682.514 L1715.71 682.514 L1715.15 682.514 L1714.6 682.514 L1714.04 682.514 L1713.48 682.514 L1712.92 682.514 L1712.36 682.514 L1711.8 682.514 L1711.24 682.514 L1710.68 682.514 L1710.12 682.514 L1709.56 682.514 L1709 682.514 L1708.44 682.514 L1707.88 682.514 L1707.32 682.514 L1706.77 682.514 L1706.21 682.514 L1705.65 682.514 L1705.09 682.514 L1704.53 682.514 L1703.97 682.514 L1703.41 682.514 L1702.85 682.514 L1702.29 682.514 L1701.73 682.514 L1701.17 682.514 L1700.61 682.514 L1700.05 682.514 L1699.5 682.514 L1698.94 682.514 L1698.38 682.514 L1697.82 682.514 L1697.26 682.514 L1696.7 682.514 L1696.14 682.514 L1695.58 682.514 L1695.02 682.514 L1694.46 682.514 L1693.9 682.514 L1693.34 682.514 L1692.78 682.514 L1692.23 682.514 L1691.67 682.514 L1691.11 682.514 L1690.55 682.514 L1689.99 682.514 L1689.43 682.514 L1688.87 682.514 L1688.31 682.514 L1687.75 682.514 L1687.19 682.514 L1686.63 682.514 L1686.07 682.514 L1685.51 682.514 L1684.95 682.514 L1684.4 682.514 L1683.84 682.514 L1683.28 682.514 L1682.72 682.514 L1682.16 682.514 L1681.6 682.514 L1681.04 682.514 L1680.48 682.514 L1679.92 682.514 L1679.36 682.514 L1678.8 682.514 L1678.24 682.514 L1677.68 682.514 L1677.13 682.514 L1676.57 682.514 L1676.01 682.514 L1675.45 682.514 L1674.89 682.514 L1674.33 682.514 L1673.77 682.514 L1673.21 682.514 L1672.65 682.514 L1672.09 682.514 L1671.53 682.514 L1670.97 682.514 L1670.41 682.514 L1669.85 682.514 L1669.3 682.514 L1668.74 682.514 L1668.18 682.514 L1667.62 682.514 L1667.06 682.514 L1666.5 682.514 L1665.94 682.514 L1665.38 682.514 L1664.82 682.514 L1664.26 682.514 L1663.7 682.514 L1663.14 682.514 L1662.58 682.514 L1662.03 682.514 L1661.47 682.514 L1660.91 682.514 L1660.35 682.514 L1659.79 682.514 L1659.23 682.514 L1658.67 682.514 L1658.11 682.514 L1657.55 682.514 L1656.99 682.514 L1656.43 682.514 L1655.87 682.514 L1655.31 682.514 L1654.76 682.514 L1654.2 682.514 L1653.64 682.514 L1653.08 682.514 L1652.52 682.514 L1651.96 682.514 L1651.4 682.514 L1650.84 682.514 L1650.28 682.514 L1649.72 682.514 L1649.16 682.514 L1648.6 682.514 L1648.04 682.514 L1647.48 682.514 L1646.93 682.514 L1646.37 682.514 L1645.81 682.514 L1645.25 682.514 L1644.69 682.514 L1644.13 682.514 L1643.57 682.514 L1643.01 682.514 L1642.45 682.514 L1641.89 682.514 L1641.33 682.514 L1640.77 682.514 L1640.21 682.514 L1639.66 682.514 L1639.1 682.514 L1638.54 682.514 L1637.98 682.514 L1637.42 682.514 L1636.86 682.514 L1636.3 682.514 L1635.74 682.514 L1635.18 682.514 L1634.62 682.514 L1634.06 682.514 L1633.5 682.514 L1632.94 682.514 L1632.39 682.514 L1631.83 682.514 L1631.27 682.514 L1630.71 682.514 L1630.15 682.514 L1629.59 682.514 L1629.03 682.514 L1628.47 682.514 L1627.91 682.514 L1627.35 682.514 L1626.79 682.514 L1626.23 682.514 L1625.67 682.514 L1625.11 682.514 L1624.56 682.514 L1624 682.514 L1623.44 682.514 L1622.88 682.514 L1622.32 682.514 L1621.76 682.514 L1621.2 682.514 L1620.64 682.514 L1620.08 682.514 L1619.52 682.514 L1618.96 682.514 L1618.4 682.514 L1617.84 682.514 L1617.29 682.514 L1616.73 682.514 L1616.17 682.514 L1615.61 682.514 L1615.05 682.514 L1614.49 682.514 L1613.93 682.514 L1613.37 682.514 L1612.81 682.514 L1612.25 682.514 L1611.69 682.514 L1611.13 682.514 L1610.57 682.514 L1610.02 682.514 L1609.46 682.514 L1608.9 682.514 L1608.34 682.514 L1607.78 682.514 L1607.22 682.514 L1606.66 682.514 L1606.1 682.514 L1605.54 682.514 L1604.98 682.514 L1604.42 682.514 L1603.86 682.514 L1603.3 682.514 L1602.74 682.514 L1602.19 682.514 L1601.63 682.514 L1601.07 682.514 L1600.51 682.514 L1599.95 682.514 L1599.39 682.514 L1598.83 682.514 L1598.27 682.514 L1597.71 682.514 L1597.15 682.514 L1596.59 682.514 L1596.03 682.514 L1595.47 682.514 L1594.92 682.514 L1594.36 682.514 L1593.8 682.514 L1593.24 682.514 L1592.68 682.514 L1592.12 682.514 L1591.56 682.514 L1591 682.514 L1590.44 682.514 L1589.88 682.514 L1589.32 682.514 L1588.76 682.514 L1588.2 682.514 L1587.65 682.514 L1587.09 682.514 L1586.53 682.514 L1585.97 682.514 L1585.41 682.514 L1584.85 682.514 L1584.29 682.514 L1583.73 682.514 L1583.17 682.514 L1582.61 682.514 L1582.05 682.514 L1581.49 682.514 L1580.93 682.514 L1580.37 682.514 L1579.82 682.514 L1579.26 682.514 L1578.7 682.514 L1578.14 682.514 L1577.58 682.514 L1577.02 682.514 L1576.46 682.514 L1575.9 682.514 L1575.34 682.514 L1574.78 682.514 L1574.22 682.514 L1573.66 682.514 L1573.1 682.514 L1572.55 682.514 L1571.99 682.514 L1571.43 682.514 L1570.87 682.514 L1570.31 682.514 L1569.75 682.514 L1569.19 682.514 L1568.63 682.514 L1568.07 682.514 L1567.51 682.514 L1566.95 682.514 L1566.39 682.514 L1565.83 682.514 L1565.28 682.514 L1564.72 682.514 L1564.16 682.514 L1563.6 682.514 L1563.04 682.514 L1562.48 682.514 L1561.92 682.514 L1561.36 682.514 L1560.8 682.514 L1560.24 682.514 L1559.68 682.514 L1559.12 682.514 L1558.56 682.514 L1558 682.514 L1557.45 682.514 L1556.89 682.514 L1556.33 682.514 L1555.77 682.514 L1555.21 682.514 L1554.65 682.514 L1554.09 682.514 L1553.53 682.514 L1552.97 682.514 L1552.41 682.514 L1551.85 682.514 L1551.29 682.514 L1550.73 682.514 L1550.18 682.514 L1549.62 682.514 L1549.06 682.514 L1548.5 682.514 L1547.94 682.514 L1547.38 682.514 L1546.82 682.514 L1546.26 682.514 L1545.7 682.514 L1545.14 682.514 L1544.58 682.514 L1544.02 682.514 L1543.46 682.514 L1542.9 682.514 L1542.35 682.514 L1541.79 682.514 L1541.23 682.514 L1540.67 682.514 L1540.11 682.514 L1539.55 682.514 L1538.99 682.514 L1538.43 682.514 L1537.87 682.514 L1537.31 682.514 L1536.75 682.514 L1536.19 682.514 L1535.63 682.514 L1535.08 682.514 L1534.52 682.514 L1533.96 682.514 L1533.4 682.514 L1532.84 682.514 L1532.28 682.514 L1531.72 682.514 L1531.16 682.514 L1530.6 682.514 L1530.04 682.514 L1529.48 682.514 L1528.92 682.514 L1528.36 682.514 L1527.81 682.514 L1527.25 682.514 L1526.69 682.514 L1526.13 682.514 L1525.57 682.514 L1525.01 682.514 L1524.45 682.514 L1523.89 682.514 L1523.33 682.514 L1522.77 682.514 L1522.21 682.514 L1521.65 682.514 L1521.09 682.514 L1520.53 682.514 L1519.98 682.514 L1519.42 682.514 L1518.86 682.514 L1518.3 682.514 L1517.74 682.514 L1517.18 682.514 L1516.62 682.514 L1516.06 682.514 L1515.5 682.514 L1514.94 682.514 L1514.38 682.514 L1513.82 682.514 L1513.26 682.514 L1512.71 682.514 L1512.15 682.514 L1511.59 682.514 L1511.03 682.514 L1510.47 682.514 L1509.91 682.514 L1509.35 682.514 L1508.79 682.514 L1508.23 682.514 L1507.67 682.514 L1507.11 682.514 L1506.55 682.514 L1505.99 682.514 L1505.44 682.514 L1504.88 682.514 L1504.32 682.514 L1503.76 682.514 L1503.2 682.514 L1502.64 682.514 L1502.08 682.514 L1501.52 682.514 L1500.96 682.514 L1500.4 682.514 L1499.84 682.514 L1499.28 682.514 L1498.72 682.514 L1498.16 682.514 L1497.61 682.514 L1497.05 682.514 L1496.49 682.514 L1495.93 682.514 L1495.37 682.514 L1494.81 682.514 L1494.25 682.514 L1493.69 682.514 L1493.13 682.514 L1492.57 682.514 L1492.01 682.514 L1491.45 682.514 L1490.89 682.514 L1490.34 682.514 L1489.78 682.514 L1489.22 682.514 L1488.66 682.514 L1488.1 682.514 L1487.54 682.514 L1486.98 682.514 L1486.42 682.514 L1485.86 682.514 L1485.3 682.514 L1484.74 682.514 L1484.18 682.514 L1483.62 682.514 L1483.07 682.514 L1482.51 682.514 L1481.95 682.514 L1481.39 682.514 L1480.83 682.514 L1480.27 682.514 L1479.71 682.514 L1479.15 682.514 L1478.59 682.514 L1478.03 682.514 L1477.47 682.514 L1476.91 682.514 L1476.35 682.514 L1475.79 682.514 L1475.24 682.514 L1474.68 682.514 L1474.12 682.514 L1473.56 682.514 L1473 682.514 L1472.44 682.514 L1471.88 682.514 L1471.32 682.514 L1470.76 682.514 L1470.2 682.514 L1469.64 682.514 L1469.08 682.514 L1468.52 682.514 L1467.97 682.514 L1467.41 682.514 L1466.85 682.514 L1466.29 682.514 L1465.73 682.514 L1465.17 682.514 L1464.61 682.514 L1464.05 682.514 L1463.49 682.514 L1462.93 682.514 L1462.37 682.514 L1461.81 682.514 L1461.25 682.514 L1460.7 682.514 L1460.14 682.514 L1459.58 682.514 L1459.02 682.514 L1458.46 682.514 L1457.9 682.514 L1457.34 682.514 L1456.78 682.514 L1456.22 682.514 L1455.66 682.514 L1455.1 682.514 L1454.54 682.514 L1453.98 682.514 L1453.42 682.514 L1452.87 682.514 L1452.31 682.514 L1451.75 682.514 L1451.19 682.514 L1450.63 682.514 L1450.07 682.514 L1449.51 682.514 L1448.95 682.514 L1448.39 682.514 L1447.83 682.514 L1447.27 682.514 L1446.71 682.514 L1446.15 682.514 L1445.6 682.514 L1445.04 682.514 L1444.48 682.514 L1443.92 682.514 L1443.36 682.514 L1442.8 682.514 L1442.24 682.514 L1441.68 682.514 L1441.12 682.514 L1440.56 682.514 L1440 682.514 L1439.44 682.514 L1438.88 682.514 L1438.33 682.514 L1437.77 682.514 L1437.21 682.514 L1436.65 682.514 L1436.09 682.514 L1435.53 682.514 L1434.97 682.514 L1434.41 682.514 L1433.85 682.514 L1433.29 682.514 L1432.73 682.514 L1432.17 682.514 L1431.61 682.514 L1431.05 682.514 L1430.5 682.514 L1429.94 682.514 L1429.38 682.514 L1428.82 682.514 L1428.26 682.514 L1427.7 682.514 L1427.14 682.514 L1426.58 682.514 L1426.02 682.514 L1425.46 682.514 L1424.9 682.514 L1424.34 682.514 L1423.78 682.514 L1423.23 682.514 L1422.67 682.514 L1422.11 682.514 L1421.55 682.514 L1420.99 682.514 L1420.43 682.514 L1419.87 682.514 L1419.31 682.514 L1418.75 682.514 L1418.19 682.514 L1417.63 682.514 L1417.07 682.514 L1416.51 682.514 L1415.95 682.514 L1415.4 682.514 L1414.84 682.514 L1414.28 682.514 L1413.72 682.514 L1413.16 682.514 L1412.6 682.514 L1412.04 682.514 L1411.48 682.514 L1410.92 682.514 L1410.36 682.514 L1409.8 682.514 L1409.24 682.514 L1408.68 682.514 L1408.13 682.514 L1407.57 682.514 L1407.01 682.514 L1406.45 682.514 L1405.89 682.514 L1405.33 682.514 L1404.77 682.514 L1404.21 682.514 L1403.65 682.514 L1403.09 682.514 L1402.53 682.514 L1401.97 682.514 L1401.41 682.514 L1400.86 682.514 L1400.3 682.514 L1399.74 682.514 L1399.18 682.514 L1398.62 682.514 L1398.06 682.514 L1397.5 682.514 L1396.94 682.514 L1396.38 682.514 L1395.82 682.514 L1395.26 682.514 L1394.7 682.514 L1394.14 682.514 L1393.58 682.514 L1393.03 682.514 L1392.47 682.514 L1391.91 682.514 L1391.35 682.514 L1390.79 682.514 L1390.23 682.514 L1389.67 682.514 L1389.11 682.514 L1388.55 682.514 L1387.99 682.514 L1387.43 682.514 L1386.87 682.514 L1386.31 682.514 L1385.76 682.514 L1385.2 682.514 L1384.64 682.514 L1384.08 682.514 L1383.52 682.514 L1382.96 682.514 L1382.4 682.514 L1381.84 682.514 L1381.28 682.514 L1380.72 682.514 L1380.16 682.514 L1379.6 682.514 L1379.04 682.514 L1378.49 682.514 L1377.93 682.514 L1377.37 682.514 L1376.81 682.514 L1376.25 682.514 L1375.69 682.514 L1375.13 682.514 L1374.57 682.514 L1374.01 682.514 L1373.45 682.514 L1372.89 682.514 L1372.33 682.514 L1371.77 682.514 L1371.21 682.514 L1370.66 682.514 L1370.1 682.514 L1369.54 682.514 L1368.98 682.514 L1368.42 682.514 L1367.86 682.514 L1367.3 682.514 L1366.74 682.514 L1366.18 682.514 L1365.62 682.514 L1365.06 682.514 L1364.5 682.514 L1363.94 682.514 L1363.39 682.514 L1362.83 682.514 L1362.27 682.514 L1361.71 682.514 L1361.15 682.514 L1360.59 682.514 L1360.03 682.514 L1359.47 682.514 L1358.91 682.514 L1358.35 682.514 L1357.79 682.514 L1357.23 682.514 L1356.67 682.514 L1356.12 682.514 L1355.56 682.514 L1355 682.514 L1354.44 682.514 L1353.88 682.514 L1353.32 682.514 L1352.76 682.514 L1352.2 682.514 L1351.64 682.514 L1351.08 682.514 L1350.52 682.514 L1349.96 682.514 L1349.4 682.514 L1348.84 682.514 L1348.29 682.514 L1347.73 682.514 L1347.17 682.514 L1346.61 682.514 L1346.05 682.514 L1345.49 682.514 L1344.93 682.514 L1344.37 682.514 L1343.81 682.514 L1343.25 682.514 L1342.69 682.514 L1342.13 682.514 L1341.57 682.514 L1341.02 682.514 L1340.46 682.514 L1339.9 682.514 L1339.34 682.514 L1338.78 682.514 L1338.22 682.514 L1337.66 682.514 L1337.1 682.514 L1336.54 682.514 L1335.98 682.514 L1335.42 682.514 L1334.86 682.514 L1334.3 682.514 L1333.75 682.514 L1333.19 682.514 L1332.63 682.514 L1332.07 682.514 L1331.51 682.514 L1330.95 682.514 L1330.39 682.514 L1329.83 682.514 L1329.27 682.514 L1328.71 682.514 L1328.15 682.514 L1327.59 682.514 L1327.03 682.514 L1326.47 682.514 L1325.92 682.514 L1325.36 682.514 L1324.8 682.514 L1324.24 682.514 L1323.68 682.514 L1323.12 682.514 L1322.56 682.514 L1322 682.514 L1321.44 682.514 L1320.88 682.514 L1320.32 682.514 L1319.76 682.514 L1319.2 682.514 L1318.65 682.514 L1318.09 682.514 L1317.53 682.514 L1316.97 682.514 L1316.41 682.514 L1315.85 682.514 L1315.29 682.514 L1314.73 682.514 L1314.17 682.514 L1313.61 682.514 L1313.05 682.514 L1312.49 682.514 L1311.93 682.514 L1311.38 682.514 L1310.82 682.514 L1310.26 682.514 L1309.7 682.514 L1309.14 682.514 L1308.58 682.514 L1308.02 682.514 L1307.46 682.514 L1306.9 682.514 L1306.34 682.514 L1305.78 682.514 L1305.22 682.514 L1304.66 682.514 L1304.1 682.514 L1303.55 682.514 L1302.99 682.514 L1302.43 682.514 L1301.87 682.514 L1301.31 682.514 L1300.75 682.514 L1300.19 682.514 L1299.63 682.514 L1299.07 682.514 L1298.51 682.514 L1297.95 682.514 L1297.39 682.514 L1296.83 682.514 L1296.28 682.514 L1295.72 682.514 L1295.16 682.514 L1294.6 682.514 L1294.04 682.514 L1293.48 682.514 L1292.92 682.514 L1292.36 682.514 L1291.8 682.514 L1291.24 682.514 L1290.68 682.514 L1290.12 682.514 L1289.56 682.514 L1289 682.514 L1288.45 682.514 L1287.89 682.514 L1287.33 682.514 L1286.77 682.514 L1286.21 682.514 L1285.65 682.514 L1285.09 682.514 L1284.53 682.514 L1283.97 682.514 L1283.41 682.514 L1282.85 682.514 L1282.29 682.514 L1281.73 682.514 L1281.18 682.514 L1280.62 682.514 L1280.06 682.514 L1279.5 682.514 L1278.94 682.514 L1278.38 682.514 L1277.82 682.514 L1277.26 682.514 L1276.7 682.514 L1276.14 682.514 L1275.58 682.514 L1275.02 682.514 L1274.46 682.514 L1273.91 682.514 L1273.35 682.514 L1272.79 682.514 L1272.23 682.514 L1271.67 682.514 L1271.11 682.514 L1270.55 682.514 L1269.99 682.514 L1269.43 682.514 L1268.87 682.514 L1268.31 682.514 L1267.75 682.514 L1267.19 682.514 L1266.63 682.514 L1266.08 682.514 L1265.52 682.514 L1264.96 682.514 L1264.4 682.514 L1263.84 682.514 L1263.28 682.514 L1262.72 682.514 L1262.16 682.514 L1261.6 682.514 L1261.04 682.514 L1260.48 682.514 L1259.92 682.514 L1259.36 682.514 L1258.81 682.514 L1258.25 682.514 L1257.69 682.514 L1257.13 682.514 L1256.57 682.514 L1256.01 682.514 L1255.45 682.514 L1254.89 682.514 L1254.33 682.514 L1253.77 682.514 L1253.21 682.514 L1252.65 682.514 L1252.09 682.514 L1251.54 682.514 L1250.98 682.514 L1250.42 682.514 L1249.86 682.514 L1249.3 682.514 L1248.74 682.514 L1248.18 682.514 L1247.62 682.514 L1247.06 682.514 L1246.5 682.514 L1245.94 682.514 L1245.38 682.514 L1244.82 682.514 L1244.26 682.514 L1243.71 682.514 L1243.15 682.514 L1242.59 682.514 L1242.03 682.514 L1241.47 682.514 L1240.91 682.514 L1240.35 682.514 L1239.79 682.514 L1239.23 682.514 L1238.67 682.514 L1238.11 682.514 L1237.55 682.514 L1236.99 682.514 L1236.44 682.514 L1235.88 682.514 L1235.32 682.514 L1234.76 682.514 L1234.2 682.514 L1233.64 682.514 L1233.08 682.514 L1232.52 682.514 L1231.96 682.514 L1231.4 682.514 L1230.84 682.514 L1230.28 682.514 L1229.72 682.514 L1229.17 682.514 L1228.61 682.514 L1228.05 682.514 L1227.49 682.514 L1226.93 682.514 L1226.37 682.514 L1225.81 682.514 L1225.25 682.514 L1224.69 682.514 L1224.13 682.514 L1223.57 682.514 L1223.01 682.514 L1222.45 682.514 L1221.89 682.514 L1221.34 682.514 L1220.78 682.514 L1220.22 682.514 L1219.66 682.514 L1219.1 682.514 L1218.54 682.514 L1217.98 682.514 L1217.42 682.514 L1216.86 682.514 L1216.3 682.514 L1215.74 682.514 L1215.18 682.514 L1214.62 682.514 L1214.07 682.514 L1213.51 682.514 L1212.95 682.514 L1212.39 682.514 L1211.83 682.514 L1211.27 682.514 L1210.71 682.514 L1210.15 682.514 L1209.59 682.514 L1209.03 682.514 L1208.47 682.514 L1207.91 682.514 L1207.35 682.514 L1206.8 682.514 L1206.24 682.514 L1205.68 682.514 L1205.12 682.514 L1204.56 682.514 L1204 682.514 L1203.44 682.514 L1202.88 682.514 L1202.32 682.514 L1201.76 682.514 L1201.2 682.514 L1200.64 682.514 L1200.08 682.514 L1199.52 682.514 L1198.97 682.514 L1198.41 682.514 L1197.85 682.514 L1197.29 682.514 L1196.73 682.514 L1196.17 682.514 L1195.61 682.514 L1195.05 682.514 L1194.49 682.514 L1193.93 682.514 L1193.37 682.514 L1192.81 682.514 L1192.25 682.514 L1191.7 682.514 L1191.14 682.514 L1190.58 682.514 L1190.02 682.514 L1189.46 682.514 L1188.9 682.514 L1188.34 682.514 L1187.78 682.514 L1187.22 682.514 L1186.66 682.514 L1186.1 682.514 L1185.54 682.514 L1184.98 682.514 L1184.43 682.514 L1183.87 682.514 L1183.31 682.514 L1182.75 682.514 L1182.19 682.514 L1181.63 682.514 L1181.07 682.514 L1180.51 682.514 L1179.95 682.514 L1179.39 682.514 L1178.83 682.514 L1178.27 682.514 L1177.71 682.514 L1177.15 682.514 L1176.6 682.514 L1176.04 682.514 L1175.48 682.514 L1174.92 682.514 L1174.36 682.514 L1173.8 682.514 L1173.24 682.514 L1172.68 682.514 L1172.12 682.514 L1171.56 682.514 L1171 682.514 L1170.44 682.514 L1169.88 682.514 L1169.33 682.514 L1168.77 682.514 L1168.21 682.514 L1167.65 682.514 L1167.09 682.514 L1166.53 682.514 L1165.97 682.514 L1165.41 682.514 L1164.85 682.514 L1164.29 682.514 L1163.73 682.514 L1163.17 682.514 L1162.61 682.514 L1162.05 682.514 L1161.5 682.514 L1160.94 682.514 L1160.38 682.514 L1159.82 682.514 L1159.26 682.514 L1158.7 682.514 L1158.14 682.514 L1157.58 682.514 L1157.02 682.514 L1156.46 682.514 L1155.9 682.514 L1155.34 682.514 L1154.78 682.514 L1154.23 682.514 L1153.67 682.514 L1153.11 682.514 L1152.55 682.514 L1151.99 682.514 L1151.43 682.514 L1150.87 682.514 L1150.31 682.514 L1149.75 682.514 L1149.19 682.514 L1148.63 682.514 L1148.07 682.514 L1147.51 682.514 L1146.96 682.514 L1146.4 682.514 L1145.84 682.514 L1145.28 682.514 L1144.72 682.514 L1144.16 682.514 L1143.6 682.514 L1143.04 682.514 L1142.48 682.514 L1141.92 682.514 L1141.36 682.514 L1140.8 682.514 L1140.24 682.514 L1139.68 682.514 L1139.13 682.514 L1138.57 682.514 L1138.01 682.514 L1137.45 682.514 L1136.89 682.514 L1136.33 682.514 L1135.77 682.514 L1135.21 682.514 L1134.65 682.514 L1134.09 682.514 L1133.53 682.514 L1132.97 682.514 L1132.41 682.514 L1131.86 682.514 L1131.3 682.514 L1130.74 682.514 L1130.18 682.514 L1129.62 682.514 L1129.06 682.514 L1128.5 682.514 L1127.94 682.514 L1127.38 682.514 L1126.82 682.514 L1126.26 682.514 L1125.7 682.514 L1125.14 682.514 L1124.59 682.514 L1124.03 682.514 L1123.47 682.514 L1122.91 682.514 L1122.35 682.514 L1121.79 682.514 L1121.23 682.514 L1120.67 682.514 L1120.11 682.514 L1119.55 682.514 L1118.99 682.514 L1118.43 682.514 L1117.87 682.514 L1117.31 682.514 L1116.76 682.514 L1116.2 682.514 L1115.64 682.514 L1115.08 682.514 L1114.52 682.514 L1113.96 682.514 L1113.4 682.514 L1112.84 682.514 L1112.28 682.514 L1111.72 682.514 L1111.16 682.514 L1110.6 682.514 L1110.04 682.514 L1109.49 682.514 L1108.93 682.514 L1108.37 682.514 L1107.81 682.514 L1107.25 682.514 L1106.69 682.514 L1106.13 682.514 L1105.57 682.514 L1105.01 682.514 L1104.45 682.514 L1103.89 682.514 L1103.33 682.514 L1102.77 682.514 L1102.22 682.514 L1101.66 682.514 L1101.1 682.514 L1100.54 682.514 L1099.98 682.514 L1099.42 682.514 L1098.86 682.514 L1098.3 682.514 L1097.74 682.514 L1097.18 682.514 L1096.62 682.514 L1096.06 682.514 L1095.5 682.514 L1094.94 682.514 L1094.39 682.514 L1093.83 682.514 L1093.27 682.514 L1092.71 682.514 L1092.15 682.514 L1091.59 682.514 L1091.03 682.514 L1090.47 682.514 L1089.91 682.514 L1089.35 682.514 L1088.79 682.514 L1088.23 682.514 L1087.67 682.514 L1087.12 682.514 L1086.56 682.514 L1086 682.514 L1085.44 682.514 L1084.88 682.514 L1084.32 682.514 L1083.76 682.514 L1083.2 682.514 L1082.64 682.514 L1082.08 682.514 L1081.52 682.514 L1080.96 682.514 L1080.4 682.514 L1079.85 682.514 L1079.29 682.514 L1078.73 682.514 L1078.17 682.514 L1077.61 682.514 L1077.05 682.514 L1076.49 682.514 L1075.93 682.514 L1075.37 682.514 L1074.81 682.514 L1074.25 682.514 L1073.69 682.514 L1073.13 682.514 L1072.57 682.514 L1072.02 682.514 L1071.46 682.514 L1070.9 682.514 L1070.34 682.514 L1069.78 682.514 L1069.22 682.514 L1068.66 682.514 L1068.1 682.514 L1067.54 682.514 L1066.98 682.514 L1066.42 682.514 L1065.86 682.514 L1065.3 682.514 L1064.75 682.514 L1064.19 682.514 L1063.63 682.514 L1063.07 682.514 L1062.51 682.514 L1061.95 682.514 L1061.39 682.514 L1060.83 682.514 L1060.27 682.514 L1059.71 682.514 L1059.15 682.514 L1058.59 682.514 L1058.03 682.514 L1057.48 682.514 L1056.92 682.514 L1056.36 682.514 L1055.8 682.514 L1055.24 682.514 L1054.68 682.514 L1054.12 682.514 L1053.56 682.514 L1053 682.514 L1052.44 682.514 L1051.88 682.514 L1051.32 682.514 L1050.76 682.514 L1050.2 682.514 L1049.65 682.514 L1049.09 682.514 L1048.53 682.514 L1047.97 682.514 L1047.41 682.514 L1046.85 682.514 L1046.29 682.514 L1045.73 682.514 L1045.17 682.514 L1044.61 682.514 L1044.05 682.514 L1043.49 682.514 L1042.93 682.514 L1042.38 682.514 L1041.82 682.514 L1041.26 682.514 L1040.7 682.514 L1040.14 682.514 L1039.58 682.514 L1039.02 682.514 L1038.46 682.514 L1037.9 682.514 L1037.34 682.514 L1036.78 682.514 L1036.22 682.514 L1035.66 682.514 L1035.1 682.514 L1034.55 682.514 L1033.99 682.514 L1033.43 682.514 L1032.87 682.514 L1032.31 682.514 L1031.75 682.514 L1031.19 682.514 L1030.63 682.514 L1030.07 682.514 L1029.51 682.514 L1028.95 682.514 L1028.39 682.514 L1027.83 682.514 L1027.28 682.514 L1026.72 682.514 L1026.16 682.514 L1025.6 682.514 L1025.04 682.514 L1024.48 682.514 L1023.92 682.514 L1023.36 682.514 L1022.8 682.514 L1022.24 682.514 L1021.68 682.514 L1021.12 682.514 L1020.56 682.514 L1020.01 682.514 L1019.45 682.514 L1018.89 682.514 L1018.33 682.514 L1017.77 682.514 L1017.21 682.514 L1016.65 682.514 L1016.09 682.514 L1015.53 682.514 L1014.97 682.514 L1014.41 682.514 L1013.85 682.514 L1013.29 682.514 L1012.73 682.514 L1012.18 682.514 L1011.62 682.514 L1011.06 682.514 L1010.5 682.514 L1009.94 682.514 L1009.38 682.514 L1008.82 682.514 L1008.26 682.514 L1007.7 682.514 L1007.14 682.514 L1006.58 682.514 L1006.02 682.514 L1005.46 682.514 L1004.91 682.514 L1004.35 682.514 L1003.79 682.514 L1003.23 682.514 L1002.67 682.514 L1002.11 682.514 L1001.55 682.514 L1000.99 682.514 L1000.43 682.514 L999.872 682.514 L999.313 682.514 L998.754 682.514 L998.194 682.514 L997.635 682.514 L997.076 682.514 L996.517 682.514 L995.957 682.514 L995.398 682.514 L994.839 682.514 L994.28 682.514 L993.72 682.514 L993.161 682.514 L992.602 682.514 L992.043 682.514 L991.483 682.514 L990.924 682.514 L990.365 682.514 L989.806 682.514 L989.246 682.514 L988.687 682.514 L988.128 682.514 L987.569 682.514 L987.009 682.514 L986.45 682.514 L985.891 682.514 L985.332 682.514 L984.772 682.514 L984.213 682.514 L983.654 682.514 L983.095 682.514 L982.535 682.514 L981.976 682.514 L981.417 682.514 L980.858 682.514 L980.298 682.514 L979.739 682.514 L979.18 682.514 L978.621 682.514 L978.061 682.514 L977.502 682.514 L976.943 682.514 L976.384 682.514 L975.824 682.514 L975.265 682.514 L974.706 682.514 L974.147 682.514 L973.587 682.514 L973.028 682.514 L972.469 682.514 L971.91 682.514 L971.35 682.514 L970.791 682.514 L970.232 682.514 L969.673 682.514 L969.113 682.514 L968.554 682.514 L967.995 682.514 L967.436 682.514 L966.876 682.514 L966.317 682.514 L965.758 682.514 L965.199 682.514 L964.639 682.514 L964.08 682.514 L963.521 682.514 L962.962 682.514 L962.402 682.514 L961.843 682.514 L961.284 682.514 L960.725 682.514 L960.165 682.514 L959.606 682.514 L959.047 682.514 L958.488 682.514 L957.928 682.514 L957.369 682.514 L956.81 682.514 L956.251 682.514 L955.691 682.514 L955.132 682.514 L954.573 682.514 L954.014 682.514 L953.454 682.514 L952.895 682.514 L952.336 682.514 L951.777 682.514 L951.217 682.514 L950.658 682.514 L950.099 682.514 L949.54 682.514 L948.98 682.514 L948.421 682.514 L947.862 682.514 L947.303 682.514 L946.743 682.514 L946.184 682.514 L945.625 682.514 L945.066 682.514 L944.506 682.514 L943.947 682.514 L943.388 682.514 L942.829 682.514 L942.269 682.514 L941.71 682.514 L941.151 682.514 L940.592 682.514 L940.032 682.514 L939.473 682.514 L938.914 682.514 L938.355 682.514 L937.795 682.514 L937.236 682.514 L936.677 682.514 L936.118 682.514 L935.558 682.514 L934.999 682.514 L934.44 682.514 L933.881 682.514 L933.321 682.514 L932.762 682.514 L932.203 682.514 L931.644 682.514 L931.084 682.514 L930.525 682.514 L929.966 682.514 L929.406 682.514 L928.847 682.514 L928.288 682.514 L927.729 682.514 L927.169 682.514 L926.61 682.514 L926.051 682.514 L925.492 682.514 L924.932 682.514 L924.373 682.514 L923.814 682.514 L923.255 682.514 L922.695 682.514 L922.136 682.514 L921.577 682.514 L921.018 682.514 L920.458 682.514 L919.899 682.514 L919.34 682.514 L918.781 682.514 L918.221 682.514 L917.662 682.514 L917.103 682.514 L916.544 682.514 L915.984 682.514 L915.425 682.514 L914.866 682.514 L914.307 682.514 L913.747 682.514 L913.188 682.514 L912.629 682.514 L912.07 682.514 L911.51 682.514 L910.951 682.514 L910.392 682.514 L909.833 682.514 L909.273 682.514 L908.714 682.514 L908.155 682.514 L907.596 682.514 L907.036 682.514 L906.477 682.514 L905.918 682.514 L905.359 682.514 L904.799 682.514 L904.24 682.514 L903.681 682.514 L903.122 682.514 L902.562 682.514 L902.003 682.514 L901.444 682.514 L900.885 682.514 L900.325 682.514 L899.766 682.514 L899.207 682.514 L898.648 682.514 L898.088 682.514 L897.529 682.514 L896.97 682.514 L896.411 682.514 L895.851 682.514 L895.292 682.514 L894.733 682.514 L894.174 682.514 L893.614 682.514 L893.055 682.514 L892.496 682.514 L891.937 682.514 L891.377 682.514 L890.818 682.514 L890.259 682.514 L889.7 682.514 L889.14 682.514 L888.581 682.514 L888.022 682.514 L887.463 682.514 L886.903 682.514 L886.344 682.514 L885.785 682.514 L885.226 682.514 L884.666 682.514 L884.107 682.514 L883.548 682.514 L882.989 682.514 L882.429 682.514 L881.87 682.514 L881.311 682.514 L880.752 682.514 L880.192 682.514 L879.633 682.514 L879.074 682.514 L878.515 682.514 L877.955 682.514 L877.396 682.514 L876.837 682.514 L876.278 682.514 L875.718 682.514 L875.159 682.514 L874.6 682.514 L874.041 682.514 L873.481 682.514 L872.922 682.514 L872.363 682.514 L871.804 682.514 L871.244 682.514 L870.685 682.514 L870.126 682.514 L869.567 682.514 L869.007 682.514 L868.448 682.514 L867.889 682.514 L867.33 682.514 L866.77 682.514 L866.211 682.514 L865.652 682.514 L865.093 682.514 L864.533 682.514 L863.974 682.514 L863.415 682.514 L862.856 682.514 L862.296 682.514 L861.737 682.514 L861.178 682.514 L860.619 682.514 L860.059 682.514 L859.5 682.514 L858.941 682.514 L858.382 682.514 L857.822 682.514 L857.263 682.514 L856.704 682.514 L856.145 682.514 L855.585 682.514 L855.026 682.514 L854.467 682.514 L853.908 682.514 L853.348 682.514 L852.789 682.514 L852.23 682.514 L851.671 682.514 L851.111 682.514 L850.552 682.514 L849.993 682.514 L849.434 682.514 L848.874 682.514 L848.315 682.514 L847.756 682.514 L847.197 682.514 L846.637 682.514 L846.078 682.514 L845.519 682.514 L844.96 682.514 L844.4 682.514 L843.841 682.514 L843.282 682.514 L842.723 682.514 L842.163 682.514 L841.604 682.514 L841.045 682.514 L840.486 682.514 L839.926 682.514 L839.367 682.514 L838.808 682.514 L838.249 682.514 L837.689 682.514 L837.13 682.514 L836.571 682.514 L836.012 682.514 L835.452 682.514 L834.893 682.514 L834.334 682.514 L833.775 682.514 L833.215 682.514 L832.656 682.514 L832.097 682.514 L831.538 682.514 L830.978 682.514 L830.419 682.514 L829.86 682.514 L829.301 682.514 L828.741 682.514 L828.182 682.514 L827.623 682.514 L827.064 682.514 L826.504 682.514 L825.945 682.514 L825.386 682.514 L824.827 682.514 L824.267 682.514 L823.708 682.514 L823.149 682.514 L822.59 682.514 L822.03 682.514 L821.471 682.514 L820.912 682.514 L820.353 682.514 L819.793 682.514 L819.234 682.514 L818.675 682.514 L818.116 682.514 L817.556 682.514 L816.997 682.514 L816.438 682.514 L815.879 682.514 L815.319 682.514 L814.76 682.514 L814.201 682.514 L813.642 682.514 L813.082 682.514 L812.523 682.514 L811.964 682.514 L811.405 682.514 L810.845 682.514 L810.286 682.514 L809.727 682.514 L809.168 682.514 L808.608 682.514 L808.049 682.514 L807.49 682.514 L806.931 682.514 L806.371 682.514 L805.812 682.514 L805.253 682.514 L804.693 682.514 L804.134 682.514 L803.575 682.514 L803.016 682.514 L802.456 682.514 L801.897 682.514 L801.338 682.514 L800.779 682.514 L800.219 682.514 L799.66 682.514 L799.101 682.514 L798.542 682.514 L797.982 682.514 L797.423 682.514 L796.864 682.514 L796.305 682.514 L795.745 682.514 L795.186 682.514 L794.627 682.514 L794.068 682.514 L793.508 682.514 L792.949 682.514 L792.39 682.514 L791.831 682.514 L791.271 682.514 L790.712 682.514 L790.153 682.514 L789.594 682.514 L789.034 682.514 L788.475 682.514 L787.916 682.514 L787.357 682.514 L786.797 682.514 L786.238 682.514 L785.679 682.514 L785.12 682.514 L784.56 682.514 L784.001 682.514 L783.442 682.514 L782.883 682.514 L782.323 682.514 L781.764 682.514 L781.205 682.514 L780.646 682.514 L780.086 682.514 L779.527 682.514 L778.968 682.514 L778.409 682.514 L777.849 682.514 L777.29 682.514 L776.731 682.514 L776.172 682.514 L775.612 682.514 L775.053 682.514 L774.494 682.514 L773.935 682.514 L773.375 682.514 L772.816 682.514 L772.257 682.514 L771.698 682.514 L771.138 682.514 L770.579 682.514 L770.02 682.514 L769.461 682.514 L768.901 682.514 L768.342 682.514 L767.783 682.514 L767.224 682.514 L766.664 682.514 L766.105 682.514 L765.546 682.514 L764.987 682.514 L764.427 682.514 L763.868 682.514 L763.309 682.514 L762.75 682.514 L762.19 682.514 L761.631 682.514 L761.072 682.514 L760.513 682.514 L759.953 682.514 L759.394 682.514 L758.835 682.514 L758.276 682.514 L757.716 682.514 L757.157 682.514 L756.598 682.514 L756.039 682.514 L755.479 682.514 L754.92 682.514 L754.361 682.514 L753.802 682.514 L753.242 682.514 L752.683 682.514 L752.124 682.514 L751.565 682.514 L751.005 682.514 L750.446 682.514 L749.887 682.514 L749.328 682.514 L748.768 682.514 L748.209 682.514 L747.65 682.514 L747.091 682.514 L746.531 682.514 L745.972 682.514 L745.413 682.514 L744.854 682.514 L744.294 682.514 L743.735 682.514 L743.176 682.514 L742.617 682.514 L742.057 682.514 L741.498 682.514 L740.939 682.514 L740.38 682.514 L739.82 682.514 L739.261 682.514 L738.702 682.514 L738.143 682.514 L737.583 682.514 L737.024 682.514 L736.465 682.514 L735.906 682.514 L735.346 682.514 L734.787 682.514 L734.228 682.514 L733.669 682.514 L733.109 682.514 L732.55 682.514 L731.991 682.514 L731.432 682.514 L730.872 682.514 L730.313 682.514 L729.754 682.514 L729.195 682.514 L728.635 682.514 L728.076 682.514 L727.517 682.514 L726.958 682.514 L726.398 682.514 L725.839 682.514 L725.28 682.514 L724.721 682.514 L724.161 682.514 L723.602 682.514 L723.043 682.514 L722.484 682.514 L721.924 682.514 L721.365 682.514 L720.806 682.514 L720.247 682.514  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip633)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.418 720.806,683.418 721.365,683.418 721.924,683.418 722.484,683.418 723.043,683.418 723.602,683.418 724.161,683.418 724.721,683.418 725.28,683.418 725.839,683.418 726.398,683.418 726.958,683.418 727.517,683.418 728.076,683.418 728.635,683.418 729.195,683.418 729.754,683.418 730.313,683.418 730.872,683.418 731.432,683.418 731.991,683.418 732.55,683.418 733.109,683.418 733.669,683.418 734.228,683.418 734.787,683.418 735.346,683.418 735.906,683.418 736.465,683.418 737.024,683.418 737.583,683.418 738.143,683.418 738.702,683.418 739.261,683.418 739.82,683.418 740.38,683.418 740.939,683.418 741.498,683.418 742.057,683.418 742.617,683.418 743.176,683.418 743.735,683.418 744.294,683.418 744.854,683.418 745.413,683.418 745.972,683.418 746.531,683.418 747.091,683.418 747.65,683.418 748.209,683.418 748.768,683.418 749.328,683.418 749.887,683.418 750.446,683.418 751.005,683.418 751.565,683.418 752.124,683.418 752.683,683.418 753.242,683.418 753.802,683.418 754.361,683.418 754.92,683.418 755.479,683.418 756.039,683.418 756.598,683.418 757.157,683.418 757.716,683.418 758.276,683.418 758.835,683.418 759.394,683.418 759.953,683.418 760.513,683.418 761.072,683.418 761.631,683.418 762.19,683.418 762.75,683.418 763.309,683.418 763.868,683.418 764.427,683.418 764.987,683.418 765.546,683.418 766.105,683.418 766.664,683.418 767.224,683.418 767.783,683.418 768.342,683.418 768.901,683.418 769.461,683.418 770.02,683.418 770.579,683.418 771.138,683.418 771.698,683.418 772.257,683.418 772.816,683.418 773.375,683.418 773.935,683.418 774.494,683.418 775.053,683.418 775.612,683.418 776.172,683.418 776.731,683.418 777.29,683.418 777.849,683.418 778.409,683.418 778.968,683.418 779.527,683.418 780.086,683.418 780.646,683.418 781.205,683.418 781.764,683.418 782.323,683.418 782.883,683.418 783.442,683.418 784.001,683.418 784.56,683.418 785.12,683.418 785.679,683.418 786.238,683.418 786.797,683.418 787.357,683.418 787.916,683.418 788.475,683.418 789.034,683.418 789.594,683.418 790.153,683.418 790.712,683.418 791.271,683.418 791.831,683.418 792.39,683.418 792.949,683.418 793.508,683.418 794.068,683.418 794.627,683.418 795.186,683.418 795.745,683.418 796.305,683.418 796.864,683.418 797.423,683.418 797.982,683.418 798.542,683.418 799.101,683.418 799.66,683.418 800.219,683.418 800.779,683.418 801.338,683.418 801.897,683.418 802.456,683.418 803.016,683.418 803.575,683.418 804.134,683.418 804.693,683.418 805.253,683.418 805.812,683.418 806.371,683.418 806.931,683.418 807.49,683.418 808.049,683.418 808.608,683.418 809.168,683.418 809.727,683.418 810.286,683.418 810.845,683.418 811.405,683.418 811.964,683.418 812.523,683.418 813.082,683.418 813.642,683.418 814.201,683.418 814.76,683.418 815.319,683.418 815.879,683.418 816.438,683.418 816.997,683.418 817.556,683.418 818.116,683.418 818.675,683.418 819.234,683.418 819.793,683.418 820.353,683.418 820.912,683.418 821.471,683.418 822.03,683.418 822.59,683.418 823.149,683.418 823.708,683.418 824.267,683.418 824.827,683.418 825.386,683.418 825.945,683.418 826.504,683.418 827.064,683.418 827.623,683.418 828.182,683.418 828.741,683.418 829.301,683.418 829.86,683.418 830.419,683.418 830.978,683.418 831.538,683.418 832.097,683.418 832.656,683.418 833.215,683.418 833.775,683.418 834.334,683.418 834.893,683.418 835.452,683.418 836.012,683.418 836.571,683.418 837.13,683.418 837.689,683.418 838.249,683.418 838.808,683.418 839.367,683.418 839.926,683.418 840.486,683.418 841.045,683.418 841.604,683.418 842.163,683.418 842.723,683.418 843.282,683.418 843.841,683.418 844.4,683.418 844.96,683.418 845.519,683.418 846.078,683.418 846.637,683.418 847.197,683.418 847.756,683.418 848.315,683.418 848.874,683.418 849.434,683.418 849.993,683.418 850.552,683.418 851.111,683.418 851.671,683.418 852.23,683.418 852.789,683.418 853.348,683.418 853.908,683.418 854.467,683.418 855.026,683.418 855.585,683.418 856.145,683.418 856.704,683.418 857.263,683.418 857.822,683.418 858.382,683.418 858.941,683.418 859.5,683.418 860.059,683.418 860.619,683.418 861.178,683.418 861.737,683.418 862.296,683.418 862.856,683.418 863.415,683.418 863.974,683.418 864.533,683.418 865.093,683.418 865.652,683.418 866.211,683.418 866.77,683.418 867.33,683.418 867.889,683.418 868.448,683.418 869.007,683.418 869.567,683.418 870.126,683.418 870.685,683.418 871.244,683.418 871.804,683.418 872.363,683.418 872.922,683.418 873.481,683.418 874.041,683.418 874.6,683.418 875.159,683.418 875.718,683.418 876.278,683.418 876.837,683.418 877.396,683.418 877.955,683.418 878.515,683.418 879.074,683.418 879.633,683.418 880.192,683.418 880.752,683.418 881.311,683.418 881.87,683.418 882.429,683.418 882.989,683.418 883.548,683.418 884.107,683.418 884.666,683.418 885.226,683.418 885.785,683.418 886.344,683.418 886.903,683.418 887.463,683.418 888.022,683.418 888.581,683.418 889.14,683.418 889.7,683.418 890.259,683.418 890.818,683.418 891.377,683.418 891.937,683.418 892.496,683.418 893.055,683.418 893.614,683.418 894.174,683.418 894.733,683.418 895.292,683.418 895.851,683.418 896.411,683.418 896.97,683.418 897.529,683.418 898.088,683.418 898.648,683.418 899.207,683.418 899.766,683.418 900.325,683.418 900.885,683.418 901.444,683.418 902.003,683.418 902.562,683.418 903.122,683.418 903.681,683.418 904.24,683.418 904.799,683.418 905.359,683.418 905.918,683.418 906.477,683.418 907.036,683.418 907.596,683.418 908.155,683.418 908.714,683.418 909.273,683.418 909.833,683.418 910.392,683.418 910.951,683.418 911.51,683.418 912.07,683.418 912.629,683.418 913.188,683.418 913.747,683.418 914.307,683.418 914.866,683.418 915.425,683.418 915.984,683.418 916.544,683.418 917.103,683.418 917.662,683.418 918.221,683.418 918.781,683.418 919.34,683.418 919.899,683.418 920.458,683.418 921.018,683.418 921.577,683.418 922.136,683.418 922.695,683.418 923.255,683.418 923.814,683.418 924.373,683.418 924.932,683.418 925.492,683.418 926.051,683.418 926.61,683.418 927.169,683.418 927.729,683.418 928.288,683.418 928.847,683.418 929.406,683.418 929.966,683.418 930.525,683.418 931.084,683.418 931.644,683.418 932.203,683.418 932.762,683.418 933.321,683.418 933.881,683.418 934.44,683.418 934.999,683.418 935.558,683.418 936.118,683.418 936.677,683.418 937.236,683.418 937.795,683.418 938.355,683.418 938.914,683.418 939.473,683.418 940.032,683.418 940.592,683.418 941.151,683.418 941.71,683.418 942.269,683.418 942.829,683.418 943.388,683.418 943.947,683.418 944.506,683.418 945.066,683.418 945.625,683.418 946.184,683.418 946.743,683.418 947.303,683.418 947.862,683.418 948.421,683.418 948.98,683.418 949.54,683.418 950.099,683.418 950.658,683.418 951.217,683.418 951.777,683.418 952.336,683.418 952.895,683.418 953.454,683.418 954.014,683.418 954.573,683.418 955.132,683.418 955.691,683.418 956.251,683.418 956.81,683.418 957.369,683.418 957.928,683.418 958.488,683.418 959.047,683.418 959.606,683.418 960.165,683.418 960.725,683.418 961.284,683.418 961.843,683.418 962.402,683.418 962.962,683.418 963.521,683.418 964.08,683.418 964.639,683.418 965.199,683.418 965.758,683.418 966.317,683.418 966.876,683.418 967.436,683.418 967.995,683.418 968.554,683.418 969.113,683.418 969.673,683.418 970.232,683.418 970.791,683.418 971.35,683.418 971.91,683.418 972.469,683.418 973.028,683.418 973.587,683.418 974.147,683.418 974.706,683.418 975.265,683.418 975.824,683.418 976.384,683.418 976.943,683.418 977.502,683.418 978.061,683.418 978.621,683.418 979.18,683.418 979.739,683.418 980.298,683.418 980.858,683.418 981.417,683.418 981.976,683.418 982.535,683.418 983.095,683.418 983.654,683.418 984.213,683.418 984.772,683.418 985.332,683.418 985.891,683.418 986.45,683.418 987.009,683.418 987.569,683.418 988.128,683.418 988.687,683.418 989.246,683.418 989.806,683.418 990.365,683.418 990.924,683.418 991.483,683.418 992.043,683.418 992.602,683.418 993.161,683.418 993.72,683.418 994.28,683.418 994.839,683.418 995.398,683.418 995.957,683.418 996.517,683.418 997.076,683.418 997.635,683.418 998.194,683.418 998.754,683.418 999.313,683.418 999.872,683.418 1000.43,683.418 1000.99,683.418 1001.55,683.418 1002.11,683.418 1002.67,683.418 1003.23,683.418 1003.79,683.418 1004.35,683.418 1004.91,683.418 1005.46,683.418 1006.02,683.418 1006.58,683.418 1007.14,683.418 1007.7,683.418 1008.26,683.418 1008.82,683.418 1009.38,683.418 1009.94,683.418 1010.5,683.418 1011.06,683.418 1011.62,683.418 1012.18,683.418 1012.73,683.418 1013.29,683.418 1013.85,683.418 1014.41,683.418 1014.97,683.418 1015.53,683.418 1016.09,683.418 1016.65,683.418 1017.21,683.418 1017.77,683.418 1018.33,683.418 1018.89,683.418 1019.45,683.418 1020.01,683.418 1020.56,683.418 1021.12,683.418 1021.68,683.418 1022.24,683.418 1022.8,683.418 1023.36,683.418 1023.92,683.418 1024.48,683.418 1025.04,683.418 1025.6,683.418 1026.16,683.418 1026.72,683.418 1027.28,683.418 1027.83,683.418 1028.39,683.418 1028.95,683.418 1029.51,683.418 1030.07,683.418 1030.63,683.418 1031.19,683.418 1031.75,683.418 1032.31,683.418 1032.87,683.418 1033.43,683.418 1033.99,683.418 1034.55,683.418 1035.1,683.418 1035.66,683.418 1036.22,683.418 1036.78,683.418 1037.34,683.418 1037.9,683.418 1038.46,683.418 1039.02,683.418 1039.58,683.418 1040.14,683.418 1040.7,683.418 1041.26,683.418 1041.82,683.418 1042.38,683.418 1042.93,683.418 1043.49,683.418 1044.05,683.418 1044.61,683.418 1045.17,683.418 1045.73,683.418 1046.29,683.418 1046.85,683.418 1047.41,683.418 1047.97,683.418 1048.53,683.418 1049.09,683.418 1049.65,683.418 1050.2,683.418 1050.76,683.418 1051.32,683.418 1051.88,683.418 1052.44,683.418 1053,683.418 1053.56,683.418 1054.12,683.418 1054.68,683.418 1055.24,683.418 1055.8,683.418 1056.36,683.418 1056.92,683.418 1057.48,683.418 1058.03,683.418 1058.59,683.418 1059.15,683.418 1059.71,683.418 1060.27,683.418 1060.83,683.418 1061.39,683.418 1061.95,683.418 1062.51,683.418 1063.07,683.418 1063.63,683.418 1064.19,683.418 1064.75,683.418 1065.3,683.418 1065.86,683.418 1066.42,683.418 1066.98,683.418 1067.54,683.418 1068.1,683.418 1068.66,683.418 1069.22,683.418 1069.78,683.418 1070.34,683.418 1070.9,683.418 1071.46,683.418 1072.02,683.418 1072.57,683.418 1073.13,683.418 1073.69,683.418 1074.25,683.418 1074.81,683.418 1075.37,683.418 1075.93,683.418 1076.49,683.418 1077.05,683.418 1077.61,683.418 1078.17,683.418 1078.73,683.418 1079.29,683.418 1079.85,683.418 1080.4,683.418 1080.96,683.418 1081.52,683.418 1082.08,683.418 1082.64,683.418 1083.2,683.418 1083.76,683.418 1084.32,683.418 1084.88,683.418 1085.44,683.418 1086,683.418 1086.56,683.418 1087.12,683.418 1087.67,683.418 1088.23,683.418 1088.79,683.418 1089.35,683.418 1089.91,683.418 1090.47,683.418 1091.03,683.418 1091.59,683.418 1092.15,683.418 1092.71,683.418 1093.27,683.418 1093.83,683.418 1094.39,683.418 1094.94,683.418 1095.5,683.418 1096.06,683.418 1096.62,683.418 1097.18,683.418 1097.74,683.418 1098.3,683.418 1098.86,683.418 1099.42,683.418 1099.98,683.418 1100.54,683.418 1101.1,683.418 1101.66,683.418 1102.22,683.418 1102.77,683.418 1103.33,683.418 1103.89,683.418 1104.45,683.418 1105.01,683.418 1105.57,683.418 1106.13,683.418 1106.69,683.418 1107.25,683.418 1107.81,683.418 1108.37,683.418 1108.93,683.418 1109.49,683.418 1110.04,683.418 1110.6,683.418 1111.16,683.418 1111.72,683.418 1112.28,683.418 1112.84,683.418 1113.4,683.418 1113.96,683.418 1114.52,683.418 1115.08,683.418 1115.64,683.418 1116.2,683.418 1116.76,683.418 1117.31,683.418 1117.87,683.418 1118.43,683.418 1118.99,683.418 1119.55,683.418 1120.11,683.418 1120.67,683.418 1121.23,683.418 1121.79,683.418 1122.35,683.418 1122.91,683.418 1123.47,683.418 1124.03,683.418 1124.59,683.418 1125.14,683.418 1125.7,683.418 1126.26,683.418 1126.82,683.418 1127.38,683.418 1127.94,683.418 1128.5,683.418 1129.06,683.418 1129.62,683.418 1130.18,683.418 1130.74,683.418 1131.3,683.418 1131.86,683.418 1132.41,683.418 1132.97,683.418 1133.53,683.418 1134.09,683.418 1134.65,683.418 1135.21,683.418 1135.77,683.418 1136.33,683.418 1136.89,683.418 1137.45,683.418 1138.01,683.418 1138.57,683.418 1139.13,683.418 1139.68,683.418 1140.24,683.418 1140.8,683.418 1141.36,683.418 1141.92,683.418 1142.48,683.418 1143.04,683.418 1143.6,683.418 1144.16,683.418 1144.72,683.418 1145.28,683.418 1145.84,683.418 1146.4,683.418 1146.96,683.418 1147.51,683.418 1148.07,683.418 1148.63,683.418 1149.19,683.418 1149.75,683.418 1150.31,683.418 1150.87,683.418 1151.43,683.418 1151.99,683.418 1152.55,683.418 1153.11,683.418 1153.67,683.418 1154.23,683.418 1154.78,683.418 1155.34,683.418 1155.9,683.418 1156.46,683.418 1157.02,683.418 1157.58,683.418 1158.14,683.418 1158.7,683.418 1159.26,683.418 1159.82,683.418 1160.38,683.418 1160.94,683.418 1161.5,683.418 1162.05,683.418 1162.61,683.418 1163.17,683.418 1163.73,683.418 1164.29,683.418 1164.85,683.418 1165.41,683.418 1165.97,683.418 1166.53,683.418 1167.09,683.418 1167.65,683.418 1168.21,683.418 1168.77,683.418 1169.33,683.418 1169.88,683.418 1170.44,683.418 1171,683.418 1171.56,683.418 1172.12,683.418 1172.68,683.418 1173.24,683.418 1173.8,683.418 1174.36,683.418 1174.92,683.418 1175.48,683.418 1176.04,683.418 1176.6,683.418 1177.15,683.418 1177.71,683.418 1178.27,683.418 1178.83,683.418 1179.39,683.418 1179.95,683.418 1180.51,683.418 1181.07,683.418 1181.63,683.418 1182.19,683.418 1182.75,683.418 1183.31,683.418 1183.87,683.418 1184.43,683.418 1184.98,683.418 1185.54,683.418 1186.1,683.418 1186.66,683.418 1187.22,683.418 1187.78,683.418 1188.34,683.418 1188.9,683.418 1189.46,683.418 1190.02,683.418 1190.58,683.418 1191.14,683.418 1191.7,683.418 1192.25,683.418 1192.81,683.418 1193.37,683.418 1193.93,683.418 1194.49,683.418 1195.05,683.418 1195.61,683.418 1196.17,683.418 1196.73,683.418 1197.29,683.418 1197.85,683.418 1198.41,683.418 1198.97,683.418 1199.52,683.418 1200.08,683.418 1200.64,683.418 1201.2,683.418 1201.76,683.418 1202.32,683.418 1202.88,683.418 1203.44,683.418 1204,683.418 1204.56,683.418 1205.12,683.418 1205.68,683.418 1206.24,683.418 1206.8,683.418 1207.35,683.418 1207.91,683.418 1208.47,683.418 1209.03,683.418 1209.59,683.418 1210.15,683.418 1210.71,683.418 1211.27,683.418 1211.83,683.418 1212.39,683.418 1212.95,683.418 1213.51,683.418 1214.07,683.418 1214.62,683.418 1215.18,683.418 1215.74,683.418 1216.3,683.418 1216.86,683.418 1217.42,683.418 1217.98,683.418 1218.54,683.418 1219.1,683.418 1219.66,683.418 1220.22,683.418 1220.78,683.418 1221.34,683.418 1221.89,683.418 1222.45,683.418 1223.01,683.418 1223.57,683.418 1224.13,683.418 1224.69,683.418 1225.25,683.418 1225.81,683.418 1226.37,683.418 1226.93,683.418 1227.49,683.418 1228.05,683.418 1228.61,683.418 1229.17,683.418 1229.72,683.418 1230.28,683.418 1230.84,683.418 1231.4,683.418 1231.96,683.418 1232.52,683.418 1233.08,683.418 1233.64,683.418 1234.2,683.418 1234.76,683.418 1235.32,683.418 1235.88,683.418 1236.44,683.418 1236.99,683.418 1237.55,683.418 1238.11,683.418 1238.67,683.418 1239.23,683.418 1239.79,683.418 1240.35,683.418 1240.91,683.418 1241.47,683.418 1242.03,683.418 1242.59,683.418 1243.15,683.418 1243.71,683.418 1244.26,683.418 1244.82,683.418 1245.38,683.418 1245.94,683.418 1246.5,683.418 1247.06,683.418 1247.62,683.418 1248.18,683.418 1248.74,683.418 1249.3,683.418 1249.86,683.418 1250.42,683.418 1250.98,683.418 1251.54,683.418 1252.09,683.418 1252.65,683.418 1253.21,683.418 1253.77,683.418 1254.33,683.418 1254.89,683.418 1255.45,683.418 1256.01,683.418 1256.57,683.418 1257.13,683.418 1257.69,683.418 1258.25,683.418 1258.81,683.418 1259.36,683.418 1259.92,683.418 1260.48,683.418 1261.04,683.418 1261.6,683.418 1262.16,683.418 1262.72,683.418 1263.28,683.418 1263.84,683.418 1264.4,683.418 1264.96,683.418 1265.52,683.418 1266.08,683.418 1266.63,683.418 1267.19,683.418 1267.75,683.418 1268.31,683.418 1268.87,683.418 1269.43,683.418 1269.99,683.418 1270.55,683.418 1271.11,683.418 1271.67,683.418 1272.23,683.418 1272.79,683.418 1273.35,683.418 1273.91,683.418 1274.46,683.418 1275.02,683.418 1275.58,683.418 1276.14,683.418 1276.7,683.418 1277.26,683.418 1277.82,683.418 1278.38,683.418 1278.94,683.418 1279.5,683.418 1280.06,683.418 1280.62,683.418 1281.18,683.418 1281.73,683.418 1282.29,683.418 1282.85,683.418 1283.41,683.418 1283.97,683.418 1284.53,683.418 1285.09,683.418 1285.65,683.418 1286.21,683.418 1286.77,683.418 1287.33,683.418 1287.89,683.418 1288.45,683.418 1289,683.418 1289.56,683.418 1290.12,683.418 1290.68,683.418 1291.24,683.418 1291.8,683.418 1292.36,683.418 1292.92,683.418 1293.48,683.418 1294.04,683.418 1294.6,683.418 1295.16,683.418 1295.72,683.418 1296.28,683.418 1296.83,683.418 1297.39,683.418 1297.95,683.418 1298.51,683.418 1299.07,683.418 1299.63,683.418 1300.19,683.418 1300.75,683.418 1301.31,683.418 1301.87,683.418 1302.43,683.418 1302.99,683.418 1303.55,683.418 1304.1,683.418 1304.66,683.418 1305.22,683.418 1305.78,683.418 1306.34,683.418 1306.9,683.418 1307.46,683.418 1308.02,683.418 1308.58,683.418 1309.14,683.418 1309.7,683.418 1310.26,683.418 1310.82,683.418 1311.38,683.418 1311.93,683.418 1312.49,683.418 1313.05,683.418 1313.61,683.418 1314.17,683.418 1314.73,683.418 1315.29,683.418 1315.85,683.418 1316.41,683.418 1316.97,683.418 1317.53,683.418 1318.09,683.418 1318.65,683.418 1319.2,683.418 1319.76,683.418 1320.32,683.418 1320.88,683.418 1321.44,683.418 1322,683.418 1322.56,683.418 1323.12,683.418 1323.68,683.418 1324.24,683.418 1324.8,683.418 1325.36,683.418 1325.92,683.418 1326.47,683.418 1327.03,683.418 1327.59,683.418 1328.15,683.418 1328.71,683.418 1329.27,683.418 1329.83,683.418 1330.39,683.418 1330.95,683.418 1331.51,683.418 1332.07,683.418 1332.63,683.418 1333.19,683.418 1333.75,683.418 1334.3,683.418 1334.86,683.418 1335.42,683.418 1335.98,683.418 1336.54,683.418 1337.1,683.418 1337.66,683.418 1338.22,683.418 1338.78,683.418 1339.34,683.418 1339.9,683.418 1340.46,683.418 1341.02,683.418 1341.57,683.418 1342.13,683.418 1342.69,683.418 1343.25,683.418 1343.81,683.418 1344.37,683.418 1344.93,683.418 1345.49,683.418 1346.05,683.418 1346.61,683.418 1347.17,683.418 1347.73,683.418 1348.29,683.418 1348.84,683.418 1349.4,683.418 1349.96,683.418 1350.52,683.418 1351.08,683.418 1351.64,683.418 1352.2,683.418 1352.76,683.418 1353.32,683.418 1353.88,683.418 1354.44,683.418 1355,683.418 1355.56,683.418 1356.12,683.418 1356.67,683.418 1357.23,683.418 1357.79,683.418 1358.35,683.418 1358.91,683.418 1359.47,683.418 1360.03,683.418 1360.59,683.418 1361.15,683.418 1361.71,683.418 1362.27,683.418 1362.83,683.418 1363.39,683.418 1363.94,683.418 1364.5,683.418 1365.06,683.418 1365.62,683.418 1366.18,683.418 1366.74,683.418 1367.3,683.418 1367.86,683.418 1368.42,683.418 1368.98,683.418 1369.54,683.418 1370.1,683.418 1370.66,683.418 1371.21,683.418 1371.77,683.418 1372.33,683.418 1372.89,683.418 1373.45,683.418 1374.01,683.418 1374.57,683.418 1375.13,683.418 1375.69,683.418 1376.25,683.418 1376.81,683.418 1377.37,683.418 1377.93,683.418 1378.49,683.418 1379.04,683.418 1379.6,683.418 1380.16,683.418 1380.72,683.418 1381.28,683.418 1381.84,683.418 1382.4,683.418 1382.96,683.418 1383.52,683.418 1384.08,683.418 1384.64,683.418 1385.2,683.418 1385.76,683.418 1386.31,683.418 1386.87,683.418 1387.43,683.418 1387.99,683.418 1388.55,683.418 1389.11,683.418 1389.67,683.418 1390.23,683.418 1390.79,683.418 1391.35,683.418 1391.91,683.418 1392.47,683.418 1393.03,683.418 1393.58,683.418 1394.14,683.418 1394.7,683.418 1395.26,683.418 1395.82,683.418 1396.38,683.418 1396.94,683.418 1397.5,683.418 1398.06,683.418 1398.62,683.418 1399.18,683.418 1399.74,683.418 1400.3,683.418 1400.86,683.418 1401.41,683.418 1401.97,683.418 1402.53,683.418 1403.09,683.418 1403.65,683.418 1404.21,683.418 1404.77,683.418 1405.33,683.418 1405.89,683.418 1406.45,683.418 1407.01,683.418 1407.57,683.418 1408.13,683.418 1408.68,683.418 1409.24,683.418 1409.8,683.418 1410.36,683.418 1410.92,683.418 1411.48,683.418 1412.04,683.418 1412.6,683.418 1413.16,683.418 1413.72,683.418 1414.28,683.418 1414.84,683.418 1415.4,683.418 1415.95,683.418 1416.51,683.418 1417.07,683.418 1417.63,683.418 1418.19,683.418 1418.75,683.418 1419.31,683.418 1419.87,683.418 1420.43,683.418 1420.99,683.418 1421.55,683.418 1422.11,683.418 1422.67,683.418 1423.23,683.418 1423.78,683.418 1424.34,683.418 1424.9,683.418 1425.46,683.418 1426.02,683.418 1426.58,683.418 1427.14,683.418 1427.7,683.418 1428.26,683.418 1428.82,683.418 1429.38,683.418 1429.94,683.418 1430.5,683.418 1431.05,683.418 1431.61,683.418 1432.17,683.418 1432.73,683.418 1433.29,683.418 1433.85,683.418 1434.41,683.418 1434.97,683.418 1435.53,683.418 1436.09,683.418 1436.65,683.418 1437.21,683.418 1437.77,683.418 1438.33,683.418 1438.88,683.418 1439.44,683.418 1440,683.418 1440.56,683.418 1441.12,683.418 1441.68,683.418 1442.24,683.418 1442.8,683.418 1443.36,683.418 1443.92,683.418 1444.48,683.418 1445.04,683.418 1445.6,683.418 1446.15,683.418 1446.71,683.418 1447.27,683.418 1447.83,683.418 1448.39,683.418 1448.95,683.418 1449.51,683.418 1450.07,683.418 1450.63,683.418 1451.19,683.418 1451.75,683.418 1452.31,683.418 1452.87,683.418 1453.42,683.418 1453.98,683.418 1454.54,683.418 1455.1,683.418 1455.66,683.418 1456.22,683.418 1456.78,683.418 1457.34,683.418 1457.9,683.418 1458.46,683.418 1459.02,683.418 1459.58,683.418 1460.14,683.418 1460.7,683.418 1461.25,683.418 1461.81,683.418 1462.37,683.418 1462.93,683.418 1463.49,683.418 1464.05,683.418 1464.61,683.418 1465.17,683.418 1465.73,683.418 1466.29,683.418 1466.85,683.418 1467.41,683.418 1467.97,683.418 1468.52,683.418 1469.08,683.418 1469.64,683.418 1470.2,683.418 1470.76,683.418 1471.32,683.418 1471.88,683.418 1472.44,683.418 1473,683.418 1473.56,683.418 1474.12,683.418 1474.68,683.418 1475.24,683.418 1475.79,683.418 1476.35,683.418 1476.91,683.418 1477.47,683.418 1478.03,683.418 1478.59,683.418 1479.15,683.418 1479.71,683.418 1480.27,683.418 1480.83,683.418 1481.39,683.418 1481.95,683.418 1482.51,683.418 1483.07,683.418 1483.62,683.418 1484.18,683.418 1484.74,683.418 1485.3,683.418 1485.86,683.418 1486.42,683.418 1486.98,683.418 1487.54,683.418 1488.1,683.418 1488.66,683.418 1489.22,683.418 1489.78,683.418 1490.34,683.418 1490.89,683.418 1491.45,683.418 1492.01,683.418 1492.57,683.418 1493.13,683.418 1493.69,683.418 1494.25,683.418 1494.81,683.418 1495.37,683.418 1495.93,683.418 1496.49,683.418 1497.05,683.418 1497.61,683.418 1498.16,683.418 1498.72,683.418 1499.28,683.418 1499.84,683.418 1500.4,683.418 1500.96,683.418 1501.52,683.418 1502.08,683.418 1502.64,683.418 1503.2,683.418 1503.76,683.418 1504.32,683.418 1504.88,683.418 1505.44,683.418 1505.99,683.418 1506.55,683.418 1507.11,683.418 1507.67,683.418 1508.23,683.418 1508.79,683.418 1509.35,683.418 1509.91,683.418 1510.47,683.418 1511.03,683.418 1511.59,683.418 1512.15,683.418 1512.71,683.418 1513.26,683.418 1513.82,683.418 1514.38,683.418 1514.94,683.418 1515.5,683.418 1516.06,683.418 1516.62,683.418 1517.18,683.418 1517.74,683.418 1518.3,683.418 1518.86,683.418 1519.42,683.418 1519.98,683.418 1520.53,683.418 1521.09,683.418 1521.65,683.418 1522.21,683.418 1522.77,683.418 1523.33,683.418 1523.89,683.418 1524.45,683.418 1525.01,683.418 1525.57,683.418 1526.13,683.418 1526.69,683.418 1527.25,683.418 1527.81,683.418 1528.36,683.418 1528.92,683.418 1529.48,683.418 1530.04,683.418 1530.6,683.418 1531.16,683.418 1531.72,683.418 1532.28,683.418 1532.84,683.418 1533.4,683.418 1533.96,683.418 1534.52,683.418 1535.08,683.418 1535.63,683.418 1536.19,683.418 1536.75,683.418 1537.31,683.418 1537.87,683.418 1538.43,683.418 1538.99,683.418 1539.55,683.418 1540.11,683.418 1540.67,683.418 1541.23,683.418 1541.79,683.418 1542.35,683.418 1542.9,683.418 1543.46,683.418 1544.02,683.418 1544.58,683.418 1545.14,683.418 1545.7,683.418 1546.26,683.418 1546.82,683.418 1547.38,683.418 1547.94,683.418 1548.5,683.418 1549.06,683.418 1549.62,683.418 1550.18,683.418 1550.73,683.418 1551.29,683.418 1551.85,683.418 1552.41,683.418 1552.97,683.418 1553.53,683.418 1554.09,683.418 1554.65,683.418 1555.21,683.418 1555.77,683.418 1556.33,683.418 1556.89,683.418 1557.45,683.418 1558,683.418 1558.56,683.418 1559.12,683.418 1559.68,683.418 1560.24,683.418 1560.8,683.418 1561.36,683.418 1561.92,683.418 1562.48,683.418 1563.04,683.418 1563.6,683.418 1564.16,683.418 1564.72,683.418 1565.28,683.418 1565.83,683.418 1566.39,683.418 1566.95,683.418 1567.51,683.418 1568.07,683.418 1568.63,683.418 1569.19,683.418 1569.75,683.418 1570.31,683.418 1570.87,683.418 1571.43,683.418 1571.99,683.418 1572.55,683.418 1573.1,683.418 1573.66,683.418 1574.22,683.418 1574.78,683.418 1575.34,683.418 1575.9,683.418 1576.46,683.418 1577.02,683.418 1577.58,683.418 1578.14,683.418 1578.7,683.418 1579.26,683.418 1579.82,683.418 1580.37,683.418 1580.93,683.418 1581.49,683.418 1582.05,683.418 1582.61,683.418 1583.17,683.418 1583.73,683.418 1584.29,683.418 1584.85,683.418 1585.41,683.418 1585.97,683.418 1586.53,683.418 1587.09,683.418 1587.65,683.418 1588.2,683.418 1588.76,683.418 1589.32,683.418 1589.88,683.418 1590.44,683.418 1591,683.418 1591.56,683.418 1592.12,683.418 1592.68,683.418 1593.24,683.418 1593.8,683.418 1594.36,683.418 1594.92,683.418 1595.47,683.418 1596.03,683.418 1596.59,683.418 1597.15,683.418 1597.71,683.418 1598.27,683.418 1598.83,683.418 1599.39,683.418 1599.95,683.418 1600.51,683.418 1601.07,683.418 1601.63,683.418 1602.19,683.418 1602.74,683.418 1603.3,683.418 1603.86,683.418 1604.42,683.418 1604.98,683.418 1605.54,683.418 1606.1,683.418 1606.66,683.418 1607.22,683.418 1607.78,683.418 1608.34,683.418 1608.9,683.418 1609.46,683.418 1610.02,683.418 1610.57,683.418 1611.13,683.418 1611.69,683.418 1612.25,683.418 1612.81,683.418 1613.37,683.418 1613.93,683.418 1614.49,683.418 1615.05,683.418 1615.61,683.418 1616.17,683.418 1616.73,683.418 1617.29,683.418 1617.84,683.418 1618.4,683.418 1618.96,683.418 1619.52,683.418 1620.08,683.418 1620.64,683.418 1621.2,683.418 1621.76,683.418 1622.32,683.418 1622.88,683.418 1623.44,683.418 1624,683.418 1624.56,683.418 1625.11,683.418 1625.67,683.418 1626.23,683.418 1626.79,683.418 1627.35,683.418 1627.91,683.418 1628.47,683.418 1629.03,683.418 1629.59,683.418 1630.15,683.418 1630.71,683.418 1631.27,683.418 1631.83,683.418 1632.39,683.418 1632.94,683.418 1633.5,683.418 1634.06,683.418 1634.62,683.418 1635.18,683.418 1635.74,683.418 1636.3,683.418 1636.86,683.418 1637.42,683.418 1637.98,683.418 1638.54,683.418 1639.1,683.418 1639.66,683.418 1640.21,683.418 1640.77,683.418 1641.33,683.418 1641.89,683.418 1642.45,683.418 1643.01,683.418 1643.57,683.418 1644.13,683.418 1644.69,683.418 1645.25,683.418 1645.81,683.418 1646.37,683.418 1646.93,683.418 1647.48,683.418 1648.04,683.418 1648.6,683.418 1649.16,683.418 1649.72,683.418 1650.28,683.418 1650.84,683.418 1651.4,683.418 1651.96,683.418 1652.52,683.418 1653.08,683.418 1653.64,683.418 1654.2,683.418 1654.76,683.418 1655.31,683.418 1655.87,683.418 1656.43,683.418 1656.99,683.418 1657.55,683.418 1658.11,683.418 1658.67,683.418 1659.23,683.418 1659.79,683.418 1660.35,683.418 1660.91,683.418 1661.47,683.418 1662.03,683.418 1662.58,683.418 1663.14,683.418 1663.7,683.418 1664.26,683.418 1664.82,683.418 1665.38,683.418 1665.94,683.418 1666.5,683.418 1667.06,683.418 1667.62,683.418 1668.18,683.418 1668.74,683.418 1669.3,683.418 1669.85,683.418 1670.41,683.418 1670.97,683.418 1671.53,683.418 1672.09,683.418 1672.65,683.418 1673.21,683.418 1673.77,683.418 1674.33,683.418 1674.89,683.418 1675.45,683.418 1676.01,683.418 1676.57,683.418 1677.13,683.418 1677.68,683.418 1678.24,683.418 1678.8,683.418 1679.36,683.418 1679.92,683.418 1680.48,683.418 1681.04,683.418 1681.6,683.418 1682.16,683.418 1682.72,683.418 1683.28,683.418 1683.84,683.418 1684.4,683.418 1684.95,683.418 1685.51,683.418 1686.07,683.418 1686.63,683.418 1687.19,683.418 1687.75,683.418 1688.31,683.418 1688.87,683.418 1689.43,683.418 1689.99,683.418 1690.55,683.418 1691.11,683.418 1691.67,683.418 1692.23,683.418 1692.78,683.418 1693.34,683.418 1693.9,683.418 1694.46,683.418 1695.02,683.418 1695.58,683.418 1696.14,683.418 1696.7,683.418 1697.26,683.418 1697.82,683.418 1698.38,683.418 1698.94,683.418 1699.5,683.418 1700.05,683.418 1700.61,683.418 1701.17,683.418 1701.73,683.418 1702.29,683.418 1702.85,683.418 1703.41,683.418 1703.97,683.418 1704.53,683.418 1705.09,683.418 1705.65,683.418 1706.21,683.418 1706.77,683.418 1707.32,683.418 1707.88,683.418 1708.44,683.418 1709,683.418 1709.56,683.418 1710.12,683.418 1710.68,683.418 1711.24,683.418 1711.8,683.418 1712.36,683.418 1712.92,683.418 1713.48,683.418 1714.04,683.418 1714.6,683.418 1715.15,683.418 1715.71,683.418 1716.27,683.418 1716.83,683.418 1717.39,683.418 1717.95,683.418 1718.51,683.418 1719.07,683.418 1719.63,683.418 1720.19,683.418 1720.75,683.418 1721.31,683.418 1721.87,683.418 1722.42,683.418 1722.98,683.418 1723.54,683.418 1724.1,683.418 1724.66,683.418 1725.22,683.418 1725.78,683.418 1726.34,683.418 1726.9,683.418 1727.46,683.418 1728.02,683.418 1728.58,683.418 1729.14,683.418 1729.69,683.418 1730.25,683.418 1730.81,683.418 1731.37,683.418 1731.93,683.418 1732.49,683.418 1733.05,683.418 1733.61,683.418 1734.17,683.418 1734.73,683.418 1735.29,683.418 1735.85,683.418 1736.41,683.418 1736.97,683.418 1737.52,683.418 1738.08,683.418 1738.64,683.418 1739.2,683.418 1739.76,683.418 1740.32,683.418 1740.88,683.418 1741.44,683.418 1742,683.418 1742.56,683.418 1743.12,683.418 1743.68,683.418 1744.24,683.418 1744.79,683.418 1745.35,683.418 1745.91,683.418 1746.47,683.418 1747.03,683.418 1747.59,683.418 1748.15,683.418 1748.71,683.418 1749.27,683.418 1749.83,683.418 1750.39,683.418 1750.95,683.418 1751.51,683.418 1752.06,683.418 1752.62,683.418 1753.18,683.418 1753.74,683.418 1754.3,683.418 1754.86,683.418 1755.42,683.418 1755.98,683.418 1756.54,683.418 1757.1,683.418 1757.66,683.418 1758.22,683.418 1758.78,683.418 1759.34,683.418 1759.89,683.418 1760.45,683.418 1761.01,683.418 1761.57,683.418 1762.13,683.418 1762.69,683.418 1763.25,683.418 1763.81,683.418 1764.37,683.418 1764.93,683.418 1765.49,683.418 1766.05,683.418 1766.61,683.418 1767.16,683.418 1767.72,683.418 1768.28,683.418 1768.84,683.418 1769.4,683.418 1769.96,683.418 1770.52,683.418 1771.08,683.418 1771.64,683.418 1772.2,683.418 1772.76,683.418 1773.32,683.418 1773.88,683.418 1774.43,683.418 1774.99,683.418 1775.55,683.418 1776.11,683.418 1776.67,683.418 1777.23,683.418 1777.79,683.418 1778.35,683.418 1778.91,683.418 1779.47,683.418 1780.03,683.418 1780.59,683.418 1781.15,683.418 1781.71,683.418 1782.26,683.418 1782.82,683.418 1783.38,683.418 1783.94,683.418 1784.5,683.418 1785.06,683.418 1785.62,683.418 1786.18,683.418 1786.74,683.418 1787.3,683.418 1787.86,683.418 1788.42,683.418 1788.98,683.418 1789.53,683.418 1790.09,683.418 1790.65,683.418 1791.21,683.418 1791.77,683.418 1792.33,683.418 1792.89,683.418 1793.45,683.418 1794.01,683.418 1794.57,683.418 1795.13,683.418 1795.69,683.418 1796.25,683.418 1796.8,683.418 1797.36,683.418 1797.92,683.418 1798.48,683.418 1799.04,683.418 1799.6,683.418 1800.16,683.418 1800.72,683.418 1801.28,683.418 1801.84,683.418 1802.4,683.418 1802.96,683.418 1803.52,683.418 1804.08,683.418 1804.63,683.418 1805.19,683.418 1805.75,683.418 1806.31,683.418 1806.87,683.418 1807.43,683.418 1807.99,683.418 1808.55,683.418 1809.11,683.418 1809.67,683.418 1810.23,683.418 1810.79,683.418 1811.35,683.418 1811.9,683.418 1812.46,683.418 1813.02,683.418 1813.58,683.418 1814.14,683.418 1814.7,683.418 1815.26,683.418 1815.82,683.418 1816.38,683.418 1816.94,683.418 1817.5,683.418 1818.06,683.418 1818.62,683.418 1819.18,683.418 1819.73,683.418 1820.29,683.418 1820.85,683.418 1821.41,683.418 1821.97,683.418 1822.53,683.418 1823.09,683.418 1823.65,683.418 1824.21,683.418 1824.77,683.418 1825.33,683.418 1825.89,683.418 1826.45,683.418 1827,683.418 1827.56,683.418 1828.12,683.418 1828.68,683.418 1829.24,683.418 1829.8,683.418 1830.36,683.418 1830.92,683.418 1831.48,683.418 1832.04,683.418 1832.6,683.418 1833.16,683.418 1833.72,683.418 1834.27,683.418 1834.83,683.418 1835.39,683.418 1835.95,683.418 1836.51,683.418 1837.07,683.418 1837.63,683.418 1838.19,683.418 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.030794678821487 ± 0.02162863409034783\nProjected Energy: -4.014245544335896 ± (0.004751982404385124, 0.004551357709862813)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.454134</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.3395e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">9.227e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">7.835e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.162e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.434e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">7.113e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0, boundary_condition=:periodic)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\nboundary_condition : the boundary condition to apply. Can be one of :periodic, :twisted, or :hard_wall\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{boundary_condition}, Tuple{SingleComponentFockAddress, Any, Val{boundary_condition}}} where boundary_condition","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen, Val(boundary_condition))\n\nCompute the new address of a hopping event for the Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes multiplied by a term consistent with boundary condition.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions can be periodic, pi-twisted and hard-wall.\n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(:twisted))\n(BoseFS{2,3}(2, 0, 0), -1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(:hard_wall))\n(BoseFS{2,3}(2, 0, 0), 0.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
