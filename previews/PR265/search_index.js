var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip160\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip160)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip161\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip160)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip162\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip160)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.84 2211.02,1260.84 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.06 2211.02,1003.06 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.288 2211.02,745.288 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,487.513 2211.02,487.513 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,229.737 2211.02,229.737 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.84 423.181,1260.84 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.06 423.181,1003.06 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.288 423.181,745.288 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,487.513 423.181,487.513 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,229.737 423.181,229.737 \"/>\n<path clip-path=\"url(#clip160)\" d=\"M356.339 1246.64 Q352.728 1246.64 350.899 1250.2 Q349.094 1253.74 349.094 1260.87 Q349.094 1267.98 350.899 1271.55 Q352.728 1275.09 356.339 1275.09 Q359.973 1275.09 361.779 1271.55 Q363.608 1267.98 363.608 1260.87 Q363.608 1253.74 361.779 1250.2 Q359.973 1246.64 356.339 1246.64 M356.339 1242.93 Q362.149 1242.93 365.205 1247.54 Q368.284 1252.12 368.284 1260.87 Q368.284 1269.6 365.205 1274.21 Q362.149 1278.79 356.339 1278.79 Q350.529 1278.79 347.45 1274.21 Q344.395 1269.6 344.395 1260.87 Q344.395 1252.12 347.45 1247.54 Q350.529 1242.93 356.339 1242.93 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M290.043 1016.41 L306.363 1016.41 L306.363 1020.34 L284.418 1020.34 L284.418 1016.41 Q287.08 1013.65 291.664 1009.02 Q296.27 1004.37 297.451 1003.03 Q299.696 1000.51 300.576 998.77 Q301.478 997.011 301.478 995.321 Q301.478 992.566 299.534 990.83 Q297.613 989.094 294.511 989.094 Q292.312 989.094 289.858 989.858 Q287.427 990.622 284.65 992.173 L284.65 987.451 Q287.474 986.316 289.927 985.738 Q292.381 985.159 294.418 985.159 Q299.789 985.159 302.983 987.844 Q306.177 990.529 306.177 995.02 Q306.177 997.15 305.367 999.071 Q304.58 1000.97 302.474 1003.56 Q301.895 1004.23 298.793 1007.45 Q295.691 1010.64 290.043 1016.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M316.224 985.784 L334.58 985.784 L334.58 989.719 L320.506 989.719 L320.506 998.191 Q321.524 997.844 322.543 997.682 Q323.562 997.497 324.58 997.497 Q330.367 997.497 333.747 1000.67 Q337.126 1003.84 337.126 1009.26 Q337.126 1014.83 333.654 1017.94 Q330.182 1021.02 323.862 1021.02 Q321.687 1021.02 319.418 1020.64 Q317.173 1020.27 314.765 1019.53 L314.765 1014.83 Q316.849 1015.97 319.071 1016.52 Q321.293 1017.08 323.77 1017.08 Q327.774 1017.08 330.112 1014.97 Q332.45 1012.87 332.45 1009.26 Q332.45 1005.64 330.112 1003.54 Q327.774 1001.43 323.77 1001.43 Q321.895 1001.43 320.02 1001.85 Q318.168 1002.27 316.224 1003.14 L316.224 985.784 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M356.339 988.863 Q352.728 988.863 350.899 992.427 Q349.094 995.969 349.094 1003.1 Q349.094 1010.21 350.899 1013.77 Q352.728 1017.31 356.339 1017.31 Q359.973 1017.31 361.779 1013.77 Q363.608 1010.21 363.608 1003.1 Q363.608 995.969 361.779 992.427 Q359.973 988.863 356.339 988.863 M356.339 985.159 Q362.149 985.159 365.205 989.765 Q368.284 994.349 368.284 1003.1 Q368.284 1011.83 365.205 1016.43 Q362.149 1021.02 356.339 1021.02 Q350.529 1021.02 347.45 1016.43 Q344.395 1011.83 344.395 1003.1 Q344.395 994.349 347.45 989.765 Q350.529 985.159 356.339 985.159 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M286.062 728.008 L304.418 728.008 L304.418 731.943 L290.344 731.943 L290.344 740.416 Q291.363 740.068 292.381 739.906 Q293.4 739.721 294.418 739.721 Q300.205 739.721 303.585 742.892 Q306.964 746.064 306.964 751.48 Q306.964 757.059 303.492 760.161 Q300.02 763.24 293.701 763.24 Q291.525 763.24 289.256 762.869 Q287.011 762.499 284.603 761.758 L284.603 757.059 Q286.687 758.193 288.909 758.749 Q291.131 759.304 293.608 759.304 Q297.613 759.304 299.951 757.198 Q302.288 755.092 302.288 751.48 Q302.288 747.869 299.951 745.763 Q297.613 743.656 293.608 743.656 Q291.733 743.656 289.858 744.073 Q288.006 744.49 286.062 745.369 L286.062 728.008 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M326.177 731.087 Q322.566 731.087 320.737 734.652 Q318.932 738.193 318.932 745.323 Q318.932 752.429 320.737 755.994 Q322.566 759.536 326.177 759.536 Q329.811 759.536 331.617 755.994 Q333.446 752.429 333.446 745.323 Q333.446 738.193 331.617 734.652 Q329.811 731.087 326.177 731.087 M326.177 727.383 Q331.987 727.383 335.043 731.99 Q338.122 736.573 338.122 745.323 Q338.122 754.05 335.043 758.656 Q331.987 763.24 326.177 763.24 Q320.367 763.24 317.288 758.656 Q314.233 754.05 314.233 745.323 Q314.233 736.573 317.288 731.99 Q320.367 727.383 326.177 727.383 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M356.339 731.087 Q352.728 731.087 350.899 734.652 Q349.094 738.193 349.094 745.323 Q349.094 752.429 350.899 755.994 Q352.728 759.536 356.339 759.536 Q359.973 759.536 361.779 755.994 Q363.608 752.429 363.608 745.323 Q363.608 738.193 361.779 734.652 Q359.973 731.087 356.339 731.087 M356.339 727.383 Q362.149 727.383 365.205 731.99 Q368.284 736.573 368.284 745.323 Q368.284 754.05 365.205 758.656 Q362.149 763.24 356.339 763.24 Q350.529 763.24 347.45 758.656 Q344.395 754.05 344.395 745.323 Q344.395 736.573 347.45 731.99 Q350.529 727.383 356.339 727.383 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M284.835 470.233 L307.057 470.233 L307.057 472.223 L294.511 504.793 L289.627 504.793 L301.432 474.168 L284.835 474.168 L284.835 470.233 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M316.224 470.233 L334.58 470.233 L334.58 474.168 L320.506 474.168 L320.506 482.64 Q321.524 482.293 322.543 482.131 Q323.562 481.946 324.58 481.946 Q330.367 481.946 333.747 485.117 Q337.126 488.288 337.126 493.705 Q337.126 499.283 333.654 502.385 Q330.182 505.464 323.862 505.464 Q321.687 505.464 319.418 505.094 Q317.173 504.723 314.765 503.982 L314.765 499.283 Q316.849 500.418 319.071 500.973 Q321.293 501.529 323.77 501.529 Q327.774 501.529 330.112 499.422 Q332.45 497.316 332.45 493.705 Q332.45 490.094 330.112 487.987 Q327.774 485.881 323.77 485.881 Q321.895 485.881 320.02 486.297 Q318.168 486.714 316.224 487.594 L316.224 470.233 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M356.339 473.311 Q352.728 473.311 350.899 476.876 Q349.094 480.418 349.094 487.547 Q349.094 494.654 350.899 498.219 Q352.728 501.76 356.339 501.76 Q359.973 501.76 361.779 498.219 Q363.608 494.654 363.608 487.547 Q363.608 480.418 361.779 476.876 Q359.973 473.311 356.339 473.311 M356.339 469.608 Q362.149 469.608 365.205 474.214 Q368.284 478.797 368.284 487.547 Q368.284 496.274 365.205 500.881 Q362.149 505.464 356.339 505.464 Q350.529 505.464 347.45 500.881 Q344.395 496.274 344.395 487.547 Q344.395 478.797 347.45 474.214 Q350.529 469.608 356.339 469.608 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M256.664 243.082 L264.303 243.082 L264.303 216.716 L255.992 218.383 L255.992 214.124 L264.256 212.457 L268.932 212.457 L268.932 243.082 L276.571 243.082 L276.571 247.017 L256.664 247.017 L256.664 243.082 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M296.015 215.536 Q292.404 215.536 290.576 219.101 Q288.77 222.642 288.77 229.772 Q288.77 236.878 290.576 240.443 Q292.404 243.985 296.015 243.985 Q299.65 243.985 301.455 240.443 Q303.284 236.878 303.284 229.772 Q303.284 222.642 301.455 219.101 Q299.65 215.536 296.015 215.536 M296.015 211.832 Q301.826 211.832 304.881 216.439 Q307.96 221.022 307.96 229.772 Q307.96 238.499 304.881 243.105 Q301.826 247.688 296.015 247.688 Q290.205 247.688 287.127 243.105 Q284.071 238.499 284.071 229.772 Q284.071 221.022 287.127 216.439 Q290.205 211.832 296.015 211.832 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M326.177 215.536 Q322.566 215.536 320.737 219.101 Q318.932 222.642 318.932 229.772 Q318.932 236.878 320.737 240.443 Q322.566 243.985 326.177 243.985 Q329.811 243.985 331.617 240.443 Q333.446 236.878 333.446 229.772 Q333.446 222.642 331.617 219.101 Q329.811 215.536 326.177 215.536 M326.177 211.832 Q331.987 211.832 335.043 216.439 Q338.122 221.022 338.122 229.772 Q338.122 238.499 335.043 243.105 Q331.987 247.688 326.177 247.688 Q320.367 247.688 317.288 243.105 Q314.233 238.499 314.233 229.772 Q314.233 221.022 317.288 216.439 Q320.367 211.832 326.177 211.832 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M356.339 215.536 Q352.728 215.536 350.899 219.101 Q349.094 222.642 349.094 229.772 Q349.094 236.878 350.899 240.443 Q352.728 243.985 356.339 243.985 Q359.973 243.985 361.779 240.443 Q363.608 236.878 363.608 229.772 Q363.608 222.642 361.779 219.101 Q359.973 215.536 356.339 215.536 M356.339 211.832 Q362.149 211.832 365.205 216.439 Q368.284 221.022 368.284 229.772 Q368.284 238.499 365.205 243.105 Q362.149 247.688 356.339 247.688 Q350.529 247.688 347.45 243.105 Q344.395 238.499 344.395 229.772 Q344.395 221.022 347.45 216.439 Q350.529 211.832 356.339 211.832 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip162)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,229.737 4017.76,229.737 \"/>\n<polyline clip-path=\"url(#clip162)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1248.78 458.259,1247.43 458.828,1246.07 459.396,1245.73 459.964,1244.25 460.533,1243.79 461.101,1243.26 461.669,1242.65 462.238,1241.92 462.806,1241.13 463.375,1239.21 463.943,1238.24 464.511,1237.17 465.08,1235.97 465.648,1234.69 466.216,1233.28 466.785,1230.73 467.353,1229.11 467.921,1227.33 468.49,1225.41 469.058,1223.35 469.626,1221.13 470.195,1218.76 470.763,1216.25 471.331,1212.55 471.9,1209.69 472.468,1206.61 473.036,1202.36 473.605,1198.9 474.173,1195.24 474.741,1191.36 475.31,1187.29 475.878,1180.98 476.446,1174.45 477.015,1166.82 477.583,1161.2 478.152,1156.34 478.72,1151.27 479.288,1146.04 479.857,1139.57 480.425,1130.76 480.993,1124.74 481.562,1117.4 482.13,1109.89 482.698,1103.24 483.267,1096.34 483.835,1088.25 484.403,1080.83 484.972,1069.11 485.54,1059.32 486.108,1049.54 486.677,1041.56 487.245,1033.36 487.813,1024.9 488.382,1013.24 488.95,1001.53 489.518,992.95 490.087,983.06 490.655,973.19 491.224,962.181 491.792,952.133 492.36,940.903 492.929,931.829 493.497,920.53 494.065,911.325 494.634,899.96 495.202,890.643 495.77,879.105 496.339,868.594 496.907,856.148 497.475,844.657 498.044,835.328 498.612,822.998 499.18,809.584 499.749,800.313 500.317,789.065 500.885,777.875 501.454,768.807 502.022,757.813 502.59,747.922 503.159,738.92 503.727,730.018 504.295,721.195 504.864,711.393 505.432,701.739 506.001,689.978 506.569,680.467 507.137,667.933 507.706,659.719 508.274,650.618 508.842,640.59 509.411,633.797 509.979,625.967 510.547,614.948 511.116,606.36 511.684,594.883 512.252,584.565 512.821,574.507 513.389,567.797 513.957,562.196 514.526,553.424 515.094,547.089 515.662,536.506 516.231,530.409 516.799,524.358 517.367,513.259 517.936,506.654 518.504,500.145 519.072,493.927 519.641,489.658 520.209,482.336 520.778,476.133 521.346,471.138 521.914,465.162 522.483,460.288 523.051,454.6 523.619,447.815 524.188,443.402 524.756,437.796 525.324,433.422 525.893,430.04 526.461,421.51 527.029,417.413 527.598,412.443 528.166,407.682 528.734,402.966 529.303,395.262 529.871,391.834 530.439,386.543 531.008,382.423 531.576,375.511 532.144,374.036 532.713,369.482 533.281,365.873 533.85,363.526 534.418,359.207 534.986,357.03 535.555,354.466 536.123,351.311 536.691,349.085 537.26,345.976 537.828,343.833 538.396,340.832 538.965,338.919 539.533,334.884 540.101,333.012 540.67,330.044 541.238,328.407 541.806,325.587 542.375,323.789 542.943,323.188 543.511,321.43 544.08,318.688 544.648,314.903 545.216,310.305 545.785,307.066 546.353,302.917 546.921,300.886 547.49,299.979 548.058,297.165 548.627,296.601 549.195,295.624 549.763,294.653 550.332,291.777 550.9,291.282 551.468,289.417 552.037,288.733 552.605,291.12 553.173,289.029 553.742,286.043 554.31,284.189 554.878,282.621 555.447,281.102 556.015,282.83 556.583,284.19 557.152,282.21 557.72,279.254 558.288,277.884 558.857,276.335 559.425,273.733 559.993,273.345 560.562,270.913 561.13,271.614 561.698,271.399 562.267,269.804 562.835,268.428 563.404,269.285 563.972,269.005 564.54,266.539 565.109,267.187 565.677,267.896 566.245,266.435 566.814,266.155 567.382,263.753 567.95,261.537 568.519,262.536 569.087,260.279 569.655,259.385 570.224,259.559 570.792,257.393 571.36,255.354 571.929,255.397 572.497,255.55 573.065,255.542 573.634,257.84 574.202,256.747 574.77,257.66 575.339,258.348 575.907,258.155 576.476,256.009 577.044,255.162 577.612,253.167 578.181,254.27 578.749,255.49 579.317,252.302 579.886,253.346 580.454,252.185 581.022,251.173 581.591,250.156 582.159,249.179 582.727,248.174 583.296,247.381 583.864,246.775 584.432,247.078 585.001,248.316 585.569,248.425 586.137,248.515 586.706,249.533 587.274,248.364 587.842,249.445 588.411,248.267 588.979,247.042 589.547,248.107 590.116,248.188 590.684,249.266 591.253,249.237 591.821,249.178 592.389,246.074 592.958,243.971 593.526,244.139 594.094,241.118 594.663,238.323 595.231,238.756 595.799,239.265 596.368,240.759 596.936,240.218 597.504,239.605 598.073,238.097 598.641,236.501 599.209,236.107 599.778,234.636 600.346,236.4 600.914,234.967 601.483,237.527 602.051,238.904 602.619,239.36 603.188,237.777 603.756,238.285 604.325,237.902 604.893,238.398 605.461,238.875 606.03,240.394 606.598,238.556 607.166,236.978 607.735,237.368 608.303,237.89 608.871,237.317 609.44,238.732 610.008,237.247 610.576,236.733 611.145,234.077 611.713,236.964 612.281,239.359 612.85,239.761 613.418,240.135 613.986,240.355 614.555,239.467 615.123,242.823 615.691,243.948 616.26,242.982 616.828,245.06 617.396,245.906 617.965,246.01 618.533,244.641 619.102,244.792 619.67,245.751 620.238,246.493 620.807,247.261 621.375,245.856 621.943,247.7 622.512,245.079 623.08,246.855 623.648,244.175 624.217,243.699 624.785,243.418 625.353,243.054 625.922,243.844 626.49,244.496 627.058,243.243 627.627,242.878 628.195,243.673 628.763,242.491 629.332,240.289 629.9,241.304 630.468,242.261 631.037,241.007 631.605,239.874 632.173,239.702 632.742,242.841 633.31,240.294 633.879,240.254 634.447,239.239 635.015,238.846 635.584,241.114 636.152,241.79 636.72,240.498 637.289,241.303 637.857,241.084 638.425,241.679 638.994,239.224 639.562,238.854 640.13,237.394 640.699,235.26 641.267,231.309 641.835,229.636 642.404,228.92 642.972,229.525 643.54,229.162 644.109,227.454 644.677,233.277 645.245,235.654 645.814,232.588 646.382,232.962 646.951,232.947 647.519,232.173 648.087,233.404 648.656,235.533 649.224,234.32 649.792,233.471 650.361,235.517 650.929,236.67 651.497,237.647 652.066,237.508 652.634,237.394 653.202,237.213 653.771,236.26 654.339,235.981 654.907,236.28 655.476,236.381 656.044,235.297 656.612,235.201 657.181,235.446 657.749,235.487 658.317,234.523 658.886,234.583 659.454,233.671 660.022,233.806 660.591,231.716 661.159,232.187 661.728,229.42 662.296,230.889 662.864,233.505 663.433,232.692 664.001,234.053 664.569,233.005 665.138,233.215 665.706,233.37 666.274,233.347 666.843,233.586 667.411,233.751 667.979,231.915 668.548,233.313 669.116,233.362 669.684,231.526 670.253,232.823 670.821,235.729 671.389,235.463 671.958,234.545 672.526,231.384 673.094,231.627 673.663,232.503 674.231,231.481 674.799,232.747 675.368,235.124 675.936,235.135 676.505,235.109 677.073,233.072 677.641,233.296 678.21,233.133 678.778,234.266 679.346,234.397 679.915,235.57 680.483,236.558 681.051,236.286 681.62,236.271 682.188,236.195 682.756,234.94 683.325,232.971 683.893,234.386 684.461,234.492 685.03,234.443 685.598,234.605 686.166,234.814 686.735,236.854 687.303,237.633 687.871,238.242 688.44,238.015 689.008,235.643 689.577,234.356 690.145,233.287 690.713,233.48 691.282,233.445 691.85,233.448 692.418,232.594 692.987,232.595 693.555,232.754 694.123,233.735 694.692,232.77 695.26,233.654 695.828,233.39 696.397,234.43 696.965,234.388 697.533,233.228 698.102,235.178 698.67,234.957 699.238,235.868 699.807,234.624 700.375,234.609 700.943,236.265 701.512,234.912 702.08,233.948 702.648,234.821 703.217,234.646 703.785,234.552 704.354,233.513 704.922,233.574 705.49,234.502 706.059,234.305 706.627,234.346 707.195,233.195 707.764,233.206 708.332,233.115 708.9,230.063 709.469,229.163 710.037,227.167 710.605,227.481 711.174,229.912 711.742,230.094 712.31,229.208 712.879,229.426 713.447,229.547 714.015,229.711 714.584,228.833 715.152,229.223 715.72,229.35 716.289,228.49 716.857,227.701 717.425,227.94 717.994,228.33 718.562,228.536 719.131,227.069 719.699,226.459 720.267,227.825 720.836,224.035 721.404,224.754 721.972,226.409 722.541,224.791 723.109,223.597 723.677,223.299 724.246,222.948 724.814,223.771 725.382,223.469 725.951,224.269 726.519,228.11 727.087,229.513 727.656,230.774 728.224,229.905 728.792,231.167 729.361,231.451 729.929,230.669 730.497,230.955 731.066,228.457 731.634,226.981 732.203,226.185 732.771,228.668 733.339,228.952 733.908,226.101 734.476,227.558 735.044,229.268 735.613,229.582 736.181,228.945 736.749,233.45 737.318,233.435 737.886,233.474 738.454,232.458 739.023,234.856 739.591,234.846 740.159,234.856 740.728,237.133 741.296,234.789 741.864,234.571 742.433,232.664 743.001,232.991 743.569,235.951 744.138,235.584 744.706,237.503 745.274,237.301 745.843,237.914 746.411,237.787 746.98,237.723 747.548,237.185 748.116,234.799 748.685,236.901 749.253,237.807 749.821,236.37 750.39,233.998 750.958,233.676 751.526,233.535 752.095,233.375 752.663,235.223 753.231,234.946 753.8,236.747 754.368,235.556 754.936,237.552 755.505,239.114 756.073,239.651 756.641,236.895 757.21,235.535 757.778,235.321 758.346,237.252 758.915,236.731 759.483,236.372 760.052,236.016 760.62,234.756 761.188,230.502 761.757,229.403 762.325,230.431 762.893,231.541 763.462,231.438 764.03,233.572 764.598,232.359 765.167,232.036 765.735,232.123 766.303,232.13 766.872,232.069 767.44,231.899 768.008,232.044 768.577,232.044 769.145,230.764 769.713,232.011 770.282,231.866 770.85,234.058 771.418,231.883 771.987,234.025 772.555,232.759 773.123,231.466 773.692,231.542 774.26,231.131 774.829,231.045 775.397,230.947 775.965,229.901 776.534,231.987 777.102,233.994 777.67,231.548 778.239,230.468 778.807,232.457 779.375,233.331 779.944,234.193 780.512,232.038 781.08,229.85 781.649,230.821 782.217,231.718 782.785,231.621 783.354,229.376 783.922,230.443 784.49,230.525 785.059,229.554 785.627,230.461 786.195,228.433 786.764,226.574 787.332,223.74 787.9,225.18 788.469,226.72 789.037,226.223 789.606,229.321 790.174,229.426 790.742,228.386 791.311,228.801 791.879,227.1 792.447,228.293 793.016,227.506 793.584,228.703 794.152,228.776 794.721,228.894 795.289,229.078 795.857,229.33 796.426,230.509 796.994,230.339 797.562,230.401 798.131,231.298 798.699,231.306 799.267,233.347 799.836,233.281 800.404,234.336 800.972,233.1 801.541,232.764 802.109,232.566 802.678,229.327 803.246,229.468 803.814,230.502 804.383,229.487 804.951,229.558 805.519,230.734 806.088,229.502 806.656,229.544 807.224,228.493 807.793,226.733 808.361,225.13 808.929,225.412 809.498,225.778 810.066,224.088 810.634,224.759 811.203,224.026 811.771,224.548 812.339,225.263 812.908,226.669 813.476,229.143 814.044,228.272 814.613,228.408 815.181,225.615 815.749,223.945 816.318,224.386 816.886,224.873 817.455,225.52 818.023,224.801 818.591,225.201 819.16,225.732 819.728,226.365 820.296,226.759 820.865,230.544 821.433,231.678 822.001,229.73 822.57,232.126 823.138,234.213 823.706,230.13 824.275,229.324 824.843,229.682 825.411,227.796 825.98,228.129 826.548,228.405 827.116,228.992 827.685,229.373 828.253,232.878 828.821,229.908 829.39,233.308 829.958,235.337 830.526,234.29 831.095,233.104 831.663,234.07 832.232,236.134 832.8,237.833 833.368,235.467 833.937,236.245 834.505,233.997 835.073,231.576 835.642,229.635 836.21,230.067 836.778,230.393 837.347,230.608 837.915,229.602 838.483,233.824 839.052,233.514 839.62,232.218 840.188,233.214 840.757,233.988 841.325,232.916 841.893,233.687 842.462,232.631 843.03,231.65 843.598,232.634 844.167,228.289 844.735,228.515 845.304,229.655 845.872,228.732 846.44,228.881 847.009,229.186 847.577,230.311 848.145,227.502 848.714,225.73 849.282,227.354 849.85,228.677 850.419,226.652 850.987,228.107 851.555,228.283 852.124,229.44 852.692,229.535 853.26,230.745 853.829,229.847 854.397,229.856 854.965,228.961 855.534,229.368 856.102,230.679 856.67,233.06 857.239,232.949 857.807,229.778 858.375,232.016 858.944,232.02 859.512,233.152 860.081,232.301 860.649,232.511 861.217,231.533 861.786,231.526 862.354,232.405 862.922,234.218 863.491,233.946 864.059,232.681 864.627,231.444 865.196,230.43 865.764,230.461 866.332,231.587 866.901,232.34 867.469,233.493 868.037,233.506 868.606,234.249 869.174,234.089 869.742,233.78 870.311,233.674 870.879,229.385 871.447,228.417 872.016,228.52 872.584,230.488 873.152,230.485 873.721,231.76 874.289,232.481 874.858,232.607 875.426,231.606 875.994,230.653 876.563,230.742 877.131,231.739 877.699,230.613 878.268,228.198 878.836,228.373 879.404,226.476 879.973,226.799 880.541,227.916 881.109,228.336 881.678,229.551 882.246,229.669 882.814,229.937 883.383,231.019 883.951,231.986 884.519,232.942 885.088,232.804 885.656,231.495 886.224,234.491 886.793,234.328 887.361,233.039 887.93,232.904 888.498,234.964 889.066,232.66 889.635,233.316 890.203,231.999 890.771,231.847 891.34,231.724 891.908,231.696 892.476,232.627 893.045,232.237 893.613,233.092 894.181,233.875 894.75,233.616 895.318,233.369 895.886,233.132 896.455,232.813 897.023,231.67 897.591,232.656 898.16,231.593 898.728,230.585 899.296,230.782 899.865,230.777 900.433,231.584 901.001,230.413 901.57,228.283 902.138,229.243 902.707,228.211 903.275,228.298 903.843,227.735 904.412,227.873 904.98,226.988 905.548,227.291 906.117,228.575 906.685,227.434 907.253,229.398 907.822,228.231 908.39,229.337 908.958,226.275 909.527,228.681 910.095,228.885 910.663,229.844 911.232,228.62 911.8,228.767 912.368,230.955 912.937,230.912 913.505,229.848 914.073,228.951 914.642,230.024 915.21,229.945 915.779,229.996 916.347,229.912 916.915,229.947 917.484,228.706 918.052,232.073 918.62,231.826 919.189,231.784 919.757,230.891 920.325,230.927 920.894,231.941 921.462,234.004 922.03,233.74 922.599,233.496 923.167,233.277 923.735,234.215 924.304,230.976 924.872,228.956 925.44,228.935 926.009,230.172 926.577,230.089 927.145,230.085 927.714,231.143 928.282,230.978 928.85,229.8 929.419,230.008 929.987,230.032 930.556,230.236 931.124,230.333 931.692,228.333 932.261,228.46 932.829,229.5 933.397,229.369 933.966,229.185 934.534,227.299 935.102,226.508 935.671,225.761 936.239,224.901 936.807,225.049 937.376,223.381 937.944,224.865 938.512,225.132 939.081,225.415 939.649,223.578 940.217,223.008 940.786,222.622 941.354,222.17 941.922,221.728 942.491,223.285 943.059,223.784 943.627,224.255 944.196,224.581 944.764,223.975 945.333,224.34 945.901,223.743 946.469,223.197 947.038,223.893 947.606,227.649 948.174,226.955 948.743,229.497 949.311,229.819 949.879,232.113 950.448,231.214 951.016,231.185 951.584,232.353 952.153,230.219 952.721,231.514 953.289,232.511 953.858,231.515 954.426,230.54 954.994,227.624 955.563,226.81 956.131,226.129 956.699,227.647 957.268,227.866 957.836,229.296 958.405,228.514 958.973,226.687 959.541,227.199 960.11,226.83 960.678,227.091 961.246,227.329 961.815,226.57 962.383,230.054 962.951,231.188 963.52,231.252 964.088,233.176 964.656,235.3 965.225,236.145 965.793,235.859 966.361,235.474 966.93,236.286 967.498,235.946 968.066,235.675 968.635,235.409 969.203,238.319 969.771,240.846 970.34,241.17 970.908,237.345 971.476,238.987 972.045,239.221 972.613,238.527 973.182,237.709 973.75,236.162 974.318,238.926 974.887,235.258 975.455,235.958 976.023,234.598 976.592,234.126 977.16,235.932 977.728,236.347 978.297,237.059 978.865,236.505 979.433,235.784 980.002,235.293 980.57,233.856 981.138,233.505 981.707,234.28 982.275,232.942 982.843,233.968 983.412,233.818 983.98,235.534 984.548,234.027 985.117,233.668 985.685,233.366 986.253,233.953 986.822,232.588 987.39,232.359 987.959,232.956 988.527,232.78 989.095,233.42 989.664,234.213 990.232,231.521 990.8,232.242 991.369,233.167 991.937,230.834 992.505,232.671 993.074,231.152 993.642,227.846 994.21,226.571 994.779,225.702 995.347,224.914 995.915,226.201 996.484,226.335 997.052,225.419 997.62,226.962 998.189,228.138 998.757,227.224 999.325,227.461 999.894,228.623 1000.46,226.511 1001.03,227.629 1001.6,229.75 1002.17,231.73 1002.74,230.316 1003.3,230.107 1003.87,229.9 1004.44,229.929 1005.01,228.715 1005.58,228.791 1006.15,229.779 1006.71,229.544 1007.28,228.401 1007.85,224.249 1008.42,221.571 1008.99,221.123 1009.56,221.635 1010.12,221.511 1010.69,223.301 1011.26,223.855 1011.83,224.288 1012.4,222.812 1012.97,224.256 1013.53,224.398 1014.1,225.681 1014.67,223.895 1015.24,223.174 1015.81,223.527 1016.38,224.913 1016.94,227.483 1017.51,226.647 1018.08,225.913 1018.65,225.339 1019.22,226.42 1019.79,227.321 1020.35,227.487 1020.92,225.516 1021.49,224.701 1022.06,227.275 1022.63,228.554 1023.2,230.678 1023.76,228.663 1024.33,231.923 1024.9,232.103 1025.47,234.142 1026.04,233.944 1026.61,234.828 1027.17,234.447 1027.74,234.009 1028.31,231.738 1028.88,231.422 1029.45,230.238 1030.02,227.231 1030.58,228.52 1031.15,230.841 1031.72,230.968 1032.29,232.059 1032.86,229.82 1033.43,232.87 1033.99,232.657 1034.56,232.504 1035.13,231.237 1035.7,230.095 1036.27,228.969 1036.84,226.939 1037.4,229.107 1037.97,230.107 1038.54,231.314 1039.11,231.296 1039.68,232.43 1040.25,234.458 1040.81,235.825 1041.38,236.486 1041.95,235.906 1042.52,236.564 1043.09,235.106 1043.66,233.496 1044.22,231.278 1044.79,232.042 1045.36,232.054 1045.93,231.94 1046.5,231.759 1047.07,231.742 1047.63,233.61 1048.2,233.209 1048.77,232.848 1049.34,233.532 1049.91,232.231 1050.48,233.121 1051.05,232.697 1051.61,232.302 1052.18,226.974 1052.75,227.986 1053.32,228.004 1053.89,228.963 1054.46,228.94 1055.02,227.576 1055.59,227.768 1056.16,228.872 1056.73,229.957 1057.3,230.147 1057.87,230.966 1058.43,230.774 1059,230.556 1059.57,229.351 1060.14,229.453 1060.71,228.27 1061.28,228.479 1061.84,229.35 1062.41,229.415 1062.98,228.275 1063.55,228.194 1064.12,229.481 1064.69,229.622 1065.25,230.496 1065.82,232.281 1066.39,232.122 1066.96,232.202 1067.53,231.168 1068.1,230.048 1068.66,229.003 1069.23,229.938 1069.8,228.856 1070.37,229.932 1070.94,229.088 1071.51,230.951 1072.07,229.086 1072.64,229.883 1073.21,228.926 1073.78,227.807 1074.35,229.037 1074.92,229.967 1075.48,230.005 1076.05,232.181 1076.62,230.824 1077.19,231.019 1077.76,230.993 1078.33,232.87 1078.89,232.343 1079.46,232.434 1080.03,233.222 1080.6,229.699 1081.17,227.784 1081.74,227.752 1082.3,226.784 1082.87,228.038 1083.44,228.167 1084.01,230.386 1084.58,231.315 1085.15,231.126 1085.71,227.881 1086.28,227.937 1086.85,227.919 1087.42,228.333 1087.99,226.495 1088.56,228.882 1089.12,229.862 1089.69,229.939 1090.26,228.891 1090.83,229.063 1091.4,229.128 1091.97,229.296 1092.53,231.358 1093.1,231.087 1093.67,228.689 1094.24,228.824 1094.81,228.624 1095.38,226.633 1095.94,228.874 1096.51,226.961 1097.08,228.134 1097.65,228.301 1098.22,229.487 1098.79,229.349 1099.35,229.207 1099.92,228.029 1100.49,229.125 1101.06,226.17 1101.63,225.533 1102.2,225.917 1102.76,225.418 1103.33,227.646 1103.9,229.937 1104.47,230.039 1105.04,232.074 1105.61,230.785 1106.17,230.529 1106.74,230.288 1107.31,231.288 1107.88,233.142 1108.45,232.027 1109.02,229.897 1109.58,228.846 1110.15,229.094 1110.72,231.082 1111.29,229.096 1111.86,230.121 1112.43,229.209 1112.99,227.393 1113.56,228.559 1114.13,230.584 1114.7,230.474 1115.27,229.537 1115.84,229.641 1116.4,229.612 1116.97,229.599 1117.54,230.564 1118.11,230.484 1118.68,231.611 1119.25,230.208 1119.81,229.214 1120.38,228.073 1120.95,229.358 1121.52,227.427 1122.09,227.537 1122.66,226.843 1123.23,227.954 1123.79,229.241 1124.36,231.521 1124.93,230.083 1125.5,228.968 1126.07,228.265 1126.64,227.358 1127.2,228.567 1127.77,230.023 1128.34,230.934 1128.91,232.225 1129.48,232.05 1130.05,230.861 1130.61,231.909 1131.18,230.568 1131.75,228.612 1132.32,227.687 1132.89,227.745 1133.46,229.027 1134.02,229.265 1134.59,230.445 1135.16,228.225 1135.73,228.363 1136.3,231.717 1136.87,231.852 1137.43,232.787 1138,230.58 1138.57,231.612 1139.14,232.526 1139.71,232.175 1140.28,231.372 1140.84,232.287 1141.41,234.198 1141.98,231.672 1142.55,231.485 1143.12,231.198 1143.69,231.063 1144.25,230.077 1144.82,233.013 1145.39,231.76 1145.96,232.475 1146.53,231.294 1147.1,229.283 1147.66,229.433 1148.23,229.459 1148.8,229.259 1149.37,231.382 1149.94,229.284 1150.51,232.764 1151.07,232.463 1151.64,232.521 1152.21,232.417 1152.78,233.298 1153.35,233.021 1153.92,229.819 1154.48,227.797 1155.05,227.983 1155.62,225.101 1156.19,226.217 1156.76,226.491 1157.33,226.906 1157.89,226.969 1158.46,227.15 1159.03,226.353 1159.6,225.522 1160.17,227.883 1160.74,228.084 1161.3,228.415 1161.87,227.253 1162.44,227.503 1163.01,230.775 1163.58,231.791 1164.15,232.517 1164.71,232.46 1165.28,235.088 1165.85,234.811 1166.42,234.471 1166.99,233.937 1167.56,232.788 1168.12,233.533 1168.69,232.388 1169.26,234.205 1169.83,232.942 1170.4,232.706 1170.97,231.329 1171.53,231.405 1172.1,230.144 1172.67,230.945 1173.24,228.865 1173.81,227.798 1174.38,231.946 1174.94,229.923 1175.51,228.904 1176.08,230.001 1176.65,230.862 1177.22,231.691 1177.79,231.322 1178.35,229.007 1178.92,228.969 1179.49,227.935 1180.06,228.23 1180.63,229.156 1181.2,229.925 1181.76,230.056 1182.33,228.116 1182.9,230.254 1183.47,232.342 1184.04,232.029 1184.61,230.422 1185.17,229.264 1185.74,229.366 1186.31,226.111 1186.88,226.174 1187.45,225.456 1188.02,225.751 1188.58,224.999 1189.15,226.288 1189.72,224.239 1190.29,224.19 1190.86,224.732 1191.43,225.132 1192,225.557 1192.56,225.99 1193.13,226.033 1193.7,226.144 1194.27,226.44 1194.84,230.923 1195.41,230.88 1195.97,230.939 1196.54,229.927 1197.11,227.839 1197.68,230.211 1198.25,231.47 1198.82,230.384 1199.38,231.185 1199.95,231.124 1200.52,230.015 1201.09,230.853 1201.66,230.855 1202.23,230.656 1202.79,228.565 1203.36,228.672 1203.93,225.735 1204.5,224.847 1205.07,225.499 1205.64,227.984 1206.2,229.139 1206.77,229.362 1207.34,228.47 1207.91,228.686 1208.48,228.835 1209.05,226.894 1209.61,226.169 1210.18,227.446 1210.75,227.697 1211.32,229.963 1211.89,230.046 1212.46,233.316 1213.02,235.225 1213.59,234.942 1214.16,235.624 1214.73,236.31 1215.3,235.867 1215.87,234.334 1216.43,234.319 1217,233.082 1217.57,232.868 1218.14,231.688 1218.71,231.507 1219.28,231.248 1219.84,231.366 1220.41,230.227 1220.98,230.303 1221.55,230.405 1222.12,230.246 1222.69,232.546 1223.25,232.549 1223.82,232.113 1224.39,231.961 1224.96,234.032 1225.53,233.524 1226.1,233.131 1226.66,232.863 1227.23,229.512 1227.8,228.356 1228.37,229.573 1228.94,230.443 1229.51,230.383 1230.07,229.987 1230.64,229.956 1231.21,232.217 1231.78,233.052 1232.35,230.526 1232.92,230.469 1233.48,231.49 1234.05,231.274 1234.62,230.184 1235.19,231.475 1235.76,233.455 1236.33,232.904 1236.89,233.619 1237.46,233.257 1238.03,232.986 1238.6,231.381 1239.17,231.251 1239.74,232.045 1240.3,231.78 1240.87,232.571 1241.44,235.524 1242.01,236.277 1242.58,232.645 1243.15,232.339 1243.71,231.817 1244.28,229.485 1244.85,229.508 1245.42,229.325 1245.99,227.335 1246.56,227.295 1247.12,226.397 1247.69,225.346 1248.26,226.36 1248.83,227.548 1249.4,228.689 1249.97,228.627 1250.53,227.705 1251.1,228.614 1251.67,229.5 1252.24,230.656 1252.81,228.239 1253.38,226.089 1253.94,227.374 1254.51,226.335 1255.08,225.673 1255.65,225.934 1256.22,224.005 1256.79,226.413 1257.35,226.555 1257.92,226.607 1258.49,226.947 1259.06,226.974 1259.63,226.064 1260.2,227.351 1260.76,227.544 1261.33,228.529 1261.9,225.459 1262.47,227.076 1263.04,227.138 1263.61,228.172 1264.18,227.149 1264.74,226.208 1265.31,226.688 1265.88,228.983 1266.45,230.171 1267.02,229.156 1267.59,231.298 1268.15,230.2 1268.72,230.115 1269.29,232.171 1269.86,232.043 1270.43,231.836 1271,230.787 1271.56,230.647 1272.13,229.534 1272.7,228.612 1273.27,230.873 1273.84,230.888 1274.41,230.9 1274.97,230.839 1275.54,228.908 1276.11,230.122 1276.68,230.973 1277.25,230.001 1277.82,227.923 1278.38,228.305 1278.95,228.614 1279.52,228.676 1280.09,228.862 1280.66,226.764 1281.23,227.92 1281.79,227.236 1282.36,225.305 1282.93,225.642 1283.5,224.771 1284.07,225.292 1284.64,225.713 1285.2,225.867 1285.77,226.216 1286.34,224.657 1286.91,226.123 1287.48,227.496 1288.05,228.543 1288.61,227.537 1289.18,227.853 1289.75,228.999 1290.32,227.894 1290.89,228.217 1291.46,225.258 1292.02,226.802 1292.59,224.007 1293.16,226.522 1293.73,227.921 1294.3,228.151 1294.87,225.083 1295.43,225.639 1296,224.911 1296.57,225.392 1297.14,225.847 1297.71,228.298 1298.28,229.644 1298.84,231.843 1299.41,233.874 1299.98,235.834 1300.55,234.235 1301.12,233.938 1301.69,233.737 1302.25,235.673 1302.82,236.436 1303.39,235.991 1303.96,235.615 1304.53,234.033 1305.1,231.762 1305.66,231.661 1306.23,232.363 1306.8,233.418 1307.37,232.174 1307.94,232.237 1308.51,230.065 1309.07,232.101 1309.64,232.94 1310.21,232.681 1310.78,232.447 1311.35,232.284 1311.92,231.132 1312.48,231.097 1313.05,231.008 1313.62,232.98 1314.19,232.815 1314.76,235.505 1315.33,236.326 1315.89,235.597 1316.46,235.231 1317.03,233.575 1317.6,232.15 1318.17,232.969 1318.74,233.389 1319.3,234.283 1319.87,230.898 1320.44,229.626 1321.01,226.765 1321.58,226.669 1322.15,226.978 1322.71,227.07 1323.28,228.404 1323.85,228.441 1324.42,229.559 1324.99,227.353 1325.56,228.43 1326.12,227.479 1326.69,226.58 1327.26,226.711 1327.83,226.776 1328.4,226.934 1328.97,227.312 1329.53,225.309 1330.1,226.526 1330.67,224.588 1331.24,227.007 1331.81,226.994 1332.38,228.263 1332.94,229.544 1333.51,229.647 1334.08,227.375 1334.65,226.657 1335.22,227.686 1335.79,227.817 1336.36,227.078 1336.92,228.23 1337.49,231.436 1338.06,231.475 1338.63,231.209 1339.2,233.141 1339.77,231.8 1340.33,232.677 1340.9,229.565 1341.47,227.373 1342.04,225.547 1342.61,224.927 1343.18,226.313 1343.74,227.598 1344.31,227.618 1344.88,229.851 1345.45,229.996 1346.02,230.147 1346.59,227.972 1347.15,227.992 1347.72,225.859 1348.29,226.157 1348.86,227.462 1349.43,229.636 1350,228.574 1350.56,227.524 1351.13,227.722 1351.7,228.904 1352.27,226.79 1352.84,226.069 1353.41,227.337 1353.97,227.577 1354.54,226.692 1355.11,228.103 1355.68,230.367 1356.25,230.586 1356.82,229.667 1357.38,229.764 1357.95,228.509 1358.52,229.762 1359.09,230.818 1359.66,230.973 1360.23,232.13 1360.79,230.862 1361.36,232.861 1361.93,230.503 1362.5,230.466 1363.07,229.571 1363.64,231.886 1364.2,232.818 1364.77,231.617 1365.34,231.481 1365.91,233.508 1366.48,235.526 1367.05,234.131 1367.61,232.7 1368.18,232.552 1368.75,231.221 1369.32,232.13 1369.89,230.779 1370.46,229.747 1371.02,228.87 1371.59,229.089 1372.16,229.353 1372.73,229.259 1373.3,231.428 1373.87,229.191 1374.43,230.256 1375,232.296 1375.57,231.169 1376.14,231.012 1376.71,231.859 1377.28,231.534 1377.84,231.284 1378.41,229.171 1378.98,229.187 1379.55,229.026 1380.12,230.235 1380.69,229.177 1381.25,229.056 1381.82,228.952 1382.39,228.856 1382.96,227.958 1383.53,232.247 1384.1,229.018 1384.66,227.178 1385.23,226.52 1385.8,228.868 1386.37,230.319 1386.94,229.37 1387.51,229.571 1388.07,229.555 1388.64,228.367 1389.21,229.548 1389.78,228.291 1390.35,227.313 1390.92,226.442 1391.48,223.3 1392.05,222.968 1392.62,223.569 1393.19,226.277 1393.76,225.655 1394.33,224.925 1394.89,224.431 1395.46,228.001 1396.03,227.958 1396.6,228.341 1397.17,225.24 1397.74,226.606 1398.3,227.962 1398.87,227.329 1399.44,227.531 1400.01,228.81 1400.58,229.763 1401.15,231.031 1401.71,231.091 1402.28,230.065 1402.85,231.934 1403.42,232.007 1403.99,232.171 1404.56,235.21 1405.13,233.955 1405.69,234.693 1406.26,235.434 1406.83,235.205 1407.4,233.821 1407.97,234.75 1408.54,236.596 1409.1,236.166 1409.67,237.752 1410.24,236.369 1410.81,235.903 1411.38,235.619 1411.95,235.274 1412.51,235.076 1413.08,236.814 1413.65,236.152 1414.22,234.694 1414.79,235.299 1415.36,235.715 1415.92,235.083 1416.49,233.529 1417.06,233.378 1417.63,233.09 1418.2,234.902 1418.77,233.411 1419.33,232.074 1419.9,232.748 1420.47,232.292 1421.04,233.942 1421.61,232.498 1422.18,232.244 1422.74,231.728 1423.31,230.282 1423.88,228.111 1424.45,226.111 1425.02,223.493 1425.59,223.71 1426.15,224.094 1426.72,222.451 1427.29,222.863 1427.86,222.357 1428.43,223.848 1429,223.202 1429.56,223.619 1430.13,223.879 1430.7,225.484 1431.27,226.678 1431.84,226.727 1432.41,226.893 1432.97,226.166 1433.54,228.558 1434.11,230.665 1434.68,230.449 1435.25,232.401 1435.82,230.274 1436.38,230.06 1436.95,231.258 1437.52,231.175 1438.09,232.112 1438.66,230.92 1439.23,230.629 1439.79,229.689 1440.36,229.758 1440.93,228.666 1441.5,229.682 1442.07,228.674 1442.64,230.623 1443.2,232.658 1443.77,234.334 1444.34,233.755 1444.91,235.302 1445.48,233.845 1446.05,232.493 1446.61,233.339 1447.18,232.06 1447.75,232.948 1448.32,232.609 1448.89,231.522 1449.46,233.549 1450.02,232.273 1450.59,232.143 1451.16,231.08 1451.73,230.983 1452.3,230.697 1452.87,230.526 1453.43,229.327 1454,229.202 1454.57,229.129 1455.14,229.204 1455.71,229.073 1456.28,229.213 1456.84,229.169 1457.41,230.081 1457.98,230.104 1458.55,227.933 1459.12,228.143 1459.69,229.299 1460.25,231.504 1460.82,230.459 1461.39,230.507 1461.96,231.282 1462.53,231.892 1463.1,231.588 1463.66,231.574 1464.23,231.346 1464.8,230.215 1465.37,225.819 1465.94,226.008 1466.51,226.268 1467.07,227.65 1467.64,227.582 1468.21,225.438 1468.78,224.846 1469.35,224.115 1469.92,226.487 1470.48,227.867 1471.05,226.724 1471.62,228.958 1472.19,227.659 1472.76,227.748 1473.33,228.575 1473.89,225.528 1474.46,227.837 1475.03,228.034 1475.6,228.171 1476.17,227.257 1476.74,226.333 1477.31,225.554 1477.87,228.781 1478.44,227.662 1479.01,227.905 1479.58,226.199 1480.15,226.381 1480.72,227.542 1481.28,227.611 1481.85,227.872 1482.42,230.033 1482.99,228.844 1483.56,229.957 1484.13,230.281 1484.69,230.426 1485.26,226.346 1485.83,224.611 1486.4,226.253 1486.97,225.531 1487.54,225.929 1488.1,227.182 1488.67,226.421 1489.24,226.689 1489.81,223.866 1490.38,224.286 1490.95,222.75 1491.51,223.335 1492.08,225.762 1492.65,226.12 1493.22,225.519 1493.79,227.081 1494.36,226.504 1494.92,224.989 1495.49,224.558 1496.06,224.913 1496.63,229.565 1497.2,231.933 1497.77,232.004 1498.33,228.881 1498.9,229.159 1499.47,233.585 1500.04,232.394 1500.61,233.375 1501.18,233.218 1501.74,233.19 1502.31,234.005 1502.88,232.746 1503.45,234.592 1504.02,234.609 1504.59,234.423 1505.15,233.195 1505.72,232.835 1506.29,232.91 1506.86,231.615 1507.43,232.647 1508,231.395 1508.56,232.248 1509.13,229.969 1509.7,231.93 1510.27,232.826 1510.84,233.67 1511.41,233.326 1511.97,233.161 1512.54,234.116 1513.11,234.738 1513.68,233.252 1514.25,233.131 1514.82,232.912 1515.38,234.862 1515.95,233.397 1516.52,233.308 1517.09,233.955 1517.66,233.499 1518.23,231.323 1518.79,232.099 1519.36,230.743 1519.93,230.668 1520.5,229.457 1521.07,228.317 1521.64,228.417 1522.2,229.47 1522.77,229.446 1523.34,230.299 1523.91,231.099 1524.48,230 1525.05,232.9 1525.61,232.734 1526.18,233.424 1526.75,232.101 1527.32,229.908 1527.89,227.703 1528.46,228.899 1529.02,232.049 1529.59,231.704 1530.16,234.659 1530.73,233.287 1531.3,231.922 1531.87,230.609 1532.43,230.294 1533,227.391 1533.57,226.301 1534.14,225.353 1534.71,226.766 1535.28,227.004 1535.84,226.213 1536.41,227.497 1536.98,227.689 1537.55,226.758 1538.12,224.675 1538.69,225.082 1539.25,225.238 1539.82,226.639 1540.39,226.82 1540.96,227.26 1541.53,227.562 1542.1,227.719 1542.66,226.69 1543.23,225.872 1543.8,228.175 1544.37,228.257 1544.94,227.41 1545.51,227.635 1546.08,226.77 1546.64,227.969 1547.21,227.072 1547.78,227.429 1548.35,228.717 1548.92,228.881 1549.49,227.19 1550.05,228.441 1550.62,232.645 1551.19,234.386 1551.76,237.093 1552.33,237.758 1552.9,235.122 1553.46,234.94 1554.03,234.477 1554.6,235.3 1555.17,237.799 1555.74,238.245 1556.31,237.497 1556.87,236.099 1557.44,237.616 1558.01,238.034 1558.58,237.328 1559.15,236.344 1559.72,235.933 1560.28,234.357 1560.85,234.002 1561.42,232.654 1561.99,231.491 1562.56,232.329 1563.13,231.931 1563.69,233.605 1564.26,230.086 1564.83,230.036 1565.4,227.673 1565.97,229.717 1566.54,228.64 1567.1,228.374 1567.67,227.565 1568.24,228.748 1568.81,229.647 1569.38,230.443 1569.95,230.332 1570.51,230.129 1571.08,228.97 1571.65,228.875 1572.22,227.637 1572.79,227.989 1573.36,228.957 1573.92,228.992 1574.49,229.008 1575.06,230.131 1575.63,229.167 1576.2,229.893 1576.77,229.793 1577.33,228.575 1577.9,228.612 1578.47,230.637 1579.04,229.387 1579.61,230.253 1580.18,230.069 1580.74,230.832 1581.31,231.471 1581.88,232.064 1582.45,232.836 1583.02,230.621 1583.59,230.256 1584.15,228.229 1584.72,228.105 1585.29,228.031 1585.86,227.984 1586.43,227.98 1587,229.052 1587.56,228.892 1588.13,227.859 1588.7,229.002 1589.27,226.807 1589.84,226.964 1590.41,226.079 1590.97,227.07 1591.54,227.129 1592.11,227.215 1592.68,229.276 1593.25,229.278 1593.82,229.255 1594.38,228.188 1594.95,230.273 1595.52,229.089 1596.09,229.871 1596.66,228.743 1597.23,229.714 1597.79,228.738 1598.36,228.632 1598.93,229.566 1599.5,228.524 1600.07,229.49 1600.64,229.438 1601.2,231.552 1601.77,231.327 1602.34,229.208 1602.91,229.342 1603.48,227.229 1604.05,227.328 1604.61,227.344 1605.18,227.409 1605.75,228.7 1606.32,226.79 1606.89,225.97 1607.46,224.973 1608.02,225.506 1608.59,226.952 1609.16,226.037 1609.73,226.342 1610.3,225.511 1610.87,223.983 1611.43,226.35 1612,224.48 1612.57,221.727 1613.14,223.122 1613.71,221.529 1614.28,221.216 1614.84,222.97 1615.41,224.383 1615.98,224.733 1616.55,226.062 1617.12,230.648 1617.69,228.542 1618.26,227.582 1618.82,228.751 1619.39,228.834 1619.96,227.814 1620.53,229.924 1621.1,230.164 1621.67,230.36 1622.23,230.427 1622.8,230.565 1623.37,234.807 1623.94,234.604 1624.51,236.402 1625.08,234.957 1625.64,234.547 1626.21,236.233 1626.78,235.771 1627.35,236.456 1627.92,235.895 1628.49,234.595 1629.05,232.141 1629.62,231.067 1630.19,230.218 1630.76,229.031 1631.33,229.22 1631.9,229.028 1632.46,229.01 1633.03,229.015 1633.6,229.137 1634.17,229.146 1634.74,229.148 1635.31,228.052 1635.87,228.051 1636.44,228.914 1637.01,228.145 1637.58,228.322 1638.15,227.525 1638.72,228.763 1639.28,229.941 1639.85,227.839 1640.42,225.094 1640.99,226.544 1641.56,225.948 1642.13,225.421 1642.69,226.642 1643.26,229.038 1643.83,229.246 1644.4,228.447 1644.97,227.724 1645.54,228.054 1646.1,231.285 1646.67,233.454 1647.24,233.233 1647.81,230.689 1648.38,230.625 1648.95,229.526 1649.51,229.595 1650.08,229.815 1650.65,229.758 1651.22,228.743 1651.79,228.669 1652.36,227.735 1652.92,226.883 1653.49,229.11 1654.06,228.168 1654.63,228.296 1655.2,227.675 1655.77,228.83 1656.33,230.911 1656.9,232.957 1657.47,231.864 1658.04,232.973 1658.61,231.637 1659.18,230.756 1659.74,229.443 1660.31,229.353 1660.88,229.569 1661.45,228.555 1662.02,226.728 1662.59,228.922 1663.15,230.089 1663.72,231.007 1664.29,232.931 1664.86,230.463 1665.43,228.458 1666,228.669 1666.56,226.534 1667.13,226.951 1667.7,226.129 1668.27,227.274 1668.84,226.612 1669.41,227.699 1669.97,228.714 1670.54,231.857 1671.11,231.895 1671.68,232.84 1672.25,231.701 1672.82,233.937 1673.38,234.613 1673.95,236.067 1674.52,234.563 1675.09,235.432 1675.66,231.869 1676.23,232.895 1676.79,233.55 1677.36,230.225 1677.93,229.021 1678.5,229.962 1679.07,229.863 1679.64,230.708 1680.2,231.677 1680.77,230.668 1681.34,231.588 1681.91,232.41 1682.48,234.11 1683.05,234.777 1683.61,235.297 1684.18,233.848 1684.75,231.255 1685.32,230.068 1685.89,231.143 1686.46,231.845 1687.02,229.78 1687.59,227.57 1688.16,228.844 1688.73,227.82 1689.3,227.816 1689.87,227.002 1690.44,227.166 1691,228.093 1691.57,228.155 1692.14,229.358 1692.71,229.404 1693.28,230.27 1693.85,231.341 1694.41,231.112 1694.98,230.064 1695.55,227.921 1696.12,227.129 1696.69,228.333 1697.26,230.367 1697.82,231.443 1698.39,228.278 1698.96,229.433 1699.53,229.323 1700.1,229.283 1700.67,230.43 1701.23,230.543 1701.8,231.47 1702.37,232.222 1702.94,232.235 1703.51,231.937 1704.08,230.549 1704.64,230.141 1705.21,228.959 1705.78,230.916 1706.35,232.712 1706.92,231.651 1707.49,229.314 1708.05,228.044 1708.62,229.178 1709.19,229.342 1709.76,228.431 1710.33,229.703 1710.9,228.707 1711.46,227.432 1712.03,226.222 1712.6,227.158 1713.17,228.598 1713.74,228.911 1714.31,228.227 1714.87,227.435 1715.44,226.664 1716.01,228.157 1716.58,230.321 1717.15,230.163 1717.72,232.129 1718.28,231.973 1718.85,231.72 1719.42,232.515 1719.99,231.122 1720.56,229.973 1721.13,229.851 1721.69,227.715 1722.26,227.002 1722.83,230.082 1723.4,229.061 1723.97,227.211 1724.54,226.434 1725.1,224.348 1725.67,222.702 1726.24,222.135 1726.81,221.468 1727.38,219.895 1727.95,221.61 1728.51,223.037 1729.08,223.456 1729.65,221.025 1730.22,220.593 1730.79,221.349 1731.36,222.1 1731.92,222.682 1732.49,224.296 1733.06,224.793 1733.63,224.463 1734.2,224.925 1734.77,224.382 1735.33,224.529 1735.9,225.08 1736.47,224.507 1737.04,225.093 1737.61,225.445 1738.18,227.108 1738.74,228.551 1739.31,229.998 1739.88,230.35 1740.45,230.424 1741.02,230.61 1741.59,231.005 1742.15,232.345 1742.72,231.231 1743.29,231.233 1743.86,231.419 1744.43,233.301 1745,234.371 1745.56,235.123 1746.13,233.659 1746.7,234.594 1747.27,236.342 1747.84,238.994 1748.41,239.43 1748.97,238.072 1749.54,236.554 1750.11,236.327 1750.68,236.895 1751.25,236.499 1751.82,235.055 1752.38,235.707 1752.95,235.289 1753.52,235.95 1754.09,234.595 1754.66,234.399 1755.23,234.222 1755.79,234.879 1756.36,234.694 1756.93,236.191 1757.5,235.513 1758.07,234.057 1758.64,235.653 1759.21,234.13 1759.77,234.736 1760.34,234.506 1760.91,232.062 1761.48,233.982 1762.05,230.645 1762.62,230.491 1763.18,230.498 1763.75,229.485 1764.32,229.458 1764.89,229.13 1765.46,228.925 1766.03,231.01 1766.59,230.694 1767.16,230.614 1767.73,231.456 1768.3,232.271 1768.87,232.058 1769.44,232.825 1770,233.422 1770.57,230.864 1771.14,231.846 1771.71,231.572 1772.28,231.437 1772.85,231.168 1773.41,231.12 1773.98,231.024 1774.55,231.892 1775.12,230.778 1775.69,231.57 1776.26,232.515 1776.82,232.097 1777.39,232.009 1777.96,230.532 1778.53,230.261 1779.1,231.14 1779.67,229.898 1780.23,230.826 1780.8,231.663 1781.37,231.353 1781.94,232.284 1782.51,230.977 1783.08,230.746 1783.64,226.61 1784.21,227.684 1784.78,226.771 1785.35,227.775 1785.92,226.924 1786.49,224.981 1787.05,225.417 1787.62,225.53 1788.19,224.862 1788.76,223.08 1789.33,221.456 1789.9,222.039 1790.46,223.716 1791.03,220.979 1791.6,222.853 1792.17,223.324 1792.74,223.831 1793.31,224.216 1793.87,224.64 1794.44,222.877 1795.01,222.297 1795.58,221.869 1796.15,226.522 1796.72,225.58 1797.28,228.089 1797.85,227.269 1798.42,229.605 1798.99,229.609 1799.56,229.652 1800.13,229.824 1800.69,227.785 1801.26,228.098 1801.83,228.379 1802.4,230.348 1802.97,229.357 1803.54,229.575 1804.1,228.658 1804.67,227.849 1805.24,228.097 1805.81,230.346 1806.38,230.316 1806.95,231.455 1807.51,232.535 1808.08,233.129 1808.65,233 1809.22,229.708 1809.79,227.665 1810.36,226.929 1810.92,227.055 1811.49,227.205 1812.06,227.308 1812.63,225.407 1813.2,225.638 1813.77,226.823 1814.33,228.185 1814.9,230.49 1815.47,227.447 1816.04,226.625 1816.61,226.649 1817.18,227.065 1817.74,228.473 1818.31,229.666 1818.88,229.856 1819.45,230.884 1820.02,232.044 1820.59,232.153 1821.15,231.22 1821.72,231.136 1822.29,231.195 1822.86,230.101 1823.43,231.327 1824,229.052 1824.56,230.189 1825.13,232.288 1825.7,232.04 1826.27,232.013 1826.84,231.827 1827.41,229.847 1827.97,230.849 1828.54,230.907 1829.11,228.722 1829.68,227.81 1830.25,228.325 1830.82,226.346 1831.39,228.72 1831.95,229.087 1832.52,230.015 1833.09,229.995 1833.66,230.2 1834.23,233.365 1834.8,232.054 1835.36,232.762 1835.93,232.473 1836.5,232.354 1837.07,231.166 1837.64,232.192 1838.21,232.15 1838.77,232.07 1839.34,230.742 1839.91,228.643 1840.48,229.652 1841.05,229.669 1841.62,227.638 1842.18,227.764 1842.75,227.814 1843.32,227.015 1843.89,228.208 1844.46,230.564 1845.03,232.731 1845.59,229.459 1846.16,228.424 1846.73,228.605 1847.3,228.571 1847.87,228.758 1848.44,228.828 1849,229.983 1849.57,230.29 1850.14,230.399 1850.71,231.544 1851.28,232.285 1851.85,232.072 1852.41,230.876 1852.98,229.787 1853.55,228.586 1854.12,228.845 1854.69,232.178 1855.26,230.189 1855.82,232.07 1856.39,230.874 1856.96,230.733 1857.53,229.64 1858.1,229.823 1858.67,228.881 1859.23,227.015 1859.8,230.396 1860.37,229.451 1860.94,228.632 1861.51,226.718 1862.08,227.093 1862.64,228.507 1863.21,227.7 1863.78,224.731 1864.35,224.054 1864.92,223.55 1865.49,222.066 1866.05,222.704 1866.62,226.357 1867.19,227.567 1867.76,227.757 1868.33,227.819 1868.9,228.129 1869.46,229.495 1870.03,229.662 1870.6,227.705 1871.17,230.244 1871.74,230.277 1872.31,233.359 1872.87,233.081 1873.44,234.014 1874.01,233.606 1874.58,234.363 1875.15,233.976 1875.72,232.577 1876.28,232.595 1876.85,232.45 1877.42,232.332 1877.99,230.976 1878.56,230.672 1879.13,229.566 1879.69,230.83 1880.26,229.068 1880.83,231.217 1881.4,232.077 1881.97,229.82 1882.54,229.897 1883.1,227.994 1883.67,230.154 1884.24,230.095 1884.81,227.09 1885.38,226.279 1885.95,225.712 1886.51,224.986 1887.08,223.167 1887.65,222.618 1888.22,224.023 1888.79,224.387 1889.36,223.874 1889.92,224.366 1890.49,222.737 1891.06,224.575 1891.63,225.026 1892.2,226.575 1892.77,227.661 1893.33,225.012 1893.9,225.518 1894.47,227.84 1895.04,228.16 1895.61,228.291 1896.18,228.599 1896.74,227.852 1897.31,229.465 1897.88,231.684 1898.45,233.718 1899.02,235.592 1899.59,232.146 1900.16,234.054 1900.72,232.764 1901.29,233.882 1901.86,230.547 1902.43,229.437 1903,230.622 1903.57,228.612 1904.13,229.906 1904.7,227.865 1905.27,229.331 1905.84,228.51 1906.41,227.66 1906.98,226.953 1907.54,229.344 1908.11,231.668 1908.68,232.799 1909.25,232.63 1909.82,233.327 1910.39,234.104 1910.95,234.97 1911.52,236.904 1912.09,235.511 1912.66,238.617 1913.23,238.158 1913.8,238.559 1914.36,237.603 1914.93,237.199 1915.5,239.965 1916.07,238.097 1916.64,237.37 1917.21,235.639 1917.77,237.242 1918.34,234.952 1918.91,234.461 1919.48,235.027 1920.05,235.503 1920.62,235.143 1921.18,233.565 1921.75,232.1 1922.32,234.006 1922.89,233.637 1923.46,232.163 1924.03,229.701 1924.59,230.75 1925.16,229.731 1925.73,230.881 1926.3,231.712 1926.87,229.422 1927.44,229.354 1928,228.491 1928.57,229.345 1929.14,228.256 1929.71,230.377 1930.28,228.217 1930.85,228.233 1931.41,229.11 1931.98,228.269 1932.55,228.22 1933.12,229.422 1933.69,229.514 1934.26,230.449 1934.82,231.511 1935.39,232.325 1935.96,232.119 1936.53,232.896 1937.1,233.662 1937.67,231.209 1938.23,228.76 1938.8,231.038 1939.37,232.767 1939.94,232.545 1940.51,231.155 1941.08,231.097 1941.64,229.818 1942.21,228.601 1942.78,229.942 1943.35,228.882 1943.92,228.682 1944.49,228.792 1945.05,227.921 1945.62,229.122 1946.19,230.077 1946.76,230.046 1947.33,231.168 1947.9,233.115 1948.46,232.958 1949.03,232.618 1949.6,232.184 1950.17,230.652 1950.74,230.586 1951.31,230.384 1951.87,225.076 1952.44,222.265 1953.01,223.796 1953.58,224.242 1954.15,224.591 1954.72,225.038 1955.28,225.473 1955.85,226.787 1956.42,225.81 1956.99,229.278 1957.56,228.132 1958.13,226.981 1958.69,227.11 1959.26,231.331 1959.83,232.19 1960.4,234.101 1960.97,230.483 1961.54,230.483 1962.1,230.29 1962.67,225.802 1963.24,223.977 1963.81,225.336 1964.38,226.867 1964.95,228.253 1965.51,232.224 1966.08,231.093 1966.65,232.215 1967.22,230.925 1967.79,231.962 1968.36,230.758 1968.92,230.83 1969.49,228.617 1970.06,228.847 1970.63,228.872 1971.2,229.944 1971.77,230.952 1972.34,230.551 1972.9,229.579 1973.47,225.375 1974.04,227.755 1974.61,226.817 1975.18,226.847 1975.75,228.826 1976.31,230.86 1976.88,230.848 1977.45,229.798 1978.02,229.663 1978.59,230.555 1979.16,230.489 1979.72,231.481 1980.29,231.383 1980.86,234.411 1981.43,235.169 1982,234.876 1982.57,234.596 1983.13,235.234 1983.7,235.881 1984.27,235.434 1984.84,236.103 1985.41,234.448 1985.98,232.84 1986.54,232.798 1987.11,233.381 1987.68,233.165 1988.25,232.817 1988.82,232.506 1989.39,234.188 1989.95,230.772 1990.52,233.795 1991.09,233.25 1991.66,231.65 1992.23,231.576 1992.8,232.22 1993.36,230.905 1993.93,228.526 1994.5,229.479 1995.07,231.574 1995.64,234.666 1996.21,234.259 1996.77,234.922 1997.34,235.473 1997.91,235.096 1998.48,231.636 1999.05,231.582 1999.62,233.381 2000.18,232.917 2000.75,233.737 2001.32,234.338 2001.89,233.779 2002.46,234.271 2003.03,230.477 2003.59,229.366 2004.16,230.173 2004.73,230.875 2005.3,230.788 2005.87,231.749 2006.44,228.554 2007,225.317 2007.57,225.183 2008.14,224.242 2008.71,224.483 2009.28,225.6 2009.85,225.515 2010.41,225.703 2010.98,227.831 2011.55,228.1 2012.12,228.186 2012.69,227.04 2013.26,225.844 2013.82,224.951 2014.39,226.188 2014.96,226.331 2015.53,226.456 2016.1,225.472 2016.67,225.759 2017.23,227.06 2017.8,225.318 2018.37,227.556 2018.94,227.693 2019.51,228.728 2020.08,227.644 2020.64,227.638 2021.21,228.607 2021.78,230.559 2022.35,231.07 2022.92,230.968 2023.49,227.622 2024.05,228.849 2024.62,228.773 2025.19,226.72 2025.76,227.936 2026.33,225.883 2026.9,227.144 2027.46,227.457 2028.03,228.495 2028.6,228.43 2029.17,230.669 2029.74,230.784 2030.31,231.424 2030.87,230.155 2031.44,232.053 2032.01,229.711 2032.58,230.729 2033.15,229.5 2033.72,228.411 2034.28,228.468 2034.85,227.343 2035.42,227.512 2035.99,228.529 2036.56,228.339 2037.13,227.504 2037.69,228.82 2038.26,230.864 2038.83,229.543 2039.4,229.528 2039.97,228.414 2040.54,228.388 2041.11,228.491 2041.67,226.419 2042.24,226.488 2042.81,224.744 2043.38,222.886 2043.95,224.51 2044.52,224.575 2045.08,225.008 2045.65,224.436 2046.22,226.023 2046.79,227.237 2047.36,226.46 2047.93,227.617 2048.49,227.631 2049.06,229.88 2049.63,230.953 2050.2,232.925 2050.77,231.57 2051.34,231.455 2051.9,231.104 2052.47,231.04 2053.04,230.953 2053.61,230.825 2054.18,230.716 2054.75,228.748 2055.31,228.68 2055.88,229.991 2056.45,227.925 2057.02,226.005 2057.59,226.198 2058.16,226.589 2058.72,226.854 2059.29,229.041 2059.86,227.976 2060.43,226.164 2061,226.402 2061.57,228.604 2062.13,226.591 2062.7,224.775 2063.27,225.109 2063.84,225.546 2064.41,225.868 2064.98,227.388 2065.54,227.477 2066.11,227.655 2066.68,227.733 2067.25,229.966 2067.82,233.211 2068.39,231.976 2068.95,232.869 2069.52,233.789 2070.09,233.247 2070.66,231.932 2071.23,229.958 2071.8,228.08 2072.36,229.183 2072.93,229.336 2073.5,230.42 2074.07,229.475 2074.64,229.728 2075.21,227.782 2075.77,229.057 2076.34,229.127 2076.91,230.314 2077.48,230.43 2078.05,231.439 2078.62,232.461 2079.18,230.383 2079.75,229.391 2080.32,231.514 2080.89,231.243 2081.46,231.236 2082.03,233.305 2082.59,233.102 2083.16,231.738 2083.73,231.456 2084.3,231.488 2084.87,231.446 2085.44,231.057 2086,231.096 2086.57,234.165 2087.14,234.983 2087.71,233.697 2088.28,232.488 2088.85,229.162 2089.41,232.152 2089.98,231.971 2090.55,231.694 2091.12,231.533 2091.69,233.289 2092.26,231.969 2092.82,232.811 2093.39,231.47 2093.96,232.396 2094.53,231.958 2095.1,230.729 2095.67,230.874 2096.23,231.902 2096.8,231.52 2097.37,231.556 2097.94,232.501 2098.51,231.192 2099.08,230.992 2099.64,229.884 2100.21,228.708 2100.78,229.901 2101.35,226.632 2101.92,226.009 2102.49,226.145 2103.05,226.436 2103.62,226.531 2104.19,228.556 2104.76,229.502 2105.33,228.189 2105.9,228.558 2106.46,227.66 2107.03,227.713 2107.6,227.795 2108.17,226.77 2108.74,227.058 2109.31,227.109 2109.87,227.014 2110.44,225.399 2111.01,224.787 2111.58,225.148 2112.15,223.6 2112.72,223.035 2113.29,223.564 2113.85,223.987 2114.42,222.346 2114.99,222.735 2115.56,223.096 2116.13,223.677 2116.7,223.981 2117.26,224.598 2117.83,224.143 2118.4,223.437 2118.97,222.022 2119.54,222.595 2120.11,223.15 2120.67,225.816 2121.24,227.292 2121.81,227.532 2122.38,229.225 2122.95,229.221 2123.52,229.468 2124.08,227.741 2124.65,228.809 2125.22,228.958 2125.79,229.211 2126.36,230.416 2126.93,230.399 2127.49,231.609 2128.06,231.581 2128.63,230.486 2129.2,230.457 2129.77,231.367 2130.34,228.278 2130.9,227.505 2131.47,227.988 2132.04,226.37 2132.61,226.618 2133.18,227.027 2133.75,228.376 2134.31,230.607 2134.88,230.886 2135.45,231.064 2136.02,234.035 2136.59,236.031 2137.16,235.429 2137.72,236.108 2138.29,235.849 2138.86,235.77 2139.43,235.463 2140,237.271 2140.57,238.716 2141.13,237.04 2141.7,234.474 2142.27,233.122 2142.84,232.897 2143.41,232.787 2143.98,233.652 2144.54,235.529 2145.11,232.032 2145.68,232.82 2146.25,233.523 2146.82,232.282 2147.39,231.185 2147.95,232.18 2148.52,231.981 2149.09,230.654 2149.66,229.794 2150.23,228.815 2150.8,229.006 2151.36,228.111 2151.93,230.377 2152.5,232.418 2153.07,234.405 2153.64,234.18 2154.21,232.972 2154.77,235.699 2155.34,234.151 2155.91,234.77 2156.48,233.291 2157.05,232.089 2157.62,232.049 2158.18,232.774 2158.75,231.59 2159.32,233.484 2159.89,235.135 \"/>\n<path clip-path=\"url(#clip160)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip160)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip160)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip160)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip160)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip160)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.023 ± 0.019\n  with uncertainty of ± 0.0011967195604480991\n  from 125 blocks after 4 transformations (k = 5).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01466 ± (0.00264692, 0.00254859) (MC)\n  95% confidence interval: [-4.01963, -4.00953]) (MC)\n  linear error propagation: -4.01515 ± 0.00270312\n  |δ_y| = |0.00194123| (≤ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.014658141393588, val_l = 0.004973583220700739, val_u = 0.005128436682840132)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip190\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip190)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip191\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip190)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip192\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip190)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1146.93 2211.02,1146.93 \"/>\n<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,985.526 2211.02,985.526 \"/>\n<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,824.12 2211.02,824.12 \"/>\n<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,662.713 2211.02,662.713 \"/>\n<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,501.306 2211.02,501.306 \"/>\n<polyline clip-path=\"url(#clip192)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,339.899 2211.02,339.899 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1146.93 365.751,1146.93 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,985.526 365.751,985.526 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,824.12 365.751,824.12 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,662.713 365.751,662.713 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,501.306 365.751,501.306 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,339.899 365.751,339.899 \"/>\n<path clip-path=\"url(#clip190)\" d=\"M298.909 1132.73 Q295.298 1132.73 293.469 1136.3 Q291.664 1139.84 291.664 1146.97 Q291.664 1154.07 293.469 1157.64 Q295.298 1161.18 298.909 1161.18 Q302.543 1161.18 304.349 1157.64 Q306.177 1154.07 306.177 1146.97 Q306.177 1139.84 304.349 1136.3 Q302.543 1132.73 298.909 1132.73 M298.909 1129.03 Q304.719 1129.03 307.775 1133.63 Q310.853 1138.22 310.853 1146.97 Q310.853 1155.69 307.775 1160.3 Q304.719 1164.88 298.909 1164.88 Q293.099 1164.88 290.02 1160.3 Q286.964 1155.69 286.964 1146.97 Q286.964 1138.22 290.02 1133.63 Q293.099 1129.03 298.909 1129.03 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M259.557 998.871 L267.196 998.871 L267.196 972.506 L258.886 974.172 L258.886 969.913 L267.15 968.246 L271.826 968.246 L271.826 998.871 L279.465 998.871 L279.465 1002.81 L259.557 1002.81 L259.557 998.871 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M298.909 971.325 Q295.298 971.325 293.469 974.89 Q291.664 978.432 291.664 985.561 Q291.664 992.668 293.469 996.232 Q295.298 999.774 298.909 999.774 Q302.543 999.774 304.349 996.232 Q306.177 992.668 306.177 985.561 Q306.177 978.432 304.349 974.89 Q302.543 971.325 298.909 971.325 M298.909 967.621 Q304.719 967.621 307.775 972.228 Q310.853 976.811 310.853 985.561 Q310.853 994.288 307.775 998.894 Q304.719 1003.48 298.909 1003.48 Q293.099 1003.48 290.02 998.894 Q286.964 994.288 286.964 985.561 Q286.964 976.811 290.02 972.228 Q293.099 967.621 298.909 967.621 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M262.775 837.464 L279.094 837.464 L279.094 841.4 L257.15 841.4 L257.15 837.464 Q259.812 834.71 264.395 830.08 Q269.002 825.427 270.182 824.085 Q272.428 821.562 273.307 819.826 Q274.21 818.066 274.21 816.377 Q274.21 813.622 272.266 811.886 Q270.344 810.15 267.242 810.15 Q265.043 810.15 262.59 810.914 Q260.159 811.678 257.381 813.228 L257.381 808.506 Q260.205 807.372 262.659 806.793 Q265.113 806.215 267.15 806.215 Q272.52 806.215 275.715 808.9 Q278.909 811.585 278.909 816.076 Q278.909 818.205 278.099 820.127 Q277.312 822.025 275.205 824.617 Q274.627 825.289 271.525 828.506 Q268.423 831.701 262.775 837.464 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M298.909 809.918 Q295.298 809.918 293.469 813.483 Q291.664 817.025 291.664 824.154 Q291.664 831.261 293.469 834.826 Q295.298 838.367 298.909 838.367 Q302.543 838.367 304.349 834.826 Q306.177 831.261 306.177 824.154 Q306.177 817.025 304.349 813.483 Q302.543 809.918 298.909 809.918 M298.909 806.215 Q304.719 806.215 307.775 810.821 Q310.853 815.404 310.853 824.154 Q310.853 832.881 307.775 837.488 Q304.719 842.071 298.909 842.071 Q293.099 842.071 290.02 837.488 Q286.964 832.881 286.964 824.154 Q286.964 815.404 290.02 810.821 Q293.099 806.215 298.909 806.215 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M272.914 661.359 Q276.27 662.076 278.145 664.345 Q280.043 666.613 280.043 669.947 Q280.043 675.062 276.525 677.863 Q273.006 680.664 266.525 680.664 Q264.349 680.664 262.034 680.224 Q259.742 679.808 257.289 678.951 L257.289 674.437 Q259.233 675.572 261.548 676.15 Q263.863 676.729 266.386 676.729 Q270.784 676.729 273.076 674.993 Q275.39 673.257 275.39 669.947 Q275.39 666.891 273.238 665.178 Q271.108 663.442 267.289 663.442 L263.261 663.442 L263.261 659.599 L267.474 659.599 Q270.923 659.599 272.752 658.234 Q274.58 656.845 274.58 654.252 Q274.58 651.59 272.682 650.178 Q270.807 648.743 267.289 648.743 Q265.367 648.743 263.168 649.16 Q260.969 649.576 258.33 650.456 L258.33 646.289 Q260.992 645.549 263.307 645.178 Q265.645 644.808 267.705 644.808 Q273.029 644.808 276.131 647.238 Q279.233 649.646 279.233 653.766 Q279.233 656.636 277.59 658.627 Q275.946 660.595 272.914 661.359 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M298.909 648.511 Q295.298 648.511 293.469 652.076 Q291.664 655.618 291.664 662.748 Q291.664 669.854 293.469 673.419 Q295.298 676.96 298.909 676.96 Q302.543 676.96 304.349 673.419 Q306.177 669.854 306.177 662.748 Q306.177 655.618 304.349 652.076 Q302.543 648.511 298.909 648.511 M298.909 644.808 Q304.719 644.808 307.775 649.414 Q310.853 653.998 310.853 662.748 Q310.853 671.474 307.775 676.081 Q304.719 680.664 298.909 680.664 Q293.099 680.664 290.02 676.081 Q286.964 671.474 286.964 662.748 Q286.964 653.998 290.02 649.414 Q293.099 644.808 298.909 644.808 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M271.594 488.1 L259.789 506.549 L271.594 506.549 L271.594 488.1 M270.367 484.026 L276.247 484.026 L276.247 506.549 L281.177 506.549 L281.177 510.438 L276.247 510.438 L276.247 518.586 L271.594 518.586 L271.594 510.438 L255.992 510.438 L255.992 505.924 L270.367 484.026 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M298.909 487.105 Q295.298 487.105 293.469 490.669 Q291.664 494.211 291.664 501.341 Q291.664 508.447 293.469 512.012 Q295.298 515.554 298.909 515.554 Q302.543 515.554 304.349 512.012 Q306.177 508.447 306.177 501.341 Q306.177 494.211 304.349 490.669 Q302.543 487.105 298.909 487.105 M298.909 483.401 Q304.719 483.401 307.775 488.007 Q310.853 492.591 310.853 501.341 Q310.853 510.067 307.775 514.674 Q304.719 519.257 298.909 519.257 Q293.099 519.257 290.02 514.674 Q286.964 510.067 286.964 501.341 Q286.964 492.591 290.02 488.007 Q293.099 483.401 298.909 483.401 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M258.793 322.619 L277.15 322.619 L277.15 326.554 L263.076 326.554 L263.076 335.026 Q264.094 334.679 265.113 334.517 Q266.131 334.332 267.15 334.332 Q272.937 334.332 276.316 337.503 Q279.696 340.675 279.696 346.091 Q279.696 351.67 276.224 354.772 Q272.752 357.85 266.432 357.85 Q264.256 357.85 261.988 357.48 Q259.742 357.11 257.335 356.369 L257.335 351.67 Q259.418 352.804 261.641 353.36 Q263.863 353.915 266.34 353.915 Q270.344 353.915 272.682 351.809 Q275.02 349.702 275.02 346.091 Q275.02 342.48 272.682 340.374 Q270.344 338.267 266.34 338.267 Q264.465 338.267 262.59 338.684 Q260.738 339.101 258.793 339.98 L258.793 322.619 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M298.909 325.698 Q295.298 325.698 293.469 329.263 Q291.664 332.804 291.664 339.934 Q291.664 347.04 293.469 350.605 Q295.298 354.147 298.909 354.147 Q302.543 354.147 304.349 350.605 Q306.177 347.04 306.177 339.934 Q306.177 332.804 304.349 329.263 Q302.543 325.698 298.909 325.698 M298.909 321.994 Q304.719 321.994 307.775 326.601 Q310.853 331.184 310.853 339.934 Q310.853 348.661 307.775 353.267 Q304.719 357.85 298.909 357.85 Q293.099 357.85 290.02 353.267 Q286.964 348.661 286.964 339.934 Q286.964 331.184 290.02 326.601 Q293.099 321.994 298.909 321.994 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip192)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1028 400.199,918.744 400.786,818.495 401.372,726.65 401.958,760.372 402.545,785.361 403.131,800.187 403.718,720.798 404.304,734.347 404.891,663.956 405.477,598.246 406.063,538.511 406.65,485.607 407.236,436.615 407.823,456.838 408.409,414.362 408.995,377.112 409.582,344.812 410.168,314.609 410.755,288.924 411.341,311.571 411.927,289.671 412.514,271.463 413.1,256.573 413.687,243.746 414.273,233.959 414.86,226.2 415.446,219.895 416.032,243.924 416.619,240.607 417.205,240.062 417.792,263.376 418.378,264.936 418.964,267.789 419.551,272.373 420.137,277.786 420.724,317.998 421.31,355.396 421.896,402.801 422.483,417.534 423.069,419.873 423.656,423.137 424.242,426.681 424.829,442.202 425.415,479.291 426.001,485.427 426.588,502.283 427.174,518.533 427.761,525.689 428.347,533.651 428.933,549.444 429.52,558.755 430.106,596.715 430.693,618.892 431.279,639.171 431.865,647.062 432.452,655.425 433.038,664.483 433.625,689.937 434.211,713.941 434.798,721.171 435.384,734.108 435.97,746.227 436.557,762.725 437.143,774.304 437.73,790.221 438.316,796.834 438.902,811.805 439.489,818.333 440.075,832.538 440.662,838.997 441.248,852.967 441.835,863.08 442.421,879.263 443.007,891.986 443.594,897.754 444.18,912.518 444.767,930.145 445.353,935.588 445.939,946.554 446.526,957.238 447.112,962.151 447.699,972.15 448.285,979.259 448.871,984.143 449.458,988.833 450.044,993.398 450.631,1000.38 451.217,1007.07 451.804,1018.68 452.39,1025.18 452.976,1038.48 453.563,1042.31 454.149,1048.16 454.736,1056.09 455.322,1057.31 455.908,1060.81 456.495,1070.94 457.081,1076.26 457.668,1087.42 458.254,1096.38 458.84,1104.93 459.427,1107.23 460.013,1107.58 460.6,1113.96 461.186,1115.97 461.773,1125.86 462.359,1127.77 462.945,1129.74 463.532,1140.75 464.118,1144.03 464.705,1147.27 465.291,1150.14 465.877,1149.81 466.464,1154.75 467.05,1157.95 467.637,1159.25 468.223,1162.29 468.809,1163.64 469.396,1166.43 469.982,1171.12 470.569,1172.11 471.155,1175.11 471.742,1176.27 472.328,1175.96 472.914,1183.84 473.501,1184.94 474.087,1187.49 474.674,1189.82 475.26,1192.19 475.846,1199.21 476.433,1199.9 477.019,1203.48 477.606,1205.41 478.192,1211.6 478.778,1209.85 479.365,1212.7 479.951,1214.27 480.538,1214.06 481.124,1216.79 481.711,1216.5 482.297,1216.83 482.883,1218.08 483.47,1218.06 484.056,1219.36 484.643,1219.36 485.229,1220.63 485.815,1220.42 486.402,1223.29 486.988,1223.17 487.575,1224.65 488.161,1224.32 488.748,1225.7 489.334,1225.71 489.92,1224.08 490.507,1224.1 491.093,1225.53 491.68,1228.48 492.266,1232.64 492.852,1235.02 493.439,1238.73 494.025,1239.61 494.612,1239.01 495.198,1241.04 495.784,1240.06 496.371,1239.67 496.957,1239.29 497.544,1241.52 498.13,1240.59 498.717,1241.53 499.303,1240.92 499.889,1236.16 500.476,1237.41 501.062,1239.92 501.649,1240.98 502.235,1241.69 502.821,1242.37 503.408,1238.73 503.994,1235.53 504.581,1236.8 505.167,1239.42 505.753,1239.98 506.34,1240.82 506.926,1243.11 507.513,1242.5 508.099,1244.62 508.686,1242.64 509.272,1241.85 509.858,1242.91 510.445,1243.71 511.031,1241.59 511.618,1240.95 512.204,1243.21 512.79,1241.42 513.377,1239.52 513.963,1240.49 514.55,1239.92 515.136,1242.17 515.722,1244.23 516.309,1242.1 516.895,1244.24 517.482,1244.64 518.068,1243.66 518.655,1245.74 519.241,1247.72 519.827,1247.01 520.414,1246.16 521,1245.51 521.587,1241.85 522.173,1242.57 522.759,1240.68 523.346,1239.07 523.932,1238.6 524.519,1240.69 525.105,1241.13 525.691,1243.1 526.278,1241.06 526.864,1238.84 527.451,1242.36 528.037,1240.43 528.624,1241.34 529.21,1242.1 529.796,1242.88 530.383,1243.64 530.969,1244.45 531.556,1245.02 532.142,1245.36 532.728,1244.54 533.315,1242.49 533.901,1241.88 534.488,1241.29 535.074,1239.49 535.661,1240.51 536.247,1238.63 536.833,1239.67 537.42,1240.79 538.006,1238.97 538.593,1238.4 539.179,1236.53 539.765,1236.07 540.352,1235.66 540.938,1239.2 541.525,1241.51 542.111,1240.94 542.697,1244.48 543.284,1247.8 543.87,1247.03 544.457,1246.14 545.043,1243.98 545.63,1244.4 546.216,1244.92 546.802,1246.62 547.389,1248.46 547.975,1248.8 548.562,1250.53 549.148,1248.14 549.734,1249.81 550.321,1246.39 550.907,1244.42 551.494,1243.6 552.08,1245.4 552.666,1244.54 553.253,1244.82 553.839,1243.98 554.426,1243.15 555.012,1240.96 555.599,1243.06 556.185,1244.87 556.771,1244.18 557.358,1243.32 557.944,1243.85 558.531,1241.84 559.117,1243.53 559.703,1244 560.29,1247.23 560.876,1243.42 561.463,1240.15 562.049,1239.39 562.635,1238.66 563.222,1238.11 563.808,1238.99 564.395,1234.41 564.981,1232.62 565.568,1233.51 566.154,1230.49 566.74,1229.01 567.327,1228.46 567.913,1229.83 568.5,1229.26 569.086,1227.63 569.672,1226.27 570.259,1224.84 570.845,1226.23 571.432,1223.42 572.018,1226.37 572.605,1223.68 573.191,1226.72 573.777,1226.98 574.364,1226.99 574.95,1227.11 575.537,1225.76 576.123,1224.56 576.709,1225.81 577.296,1225.94 577.882,1224.58 578.469,1225.76 579.055,1228.28 579.641,1226.7 580.228,1225.18 580.814,1226.48 581.401,1227.66 581.987,1227.63 582.574,1223.32 583.16,1226.28 583.746,1226.07 584.333,1227.11 584.919,1227.38 585.506,1224.22 586.092,1223.06 586.678,1224.43 587.265,1223.12 587.851,1223.11 588.438,1222.06 589.024,1224.92 589.61,1225.16 590.197,1226.81 590.783,1229.36 591.37,1234.29 591.956,1236.39 592.543,1237.3 593.129,1236.55 593.715,1237.02 594.302,1239.21 594.888,1231.83 595.475,1228.69 596.061,1232.47 596.647,1231.92 597.234,1231.86 597.82,1232.77 598.407,1231.13 598.993,1228.31 599.579,1229.72 600.166,1230.7 600.752,1227.98 601.339,1226.35 601.925,1224.92 602.512,1224.9 603.098,1224.85 603.684,1224.89 604.271,1225.93 604.857,1226.12 605.444,1225.58 606.03,1225.29 606.616,1226.51 607.203,1226.5 607.789,1226.05 608.376,1225.85 608.962,1226.94 609.548,1226.74 610.135,1227.79 610.721,1227.52 611.308,1230.1 611.894,1229.44 612.481,1232.92 613.067,1231.05 613.653,1227.67 614.24,1228.62 614.826,1226.8 615.413,1228.04 615.999,1227.69 616.585,1227.4 617.172,1227.34 617.758,1226.94 618.345,1226.63 618.931,1228.89 619.518,1227.04 620.104,1226.89 620.69,1229.15 621.277,1227.44 621.863,1223.64 622.45,1223.83 623.036,1224.86 623.622,1228.79 624.209,1228.44 624.795,1227.27 625.382,1228.51 625.968,1226.85 626.554,1223.72 627.141,1223.57 627.727,1223.47 628.314,1225.95 628.9,1225.58 629.487,1225.7 630.073,1224.16 630.659,1223.88 631.246,1222.25 631.832,1220.84 632.419,1221.02 633.005,1220.87 633.591,1220.8 634.178,1222.25 634.764,1224.65 635.351,1222.75 635.937,1222.5 636.523,1222.44 637.11,1222.12 637.696,1221.73 638.283,1218.98 638.869,1217.8 639.456,1216.82 640.042,1216.89 640.628,1219.74 641.215,1221.24 641.801,1222.5 642.388,1222.16 642.974,1222.11 643.56,1222.01 644.147,1223.01 644.733,1222.94 645.32,1222.67 645.906,1221.33 646.492,1222.47 647.079,1221.26 647.665,1221.5 648.252,1220.07 648.838,1220.01 649.425,1221.38 650.011,1218.79 650.597,1218.94 651.184,1217.64 651.77,1219.08 652.357,1218.98 652.943,1216.73 653.529,1218.3 654.116,1219.41 654.702,1218.18 655.289,1218.28 655.875,1218.28 656.462,1219.49 657.048,1219.32 657.634,1218.03 658.221,1218.16 658.807,1218 659.394,1219.36 659.98,1219.26 660.566,1219.29 661.153,1223.11 661.739,1224.25 662.326,1226.81 662.912,1226.47 663.498,1223.43 664.085,1223.19 664.671,1224.31 665.258,1224.05 665.844,1223.9 666.431,1223.7 667.017,1224.82 667.603,1224.34 668.19,1224.19 668.776,1225.3 669.363,1226.34 669.949,1226.08 670.535,1225.63 671.122,1225.4 671.708,1227.3 672.295,1228.15 672.881,1226.49 673.467,1231.36 674.054,1230.59 674.64,1228.61 675.227,1230.75 675.813,1232.39 676.4,1232.92 676.986,1233.53 677.572,1232.65 678.159,1233.19 678.745,1232.33 679.332,1227.57 679.918,1225.82 680.504,1224.22 681.091,1225.3 681.677,1223.68 682.264,1223.29 682.85,1224.24 683.436,1223.85 684.023,1227.01 684.609,1228.93 685.196,1230.01 685.782,1226.93 686.369,1226.6 686.955,1230.25 687.541,1228.49 688.128,1226.36 688.714,1225.97 689.301,1226.79 689.887,1221.05 690.473,1220.97 691.06,1220.83 691.646,1222.04 692.233,1218.89 692.819,1218.78 693.405,1218.64 693.992,1215.58 694.578,1218.41 695.165,1218.56 695.751,1220.89 696.338,1220.39 696.924,1216.51 697.51,1216.83 698.097,1214.21 698.683,1214.28 699.27,1213.3 699.856,1213.26 700.442,1213.14 701.029,1213.63 701.615,1216.51 702.202,1213.68 702.788,1212.33 703.375,1213.98 703.961,1216.86 704.547,1217.17 705.134,1217.25 705.72,1217.36 706.307,1214.9 706.893,1215.11 707.479,1212.67 708.066,1214.02 708.652,1211.31 709.239,1209.1 709.825,1208.17 710.411,1211.47 710.998,1213.04 711.584,1213.17 712.171,1210.55 712.757,1211.03 713.344,1211.32 713.93,1211.61 714.516,1213.07 715.103,1218.39 715.689,1219.78 716.276,1218.47 716.862,1217.03 717.448,1217.12 718.035,1214.34 718.621,1215.8 719.208,1216.15 719.794,1215.98 720.38,1215.91 720.967,1215.93 721.553,1216.09 722.14,1215.85 722.726,1215.79 723.313,1217.37 723.899,1215.75 724.485,1215.88 725.072,1213.02 725.658,1215.7 726.245,1212.9 726.831,1214.41 727.417,1215.99 728.004,1215.85 728.59,1216.33 729.177,1216.41 729.763,1216.5 730.349,1217.81 730.936,1215.13 731.522,1212.51 732.109,1215.53 732.695,1216.87 733.282,1214.31 733.868,1213.12 734.454,1211.92 735.041,1214.57 735.627,1217.31 736.214,1216.07 736.8,1214.89 737.386,1214.97 737.973,1217.79 738.559,1216.44 739.146,1216.31 739.732,1217.53 740.318,1216.38 740.905,1218.95 741.491,1221.35 742.078,1225.04 742.664,1223.36 743.251,1221.51 743.837,1222.22 744.423,1218.36 745.01,1218.23 745.596,1219.57 746.183,1219.07 746.769,1221.27 747.355,1219.81 747.942,1220.85 748.528,1219.38 749.115,1219.31 749.701,1219.19 750.288,1218.97 750.874,1218.67 751.46,1217.17 752.047,1217.37 752.633,1217.27 753.22,1216.11 753.806,1216.06 754.392,1213.41 754.979,1213.4 755.565,1211.96 756.152,1213.43 756.738,1213.78 757.324,1213.95 757.911,1218.03 758.497,1217.86 759.084,1216.54 759.67,1217.82 760.257,1217.74 760.843,1216.24 761.429,1217.79 762.016,1217.74 762.602,1219.08 763.189,1221.36 763.775,1223.47 764.361,1223.23 764.948,1222.87 765.534,1225.12 766.121,1224.41 766.707,1225.47 767.293,1224.94 767.88,1224.16 768.466,1222.49 769.053,1219.41 769.639,1220.54 770.226,1220.4 770.812,1223.99 771.398,1226.22 771.985,1225.8 772.571,1225.32 773.158,1224.61 773.744,1225.63 774.33,1225.25 774.917,1224.69 775.503,1223.98 776.09,1223.56 776.676,1218.81 777.262,1217.34 777.849,1219.78 778.435,1216.72 779.022,1213.98 779.608,1219.1 780.195,1220.12 780.781,1219.67 781.367,1222.08 781.954,1221.7 782.54,1221.39 783.127,1220.67 783.713,1220.21 784.299,1215.73 784.886,1219.45 785.472,1215.1 786.059,1212.41 786.645,1213.61 787.232,1215.02 787.818,1213.69 788.404,1210.93 788.991,1208.59 789.577,1211.43 790.164,1210.28 790.75,1213 791.336,1216 791.923,1218.44 792.509,1217.89 793.096,1217.46 793.682,1217.17 794.268,1218.43 794.855,1213.03 795.441,1213.33 796.028,1214.89 796.614,1213.56 797.201,1212.48 797.787,1213.74 798.373,1212.68 798.96,1213.93 799.546,1215.11 800.133,1213.81 800.719,1219.29 801.305,1219.04 801.892,1217.61 802.478,1218.79 803.065,1218.63 803.651,1218.26 804.237,1216.83 804.824,1220.41 805.41,1222.72 805.997,1220.75 806.583,1219.12 807.17,1221.73 807.756,1219.95 808.342,1219.77 808.929,1218.33 809.515,1218.22 810.102,1216.68 810.688,1217.8 811.274,1217.78 811.861,1218.92 812.447,1218.42 813.034,1216.76 813.62,1213.69 814.206,1213.74 814.793,1217.72 815.379,1214.86 815.966,1214.8 816.552,1213.29 817.139,1214.29 817.725,1213.96 818.311,1215.14 818.898,1215.11 819.484,1213.94 820.071,1211.55 820.657,1211.78 821.243,1213.3 821.83,1214.81 822.416,1216.06 823.003,1216 823.589,1214.55 824.175,1213.54 824.762,1211.99 825.348,1211.88 825.935,1210.83 826.521,1210.93 827.108,1211.21 827.694,1211.25 828.28,1216.64 828.867,1217.88 829.453,1217.78 830.04,1215.3 830.626,1215.29 831.212,1213.64 831.799,1212.66 832.385,1212.43 832.972,1213.64 833.558,1214.81 834.145,1214.68 834.731,1213.38 835.317,1214.77 835.904,1217.83 836.49,1217.64 837.077,1220.1 837.663,1219.77 838.249,1218.42 838.836,1217.93 839.422,1216.41 840.009,1216.26 840.595,1215.92 841.181,1214.53 841.768,1213.27 842.354,1211.98 842.941,1212.08 843.527,1213.68 844.114,1209.8 844.7,1209.89 845.286,1211.42 845.873,1211.51 846.459,1208.79 847.046,1211.62 847.632,1210.7 848.218,1212.3 848.805,1212.44 849.391,1212.54 849.978,1212.53 850.564,1211.29 851.15,1211.71 851.737,1210.56 852.323,1209.47 852.91,1209.7 853.496,1209.92 854.083,1210.13 854.669,1210.45 855.255,1211.84 855.842,1210.53 856.428,1211.82 857.015,1213.06 857.601,1212.79 858.187,1212.77 858.774,1211.71 859.36,1213.16 859.947,1215.86 860.533,1214.67 861.119,1216 861.706,1215.93 862.292,1216.68 862.879,1216.56 863.465,1217.73 864.052,1217.41 864.638,1215.84 865.224,1217.32 865.811,1214.87 866.397,1216.37 866.984,1215 867.57,1218.91 868.156,1215.93 868.743,1215.7 869.329,1214.5 869.916,1216.06 870.502,1215.9 871.089,1213.13 871.675,1213.15 872.261,1214.48 872.848,1215.62 873.434,1214.27 874.021,1214.37 874.607,1214.29 875.193,1214.4 875.78,1214.35 876.366,1215.93 876.953,1211.65 877.539,1211.91 878.125,1211.91 878.712,1213 879.298,1212.92 879.885,1211.6 880.471,1208.9 881.058,1209.13 881.644,1209.34 882.23,1209.53 882.817,1208.24 883.403,1212.27 883.99,1214.82 884.576,1214.87 885.162,1213.31 885.749,1213.4 886.335,1213.4 886.922,1212.04 887.508,1212.22 888.094,1213.69 888.681,1213.42 889.267,1213.39 889.854,1213.12 890.44,1212.98 891.027,1215.52 891.613,1215.39 892.199,1214.1 892.786,1214.27 893.372,1214.51 893.959,1216.93 894.545,1218 895.131,1219.03 895.718,1220.23 896.304,1220.16 896.891,1222.4 897.477,1220.67 898.063,1220.45 898.65,1220.21 899.236,1222.65 899.823,1223.53 900.409,1224.19 900.996,1224.94 901.582,1225.69 902.168,1223.91 902.755,1223.44 903.341,1222.99 903.928,1222.71 904.514,1223.61 905.1,1223.29 905.687,1224.18 906.273,1225.03 906.86,1224.31 907.446,1219.67 908.032,1220.61 908.619,1217.44 909.205,1217.03 909.792,1214.09 910.378,1215.19 910.965,1215.19 911.551,1213.65 912.137,1216.32 912.724,1214.65 913.31,1213.33 913.897,1214.54 914.483,1215.74 915.069,1219.44 915.656,1220.53 916.242,1221.47 916.829,1219.63 917.415,1219.4 918.002,1217.62 918.588,1218.63 919.174,1220.99 919.761,1220.42 920.347,1220.95 920.934,1220.69 921.52,1220.45 922.106,1221.48 922.693,1217.11 923.279,1215.66 923.866,1215.54 924.452,1213.04 925.038,1210.23 925.625,1209 926.211,1209.21 926.798,1209.55 927.384,1208.36 927.971,1208.63 928.557,1208.82 929.143,1209.02 929.73,1205.13 930.316,1201.66 930.903,1200.96 931.489,1205.6 932.075,1203.3 932.662,1202.76 933.248,1203.42 933.835,1204.25 934.421,1206.04 935.007,1202.32 935.594,1206.81 936.18,1205.77 936.767,1207.36 937.353,1207.84 937.94,1205.42 938.526,1204.73 939.112,1203.65 939.699,1204.17 940.285,1204.93 940.872,1205.41 941.458,1207.11 942.044,1207.46 942.631,1206.37 943.217,1207.97 943.804,1206.58 944.39,1206.66 944.976,1204.36 945.563,1206.15 946.149,1206.5 946.736,1206.79 947.322,1205.94 947.909,1207.59 948.495,1207.81 949.081,1206.98 949.668,1207.12 950.254,1206.23 950.841,1205.12 951.427,1208.45 952.013,1207.49 952.6,1206.24 953.186,1209.14 953.773,1206.76 954.359,1208.63 954.945,1212.82 955.532,1214.49 956.118,1215.68 956.705,1216.78 957.291,1215.26 957.878,1215.18 958.464,1216.43 959.05,1214.57 959.637,1213.15 960.223,1214.35 960.81,1214.11 961.396,1212.69 961.982,1215.41 962.569,1214.06 963.155,1211.41 963.742,1208.88 964.328,1210.64 964.915,1210.89 965.501,1211.14 966.087,1211.1 966.674,1212.65 967.26,1212.58 967.847,1211.34 968.433,1211.64 969.019,1213.1 969.606,1218.42 970.192,1221.96 970.779,1222.73 971.365,1222.29 971.951,1222.65 972.538,1220.59 973.124,1220.04 973.711,1219.64 974.297,1221.65 974.884,1219.99 975.47,1219.95 976.056,1218.45 976.643,1220.82 977.229,1221.88 977.816,1221.6 978.402,1219.99 978.988,1216.84 979.575,1217.96 980.161,1218.97 980.748,1219.8 981.334,1218.54 981.92,1217.47 982.507,1217.32 983.093,1219.89 983.68,1221.03 984.266,1217.88 984.853,1216.31 985.439,1213.62 986.025,1216.17 986.612,1212.04 987.198,1211.75 987.785,1209.08 988.371,1209.22 988.957,1207.98 989.544,1208.34 990.13,1208.79 990.717,1211.59 991.303,1211.94 991.889,1213.41 992.476,1217.24 993.062,1215.66 993.649,1212.72 994.235,1212.53 994.822,1211.11 995.408,1213.91 995.994,1210.01 996.581,1210.2 997.167,1210.33 997.754,1211.88 998.34,1213.3 998.926,1214.73 999.513,1217.34 1000.1,1214.64 1000.69,1213.38 1001.27,1211.83 1001.86,1211.81 1002.44,1210.32 1003.03,1207.65 1003.62,1205.78 1004.2,1204.78 1004.79,1205.35 1005.38,1204.35 1005.96,1206.05 1006.55,1207.99 1007.14,1210.73 1007.72,1209.72 1008.31,1209.64 1008.9,1209.73 1009.48,1209.91 1010.07,1209.88 1010.65,1207.43 1011.24,1207.85 1011.83,1208.23 1012.41,1207.27 1013,1208.84 1013.59,1207.64 1014.17,1208.1 1014.76,1208.53 1015.35,1215.27 1015.93,1214.05 1016.52,1214.07 1017.11,1212.89 1017.69,1212.94 1018.28,1214.7 1018.86,1214.51 1019.45,1213.15 1020.04,1211.79 1020.62,1211.54 1021.21,1210.48 1021.8,1210.7 1022.38,1210.95 1022.97,1212.47 1023.56,1212.35 1024.14,1213.86 1024.73,1213.63 1025.32,1212.55 1025.9,1212.48 1026.49,1213.94 1027.07,1214.08 1027.66,1212.48 1028.25,1212.31 1028.83,1211.19 1029.42,1208.89 1030.01,1209.03 1030.59,1208.87 1031.18,1210.13 1031.77,1211.52 1032.35,1212.85 1032.94,1211.67 1033.52,1213.05 1034.11,1211.7 1034.7,1212.77 1035.28,1210.41 1035.87,1212.76 1036.46,1211.76 1037.04,1212.98 1037.63,1214.43 1038.22,1212.91 1038.8,1211.74 1039.39,1211.68 1039.98,1208.89 1040.56,1210.57 1041.15,1210.29 1041.73,1210.29 1042.32,1207.86 1042.91,1208.45 1043.49,1208.27 1044.08,1207.19 1044.67,1211.61 1045.25,1214.06 1045.84,1214.15 1046.43,1215.43 1047.01,1213.91 1047.6,1213.79 1048.19,1210.99 1048.77,1209.79 1049.36,1209.99 1049.94,1214.1 1050.53,1214.07 1051.12,1214.14 1051.7,1213.66 1052.29,1216.04 1052.88,1213.07 1053.46,1211.84 1054.05,1211.74 1054.64,1213.08 1055.22,1212.88 1055.81,1212.81 1056.39,1212.61 1056.98,1209.99 1057.57,1210.29 1058.15,1213.32 1058.74,1213.18 1059.33,1213.46 1059.91,1216.02 1060.5,1213.24 1061.09,1215.7 1061.67,1214.28 1062.26,1214.1 1062.85,1212.63 1063.43,1212.81 1064.02,1213 1064.6,1214.52 1065.19,1213.16 1065.78,1216.94 1066.36,1217.84 1066.95,1217.46 1067.54,1218.19 1068.12,1215.46 1068.71,1212.59 1069.3,1212.45 1069.88,1209.84 1070.47,1211.43 1071.06,1211.74 1071.64,1212.02 1072.23,1210.73 1072.81,1208.32 1073.4,1209.66 1073.99,1212.33 1074.57,1213.67 1075.16,1213.37 1075.75,1210.85 1076.33,1213.35 1076.92,1212.06 1077.51,1213.21 1078.09,1215.54 1078.68,1214.11 1079.26,1211.56 1079.85,1211.68 1080.44,1212.86 1081.02,1212.73 1081.61,1212.77 1082.2,1212.79 1082.78,1211.56 1083.37,1211.64 1083.96,1210.18 1084.54,1211.93 1085.13,1213.19 1085.72,1214.65 1086.3,1213.06 1086.89,1215.53 1087.47,1215.45 1088.06,1216.39 1088.65,1215.04 1089.23,1213.44 1089.82,1210.54 1090.41,1212.34 1090.99,1213.75 1091.58,1214.67 1092.17,1215.86 1092.75,1214.38 1093.34,1212.55 1093.93,1211.38 1094.51,1209.7 1095.1,1209.86 1095.68,1211.32 1096.27,1209.95 1096.86,1211.61 1097.44,1214.09 1098.03,1215.3 1098.62,1215.28 1099.2,1213.69 1099.79,1213.4 1100.38,1211.91 1100.96,1214.72 1101.55,1214.59 1102.14,1210.34 1102.72,1210.11 1103.31,1208.86 1103.89,1211.61 1104.48,1210.27 1105.07,1209.05 1105.65,1209.43 1106.24,1210.4 1106.83,1209.19 1107.41,1206.67 1108,1209.8 1108.59,1209.99 1109.17,1210.31 1109.76,1210.45 1110.34,1211.68 1110.93,1207.91 1111.52,1209.43 1112.1,1208.47 1112.69,1209.91 1113.28,1212.44 1113.86,1212.26 1114.45,1212.24 1115.04,1212.5 1115.62,1209.8 1116.21,1212.44 1116.8,1208 1117.38,1208.31 1117.97,1208.16 1118.55,1208.23 1119.14,1207.03 1119.73,1207.3 1120.31,1211.31 1120.9,1213.89 1121.49,1213.7 1122.07,1217.42 1122.66,1216.11 1123.25,1215.85 1123.83,1215.4 1124.42,1215.39 1125.01,1215.23 1125.59,1216.31 1126.18,1217.45 1126.76,1214.55 1127.35,1214.34 1127.94,1213.96 1128.52,1215.48 1129.11,1215.22 1129.7,1211.1 1130.28,1209.77 1130.87,1208.79 1131.46,1208.8 1132.04,1205.36 1132.63,1205.58 1133.21,1205.89 1133.8,1206.45 1134.39,1207.82 1134.97,1206.79 1135.56,1208.16 1136.15,1205.77 1136.73,1207.27 1137.32,1207.5 1137.91,1209.18 1138.49,1209.05 1139.08,1210.62 1139.67,1209.58 1140.25,1212.21 1140.84,1213.59 1141.42,1208.34 1142.01,1210.87 1142.6,1212.17 1143.18,1210.79 1143.77,1209.68 1144.36,1208.59 1144.94,1209.02 1145.53,1211.94 1146.12,1212 1146.7,1213.34 1147.29,1213.01 1147.88,1211.87 1148.46,1210.9 1149.05,1210.73 1149.63,1213.19 1150.22,1210.51 1150.81,1207.82 1151.39,1208.16 1151.98,1210.15 1152.57,1211.62 1153.15,1211.5 1153.74,1215.66 1154.33,1215.67 1154.91,1216.67 1155.5,1216.4 1156.09,1217.46 1156.67,1215.94 1157.26,1218.63 1157.84,1218.83 1158.43,1218.28 1159.02,1217.9 1159.6,1217.47 1160.19,1217.02 1160.78,1217.06 1161.36,1217.01 1161.95,1216.73 1162.54,1211.09 1163.12,1211.11 1163.71,1211.01 1164.29,1212.27 1164.88,1214.93 1165.47,1211.95 1166.05,1210.33 1166.64,1211.68 1167.23,1210.64 1167.81,1210.68 1168.4,1212.06 1168.99,1210.98 1169.57,1210.95 1170.16,1211.18 1170.75,1213.83 1171.33,1213.72 1171.92,1217.49 1172.5,1218.72 1173.09,1218.01 1173.68,1214.95 1174.26,1213.52 1174.85,1213.25 1175.44,1214.4 1176.02,1214.16 1176.61,1213.99 1177.2,1216.49 1177.78,1217.48 1178.37,1215.95 1178.96,1215.68 1179.54,1212.84 1180.13,1212.73 1180.71,1208.54 1181.3,1206 1181.89,1206.23 1182.47,1205.22 1183.06,1204.19 1183.65,1204.59 1184.23,1206.41 1184.82,1206.31 1185.41,1207.78 1185.99,1207.97 1186.58,1209.41 1187.16,1209.59 1187.75,1209.88 1188.34,1209.69 1188.92,1211.1 1189.51,1210.99 1190.1,1210.85 1190.68,1211.04 1191.27,1208.08 1191.86,1208 1192.44,1208.49 1193.03,1208.63 1193.62,1205.92 1194.2,1206.46 1194.79,1206.87 1195.37,1207.13 1195.96,1211.34 1196.55,1212.82 1197.13,1211.3 1197.72,1210.19 1198.31,1210.25 1198.89,1210.74 1199.48,1210.77 1200.07,1207.88 1200.65,1206.75 1201.24,1209.89 1201.83,1209.95 1202.41,1208.62 1203,1208.86 1203.58,1210.21 1204.17,1208.55 1204.76,1205.97 1205.34,1206.58 1205.93,1205.59 1206.52,1205.95 1207.1,1206.21 1207.69,1208.19 1208.28,1208.31 1208.86,1207.26 1209.45,1207.54 1210.03,1206.48 1210.62,1202.62 1211.21,1201.5 1211.79,1206 1212.38,1206.32 1212.97,1206.92 1213.55,1209.85 1214.14,1209.83 1214.73,1210.07 1215.31,1212.62 1215.9,1212.73 1216.49,1213.93 1217.07,1215.35 1217.66,1214.17 1218.24,1212.74 1218.83,1211.34 1219.42,1211.45 1220,1212.65 1220.59,1211.54 1221.18,1210.44 1221.76,1208.97 1222.35,1212.03 1222.94,1214.81 1223.52,1213.26 1224.11,1214.65 1224.7,1215.57 1225.28,1215.34 1225.87,1217.89 1226.45,1214.97 1227.04,1214.87 1227.63,1214.89 1228.21,1214.53 1228.8,1214.57 1229.39,1215.8 1229.97,1214.25 1230.56,1214.06 1231.15,1212.86 1231.73,1216.8 1232.32,1214.85 1232.91,1214.84 1233.49,1213.59 1234.08,1214.93 1234.66,1216.19 1235.25,1215.67 1235.84,1212.82 1236.42,1211.32 1237.01,1212.61 1237.6,1209.88 1238.18,1211.25 1238.77,1211.35 1239.36,1208.71 1239.94,1208.81 1240.53,1209.02 1241.11,1210.31 1241.7,1210.46 1242.29,1211.86 1242.87,1213.04 1243.46,1210.18 1244.05,1210.13 1244.63,1210.09 1245.22,1210.14 1245.81,1212.58 1246.39,1211.05 1246.98,1209.95 1247.57,1211.16 1248.15,1213.81 1248.74,1213.36 1249.32,1213.01 1249.91,1212.95 1250.5,1212.74 1251.08,1215.44 1251.67,1214.04 1252.26,1214.96 1252.84,1217.48 1253.43,1217.16 1254.02,1218.37 1254.6,1217.83 1255.19,1217.41 1255.78,1217.31 1256.36,1216.97 1256.95,1219.04 1257.53,1217.3 1258.12,1215.64 1258.71,1214.36 1259.29,1215.68 1259.88,1215.33 1260.47,1213.91 1261.05,1215.34 1261.64,1214.97 1262.23,1218.78 1262.81,1216.93 1263.4,1220.56 1263.98,1217.5 1264.57,1215.8 1265.16,1215.55 1265.74,1219.5 1266.33,1218.91 1266.92,1219.94 1267.5,1219.45 1268.09,1218.97 1268.68,1215.95 1269.26,1214.27 1269.85,1211.46 1270.44,1208.8 1271.02,1206.18 1271.61,1208.08 1272.19,1208.35 1272.78,1208.5 1273.37,1205.92 1273.95,1204.79 1274.54,1205.19 1275.13,1205.52 1275.71,1207.4 1276.3,1210.2 1276.89,1210.28 1277.47,1209.33 1278.06,1207.92 1278.65,1209.42 1279.23,1209.28 1279.82,1211.99 1280.4,1209.38 1280.99,1208.25 1281.58,1208.5 1282.16,1208.72 1282.75,1208.86 1283.34,1210.27 1283.92,1210.28 1284.51,1210.36 1285.1,1207.81 1285.68,1207.94 1286.27,1204.41 1286.86,1203.21 1287.44,1203.98 1288.03,1204.3 1288.61,1206.29 1289.2,1208.02 1289.79,1206.91 1290.37,1206.29 1290.96,1205.05 1291.55,1209.27 1292.13,1210.87 1292.72,1214.52 1293.31,1214.72 1293.89,1214.4 1294.48,1214.35 1295.06,1212.72 1295.65,1212.71 1296.24,1211.31 1296.82,1214.13 1297.41,1212.82 1298,1214.06 1298.58,1215.26 1299.17,1215.18 1299.76,1215.17 1300.34,1215.04 1300.93,1214.63 1301.52,1217.24 1302.1,1215.8 1302.69,1218.35 1303.27,1215.4 1303.86,1215.48 1304.45,1213.94 1305.03,1212.34 1305.62,1212.21 1306.21,1215.11 1306.79,1216.09 1307.38,1214.85 1307.97,1214.74 1308.55,1215.73 1309.14,1214.32 1309.73,1210.27 1310.31,1210.17 1310.9,1210.47 1311.48,1207.96 1312.07,1209.59 1312.66,1208.42 1313.24,1212.32 1313.83,1215.12 1314.42,1217.51 1315,1218.4 1315.59,1216.76 1316.18,1215.21 1316.76,1215.24 1317.35,1212.44 1317.93,1212.25 1318.52,1212.05 1319.11,1214.82 1319.69,1214.84 1320.28,1217.6 1320.87,1217.32 1321.45,1215.74 1322.04,1213.03 1322.63,1214.38 1323.21,1215.75 1323.8,1215.55 1324.39,1214.1 1324.97,1216.81 1325.56,1217.81 1326.14,1216.28 1326.73,1216.04 1327.32,1217.22 1327.9,1215.5 1328.49,1212.65 1329.08,1212.35 1329.66,1213.5 1330.25,1213.38 1330.84,1214.98 1331.42,1213.41 1332.01,1212.06 1332.6,1211.84 1333.18,1210.33 1333.77,1211.89 1334.35,1209.3 1334.94,1212.24 1335.53,1212.27 1336.11,1213.39 1336.7,1210.44 1337.29,1209.19 1337.87,1210.65 1338.46,1210.78 1339.05,1208.14 1339.63,1205.46 1340.22,1207.1 1340.8,1208.83 1341.39,1208.94 1341.98,1210.57 1342.56,1209.37 1343.15,1211.04 1343.74,1212.33 1344.32,1213.45 1344.91,1213.2 1345.5,1212.88 1346.08,1213.01 1346.67,1210.24 1347.26,1213.06 1347.84,1211.71 1348.43,1209.09 1349.01,1210.47 1349.6,1210.63 1350.19,1209.52 1350.77,1209.88 1351.36,1210.16 1351.95,1212.82 1352.53,1212.81 1353.12,1213.03 1353.71,1211.51 1354.29,1212.84 1354.88,1213.01 1355.47,1213.16 1356.05,1213.3 1356.64,1214.47 1357.22,1209.04 1357.81,1213.1 1358.4,1215.47 1358.98,1216.37 1359.57,1213.46 1360.16,1211.62 1360.74,1212.82 1361.33,1212.57 1361.92,1212.6 1362.5,1214.12 1363.09,1212.65 1363.68,1214.26 1364.26,1215.54 1364.85,1216.71 1365.43,1220.79 1366.02,1221.37 1366.61,1220.77 1367.19,1217.48 1367.78,1218.36 1368.37,1219.39 1368.95,1220.14 1369.54,1215.73 1370.13,1215.83 1370.71,1215.38 1371.3,1219.37 1371.88,1217.74 1372.47,1216.09 1373.06,1216.94 1373.64,1216.75 1374.23,1215.17 1374.82,1213.98 1375.4,1212.36 1375.99,1212.25 1376.58,1213.52 1377.16,1211.13 1377.75,1210.98 1378.34,1210.71 1378.92,1206.75 1379.51,1208.23 1380.09,1207.17 1380.68,1206.1 1381.27,1206.25 1381.85,1207.89 1382.44,1206.59 1383.03,1204.09 1383.61,1204.48 1384.2,1202.27 1384.79,1203.85 1385.37,1204.28 1385.96,1204.49 1386.55,1204.79 1387.13,1204.9 1387.72,1202.54 1388.3,1203.21 1388.89,1204.92 1389.48,1204.02 1390.06,1203.35 1390.65,1204.01 1391.24,1205.87 1391.82,1205.97 1392.41,1206.24 1393,1203.84 1393.58,1205.62 1394.17,1207.24 1394.75,1206.32 1395.34,1206.83 1395.93,1204.65 1396.51,1206.39 1397.1,1206.65 1397.69,1207.25 1398.27,1209.05 1398.86,1211.8 1399.45,1214.39 1400.03,1217.81 1400.62,1217.69 1401.21,1217.36 1401.79,1219.58 1402.38,1219.24 1402.96,1220.05 1403.55,1218.35 1404.14,1219.31 1404.72,1218.95 1405.31,1218.77 1405.9,1216.88 1406.48,1215.46 1407.07,1215.48 1407.66,1215.34 1408.24,1216.34 1408.83,1213.38 1409.42,1210.72 1410,1210.97 1410.59,1208.45 1411.17,1211.11 1411.76,1211.37 1412.35,1209.83 1412.93,1209.9 1413.52,1208.66 1414.11,1210.13 1414.69,1210.47 1415.28,1211.65 1415.87,1211.56 1416.45,1212.96 1417.04,1211.68 1417.63,1212.97 1418.21,1210.51 1418.8,1207.88 1419.38,1205.66 1419.97,1206.29 1420.56,1204.2 1421.14,1205.93 1421.73,1207.56 1422.32,1206.41 1422.9,1207.96 1423.49,1206.76 1424.08,1207.12 1424.66,1208.44 1425.25,1205.79 1425.83,1207.33 1426.42,1207.44 1427.01,1208.74 1427.59,1208.83 1428.18,1209.16 1428.77,1209.36 1429.35,1210.87 1429.94,1211.04 1430.53,1211.14 1431.11,1211.06 1431.7,1211.24 1432.29,1211.08 1432.87,1211.15 1433.46,1210 1434.04,1209.96 1434.63,1212.73 1435.22,1212.5 1435.8,1211.07 1436.39,1208.26 1436.98,1209.55 1437.56,1209.47 1438.15,1208.46 1438.74,1207.64 1439.32,1207.98 1439.91,1207.95 1440.5,1208.2 1441.08,1209.6 1441.67,1215.19 1442.25,1215.05 1442.84,1214.82 1443.43,1213.14 1444.01,1213.28 1444.6,1216.06 1445.19,1216.92 1445.77,1217.98 1446.36,1215.1 1446.95,1213.42 1447.53,1214.93 1448.12,1212.15 1448.7,1213.83 1449.29,1213.77 1449.88,1212.76 1450.46,1216.67 1451.05,1213.84 1451.64,1213.63 1452.22,1213.5 1452.81,1214.71 1453.4,1215.94 1453.98,1217.02 1454.57,1213.01 1455.16,1214.47 1455.74,1214.21 1456.33,1216.43 1456.91,1216.28 1457.5,1214.89 1458.09,1214.86 1458.67,1214.58 1459.26,1211.87 1459.85,1213.38 1460.43,1211.98 1461.02,1211.56 1461.61,1211.36 1462.19,1216.55 1462.78,1218.84 1463.37,1216.88 1463.95,1217.88 1464.54,1217.48 1465.12,1215.98 1465.71,1217.01 1466.3,1216.76 1466.88,1220.42 1467.47,1220.04 1468.06,1222.12 1468.64,1221.55 1469.23,1218.63 1469.82,1218.27 1470.4,1219.13 1470.99,1217.25 1471.57,1218.05 1472.16,1220.05 1472.75,1220.72 1473.33,1220.4 1473.92,1214.59 1474.51,1211.57 1475.09,1211.42 1475.68,1215.36 1476.27,1215.03 1476.85,1209.38 1477.44,1210.81 1478.03,1209.48 1478.61,1209.59 1479.2,1209.54 1479.78,1208.41 1480.37,1209.92 1480.96,1207.47 1481.54,1207.33 1482.13,1207.45 1482.72,1208.9 1483.3,1209.28 1483.89,1209.1 1484.48,1210.68 1485.06,1209.31 1485.65,1210.84 1486.24,1209.71 1486.82,1212.56 1487.41,1210.05 1487.99,1208.85 1488.58,1207.69 1489.17,1208.03 1489.75,1208.15 1490.34,1206.84 1490.93,1205.93 1491.51,1207.71 1492.1,1207.78 1492.69,1207.98 1493.27,1205.4 1493.86,1207.15 1494.45,1207.17 1495.03,1206.25 1495.62,1206.73 1496.2,1209.42 1496.79,1208.39 1497.38,1210.06 1497.96,1210.13 1498.55,1211.66 1499.14,1213.12 1499.72,1213.03 1500.31,1211.72 1500.9,1211.75 1501.48,1210.67 1502.07,1209.63 1502.65,1211.01 1503.24,1207.29 1503.83,1207.42 1504.41,1206.46 1505,1208.06 1505.59,1210.81 1506.17,1213.62 1506.76,1212.15 1507.35,1208.14 1507.93,1208.52 1508.52,1204.69 1509.11,1206.32 1509.69,1207.98 1510.28,1209.61 1510.86,1209.99 1511.45,1213.68 1512.04,1215.13 1512.62,1216.42 1513.21,1214.73 1513.8,1214.5 1514.38,1215.58 1514.97,1214.03 1515.56,1213.84 1516.14,1215.08 1516.73,1217.8 1517.32,1217.41 1517.9,1217.33 1518.49,1215.66 1519.07,1215.51 1519.66,1215.02 1520.25,1214.7 1520.83,1214.55 1521.42,1215.91 1522.01,1217.03 1522.59,1214.19 1523.18,1214.13 1523.77,1215.24 1524.35,1215.02 1524.94,1216.17 1525.52,1214.72 1526.11,1215.9 1526.7,1215.52 1527.28,1213.93 1527.87,1213.75 1528.46,1215.92 1529.04,1214.39 1529.63,1209.05 1530.22,1206.75 1530.8,1203.15 1531.39,1202.11 1531.98,1205.3 1532.56,1205.4 1533.15,1205.86 1533.73,1204.68 1534.32,1201.33 1534.91,1200.55 1535.49,1201.3 1536.08,1202.91 1536.67,1200.8 1537.25,1200.06 1537.84,1200.76 1538.43,1201.83 1539.01,1202.2 1539.6,1204.06 1540.19,1204.4 1540.77,1206.03 1541.36,1207.44 1541.94,1206.32 1542.53,1206.77 1543.12,1204.57 1543.7,1208.98 1544.29,1209.03 1544.88,1212.04 1545.46,1209.48 1546.05,1210.86 1546.64,1211.23 1547.22,1212.29 1547.81,1210.84 1548.4,1209.71 1548.98,1208.7 1549.57,1208.82 1550.15,1209.07 1550.74,1210.54 1551.33,1210.68 1551.91,1212.28 1552.5,1211.88 1553.09,1210.69 1553.67,1210.67 1554.26,1210.66 1554.85,1209.25 1555.43,1210.47 1556.02,1209.56 1556.6,1209.68 1557.19,1211.24 1557.78,1211.22 1558.36,1208.66 1558.95,1210.23 1559.54,1209.14 1560.12,1209.36 1560.71,1208.37 1561.3,1207.53 1561.88,1206.73 1562.47,1205.68 1563.06,1208.44 1563.64,1208.88 1564.23,1211.46 1564.81,1211.65 1565.4,1211.79 1565.99,1211.89 1566.57,1211.94 1567.16,1210.61 1567.75,1210.84 1568.33,1212.18 1568.92,1210.76 1569.51,1213.58 1570.09,1213.46 1570.68,1214.65 1571.27,1213.48 1571.85,1213.47 1572.44,1213.43 1573.02,1210.86 1573.61,1210.87 1574.2,1210.91 1574.78,1212.29 1575.37,1209.66 1575.96,1211.16 1576.54,1210.18 1577.13,1211.62 1577.72,1210.4 1578.3,1211.65 1578.89,1211.81 1579.47,1210.64 1580.06,1211.98 1580.65,1210.77 1581.23,1210.85 1581.82,1208.15 1582.41,1208.4 1582.99,1211.06 1583.58,1210.91 1584.17,1213.61 1584.75,1213.55 1585.34,1213.59 1585.93,1213.56 1586.51,1211.98 1587.1,1214.44 1587.68,1215.55 1588.27,1216.92 1588.86,1216.36 1589.44,1214.62 1590.03,1215.86 1590.62,1215.56 1591.2,1216.71 1591.79,1218.75 1592.38,1215.89 1592.96,1218.35 1593.55,1221.97 1594.14,1220.41 1594.72,1222.59 1595.31,1223.19 1595.89,1221.18 1596.48,1219.56 1597.07,1219.24 1597.65,1217.68 1598.24,1211.92 1598.83,1214.59 1599.41,1215.84 1600,1214.41 1600.59,1214.32 1601.17,1215.65 1601.76,1213 1602.34,1212.69 1602.93,1212.43 1603.52,1212.33 1604.1,1212.14 1604.69,1206.68 1605.28,1206.81 1605.86,1204.38 1606.45,1206.07 1607.04,1206.47 1607.62,1204.18 1608.21,1204.61 1608.8,1203.58 1609.38,1204.13 1609.97,1205.65 1610.55,1208.67 1611.14,1209.98 1611.73,1211.04 1612.31,1212.54 1612.9,1212.32 1613.49,1212.57 1614.07,1212.61 1614.66,1212.63 1615.25,1212.49 1615.83,1212.49 1616.42,1212.5 1617.01,1213.92 1617.59,1213.96 1618.18,1212.9 1618.76,1213.9 1619.35,1213.72 1619.94,1214.77 1620.52,1213.25 1621.11,1211.77 1621.7,1214.44 1622.28,1217.99 1622.87,1216.26 1623.46,1217.1 1624.04,1217.86 1624.63,1216.42 1625.22,1213.44 1625.8,1213.19 1626.39,1214.22 1626.97,1215.18 1627.56,1214.81 1628.15,1210.72 1628.73,1207.9 1629.32,1208.09 1629.91,1211.26 1630.49,1211.32 1631.08,1212.7 1631.67,1212.62 1632.25,1212.34 1632.84,1212.41 1633.42,1213.71 1634.01,1213.83 1634.6,1215.05 1635.18,1216.18 1635.77,1213.41 1636.36,1214.63 1636.94,1214.51 1637.53,1215.34 1638.12,1213.91 1638.7,1211.28 1639.29,1208.63 1639.88,1209.95 1640.46,1208.48 1641.05,1210.1 1641.63,1211.18 1642.22,1212.84 1642.81,1212.96 1643.39,1212.69 1643.98,1213.99 1644.57,1216.35 1645.15,1213.63 1645.74,1212.16 1646.33,1210.98 1646.91,1208.48 1647.5,1211.56 1648.09,1214.1 1648.67,1213.86 1649.26,1216.61 1649.84,1216.16 1650.43,1217.28 1651.02,1215.91 1651.6,1216.82 1652.19,1215.51 1652.78,1214.26 1653.36,1210.27 1653.95,1210.17 1654.54,1208.91 1655.12,1210.29 1655.71,1207.37 1656.29,1206.4 1656.88,1204.41 1657.47,1206.18 1658.05,1204.95 1658.64,1209.37 1659.23,1208.01 1659.81,1207.09 1660.4,1211.25 1660.99,1212.77 1661.57,1211.59 1662.16,1211.71 1662.75,1210.63 1663.33,1209.36 1663.92,1210.6 1664.5,1209.4 1665.09,1208.31 1665.68,1206.06 1666.26,1205.09 1666.85,1204.3 1667.44,1206.02 1668.02,1209.24 1668.61,1210.72 1669.2,1209.33 1669.78,1208.4 1670.37,1210.99 1670.96,1213.81 1671.54,1212.24 1672.13,1213.57 1672.71,1213.62 1673.3,1214.7 1673.89,1214.56 1674.47,1213.45 1675.06,1213.41 1675.65,1211.91 1676.23,1211.86 1676.82,1210.77 1677.41,1209.38 1677.99,1209.64 1678.58,1210.94 1679.17,1213.67 1679.75,1214.72 1680.34,1213.25 1680.92,1210.69 1681.51,1209.3 1682.1,1213.3 1682.68,1211.86 1683.27,1212.01 1683.86,1212.07 1684.44,1210.62 1685.03,1210.46 1685.62,1209.25 1686.2,1208.24 1686.79,1208.17 1687.37,1208.48 1687.96,1210.21 1688.55,1210.71 1689.13,1212.21 1689.72,1209.72 1690.31,1207.4 1690.89,1208.68 1691.48,1211.62 1692.07,1213.25 1692.65,1211.85 1693.24,1211.65 1693.83,1212.82 1694.41,1211.23 1695,1212.5 1695.58,1214.16 1696.17,1215.75 1696.76,1214.65 1697.34,1212.88 1697.93,1212.51 1698.52,1213.4 1699.1,1214.45 1699.69,1215.49 1700.28,1213.66 1700.86,1210.94 1701.45,1211.13 1702.04,1208.6 1702.62,1208.74 1703.21,1209.01 1703.79,1207.94 1704.38,1209.66 1704.97,1211.09 1705.55,1211.24 1706.14,1213.96 1706.73,1214.92 1707.31,1211.06 1707.9,1212.36 1708.49,1214.73 1709.07,1215.79 1709.66,1218.52 1710.24,1220.75 1710.83,1221.64 1711.42,1222.67 1712,1224.87 1712.59,1222.95 1713.18,1221.34 1713.76,1220.98 1714.35,1224.21 1714.94,1224.98 1715.52,1224.25 1716.11,1223.51 1716.7,1222.96 1717.28,1221.09 1717.87,1220.59 1718.45,1221.13 1719.04,1220.68 1719.63,1221.49 1720.21,1221.44 1720.8,1220.86 1721.39,1221.71 1721.97,1221.1 1722.56,1220.76 1723.15,1218.75 1723.73,1216.98 1724.32,1215.16 1724.91,1214.71 1725.49,1214.6 1726.08,1214.34 1726.66,1213.81 1727.25,1212.07 1727.84,1213.43 1728.42,1213.39 1729.01,1213.11 1729.6,1210.66 1730.18,1209.2 1730.77,1208.12 1731.36,1209.86 1731.94,1208.56 1732.53,1206.19 1733.11,1202.62 1733.7,1201.82 1734.29,1203.33 1734.87,1205.07 1735.46,1205.19 1736.05,1204.29 1736.63,1204.62 1737.22,1206.31 1737.81,1205.34 1738.39,1205.73 1738.98,1204.74 1739.57,1206.32 1740.15,1206.45 1740.74,1206.56 1741.32,1205.6 1741.91,1205.71 1742.5,1203.67 1743.08,1204.37 1743.67,1206.1 1744.26,1203.94 1744.84,1205.75 1745.43,1204.86 1746.02,1205.03 1746.6,1208.04 1747.19,1205.52 1747.78,1209.69 1748.36,1209.87 1748.95,1209.84 1749.53,1211.11 1750.12,1211.15 1750.71,1211.58 1751.29,1211.86 1751.88,1209.21 1752.47,1209.58 1753.05,1209.66 1753.64,1208.56 1754.23,1207.48 1754.81,1207.69 1755.4,1206.65 1755.99,1205.8 1756.57,1208.99 1757.16,1207.7 1757.74,1208 1758.33,1208.13 1758.92,1208.43 1759.5,1208.45 1760.09,1208.54 1760.68,1207.4 1761.26,1208.77 1761.85,1207.73 1762.44,1206.47 1763.02,1206.94 1763.61,1206.99 1764.19,1208.83 1764.78,1209.15 1765.37,1208.02 1765.95,1209.57 1766.54,1208.38 1767.13,1207.28 1767.71,1207.63 1768.3,1206.4 1768.89,1208.01 1769.47,1208.27 1770.06,1213.52 1770.65,1212.23 1771.23,1213.45 1771.82,1212.24 1772.4,1213.38 1772.99,1215.92 1773.58,1215.48 1774.16,1215.45 1774.75,1216.4 1775.34,1218.79 1775.92,1221.01 1776.51,1220.48 1777.1,1218.54 1777.68,1222.17 1778.27,1220.01 1778.86,1219.58 1779.44,1219.1 1780.03,1218.76 1780.61,1218.36 1781.2,1220.72 1781.79,1221.63 1782.37,1222.36 1782.96,1216.64 1783.55,1217.92 1784.13,1214.83 1784.72,1215.92 1785.31,1213 1785.89,1213 1786.48,1212.94 1787.06,1212.73 1787.65,1215.33 1788.24,1214.98 1788.82,1214.66 1789.41,1212.18 1790,1213.43 1790.58,1213.16 1791.17,1214.34 1791.76,1215.4 1792.34,1215.13 1792.93,1212.3 1793.52,1212.32 1794.1,1210.85 1794.69,1209.42 1795.27,1208.59 1795.86,1208.67 1796.45,1212.8 1797.03,1215.41 1797.62,1216.4 1798.21,1216.31 1798.79,1216.18 1799.38,1216.12 1799.97,1218.6 1800.55,1218.41 1801.14,1217.01 1801.73,1215.34 1802.31,1212.44 1802.9,1216.3 1803.48,1217.41 1804.07,1217.46 1804.66,1217 1805.24,1215.27 1805.83,1213.78 1806.42,1213.54 1807,1212.23 1807.59,1210.71 1808.18,1210.51 1808.76,1211.65 1809.35,1211.72 1809.94,1211.61 1810.52,1212.97 1811.11,1211.39 1811.69,1214.26 1812.28,1212.83 1812.87,1210.13 1813.45,1210.38 1814.04,1210.36 1814.63,1210.54 1815.21,1213.02 1815.8,1211.74 1816.39,1211.63 1816.97,1214.4 1817.56,1215.59 1818.14,1214.98 1818.73,1217.53 1819.32,1214.59 1819.9,1214.15 1820.49,1212.98 1821.08,1213 1821.66,1212.73 1822.25,1208.67 1822.84,1210.26 1823.42,1209.29 1824.01,1209.59 1824.6,1209.67 1825.18,1211.13 1825.77,1209.78 1826.35,1209.77 1826.94,1209.81 1827.53,1211.45 1828.11,1214.11 1828.7,1212.85 1829.29,1212.83 1829.87,1215.42 1830.46,1215.31 1831.05,1215.3 1831.63,1216.36 1832.22,1214.91 1832.81,1211.94 1833.39,1209.15 1833.98,1213.26 1834.56,1214.59 1835.15,1214.39 1835.74,1214.46 1836.32,1214.25 1836.91,1214.19 1837.5,1212.73 1838.08,1212.33 1838.67,1212.18 1839.26,1210.7 1839.84,1209.71 1840.43,1209.91 1841.01,1211.39 1841.6,1212.75 1842.19,1214.28 1842.77,1213.98 1843.36,1209.74 1843.95,1212.23 1844.53,1209.81 1845.12,1211.28 1845.71,1211.43 1846.29,1212.8 1846.88,1212.57 1847.47,1213.77 1848.05,1216.17 1848.64,1211.93 1849.22,1213.12 1849.81,1214.17 1850.4,1216.64 1850.98,1216.24 1851.57,1214.5 1852.16,1215.56 1852.74,1219.39 1853.33,1220.38 1853.92,1221.16 1854.5,1223.19 1855.09,1222.58 1855.68,1218.11 1856.26,1216.65 1856.85,1216.47 1857.43,1216.44 1858.02,1216.09 1858.61,1214.38 1859.19,1214.18 1859.78,1216.68 1860.37,1213.49 1860.95,1213.43 1861.54,1209.47 1862.13,1209.74 1862.71,1208.46 1863.3,1208.88 1863.88,1207.81 1864.47,1208.19 1865.06,1209.87 1865.64,1209.78 1866.23,1209.89 1866.82,1209.98 1867.4,1211.65 1867.99,1212 1868.58,1213.39 1869.16,1211.78 1869.75,1214.01 1870.34,1211.28 1870.92,1210.14 1871.51,1212.97 1872.09,1212.87 1872.68,1215.29 1873.27,1212.58 1873.85,1212.64 1874.44,1216.47 1875.03,1217.57 1875.61,1218.38 1876.2,1219.4 1876.79,1221.83 1877.37,1222.69 1877.96,1221.08 1878.55,1220.77 1879.13,1221.55 1879.72,1221.07 1880.3,1223.27 1880.89,1221.11 1881.48,1220.67 1882.06,1218.82 1882.65,1217.51 1883.24,1220.94 1883.82,1220.41 1884.41,1217.56 1885,1217.2 1885.58,1217.07 1886.17,1216.72 1886.76,1217.7 1887.34,1215.68 1887.93,1212.86 1888.51,1210.2 1889.1,1207.7 1889.69,1211.97 1890.27,1209.46 1890.86,1211.01 1891.45,1209.5 1892.03,1213.66 1892.62,1215.06 1893.21,1213.56 1893.79,1216.1 1894.38,1214.48 1894.96,1217.08 1895.55,1215.25 1896.14,1216.31 1896.72,1217.43 1897.31,1218.38 1897.9,1215.4 1898.48,1212.44 1899.07,1210.94 1899.66,1211.08 1900.24,1210.12 1900.83,1209.03 1901.42,1207.81 1902,1205.19 1902.59,1206.8 1903.17,1202.66 1903.76,1203.03 1904.35,1202.3 1904.93,1203.31 1905.52,1203.63 1906.11,1199.88 1906.69,1202.03 1907.28,1202.76 1907.87,1204.79 1908.45,1202.58 1909.04,1205.34 1909.63,1205.84 1910.21,1204.99 1910.8,1204.25 1911.38,1204.56 1911.97,1206.45 1912.56,1208.24 1913.14,1205.73 1913.73,1206.1 1914.32,1207.89 1914.9,1210.98 1915.49,1209.64 1916.08,1210.91 1916.66,1209.44 1917.25,1208.35 1917.83,1211.23 1918.42,1211.33 1919.01,1212.44 1919.59,1211.38 1920.18,1212.78 1920.77,1210.11 1921.35,1212.85 1921.94,1212.87 1922.53,1211.78 1923.11,1212.87 1923.7,1212.97 1924.29,1211.48 1924.87,1211.37 1925.46,1210.18 1926.04,1208.8 1926.63,1207.72 1927.22,1207.91 1927.8,1206.86 1928.39,1205.8 1928.98,1208.84 1929.56,1211.93 1930.15,1209.05 1930.74,1206.8 1931.32,1207.01 1931.91,1208.72 1932.5,1208.76 1933.08,1210.36 1933.67,1211.91 1934.25,1210.23 1934.84,1211.58 1935.43,1211.85 1936.01,1211.74 1936.6,1212.87 1937.19,1211.39 1937.77,1210.18 1938.36,1210.21 1938.95,1208.77 1939.53,1206.24 1940.12,1206.36 1940.71,1206.71 1941.29,1207.2 1941.88,1209.09 1942.46,1209.16 1943.05,1209.39 1943.64,1216.14 1944.22,1219.83 1944.81,1218.07 1945.4,1217.66 1945.98,1217.35 1946.57,1216.91 1947.16,1216.47 1947.74,1214.91 1948.33,1216.23 1948.91,1211.9 1949.5,1213.38 1950.09,1214.88 1950.67,1214.79 1951.26,1209.47 1951.85,1208.33 1952.43,1205.82 1953.02,1210.34 1953.61,1210.32 1954.19,1210.55 1954.78,1216.26 1955.37,1218.68 1955.95,1217.09 1956.54,1215.25 1957.12,1213.56 1957.71,1208.52 1958.3,1209.91 1958.88,1208.44 1959.47,1210.03 1960.06,1208.67 1960.64,1210.15 1961.23,1210.04 1961.82,1212.84 1962.4,1212.57 1962.99,1212.56 1963.58,1211.21 1964.16,1209.92 1964.75,1210.4 1965.33,1211.62 1965.92,1216.99 1966.51,1214.06 1967.09,1215.31 1967.68,1215.34 1968.27,1212.89 1968.85,1210.32 1969.44,1210.3 1970.03,1211.62 1970.61,1211.79 1971.2,1210.65 1971.78,1210.71 1972.37,1209.43 1972.96,1209.51 1973.54,1205.59 1974.13,1204.5 1974.72,1204.74 1975.3,1204.97 1975.89,1204.03 1976.48,1203.06 1977.06,1203.48 1977.65,1202.48 1978.24,1204.44 1978.82,1206.38 1979.41,1206.36 1979.99,1205.54 1980.58,1205.72 1981.17,1206.08 1981.75,1206.4 1982.34,1204.18 1982.93,1208.44 1983.51,1204.54 1984.1,1205.14 1984.69,1207.1 1985.27,1207.15 1985.86,1206.28 1986.45,1207.9 1987.03,1210.91 1987.62,1209.72 1988.2,1207.05 1988.79,1203.04 1989.38,1203.44 1989.96,1202.48 1990.55,1201.64 1991.14,1201.98 1991.72,1206.28 1992.31,1206.3 1992.9,1203.95 1993.48,1204.45 1994.07,1203.32 1994.65,1202.45 1995.24,1203.05 1995.83,1202.32 1996.41,1207.06 1997,1208.47 1997.59,1207.44 1998.17,1206.54 1998.76,1206.62 1999.35,1205.36 1999.93,1209.39 2000.52,1213.55 2001.11,1213.83 2001.69,1215.14 2002.28,1214.97 2002.86,1213.68 2003.45,1213.89 2004.04,1213.76 2004.62,1211.15 2005.21,1210.85 2005.8,1210.79 2006.38,1212.29 2006.97,1213.88 2007.56,1215.11 2008.14,1213.65 2008.73,1213.56 2009.32,1213.49 2009.9,1214.82 2010.49,1214.56 2011.07,1213.01 2011.66,1215.29 2012.25,1212.55 2012.83,1212.43 2013.42,1211.16 2014.01,1212.57 2014.59,1212.63 2015.18,1211.45 2015.77,1208.98 2016.35,1208.31 2016.94,1208.4 2017.53,1212.65 2018.11,1211.13 2018.7,1211.25 2019.28,1213.89 2019.87,1212.42 2020.46,1215.08 2021.04,1213.57 2021.63,1213.24 2022.22,1211.97 2022.8,1212.08 2023.39,1209.26 2023.98,1209.09 2024.56,1208.24 2025.15,1209.82 2025.73,1207.39 2026.32,1210.32 2026.91,1209.02 2027.49,1210.57 2028.08,1211.96 2028.67,1211.92 2029.25,1213.39 2029.84,1213.23 2030.43,1211.99 2031.01,1212.27 2031.6,1213.37 2032.19,1211.74 2032.77,1209.16 2033.36,1210.82 2033.94,1210.84 2034.53,1212.27 2035.12,1212.33 2035.7,1212.23 2036.29,1214.91 2036.88,1214.9 2037.46,1217.2 2038.05,1219.69 2038.64,1217.79 2039.22,1217.84 2039.81,1217.42 2040.4,1218.27 2040.98,1216.38 2041.57,1214.93 2042.15,1215.98 2042.74,1214.59 2043.33,1214.62 2043.91,1211.81 2044.5,1210.43 2045.09,1207.88 2045.67,1209.53 2046.26,1209.63 2046.85,1210.04 2047.43,1210.09 2048.02,1210.16 2048.6,1210.3 2049.19,1210.41 2049.78,1212.9 2050.36,1213.01 2050.95,1211.36 2051.54,1213.99 2052.12,1216.49 2052.71,1216.33 2053.3,1215.92 2053.88,1215.66 2054.47,1212.95 2055.06,1214.32 2055.64,1216.68 2056.23,1216.46 2056.81,1213.74 2057.4,1216.33 2057.99,1218.72 2058.57,1218.42 2059.16,1217.98 2059.75,1217.68 2060.33,1215.84 2060.92,1215.78 2061.51,1215.61 2062.09,1215.57 2062.68,1212.77 2063.27,1208.61 2063.85,1210.1 2064.44,1208.9 2065.02,1207.65 2065.61,1208.24 2066.2,1209.84 2066.78,1212.3 2067.37,1214.7 2067.96,1213.33 2068.54,1213.15 2069.13,1211.77 2069.72,1212.96 2070.3,1212.65 2070.89,1215.13 2071.48,1213.55 2072.06,1213.48 2072.65,1211.98 2073.23,1211.82 2073.82,1210.51 2074.41,1209.16 2074.99,1211.75 2075.58,1213 2076.17,1210.3 2076.75,1210.6 2077.34,1210.57 2077.93,1207.88 2078.51,1208.05 2079.1,1209.71 2079.68,1210.03 2080.27,1209.94 2080.86,1209.95 2081.44,1210.41 2082.03,1210.32 2082.62,1206.36 2083.2,1205.2 2083.79,1206.72 2084.38,1208.17 2084.96,1212.35 2085.55,1208.54 2086.14,1208.71 2086.72,1209.01 2087.31,1209.17 2087.89,1206.87 2088.48,1208.48 2089.07,1207.34 2089.65,1208.98 2090.24,1207.75 2090.83,1208.25 2091.41,1209.76 2092,1209.55 2092.59,1208.21 2093.17,1208.64 2093.76,1208.55 2094.35,1207.3 2094.93,1208.9 2095.52,1209.12 2096.1,1210.51 2096.69,1212.01 2097.28,1210.51 2097.86,1214.67 2098.45,1215.55 2099.04,1215.46 2099.62,1215.18 2100.21,1215.15 2100.8,1212.64 2101.38,1211.47 2101.97,1213.15 2102.55,1212.72 2103.14,1213.89 2103.73,1213.88 2104.31,1213.82 2104.9,1215.18 2105.49,1214.88 2106.07,1214.89 2106.66,1215.07 2107.25,1217.2 2107.83,1218.08 2108.42,1217.75 2109.01,1219.83 2109.59,1220.7 2110.18,1220.2 2110.76,1219.81 2111.35,1222.04 2111.94,1221.73 2112.52,1221.45 2113.11,1220.88 2113.7,1220.64 2114.28,1220 2114.87,1220.71 2115.46,1221.74 2116.04,1223.7 2116.63,1223.16 2117.22,1222.64 2117.8,1219.41 2118.39,1217.63 2118.97,1217.39 2119.56,1215.28 2120.15,1215.3 2120.73,1215 2121.32,1217.21 2121.91,1215.9 2122.49,1215.73 2123.08,1215.42 2123.67,1213.9 2124.25,1213.9 2124.84,1212.34 2125.42,1212.33 2126.01,1213.68 2126.6,1213.7 2127.18,1212.52 2127.77,1216.42 2128.36,1217.45 2128.94,1216.89 2129.53,1218.99 2130.12,1218.76 2130.7,1218.32 2131.29,1216.66 2131.88,1213.85 2132.46,1213.47 2133.05,1213.21 2133.63,1209.38 2134.22,1206.7 2134.81,1207.32 2135.39,1206.31 2135.98,1206.48 2136.57,1206.43 2137.15,1206.67 2137.74,1204.2 2138.33,1202.15 2138.91,1204.08 2139.5,1207.2 2140.09,1208.81 2140.67,1209.01 2141.26,1209.08 2141.84,1207.89 2142.43,1205.38 2143.02,1209.72 2143.6,1208.66 2144.19,1207.68 2144.78,1209.17 2145.36,1210.51 2145.95,1209.2 2146.54,1209.4 2147.12,1211.04 2147.71,1212.11 2148.3,1213.36 2148.88,1213.14 2149.47,1214.3 2150.05,1211.45 2150.64,1208.82 2151.23,1206.21 2151.81,1206.38 2152.4,1207.82 2152.99,1204.24 2153.57,1206.07 2154.16,1205.17 2154.75,1206.94 2155.33,1208.39 2155.92,1208.38 2156.5,1207.4 2157.09,1208.84 2157.68,1206.36 2158.26,1204.15 \"/>\n<path clip-path=\"url(#clip192)\" d=\"M986.025 1212.18 L986.612 1212.18 L987.198 1212.18 L987.785 1212.18 L988.371 1212.18 L988.957 1212.18 L989.544 1212.18 L990.13 1212.18 L990.717 1212.18 L991.303 1212.18 L991.889 1212.18 L992.476 1212.18 L993.062 1212.18 L993.649 1212.18 L994.235 1212.18 L994.822 1212.18 L995.408 1212.18 L995.994 1212.18 L996.581 1212.18 L997.167 1212.18 L997.754 1212.18 L998.34 1212.18 L998.926 1212.18 L999.513 1212.18 L1000.1 1212.18 L1000.69 1212.18 L1001.27 1212.18 L1001.86 1212.18 L1002.44 1212.18 L1003.03 1212.18 L1003.62 1212.18 L1004.2 1212.18 L1004.79 1212.18 L1005.38 1212.18 L1005.96 1212.18 L1006.55 1212.18 L1007.14 1212.18 L1007.72 1212.18 L1008.31 1212.18 L1008.9 1212.18 L1009.48 1212.18 L1010.07 1212.18 L1010.65 1212.18 L1011.24 1212.18 L1011.83 1212.18 L1012.41 1212.18 L1013 1212.18 L1013.59 1212.18 L1014.17 1212.18 L1014.76 1212.18 L1015.35 1212.18 L1015.93 1212.18 L1016.52 1212.18 L1017.11 1212.18 L1017.69 1212.18 L1018.28 1212.18 L1018.86 1212.18 L1019.45 1212.18 L1020.04 1212.18 L1020.62 1212.18 L1021.21 1212.18 L1021.8 1212.18 L1022.38 1212.18 L1022.97 1212.18 L1023.56 1212.18 L1024.14 1212.18 L1024.73 1212.18 L1025.32 1212.18 L1025.9 1212.18 L1026.49 1212.18 L1027.07 1212.18 L1027.66 1212.18 L1028.25 1212.18 L1028.83 1212.18 L1029.42 1212.18 L1030.01 1212.18 L1030.59 1212.18 L1031.18 1212.18 L1031.77 1212.18 L1032.35 1212.18 L1032.94 1212.18 L1033.52 1212.18 L1034.11 1212.18 L1034.7 1212.18 L1035.28 1212.18 L1035.87 1212.18 L1036.46 1212.18 L1037.04 1212.18 L1037.63 1212.18 L1038.22 1212.18 L1038.8 1212.18 L1039.39 1212.18 L1039.98 1212.18 L1040.56 1212.18 L1041.15 1212.18 L1041.73 1212.18 L1042.32 1212.18 L1042.91 1212.18 L1043.49 1212.18 L1044.08 1212.18 L1044.67 1212.18 L1045.25 1212.18 L1045.84 1212.18 L1046.43 1212.18 L1047.01 1212.18 L1047.6 1212.18 L1048.19 1212.18 L1048.77 1212.18 L1049.36 1212.18 L1049.94 1212.18 L1050.53 1212.18 L1051.12 1212.18 L1051.7 1212.18 L1052.29 1212.18 L1052.88 1212.18 L1053.46 1212.18 L1054.05 1212.18 L1054.64 1212.18 L1055.22 1212.18 L1055.81 1212.18 L1056.39 1212.18 L1056.98 1212.18 L1057.57 1212.18 L1058.15 1212.18 L1058.74 1212.18 L1059.33 1212.18 L1059.91 1212.18 L1060.5 1212.18 L1061.09 1212.18 L1061.67 1212.18 L1062.26 1212.18 L1062.85 1212.18 L1063.43 1212.18 L1064.02 1212.18 L1064.6 1212.18 L1065.19 1212.18 L1065.78 1212.18 L1066.36 1212.18 L1066.95 1212.18 L1067.54 1212.18 L1068.12 1212.18 L1068.71 1212.18 L1069.3 1212.18 L1069.88 1212.18 L1070.47 1212.18 L1071.06 1212.18 L1071.64 1212.18 L1072.23 1212.18 L1072.81 1212.18 L1073.4 1212.18 L1073.99 1212.18 L1074.57 1212.18 L1075.16 1212.18 L1075.75 1212.18 L1076.33 1212.18 L1076.92 1212.18 L1077.51 1212.18 L1078.09 1212.18 L1078.68 1212.18 L1079.26 1212.18 L1079.85 1212.18 L1080.44 1212.18 L1081.02 1212.18 L1081.61 1212.18 L1082.2 1212.18 L1082.78 1212.18 L1083.37 1212.18 L1083.96 1212.18 L1084.54 1212.18 L1085.13 1212.18 L1085.72 1212.18 L1086.3 1212.18 L1086.89 1212.18 L1087.47 1212.18 L1088.06 1212.18 L1088.65 1212.18 L1089.23 1212.18 L1089.82 1212.18 L1090.41 1212.18 L1090.99 1212.18 L1091.58 1212.18 L1092.17 1212.18 L1092.75 1212.18 L1093.34 1212.18 L1093.93 1212.18 L1094.51 1212.18 L1095.1 1212.18 L1095.68 1212.18 L1096.27 1212.18 L1096.86 1212.18 L1097.44 1212.18 L1098.03 1212.18 L1098.62 1212.18 L1099.2 1212.18 L1099.79 1212.18 L1100.38 1212.18 L1100.96 1212.18 L1101.55 1212.18 L1102.14 1212.18 L1102.72 1212.18 L1103.31 1212.18 L1103.89 1212.18 L1104.48 1212.18 L1105.07 1212.18 L1105.65 1212.18 L1106.24 1212.18 L1106.83 1212.18 L1107.41 1212.18 L1108 1212.18 L1108.59 1212.18 L1109.17 1212.18 L1109.76 1212.18 L1110.34 1212.18 L1110.93 1212.18 L1111.52 1212.18 L1112.1 1212.18 L1112.69 1212.18 L1113.28 1212.18 L1113.86 1212.18 L1114.45 1212.18 L1115.04 1212.18 L1115.62 1212.18 L1116.21 1212.18 L1116.8 1212.18 L1117.38 1212.18 L1117.97 1212.18 L1118.55 1212.18 L1119.14 1212.18 L1119.73 1212.18 L1120.31 1212.18 L1120.9 1212.18 L1121.49 1212.18 L1122.07 1212.18 L1122.66 1212.18 L1123.25 1212.18 L1123.83 1212.18 L1124.42 1212.18 L1125.01 1212.18 L1125.59 1212.18 L1126.18 1212.18 L1126.76 1212.18 L1127.35 1212.18 L1127.94 1212.18 L1128.52 1212.18 L1129.11 1212.18 L1129.7 1212.18 L1130.28 1212.18 L1130.87 1212.18 L1131.46 1212.18 L1132.04 1212.18 L1132.63 1212.18 L1133.21 1212.18 L1133.8 1212.18 L1134.39 1212.18 L1134.97 1212.18 L1135.56 1212.18 L1136.15 1212.18 L1136.73 1212.18 L1137.32 1212.18 L1137.91 1212.18 L1138.49 1212.18 L1139.08 1212.18 L1139.67 1212.18 L1140.25 1212.18 L1140.84 1212.18 L1141.42 1212.18 L1142.01 1212.18 L1142.6 1212.18 L1143.18 1212.18 L1143.77 1212.18 L1144.36 1212.18 L1144.94 1212.18 L1145.53 1212.18 L1146.12 1212.18 L1146.7 1212.18 L1147.29 1212.18 L1147.88 1212.18 L1148.46 1212.18 L1149.05 1212.18 L1149.63 1212.18 L1150.22 1212.18 L1150.81 1212.18 L1151.39 1212.18 L1151.98 1212.18 L1152.57 1212.18 L1153.15 1212.18 L1153.74 1212.18 L1154.33 1212.18 L1154.91 1212.18 L1155.5 1212.18 L1156.09 1212.18 L1156.67 1212.18 L1157.26 1212.18 L1157.84 1212.18 L1158.43 1212.18 L1159.02 1212.18 L1159.6 1212.18 L1160.19 1212.18 L1160.78 1212.18 L1161.36 1212.18 L1161.95 1212.18 L1162.54 1212.18 L1163.12 1212.18 L1163.71 1212.18 L1164.29 1212.18 L1164.88 1212.18 L1165.47 1212.18 L1166.05 1212.18 L1166.64 1212.18 L1167.23 1212.18 L1167.81 1212.18 L1168.4 1212.18 L1168.99 1212.18 L1169.57 1212.18 L1170.16 1212.18 L1170.75 1212.18 L1171.33 1212.18 L1171.92 1212.18 L1172.5 1212.18 L1173.09 1212.18 L1173.68 1212.18 L1174.26 1212.18 L1174.85 1212.18 L1175.44 1212.18 L1176.02 1212.18 L1176.61 1212.18 L1177.2 1212.18 L1177.78 1212.18 L1178.37 1212.18 L1178.96 1212.18 L1179.54 1212.18 L1180.13 1212.18 L1180.71 1212.18 L1181.3 1212.18 L1181.89 1212.18 L1182.47 1212.18 L1183.06 1212.18 L1183.65 1212.18 L1184.23 1212.18 L1184.82 1212.18 L1185.41 1212.18 L1185.99 1212.18 L1186.58 1212.18 L1187.16 1212.18 L1187.75 1212.18 L1188.34 1212.18 L1188.92 1212.18 L1189.51 1212.18 L1190.1 1212.18 L1190.68 1212.18 L1191.27 1212.18 L1191.86 1212.18 L1192.44 1212.18 L1193.03 1212.18 L1193.62 1212.18 L1194.2 1212.18 L1194.79 1212.18 L1195.37 1212.18 L1195.96 1212.18 L1196.55 1212.18 L1197.13 1212.18 L1197.72 1212.18 L1198.31 1212.18 L1198.89 1212.18 L1199.48 1212.18 L1200.07 1212.18 L1200.65 1212.18 L1201.24 1212.18 L1201.83 1212.18 L1202.41 1212.18 L1203 1212.18 L1203.58 1212.18 L1204.17 1212.18 L1204.76 1212.18 L1205.34 1212.18 L1205.93 1212.18 L1206.52 1212.18 L1207.1 1212.18 L1207.69 1212.18 L1208.28 1212.18 L1208.86 1212.18 L1209.45 1212.18 L1210.03 1212.18 L1210.62 1212.18 L1211.21 1212.18 L1211.79 1212.18 L1212.38 1212.18 L1212.97 1212.18 L1213.55 1212.18 L1214.14 1212.18 L1214.73 1212.18 L1215.31 1212.18 L1215.9 1212.18 L1216.49 1212.18 L1217.07 1212.18 L1217.66 1212.18 L1218.24 1212.18 L1218.83 1212.18 L1219.42 1212.18 L1220 1212.18 L1220.59 1212.18 L1221.18 1212.18 L1221.76 1212.18 L1222.35 1212.18 L1222.94 1212.18 L1223.52 1212.18 L1224.11 1212.18 L1224.7 1212.18 L1225.28 1212.18 L1225.87 1212.18 L1226.45 1212.18 L1227.04 1212.18 L1227.63 1212.18 L1228.21 1212.18 L1228.8 1212.18 L1229.39 1212.18 L1229.97 1212.18 L1230.56 1212.18 L1231.15 1212.18 L1231.73 1212.18 L1232.32 1212.18 L1232.91 1212.18 L1233.49 1212.18 L1234.08 1212.18 L1234.66 1212.18 L1235.25 1212.18 L1235.84 1212.18 L1236.42 1212.18 L1237.01 1212.18 L1237.6 1212.18 L1238.18 1212.18 L1238.77 1212.18 L1239.36 1212.18 L1239.94 1212.18 L1240.53 1212.18 L1241.11 1212.18 L1241.7 1212.18 L1242.29 1212.18 L1242.87 1212.18 L1243.46 1212.18 L1244.05 1212.18 L1244.63 1212.18 L1245.22 1212.18 L1245.81 1212.18 L1246.39 1212.18 L1246.98 1212.18 L1247.57 1212.18 L1248.15 1212.18 L1248.74 1212.18 L1249.32 1212.18 L1249.91 1212.18 L1250.5 1212.18 L1251.08 1212.18 L1251.67 1212.18 L1252.26 1212.18 L1252.84 1212.18 L1253.43 1212.18 L1254.02 1212.18 L1254.6 1212.18 L1255.19 1212.18 L1255.78 1212.18 L1256.36 1212.18 L1256.95 1212.18 L1257.53 1212.18 L1258.12 1212.18 L1258.71 1212.18 L1259.29 1212.18 L1259.88 1212.18 L1260.47 1212.18 L1261.05 1212.18 L1261.64 1212.18 L1262.23 1212.18 L1262.81 1212.18 L1263.4 1212.18 L1263.98 1212.18 L1264.57 1212.18 L1265.16 1212.18 L1265.74 1212.18 L1266.33 1212.18 L1266.92 1212.18 L1267.5 1212.18 L1268.09 1212.18 L1268.68 1212.18 L1269.26 1212.18 L1269.85 1212.18 L1270.44 1212.18 L1271.02 1212.18 L1271.61 1212.18 L1272.19 1212.18 L1272.78 1212.18 L1273.37 1212.18 L1273.95 1212.18 L1274.54 1212.18 L1275.13 1212.18 L1275.71 1212.18 L1276.3 1212.18 L1276.89 1212.18 L1277.47 1212.18 L1278.06 1212.18 L1278.65 1212.18 L1279.23 1212.18 L1279.82 1212.18 L1280.4 1212.18 L1280.99 1212.18 L1281.58 1212.18 L1282.16 1212.18 L1282.75 1212.18 L1283.34 1212.18 L1283.92 1212.18 L1284.51 1212.18 L1285.1 1212.18 L1285.68 1212.18 L1286.27 1212.18 L1286.86 1212.18 L1287.44 1212.18 L1288.03 1212.18 L1288.61 1212.18 L1289.2 1212.18 L1289.79 1212.18 L1290.37 1212.18 L1290.96 1212.18 L1291.55 1212.18 L1292.13 1212.18 L1292.72 1212.18 L1293.31 1212.18 L1293.89 1212.18 L1294.48 1212.18 L1295.06 1212.18 L1295.65 1212.18 L1296.24 1212.18 L1296.82 1212.18 L1297.41 1212.18 L1298 1212.18 L1298.58 1212.18 L1299.17 1212.18 L1299.76 1212.18 L1300.34 1212.18 L1300.93 1212.18 L1301.52 1212.18 L1302.1 1212.18 L1302.69 1212.18 L1303.27 1212.18 L1303.86 1212.18 L1304.45 1212.18 L1305.03 1212.18 L1305.62 1212.18 L1306.21 1212.18 L1306.79 1212.18 L1307.38 1212.18 L1307.97 1212.18 L1308.55 1212.18 L1309.14 1212.18 L1309.73 1212.18 L1310.31 1212.18 L1310.9 1212.18 L1311.48 1212.18 L1312.07 1212.18 L1312.66 1212.18 L1313.24 1212.18 L1313.83 1212.18 L1314.42 1212.18 L1315 1212.18 L1315.59 1212.18 L1316.18 1212.18 L1316.76 1212.18 L1317.35 1212.18 L1317.93 1212.18 L1318.52 1212.18 L1319.11 1212.18 L1319.69 1212.18 L1320.28 1212.18 L1320.87 1212.18 L1321.45 1212.18 L1322.04 1212.18 L1322.63 1212.18 L1323.21 1212.18 L1323.8 1212.18 L1324.39 1212.18 L1324.97 1212.18 L1325.56 1212.18 L1326.14 1212.18 L1326.73 1212.18 L1327.32 1212.18 L1327.9 1212.18 L1328.49 1212.18 L1329.08 1212.18 L1329.66 1212.18 L1330.25 1212.18 L1330.84 1212.18 L1331.42 1212.18 L1332.01 1212.18 L1332.6 1212.18 L1333.18 1212.18 L1333.77 1212.18 L1334.35 1212.18 L1334.94 1212.18 L1335.53 1212.18 L1336.11 1212.18 L1336.7 1212.18 L1337.29 1212.18 L1337.87 1212.18 L1338.46 1212.18 L1339.05 1212.18 L1339.63 1212.18 L1340.22 1212.18 L1340.8 1212.18 L1341.39 1212.18 L1341.98 1212.18 L1342.56 1212.18 L1343.15 1212.18 L1343.74 1212.18 L1344.32 1212.18 L1344.91 1212.18 L1345.5 1212.18 L1346.08 1212.18 L1346.67 1212.18 L1347.26 1212.18 L1347.84 1212.18 L1348.43 1212.18 L1349.01 1212.18 L1349.6 1212.18 L1350.19 1212.18 L1350.77 1212.18 L1351.36 1212.18 L1351.95 1212.18 L1352.53 1212.18 L1353.12 1212.18 L1353.71 1212.18 L1354.29 1212.18 L1354.88 1212.18 L1355.47 1212.18 L1356.05 1212.18 L1356.64 1212.18 L1357.22 1212.18 L1357.81 1212.18 L1358.4 1212.18 L1358.98 1212.18 L1359.57 1212.18 L1360.16 1212.18 L1360.74 1212.18 L1361.33 1212.18 L1361.92 1212.18 L1362.5 1212.18 L1363.09 1212.18 L1363.68 1212.18 L1364.26 1212.18 L1364.85 1212.18 L1365.43 1212.18 L1366.02 1212.18 L1366.61 1212.18 L1367.19 1212.18 L1367.78 1212.18 L1368.37 1212.18 L1368.95 1212.18 L1369.54 1212.18 L1370.13 1212.18 L1370.71 1212.18 L1371.3 1212.18 L1371.88 1212.18 L1372.47 1212.18 L1373.06 1212.18 L1373.64 1212.18 L1374.23 1212.18 L1374.82 1212.18 L1375.4 1212.18 L1375.99 1212.18 L1376.58 1212.18 L1377.16 1212.18 L1377.75 1212.18 L1378.34 1212.18 L1378.92 1212.18 L1379.51 1212.18 L1380.09 1212.18 L1380.68 1212.18 L1381.27 1212.18 L1381.85 1212.18 L1382.44 1212.18 L1383.03 1212.18 L1383.61 1212.18 L1384.2 1212.18 L1384.79 1212.18 L1385.37 1212.18 L1385.96 1212.18 L1386.55 1212.18 L1387.13 1212.18 L1387.72 1212.18 L1388.3 1212.18 L1388.89 1212.18 L1389.48 1212.18 L1390.06 1212.18 L1390.65 1212.18 L1391.24 1212.18 L1391.82 1212.18 L1392.41 1212.18 L1393 1212.18 L1393.58 1212.18 L1394.17 1212.18 L1394.75 1212.18 L1395.34 1212.18 L1395.93 1212.18 L1396.51 1212.18 L1397.1 1212.18 L1397.69 1212.18 L1398.27 1212.18 L1398.86 1212.18 L1399.45 1212.18 L1400.03 1212.18 L1400.62 1212.18 L1401.21 1212.18 L1401.79 1212.18 L1402.38 1212.18 L1402.96 1212.18 L1403.55 1212.18 L1404.14 1212.18 L1404.72 1212.18 L1405.31 1212.18 L1405.9 1212.18 L1406.48 1212.18 L1407.07 1212.18 L1407.66 1212.18 L1408.24 1212.18 L1408.83 1212.18 L1409.42 1212.18 L1410 1212.18 L1410.59 1212.18 L1411.17 1212.18 L1411.76 1212.18 L1412.35 1212.18 L1412.93 1212.18 L1413.52 1212.18 L1414.11 1212.18 L1414.69 1212.18 L1415.28 1212.18 L1415.87 1212.18 L1416.45 1212.18 L1417.04 1212.18 L1417.63 1212.18 L1418.21 1212.18 L1418.8 1212.18 L1419.38 1212.18 L1419.97 1212.18 L1420.56 1212.18 L1421.14 1212.18 L1421.73 1212.18 L1422.32 1212.18 L1422.9 1212.18 L1423.49 1212.18 L1424.08 1212.18 L1424.66 1212.18 L1425.25 1212.18 L1425.83 1212.18 L1426.42 1212.18 L1427.01 1212.18 L1427.59 1212.18 L1428.18 1212.18 L1428.77 1212.18 L1429.35 1212.18 L1429.94 1212.18 L1430.53 1212.18 L1431.11 1212.18 L1431.7 1212.18 L1432.29 1212.18 L1432.87 1212.18 L1433.46 1212.18 L1434.04 1212.18 L1434.63 1212.18 L1435.22 1212.18 L1435.8 1212.18 L1436.39 1212.18 L1436.98 1212.18 L1437.56 1212.18 L1438.15 1212.18 L1438.74 1212.18 L1439.32 1212.18 L1439.91 1212.18 L1440.5 1212.18 L1441.08 1212.18 L1441.67 1212.18 L1442.25 1212.18 L1442.84 1212.18 L1443.43 1212.18 L1444.01 1212.18 L1444.6 1212.18 L1445.19 1212.18 L1445.77 1212.18 L1446.36 1212.18 L1446.95 1212.18 L1447.53 1212.18 L1448.12 1212.18 L1448.7 1212.18 L1449.29 1212.18 L1449.88 1212.18 L1450.46 1212.18 L1451.05 1212.18 L1451.64 1212.18 L1452.22 1212.18 L1452.81 1212.18 L1453.4 1212.18 L1453.98 1212.18 L1454.57 1212.18 L1455.16 1212.18 L1455.74 1212.18 L1456.33 1212.18 L1456.91 1212.18 L1457.5 1212.18 L1458.09 1212.18 L1458.67 1212.18 L1459.26 1212.18 L1459.85 1212.18 L1460.43 1212.18 L1461.02 1212.18 L1461.61 1212.18 L1462.19 1212.18 L1462.78 1212.18 L1463.37 1212.18 L1463.95 1212.18 L1464.54 1212.18 L1465.12 1212.18 L1465.71 1212.18 L1466.3 1212.18 L1466.88 1212.18 L1467.47 1212.18 L1468.06 1212.18 L1468.64 1212.18 L1469.23 1212.18 L1469.82 1212.18 L1470.4 1212.18 L1470.99 1212.18 L1471.57 1212.18 L1472.16 1212.18 L1472.75 1212.18 L1473.33 1212.18 L1473.92 1212.18 L1474.51 1212.18 L1475.09 1212.18 L1475.68 1212.18 L1476.27 1212.18 L1476.85 1212.18 L1477.44 1212.18 L1478.03 1212.18 L1478.61 1212.18 L1479.2 1212.18 L1479.78 1212.18 L1480.37 1212.18 L1480.96 1212.18 L1481.54 1212.18 L1482.13 1212.18 L1482.72 1212.18 L1483.3 1212.18 L1483.89 1212.18 L1484.48 1212.18 L1485.06 1212.18 L1485.65 1212.18 L1486.24 1212.18 L1486.82 1212.18 L1487.41 1212.18 L1487.99 1212.18 L1488.58 1212.18 L1489.17 1212.18 L1489.75 1212.18 L1490.34 1212.18 L1490.93 1212.18 L1491.51 1212.18 L1492.1 1212.18 L1492.69 1212.18 L1493.27 1212.18 L1493.86 1212.18 L1494.45 1212.18 L1495.03 1212.18 L1495.62 1212.18 L1496.2 1212.18 L1496.79 1212.18 L1497.38 1212.18 L1497.96 1212.18 L1498.55 1212.18 L1499.14 1212.18 L1499.72 1212.18 L1500.31 1212.18 L1500.9 1212.18 L1501.48 1212.18 L1502.07 1212.18 L1502.65 1212.18 L1503.24 1212.18 L1503.83 1212.18 L1504.41 1212.18 L1505 1212.18 L1505.59 1212.18 L1506.17 1212.18 L1506.76 1212.18 L1507.35 1212.18 L1507.93 1212.18 L1508.52 1212.18 L1509.11 1212.18 L1509.69 1212.18 L1510.28 1212.18 L1510.86 1212.18 L1511.45 1212.18 L1512.04 1212.18 L1512.62 1212.18 L1513.21 1212.18 L1513.8 1212.18 L1514.38 1212.18 L1514.97 1212.18 L1515.56 1212.18 L1516.14 1212.18 L1516.73 1212.18 L1517.32 1212.18 L1517.9 1212.18 L1518.49 1212.18 L1519.07 1212.18 L1519.66 1212.18 L1520.25 1212.18 L1520.83 1212.18 L1521.42 1212.18 L1522.01 1212.18 L1522.59 1212.18 L1523.18 1212.18 L1523.77 1212.18 L1524.35 1212.18 L1524.94 1212.18 L1525.52 1212.18 L1526.11 1212.18 L1526.7 1212.18 L1527.28 1212.18 L1527.87 1212.18 L1528.46 1212.18 L1529.04 1212.18 L1529.63 1212.18 L1530.22 1212.18 L1530.8 1212.18 L1531.39 1212.18 L1531.98 1212.18 L1532.56 1212.18 L1533.15 1212.18 L1533.73 1212.18 L1534.32 1212.18 L1534.91 1212.18 L1535.49 1212.18 L1536.08 1212.18 L1536.67 1212.18 L1537.25 1212.18 L1537.84 1212.18 L1538.43 1212.18 L1539.01 1212.18 L1539.6 1212.18 L1540.19 1212.18 L1540.77 1212.18 L1541.36 1212.18 L1541.94 1212.18 L1542.53 1212.18 L1543.12 1212.18 L1543.7 1212.18 L1544.29 1212.18 L1544.88 1212.18 L1545.46 1212.18 L1546.05 1212.18 L1546.64 1212.18 L1547.22 1212.18 L1547.81 1212.18 L1548.4 1212.18 L1548.98 1212.18 L1549.57 1212.18 L1550.15 1212.18 L1550.74 1212.18 L1551.33 1212.18 L1551.91 1212.18 L1552.5 1212.18 L1553.09 1212.18 L1553.67 1212.18 L1554.26 1212.18 L1554.85 1212.18 L1555.43 1212.18 L1556.02 1212.18 L1556.6 1212.18 L1557.19 1212.18 L1557.78 1212.18 L1558.36 1212.18 L1558.95 1212.18 L1559.54 1212.18 L1560.12 1212.18 L1560.71 1212.18 L1561.3 1212.18 L1561.88 1212.18 L1562.47 1212.18 L1563.06 1212.18 L1563.64 1212.18 L1564.23 1212.18 L1564.81 1212.18 L1565.4 1212.18 L1565.99 1212.18 L1566.57 1212.18 L1567.16 1212.18 L1567.75 1212.18 L1568.33 1212.18 L1568.92 1212.18 L1569.51 1212.18 L1570.09 1212.18 L1570.68 1212.18 L1571.27 1212.18 L1571.85 1212.18 L1572.44 1212.18 L1573.02 1212.18 L1573.61 1212.18 L1574.2 1212.18 L1574.78 1212.18 L1575.37 1212.18 L1575.96 1212.18 L1576.54 1212.18 L1577.13 1212.18 L1577.72 1212.18 L1578.3 1212.18 L1578.89 1212.18 L1579.47 1212.18 L1580.06 1212.18 L1580.65 1212.18 L1581.23 1212.18 L1581.82 1212.18 L1582.41 1212.18 L1582.99 1212.18 L1583.58 1212.18 L1584.17 1212.18 L1584.75 1212.18 L1585.34 1212.18 L1585.93 1212.18 L1586.51 1212.18 L1587.1 1212.18 L1587.68 1212.18 L1588.27 1212.18 L1588.86 1212.18 L1589.44 1212.18 L1590.03 1212.18 L1590.62 1212.18 L1591.2 1212.18 L1591.79 1212.18 L1592.38 1212.18 L1592.96 1212.18 L1593.55 1212.18 L1594.14 1212.18 L1594.72 1212.18 L1595.31 1212.18 L1595.89 1212.18 L1596.48 1212.18 L1597.07 1212.18 L1597.65 1212.18 L1598.24 1212.18 L1598.83 1212.18 L1599.41 1212.18 L1600 1212.18 L1600.59 1212.18 L1601.17 1212.18 L1601.76 1212.18 L1602.34 1212.18 L1602.93 1212.18 L1603.52 1212.18 L1604.1 1212.18 L1604.69 1212.18 L1605.28 1212.18 L1605.86 1212.18 L1606.45 1212.18 L1607.04 1212.18 L1607.62 1212.18 L1608.21 1212.18 L1608.8 1212.18 L1609.38 1212.18 L1609.97 1212.18 L1610.55 1212.18 L1611.14 1212.18 L1611.73 1212.18 L1612.31 1212.18 L1612.9 1212.18 L1613.49 1212.18 L1614.07 1212.18 L1614.66 1212.18 L1615.25 1212.18 L1615.83 1212.18 L1616.42 1212.18 L1617.01 1212.18 L1617.59 1212.18 L1618.18 1212.18 L1618.76 1212.18 L1619.35 1212.18 L1619.94 1212.18 L1620.52 1212.18 L1621.11 1212.18 L1621.7 1212.18 L1622.28 1212.18 L1622.87 1212.18 L1623.46 1212.18 L1624.04 1212.18 L1624.63 1212.18 L1625.22 1212.18 L1625.8 1212.18 L1626.39 1212.18 L1626.97 1212.18 L1627.56 1212.18 L1628.15 1212.18 L1628.73 1212.18 L1629.32 1212.18 L1629.91 1212.18 L1630.49 1212.18 L1631.08 1212.18 L1631.67 1212.18 L1632.25 1212.18 L1632.84 1212.18 L1633.42 1212.18 L1634.01 1212.18 L1634.6 1212.18 L1635.18 1212.18 L1635.77 1212.18 L1636.36 1212.18 L1636.94 1212.18 L1637.53 1212.18 L1638.12 1212.18 L1638.7 1212.18 L1639.29 1212.18 L1639.88 1212.18 L1640.46 1212.18 L1641.05 1212.18 L1641.63 1212.18 L1642.22 1212.18 L1642.81 1212.18 L1643.39 1212.18 L1643.98 1212.18 L1644.57 1212.18 L1645.15 1212.18 L1645.74 1212.18 L1646.33 1212.18 L1646.91 1212.18 L1647.5 1212.18 L1648.09 1212.18 L1648.67 1212.18 L1649.26 1212.18 L1649.84 1212.18 L1650.43 1212.18 L1651.02 1212.18 L1651.6 1212.18 L1652.19 1212.18 L1652.78 1212.18 L1653.36 1212.18 L1653.95 1212.18 L1654.54 1212.18 L1655.12 1212.18 L1655.71 1212.18 L1656.29 1212.18 L1656.88 1212.18 L1657.47 1212.18 L1658.05 1212.18 L1658.64 1212.18 L1659.23 1212.18 L1659.81 1212.18 L1660.4 1212.18 L1660.99 1212.18 L1661.57 1212.18 L1662.16 1212.18 L1662.75 1212.18 L1663.33 1212.18 L1663.92 1212.18 L1664.5 1212.18 L1665.09 1212.18 L1665.68 1212.18 L1666.26 1212.18 L1666.85 1212.18 L1667.44 1212.18 L1668.02 1212.18 L1668.61 1212.18 L1669.2 1212.18 L1669.78 1212.18 L1670.37 1212.18 L1670.96 1212.18 L1671.54 1212.18 L1672.13 1212.18 L1672.71 1212.18 L1673.3 1212.18 L1673.89 1212.18 L1674.47 1212.18 L1675.06 1212.18 L1675.65 1212.18 L1676.23 1212.18 L1676.82 1212.18 L1677.41 1212.18 L1677.99 1212.18 L1678.58 1212.18 L1679.17 1212.18 L1679.75 1212.18 L1680.34 1212.18 L1680.92 1212.18 L1681.51 1212.18 L1682.1 1212.18 L1682.68 1212.18 L1683.27 1212.18 L1683.86 1212.18 L1684.44 1212.18 L1685.03 1212.18 L1685.62 1212.18 L1686.2 1212.18 L1686.79 1212.18 L1687.37 1212.18 L1687.96 1212.18 L1688.55 1212.18 L1689.13 1212.18 L1689.72 1212.18 L1690.31 1212.18 L1690.89 1212.18 L1691.48 1212.18 L1692.07 1212.18 L1692.65 1212.18 L1693.24 1212.18 L1693.83 1212.18 L1694.41 1212.18 L1695 1212.18 L1695.58 1212.18 L1696.17 1212.18 L1696.76 1212.18 L1697.34 1212.18 L1697.93 1212.18 L1698.52 1212.18 L1699.1 1212.18 L1699.69 1212.18 L1700.28 1212.18 L1700.86 1212.18 L1701.45 1212.18 L1702.04 1212.18 L1702.62 1212.18 L1703.21 1212.18 L1703.79 1212.18 L1704.38 1212.18 L1704.97 1212.18 L1705.55 1212.18 L1706.14 1212.18 L1706.73 1212.18 L1707.31 1212.18 L1707.9 1212.18 L1708.49 1212.18 L1709.07 1212.18 L1709.66 1212.18 L1710.24 1212.18 L1710.83 1212.18 L1711.42 1212.18 L1712 1212.18 L1712.59 1212.18 L1713.18 1212.18 L1713.76 1212.18 L1714.35 1212.18 L1714.94 1212.18 L1715.52 1212.18 L1716.11 1212.18 L1716.7 1212.18 L1717.28 1212.18 L1717.87 1212.18 L1718.45 1212.18 L1719.04 1212.18 L1719.63 1212.18 L1720.21 1212.18 L1720.8 1212.18 L1721.39 1212.18 L1721.97 1212.18 L1722.56 1212.18 L1723.15 1212.18 L1723.73 1212.18 L1724.32 1212.18 L1724.91 1212.18 L1725.49 1212.18 L1726.08 1212.18 L1726.66 1212.18 L1727.25 1212.18 L1727.84 1212.18 L1728.42 1212.18 L1729.01 1212.18 L1729.6 1212.18 L1730.18 1212.18 L1730.77 1212.18 L1731.36 1212.18 L1731.94 1212.18 L1732.53 1212.18 L1733.11 1212.18 L1733.7 1212.18 L1734.29 1212.18 L1734.87 1212.18 L1735.46 1212.18 L1736.05 1212.18 L1736.63 1212.18 L1737.22 1212.18 L1737.81 1212.18 L1738.39 1212.18 L1738.98 1212.18 L1739.57 1212.18 L1740.15 1212.18 L1740.74 1212.18 L1741.32 1212.18 L1741.91 1212.18 L1742.5 1212.18 L1743.08 1212.18 L1743.67 1212.18 L1744.26 1212.18 L1744.84 1212.18 L1745.43 1212.18 L1746.02 1212.18 L1746.6 1212.18 L1747.19 1212.18 L1747.78 1212.18 L1748.36 1212.18 L1748.95 1212.18 L1749.53 1212.18 L1750.12 1212.18 L1750.71 1212.18 L1751.29 1212.18 L1751.88 1212.18 L1752.47 1212.18 L1753.05 1212.18 L1753.64 1212.18 L1754.23 1212.18 L1754.81 1212.18 L1755.4 1212.18 L1755.99 1212.18 L1756.57 1212.18 L1757.16 1212.18 L1757.74 1212.18 L1758.33 1212.18 L1758.92 1212.18 L1759.5 1212.18 L1760.09 1212.18 L1760.68 1212.18 L1761.26 1212.18 L1761.85 1212.18 L1762.44 1212.18 L1763.02 1212.18 L1763.61 1212.18 L1764.19 1212.18 L1764.78 1212.18 L1765.37 1212.18 L1765.95 1212.18 L1766.54 1212.18 L1767.13 1212.18 L1767.71 1212.18 L1768.3 1212.18 L1768.89 1212.18 L1769.47 1212.18 L1770.06 1212.18 L1770.65 1212.18 L1771.23 1212.18 L1771.82 1212.18 L1772.4 1212.18 L1772.99 1212.18 L1773.58 1212.18 L1774.16 1212.18 L1774.75 1212.18 L1775.34 1212.18 L1775.92 1212.18 L1776.51 1212.18 L1777.1 1212.18 L1777.68 1212.18 L1778.27 1212.18 L1778.86 1212.18 L1779.44 1212.18 L1780.03 1212.18 L1780.61 1212.18 L1781.2 1212.18 L1781.79 1212.18 L1782.37 1212.18 L1782.96 1212.18 L1783.55 1212.18 L1784.13 1212.18 L1784.72 1212.18 L1785.31 1212.18 L1785.89 1212.18 L1786.48 1212.18 L1787.06 1212.18 L1787.65 1212.18 L1788.24 1212.18 L1788.82 1212.18 L1789.41 1212.18 L1790 1212.18 L1790.58 1212.18 L1791.17 1212.18 L1791.76 1212.18 L1792.34 1212.18 L1792.93 1212.18 L1793.52 1212.18 L1794.1 1212.18 L1794.69 1212.18 L1795.27 1212.18 L1795.86 1212.18 L1796.45 1212.18 L1797.03 1212.18 L1797.62 1212.18 L1798.21 1212.18 L1798.79 1212.18 L1799.38 1212.18 L1799.97 1212.18 L1800.55 1212.18 L1801.14 1212.18 L1801.73 1212.18 L1802.31 1212.18 L1802.9 1212.18 L1803.48 1212.18 L1804.07 1212.18 L1804.66 1212.18 L1805.24 1212.18 L1805.83 1212.18 L1806.42 1212.18 L1807 1212.18 L1807.59 1212.18 L1808.18 1212.18 L1808.76 1212.18 L1809.35 1212.18 L1809.94 1212.18 L1810.52 1212.18 L1811.11 1212.18 L1811.69 1212.18 L1812.28 1212.18 L1812.87 1212.18 L1813.45 1212.18 L1814.04 1212.18 L1814.63 1212.18 L1815.21 1212.18 L1815.8 1212.18 L1816.39 1212.18 L1816.97 1212.18 L1817.56 1212.18 L1818.14 1212.18 L1818.73 1212.18 L1819.32 1212.18 L1819.9 1212.18 L1820.49 1212.18 L1821.08 1212.18 L1821.66 1212.18 L1822.25 1212.18 L1822.84 1212.18 L1823.42 1212.18 L1824.01 1212.18 L1824.6 1212.18 L1825.18 1212.18 L1825.77 1212.18 L1826.35 1212.18 L1826.94 1212.18 L1827.53 1212.18 L1828.11 1212.18 L1828.7 1212.18 L1829.29 1212.18 L1829.87 1212.18 L1830.46 1212.18 L1831.05 1212.18 L1831.63 1212.18 L1832.22 1212.18 L1832.81 1212.18 L1833.39 1212.18 L1833.98 1212.18 L1834.56 1212.18 L1835.15 1212.18 L1835.74 1212.18 L1836.32 1212.18 L1836.91 1212.18 L1837.5 1212.18 L1838.08 1212.18 L1838.67 1212.18 L1839.26 1212.18 L1839.84 1212.18 L1840.43 1212.18 L1841.01 1212.18 L1841.6 1212.18 L1842.19 1212.18 L1842.77 1212.18 L1843.36 1212.18 L1843.95 1212.18 L1844.53 1212.18 L1845.12 1212.18 L1845.71 1212.18 L1846.29 1212.18 L1846.88 1212.18 L1847.47 1212.18 L1848.05 1212.18 L1848.64 1212.18 L1849.22 1212.18 L1849.81 1212.18 L1850.4 1212.18 L1850.98 1212.18 L1851.57 1212.18 L1852.16 1212.18 L1852.74 1212.18 L1853.33 1212.18 L1853.92 1212.18 L1854.5 1212.18 L1855.09 1212.18 L1855.68 1212.18 L1856.26 1212.18 L1856.85 1212.18 L1857.43 1212.18 L1858.02 1212.18 L1858.61 1212.18 L1859.19 1212.18 L1859.78 1212.18 L1860.37 1212.18 L1860.95 1212.18 L1861.54 1212.18 L1862.13 1212.18 L1862.71 1212.18 L1863.3 1212.18 L1863.88 1212.18 L1864.47 1212.18 L1865.06 1212.18 L1865.64 1212.18 L1866.23 1212.18 L1866.82 1212.18 L1867.4 1212.18 L1867.99 1212.18 L1868.58 1212.18 L1869.16 1212.18 L1869.75 1212.18 L1870.34 1212.18 L1870.92 1212.18 L1871.51 1212.18 L1872.09 1212.18 L1872.68 1212.18 L1873.27 1212.18 L1873.85 1212.18 L1874.44 1212.18 L1875.03 1212.18 L1875.61 1212.18 L1876.2 1212.18 L1876.79 1212.18 L1877.37 1212.18 L1877.96 1212.18 L1878.55 1212.18 L1879.13 1212.18 L1879.72 1212.18 L1880.3 1212.18 L1880.89 1212.18 L1881.48 1212.18 L1882.06 1212.18 L1882.65 1212.18 L1883.24 1212.18 L1883.82 1212.18 L1884.41 1212.18 L1885 1212.18 L1885.58 1212.18 L1886.17 1212.18 L1886.76 1212.18 L1887.34 1212.18 L1887.93 1212.18 L1888.51 1212.18 L1889.1 1212.18 L1889.69 1212.18 L1890.27 1212.18 L1890.86 1212.18 L1891.45 1212.18 L1892.03 1212.18 L1892.62 1212.18 L1893.21 1212.18 L1893.79 1212.18 L1894.38 1212.18 L1894.96 1212.18 L1895.55 1212.18 L1896.14 1212.18 L1896.72 1212.18 L1897.31 1212.18 L1897.9 1212.18 L1898.48 1212.18 L1899.07 1212.18 L1899.66 1212.18 L1900.24 1212.18 L1900.83 1212.18 L1901.42 1212.18 L1902 1212.18 L1902.59 1212.18 L1903.17 1212.18 L1903.76 1212.18 L1904.35 1212.18 L1904.93 1212.18 L1905.52 1212.18 L1906.11 1212.18 L1906.69 1212.18 L1907.28 1212.18 L1907.87 1212.18 L1908.45 1212.18 L1909.04 1212.18 L1909.63 1212.18 L1910.21 1212.18 L1910.8 1212.18 L1911.38 1212.18 L1911.97 1212.18 L1912.56 1212.18 L1913.14 1212.18 L1913.73 1212.18 L1914.32 1212.18 L1914.9 1212.18 L1915.49 1212.18 L1916.08 1212.18 L1916.66 1212.18 L1917.25 1212.18 L1917.83 1212.18 L1918.42 1212.18 L1919.01 1212.18 L1919.59 1212.18 L1920.18 1212.18 L1920.77 1212.18 L1921.35 1212.18 L1921.94 1212.18 L1922.53 1212.18 L1923.11 1212.18 L1923.7 1212.18 L1924.29 1212.18 L1924.87 1212.18 L1925.46 1212.18 L1926.04 1212.18 L1926.63 1212.18 L1927.22 1212.18 L1927.8 1212.18 L1928.39 1212.18 L1928.98 1212.18 L1929.56 1212.18 L1930.15 1212.18 L1930.74 1212.18 L1931.32 1212.18 L1931.91 1212.18 L1932.5 1212.18 L1933.08 1212.18 L1933.67 1212.18 L1934.25 1212.18 L1934.84 1212.18 L1935.43 1212.18 L1936.01 1212.18 L1936.6 1212.18 L1937.19 1212.18 L1937.77 1212.18 L1938.36 1212.18 L1938.95 1212.18 L1939.53 1212.18 L1940.12 1212.18 L1940.71 1212.18 L1941.29 1212.18 L1941.88 1212.18 L1942.46 1212.18 L1943.05 1212.18 L1943.64 1212.18 L1944.22 1212.18 L1944.81 1212.18 L1945.4 1212.18 L1945.98 1212.18 L1946.57 1212.18 L1947.16 1212.18 L1947.74 1212.18 L1948.33 1212.18 L1948.91 1212.18 L1949.5 1212.18 L1950.09 1212.18 L1950.67 1212.18 L1951.26 1212.18 L1951.85 1212.18 L1952.43 1212.18 L1953.02 1212.18 L1953.61 1212.18 L1954.19 1212.18 L1954.78 1212.18 L1955.37 1212.18 L1955.95 1212.18 L1956.54 1212.18 L1957.12 1212.18 L1957.71 1212.18 L1958.3 1212.18 L1958.88 1212.18 L1959.47 1212.18 L1960.06 1212.18 L1960.64 1212.18 L1961.23 1212.18 L1961.82 1212.18 L1962.4 1212.18 L1962.99 1212.18 L1963.58 1212.18 L1964.16 1212.18 L1964.75 1212.18 L1965.33 1212.18 L1965.92 1212.18 L1966.51 1212.18 L1967.09 1212.18 L1967.68 1212.18 L1968.27 1212.18 L1968.85 1212.18 L1969.44 1212.18 L1970.03 1212.18 L1970.61 1212.18 L1971.2 1212.18 L1971.78 1212.18 L1972.37 1212.18 L1972.96 1212.18 L1973.54 1212.18 L1974.13 1212.18 L1974.72 1212.18 L1975.3 1212.18 L1975.89 1212.18 L1976.48 1212.18 L1977.06 1212.18 L1977.65 1212.18 L1978.24 1212.18 L1978.82 1212.18 L1979.41 1212.18 L1979.99 1212.18 L1980.58 1212.18 L1981.17 1212.18 L1981.75 1212.18 L1982.34 1212.18 L1982.93 1212.18 L1983.51 1212.18 L1984.1 1212.18 L1984.69 1212.18 L1985.27 1212.18 L1985.86 1212.18 L1986.45 1212.18 L1987.03 1212.18 L1987.62 1212.18 L1988.2 1212.18 L1988.79 1212.18 L1989.38 1212.18 L1989.96 1212.18 L1990.55 1212.18 L1991.14 1212.18 L1991.72 1212.18 L1992.31 1212.18 L1992.9 1212.18 L1993.48 1212.18 L1994.07 1212.18 L1994.65 1212.18 L1995.24 1212.18 L1995.83 1212.18 L1996.41 1212.18 L1997 1212.18 L1997.59 1212.18 L1998.17 1212.18 L1998.76 1212.18 L1999.35 1212.18 L1999.93 1212.18 L2000.52 1212.18 L2001.11 1212.18 L2001.69 1212.18 L2002.28 1212.18 L2002.86 1212.18 L2003.45 1212.18 L2004.04 1212.18 L2004.62 1212.18 L2005.21 1212.18 L2005.8 1212.18 L2006.38 1212.18 L2006.97 1212.18 L2007.56 1212.18 L2008.14 1212.18 L2008.73 1212.18 L2009.32 1212.18 L2009.9 1212.18 L2010.49 1212.18 L2011.07 1212.18 L2011.66 1212.18 L2012.25 1212.18 L2012.83 1212.18 L2013.42 1212.18 L2014.01 1212.18 L2014.59 1212.18 L2015.18 1212.18 L2015.77 1212.18 L2016.35 1212.18 L2016.94 1212.18 L2017.53 1212.18 L2018.11 1212.18 L2018.7 1212.18 L2019.28 1212.18 L2019.87 1212.18 L2020.46 1212.18 L2021.04 1212.18 L2021.63 1212.18 L2022.22 1212.18 L2022.8 1212.18 L2023.39 1212.18 L2023.98 1212.18 L2024.56 1212.18 L2025.15 1212.18 L2025.73 1212.18 L2026.32 1212.18 L2026.91 1212.18 L2027.49 1212.18 L2028.08 1212.18 L2028.67 1212.18 L2029.25 1212.18 L2029.84 1212.18 L2030.43 1212.18 L2031.01 1212.18 L2031.6 1212.18 L2032.19 1212.18 L2032.77 1212.18 L2033.36 1212.18 L2033.94 1212.18 L2034.53 1212.18 L2035.12 1212.18 L2035.7 1212.18 L2036.29 1212.18 L2036.88 1212.18 L2037.46 1212.18 L2038.05 1212.18 L2038.64 1212.18 L2039.22 1212.18 L2039.81 1212.18 L2040.4 1212.18 L2040.98 1212.18 L2041.57 1212.18 L2042.15 1212.18 L2042.74 1212.18 L2043.33 1212.18 L2043.91 1212.18 L2044.5 1212.18 L2045.09 1212.18 L2045.67 1212.18 L2046.26 1212.18 L2046.85 1212.18 L2047.43 1212.18 L2048.02 1212.18 L2048.6 1212.18 L2049.19 1212.18 L2049.78 1212.18 L2050.36 1212.18 L2050.95 1212.18 L2051.54 1212.18 L2052.12 1212.18 L2052.71 1212.18 L2053.3 1212.18 L2053.88 1212.18 L2054.47 1212.18 L2055.06 1212.18 L2055.64 1212.18 L2056.23 1212.18 L2056.81 1212.18 L2057.4 1212.18 L2057.99 1212.18 L2058.57 1212.18 L2059.16 1212.18 L2059.75 1212.18 L2060.33 1212.18 L2060.92 1212.18 L2061.51 1212.18 L2062.09 1212.18 L2062.68 1212.18 L2063.27 1212.18 L2063.85 1212.18 L2064.44 1212.18 L2065.02 1212.18 L2065.61 1212.18 L2066.2 1212.18 L2066.78 1212.18 L2067.37 1212.18 L2067.96 1212.18 L2068.54 1212.18 L2069.13 1212.18 L2069.72 1212.18 L2070.3 1212.18 L2070.89 1212.18 L2071.48 1212.18 L2072.06 1212.18 L2072.65 1212.18 L2073.23 1212.18 L2073.82 1212.18 L2074.41 1212.18 L2074.99 1212.18 L2075.58 1212.18 L2076.17 1212.18 L2076.75 1212.18 L2077.34 1212.18 L2077.93 1212.18 L2078.51 1212.18 L2079.1 1212.18 L2079.68 1212.18 L2080.27 1212.18 L2080.86 1212.18 L2081.44 1212.18 L2082.03 1212.18 L2082.62 1212.18 L2083.2 1212.18 L2083.79 1212.18 L2084.38 1212.18 L2084.96 1212.18 L2085.55 1212.18 L2086.14 1212.18 L2086.72 1212.18 L2087.31 1212.18 L2087.89 1212.18 L2088.48 1212.18 L2089.07 1212.18 L2089.65 1212.18 L2090.24 1212.18 L2090.83 1212.18 L2091.41 1212.18 L2092 1212.18 L2092.59 1212.18 L2093.17 1212.18 L2093.76 1212.18 L2094.35 1212.18 L2094.93 1212.18 L2095.52 1212.18 L2096.1 1212.18 L2096.69 1212.18 L2097.28 1212.18 L2097.86 1212.18 L2098.45 1212.18 L2099.04 1212.18 L2099.62 1212.18 L2100.21 1212.18 L2100.8 1212.18 L2101.38 1212.18 L2101.97 1212.18 L2102.55 1212.18 L2103.14 1212.18 L2103.73 1212.18 L2104.31 1212.18 L2104.9 1212.18 L2105.49 1212.18 L2106.07 1212.18 L2106.66 1212.18 L2107.25 1212.18 L2107.83 1212.18 L2108.42 1212.18 L2109.01 1212.18 L2109.59 1212.18 L2110.18 1212.18 L2110.76 1212.18 L2111.35 1212.18 L2111.94 1212.18 L2112.52 1212.18 L2113.11 1212.18 L2113.7 1212.18 L2114.28 1212.18 L2114.87 1212.18 L2115.46 1212.18 L2116.04 1212.18 L2116.63 1212.18 L2117.22 1212.18 L2117.8 1212.18 L2118.39 1212.18 L2118.97 1212.18 L2119.56 1212.18 L2120.15 1212.18 L2120.73 1212.18 L2121.32 1212.18 L2121.91 1212.18 L2122.49 1212.18 L2123.08 1212.18 L2123.67 1212.18 L2124.25 1212.18 L2124.84 1212.18 L2125.42 1212.18 L2126.01 1212.18 L2126.6 1212.18 L2127.18 1212.18 L2127.77 1212.18 L2128.36 1212.18 L2128.94 1212.18 L2129.53 1212.18 L2130.12 1212.18 L2130.7 1212.18 L2131.29 1212.18 L2131.88 1212.18 L2132.46 1212.18 L2133.05 1212.18 L2133.63 1212.18 L2134.22 1212.18 L2134.81 1212.18 L2135.39 1212.18 L2135.98 1212.18 L2136.57 1212.18 L2137.15 1212.18 L2137.74 1212.18 L2138.33 1212.18 L2138.91 1212.18 L2139.5 1212.18 L2140.09 1212.18 L2140.67 1212.18 L2141.26 1212.18 L2141.84 1212.18 L2142.43 1212.18 L2143.02 1212.18 L2143.6 1212.18 L2144.19 1212.18 L2144.78 1212.18 L2145.36 1212.18 L2145.95 1212.18 L2146.54 1212.18 L2147.12 1212.18 L2147.71 1212.18 L2148.3 1212.18 L2148.88 1212.18 L2149.47 1212.18 L2150.05 1212.18 L2150.64 1212.18 L2151.23 1212.18 L2151.81 1212.18 L2152.4 1212.18 L2152.99 1212.18 L2153.57 1212.18 L2154.16 1212.18 L2154.75 1212.18 L2155.33 1212.18 L2155.92 1212.18 L2156.5 1212.18 L2157.09 1212.18 L2157.68 1212.18 L2158.26 1212.18 L2158.26 1211.57 L2157.68 1211.57 L2157.09 1211.57 L2156.5 1211.57 L2155.92 1211.57 L2155.33 1211.57 L2154.75 1211.57 L2154.16 1211.57 L2153.57 1211.57 L2152.99 1211.57 L2152.4 1211.57 L2151.81 1211.57 L2151.23 1211.57 L2150.64 1211.57 L2150.05 1211.57 L2149.47 1211.57 L2148.88 1211.57 L2148.3 1211.57 L2147.71 1211.57 L2147.12 1211.57 L2146.54 1211.57 L2145.95 1211.57 L2145.36 1211.57 L2144.78 1211.57 L2144.19 1211.57 L2143.6 1211.57 L2143.02 1211.57 L2142.43 1211.57 L2141.84 1211.57 L2141.26 1211.57 L2140.67 1211.57 L2140.09 1211.57 L2139.5 1211.57 L2138.91 1211.57 L2138.33 1211.57 L2137.74 1211.57 L2137.15 1211.57 L2136.57 1211.57 L2135.98 1211.57 L2135.39 1211.57 L2134.81 1211.57 L2134.22 1211.57 L2133.63 1211.57 L2133.05 1211.57 L2132.46 1211.57 L2131.88 1211.57 L2131.29 1211.57 L2130.7 1211.57 L2130.12 1211.57 L2129.53 1211.57 L2128.94 1211.57 L2128.36 1211.57 L2127.77 1211.57 L2127.18 1211.57 L2126.6 1211.57 L2126.01 1211.57 L2125.42 1211.57 L2124.84 1211.57 L2124.25 1211.57 L2123.67 1211.57 L2123.08 1211.57 L2122.49 1211.57 L2121.91 1211.57 L2121.32 1211.57 L2120.73 1211.57 L2120.15 1211.57 L2119.56 1211.57 L2118.97 1211.57 L2118.39 1211.57 L2117.8 1211.57 L2117.22 1211.57 L2116.63 1211.57 L2116.04 1211.57 L2115.46 1211.57 L2114.87 1211.57 L2114.28 1211.57 L2113.7 1211.57 L2113.11 1211.57 L2112.52 1211.57 L2111.94 1211.57 L2111.35 1211.57 L2110.76 1211.57 L2110.18 1211.57 L2109.59 1211.57 L2109.01 1211.57 L2108.42 1211.57 L2107.83 1211.57 L2107.25 1211.57 L2106.66 1211.57 L2106.07 1211.57 L2105.49 1211.57 L2104.9 1211.57 L2104.31 1211.57 L2103.73 1211.57 L2103.14 1211.57 L2102.55 1211.57 L2101.97 1211.57 L2101.38 1211.57 L2100.8 1211.57 L2100.21 1211.57 L2099.62 1211.57 L2099.04 1211.57 L2098.45 1211.57 L2097.86 1211.57 L2097.28 1211.57 L2096.69 1211.57 L2096.1 1211.57 L2095.52 1211.57 L2094.93 1211.57 L2094.35 1211.57 L2093.76 1211.57 L2093.17 1211.57 L2092.59 1211.57 L2092 1211.57 L2091.41 1211.57 L2090.83 1211.57 L2090.24 1211.57 L2089.65 1211.57 L2089.07 1211.57 L2088.48 1211.57 L2087.89 1211.57 L2087.31 1211.57 L2086.72 1211.57 L2086.14 1211.57 L2085.55 1211.57 L2084.96 1211.57 L2084.38 1211.57 L2083.79 1211.57 L2083.2 1211.57 L2082.62 1211.57 L2082.03 1211.57 L2081.44 1211.57 L2080.86 1211.57 L2080.27 1211.57 L2079.68 1211.57 L2079.1 1211.57 L2078.51 1211.57 L2077.93 1211.57 L2077.34 1211.57 L2076.75 1211.57 L2076.17 1211.57 L2075.58 1211.57 L2074.99 1211.57 L2074.41 1211.57 L2073.82 1211.57 L2073.23 1211.57 L2072.65 1211.57 L2072.06 1211.57 L2071.48 1211.57 L2070.89 1211.57 L2070.3 1211.57 L2069.72 1211.57 L2069.13 1211.57 L2068.54 1211.57 L2067.96 1211.57 L2067.37 1211.57 L2066.78 1211.57 L2066.2 1211.57 L2065.61 1211.57 L2065.02 1211.57 L2064.44 1211.57 L2063.85 1211.57 L2063.27 1211.57 L2062.68 1211.57 L2062.09 1211.57 L2061.51 1211.57 L2060.92 1211.57 L2060.33 1211.57 L2059.75 1211.57 L2059.16 1211.57 L2058.57 1211.57 L2057.99 1211.57 L2057.4 1211.57 L2056.81 1211.57 L2056.23 1211.57 L2055.64 1211.57 L2055.06 1211.57 L2054.47 1211.57 L2053.88 1211.57 L2053.3 1211.57 L2052.71 1211.57 L2052.12 1211.57 L2051.54 1211.57 L2050.95 1211.57 L2050.36 1211.57 L2049.78 1211.57 L2049.19 1211.57 L2048.6 1211.57 L2048.02 1211.57 L2047.43 1211.57 L2046.85 1211.57 L2046.26 1211.57 L2045.67 1211.57 L2045.09 1211.57 L2044.5 1211.57 L2043.91 1211.57 L2043.33 1211.57 L2042.74 1211.57 L2042.15 1211.57 L2041.57 1211.57 L2040.98 1211.57 L2040.4 1211.57 L2039.81 1211.57 L2039.22 1211.57 L2038.64 1211.57 L2038.05 1211.57 L2037.46 1211.57 L2036.88 1211.57 L2036.29 1211.57 L2035.7 1211.57 L2035.12 1211.57 L2034.53 1211.57 L2033.94 1211.57 L2033.36 1211.57 L2032.77 1211.57 L2032.19 1211.57 L2031.6 1211.57 L2031.01 1211.57 L2030.43 1211.57 L2029.84 1211.57 L2029.25 1211.57 L2028.67 1211.57 L2028.08 1211.57 L2027.49 1211.57 L2026.91 1211.57 L2026.32 1211.57 L2025.73 1211.57 L2025.15 1211.57 L2024.56 1211.57 L2023.98 1211.57 L2023.39 1211.57 L2022.8 1211.57 L2022.22 1211.57 L2021.63 1211.57 L2021.04 1211.57 L2020.46 1211.57 L2019.87 1211.57 L2019.28 1211.57 L2018.7 1211.57 L2018.11 1211.57 L2017.53 1211.57 L2016.94 1211.57 L2016.35 1211.57 L2015.77 1211.57 L2015.18 1211.57 L2014.59 1211.57 L2014.01 1211.57 L2013.42 1211.57 L2012.83 1211.57 L2012.25 1211.57 L2011.66 1211.57 L2011.07 1211.57 L2010.49 1211.57 L2009.9 1211.57 L2009.32 1211.57 L2008.73 1211.57 L2008.14 1211.57 L2007.56 1211.57 L2006.97 1211.57 L2006.38 1211.57 L2005.8 1211.57 L2005.21 1211.57 L2004.62 1211.57 L2004.04 1211.57 L2003.45 1211.57 L2002.86 1211.57 L2002.28 1211.57 L2001.69 1211.57 L2001.11 1211.57 L2000.52 1211.57 L1999.93 1211.57 L1999.35 1211.57 L1998.76 1211.57 L1998.17 1211.57 L1997.59 1211.57 L1997 1211.57 L1996.41 1211.57 L1995.83 1211.57 L1995.24 1211.57 L1994.65 1211.57 L1994.07 1211.57 L1993.48 1211.57 L1992.9 1211.57 L1992.31 1211.57 L1991.72 1211.57 L1991.14 1211.57 L1990.55 1211.57 L1989.96 1211.57 L1989.38 1211.57 L1988.79 1211.57 L1988.2 1211.57 L1987.62 1211.57 L1987.03 1211.57 L1986.45 1211.57 L1985.86 1211.57 L1985.27 1211.57 L1984.69 1211.57 L1984.1 1211.57 L1983.51 1211.57 L1982.93 1211.57 L1982.34 1211.57 L1981.75 1211.57 L1981.17 1211.57 L1980.58 1211.57 L1979.99 1211.57 L1979.41 1211.57 L1978.82 1211.57 L1978.24 1211.57 L1977.65 1211.57 L1977.06 1211.57 L1976.48 1211.57 L1975.89 1211.57 L1975.3 1211.57 L1974.72 1211.57 L1974.13 1211.57 L1973.54 1211.57 L1972.96 1211.57 L1972.37 1211.57 L1971.78 1211.57 L1971.2 1211.57 L1970.61 1211.57 L1970.03 1211.57 L1969.44 1211.57 L1968.85 1211.57 L1968.27 1211.57 L1967.68 1211.57 L1967.09 1211.57 L1966.51 1211.57 L1965.92 1211.57 L1965.33 1211.57 L1964.75 1211.57 L1964.16 1211.57 L1963.58 1211.57 L1962.99 1211.57 L1962.4 1211.57 L1961.82 1211.57 L1961.23 1211.57 L1960.64 1211.57 L1960.06 1211.57 L1959.47 1211.57 L1958.88 1211.57 L1958.3 1211.57 L1957.71 1211.57 L1957.12 1211.57 L1956.54 1211.57 L1955.95 1211.57 L1955.37 1211.57 L1954.78 1211.57 L1954.19 1211.57 L1953.61 1211.57 L1953.02 1211.57 L1952.43 1211.57 L1951.85 1211.57 L1951.26 1211.57 L1950.67 1211.57 L1950.09 1211.57 L1949.5 1211.57 L1948.91 1211.57 L1948.33 1211.57 L1947.74 1211.57 L1947.16 1211.57 L1946.57 1211.57 L1945.98 1211.57 L1945.4 1211.57 L1944.81 1211.57 L1944.22 1211.57 L1943.64 1211.57 L1943.05 1211.57 L1942.46 1211.57 L1941.88 1211.57 L1941.29 1211.57 L1940.71 1211.57 L1940.12 1211.57 L1939.53 1211.57 L1938.95 1211.57 L1938.36 1211.57 L1937.77 1211.57 L1937.19 1211.57 L1936.6 1211.57 L1936.01 1211.57 L1935.43 1211.57 L1934.84 1211.57 L1934.25 1211.57 L1933.67 1211.57 L1933.08 1211.57 L1932.5 1211.57 L1931.91 1211.57 L1931.32 1211.57 L1930.74 1211.57 L1930.15 1211.57 L1929.56 1211.57 L1928.98 1211.57 L1928.39 1211.57 L1927.8 1211.57 L1927.22 1211.57 L1926.63 1211.57 L1926.04 1211.57 L1925.46 1211.57 L1924.87 1211.57 L1924.29 1211.57 L1923.7 1211.57 L1923.11 1211.57 L1922.53 1211.57 L1921.94 1211.57 L1921.35 1211.57 L1920.77 1211.57 L1920.18 1211.57 L1919.59 1211.57 L1919.01 1211.57 L1918.42 1211.57 L1917.83 1211.57 L1917.25 1211.57 L1916.66 1211.57 L1916.08 1211.57 L1915.49 1211.57 L1914.9 1211.57 L1914.32 1211.57 L1913.73 1211.57 L1913.14 1211.57 L1912.56 1211.57 L1911.97 1211.57 L1911.38 1211.57 L1910.8 1211.57 L1910.21 1211.57 L1909.63 1211.57 L1909.04 1211.57 L1908.45 1211.57 L1907.87 1211.57 L1907.28 1211.57 L1906.69 1211.57 L1906.11 1211.57 L1905.52 1211.57 L1904.93 1211.57 L1904.35 1211.57 L1903.76 1211.57 L1903.17 1211.57 L1902.59 1211.57 L1902 1211.57 L1901.42 1211.57 L1900.83 1211.57 L1900.24 1211.57 L1899.66 1211.57 L1899.07 1211.57 L1898.48 1211.57 L1897.9 1211.57 L1897.31 1211.57 L1896.72 1211.57 L1896.14 1211.57 L1895.55 1211.57 L1894.96 1211.57 L1894.38 1211.57 L1893.79 1211.57 L1893.21 1211.57 L1892.62 1211.57 L1892.03 1211.57 L1891.45 1211.57 L1890.86 1211.57 L1890.27 1211.57 L1889.69 1211.57 L1889.1 1211.57 L1888.51 1211.57 L1887.93 1211.57 L1887.34 1211.57 L1886.76 1211.57 L1886.17 1211.57 L1885.58 1211.57 L1885 1211.57 L1884.41 1211.57 L1883.82 1211.57 L1883.24 1211.57 L1882.65 1211.57 L1882.06 1211.57 L1881.48 1211.57 L1880.89 1211.57 L1880.3 1211.57 L1879.72 1211.57 L1879.13 1211.57 L1878.55 1211.57 L1877.96 1211.57 L1877.37 1211.57 L1876.79 1211.57 L1876.2 1211.57 L1875.61 1211.57 L1875.03 1211.57 L1874.44 1211.57 L1873.85 1211.57 L1873.27 1211.57 L1872.68 1211.57 L1872.09 1211.57 L1871.51 1211.57 L1870.92 1211.57 L1870.34 1211.57 L1869.75 1211.57 L1869.16 1211.57 L1868.58 1211.57 L1867.99 1211.57 L1867.4 1211.57 L1866.82 1211.57 L1866.23 1211.57 L1865.64 1211.57 L1865.06 1211.57 L1864.47 1211.57 L1863.88 1211.57 L1863.3 1211.57 L1862.71 1211.57 L1862.13 1211.57 L1861.54 1211.57 L1860.95 1211.57 L1860.37 1211.57 L1859.78 1211.57 L1859.19 1211.57 L1858.61 1211.57 L1858.02 1211.57 L1857.43 1211.57 L1856.85 1211.57 L1856.26 1211.57 L1855.68 1211.57 L1855.09 1211.57 L1854.5 1211.57 L1853.92 1211.57 L1853.33 1211.57 L1852.74 1211.57 L1852.16 1211.57 L1851.57 1211.57 L1850.98 1211.57 L1850.4 1211.57 L1849.81 1211.57 L1849.22 1211.57 L1848.64 1211.57 L1848.05 1211.57 L1847.47 1211.57 L1846.88 1211.57 L1846.29 1211.57 L1845.71 1211.57 L1845.12 1211.57 L1844.53 1211.57 L1843.95 1211.57 L1843.36 1211.57 L1842.77 1211.57 L1842.19 1211.57 L1841.6 1211.57 L1841.01 1211.57 L1840.43 1211.57 L1839.84 1211.57 L1839.26 1211.57 L1838.67 1211.57 L1838.08 1211.57 L1837.5 1211.57 L1836.91 1211.57 L1836.32 1211.57 L1835.74 1211.57 L1835.15 1211.57 L1834.56 1211.57 L1833.98 1211.57 L1833.39 1211.57 L1832.81 1211.57 L1832.22 1211.57 L1831.63 1211.57 L1831.05 1211.57 L1830.46 1211.57 L1829.87 1211.57 L1829.29 1211.57 L1828.7 1211.57 L1828.11 1211.57 L1827.53 1211.57 L1826.94 1211.57 L1826.35 1211.57 L1825.77 1211.57 L1825.18 1211.57 L1824.6 1211.57 L1824.01 1211.57 L1823.42 1211.57 L1822.84 1211.57 L1822.25 1211.57 L1821.66 1211.57 L1821.08 1211.57 L1820.49 1211.57 L1819.9 1211.57 L1819.32 1211.57 L1818.73 1211.57 L1818.14 1211.57 L1817.56 1211.57 L1816.97 1211.57 L1816.39 1211.57 L1815.8 1211.57 L1815.21 1211.57 L1814.63 1211.57 L1814.04 1211.57 L1813.45 1211.57 L1812.87 1211.57 L1812.28 1211.57 L1811.69 1211.57 L1811.11 1211.57 L1810.52 1211.57 L1809.94 1211.57 L1809.35 1211.57 L1808.76 1211.57 L1808.18 1211.57 L1807.59 1211.57 L1807 1211.57 L1806.42 1211.57 L1805.83 1211.57 L1805.24 1211.57 L1804.66 1211.57 L1804.07 1211.57 L1803.48 1211.57 L1802.9 1211.57 L1802.31 1211.57 L1801.73 1211.57 L1801.14 1211.57 L1800.55 1211.57 L1799.97 1211.57 L1799.38 1211.57 L1798.79 1211.57 L1798.21 1211.57 L1797.62 1211.57 L1797.03 1211.57 L1796.45 1211.57 L1795.86 1211.57 L1795.27 1211.57 L1794.69 1211.57 L1794.1 1211.57 L1793.52 1211.57 L1792.93 1211.57 L1792.34 1211.57 L1791.76 1211.57 L1791.17 1211.57 L1790.58 1211.57 L1790 1211.57 L1789.41 1211.57 L1788.82 1211.57 L1788.24 1211.57 L1787.65 1211.57 L1787.06 1211.57 L1786.48 1211.57 L1785.89 1211.57 L1785.31 1211.57 L1784.72 1211.57 L1784.13 1211.57 L1783.55 1211.57 L1782.96 1211.57 L1782.37 1211.57 L1781.79 1211.57 L1781.2 1211.57 L1780.61 1211.57 L1780.03 1211.57 L1779.44 1211.57 L1778.86 1211.57 L1778.27 1211.57 L1777.68 1211.57 L1777.1 1211.57 L1776.51 1211.57 L1775.92 1211.57 L1775.34 1211.57 L1774.75 1211.57 L1774.16 1211.57 L1773.58 1211.57 L1772.99 1211.57 L1772.4 1211.57 L1771.82 1211.57 L1771.23 1211.57 L1770.65 1211.57 L1770.06 1211.57 L1769.47 1211.57 L1768.89 1211.57 L1768.3 1211.57 L1767.71 1211.57 L1767.13 1211.57 L1766.54 1211.57 L1765.95 1211.57 L1765.37 1211.57 L1764.78 1211.57 L1764.19 1211.57 L1763.61 1211.57 L1763.02 1211.57 L1762.44 1211.57 L1761.85 1211.57 L1761.26 1211.57 L1760.68 1211.57 L1760.09 1211.57 L1759.5 1211.57 L1758.92 1211.57 L1758.33 1211.57 L1757.74 1211.57 L1757.16 1211.57 L1756.57 1211.57 L1755.99 1211.57 L1755.4 1211.57 L1754.81 1211.57 L1754.23 1211.57 L1753.64 1211.57 L1753.05 1211.57 L1752.47 1211.57 L1751.88 1211.57 L1751.29 1211.57 L1750.71 1211.57 L1750.12 1211.57 L1749.53 1211.57 L1748.95 1211.57 L1748.36 1211.57 L1747.78 1211.57 L1747.19 1211.57 L1746.6 1211.57 L1746.02 1211.57 L1745.43 1211.57 L1744.84 1211.57 L1744.26 1211.57 L1743.67 1211.57 L1743.08 1211.57 L1742.5 1211.57 L1741.91 1211.57 L1741.32 1211.57 L1740.74 1211.57 L1740.15 1211.57 L1739.57 1211.57 L1738.98 1211.57 L1738.39 1211.57 L1737.81 1211.57 L1737.22 1211.57 L1736.63 1211.57 L1736.05 1211.57 L1735.46 1211.57 L1734.87 1211.57 L1734.29 1211.57 L1733.7 1211.57 L1733.11 1211.57 L1732.53 1211.57 L1731.94 1211.57 L1731.36 1211.57 L1730.77 1211.57 L1730.18 1211.57 L1729.6 1211.57 L1729.01 1211.57 L1728.42 1211.57 L1727.84 1211.57 L1727.25 1211.57 L1726.66 1211.57 L1726.08 1211.57 L1725.49 1211.57 L1724.91 1211.57 L1724.32 1211.57 L1723.73 1211.57 L1723.15 1211.57 L1722.56 1211.57 L1721.97 1211.57 L1721.39 1211.57 L1720.8 1211.57 L1720.21 1211.57 L1719.63 1211.57 L1719.04 1211.57 L1718.45 1211.57 L1717.87 1211.57 L1717.28 1211.57 L1716.7 1211.57 L1716.11 1211.57 L1715.52 1211.57 L1714.94 1211.57 L1714.35 1211.57 L1713.76 1211.57 L1713.18 1211.57 L1712.59 1211.57 L1712 1211.57 L1711.42 1211.57 L1710.83 1211.57 L1710.24 1211.57 L1709.66 1211.57 L1709.07 1211.57 L1708.49 1211.57 L1707.9 1211.57 L1707.31 1211.57 L1706.73 1211.57 L1706.14 1211.57 L1705.55 1211.57 L1704.97 1211.57 L1704.38 1211.57 L1703.79 1211.57 L1703.21 1211.57 L1702.62 1211.57 L1702.04 1211.57 L1701.45 1211.57 L1700.86 1211.57 L1700.28 1211.57 L1699.69 1211.57 L1699.1 1211.57 L1698.52 1211.57 L1697.93 1211.57 L1697.34 1211.57 L1696.76 1211.57 L1696.17 1211.57 L1695.58 1211.57 L1695 1211.57 L1694.41 1211.57 L1693.83 1211.57 L1693.24 1211.57 L1692.65 1211.57 L1692.07 1211.57 L1691.48 1211.57 L1690.89 1211.57 L1690.31 1211.57 L1689.72 1211.57 L1689.13 1211.57 L1688.55 1211.57 L1687.96 1211.57 L1687.37 1211.57 L1686.79 1211.57 L1686.2 1211.57 L1685.62 1211.57 L1685.03 1211.57 L1684.44 1211.57 L1683.86 1211.57 L1683.27 1211.57 L1682.68 1211.57 L1682.1 1211.57 L1681.51 1211.57 L1680.92 1211.57 L1680.34 1211.57 L1679.75 1211.57 L1679.17 1211.57 L1678.58 1211.57 L1677.99 1211.57 L1677.41 1211.57 L1676.82 1211.57 L1676.23 1211.57 L1675.65 1211.57 L1675.06 1211.57 L1674.47 1211.57 L1673.89 1211.57 L1673.3 1211.57 L1672.71 1211.57 L1672.13 1211.57 L1671.54 1211.57 L1670.96 1211.57 L1670.37 1211.57 L1669.78 1211.57 L1669.2 1211.57 L1668.61 1211.57 L1668.02 1211.57 L1667.44 1211.57 L1666.85 1211.57 L1666.26 1211.57 L1665.68 1211.57 L1665.09 1211.57 L1664.5 1211.57 L1663.92 1211.57 L1663.33 1211.57 L1662.75 1211.57 L1662.16 1211.57 L1661.57 1211.57 L1660.99 1211.57 L1660.4 1211.57 L1659.81 1211.57 L1659.23 1211.57 L1658.64 1211.57 L1658.05 1211.57 L1657.47 1211.57 L1656.88 1211.57 L1656.29 1211.57 L1655.71 1211.57 L1655.12 1211.57 L1654.54 1211.57 L1653.95 1211.57 L1653.36 1211.57 L1652.78 1211.57 L1652.19 1211.57 L1651.6 1211.57 L1651.02 1211.57 L1650.43 1211.57 L1649.84 1211.57 L1649.26 1211.57 L1648.67 1211.57 L1648.09 1211.57 L1647.5 1211.57 L1646.91 1211.57 L1646.33 1211.57 L1645.74 1211.57 L1645.15 1211.57 L1644.57 1211.57 L1643.98 1211.57 L1643.39 1211.57 L1642.81 1211.57 L1642.22 1211.57 L1641.63 1211.57 L1641.05 1211.57 L1640.46 1211.57 L1639.88 1211.57 L1639.29 1211.57 L1638.7 1211.57 L1638.12 1211.57 L1637.53 1211.57 L1636.94 1211.57 L1636.36 1211.57 L1635.77 1211.57 L1635.18 1211.57 L1634.6 1211.57 L1634.01 1211.57 L1633.42 1211.57 L1632.84 1211.57 L1632.25 1211.57 L1631.67 1211.57 L1631.08 1211.57 L1630.49 1211.57 L1629.91 1211.57 L1629.32 1211.57 L1628.73 1211.57 L1628.15 1211.57 L1627.56 1211.57 L1626.97 1211.57 L1626.39 1211.57 L1625.8 1211.57 L1625.22 1211.57 L1624.63 1211.57 L1624.04 1211.57 L1623.46 1211.57 L1622.87 1211.57 L1622.28 1211.57 L1621.7 1211.57 L1621.11 1211.57 L1620.52 1211.57 L1619.94 1211.57 L1619.35 1211.57 L1618.76 1211.57 L1618.18 1211.57 L1617.59 1211.57 L1617.01 1211.57 L1616.42 1211.57 L1615.83 1211.57 L1615.25 1211.57 L1614.66 1211.57 L1614.07 1211.57 L1613.49 1211.57 L1612.9 1211.57 L1612.31 1211.57 L1611.73 1211.57 L1611.14 1211.57 L1610.55 1211.57 L1609.97 1211.57 L1609.38 1211.57 L1608.8 1211.57 L1608.21 1211.57 L1607.62 1211.57 L1607.04 1211.57 L1606.45 1211.57 L1605.86 1211.57 L1605.28 1211.57 L1604.69 1211.57 L1604.1 1211.57 L1603.52 1211.57 L1602.93 1211.57 L1602.34 1211.57 L1601.76 1211.57 L1601.17 1211.57 L1600.59 1211.57 L1600 1211.57 L1599.41 1211.57 L1598.83 1211.57 L1598.24 1211.57 L1597.65 1211.57 L1597.07 1211.57 L1596.48 1211.57 L1595.89 1211.57 L1595.31 1211.57 L1594.72 1211.57 L1594.14 1211.57 L1593.55 1211.57 L1592.96 1211.57 L1592.38 1211.57 L1591.79 1211.57 L1591.2 1211.57 L1590.62 1211.57 L1590.03 1211.57 L1589.44 1211.57 L1588.86 1211.57 L1588.27 1211.57 L1587.68 1211.57 L1587.1 1211.57 L1586.51 1211.57 L1585.93 1211.57 L1585.34 1211.57 L1584.75 1211.57 L1584.17 1211.57 L1583.58 1211.57 L1582.99 1211.57 L1582.41 1211.57 L1581.82 1211.57 L1581.23 1211.57 L1580.65 1211.57 L1580.06 1211.57 L1579.47 1211.57 L1578.89 1211.57 L1578.3 1211.57 L1577.72 1211.57 L1577.13 1211.57 L1576.54 1211.57 L1575.96 1211.57 L1575.37 1211.57 L1574.78 1211.57 L1574.2 1211.57 L1573.61 1211.57 L1573.02 1211.57 L1572.44 1211.57 L1571.85 1211.57 L1571.27 1211.57 L1570.68 1211.57 L1570.09 1211.57 L1569.51 1211.57 L1568.92 1211.57 L1568.33 1211.57 L1567.75 1211.57 L1567.16 1211.57 L1566.57 1211.57 L1565.99 1211.57 L1565.4 1211.57 L1564.81 1211.57 L1564.23 1211.57 L1563.64 1211.57 L1563.06 1211.57 L1562.47 1211.57 L1561.88 1211.57 L1561.3 1211.57 L1560.71 1211.57 L1560.12 1211.57 L1559.54 1211.57 L1558.95 1211.57 L1558.36 1211.57 L1557.78 1211.57 L1557.19 1211.57 L1556.6 1211.57 L1556.02 1211.57 L1555.43 1211.57 L1554.85 1211.57 L1554.26 1211.57 L1553.67 1211.57 L1553.09 1211.57 L1552.5 1211.57 L1551.91 1211.57 L1551.33 1211.57 L1550.74 1211.57 L1550.15 1211.57 L1549.57 1211.57 L1548.98 1211.57 L1548.4 1211.57 L1547.81 1211.57 L1547.22 1211.57 L1546.64 1211.57 L1546.05 1211.57 L1545.46 1211.57 L1544.88 1211.57 L1544.29 1211.57 L1543.7 1211.57 L1543.12 1211.57 L1542.53 1211.57 L1541.94 1211.57 L1541.36 1211.57 L1540.77 1211.57 L1540.19 1211.57 L1539.6 1211.57 L1539.01 1211.57 L1538.43 1211.57 L1537.84 1211.57 L1537.25 1211.57 L1536.67 1211.57 L1536.08 1211.57 L1535.49 1211.57 L1534.91 1211.57 L1534.32 1211.57 L1533.73 1211.57 L1533.15 1211.57 L1532.56 1211.57 L1531.98 1211.57 L1531.39 1211.57 L1530.8 1211.57 L1530.22 1211.57 L1529.63 1211.57 L1529.04 1211.57 L1528.46 1211.57 L1527.87 1211.57 L1527.28 1211.57 L1526.7 1211.57 L1526.11 1211.57 L1525.52 1211.57 L1524.94 1211.57 L1524.35 1211.57 L1523.77 1211.57 L1523.18 1211.57 L1522.59 1211.57 L1522.01 1211.57 L1521.42 1211.57 L1520.83 1211.57 L1520.25 1211.57 L1519.66 1211.57 L1519.07 1211.57 L1518.49 1211.57 L1517.9 1211.57 L1517.32 1211.57 L1516.73 1211.57 L1516.14 1211.57 L1515.56 1211.57 L1514.97 1211.57 L1514.38 1211.57 L1513.8 1211.57 L1513.21 1211.57 L1512.62 1211.57 L1512.04 1211.57 L1511.45 1211.57 L1510.86 1211.57 L1510.28 1211.57 L1509.69 1211.57 L1509.11 1211.57 L1508.52 1211.57 L1507.93 1211.57 L1507.35 1211.57 L1506.76 1211.57 L1506.17 1211.57 L1505.59 1211.57 L1505 1211.57 L1504.41 1211.57 L1503.83 1211.57 L1503.24 1211.57 L1502.65 1211.57 L1502.07 1211.57 L1501.48 1211.57 L1500.9 1211.57 L1500.31 1211.57 L1499.72 1211.57 L1499.14 1211.57 L1498.55 1211.57 L1497.96 1211.57 L1497.38 1211.57 L1496.79 1211.57 L1496.2 1211.57 L1495.62 1211.57 L1495.03 1211.57 L1494.45 1211.57 L1493.86 1211.57 L1493.27 1211.57 L1492.69 1211.57 L1492.1 1211.57 L1491.51 1211.57 L1490.93 1211.57 L1490.34 1211.57 L1489.75 1211.57 L1489.17 1211.57 L1488.58 1211.57 L1487.99 1211.57 L1487.41 1211.57 L1486.82 1211.57 L1486.24 1211.57 L1485.65 1211.57 L1485.06 1211.57 L1484.48 1211.57 L1483.89 1211.57 L1483.3 1211.57 L1482.72 1211.57 L1482.13 1211.57 L1481.54 1211.57 L1480.96 1211.57 L1480.37 1211.57 L1479.78 1211.57 L1479.2 1211.57 L1478.61 1211.57 L1478.03 1211.57 L1477.44 1211.57 L1476.85 1211.57 L1476.27 1211.57 L1475.68 1211.57 L1475.09 1211.57 L1474.51 1211.57 L1473.92 1211.57 L1473.33 1211.57 L1472.75 1211.57 L1472.16 1211.57 L1471.57 1211.57 L1470.99 1211.57 L1470.4 1211.57 L1469.82 1211.57 L1469.23 1211.57 L1468.64 1211.57 L1468.06 1211.57 L1467.47 1211.57 L1466.88 1211.57 L1466.3 1211.57 L1465.71 1211.57 L1465.12 1211.57 L1464.54 1211.57 L1463.95 1211.57 L1463.37 1211.57 L1462.78 1211.57 L1462.19 1211.57 L1461.61 1211.57 L1461.02 1211.57 L1460.43 1211.57 L1459.85 1211.57 L1459.26 1211.57 L1458.67 1211.57 L1458.09 1211.57 L1457.5 1211.57 L1456.91 1211.57 L1456.33 1211.57 L1455.74 1211.57 L1455.16 1211.57 L1454.57 1211.57 L1453.98 1211.57 L1453.4 1211.57 L1452.81 1211.57 L1452.22 1211.57 L1451.64 1211.57 L1451.05 1211.57 L1450.46 1211.57 L1449.88 1211.57 L1449.29 1211.57 L1448.7 1211.57 L1448.12 1211.57 L1447.53 1211.57 L1446.95 1211.57 L1446.36 1211.57 L1445.77 1211.57 L1445.19 1211.57 L1444.6 1211.57 L1444.01 1211.57 L1443.43 1211.57 L1442.84 1211.57 L1442.25 1211.57 L1441.67 1211.57 L1441.08 1211.57 L1440.5 1211.57 L1439.91 1211.57 L1439.32 1211.57 L1438.74 1211.57 L1438.15 1211.57 L1437.56 1211.57 L1436.98 1211.57 L1436.39 1211.57 L1435.8 1211.57 L1435.22 1211.57 L1434.63 1211.57 L1434.04 1211.57 L1433.46 1211.57 L1432.87 1211.57 L1432.29 1211.57 L1431.7 1211.57 L1431.11 1211.57 L1430.53 1211.57 L1429.94 1211.57 L1429.35 1211.57 L1428.77 1211.57 L1428.18 1211.57 L1427.59 1211.57 L1427.01 1211.57 L1426.42 1211.57 L1425.83 1211.57 L1425.25 1211.57 L1424.66 1211.57 L1424.08 1211.57 L1423.49 1211.57 L1422.9 1211.57 L1422.32 1211.57 L1421.73 1211.57 L1421.14 1211.57 L1420.56 1211.57 L1419.97 1211.57 L1419.38 1211.57 L1418.8 1211.57 L1418.21 1211.57 L1417.63 1211.57 L1417.04 1211.57 L1416.45 1211.57 L1415.87 1211.57 L1415.28 1211.57 L1414.69 1211.57 L1414.11 1211.57 L1413.52 1211.57 L1412.93 1211.57 L1412.35 1211.57 L1411.76 1211.57 L1411.17 1211.57 L1410.59 1211.57 L1410 1211.57 L1409.42 1211.57 L1408.83 1211.57 L1408.24 1211.57 L1407.66 1211.57 L1407.07 1211.57 L1406.48 1211.57 L1405.9 1211.57 L1405.31 1211.57 L1404.72 1211.57 L1404.14 1211.57 L1403.55 1211.57 L1402.96 1211.57 L1402.38 1211.57 L1401.79 1211.57 L1401.21 1211.57 L1400.62 1211.57 L1400.03 1211.57 L1399.45 1211.57 L1398.86 1211.57 L1398.27 1211.57 L1397.69 1211.57 L1397.1 1211.57 L1396.51 1211.57 L1395.93 1211.57 L1395.34 1211.57 L1394.75 1211.57 L1394.17 1211.57 L1393.58 1211.57 L1393 1211.57 L1392.41 1211.57 L1391.82 1211.57 L1391.24 1211.57 L1390.65 1211.57 L1390.06 1211.57 L1389.48 1211.57 L1388.89 1211.57 L1388.3 1211.57 L1387.72 1211.57 L1387.13 1211.57 L1386.55 1211.57 L1385.96 1211.57 L1385.37 1211.57 L1384.79 1211.57 L1384.2 1211.57 L1383.61 1211.57 L1383.03 1211.57 L1382.44 1211.57 L1381.85 1211.57 L1381.27 1211.57 L1380.68 1211.57 L1380.09 1211.57 L1379.51 1211.57 L1378.92 1211.57 L1378.34 1211.57 L1377.75 1211.57 L1377.16 1211.57 L1376.58 1211.57 L1375.99 1211.57 L1375.4 1211.57 L1374.82 1211.57 L1374.23 1211.57 L1373.64 1211.57 L1373.06 1211.57 L1372.47 1211.57 L1371.88 1211.57 L1371.3 1211.57 L1370.71 1211.57 L1370.13 1211.57 L1369.54 1211.57 L1368.95 1211.57 L1368.37 1211.57 L1367.78 1211.57 L1367.19 1211.57 L1366.61 1211.57 L1366.02 1211.57 L1365.43 1211.57 L1364.85 1211.57 L1364.26 1211.57 L1363.68 1211.57 L1363.09 1211.57 L1362.5 1211.57 L1361.92 1211.57 L1361.33 1211.57 L1360.74 1211.57 L1360.16 1211.57 L1359.57 1211.57 L1358.98 1211.57 L1358.4 1211.57 L1357.81 1211.57 L1357.22 1211.57 L1356.64 1211.57 L1356.05 1211.57 L1355.47 1211.57 L1354.88 1211.57 L1354.29 1211.57 L1353.71 1211.57 L1353.12 1211.57 L1352.53 1211.57 L1351.95 1211.57 L1351.36 1211.57 L1350.77 1211.57 L1350.19 1211.57 L1349.6 1211.57 L1349.01 1211.57 L1348.43 1211.57 L1347.84 1211.57 L1347.26 1211.57 L1346.67 1211.57 L1346.08 1211.57 L1345.5 1211.57 L1344.91 1211.57 L1344.32 1211.57 L1343.74 1211.57 L1343.15 1211.57 L1342.56 1211.57 L1341.98 1211.57 L1341.39 1211.57 L1340.8 1211.57 L1340.22 1211.57 L1339.63 1211.57 L1339.05 1211.57 L1338.46 1211.57 L1337.87 1211.57 L1337.29 1211.57 L1336.7 1211.57 L1336.11 1211.57 L1335.53 1211.57 L1334.94 1211.57 L1334.35 1211.57 L1333.77 1211.57 L1333.18 1211.57 L1332.6 1211.57 L1332.01 1211.57 L1331.42 1211.57 L1330.84 1211.57 L1330.25 1211.57 L1329.66 1211.57 L1329.08 1211.57 L1328.49 1211.57 L1327.9 1211.57 L1327.32 1211.57 L1326.73 1211.57 L1326.14 1211.57 L1325.56 1211.57 L1324.97 1211.57 L1324.39 1211.57 L1323.8 1211.57 L1323.21 1211.57 L1322.63 1211.57 L1322.04 1211.57 L1321.45 1211.57 L1320.87 1211.57 L1320.28 1211.57 L1319.69 1211.57 L1319.11 1211.57 L1318.52 1211.57 L1317.93 1211.57 L1317.35 1211.57 L1316.76 1211.57 L1316.18 1211.57 L1315.59 1211.57 L1315 1211.57 L1314.42 1211.57 L1313.83 1211.57 L1313.24 1211.57 L1312.66 1211.57 L1312.07 1211.57 L1311.48 1211.57 L1310.9 1211.57 L1310.31 1211.57 L1309.73 1211.57 L1309.14 1211.57 L1308.55 1211.57 L1307.97 1211.57 L1307.38 1211.57 L1306.79 1211.57 L1306.21 1211.57 L1305.62 1211.57 L1305.03 1211.57 L1304.45 1211.57 L1303.86 1211.57 L1303.27 1211.57 L1302.69 1211.57 L1302.1 1211.57 L1301.52 1211.57 L1300.93 1211.57 L1300.34 1211.57 L1299.76 1211.57 L1299.17 1211.57 L1298.58 1211.57 L1298 1211.57 L1297.41 1211.57 L1296.82 1211.57 L1296.24 1211.57 L1295.65 1211.57 L1295.06 1211.57 L1294.48 1211.57 L1293.89 1211.57 L1293.31 1211.57 L1292.72 1211.57 L1292.13 1211.57 L1291.55 1211.57 L1290.96 1211.57 L1290.37 1211.57 L1289.79 1211.57 L1289.2 1211.57 L1288.61 1211.57 L1288.03 1211.57 L1287.44 1211.57 L1286.86 1211.57 L1286.27 1211.57 L1285.68 1211.57 L1285.1 1211.57 L1284.51 1211.57 L1283.92 1211.57 L1283.34 1211.57 L1282.75 1211.57 L1282.16 1211.57 L1281.58 1211.57 L1280.99 1211.57 L1280.4 1211.57 L1279.82 1211.57 L1279.23 1211.57 L1278.65 1211.57 L1278.06 1211.57 L1277.47 1211.57 L1276.89 1211.57 L1276.3 1211.57 L1275.71 1211.57 L1275.13 1211.57 L1274.54 1211.57 L1273.95 1211.57 L1273.37 1211.57 L1272.78 1211.57 L1272.19 1211.57 L1271.61 1211.57 L1271.02 1211.57 L1270.44 1211.57 L1269.85 1211.57 L1269.26 1211.57 L1268.68 1211.57 L1268.09 1211.57 L1267.5 1211.57 L1266.92 1211.57 L1266.33 1211.57 L1265.74 1211.57 L1265.16 1211.57 L1264.57 1211.57 L1263.98 1211.57 L1263.4 1211.57 L1262.81 1211.57 L1262.23 1211.57 L1261.64 1211.57 L1261.05 1211.57 L1260.47 1211.57 L1259.88 1211.57 L1259.29 1211.57 L1258.71 1211.57 L1258.12 1211.57 L1257.53 1211.57 L1256.95 1211.57 L1256.36 1211.57 L1255.78 1211.57 L1255.19 1211.57 L1254.6 1211.57 L1254.02 1211.57 L1253.43 1211.57 L1252.84 1211.57 L1252.26 1211.57 L1251.67 1211.57 L1251.08 1211.57 L1250.5 1211.57 L1249.91 1211.57 L1249.32 1211.57 L1248.74 1211.57 L1248.15 1211.57 L1247.57 1211.57 L1246.98 1211.57 L1246.39 1211.57 L1245.81 1211.57 L1245.22 1211.57 L1244.63 1211.57 L1244.05 1211.57 L1243.46 1211.57 L1242.87 1211.57 L1242.29 1211.57 L1241.7 1211.57 L1241.11 1211.57 L1240.53 1211.57 L1239.94 1211.57 L1239.36 1211.57 L1238.77 1211.57 L1238.18 1211.57 L1237.6 1211.57 L1237.01 1211.57 L1236.42 1211.57 L1235.84 1211.57 L1235.25 1211.57 L1234.66 1211.57 L1234.08 1211.57 L1233.49 1211.57 L1232.91 1211.57 L1232.32 1211.57 L1231.73 1211.57 L1231.15 1211.57 L1230.56 1211.57 L1229.97 1211.57 L1229.39 1211.57 L1228.8 1211.57 L1228.21 1211.57 L1227.63 1211.57 L1227.04 1211.57 L1226.45 1211.57 L1225.87 1211.57 L1225.28 1211.57 L1224.7 1211.57 L1224.11 1211.57 L1223.52 1211.57 L1222.94 1211.57 L1222.35 1211.57 L1221.76 1211.57 L1221.18 1211.57 L1220.59 1211.57 L1220 1211.57 L1219.42 1211.57 L1218.83 1211.57 L1218.24 1211.57 L1217.66 1211.57 L1217.07 1211.57 L1216.49 1211.57 L1215.9 1211.57 L1215.31 1211.57 L1214.73 1211.57 L1214.14 1211.57 L1213.55 1211.57 L1212.97 1211.57 L1212.38 1211.57 L1211.79 1211.57 L1211.21 1211.57 L1210.62 1211.57 L1210.03 1211.57 L1209.45 1211.57 L1208.86 1211.57 L1208.28 1211.57 L1207.69 1211.57 L1207.1 1211.57 L1206.52 1211.57 L1205.93 1211.57 L1205.34 1211.57 L1204.76 1211.57 L1204.17 1211.57 L1203.58 1211.57 L1203 1211.57 L1202.41 1211.57 L1201.83 1211.57 L1201.24 1211.57 L1200.65 1211.57 L1200.07 1211.57 L1199.48 1211.57 L1198.89 1211.57 L1198.31 1211.57 L1197.72 1211.57 L1197.13 1211.57 L1196.55 1211.57 L1195.96 1211.57 L1195.37 1211.57 L1194.79 1211.57 L1194.2 1211.57 L1193.62 1211.57 L1193.03 1211.57 L1192.44 1211.57 L1191.86 1211.57 L1191.27 1211.57 L1190.68 1211.57 L1190.1 1211.57 L1189.51 1211.57 L1188.92 1211.57 L1188.34 1211.57 L1187.75 1211.57 L1187.16 1211.57 L1186.58 1211.57 L1185.99 1211.57 L1185.41 1211.57 L1184.82 1211.57 L1184.23 1211.57 L1183.65 1211.57 L1183.06 1211.57 L1182.47 1211.57 L1181.89 1211.57 L1181.3 1211.57 L1180.71 1211.57 L1180.13 1211.57 L1179.54 1211.57 L1178.96 1211.57 L1178.37 1211.57 L1177.78 1211.57 L1177.2 1211.57 L1176.61 1211.57 L1176.02 1211.57 L1175.44 1211.57 L1174.85 1211.57 L1174.26 1211.57 L1173.68 1211.57 L1173.09 1211.57 L1172.5 1211.57 L1171.92 1211.57 L1171.33 1211.57 L1170.75 1211.57 L1170.16 1211.57 L1169.57 1211.57 L1168.99 1211.57 L1168.4 1211.57 L1167.81 1211.57 L1167.23 1211.57 L1166.64 1211.57 L1166.05 1211.57 L1165.47 1211.57 L1164.88 1211.57 L1164.29 1211.57 L1163.71 1211.57 L1163.12 1211.57 L1162.54 1211.57 L1161.95 1211.57 L1161.36 1211.57 L1160.78 1211.57 L1160.19 1211.57 L1159.6 1211.57 L1159.02 1211.57 L1158.43 1211.57 L1157.84 1211.57 L1157.26 1211.57 L1156.67 1211.57 L1156.09 1211.57 L1155.5 1211.57 L1154.91 1211.57 L1154.33 1211.57 L1153.74 1211.57 L1153.15 1211.57 L1152.57 1211.57 L1151.98 1211.57 L1151.39 1211.57 L1150.81 1211.57 L1150.22 1211.57 L1149.63 1211.57 L1149.05 1211.57 L1148.46 1211.57 L1147.88 1211.57 L1147.29 1211.57 L1146.7 1211.57 L1146.12 1211.57 L1145.53 1211.57 L1144.94 1211.57 L1144.36 1211.57 L1143.77 1211.57 L1143.18 1211.57 L1142.6 1211.57 L1142.01 1211.57 L1141.42 1211.57 L1140.84 1211.57 L1140.25 1211.57 L1139.67 1211.57 L1139.08 1211.57 L1138.49 1211.57 L1137.91 1211.57 L1137.32 1211.57 L1136.73 1211.57 L1136.15 1211.57 L1135.56 1211.57 L1134.97 1211.57 L1134.39 1211.57 L1133.8 1211.57 L1133.21 1211.57 L1132.63 1211.57 L1132.04 1211.57 L1131.46 1211.57 L1130.87 1211.57 L1130.28 1211.57 L1129.7 1211.57 L1129.11 1211.57 L1128.52 1211.57 L1127.94 1211.57 L1127.35 1211.57 L1126.76 1211.57 L1126.18 1211.57 L1125.59 1211.57 L1125.01 1211.57 L1124.42 1211.57 L1123.83 1211.57 L1123.25 1211.57 L1122.66 1211.57 L1122.07 1211.57 L1121.49 1211.57 L1120.9 1211.57 L1120.31 1211.57 L1119.73 1211.57 L1119.14 1211.57 L1118.55 1211.57 L1117.97 1211.57 L1117.38 1211.57 L1116.8 1211.57 L1116.21 1211.57 L1115.62 1211.57 L1115.04 1211.57 L1114.45 1211.57 L1113.86 1211.57 L1113.28 1211.57 L1112.69 1211.57 L1112.1 1211.57 L1111.52 1211.57 L1110.93 1211.57 L1110.34 1211.57 L1109.76 1211.57 L1109.17 1211.57 L1108.59 1211.57 L1108 1211.57 L1107.41 1211.57 L1106.83 1211.57 L1106.24 1211.57 L1105.65 1211.57 L1105.07 1211.57 L1104.48 1211.57 L1103.89 1211.57 L1103.31 1211.57 L1102.72 1211.57 L1102.14 1211.57 L1101.55 1211.57 L1100.96 1211.57 L1100.38 1211.57 L1099.79 1211.57 L1099.2 1211.57 L1098.62 1211.57 L1098.03 1211.57 L1097.44 1211.57 L1096.86 1211.57 L1096.27 1211.57 L1095.68 1211.57 L1095.1 1211.57 L1094.51 1211.57 L1093.93 1211.57 L1093.34 1211.57 L1092.75 1211.57 L1092.17 1211.57 L1091.58 1211.57 L1090.99 1211.57 L1090.41 1211.57 L1089.82 1211.57 L1089.23 1211.57 L1088.65 1211.57 L1088.06 1211.57 L1087.47 1211.57 L1086.89 1211.57 L1086.3 1211.57 L1085.72 1211.57 L1085.13 1211.57 L1084.54 1211.57 L1083.96 1211.57 L1083.37 1211.57 L1082.78 1211.57 L1082.2 1211.57 L1081.61 1211.57 L1081.02 1211.57 L1080.44 1211.57 L1079.85 1211.57 L1079.26 1211.57 L1078.68 1211.57 L1078.09 1211.57 L1077.51 1211.57 L1076.92 1211.57 L1076.33 1211.57 L1075.75 1211.57 L1075.16 1211.57 L1074.57 1211.57 L1073.99 1211.57 L1073.4 1211.57 L1072.81 1211.57 L1072.23 1211.57 L1071.64 1211.57 L1071.06 1211.57 L1070.47 1211.57 L1069.88 1211.57 L1069.3 1211.57 L1068.71 1211.57 L1068.12 1211.57 L1067.54 1211.57 L1066.95 1211.57 L1066.36 1211.57 L1065.78 1211.57 L1065.19 1211.57 L1064.6 1211.57 L1064.02 1211.57 L1063.43 1211.57 L1062.85 1211.57 L1062.26 1211.57 L1061.67 1211.57 L1061.09 1211.57 L1060.5 1211.57 L1059.91 1211.57 L1059.33 1211.57 L1058.74 1211.57 L1058.15 1211.57 L1057.57 1211.57 L1056.98 1211.57 L1056.39 1211.57 L1055.81 1211.57 L1055.22 1211.57 L1054.64 1211.57 L1054.05 1211.57 L1053.46 1211.57 L1052.88 1211.57 L1052.29 1211.57 L1051.7 1211.57 L1051.12 1211.57 L1050.53 1211.57 L1049.94 1211.57 L1049.36 1211.57 L1048.77 1211.57 L1048.19 1211.57 L1047.6 1211.57 L1047.01 1211.57 L1046.43 1211.57 L1045.84 1211.57 L1045.25 1211.57 L1044.67 1211.57 L1044.08 1211.57 L1043.49 1211.57 L1042.91 1211.57 L1042.32 1211.57 L1041.73 1211.57 L1041.15 1211.57 L1040.56 1211.57 L1039.98 1211.57 L1039.39 1211.57 L1038.8 1211.57 L1038.22 1211.57 L1037.63 1211.57 L1037.04 1211.57 L1036.46 1211.57 L1035.87 1211.57 L1035.28 1211.57 L1034.7 1211.57 L1034.11 1211.57 L1033.52 1211.57 L1032.94 1211.57 L1032.35 1211.57 L1031.77 1211.57 L1031.18 1211.57 L1030.59 1211.57 L1030.01 1211.57 L1029.42 1211.57 L1028.83 1211.57 L1028.25 1211.57 L1027.66 1211.57 L1027.07 1211.57 L1026.49 1211.57 L1025.9 1211.57 L1025.32 1211.57 L1024.73 1211.57 L1024.14 1211.57 L1023.56 1211.57 L1022.97 1211.57 L1022.38 1211.57 L1021.8 1211.57 L1021.21 1211.57 L1020.62 1211.57 L1020.04 1211.57 L1019.45 1211.57 L1018.86 1211.57 L1018.28 1211.57 L1017.69 1211.57 L1017.11 1211.57 L1016.52 1211.57 L1015.93 1211.57 L1015.35 1211.57 L1014.76 1211.57 L1014.17 1211.57 L1013.59 1211.57 L1013 1211.57 L1012.41 1211.57 L1011.83 1211.57 L1011.24 1211.57 L1010.65 1211.57 L1010.07 1211.57 L1009.48 1211.57 L1008.9 1211.57 L1008.31 1211.57 L1007.72 1211.57 L1007.14 1211.57 L1006.55 1211.57 L1005.96 1211.57 L1005.38 1211.57 L1004.79 1211.57 L1004.2 1211.57 L1003.62 1211.57 L1003.03 1211.57 L1002.44 1211.57 L1001.86 1211.57 L1001.27 1211.57 L1000.69 1211.57 L1000.1 1211.57 L999.513 1211.57 L998.926 1211.57 L998.34 1211.57 L997.754 1211.57 L997.167 1211.57 L996.581 1211.57 L995.994 1211.57 L995.408 1211.57 L994.822 1211.57 L994.235 1211.57 L993.649 1211.57 L993.062 1211.57 L992.476 1211.57 L991.889 1211.57 L991.303 1211.57 L990.717 1211.57 L990.13 1211.57 L989.544 1211.57 L988.957 1211.57 L988.371 1211.57 L987.785 1211.57 L987.198 1211.57 L986.612 1211.57 L986.025 1211.57  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip192)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1211.87 986.612,1211.87 987.198,1211.87 987.785,1211.87 988.371,1211.87 988.957,1211.87 989.544,1211.87 990.13,1211.87 990.717,1211.87 991.303,1211.87 991.889,1211.87 992.476,1211.87 993.062,1211.87 993.649,1211.87 994.235,1211.87 994.822,1211.87 995.408,1211.87 995.994,1211.87 996.581,1211.87 997.167,1211.87 997.754,1211.87 998.34,1211.87 998.926,1211.87 999.513,1211.87 1000.1,1211.87 1000.69,1211.87 1001.27,1211.87 1001.86,1211.87 1002.44,1211.87 1003.03,1211.87 1003.62,1211.87 1004.2,1211.87 1004.79,1211.87 1005.38,1211.87 1005.96,1211.87 1006.55,1211.87 1007.14,1211.87 1007.72,1211.87 1008.31,1211.87 1008.9,1211.87 1009.48,1211.87 1010.07,1211.87 1010.65,1211.87 1011.24,1211.87 1011.83,1211.87 1012.41,1211.87 1013,1211.87 1013.59,1211.87 1014.17,1211.87 1014.76,1211.87 1015.35,1211.87 1015.93,1211.87 1016.52,1211.87 1017.11,1211.87 1017.69,1211.87 1018.28,1211.87 1018.86,1211.87 1019.45,1211.87 1020.04,1211.87 1020.62,1211.87 1021.21,1211.87 1021.8,1211.87 1022.38,1211.87 1022.97,1211.87 1023.56,1211.87 1024.14,1211.87 1024.73,1211.87 1025.32,1211.87 1025.9,1211.87 1026.49,1211.87 1027.07,1211.87 1027.66,1211.87 1028.25,1211.87 1028.83,1211.87 1029.42,1211.87 1030.01,1211.87 1030.59,1211.87 1031.18,1211.87 1031.77,1211.87 1032.35,1211.87 1032.94,1211.87 1033.52,1211.87 1034.11,1211.87 1034.7,1211.87 1035.28,1211.87 1035.87,1211.87 1036.46,1211.87 1037.04,1211.87 1037.63,1211.87 1038.22,1211.87 1038.8,1211.87 1039.39,1211.87 1039.98,1211.87 1040.56,1211.87 1041.15,1211.87 1041.73,1211.87 1042.32,1211.87 1042.91,1211.87 1043.49,1211.87 1044.08,1211.87 1044.67,1211.87 1045.25,1211.87 1045.84,1211.87 1046.43,1211.87 1047.01,1211.87 1047.6,1211.87 1048.19,1211.87 1048.77,1211.87 1049.36,1211.87 1049.94,1211.87 1050.53,1211.87 1051.12,1211.87 1051.7,1211.87 1052.29,1211.87 1052.88,1211.87 1053.46,1211.87 1054.05,1211.87 1054.64,1211.87 1055.22,1211.87 1055.81,1211.87 1056.39,1211.87 1056.98,1211.87 1057.57,1211.87 1058.15,1211.87 1058.74,1211.87 1059.33,1211.87 1059.91,1211.87 1060.5,1211.87 1061.09,1211.87 1061.67,1211.87 1062.26,1211.87 1062.85,1211.87 1063.43,1211.87 1064.02,1211.87 1064.6,1211.87 1065.19,1211.87 1065.78,1211.87 1066.36,1211.87 1066.95,1211.87 1067.54,1211.87 1068.12,1211.87 1068.71,1211.87 1069.3,1211.87 1069.88,1211.87 1070.47,1211.87 1071.06,1211.87 1071.64,1211.87 1072.23,1211.87 1072.81,1211.87 1073.4,1211.87 1073.99,1211.87 1074.57,1211.87 1075.16,1211.87 1075.75,1211.87 1076.33,1211.87 1076.92,1211.87 1077.51,1211.87 1078.09,1211.87 1078.68,1211.87 1079.26,1211.87 1079.85,1211.87 1080.44,1211.87 1081.02,1211.87 1081.61,1211.87 1082.2,1211.87 1082.78,1211.87 1083.37,1211.87 1083.96,1211.87 1084.54,1211.87 1085.13,1211.87 1085.72,1211.87 1086.3,1211.87 1086.89,1211.87 1087.47,1211.87 1088.06,1211.87 1088.65,1211.87 1089.23,1211.87 1089.82,1211.87 1090.41,1211.87 1090.99,1211.87 1091.58,1211.87 1092.17,1211.87 1092.75,1211.87 1093.34,1211.87 1093.93,1211.87 1094.51,1211.87 1095.1,1211.87 1095.68,1211.87 1096.27,1211.87 1096.86,1211.87 1097.44,1211.87 1098.03,1211.87 1098.62,1211.87 1099.2,1211.87 1099.79,1211.87 1100.38,1211.87 1100.96,1211.87 1101.55,1211.87 1102.14,1211.87 1102.72,1211.87 1103.31,1211.87 1103.89,1211.87 1104.48,1211.87 1105.07,1211.87 1105.65,1211.87 1106.24,1211.87 1106.83,1211.87 1107.41,1211.87 1108,1211.87 1108.59,1211.87 1109.17,1211.87 1109.76,1211.87 1110.34,1211.87 1110.93,1211.87 1111.52,1211.87 1112.1,1211.87 1112.69,1211.87 1113.28,1211.87 1113.86,1211.87 1114.45,1211.87 1115.04,1211.87 1115.62,1211.87 1116.21,1211.87 1116.8,1211.87 1117.38,1211.87 1117.97,1211.87 1118.55,1211.87 1119.14,1211.87 1119.73,1211.87 1120.31,1211.87 1120.9,1211.87 1121.49,1211.87 1122.07,1211.87 1122.66,1211.87 1123.25,1211.87 1123.83,1211.87 1124.42,1211.87 1125.01,1211.87 1125.59,1211.87 1126.18,1211.87 1126.76,1211.87 1127.35,1211.87 1127.94,1211.87 1128.52,1211.87 1129.11,1211.87 1129.7,1211.87 1130.28,1211.87 1130.87,1211.87 1131.46,1211.87 1132.04,1211.87 1132.63,1211.87 1133.21,1211.87 1133.8,1211.87 1134.39,1211.87 1134.97,1211.87 1135.56,1211.87 1136.15,1211.87 1136.73,1211.87 1137.32,1211.87 1137.91,1211.87 1138.49,1211.87 1139.08,1211.87 1139.67,1211.87 1140.25,1211.87 1140.84,1211.87 1141.42,1211.87 1142.01,1211.87 1142.6,1211.87 1143.18,1211.87 1143.77,1211.87 1144.36,1211.87 1144.94,1211.87 1145.53,1211.87 1146.12,1211.87 1146.7,1211.87 1147.29,1211.87 1147.88,1211.87 1148.46,1211.87 1149.05,1211.87 1149.63,1211.87 1150.22,1211.87 1150.81,1211.87 1151.39,1211.87 1151.98,1211.87 1152.57,1211.87 1153.15,1211.87 1153.74,1211.87 1154.33,1211.87 1154.91,1211.87 1155.5,1211.87 1156.09,1211.87 1156.67,1211.87 1157.26,1211.87 1157.84,1211.87 1158.43,1211.87 1159.02,1211.87 1159.6,1211.87 1160.19,1211.87 1160.78,1211.87 1161.36,1211.87 1161.95,1211.87 1162.54,1211.87 1163.12,1211.87 1163.71,1211.87 1164.29,1211.87 1164.88,1211.87 1165.47,1211.87 1166.05,1211.87 1166.64,1211.87 1167.23,1211.87 1167.81,1211.87 1168.4,1211.87 1168.99,1211.87 1169.57,1211.87 1170.16,1211.87 1170.75,1211.87 1171.33,1211.87 1171.92,1211.87 1172.5,1211.87 1173.09,1211.87 1173.68,1211.87 1174.26,1211.87 1174.85,1211.87 1175.44,1211.87 1176.02,1211.87 1176.61,1211.87 1177.2,1211.87 1177.78,1211.87 1178.37,1211.87 1178.96,1211.87 1179.54,1211.87 1180.13,1211.87 1180.71,1211.87 1181.3,1211.87 1181.89,1211.87 1182.47,1211.87 1183.06,1211.87 1183.65,1211.87 1184.23,1211.87 1184.82,1211.87 1185.41,1211.87 1185.99,1211.87 1186.58,1211.87 1187.16,1211.87 1187.75,1211.87 1188.34,1211.87 1188.92,1211.87 1189.51,1211.87 1190.1,1211.87 1190.68,1211.87 1191.27,1211.87 1191.86,1211.87 1192.44,1211.87 1193.03,1211.87 1193.62,1211.87 1194.2,1211.87 1194.79,1211.87 1195.37,1211.87 1195.96,1211.87 1196.55,1211.87 1197.13,1211.87 1197.72,1211.87 1198.31,1211.87 1198.89,1211.87 1199.48,1211.87 1200.07,1211.87 1200.65,1211.87 1201.24,1211.87 1201.83,1211.87 1202.41,1211.87 1203,1211.87 1203.58,1211.87 1204.17,1211.87 1204.76,1211.87 1205.34,1211.87 1205.93,1211.87 1206.52,1211.87 1207.1,1211.87 1207.69,1211.87 1208.28,1211.87 1208.86,1211.87 1209.45,1211.87 1210.03,1211.87 1210.62,1211.87 1211.21,1211.87 1211.79,1211.87 1212.38,1211.87 1212.97,1211.87 1213.55,1211.87 1214.14,1211.87 1214.73,1211.87 1215.31,1211.87 1215.9,1211.87 1216.49,1211.87 1217.07,1211.87 1217.66,1211.87 1218.24,1211.87 1218.83,1211.87 1219.42,1211.87 1220,1211.87 1220.59,1211.87 1221.18,1211.87 1221.76,1211.87 1222.35,1211.87 1222.94,1211.87 1223.52,1211.87 1224.11,1211.87 1224.7,1211.87 1225.28,1211.87 1225.87,1211.87 1226.45,1211.87 1227.04,1211.87 1227.63,1211.87 1228.21,1211.87 1228.8,1211.87 1229.39,1211.87 1229.97,1211.87 1230.56,1211.87 1231.15,1211.87 1231.73,1211.87 1232.32,1211.87 1232.91,1211.87 1233.49,1211.87 1234.08,1211.87 1234.66,1211.87 1235.25,1211.87 1235.84,1211.87 1236.42,1211.87 1237.01,1211.87 1237.6,1211.87 1238.18,1211.87 1238.77,1211.87 1239.36,1211.87 1239.94,1211.87 1240.53,1211.87 1241.11,1211.87 1241.7,1211.87 1242.29,1211.87 1242.87,1211.87 1243.46,1211.87 1244.05,1211.87 1244.63,1211.87 1245.22,1211.87 1245.81,1211.87 1246.39,1211.87 1246.98,1211.87 1247.57,1211.87 1248.15,1211.87 1248.74,1211.87 1249.32,1211.87 1249.91,1211.87 1250.5,1211.87 1251.08,1211.87 1251.67,1211.87 1252.26,1211.87 1252.84,1211.87 1253.43,1211.87 1254.02,1211.87 1254.6,1211.87 1255.19,1211.87 1255.78,1211.87 1256.36,1211.87 1256.95,1211.87 1257.53,1211.87 1258.12,1211.87 1258.71,1211.87 1259.29,1211.87 1259.88,1211.87 1260.47,1211.87 1261.05,1211.87 1261.64,1211.87 1262.23,1211.87 1262.81,1211.87 1263.4,1211.87 1263.98,1211.87 1264.57,1211.87 1265.16,1211.87 1265.74,1211.87 1266.33,1211.87 1266.92,1211.87 1267.5,1211.87 1268.09,1211.87 1268.68,1211.87 1269.26,1211.87 1269.85,1211.87 1270.44,1211.87 1271.02,1211.87 1271.61,1211.87 1272.19,1211.87 1272.78,1211.87 1273.37,1211.87 1273.95,1211.87 1274.54,1211.87 1275.13,1211.87 1275.71,1211.87 1276.3,1211.87 1276.89,1211.87 1277.47,1211.87 1278.06,1211.87 1278.65,1211.87 1279.23,1211.87 1279.82,1211.87 1280.4,1211.87 1280.99,1211.87 1281.58,1211.87 1282.16,1211.87 1282.75,1211.87 1283.34,1211.87 1283.92,1211.87 1284.51,1211.87 1285.1,1211.87 1285.68,1211.87 1286.27,1211.87 1286.86,1211.87 1287.44,1211.87 1288.03,1211.87 1288.61,1211.87 1289.2,1211.87 1289.79,1211.87 1290.37,1211.87 1290.96,1211.87 1291.55,1211.87 1292.13,1211.87 1292.72,1211.87 1293.31,1211.87 1293.89,1211.87 1294.48,1211.87 1295.06,1211.87 1295.65,1211.87 1296.24,1211.87 1296.82,1211.87 1297.41,1211.87 1298,1211.87 1298.58,1211.87 1299.17,1211.87 1299.76,1211.87 1300.34,1211.87 1300.93,1211.87 1301.52,1211.87 1302.1,1211.87 1302.69,1211.87 1303.27,1211.87 1303.86,1211.87 1304.45,1211.87 1305.03,1211.87 1305.62,1211.87 1306.21,1211.87 1306.79,1211.87 1307.38,1211.87 1307.97,1211.87 1308.55,1211.87 1309.14,1211.87 1309.73,1211.87 1310.31,1211.87 1310.9,1211.87 1311.48,1211.87 1312.07,1211.87 1312.66,1211.87 1313.24,1211.87 1313.83,1211.87 1314.42,1211.87 1315,1211.87 1315.59,1211.87 1316.18,1211.87 1316.76,1211.87 1317.35,1211.87 1317.93,1211.87 1318.52,1211.87 1319.11,1211.87 1319.69,1211.87 1320.28,1211.87 1320.87,1211.87 1321.45,1211.87 1322.04,1211.87 1322.63,1211.87 1323.21,1211.87 1323.8,1211.87 1324.39,1211.87 1324.97,1211.87 1325.56,1211.87 1326.14,1211.87 1326.73,1211.87 1327.32,1211.87 1327.9,1211.87 1328.49,1211.87 1329.08,1211.87 1329.66,1211.87 1330.25,1211.87 1330.84,1211.87 1331.42,1211.87 1332.01,1211.87 1332.6,1211.87 1333.18,1211.87 1333.77,1211.87 1334.35,1211.87 1334.94,1211.87 1335.53,1211.87 1336.11,1211.87 1336.7,1211.87 1337.29,1211.87 1337.87,1211.87 1338.46,1211.87 1339.05,1211.87 1339.63,1211.87 1340.22,1211.87 1340.8,1211.87 1341.39,1211.87 1341.98,1211.87 1342.56,1211.87 1343.15,1211.87 1343.74,1211.87 1344.32,1211.87 1344.91,1211.87 1345.5,1211.87 1346.08,1211.87 1346.67,1211.87 1347.26,1211.87 1347.84,1211.87 1348.43,1211.87 1349.01,1211.87 1349.6,1211.87 1350.19,1211.87 1350.77,1211.87 1351.36,1211.87 1351.95,1211.87 1352.53,1211.87 1353.12,1211.87 1353.71,1211.87 1354.29,1211.87 1354.88,1211.87 1355.47,1211.87 1356.05,1211.87 1356.64,1211.87 1357.22,1211.87 1357.81,1211.87 1358.4,1211.87 1358.98,1211.87 1359.57,1211.87 1360.16,1211.87 1360.74,1211.87 1361.33,1211.87 1361.92,1211.87 1362.5,1211.87 1363.09,1211.87 1363.68,1211.87 1364.26,1211.87 1364.85,1211.87 1365.43,1211.87 1366.02,1211.87 1366.61,1211.87 1367.19,1211.87 1367.78,1211.87 1368.37,1211.87 1368.95,1211.87 1369.54,1211.87 1370.13,1211.87 1370.71,1211.87 1371.3,1211.87 1371.88,1211.87 1372.47,1211.87 1373.06,1211.87 1373.64,1211.87 1374.23,1211.87 1374.82,1211.87 1375.4,1211.87 1375.99,1211.87 1376.58,1211.87 1377.16,1211.87 1377.75,1211.87 1378.34,1211.87 1378.92,1211.87 1379.51,1211.87 1380.09,1211.87 1380.68,1211.87 1381.27,1211.87 1381.85,1211.87 1382.44,1211.87 1383.03,1211.87 1383.61,1211.87 1384.2,1211.87 1384.79,1211.87 1385.37,1211.87 1385.96,1211.87 1386.55,1211.87 1387.13,1211.87 1387.72,1211.87 1388.3,1211.87 1388.89,1211.87 1389.48,1211.87 1390.06,1211.87 1390.65,1211.87 1391.24,1211.87 1391.82,1211.87 1392.41,1211.87 1393,1211.87 1393.58,1211.87 1394.17,1211.87 1394.75,1211.87 1395.34,1211.87 1395.93,1211.87 1396.51,1211.87 1397.1,1211.87 1397.69,1211.87 1398.27,1211.87 1398.86,1211.87 1399.45,1211.87 1400.03,1211.87 1400.62,1211.87 1401.21,1211.87 1401.79,1211.87 1402.38,1211.87 1402.96,1211.87 1403.55,1211.87 1404.14,1211.87 1404.72,1211.87 1405.31,1211.87 1405.9,1211.87 1406.48,1211.87 1407.07,1211.87 1407.66,1211.87 1408.24,1211.87 1408.83,1211.87 1409.42,1211.87 1410,1211.87 1410.59,1211.87 1411.17,1211.87 1411.76,1211.87 1412.35,1211.87 1412.93,1211.87 1413.52,1211.87 1414.11,1211.87 1414.69,1211.87 1415.28,1211.87 1415.87,1211.87 1416.45,1211.87 1417.04,1211.87 1417.63,1211.87 1418.21,1211.87 1418.8,1211.87 1419.38,1211.87 1419.97,1211.87 1420.56,1211.87 1421.14,1211.87 1421.73,1211.87 1422.32,1211.87 1422.9,1211.87 1423.49,1211.87 1424.08,1211.87 1424.66,1211.87 1425.25,1211.87 1425.83,1211.87 1426.42,1211.87 1427.01,1211.87 1427.59,1211.87 1428.18,1211.87 1428.77,1211.87 1429.35,1211.87 1429.94,1211.87 1430.53,1211.87 1431.11,1211.87 1431.7,1211.87 1432.29,1211.87 1432.87,1211.87 1433.46,1211.87 1434.04,1211.87 1434.63,1211.87 1435.22,1211.87 1435.8,1211.87 1436.39,1211.87 1436.98,1211.87 1437.56,1211.87 1438.15,1211.87 1438.74,1211.87 1439.32,1211.87 1439.91,1211.87 1440.5,1211.87 1441.08,1211.87 1441.67,1211.87 1442.25,1211.87 1442.84,1211.87 1443.43,1211.87 1444.01,1211.87 1444.6,1211.87 1445.19,1211.87 1445.77,1211.87 1446.36,1211.87 1446.95,1211.87 1447.53,1211.87 1448.12,1211.87 1448.7,1211.87 1449.29,1211.87 1449.88,1211.87 1450.46,1211.87 1451.05,1211.87 1451.64,1211.87 1452.22,1211.87 1452.81,1211.87 1453.4,1211.87 1453.98,1211.87 1454.57,1211.87 1455.16,1211.87 1455.74,1211.87 1456.33,1211.87 1456.91,1211.87 1457.5,1211.87 1458.09,1211.87 1458.67,1211.87 1459.26,1211.87 1459.85,1211.87 1460.43,1211.87 1461.02,1211.87 1461.61,1211.87 1462.19,1211.87 1462.78,1211.87 1463.37,1211.87 1463.95,1211.87 1464.54,1211.87 1465.12,1211.87 1465.71,1211.87 1466.3,1211.87 1466.88,1211.87 1467.47,1211.87 1468.06,1211.87 1468.64,1211.87 1469.23,1211.87 1469.82,1211.87 1470.4,1211.87 1470.99,1211.87 1471.57,1211.87 1472.16,1211.87 1472.75,1211.87 1473.33,1211.87 1473.92,1211.87 1474.51,1211.87 1475.09,1211.87 1475.68,1211.87 1476.27,1211.87 1476.85,1211.87 1477.44,1211.87 1478.03,1211.87 1478.61,1211.87 1479.2,1211.87 1479.78,1211.87 1480.37,1211.87 1480.96,1211.87 1481.54,1211.87 1482.13,1211.87 1482.72,1211.87 1483.3,1211.87 1483.89,1211.87 1484.48,1211.87 1485.06,1211.87 1485.65,1211.87 1486.24,1211.87 1486.82,1211.87 1487.41,1211.87 1487.99,1211.87 1488.58,1211.87 1489.17,1211.87 1489.75,1211.87 1490.34,1211.87 1490.93,1211.87 1491.51,1211.87 1492.1,1211.87 1492.69,1211.87 1493.27,1211.87 1493.86,1211.87 1494.45,1211.87 1495.03,1211.87 1495.62,1211.87 1496.2,1211.87 1496.79,1211.87 1497.38,1211.87 1497.96,1211.87 1498.55,1211.87 1499.14,1211.87 1499.72,1211.87 1500.31,1211.87 1500.9,1211.87 1501.48,1211.87 1502.07,1211.87 1502.65,1211.87 1503.24,1211.87 1503.83,1211.87 1504.41,1211.87 1505,1211.87 1505.59,1211.87 1506.17,1211.87 1506.76,1211.87 1507.35,1211.87 1507.93,1211.87 1508.52,1211.87 1509.11,1211.87 1509.69,1211.87 1510.28,1211.87 1510.86,1211.87 1511.45,1211.87 1512.04,1211.87 1512.62,1211.87 1513.21,1211.87 1513.8,1211.87 1514.38,1211.87 1514.97,1211.87 1515.56,1211.87 1516.14,1211.87 1516.73,1211.87 1517.32,1211.87 1517.9,1211.87 1518.49,1211.87 1519.07,1211.87 1519.66,1211.87 1520.25,1211.87 1520.83,1211.87 1521.42,1211.87 1522.01,1211.87 1522.59,1211.87 1523.18,1211.87 1523.77,1211.87 1524.35,1211.87 1524.94,1211.87 1525.52,1211.87 1526.11,1211.87 1526.7,1211.87 1527.28,1211.87 1527.87,1211.87 1528.46,1211.87 1529.04,1211.87 1529.63,1211.87 1530.22,1211.87 1530.8,1211.87 1531.39,1211.87 1531.98,1211.87 1532.56,1211.87 1533.15,1211.87 1533.73,1211.87 1534.32,1211.87 1534.91,1211.87 1535.49,1211.87 1536.08,1211.87 1536.67,1211.87 1537.25,1211.87 1537.84,1211.87 1538.43,1211.87 1539.01,1211.87 1539.6,1211.87 1540.19,1211.87 1540.77,1211.87 1541.36,1211.87 1541.94,1211.87 1542.53,1211.87 1543.12,1211.87 1543.7,1211.87 1544.29,1211.87 1544.88,1211.87 1545.46,1211.87 1546.05,1211.87 1546.64,1211.87 1547.22,1211.87 1547.81,1211.87 1548.4,1211.87 1548.98,1211.87 1549.57,1211.87 1550.15,1211.87 1550.74,1211.87 1551.33,1211.87 1551.91,1211.87 1552.5,1211.87 1553.09,1211.87 1553.67,1211.87 1554.26,1211.87 1554.85,1211.87 1555.43,1211.87 1556.02,1211.87 1556.6,1211.87 1557.19,1211.87 1557.78,1211.87 1558.36,1211.87 1558.95,1211.87 1559.54,1211.87 1560.12,1211.87 1560.71,1211.87 1561.3,1211.87 1561.88,1211.87 1562.47,1211.87 1563.06,1211.87 1563.64,1211.87 1564.23,1211.87 1564.81,1211.87 1565.4,1211.87 1565.99,1211.87 1566.57,1211.87 1567.16,1211.87 1567.75,1211.87 1568.33,1211.87 1568.92,1211.87 1569.51,1211.87 1570.09,1211.87 1570.68,1211.87 1571.27,1211.87 1571.85,1211.87 1572.44,1211.87 1573.02,1211.87 1573.61,1211.87 1574.2,1211.87 1574.78,1211.87 1575.37,1211.87 1575.96,1211.87 1576.54,1211.87 1577.13,1211.87 1577.72,1211.87 1578.3,1211.87 1578.89,1211.87 1579.47,1211.87 1580.06,1211.87 1580.65,1211.87 1581.23,1211.87 1581.82,1211.87 1582.41,1211.87 1582.99,1211.87 1583.58,1211.87 1584.17,1211.87 1584.75,1211.87 1585.34,1211.87 1585.93,1211.87 1586.51,1211.87 1587.1,1211.87 1587.68,1211.87 1588.27,1211.87 1588.86,1211.87 1589.44,1211.87 1590.03,1211.87 1590.62,1211.87 1591.2,1211.87 1591.79,1211.87 1592.38,1211.87 1592.96,1211.87 1593.55,1211.87 1594.14,1211.87 1594.72,1211.87 1595.31,1211.87 1595.89,1211.87 1596.48,1211.87 1597.07,1211.87 1597.65,1211.87 1598.24,1211.87 1598.83,1211.87 1599.41,1211.87 1600,1211.87 1600.59,1211.87 1601.17,1211.87 1601.76,1211.87 1602.34,1211.87 1602.93,1211.87 1603.52,1211.87 1604.1,1211.87 1604.69,1211.87 1605.28,1211.87 1605.86,1211.87 1606.45,1211.87 1607.04,1211.87 1607.62,1211.87 1608.21,1211.87 1608.8,1211.87 1609.38,1211.87 1609.97,1211.87 1610.55,1211.87 1611.14,1211.87 1611.73,1211.87 1612.31,1211.87 1612.9,1211.87 1613.49,1211.87 1614.07,1211.87 1614.66,1211.87 1615.25,1211.87 1615.83,1211.87 1616.42,1211.87 1617.01,1211.87 1617.59,1211.87 1618.18,1211.87 1618.76,1211.87 1619.35,1211.87 1619.94,1211.87 1620.52,1211.87 1621.11,1211.87 1621.7,1211.87 1622.28,1211.87 1622.87,1211.87 1623.46,1211.87 1624.04,1211.87 1624.63,1211.87 1625.22,1211.87 1625.8,1211.87 1626.39,1211.87 1626.97,1211.87 1627.56,1211.87 1628.15,1211.87 1628.73,1211.87 1629.32,1211.87 1629.91,1211.87 1630.49,1211.87 1631.08,1211.87 1631.67,1211.87 1632.25,1211.87 1632.84,1211.87 1633.42,1211.87 1634.01,1211.87 1634.6,1211.87 1635.18,1211.87 1635.77,1211.87 1636.36,1211.87 1636.94,1211.87 1637.53,1211.87 1638.12,1211.87 1638.7,1211.87 1639.29,1211.87 1639.88,1211.87 1640.46,1211.87 1641.05,1211.87 1641.63,1211.87 1642.22,1211.87 1642.81,1211.87 1643.39,1211.87 1643.98,1211.87 1644.57,1211.87 1645.15,1211.87 1645.74,1211.87 1646.33,1211.87 1646.91,1211.87 1647.5,1211.87 1648.09,1211.87 1648.67,1211.87 1649.26,1211.87 1649.84,1211.87 1650.43,1211.87 1651.02,1211.87 1651.6,1211.87 1652.19,1211.87 1652.78,1211.87 1653.36,1211.87 1653.95,1211.87 1654.54,1211.87 1655.12,1211.87 1655.71,1211.87 1656.29,1211.87 1656.88,1211.87 1657.47,1211.87 1658.05,1211.87 1658.64,1211.87 1659.23,1211.87 1659.81,1211.87 1660.4,1211.87 1660.99,1211.87 1661.57,1211.87 1662.16,1211.87 1662.75,1211.87 1663.33,1211.87 1663.92,1211.87 1664.5,1211.87 1665.09,1211.87 1665.68,1211.87 1666.26,1211.87 1666.85,1211.87 1667.44,1211.87 1668.02,1211.87 1668.61,1211.87 1669.2,1211.87 1669.78,1211.87 1670.37,1211.87 1670.96,1211.87 1671.54,1211.87 1672.13,1211.87 1672.71,1211.87 1673.3,1211.87 1673.89,1211.87 1674.47,1211.87 1675.06,1211.87 1675.65,1211.87 1676.23,1211.87 1676.82,1211.87 1677.41,1211.87 1677.99,1211.87 1678.58,1211.87 1679.17,1211.87 1679.75,1211.87 1680.34,1211.87 1680.92,1211.87 1681.51,1211.87 1682.1,1211.87 1682.68,1211.87 1683.27,1211.87 1683.86,1211.87 1684.44,1211.87 1685.03,1211.87 1685.62,1211.87 1686.2,1211.87 1686.79,1211.87 1687.37,1211.87 1687.96,1211.87 1688.55,1211.87 1689.13,1211.87 1689.72,1211.87 1690.31,1211.87 1690.89,1211.87 1691.48,1211.87 1692.07,1211.87 1692.65,1211.87 1693.24,1211.87 1693.83,1211.87 1694.41,1211.87 1695,1211.87 1695.58,1211.87 1696.17,1211.87 1696.76,1211.87 1697.34,1211.87 1697.93,1211.87 1698.52,1211.87 1699.1,1211.87 1699.69,1211.87 1700.28,1211.87 1700.86,1211.87 1701.45,1211.87 1702.04,1211.87 1702.62,1211.87 1703.21,1211.87 1703.79,1211.87 1704.38,1211.87 1704.97,1211.87 1705.55,1211.87 1706.14,1211.87 1706.73,1211.87 1707.31,1211.87 1707.9,1211.87 1708.49,1211.87 1709.07,1211.87 1709.66,1211.87 1710.24,1211.87 1710.83,1211.87 1711.42,1211.87 1712,1211.87 1712.59,1211.87 1713.18,1211.87 1713.76,1211.87 1714.35,1211.87 1714.94,1211.87 1715.52,1211.87 1716.11,1211.87 1716.7,1211.87 1717.28,1211.87 1717.87,1211.87 1718.45,1211.87 1719.04,1211.87 1719.63,1211.87 1720.21,1211.87 1720.8,1211.87 1721.39,1211.87 1721.97,1211.87 1722.56,1211.87 1723.15,1211.87 1723.73,1211.87 1724.32,1211.87 1724.91,1211.87 1725.49,1211.87 1726.08,1211.87 1726.66,1211.87 1727.25,1211.87 1727.84,1211.87 1728.42,1211.87 1729.01,1211.87 1729.6,1211.87 1730.18,1211.87 1730.77,1211.87 1731.36,1211.87 1731.94,1211.87 1732.53,1211.87 1733.11,1211.87 1733.7,1211.87 1734.29,1211.87 1734.87,1211.87 1735.46,1211.87 1736.05,1211.87 1736.63,1211.87 1737.22,1211.87 1737.81,1211.87 1738.39,1211.87 1738.98,1211.87 1739.57,1211.87 1740.15,1211.87 1740.74,1211.87 1741.32,1211.87 1741.91,1211.87 1742.5,1211.87 1743.08,1211.87 1743.67,1211.87 1744.26,1211.87 1744.84,1211.87 1745.43,1211.87 1746.02,1211.87 1746.6,1211.87 1747.19,1211.87 1747.78,1211.87 1748.36,1211.87 1748.95,1211.87 1749.53,1211.87 1750.12,1211.87 1750.71,1211.87 1751.29,1211.87 1751.88,1211.87 1752.47,1211.87 1753.05,1211.87 1753.64,1211.87 1754.23,1211.87 1754.81,1211.87 1755.4,1211.87 1755.99,1211.87 1756.57,1211.87 1757.16,1211.87 1757.74,1211.87 1758.33,1211.87 1758.92,1211.87 1759.5,1211.87 1760.09,1211.87 1760.68,1211.87 1761.26,1211.87 1761.85,1211.87 1762.44,1211.87 1763.02,1211.87 1763.61,1211.87 1764.19,1211.87 1764.78,1211.87 1765.37,1211.87 1765.95,1211.87 1766.54,1211.87 1767.13,1211.87 1767.71,1211.87 1768.3,1211.87 1768.89,1211.87 1769.47,1211.87 1770.06,1211.87 1770.65,1211.87 1771.23,1211.87 1771.82,1211.87 1772.4,1211.87 1772.99,1211.87 1773.58,1211.87 1774.16,1211.87 1774.75,1211.87 1775.34,1211.87 1775.92,1211.87 1776.51,1211.87 1777.1,1211.87 1777.68,1211.87 1778.27,1211.87 1778.86,1211.87 1779.44,1211.87 1780.03,1211.87 1780.61,1211.87 1781.2,1211.87 1781.79,1211.87 1782.37,1211.87 1782.96,1211.87 1783.55,1211.87 1784.13,1211.87 1784.72,1211.87 1785.31,1211.87 1785.89,1211.87 1786.48,1211.87 1787.06,1211.87 1787.65,1211.87 1788.24,1211.87 1788.82,1211.87 1789.41,1211.87 1790,1211.87 1790.58,1211.87 1791.17,1211.87 1791.76,1211.87 1792.34,1211.87 1792.93,1211.87 1793.52,1211.87 1794.1,1211.87 1794.69,1211.87 1795.27,1211.87 1795.86,1211.87 1796.45,1211.87 1797.03,1211.87 1797.62,1211.87 1798.21,1211.87 1798.79,1211.87 1799.38,1211.87 1799.97,1211.87 1800.55,1211.87 1801.14,1211.87 1801.73,1211.87 1802.31,1211.87 1802.9,1211.87 1803.48,1211.87 1804.07,1211.87 1804.66,1211.87 1805.24,1211.87 1805.83,1211.87 1806.42,1211.87 1807,1211.87 1807.59,1211.87 1808.18,1211.87 1808.76,1211.87 1809.35,1211.87 1809.94,1211.87 1810.52,1211.87 1811.11,1211.87 1811.69,1211.87 1812.28,1211.87 1812.87,1211.87 1813.45,1211.87 1814.04,1211.87 1814.63,1211.87 1815.21,1211.87 1815.8,1211.87 1816.39,1211.87 1816.97,1211.87 1817.56,1211.87 1818.14,1211.87 1818.73,1211.87 1819.32,1211.87 1819.9,1211.87 1820.49,1211.87 1821.08,1211.87 1821.66,1211.87 1822.25,1211.87 1822.84,1211.87 1823.42,1211.87 1824.01,1211.87 1824.6,1211.87 1825.18,1211.87 1825.77,1211.87 1826.35,1211.87 1826.94,1211.87 1827.53,1211.87 1828.11,1211.87 1828.7,1211.87 1829.29,1211.87 1829.87,1211.87 1830.46,1211.87 1831.05,1211.87 1831.63,1211.87 1832.22,1211.87 1832.81,1211.87 1833.39,1211.87 1833.98,1211.87 1834.56,1211.87 1835.15,1211.87 1835.74,1211.87 1836.32,1211.87 1836.91,1211.87 1837.5,1211.87 1838.08,1211.87 1838.67,1211.87 1839.26,1211.87 1839.84,1211.87 1840.43,1211.87 1841.01,1211.87 1841.6,1211.87 1842.19,1211.87 1842.77,1211.87 1843.36,1211.87 1843.95,1211.87 1844.53,1211.87 1845.12,1211.87 1845.71,1211.87 1846.29,1211.87 1846.88,1211.87 1847.47,1211.87 1848.05,1211.87 1848.64,1211.87 1849.22,1211.87 1849.81,1211.87 1850.4,1211.87 1850.98,1211.87 1851.57,1211.87 1852.16,1211.87 1852.74,1211.87 1853.33,1211.87 1853.92,1211.87 1854.5,1211.87 1855.09,1211.87 1855.68,1211.87 1856.26,1211.87 1856.85,1211.87 1857.43,1211.87 1858.02,1211.87 1858.61,1211.87 1859.19,1211.87 1859.78,1211.87 1860.37,1211.87 1860.95,1211.87 1861.54,1211.87 1862.13,1211.87 1862.71,1211.87 1863.3,1211.87 1863.88,1211.87 1864.47,1211.87 1865.06,1211.87 1865.64,1211.87 1866.23,1211.87 1866.82,1211.87 1867.4,1211.87 1867.99,1211.87 1868.58,1211.87 1869.16,1211.87 1869.75,1211.87 1870.34,1211.87 1870.92,1211.87 1871.51,1211.87 1872.09,1211.87 1872.68,1211.87 1873.27,1211.87 1873.85,1211.87 1874.44,1211.87 1875.03,1211.87 1875.61,1211.87 1876.2,1211.87 1876.79,1211.87 1877.37,1211.87 1877.96,1211.87 1878.55,1211.87 1879.13,1211.87 1879.72,1211.87 1880.3,1211.87 1880.89,1211.87 1881.48,1211.87 1882.06,1211.87 1882.65,1211.87 1883.24,1211.87 1883.82,1211.87 1884.41,1211.87 1885,1211.87 1885.58,1211.87 1886.17,1211.87 1886.76,1211.87 1887.34,1211.87 1887.93,1211.87 1888.51,1211.87 1889.1,1211.87 1889.69,1211.87 1890.27,1211.87 1890.86,1211.87 1891.45,1211.87 1892.03,1211.87 1892.62,1211.87 1893.21,1211.87 1893.79,1211.87 1894.38,1211.87 1894.96,1211.87 1895.55,1211.87 1896.14,1211.87 1896.72,1211.87 1897.31,1211.87 1897.9,1211.87 1898.48,1211.87 1899.07,1211.87 1899.66,1211.87 1900.24,1211.87 1900.83,1211.87 1901.42,1211.87 1902,1211.87 1902.59,1211.87 1903.17,1211.87 1903.76,1211.87 1904.35,1211.87 1904.93,1211.87 1905.52,1211.87 1906.11,1211.87 1906.69,1211.87 1907.28,1211.87 1907.87,1211.87 1908.45,1211.87 1909.04,1211.87 1909.63,1211.87 1910.21,1211.87 1910.8,1211.87 1911.38,1211.87 1911.97,1211.87 1912.56,1211.87 1913.14,1211.87 1913.73,1211.87 1914.32,1211.87 1914.9,1211.87 1915.49,1211.87 1916.08,1211.87 1916.66,1211.87 1917.25,1211.87 1917.83,1211.87 1918.42,1211.87 1919.01,1211.87 1919.59,1211.87 1920.18,1211.87 1920.77,1211.87 1921.35,1211.87 1921.94,1211.87 1922.53,1211.87 1923.11,1211.87 1923.7,1211.87 1924.29,1211.87 1924.87,1211.87 1925.46,1211.87 1926.04,1211.87 1926.63,1211.87 1927.22,1211.87 1927.8,1211.87 1928.39,1211.87 1928.98,1211.87 1929.56,1211.87 1930.15,1211.87 1930.74,1211.87 1931.32,1211.87 1931.91,1211.87 1932.5,1211.87 1933.08,1211.87 1933.67,1211.87 1934.25,1211.87 1934.84,1211.87 1935.43,1211.87 1936.01,1211.87 1936.6,1211.87 1937.19,1211.87 1937.77,1211.87 1938.36,1211.87 1938.95,1211.87 1939.53,1211.87 1940.12,1211.87 1940.71,1211.87 1941.29,1211.87 1941.88,1211.87 1942.46,1211.87 1943.05,1211.87 1943.64,1211.87 1944.22,1211.87 1944.81,1211.87 1945.4,1211.87 1945.98,1211.87 1946.57,1211.87 1947.16,1211.87 1947.74,1211.87 1948.33,1211.87 1948.91,1211.87 1949.5,1211.87 1950.09,1211.87 1950.67,1211.87 1951.26,1211.87 1951.85,1211.87 1952.43,1211.87 1953.02,1211.87 1953.61,1211.87 1954.19,1211.87 1954.78,1211.87 1955.37,1211.87 1955.95,1211.87 1956.54,1211.87 1957.12,1211.87 1957.71,1211.87 1958.3,1211.87 1958.88,1211.87 1959.47,1211.87 1960.06,1211.87 1960.64,1211.87 1961.23,1211.87 1961.82,1211.87 1962.4,1211.87 1962.99,1211.87 1963.58,1211.87 1964.16,1211.87 1964.75,1211.87 1965.33,1211.87 1965.92,1211.87 1966.51,1211.87 1967.09,1211.87 1967.68,1211.87 1968.27,1211.87 1968.85,1211.87 1969.44,1211.87 1970.03,1211.87 1970.61,1211.87 1971.2,1211.87 1971.78,1211.87 1972.37,1211.87 1972.96,1211.87 1973.54,1211.87 1974.13,1211.87 1974.72,1211.87 1975.3,1211.87 1975.89,1211.87 1976.48,1211.87 1977.06,1211.87 1977.65,1211.87 1978.24,1211.87 1978.82,1211.87 1979.41,1211.87 1979.99,1211.87 1980.58,1211.87 1981.17,1211.87 1981.75,1211.87 1982.34,1211.87 1982.93,1211.87 1983.51,1211.87 1984.1,1211.87 1984.69,1211.87 1985.27,1211.87 1985.86,1211.87 1986.45,1211.87 1987.03,1211.87 1987.62,1211.87 1988.2,1211.87 1988.79,1211.87 1989.38,1211.87 1989.96,1211.87 1990.55,1211.87 1991.14,1211.87 1991.72,1211.87 1992.31,1211.87 1992.9,1211.87 1993.48,1211.87 1994.07,1211.87 1994.65,1211.87 1995.24,1211.87 1995.83,1211.87 1996.41,1211.87 1997,1211.87 1997.59,1211.87 1998.17,1211.87 1998.76,1211.87 1999.35,1211.87 1999.93,1211.87 2000.52,1211.87 2001.11,1211.87 2001.69,1211.87 2002.28,1211.87 2002.86,1211.87 2003.45,1211.87 2004.04,1211.87 2004.62,1211.87 2005.21,1211.87 2005.8,1211.87 2006.38,1211.87 2006.97,1211.87 2007.56,1211.87 2008.14,1211.87 2008.73,1211.87 2009.32,1211.87 2009.9,1211.87 2010.49,1211.87 2011.07,1211.87 2011.66,1211.87 2012.25,1211.87 2012.83,1211.87 2013.42,1211.87 2014.01,1211.87 2014.59,1211.87 2015.18,1211.87 2015.77,1211.87 2016.35,1211.87 2016.94,1211.87 2017.53,1211.87 2018.11,1211.87 2018.7,1211.87 2019.28,1211.87 2019.87,1211.87 2020.46,1211.87 2021.04,1211.87 2021.63,1211.87 2022.22,1211.87 2022.8,1211.87 2023.39,1211.87 2023.98,1211.87 2024.56,1211.87 2025.15,1211.87 2025.73,1211.87 2026.32,1211.87 2026.91,1211.87 2027.49,1211.87 2028.08,1211.87 2028.67,1211.87 2029.25,1211.87 2029.84,1211.87 2030.43,1211.87 2031.01,1211.87 2031.6,1211.87 2032.19,1211.87 2032.77,1211.87 2033.36,1211.87 2033.94,1211.87 2034.53,1211.87 2035.12,1211.87 2035.7,1211.87 2036.29,1211.87 2036.88,1211.87 2037.46,1211.87 2038.05,1211.87 2038.64,1211.87 2039.22,1211.87 2039.81,1211.87 2040.4,1211.87 2040.98,1211.87 2041.57,1211.87 2042.15,1211.87 2042.74,1211.87 2043.33,1211.87 2043.91,1211.87 2044.5,1211.87 2045.09,1211.87 2045.67,1211.87 2046.26,1211.87 2046.85,1211.87 2047.43,1211.87 2048.02,1211.87 2048.6,1211.87 2049.19,1211.87 2049.78,1211.87 2050.36,1211.87 2050.95,1211.87 2051.54,1211.87 2052.12,1211.87 2052.71,1211.87 2053.3,1211.87 2053.88,1211.87 2054.47,1211.87 2055.06,1211.87 2055.64,1211.87 2056.23,1211.87 2056.81,1211.87 2057.4,1211.87 2057.99,1211.87 2058.57,1211.87 2059.16,1211.87 2059.75,1211.87 2060.33,1211.87 2060.92,1211.87 2061.51,1211.87 2062.09,1211.87 2062.68,1211.87 2063.27,1211.87 2063.85,1211.87 2064.44,1211.87 2065.02,1211.87 2065.61,1211.87 2066.2,1211.87 2066.78,1211.87 2067.37,1211.87 2067.96,1211.87 2068.54,1211.87 2069.13,1211.87 2069.72,1211.87 2070.3,1211.87 2070.89,1211.87 2071.48,1211.87 2072.06,1211.87 2072.65,1211.87 2073.23,1211.87 2073.82,1211.87 2074.41,1211.87 2074.99,1211.87 2075.58,1211.87 2076.17,1211.87 2076.75,1211.87 2077.34,1211.87 2077.93,1211.87 2078.51,1211.87 2079.1,1211.87 2079.68,1211.87 2080.27,1211.87 2080.86,1211.87 2081.44,1211.87 2082.03,1211.87 2082.62,1211.87 2083.2,1211.87 2083.79,1211.87 2084.38,1211.87 2084.96,1211.87 2085.55,1211.87 2086.14,1211.87 2086.72,1211.87 2087.31,1211.87 2087.89,1211.87 2088.48,1211.87 2089.07,1211.87 2089.65,1211.87 2090.24,1211.87 2090.83,1211.87 2091.41,1211.87 2092,1211.87 2092.59,1211.87 2093.17,1211.87 2093.76,1211.87 2094.35,1211.87 2094.93,1211.87 2095.52,1211.87 2096.1,1211.87 2096.69,1211.87 2097.28,1211.87 2097.86,1211.87 2098.45,1211.87 2099.04,1211.87 2099.62,1211.87 2100.21,1211.87 2100.8,1211.87 2101.38,1211.87 2101.97,1211.87 2102.55,1211.87 2103.14,1211.87 2103.73,1211.87 2104.31,1211.87 2104.9,1211.87 2105.49,1211.87 2106.07,1211.87 2106.66,1211.87 2107.25,1211.87 2107.83,1211.87 2108.42,1211.87 2109.01,1211.87 2109.59,1211.87 2110.18,1211.87 2110.76,1211.87 2111.35,1211.87 2111.94,1211.87 2112.52,1211.87 2113.11,1211.87 2113.7,1211.87 2114.28,1211.87 2114.87,1211.87 2115.46,1211.87 2116.04,1211.87 2116.63,1211.87 2117.22,1211.87 2117.8,1211.87 2118.39,1211.87 2118.97,1211.87 2119.56,1211.87 2120.15,1211.87 2120.73,1211.87 2121.32,1211.87 2121.91,1211.87 2122.49,1211.87 2123.08,1211.87 2123.67,1211.87 2124.25,1211.87 2124.84,1211.87 2125.42,1211.87 2126.01,1211.87 2126.6,1211.87 2127.18,1211.87 2127.77,1211.87 2128.36,1211.87 2128.94,1211.87 2129.53,1211.87 2130.12,1211.87 2130.7,1211.87 2131.29,1211.87 2131.88,1211.87 2132.46,1211.87 2133.05,1211.87 2133.63,1211.87 2134.22,1211.87 2134.81,1211.87 2135.39,1211.87 2135.98,1211.87 2136.57,1211.87 2137.15,1211.87 2137.74,1211.87 2138.33,1211.87 2138.91,1211.87 2139.5,1211.87 2140.09,1211.87 2140.67,1211.87 2141.26,1211.87 2141.84,1211.87 2142.43,1211.87 2143.02,1211.87 2143.6,1211.87 2144.19,1211.87 2144.78,1211.87 2145.36,1211.87 2145.95,1211.87 2146.54,1211.87 2147.12,1211.87 2147.71,1211.87 2148.3,1211.87 2148.88,1211.87 2149.47,1211.87 2150.05,1211.87 2150.64,1211.87 2151.23,1211.87 2151.81,1211.87 2152.4,1211.87 2152.99,1211.87 2153.57,1211.87 2154.16,1211.87 2154.75,1211.87 2155.33,1211.87 2155.92,1211.87 2156.5,1211.87 2157.09,1211.87 2157.68,1211.87 2158.26,1211.87 \"/>\n<path clip-path=\"url(#clip192)\" d=\"M986.025 1211.81 L986.612 1211.81 L987.198 1211.81 L987.785 1211.81 L988.371 1211.81 L988.957 1211.81 L989.544 1211.81 L990.13 1211.81 L990.717 1211.81 L991.303 1211.81 L991.889 1211.81 L992.476 1211.81 L993.062 1211.81 L993.649 1211.81 L994.235 1211.81 L994.822 1211.81 L995.408 1211.81 L995.994 1211.81 L996.581 1211.81 L997.167 1211.81 L997.754 1211.81 L998.34 1211.81 L998.926 1211.81 L999.513 1211.81 L1000.1 1211.81 L1000.69 1211.81 L1001.27 1211.81 L1001.86 1211.81 L1002.44 1211.81 L1003.03 1211.81 L1003.62 1211.81 L1004.2 1211.81 L1004.79 1211.81 L1005.38 1211.81 L1005.96 1211.81 L1006.55 1211.81 L1007.14 1211.81 L1007.72 1211.81 L1008.31 1211.81 L1008.9 1211.81 L1009.48 1211.81 L1010.07 1211.81 L1010.65 1211.81 L1011.24 1211.81 L1011.83 1211.81 L1012.41 1211.81 L1013 1211.81 L1013.59 1211.81 L1014.17 1211.81 L1014.76 1211.81 L1015.35 1211.81 L1015.93 1211.81 L1016.52 1211.81 L1017.11 1211.81 L1017.69 1211.81 L1018.28 1211.81 L1018.86 1211.81 L1019.45 1211.81 L1020.04 1211.81 L1020.62 1211.81 L1021.21 1211.81 L1021.8 1211.81 L1022.38 1211.81 L1022.97 1211.81 L1023.56 1211.81 L1024.14 1211.81 L1024.73 1211.81 L1025.32 1211.81 L1025.9 1211.81 L1026.49 1211.81 L1027.07 1211.81 L1027.66 1211.81 L1028.25 1211.81 L1028.83 1211.81 L1029.42 1211.81 L1030.01 1211.81 L1030.59 1211.81 L1031.18 1211.81 L1031.77 1211.81 L1032.35 1211.81 L1032.94 1211.81 L1033.52 1211.81 L1034.11 1211.81 L1034.7 1211.81 L1035.28 1211.81 L1035.87 1211.81 L1036.46 1211.81 L1037.04 1211.81 L1037.63 1211.81 L1038.22 1211.81 L1038.8 1211.81 L1039.39 1211.81 L1039.98 1211.81 L1040.56 1211.81 L1041.15 1211.81 L1041.73 1211.81 L1042.32 1211.81 L1042.91 1211.81 L1043.49 1211.81 L1044.08 1211.81 L1044.67 1211.81 L1045.25 1211.81 L1045.84 1211.81 L1046.43 1211.81 L1047.01 1211.81 L1047.6 1211.81 L1048.19 1211.81 L1048.77 1211.81 L1049.36 1211.81 L1049.94 1211.81 L1050.53 1211.81 L1051.12 1211.81 L1051.7 1211.81 L1052.29 1211.81 L1052.88 1211.81 L1053.46 1211.81 L1054.05 1211.81 L1054.64 1211.81 L1055.22 1211.81 L1055.81 1211.81 L1056.39 1211.81 L1056.98 1211.81 L1057.57 1211.81 L1058.15 1211.81 L1058.74 1211.81 L1059.33 1211.81 L1059.91 1211.81 L1060.5 1211.81 L1061.09 1211.81 L1061.67 1211.81 L1062.26 1211.81 L1062.85 1211.81 L1063.43 1211.81 L1064.02 1211.81 L1064.6 1211.81 L1065.19 1211.81 L1065.78 1211.81 L1066.36 1211.81 L1066.95 1211.81 L1067.54 1211.81 L1068.12 1211.81 L1068.71 1211.81 L1069.3 1211.81 L1069.88 1211.81 L1070.47 1211.81 L1071.06 1211.81 L1071.64 1211.81 L1072.23 1211.81 L1072.81 1211.81 L1073.4 1211.81 L1073.99 1211.81 L1074.57 1211.81 L1075.16 1211.81 L1075.75 1211.81 L1076.33 1211.81 L1076.92 1211.81 L1077.51 1211.81 L1078.09 1211.81 L1078.68 1211.81 L1079.26 1211.81 L1079.85 1211.81 L1080.44 1211.81 L1081.02 1211.81 L1081.61 1211.81 L1082.2 1211.81 L1082.78 1211.81 L1083.37 1211.81 L1083.96 1211.81 L1084.54 1211.81 L1085.13 1211.81 L1085.72 1211.81 L1086.3 1211.81 L1086.89 1211.81 L1087.47 1211.81 L1088.06 1211.81 L1088.65 1211.81 L1089.23 1211.81 L1089.82 1211.81 L1090.41 1211.81 L1090.99 1211.81 L1091.58 1211.81 L1092.17 1211.81 L1092.75 1211.81 L1093.34 1211.81 L1093.93 1211.81 L1094.51 1211.81 L1095.1 1211.81 L1095.68 1211.81 L1096.27 1211.81 L1096.86 1211.81 L1097.44 1211.81 L1098.03 1211.81 L1098.62 1211.81 L1099.2 1211.81 L1099.79 1211.81 L1100.38 1211.81 L1100.96 1211.81 L1101.55 1211.81 L1102.14 1211.81 L1102.72 1211.81 L1103.31 1211.81 L1103.89 1211.81 L1104.48 1211.81 L1105.07 1211.81 L1105.65 1211.81 L1106.24 1211.81 L1106.83 1211.81 L1107.41 1211.81 L1108 1211.81 L1108.59 1211.81 L1109.17 1211.81 L1109.76 1211.81 L1110.34 1211.81 L1110.93 1211.81 L1111.52 1211.81 L1112.1 1211.81 L1112.69 1211.81 L1113.28 1211.81 L1113.86 1211.81 L1114.45 1211.81 L1115.04 1211.81 L1115.62 1211.81 L1116.21 1211.81 L1116.8 1211.81 L1117.38 1211.81 L1117.97 1211.81 L1118.55 1211.81 L1119.14 1211.81 L1119.73 1211.81 L1120.31 1211.81 L1120.9 1211.81 L1121.49 1211.81 L1122.07 1211.81 L1122.66 1211.81 L1123.25 1211.81 L1123.83 1211.81 L1124.42 1211.81 L1125.01 1211.81 L1125.59 1211.81 L1126.18 1211.81 L1126.76 1211.81 L1127.35 1211.81 L1127.94 1211.81 L1128.52 1211.81 L1129.11 1211.81 L1129.7 1211.81 L1130.28 1211.81 L1130.87 1211.81 L1131.46 1211.81 L1132.04 1211.81 L1132.63 1211.81 L1133.21 1211.81 L1133.8 1211.81 L1134.39 1211.81 L1134.97 1211.81 L1135.56 1211.81 L1136.15 1211.81 L1136.73 1211.81 L1137.32 1211.81 L1137.91 1211.81 L1138.49 1211.81 L1139.08 1211.81 L1139.67 1211.81 L1140.25 1211.81 L1140.84 1211.81 L1141.42 1211.81 L1142.01 1211.81 L1142.6 1211.81 L1143.18 1211.81 L1143.77 1211.81 L1144.36 1211.81 L1144.94 1211.81 L1145.53 1211.81 L1146.12 1211.81 L1146.7 1211.81 L1147.29 1211.81 L1147.88 1211.81 L1148.46 1211.81 L1149.05 1211.81 L1149.63 1211.81 L1150.22 1211.81 L1150.81 1211.81 L1151.39 1211.81 L1151.98 1211.81 L1152.57 1211.81 L1153.15 1211.81 L1153.74 1211.81 L1154.33 1211.81 L1154.91 1211.81 L1155.5 1211.81 L1156.09 1211.81 L1156.67 1211.81 L1157.26 1211.81 L1157.84 1211.81 L1158.43 1211.81 L1159.02 1211.81 L1159.6 1211.81 L1160.19 1211.81 L1160.78 1211.81 L1161.36 1211.81 L1161.95 1211.81 L1162.54 1211.81 L1163.12 1211.81 L1163.71 1211.81 L1164.29 1211.81 L1164.88 1211.81 L1165.47 1211.81 L1166.05 1211.81 L1166.64 1211.81 L1167.23 1211.81 L1167.81 1211.81 L1168.4 1211.81 L1168.99 1211.81 L1169.57 1211.81 L1170.16 1211.81 L1170.75 1211.81 L1171.33 1211.81 L1171.92 1211.81 L1172.5 1211.81 L1173.09 1211.81 L1173.68 1211.81 L1174.26 1211.81 L1174.85 1211.81 L1175.44 1211.81 L1176.02 1211.81 L1176.61 1211.81 L1177.2 1211.81 L1177.78 1211.81 L1178.37 1211.81 L1178.96 1211.81 L1179.54 1211.81 L1180.13 1211.81 L1180.71 1211.81 L1181.3 1211.81 L1181.89 1211.81 L1182.47 1211.81 L1183.06 1211.81 L1183.65 1211.81 L1184.23 1211.81 L1184.82 1211.81 L1185.41 1211.81 L1185.99 1211.81 L1186.58 1211.81 L1187.16 1211.81 L1187.75 1211.81 L1188.34 1211.81 L1188.92 1211.81 L1189.51 1211.81 L1190.1 1211.81 L1190.68 1211.81 L1191.27 1211.81 L1191.86 1211.81 L1192.44 1211.81 L1193.03 1211.81 L1193.62 1211.81 L1194.2 1211.81 L1194.79 1211.81 L1195.37 1211.81 L1195.96 1211.81 L1196.55 1211.81 L1197.13 1211.81 L1197.72 1211.81 L1198.31 1211.81 L1198.89 1211.81 L1199.48 1211.81 L1200.07 1211.81 L1200.65 1211.81 L1201.24 1211.81 L1201.83 1211.81 L1202.41 1211.81 L1203 1211.81 L1203.58 1211.81 L1204.17 1211.81 L1204.76 1211.81 L1205.34 1211.81 L1205.93 1211.81 L1206.52 1211.81 L1207.1 1211.81 L1207.69 1211.81 L1208.28 1211.81 L1208.86 1211.81 L1209.45 1211.81 L1210.03 1211.81 L1210.62 1211.81 L1211.21 1211.81 L1211.79 1211.81 L1212.38 1211.81 L1212.97 1211.81 L1213.55 1211.81 L1214.14 1211.81 L1214.73 1211.81 L1215.31 1211.81 L1215.9 1211.81 L1216.49 1211.81 L1217.07 1211.81 L1217.66 1211.81 L1218.24 1211.81 L1218.83 1211.81 L1219.42 1211.81 L1220 1211.81 L1220.59 1211.81 L1221.18 1211.81 L1221.76 1211.81 L1222.35 1211.81 L1222.94 1211.81 L1223.52 1211.81 L1224.11 1211.81 L1224.7 1211.81 L1225.28 1211.81 L1225.87 1211.81 L1226.45 1211.81 L1227.04 1211.81 L1227.63 1211.81 L1228.21 1211.81 L1228.8 1211.81 L1229.39 1211.81 L1229.97 1211.81 L1230.56 1211.81 L1231.15 1211.81 L1231.73 1211.81 L1232.32 1211.81 L1232.91 1211.81 L1233.49 1211.81 L1234.08 1211.81 L1234.66 1211.81 L1235.25 1211.81 L1235.84 1211.81 L1236.42 1211.81 L1237.01 1211.81 L1237.6 1211.81 L1238.18 1211.81 L1238.77 1211.81 L1239.36 1211.81 L1239.94 1211.81 L1240.53 1211.81 L1241.11 1211.81 L1241.7 1211.81 L1242.29 1211.81 L1242.87 1211.81 L1243.46 1211.81 L1244.05 1211.81 L1244.63 1211.81 L1245.22 1211.81 L1245.81 1211.81 L1246.39 1211.81 L1246.98 1211.81 L1247.57 1211.81 L1248.15 1211.81 L1248.74 1211.81 L1249.32 1211.81 L1249.91 1211.81 L1250.5 1211.81 L1251.08 1211.81 L1251.67 1211.81 L1252.26 1211.81 L1252.84 1211.81 L1253.43 1211.81 L1254.02 1211.81 L1254.6 1211.81 L1255.19 1211.81 L1255.78 1211.81 L1256.36 1211.81 L1256.95 1211.81 L1257.53 1211.81 L1258.12 1211.81 L1258.71 1211.81 L1259.29 1211.81 L1259.88 1211.81 L1260.47 1211.81 L1261.05 1211.81 L1261.64 1211.81 L1262.23 1211.81 L1262.81 1211.81 L1263.4 1211.81 L1263.98 1211.81 L1264.57 1211.81 L1265.16 1211.81 L1265.74 1211.81 L1266.33 1211.81 L1266.92 1211.81 L1267.5 1211.81 L1268.09 1211.81 L1268.68 1211.81 L1269.26 1211.81 L1269.85 1211.81 L1270.44 1211.81 L1271.02 1211.81 L1271.61 1211.81 L1272.19 1211.81 L1272.78 1211.81 L1273.37 1211.81 L1273.95 1211.81 L1274.54 1211.81 L1275.13 1211.81 L1275.71 1211.81 L1276.3 1211.81 L1276.89 1211.81 L1277.47 1211.81 L1278.06 1211.81 L1278.65 1211.81 L1279.23 1211.81 L1279.82 1211.81 L1280.4 1211.81 L1280.99 1211.81 L1281.58 1211.81 L1282.16 1211.81 L1282.75 1211.81 L1283.34 1211.81 L1283.92 1211.81 L1284.51 1211.81 L1285.1 1211.81 L1285.68 1211.81 L1286.27 1211.81 L1286.86 1211.81 L1287.44 1211.81 L1288.03 1211.81 L1288.61 1211.81 L1289.2 1211.81 L1289.79 1211.81 L1290.37 1211.81 L1290.96 1211.81 L1291.55 1211.81 L1292.13 1211.81 L1292.72 1211.81 L1293.31 1211.81 L1293.89 1211.81 L1294.48 1211.81 L1295.06 1211.81 L1295.65 1211.81 L1296.24 1211.81 L1296.82 1211.81 L1297.41 1211.81 L1298 1211.81 L1298.58 1211.81 L1299.17 1211.81 L1299.76 1211.81 L1300.34 1211.81 L1300.93 1211.81 L1301.52 1211.81 L1302.1 1211.81 L1302.69 1211.81 L1303.27 1211.81 L1303.86 1211.81 L1304.45 1211.81 L1305.03 1211.81 L1305.62 1211.81 L1306.21 1211.81 L1306.79 1211.81 L1307.38 1211.81 L1307.97 1211.81 L1308.55 1211.81 L1309.14 1211.81 L1309.73 1211.81 L1310.31 1211.81 L1310.9 1211.81 L1311.48 1211.81 L1312.07 1211.81 L1312.66 1211.81 L1313.24 1211.81 L1313.83 1211.81 L1314.42 1211.81 L1315 1211.81 L1315.59 1211.81 L1316.18 1211.81 L1316.76 1211.81 L1317.35 1211.81 L1317.93 1211.81 L1318.52 1211.81 L1319.11 1211.81 L1319.69 1211.81 L1320.28 1211.81 L1320.87 1211.81 L1321.45 1211.81 L1322.04 1211.81 L1322.63 1211.81 L1323.21 1211.81 L1323.8 1211.81 L1324.39 1211.81 L1324.97 1211.81 L1325.56 1211.81 L1326.14 1211.81 L1326.73 1211.81 L1327.32 1211.81 L1327.9 1211.81 L1328.49 1211.81 L1329.08 1211.81 L1329.66 1211.81 L1330.25 1211.81 L1330.84 1211.81 L1331.42 1211.81 L1332.01 1211.81 L1332.6 1211.81 L1333.18 1211.81 L1333.77 1211.81 L1334.35 1211.81 L1334.94 1211.81 L1335.53 1211.81 L1336.11 1211.81 L1336.7 1211.81 L1337.29 1211.81 L1337.87 1211.81 L1338.46 1211.81 L1339.05 1211.81 L1339.63 1211.81 L1340.22 1211.81 L1340.8 1211.81 L1341.39 1211.81 L1341.98 1211.81 L1342.56 1211.81 L1343.15 1211.81 L1343.74 1211.81 L1344.32 1211.81 L1344.91 1211.81 L1345.5 1211.81 L1346.08 1211.81 L1346.67 1211.81 L1347.26 1211.81 L1347.84 1211.81 L1348.43 1211.81 L1349.01 1211.81 L1349.6 1211.81 L1350.19 1211.81 L1350.77 1211.81 L1351.36 1211.81 L1351.95 1211.81 L1352.53 1211.81 L1353.12 1211.81 L1353.71 1211.81 L1354.29 1211.81 L1354.88 1211.81 L1355.47 1211.81 L1356.05 1211.81 L1356.64 1211.81 L1357.22 1211.81 L1357.81 1211.81 L1358.4 1211.81 L1358.98 1211.81 L1359.57 1211.81 L1360.16 1211.81 L1360.74 1211.81 L1361.33 1211.81 L1361.92 1211.81 L1362.5 1211.81 L1363.09 1211.81 L1363.68 1211.81 L1364.26 1211.81 L1364.85 1211.81 L1365.43 1211.81 L1366.02 1211.81 L1366.61 1211.81 L1367.19 1211.81 L1367.78 1211.81 L1368.37 1211.81 L1368.95 1211.81 L1369.54 1211.81 L1370.13 1211.81 L1370.71 1211.81 L1371.3 1211.81 L1371.88 1211.81 L1372.47 1211.81 L1373.06 1211.81 L1373.64 1211.81 L1374.23 1211.81 L1374.82 1211.81 L1375.4 1211.81 L1375.99 1211.81 L1376.58 1211.81 L1377.16 1211.81 L1377.75 1211.81 L1378.34 1211.81 L1378.92 1211.81 L1379.51 1211.81 L1380.09 1211.81 L1380.68 1211.81 L1381.27 1211.81 L1381.85 1211.81 L1382.44 1211.81 L1383.03 1211.81 L1383.61 1211.81 L1384.2 1211.81 L1384.79 1211.81 L1385.37 1211.81 L1385.96 1211.81 L1386.55 1211.81 L1387.13 1211.81 L1387.72 1211.81 L1388.3 1211.81 L1388.89 1211.81 L1389.48 1211.81 L1390.06 1211.81 L1390.65 1211.81 L1391.24 1211.81 L1391.82 1211.81 L1392.41 1211.81 L1393 1211.81 L1393.58 1211.81 L1394.17 1211.81 L1394.75 1211.81 L1395.34 1211.81 L1395.93 1211.81 L1396.51 1211.81 L1397.1 1211.81 L1397.69 1211.81 L1398.27 1211.81 L1398.86 1211.81 L1399.45 1211.81 L1400.03 1211.81 L1400.62 1211.81 L1401.21 1211.81 L1401.79 1211.81 L1402.38 1211.81 L1402.96 1211.81 L1403.55 1211.81 L1404.14 1211.81 L1404.72 1211.81 L1405.31 1211.81 L1405.9 1211.81 L1406.48 1211.81 L1407.07 1211.81 L1407.66 1211.81 L1408.24 1211.81 L1408.83 1211.81 L1409.42 1211.81 L1410 1211.81 L1410.59 1211.81 L1411.17 1211.81 L1411.76 1211.81 L1412.35 1211.81 L1412.93 1211.81 L1413.52 1211.81 L1414.11 1211.81 L1414.69 1211.81 L1415.28 1211.81 L1415.87 1211.81 L1416.45 1211.81 L1417.04 1211.81 L1417.63 1211.81 L1418.21 1211.81 L1418.8 1211.81 L1419.38 1211.81 L1419.97 1211.81 L1420.56 1211.81 L1421.14 1211.81 L1421.73 1211.81 L1422.32 1211.81 L1422.9 1211.81 L1423.49 1211.81 L1424.08 1211.81 L1424.66 1211.81 L1425.25 1211.81 L1425.83 1211.81 L1426.42 1211.81 L1427.01 1211.81 L1427.59 1211.81 L1428.18 1211.81 L1428.77 1211.81 L1429.35 1211.81 L1429.94 1211.81 L1430.53 1211.81 L1431.11 1211.81 L1431.7 1211.81 L1432.29 1211.81 L1432.87 1211.81 L1433.46 1211.81 L1434.04 1211.81 L1434.63 1211.81 L1435.22 1211.81 L1435.8 1211.81 L1436.39 1211.81 L1436.98 1211.81 L1437.56 1211.81 L1438.15 1211.81 L1438.74 1211.81 L1439.32 1211.81 L1439.91 1211.81 L1440.5 1211.81 L1441.08 1211.81 L1441.67 1211.81 L1442.25 1211.81 L1442.84 1211.81 L1443.43 1211.81 L1444.01 1211.81 L1444.6 1211.81 L1445.19 1211.81 L1445.77 1211.81 L1446.36 1211.81 L1446.95 1211.81 L1447.53 1211.81 L1448.12 1211.81 L1448.7 1211.81 L1449.29 1211.81 L1449.88 1211.81 L1450.46 1211.81 L1451.05 1211.81 L1451.64 1211.81 L1452.22 1211.81 L1452.81 1211.81 L1453.4 1211.81 L1453.98 1211.81 L1454.57 1211.81 L1455.16 1211.81 L1455.74 1211.81 L1456.33 1211.81 L1456.91 1211.81 L1457.5 1211.81 L1458.09 1211.81 L1458.67 1211.81 L1459.26 1211.81 L1459.85 1211.81 L1460.43 1211.81 L1461.02 1211.81 L1461.61 1211.81 L1462.19 1211.81 L1462.78 1211.81 L1463.37 1211.81 L1463.95 1211.81 L1464.54 1211.81 L1465.12 1211.81 L1465.71 1211.81 L1466.3 1211.81 L1466.88 1211.81 L1467.47 1211.81 L1468.06 1211.81 L1468.64 1211.81 L1469.23 1211.81 L1469.82 1211.81 L1470.4 1211.81 L1470.99 1211.81 L1471.57 1211.81 L1472.16 1211.81 L1472.75 1211.81 L1473.33 1211.81 L1473.92 1211.81 L1474.51 1211.81 L1475.09 1211.81 L1475.68 1211.81 L1476.27 1211.81 L1476.85 1211.81 L1477.44 1211.81 L1478.03 1211.81 L1478.61 1211.81 L1479.2 1211.81 L1479.78 1211.81 L1480.37 1211.81 L1480.96 1211.81 L1481.54 1211.81 L1482.13 1211.81 L1482.72 1211.81 L1483.3 1211.81 L1483.89 1211.81 L1484.48 1211.81 L1485.06 1211.81 L1485.65 1211.81 L1486.24 1211.81 L1486.82 1211.81 L1487.41 1211.81 L1487.99 1211.81 L1488.58 1211.81 L1489.17 1211.81 L1489.75 1211.81 L1490.34 1211.81 L1490.93 1211.81 L1491.51 1211.81 L1492.1 1211.81 L1492.69 1211.81 L1493.27 1211.81 L1493.86 1211.81 L1494.45 1211.81 L1495.03 1211.81 L1495.62 1211.81 L1496.2 1211.81 L1496.79 1211.81 L1497.38 1211.81 L1497.96 1211.81 L1498.55 1211.81 L1499.14 1211.81 L1499.72 1211.81 L1500.31 1211.81 L1500.9 1211.81 L1501.48 1211.81 L1502.07 1211.81 L1502.65 1211.81 L1503.24 1211.81 L1503.83 1211.81 L1504.41 1211.81 L1505 1211.81 L1505.59 1211.81 L1506.17 1211.81 L1506.76 1211.81 L1507.35 1211.81 L1507.93 1211.81 L1508.52 1211.81 L1509.11 1211.81 L1509.69 1211.81 L1510.28 1211.81 L1510.86 1211.81 L1511.45 1211.81 L1512.04 1211.81 L1512.62 1211.81 L1513.21 1211.81 L1513.8 1211.81 L1514.38 1211.81 L1514.97 1211.81 L1515.56 1211.81 L1516.14 1211.81 L1516.73 1211.81 L1517.32 1211.81 L1517.9 1211.81 L1518.49 1211.81 L1519.07 1211.81 L1519.66 1211.81 L1520.25 1211.81 L1520.83 1211.81 L1521.42 1211.81 L1522.01 1211.81 L1522.59 1211.81 L1523.18 1211.81 L1523.77 1211.81 L1524.35 1211.81 L1524.94 1211.81 L1525.52 1211.81 L1526.11 1211.81 L1526.7 1211.81 L1527.28 1211.81 L1527.87 1211.81 L1528.46 1211.81 L1529.04 1211.81 L1529.63 1211.81 L1530.22 1211.81 L1530.8 1211.81 L1531.39 1211.81 L1531.98 1211.81 L1532.56 1211.81 L1533.15 1211.81 L1533.73 1211.81 L1534.32 1211.81 L1534.91 1211.81 L1535.49 1211.81 L1536.08 1211.81 L1536.67 1211.81 L1537.25 1211.81 L1537.84 1211.81 L1538.43 1211.81 L1539.01 1211.81 L1539.6 1211.81 L1540.19 1211.81 L1540.77 1211.81 L1541.36 1211.81 L1541.94 1211.81 L1542.53 1211.81 L1543.12 1211.81 L1543.7 1211.81 L1544.29 1211.81 L1544.88 1211.81 L1545.46 1211.81 L1546.05 1211.81 L1546.64 1211.81 L1547.22 1211.81 L1547.81 1211.81 L1548.4 1211.81 L1548.98 1211.81 L1549.57 1211.81 L1550.15 1211.81 L1550.74 1211.81 L1551.33 1211.81 L1551.91 1211.81 L1552.5 1211.81 L1553.09 1211.81 L1553.67 1211.81 L1554.26 1211.81 L1554.85 1211.81 L1555.43 1211.81 L1556.02 1211.81 L1556.6 1211.81 L1557.19 1211.81 L1557.78 1211.81 L1558.36 1211.81 L1558.95 1211.81 L1559.54 1211.81 L1560.12 1211.81 L1560.71 1211.81 L1561.3 1211.81 L1561.88 1211.81 L1562.47 1211.81 L1563.06 1211.81 L1563.64 1211.81 L1564.23 1211.81 L1564.81 1211.81 L1565.4 1211.81 L1565.99 1211.81 L1566.57 1211.81 L1567.16 1211.81 L1567.75 1211.81 L1568.33 1211.81 L1568.92 1211.81 L1569.51 1211.81 L1570.09 1211.81 L1570.68 1211.81 L1571.27 1211.81 L1571.85 1211.81 L1572.44 1211.81 L1573.02 1211.81 L1573.61 1211.81 L1574.2 1211.81 L1574.78 1211.81 L1575.37 1211.81 L1575.96 1211.81 L1576.54 1211.81 L1577.13 1211.81 L1577.72 1211.81 L1578.3 1211.81 L1578.89 1211.81 L1579.47 1211.81 L1580.06 1211.81 L1580.65 1211.81 L1581.23 1211.81 L1581.82 1211.81 L1582.41 1211.81 L1582.99 1211.81 L1583.58 1211.81 L1584.17 1211.81 L1584.75 1211.81 L1585.34 1211.81 L1585.93 1211.81 L1586.51 1211.81 L1587.1 1211.81 L1587.68 1211.81 L1588.27 1211.81 L1588.86 1211.81 L1589.44 1211.81 L1590.03 1211.81 L1590.62 1211.81 L1591.2 1211.81 L1591.79 1211.81 L1592.38 1211.81 L1592.96 1211.81 L1593.55 1211.81 L1594.14 1211.81 L1594.72 1211.81 L1595.31 1211.81 L1595.89 1211.81 L1596.48 1211.81 L1597.07 1211.81 L1597.65 1211.81 L1598.24 1211.81 L1598.83 1211.81 L1599.41 1211.81 L1600 1211.81 L1600.59 1211.81 L1601.17 1211.81 L1601.76 1211.81 L1602.34 1211.81 L1602.93 1211.81 L1603.52 1211.81 L1604.1 1211.81 L1604.69 1211.81 L1605.28 1211.81 L1605.86 1211.81 L1606.45 1211.81 L1607.04 1211.81 L1607.62 1211.81 L1608.21 1211.81 L1608.8 1211.81 L1609.38 1211.81 L1609.97 1211.81 L1610.55 1211.81 L1611.14 1211.81 L1611.73 1211.81 L1612.31 1211.81 L1612.9 1211.81 L1613.49 1211.81 L1614.07 1211.81 L1614.66 1211.81 L1615.25 1211.81 L1615.83 1211.81 L1616.42 1211.81 L1617.01 1211.81 L1617.59 1211.81 L1618.18 1211.81 L1618.76 1211.81 L1619.35 1211.81 L1619.94 1211.81 L1620.52 1211.81 L1621.11 1211.81 L1621.7 1211.81 L1622.28 1211.81 L1622.87 1211.81 L1623.46 1211.81 L1624.04 1211.81 L1624.63 1211.81 L1625.22 1211.81 L1625.8 1211.81 L1626.39 1211.81 L1626.97 1211.81 L1627.56 1211.81 L1628.15 1211.81 L1628.73 1211.81 L1629.32 1211.81 L1629.91 1211.81 L1630.49 1211.81 L1631.08 1211.81 L1631.67 1211.81 L1632.25 1211.81 L1632.84 1211.81 L1633.42 1211.81 L1634.01 1211.81 L1634.6 1211.81 L1635.18 1211.81 L1635.77 1211.81 L1636.36 1211.81 L1636.94 1211.81 L1637.53 1211.81 L1638.12 1211.81 L1638.7 1211.81 L1639.29 1211.81 L1639.88 1211.81 L1640.46 1211.81 L1641.05 1211.81 L1641.63 1211.81 L1642.22 1211.81 L1642.81 1211.81 L1643.39 1211.81 L1643.98 1211.81 L1644.57 1211.81 L1645.15 1211.81 L1645.74 1211.81 L1646.33 1211.81 L1646.91 1211.81 L1647.5 1211.81 L1648.09 1211.81 L1648.67 1211.81 L1649.26 1211.81 L1649.84 1211.81 L1650.43 1211.81 L1651.02 1211.81 L1651.6 1211.81 L1652.19 1211.81 L1652.78 1211.81 L1653.36 1211.81 L1653.95 1211.81 L1654.54 1211.81 L1655.12 1211.81 L1655.71 1211.81 L1656.29 1211.81 L1656.88 1211.81 L1657.47 1211.81 L1658.05 1211.81 L1658.64 1211.81 L1659.23 1211.81 L1659.81 1211.81 L1660.4 1211.81 L1660.99 1211.81 L1661.57 1211.81 L1662.16 1211.81 L1662.75 1211.81 L1663.33 1211.81 L1663.92 1211.81 L1664.5 1211.81 L1665.09 1211.81 L1665.68 1211.81 L1666.26 1211.81 L1666.85 1211.81 L1667.44 1211.81 L1668.02 1211.81 L1668.61 1211.81 L1669.2 1211.81 L1669.78 1211.81 L1670.37 1211.81 L1670.96 1211.81 L1671.54 1211.81 L1672.13 1211.81 L1672.71 1211.81 L1673.3 1211.81 L1673.89 1211.81 L1674.47 1211.81 L1675.06 1211.81 L1675.65 1211.81 L1676.23 1211.81 L1676.82 1211.81 L1677.41 1211.81 L1677.99 1211.81 L1678.58 1211.81 L1679.17 1211.81 L1679.75 1211.81 L1680.34 1211.81 L1680.92 1211.81 L1681.51 1211.81 L1682.1 1211.81 L1682.68 1211.81 L1683.27 1211.81 L1683.86 1211.81 L1684.44 1211.81 L1685.03 1211.81 L1685.62 1211.81 L1686.2 1211.81 L1686.79 1211.81 L1687.37 1211.81 L1687.96 1211.81 L1688.55 1211.81 L1689.13 1211.81 L1689.72 1211.81 L1690.31 1211.81 L1690.89 1211.81 L1691.48 1211.81 L1692.07 1211.81 L1692.65 1211.81 L1693.24 1211.81 L1693.83 1211.81 L1694.41 1211.81 L1695 1211.81 L1695.58 1211.81 L1696.17 1211.81 L1696.76 1211.81 L1697.34 1211.81 L1697.93 1211.81 L1698.52 1211.81 L1699.1 1211.81 L1699.69 1211.81 L1700.28 1211.81 L1700.86 1211.81 L1701.45 1211.81 L1702.04 1211.81 L1702.62 1211.81 L1703.21 1211.81 L1703.79 1211.81 L1704.38 1211.81 L1704.97 1211.81 L1705.55 1211.81 L1706.14 1211.81 L1706.73 1211.81 L1707.31 1211.81 L1707.9 1211.81 L1708.49 1211.81 L1709.07 1211.81 L1709.66 1211.81 L1710.24 1211.81 L1710.83 1211.81 L1711.42 1211.81 L1712 1211.81 L1712.59 1211.81 L1713.18 1211.81 L1713.76 1211.81 L1714.35 1211.81 L1714.94 1211.81 L1715.52 1211.81 L1716.11 1211.81 L1716.7 1211.81 L1717.28 1211.81 L1717.87 1211.81 L1718.45 1211.81 L1719.04 1211.81 L1719.63 1211.81 L1720.21 1211.81 L1720.8 1211.81 L1721.39 1211.81 L1721.97 1211.81 L1722.56 1211.81 L1723.15 1211.81 L1723.73 1211.81 L1724.32 1211.81 L1724.91 1211.81 L1725.49 1211.81 L1726.08 1211.81 L1726.66 1211.81 L1727.25 1211.81 L1727.84 1211.81 L1728.42 1211.81 L1729.01 1211.81 L1729.6 1211.81 L1730.18 1211.81 L1730.77 1211.81 L1731.36 1211.81 L1731.94 1211.81 L1732.53 1211.81 L1733.11 1211.81 L1733.7 1211.81 L1734.29 1211.81 L1734.87 1211.81 L1735.46 1211.81 L1736.05 1211.81 L1736.63 1211.81 L1737.22 1211.81 L1737.81 1211.81 L1738.39 1211.81 L1738.98 1211.81 L1739.57 1211.81 L1740.15 1211.81 L1740.74 1211.81 L1741.32 1211.81 L1741.91 1211.81 L1742.5 1211.81 L1743.08 1211.81 L1743.67 1211.81 L1744.26 1211.81 L1744.84 1211.81 L1745.43 1211.81 L1746.02 1211.81 L1746.6 1211.81 L1747.19 1211.81 L1747.78 1211.81 L1748.36 1211.81 L1748.95 1211.81 L1749.53 1211.81 L1750.12 1211.81 L1750.71 1211.81 L1751.29 1211.81 L1751.88 1211.81 L1752.47 1211.81 L1753.05 1211.81 L1753.64 1211.81 L1754.23 1211.81 L1754.81 1211.81 L1755.4 1211.81 L1755.99 1211.81 L1756.57 1211.81 L1757.16 1211.81 L1757.74 1211.81 L1758.33 1211.81 L1758.92 1211.81 L1759.5 1211.81 L1760.09 1211.81 L1760.68 1211.81 L1761.26 1211.81 L1761.85 1211.81 L1762.44 1211.81 L1763.02 1211.81 L1763.61 1211.81 L1764.19 1211.81 L1764.78 1211.81 L1765.37 1211.81 L1765.95 1211.81 L1766.54 1211.81 L1767.13 1211.81 L1767.71 1211.81 L1768.3 1211.81 L1768.89 1211.81 L1769.47 1211.81 L1770.06 1211.81 L1770.65 1211.81 L1771.23 1211.81 L1771.82 1211.81 L1772.4 1211.81 L1772.99 1211.81 L1773.58 1211.81 L1774.16 1211.81 L1774.75 1211.81 L1775.34 1211.81 L1775.92 1211.81 L1776.51 1211.81 L1777.1 1211.81 L1777.68 1211.81 L1778.27 1211.81 L1778.86 1211.81 L1779.44 1211.81 L1780.03 1211.81 L1780.61 1211.81 L1781.2 1211.81 L1781.79 1211.81 L1782.37 1211.81 L1782.96 1211.81 L1783.55 1211.81 L1784.13 1211.81 L1784.72 1211.81 L1785.31 1211.81 L1785.89 1211.81 L1786.48 1211.81 L1787.06 1211.81 L1787.65 1211.81 L1788.24 1211.81 L1788.82 1211.81 L1789.41 1211.81 L1790 1211.81 L1790.58 1211.81 L1791.17 1211.81 L1791.76 1211.81 L1792.34 1211.81 L1792.93 1211.81 L1793.52 1211.81 L1794.1 1211.81 L1794.69 1211.81 L1795.27 1211.81 L1795.86 1211.81 L1796.45 1211.81 L1797.03 1211.81 L1797.62 1211.81 L1798.21 1211.81 L1798.79 1211.81 L1799.38 1211.81 L1799.97 1211.81 L1800.55 1211.81 L1801.14 1211.81 L1801.73 1211.81 L1802.31 1211.81 L1802.9 1211.81 L1803.48 1211.81 L1804.07 1211.81 L1804.66 1211.81 L1805.24 1211.81 L1805.83 1211.81 L1806.42 1211.81 L1807 1211.81 L1807.59 1211.81 L1808.18 1211.81 L1808.76 1211.81 L1809.35 1211.81 L1809.94 1211.81 L1810.52 1211.81 L1811.11 1211.81 L1811.69 1211.81 L1812.28 1211.81 L1812.87 1211.81 L1813.45 1211.81 L1814.04 1211.81 L1814.63 1211.81 L1815.21 1211.81 L1815.8 1211.81 L1816.39 1211.81 L1816.97 1211.81 L1817.56 1211.81 L1818.14 1211.81 L1818.73 1211.81 L1819.32 1211.81 L1819.9 1211.81 L1820.49 1211.81 L1821.08 1211.81 L1821.66 1211.81 L1822.25 1211.81 L1822.84 1211.81 L1823.42 1211.81 L1824.01 1211.81 L1824.6 1211.81 L1825.18 1211.81 L1825.77 1211.81 L1826.35 1211.81 L1826.94 1211.81 L1827.53 1211.81 L1828.11 1211.81 L1828.7 1211.81 L1829.29 1211.81 L1829.87 1211.81 L1830.46 1211.81 L1831.05 1211.81 L1831.63 1211.81 L1832.22 1211.81 L1832.81 1211.81 L1833.39 1211.81 L1833.98 1211.81 L1834.56 1211.81 L1835.15 1211.81 L1835.74 1211.81 L1836.32 1211.81 L1836.91 1211.81 L1837.5 1211.81 L1838.08 1211.81 L1838.67 1211.81 L1839.26 1211.81 L1839.84 1211.81 L1840.43 1211.81 L1841.01 1211.81 L1841.6 1211.81 L1842.19 1211.81 L1842.77 1211.81 L1843.36 1211.81 L1843.95 1211.81 L1844.53 1211.81 L1845.12 1211.81 L1845.71 1211.81 L1846.29 1211.81 L1846.88 1211.81 L1847.47 1211.81 L1848.05 1211.81 L1848.64 1211.81 L1849.22 1211.81 L1849.81 1211.81 L1850.4 1211.81 L1850.98 1211.81 L1851.57 1211.81 L1852.16 1211.81 L1852.74 1211.81 L1853.33 1211.81 L1853.92 1211.81 L1854.5 1211.81 L1855.09 1211.81 L1855.68 1211.81 L1856.26 1211.81 L1856.85 1211.81 L1857.43 1211.81 L1858.02 1211.81 L1858.61 1211.81 L1859.19 1211.81 L1859.78 1211.81 L1860.37 1211.81 L1860.95 1211.81 L1861.54 1211.81 L1862.13 1211.81 L1862.71 1211.81 L1863.3 1211.81 L1863.88 1211.81 L1864.47 1211.81 L1865.06 1211.81 L1865.64 1211.81 L1866.23 1211.81 L1866.82 1211.81 L1867.4 1211.81 L1867.99 1211.81 L1868.58 1211.81 L1869.16 1211.81 L1869.75 1211.81 L1870.34 1211.81 L1870.92 1211.81 L1871.51 1211.81 L1872.09 1211.81 L1872.68 1211.81 L1873.27 1211.81 L1873.85 1211.81 L1874.44 1211.81 L1875.03 1211.81 L1875.61 1211.81 L1876.2 1211.81 L1876.79 1211.81 L1877.37 1211.81 L1877.96 1211.81 L1878.55 1211.81 L1879.13 1211.81 L1879.72 1211.81 L1880.3 1211.81 L1880.89 1211.81 L1881.48 1211.81 L1882.06 1211.81 L1882.65 1211.81 L1883.24 1211.81 L1883.82 1211.81 L1884.41 1211.81 L1885 1211.81 L1885.58 1211.81 L1886.17 1211.81 L1886.76 1211.81 L1887.34 1211.81 L1887.93 1211.81 L1888.51 1211.81 L1889.1 1211.81 L1889.69 1211.81 L1890.27 1211.81 L1890.86 1211.81 L1891.45 1211.81 L1892.03 1211.81 L1892.62 1211.81 L1893.21 1211.81 L1893.79 1211.81 L1894.38 1211.81 L1894.96 1211.81 L1895.55 1211.81 L1896.14 1211.81 L1896.72 1211.81 L1897.31 1211.81 L1897.9 1211.81 L1898.48 1211.81 L1899.07 1211.81 L1899.66 1211.81 L1900.24 1211.81 L1900.83 1211.81 L1901.42 1211.81 L1902 1211.81 L1902.59 1211.81 L1903.17 1211.81 L1903.76 1211.81 L1904.35 1211.81 L1904.93 1211.81 L1905.52 1211.81 L1906.11 1211.81 L1906.69 1211.81 L1907.28 1211.81 L1907.87 1211.81 L1908.45 1211.81 L1909.04 1211.81 L1909.63 1211.81 L1910.21 1211.81 L1910.8 1211.81 L1911.38 1211.81 L1911.97 1211.81 L1912.56 1211.81 L1913.14 1211.81 L1913.73 1211.81 L1914.32 1211.81 L1914.9 1211.81 L1915.49 1211.81 L1916.08 1211.81 L1916.66 1211.81 L1917.25 1211.81 L1917.83 1211.81 L1918.42 1211.81 L1919.01 1211.81 L1919.59 1211.81 L1920.18 1211.81 L1920.77 1211.81 L1921.35 1211.81 L1921.94 1211.81 L1922.53 1211.81 L1923.11 1211.81 L1923.7 1211.81 L1924.29 1211.81 L1924.87 1211.81 L1925.46 1211.81 L1926.04 1211.81 L1926.63 1211.81 L1927.22 1211.81 L1927.8 1211.81 L1928.39 1211.81 L1928.98 1211.81 L1929.56 1211.81 L1930.15 1211.81 L1930.74 1211.81 L1931.32 1211.81 L1931.91 1211.81 L1932.5 1211.81 L1933.08 1211.81 L1933.67 1211.81 L1934.25 1211.81 L1934.84 1211.81 L1935.43 1211.81 L1936.01 1211.81 L1936.6 1211.81 L1937.19 1211.81 L1937.77 1211.81 L1938.36 1211.81 L1938.95 1211.81 L1939.53 1211.81 L1940.12 1211.81 L1940.71 1211.81 L1941.29 1211.81 L1941.88 1211.81 L1942.46 1211.81 L1943.05 1211.81 L1943.64 1211.81 L1944.22 1211.81 L1944.81 1211.81 L1945.4 1211.81 L1945.98 1211.81 L1946.57 1211.81 L1947.16 1211.81 L1947.74 1211.81 L1948.33 1211.81 L1948.91 1211.81 L1949.5 1211.81 L1950.09 1211.81 L1950.67 1211.81 L1951.26 1211.81 L1951.85 1211.81 L1952.43 1211.81 L1953.02 1211.81 L1953.61 1211.81 L1954.19 1211.81 L1954.78 1211.81 L1955.37 1211.81 L1955.95 1211.81 L1956.54 1211.81 L1957.12 1211.81 L1957.71 1211.81 L1958.3 1211.81 L1958.88 1211.81 L1959.47 1211.81 L1960.06 1211.81 L1960.64 1211.81 L1961.23 1211.81 L1961.82 1211.81 L1962.4 1211.81 L1962.99 1211.81 L1963.58 1211.81 L1964.16 1211.81 L1964.75 1211.81 L1965.33 1211.81 L1965.92 1211.81 L1966.51 1211.81 L1967.09 1211.81 L1967.68 1211.81 L1968.27 1211.81 L1968.85 1211.81 L1969.44 1211.81 L1970.03 1211.81 L1970.61 1211.81 L1971.2 1211.81 L1971.78 1211.81 L1972.37 1211.81 L1972.96 1211.81 L1973.54 1211.81 L1974.13 1211.81 L1974.72 1211.81 L1975.3 1211.81 L1975.89 1211.81 L1976.48 1211.81 L1977.06 1211.81 L1977.65 1211.81 L1978.24 1211.81 L1978.82 1211.81 L1979.41 1211.81 L1979.99 1211.81 L1980.58 1211.81 L1981.17 1211.81 L1981.75 1211.81 L1982.34 1211.81 L1982.93 1211.81 L1983.51 1211.81 L1984.1 1211.81 L1984.69 1211.81 L1985.27 1211.81 L1985.86 1211.81 L1986.45 1211.81 L1987.03 1211.81 L1987.62 1211.81 L1988.2 1211.81 L1988.79 1211.81 L1989.38 1211.81 L1989.96 1211.81 L1990.55 1211.81 L1991.14 1211.81 L1991.72 1211.81 L1992.31 1211.81 L1992.9 1211.81 L1993.48 1211.81 L1994.07 1211.81 L1994.65 1211.81 L1995.24 1211.81 L1995.83 1211.81 L1996.41 1211.81 L1997 1211.81 L1997.59 1211.81 L1998.17 1211.81 L1998.76 1211.81 L1999.35 1211.81 L1999.93 1211.81 L2000.52 1211.81 L2001.11 1211.81 L2001.69 1211.81 L2002.28 1211.81 L2002.86 1211.81 L2003.45 1211.81 L2004.04 1211.81 L2004.62 1211.81 L2005.21 1211.81 L2005.8 1211.81 L2006.38 1211.81 L2006.97 1211.81 L2007.56 1211.81 L2008.14 1211.81 L2008.73 1211.81 L2009.32 1211.81 L2009.9 1211.81 L2010.49 1211.81 L2011.07 1211.81 L2011.66 1211.81 L2012.25 1211.81 L2012.83 1211.81 L2013.42 1211.81 L2014.01 1211.81 L2014.59 1211.81 L2015.18 1211.81 L2015.77 1211.81 L2016.35 1211.81 L2016.94 1211.81 L2017.53 1211.81 L2018.11 1211.81 L2018.7 1211.81 L2019.28 1211.81 L2019.87 1211.81 L2020.46 1211.81 L2021.04 1211.81 L2021.63 1211.81 L2022.22 1211.81 L2022.8 1211.81 L2023.39 1211.81 L2023.98 1211.81 L2024.56 1211.81 L2025.15 1211.81 L2025.73 1211.81 L2026.32 1211.81 L2026.91 1211.81 L2027.49 1211.81 L2028.08 1211.81 L2028.67 1211.81 L2029.25 1211.81 L2029.84 1211.81 L2030.43 1211.81 L2031.01 1211.81 L2031.6 1211.81 L2032.19 1211.81 L2032.77 1211.81 L2033.36 1211.81 L2033.94 1211.81 L2034.53 1211.81 L2035.12 1211.81 L2035.7 1211.81 L2036.29 1211.81 L2036.88 1211.81 L2037.46 1211.81 L2038.05 1211.81 L2038.64 1211.81 L2039.22 1211.81 L2039.81 1211.81 L2040.4 1211.81 L2040.98 1211.81 L2041.57 1211.81 L2042.15 1211.81 L2042.74 1211.81 L2043.33 1211.81 L2043.91 1211.81 L2044.5 1211.81 L2045.09 1211.81 L2045.67 1211.81 L2046.26 1211.81 L2046.85 1211.81 L2047.43 1211.81 L2048.02 1211.81 L2048.6 1211.81 L2049.19 1211.81 L2049.78 1211.81 L2050.36 1211.81 L2050.95 1211.81 L2051.54 1211.81 L2052.12 1211.81 L2052.71 1211.81 L2053.3 1211.81 L2053.88 1211.81 L2054.47 1211.81 L2055.06 1211.81 L2055.64 1211.81 L2056.23 1211.81 L2056.81 1211.81 L2057.4 1211.81 L2057.99 1211.81 L2058.57 1211.81 L2059.16 1211.81 L2059.75 1211.81 L2060.33 1211.81 L2060.92 1211.81 L2061.51 1211.81 L2062.09 1211.81 L2062.68 1211.81 L2063.27 1211.81 L2063.85 1211.81 L2064.44 1211.81 L2065.02 1211.81 L2065.61 1211.81 L2066.2 1211.81 L2066.78 1211.81 L2067.37 1211.81 L2067.96 1211.81 L2068.54 1211.81 L2069.13 1211.81 L2069.72 1211.81 L2070.3 1211.81 L2070.89 1211.81 L2071.48 1211.81 L2072.06 1211.81 L2072.65 1211.81 L2073.23 1211.81 L2073.82 1211.81 L2074.41 1211.81 L2074.99 1211.81 L2075.58 1211.81 L2076.17 1211.81 L2076.75 1211.81 L2077.34 1211.81 L2077.93 1211.81 L2078.51 1211.81 L2079.1 1211.81 L2079.68 1211.81 L2080.27 1211.81 L2080.86 1211.81 L2081.44 1211.81 L2082.03 1211.81 L2082.62 1211.81 L2083.2 1211.81 L2083.79 1211.81 L2084.38 1211.81 L2084.96 1211.81 L2085.55 1211.81 L2086.14 1211.81 L2086.72 1211.81 L2087.31 1211.81 L2087.89 1211.81 L2088.48 1211.81 L2089.07 1211.81 L2089.65 1211.81 L2090.24 1211.81 L2090.83 1211.81 L2091.41 1211.81 L2092 1211.81 L2092.59 1211.81 L2093.17 1211.81 L2093.76 1211.81 L2094.35 1211.81 L2094.93 1211.81 L2095.52 1211.81 L2096.1 1211.81 L2096.69 1211.81 L2097.28 1211.81 L2097.86 1211.81 L2098.45 1211.81 L2099.04 1211.81 L2099.62 1211.81 L2100.21 1211.81 L2100.8 1211.81 L2101.38 1211.81 L2101.97 1211.81 L2102.55 1211.81 L2103.14 1211.81 L2103.73 1211.81 L2104.31 1211.81 L2104.9 1211.81 L2105.49 1211.81 L2106.07 1211.81 L2106.66 1211.81 L2107.25 1211.81 L2107.83 1211.81 L2108.42 1211.81 L2109.01 1211.81 L2109.59 1211.81 L2110.18 1211.81 L2110.76 1211.81 L2111.35 1211.81 L2111.94 1211.81 L2112.52 1211.81 L2113.11 1211.81 L2113.7 1211.81 L2114.28 1211.81 L2114.87 1211.81 L2115.46 1211.81 L2116.04 1211.81 L2116.63 1211.81 L2117.22 1211.81 L2117.8 1211.81 L2118.39 1211.81 L2118.97 1211.81 L2119.56 1211.81 L2120.15 1211.81 L2120.73 1211.81 L2121.32 1211.81 L2121.91 1211.81 L2122.49 1211.81 L2123.08 1211.81 L2123.67 1211.81 L2124.25 1211.81 L2124.84 1211.81 L2125.42 1211.81 L2126.01 1211.81 L2126.6 1211.81 L2127.18 1211.81 L2127.77 1211.81 L2128.36 1211.81 L2128.94 1211.81 L2129.53 1211.81 L2130.12 1211.81 L2130.7 1211.81 L2131.29 1211.81 L2131.88 1211.81 L2132.46 1211.81 L2133.05 1211.81 L2133.63 1211.81 L2134.22 1211.81 L2134.81 1211.81 L2135.39 1211.81 L2135.98 1211.81 L2136.57 1211.81 L2137.15 1211.81 L2137.74 1211.81 L2138.33 1211.81 L2138.91 1211.81 L2139.5 1211.81 L2140.09 1211.81 L2140.67 1211.81 L2141.26 1211.81 L2141.84 1211.81 L2142.43 1211.81 L2143.02 1211.81 L2143.6 1211.81 L2144.19 1211.81 L2144.78 1211.81 L2145.36 1211.81 L2145.95 1211.81 L2146.54 1211.81 L2147.12 1211.81 L2147.71 1211.81 L2148.3 1211.81 L2148.88 1211.81 L2149.47 1211.81 L2150.05 1211.81 L2150.64 1211.81 L2151.23 1211.81 L2151.81 1211.81 L2152.4 1211.81 L2152.99 1211.81 L2153.57 1211.81 L2154.16 1211.81 L2154.75 1211.81 L2155.33 1211.81 L2155.92 1211.81 L2156.5 1211.81 L2157.09 1211.81 L2157.68 1211.81 L2158.26 1211.81 L2158.26 1211.65 L2157.68 1211.65 L2157.09 1211.65 L2156.5 1211.65 L2155.92 1211.65 L2155.33 1211.65 L2154.75 1211.65 L2154.16 1211.65 L2153.57 1211.65 L2152.99 1211.65 L2152.4 1211.65 L2151.81 1211.65 L2151.23 1211.65 L2150.64 1211.65 L2150.05 1211.65 L2149.47 1211.65 L2148.88 1211.65 L2148.3 1211.65 L2147.71 1211.65 L2147.12 1211.65 L2146.54 1211.65 L2145.95 1211.65 L2145.36 1211.65 L2144.78 1211.65 L2144.19 1211.65 L2143.6 1211.65 L2143.02 1211.65 L2142.43 1211.65 L2141.84 1211.65 L2141.26 1211.65 L2140.67 1211.65 L2140.09 1211.65 L2139.5 1211.65 L2138.91 1211.65 L2138.33 1211.65 L2137.74 1211.65 L2137.15 1211.65 L2136.57 1211.65 L2135.98 1211.65 L2135.39 1211.65 L2134.81 1211.65 L2134.22 1211.65 L2133.63 1211.65 L2133.05 1211.65 L2132.46 1211.65 L2131.88 1211.65 L2131.29 1211.65 L2130.7 1211.65 L2130.12 1211.65 L2129.53 1211.65 L2128.94 1211.65 L2128.36 1211.65 L2127.77 1211.65 L2127.18 1211.65 L2126.6 1211.65 L2126.01 1211.65 L2125.42 1211.65 L2124.84 1211.65 L2124.25 1211.65 L2123.67 1211.65 L2123.08 1211.65 L2122.49 1211.65 L2121.91 1211.65 L2121.32 1211.65 L2120.73 1211.65 L2120.15 1211.65 L2119.56 1211.65 L2118.97 1211.65 L2118.39 1211.65 L2117.8 1211.65 L2117.22 1211.65 L2116.63 1211.65 L2116.04 1211.65 L2115.46 1211.65 L2114.87 1211.65 L2114.28 1211.65 L2113.7 1211.65 L2113.11 1211.65 L2112.52 1211.65 L2111.94 1211.65 L2111.35 1211.65 L2110.76 1211.65 L2110.18 1211.65 L2109.59 1211.65 L2109.01 1211.65 L2108.42 1211.65 L2107.83 1211.65 L2107.25 1211.65 L2106.66 1211.65 L2106.07 1211.65 L2105.49 1211.65 L2104.9 1211.65 L2104.31 1211.65 L2103.73 1211.65 L2103.14 1211.65 L2102.55 1211.65 L2101.97 1211.65 L2101.38 1211.65 L2100.8 1211.65 L2100.21 1211.65 L2099.62 1211.65 L2099.04 1211.65 L2098.45 1211.65 L2097.86 1211.65 L2097.28 1211.65 L2096.69 1211.65 L2096.1 1211.65 L2095.52 1211.65 L2094.93 1211.65 L2094.35 1211.65 L2093.76 1211.65 L2093.17 1211.65 L2092.59 1211.65 L2092 1211.65 L2091.41 1211.65 L2090.83 1211.65 L2090.24 1211.65 L2089.65 1211.65 L2089.07 1211.65 L2088.48 1211.65 L2087.89 1211.65 L2087.31 1211.65 L2086.72 1211.65 L2086.14 1211.65 L2085.55 1211.65 L2084.96 1211.65 L2084.38 1211.65 L2083.79 1211.65 L2083.2 1211.65 L2082.62 1211.65 L2082.03 1211.65 L2081.44 1211.65 L2080.86 1211.65 L2080.27 1211.65 L2079.68 1211.65 L2079.1 1211.65 L2078.51 1211.65 L2077.93 1211.65 L2077.34 1211.65 L2076.75 1211.65 L2076.17 1211.65 L2075.58 1211.65 L2074.99 1211.65 L2074.41 1211.65 L2073.82 1211.65 L2073.23 1211.65 L2072.65 1211.65 L2072.06 1211.65 L2071.48 1211.65 L2070.89 1211.65 L2070.3 1211.65 L2069.72 1211.65 L2069.13 1211.65 L2068.54 1211.65 L2067.96 1211.65 L2067.37 1211.65 L2066.78 1211.65 L2066.2 1211.65 L2065.61 1211.65 L2065.02 1211.65 L2064.44 1211.65 L2063.85 1211.65 L2063.27 1211.65 L2062.68 1211.65 L2062.09 1211.65 L2061.51 1211.65 L2060.92 1211.65 L2060.33 1211.65 L2059.75 1211.65 L2059.16 1211.65 L2058.57 1211.65 L2057.99 1211.65 L2057.4 1211.65 L2056.81 1211.65 L2056.23 1211.65 L2055.64 1211.65 L2055.06 1211.65 L2054.47 1211.65 L2053.88 1211.65 L2053.3 1211.65 L2052.71 1211.65 L2052.12 1211.65 L2051.54 1211.65 L2050.95 1211.65 L2050.36 1211.65 L2049.78 1211.65 L2049.19 1211.65 L2048.6 1211.65 L2048.02 1211.65 L2047.43 1211.65 L2046.85 1211.65 L2046.26 1211.65 L2045.67 1211.65 L2045.09 1211.65 L2044.5 1211.65 L2043.91 1211.65 L2043.33 1211.65 L2042.74 1211.65 L2042.15 1211.65 L2041.57 1211.65 L2040.98 1211.65 L2040.4 1211.65 L2039.81 1211.65 L2039.22 1211.65 L2038.64 1211.65 L2038.05 1211.65 L2037.46 1211.65 L2036.88 1211.65 L2036.29 1211.65 L2035.7 1211.65 L2035.12 1211.65 L2034.53 1211.65 L2033.94 1211.65 L2033.36 1211.65 L2032.77 1211.65 L2032.19 1211.65 L2031.6 1211.65 L2031.01 1211.65 L2030.43 1211.65 L2029.84 1211.65 L2029.25 1211.65 L2028.67 1211.65 L2028.08 1211.65 L2027.49 1211.65 L2026.91 1211.65 L2026.32 1211.65 L2025.73 1211.65 L2025.15 1211.65 L2024.56 1211.65 L2023.98 1211.65 L2023.39 1211.65 L2022.8 1211.65 L2022.22 1211.65 L2021.63 1211.65 L2021.04 1211.65 L2020.46 1211.65 L2019.87 1211.65 L2019.28 1211.65 L2018.7 1211.65 L2018.11 1211.65 L2017.53 1211.65 L2016.94 1211.65 L2016.35 1211.65 L2015.77 1211.65 L2015.18 1211.65 L2014.59 1211.65 L2014.01 1211.65 L2013.42 1211.65 L2012.83 1211.65 L2012.25 1211.65 L2011.66 1211.65 L2011.07 1211.65 L2010.49 1211.65 L2009.9 1211.65 L2009.32 1211.65 L2008.73 1211.65 L2008.14 1211.65 L2007.56 1211.65 L2006.97 1211.65 L2006.38 1211.65 L2005.8 1211.65 L2005.21 1211.65 L2004.62 1211.65 L2004.04 1211.65 L2003.45 1211.65 L2002.86 1211.65 L2002.28 1211.65 L2001.69 1211.65 L2001.11 1211.65 L2000.52 1211.65 L1999.93 1211.65 L1999.35 1211.65 L1998.76 1211.65 L1998.17 1211.65 L1997.59 1211.65 L1997 1211.65 L1996.41 1211.65 L1995.83 1211.65 L1995.24 1211.65 L1994.65 1211.65 L1994.07 1211.65 L1993.48 1211.65 L1992.9 1211.65 L1992.31 1211.65 L1991.72 1211.65 L1991.14 1211.65 L1990.55 1211.65 L1989.96 1211.65 L1989.38 1211.65 L1988.79 1211.65 L1988.2 1211.65 L1987.62 1211.65 L1987.03 1211.65 L1986.45 1211.65 L1985.86 1211.65 L1985.27 1211.65 L1984.69 1211.65 L1984.1 1211.65 L1983.51 1211.65 L1982.93 1211.65 L1982.34 1211.65 L1981.75 1211.65 L1981.17 1211.65 L1980.58 1211.65 L1979.99 1211.65 L1979.41 1211.65 L1978.82 1211.65 L1978.24 1211.65 L1977.65 1211.65 L1977.06 1211.65 L1976.48 1211.65 L1975.89 1211.65 L1975.3 1211.65 L1974.72 1211.65 L1974.13 1211.65 L1973.54 1211.65 L1972.96 1211.65 L1972.37 1211.65 L1971.78 1211.65 L1971.2 1211.65 L1970.61 1211.65 L1970.03 1211.65 L1969.44 1211.65 L1968.85 1211.65 L1968.27 1211.65 L1967.68 1211.65 L1967.09 1211.65 L1966.51 1211.65 L1965.92 1211.65 L1965.33 1211.65 L1964.75 1211.65 L1964.16 1211.65 L1963.58 1211.65 L1962.99 1211.65 L1962.4 1211.65 L1961.82 1211.65 L1961.23 1211.65 L1960.64 1211.65 L1960.06 1211.65 L1959.47 1211.65 L1958.88 1211.65 L1958.3 1211.65 L1957.71 1211.65 L1957.12 1211.65 L1956.54 1211.65 L1955.95 1211.65 L1955.37 1211.65 L1954.78 1211.65 L1954.19 1211.65 L1953.61 1211.65 L1953.02 1211.65 L1952.43 1211.65 L1951.85 1211.65 L1951.26 1211.65 L1950.67 1211.65 L1950.09 1211.65 L1949.5 1211.65 L1948.91 1211.65 L1948.33 1211.65 L1947.74 1211.65 L1947.16 1211.65 L1946.57 1211.65 L1945.98 1211.65 L1945.4 1211.65 L1944.81 1211.65 L1944.22 1211.65 L1943.64 1211.65 L1943.05 1211.65 L1942.46 1211.65 L1941.88 1211.65 L1941.29 1211.65 L1940.71 1211.65 L1940.12 1211.65 L1939.53 1211.65 L1938.95 1211.65 L1938.36 1211.65 L1937.77 1211.65 L1937.19 1211.65 L1936.6 1211.65 L1936.01 1211.65 L1935.43 1211.65 L1934.84 1211.65 L1934.25 1211.65 L1933.67 1211.65 L1933.08 1211.65 L1932.5 1211.65 L1931.91 1211.65 L1931.32 1211.65 L1930.74 1211.65 L1930.15 1211.65 L1929.56 1211.65 L1928.98 1211.65 L1928.39 1211.65 L1927.8 1211.65 L1927.22 1211.65 L1926.63 1211.65 L1926.04 1211.65 L1925.46 1211.65 L1924.87 1211.65 L1924.29 1211.65 L1923.7 1211.65 L1923.11 1211.65 L1922.53 1211.65 L1921.94 1211.65 L1921.35 1211.65 L1920.77 1211.65 L1920.18 1211.65 L1919.59 1211.65 L1919.01 1211.65 L1918.42 1211.65 L1917.83 1211.65 L1917.25 1211.65 L1916.66 1211.65 L1916.08 1211.65 L1915.49 1211.65 L1914.9 1211.65 L1914.32 1211.65 L1913.73 1211.65 L1913.14 1211.65 L1912.56 1211.65 L1911.97 1211.65 L1911.38 1211.65 L1910.8 1211.65 L1910.21 1211.65 L1909.63 1211.65 L1909.04 1211.65 L1908.45 1211.65 L1907.87 1211.65 L1907.28 1211.65 L1906.69 1211.65 L1906.11 1211.65 L1905.52 1211.65 L1904.93 1211.65 L1904.35 1211.65 L1903.76 1211.65 L1903.17 1211.65 L1902.59 1211.65 L1902 1211.65 L1901.42 1211.65 L1900.83 1211.65 L1900.24 1211.65 L1899.66 1211.65 L1899.07 1211.65 L1898.48 1211.65 L1897.9 1211.65 L1897.31 1211.65 L1896.72 1211.65 L1896.14 1211.65 L1895.55 1211.65 L1894.96 1211.65 L1894.38 1211.65 L1893.79 1211.65 L1893.21 1211.65 L1892.62 1211.65 L1892.03 1211.65 L1891.45 1211.65 L1890.86 1211.65 L1890.27 1211.65 L1889.69 1211.65 L1889.1 1211.65 L1888.51 1211.65 L1887.93 1211.65 L1887.34 1211.65 L1886.76 1211.65 L1886.17 1211.65 L1885.58 1211.65 L1885 1211.65 L1884.41 1211.65 L1883.82 1211.65 L1883.24 1211.65 L1882.65 1211.65 L1882.06 1211.65 L1881.48 1211.65 L1880.89 1211.65 L1880.3 1211.65 L1879.72 1211.65 L1879.13 1211.65 L1878.55 1211.65 L1877.96 1211.65 L1877.37 1211.65 L1876.79 1211.65 L1876.2 1211.65 L1875.61 1211.65 L1875.03 1211.65 L1874.44 1211.65 L1873.85 1211.65 L1873.27 1211.65 L1872.68 1211.65 L1872.09 1211.65 L1871.51 1211.65 L1870.92 1211.65 L1870.34 1211.65 L1869.75 1211.65 L1869.16 1211.65 L1868.58 1211.65 L1867.99 1211.65 L1867.4 1211.65 L1866.82 1211.65 L1866.23 1211.65 L1865.64 1211.65 L1865.06 1211.65 L1864.47 1211.65 L1863.88 1211.65 L1863.3 1211.65 L1862.71 1211.65 L1862.13 1211.65 L1861.54 1211.65 L1860.95 1211.65 L1860.37 1211.65 L1859.78 1211.65 L1859.19 1211.65 L1858.61 1211.65 L1858.02 1211.65 L1857.43 1211.65 L1856.85 1211.65 L1856.26 1211.65 L1855.68 1211.65 L1855.09 1211.65 L1854.5 1211.65 L1853.92 1211.65 L1853.33 1211.65 L1852.74 1211.65 L1852.16 1211.65 L1851.57 1211.65 L1850.98 1211.65 L1850.4 1211.65 L1849.81 1211.65 L1849.22 1211.65 L1848.64 1211.65 L1848.05 1211.65 L1847.47 1211.65 L1846.88 1211.65 L1846.29 1211.65 L1845.71 1211.65 L1845.12 1211.65 L1844.53 1211.65 L1843.95 1211.65 L1843.36 1211.65 L1842.77 1211.65 L1842.19 1211.65 L1841.6 1211.65 L1841.01 1211.65 L1840.43 1211.65 L1839.84 1211.65 L1839.26 1211.65 L1838.67 1211.65 L1838.08 1211.65 L1837.5 1211.65 L1836.91 1211.65 L1836.32 1211.65 L1835.74 1211.65 L1835.15 1211.65 L1834.56 1211.65 L1833.98 1211.65 L1833.39 1211.65 L1832.81 1211.65 L1832.22 1211.65 L1831.63 1211.65 L1831.05 1211.65 L1830.46 1211.65 L1829.87 1211.65 L1829.29 1211.65 L1828.7 1211.65 L1828.11 1211.65 L1827.53 1211.65 L1826.94 1211.65 L1826.35 1211.65 L1825.77 1211.65 L1825.18 1211.65 L1824.6 1211.65 L1824.01 1211.65 L1823.42 1211.65 L1822.84 1211.65 L1822.25 1211.65 L1821.66 1211.65 L1821.08 1211.65 L1820.49 1211.65 L1819.9 1211.65 L1819.32 1211.65 L1818.73 1211.65 L1818.14 1211.65 L1817.56 1211.65 L1816.97 1211.65 L1816.39 1211.65 L1815.8 1211.65 L1815.21 1211.65 L1814.63 1211.65 L1814.04 1211.65 L1813.45 1211.65 L1812.87 1211.65 L1812.28 1211.65 L1811.69 1211.65 L1811.11 1211.65 L1810.52 1211.65 L1809.94 1211.65 L1809.35 1211.65 L1808.76 1211.65 L1808.18 1211.65 L1807.59 1211.65 L1807 1211.65 L1806.42 1211.65 L1805.83 1211.65 L1805.24 1211.65 L1804.66 1211.65 L1804.07 1211.65 L1803.48 1211.65 L1802.9 1211.65 L1802.31 1211.65 L1801.73 1211.65 L1801.14 1211.65 L1800.55 1211.65 L1799.97 1211.65 L1799.38 1211.65 L1798.79 1211.65 L1798.21 1211.65 L1797.62 1211.65 L1797.03 1211.65 L1796.45 1211.65 L1795.86 1211.65 L1795.27 1211.65 L1794.69 1211.65 L1794.1 1211.65 L1793.52 1211.65 L1792.93 1211.65 L1792.34 1211.65 L1791.76 1211.65 L1791.17 1211.65 L1790.58 1211.65 L1790 1211.65 L1789.41 1211.65 L1788.82 1211.65 L1788.24 1211.65 L1787.65 1211.65 L1787.06 1211.65 L1786.48 1211.65 L1785.89 1211.65 L1785.31 1211.65 L1784.72 1211.65 L1784.13 1211.65 L1783.55 1211.65 L1782.96 1211.65 L1782.37 1211.65 L1781.79 1211.65 L1781.2 1211.65 L1780.61 1211.65 L1780.03 1211.65 L1779.44 1211.65 L1778.86 1211.65 L1778.27 1211.65 L1777.68 1211.65 L1777.1 1211.65 L1776.51 1211.65 L1775.92 1211.65 L1775.34 1211.65 L1774.75 1211.65 L1774.16 1211.65 L1773.58 1211.65 L1772.99 1211.65 L1772.4 1211.65 L1771.82 1211.65 L1771.23 1211.65 L1770.65 1211.65 L1770.06 1211.65 L1769.47 1211.65 L1768.89 1211.65 L1768.3 1211.65 L1767.71 1211.65 L1767.13 1211.65 L1766.54 1211.65 L1765.95 1211.65 L1765.37 1211.65 L1764.78 1211.65 L1764.19 1211.65 L1763.61 1211.65 L1763.02 1211.65 L1762.44 1211.65 L1761.85 1211.65 L1761.26 1211.65 L1760.68 1211.65 L1760.09 1211.65 L1759.5 1211.65 L1758.92 1211.65 L1758.33 1211.65 L1757.74 1211.65 L1757.16 1211.65 L1756.57 1211.65 L1755.99 1211.65 L1755.4 1211.65 L1754.81 1211.65 L1754.23 1211.65 L1753.64 1211.65 L1753.05 1211.65 L1752.47 1211.65 L1751.88 1211.65 L1751.29 1211.65 L1750.71 1211.65 L1750.12 1211.65 L1749.53 1211.65 L1748.95 1211.65 L1748.36 1211.65 L1747.78 1211.65 L1747.19 1211.65 L1746.6 1211.65 L1746.02 1211.65 L1745.43 1211.65 L1744.84 1211.65 L1744.26 1211.65 L1743.67 1211.65 L1743.08 1211.65 L1742.5 1211.65 L1741.91 1211.65 L1741.32 1211.65 L1740.74 1211.65 L1740.15 1211.65 L1739.57 1211.65 L1738.98 1211.65 L1738.39 1211.65 L1737.81 1211.65 L1737.22 1211.65 L1736.63 1211.65 L1736.05 1211.65 L1735.46 1211.65 L1734.87 1211.65 L1734.29 1211.65 L1733.7 1211.65 L1733.11 1211.65 L1732.53 1211.65 L1731.94 1211.65 L1731.36 1211.65 L1730.77 1211.65 L1730.18 1211.65 L1729.6 1211.65 L1729.01 1211.65 L1728.42 1211.65 L1727.84 1211.65 L1727.25 1211.65 L1726.66 1211.65 L1726.08 1211.65 L1725.49 1211.65 L1724.91 1211.65 L1724.32 1211.65 L1723.73 1211.65 L1723.15 1211.65 L1722.56 1211.65 L1721.97 1211.65 L1721.39 1211.65 L1720.8 1211.65 L1720.21 1211.65 L1719.63 1211.65 L1719.04 1211.65 L1718.45 1211.65 L1717.87 1211.65 L1717.28 1211.65 L1716.7 1211.65 L1716.11 1211.65 L1715.52 1211.65 L1714.94 1211.65 L1714.35 1211.65 L1713.76 1211.65 L1713.18 1211.65 L1712.59 1211.65 L1712 1211.65 L1711.42 1211.65 L1710.83 1211.65 L1710.24 1211.65 L1709.66 1211.65 L1709.07 1211.65 L1708.49 1211.65 L1707.9 1211.65 L1707.31 1211.65 L1706.73 1211.65 L1706.14 1211.65 L1705.55 1211.65 L1704.97 1211.65 L1704.38 1211.65 L1703.79 1211.65 L1703.21 1211.65 L1702.62 1211.65 L1702.04 1211.65 L1701.45 1211.65 L1700.86 1211.65 L1700.28 1211.65 L1699.69 1211.65 L1699.1 1211.65 L1698.52 1211.65 L1697.93 1211.65 L1697.34 1211.65 L1696.76 1211.65 L1696.17 1211.65 L1695.58 1211.65 L1695 1211.65 L1694.41 1211.65 L1693.83 1211.65 L1693.24 1211.65 L1692.65 1211.65 L1692.07 1211.65 L1691.48 1211.65 L1690.89 1211.65 L1690.31 1211.65 L1689.72 1211.65 L1689.13 1211.65 L1688.55 1211.65 L1687.96 1211.65 L1687.37 1211.65 L1686.79 1211.65 L1686.2 1211.65 L1685.62 1211.65 L1685.03 1211.65 L1684.44 1211.65 L1683.86 1211.65 L1683.27 1211.65 L1682.68 1211.65 L1682.1 1211.65 L1681.51 1211.65 L1680.92 1211.65 L1680.34 1211.65 L1679.75 1211.65 L1679.17 1211.65 L1678.58 1211.65 L1677.99 1211.65 L1677.41 1211.65 L1676.82 1211.65 L1676.23 1211.65 L1675.65 1211.65 L1675.06 1211.65 L1674.47 1211.65 L1673.89 1211.65 L1673.3 1211.65 L1672.71 1211.65 L1672.13 1211.65 L1671.54 1211.65 L1670.96 1211.65 L1670.37 1211.65 L1669.78 1211.65 L1669.2 1211.65 L1668.61 1211.65 L1668.02 1211.65 L1667.44 1211.65 L1666.85 1211.65 L1666.26 1211.65 L1665.68 1211.65 L1665.09 1211.65 L1664.5 1211.65 L1663.92 1211.65 L1663.33 1211.65 L1662.75 1211.65 L1662.16 1211.65 L1661.57 1211.65 L1660.99 1211.65 L1660.4 1211.65 L1659.81 1211.65 L1659.23 1211.65 L1658.64 1211.65 L1658.05 1211.65 L1657.47 1211.65 L1656.88 1211.65 L1656.29 1211.65 L1655.71 1211.65 L1655.12 1211.65 L1654.54 1211.65 L1653.95 1211.65 L1653.36 1211.65 L1652.78 1211.65 L1652.19 1211.65 L1651.6 1211.65 L1651.02 1211.65 L1650.43 1211.65 L1649.84 1211.65 L1649.26 1211.65 L1648.67 1211.65 L1648.09 1211.65 L1647.5 1211.65 L1646.91 1211.65 L1646.33 1211.65 L1645.74 1211.65 L1645.15 1211.65 L1644.57 1211.65 L1643.98 1211.65 L1643.39 1211.65 L1642.81 1211.65 L1642.22 1211.65 L1641.63 1211.65 L1641.05 1211.65 L1640.46 1211.65 L1639.88 1211.65 L1639.29 1211.65 L1638.7 1211.65 L1638.12 1211.65 L1637.53 1211.65 L1636.94 1211.65 L1636.36 1211.65 L1635.77 1211.65 L1635.18 1211.65 L1634.6 1211.65 L1634.01 1211.65 L1633.42 1211.65 L1632.84 1211.65 L1632.25 1211.65 L1631.67 1211.65 L1631.08 1211.65 L1630.49 1211.65 L1629.91 1211.65 L1629.32 1211.65 L1628.73 1211.65 L1628.15 1211.65 L1627.56 1211.65 L1626.97 1211.65 L1626.39 1211.65 L1625.8 1211.65 L1625.22 1211.65 L1624.63 1211.65 L1624.04 1211.65 L1623.46 1211.65 L1622.87 1211.65 L1622.28 1211.65 L1621.7 1211.65 L1621.11 1211.65 L1620.52 1211.65 L1619.94 1211.65 L1619.35 1211.65 L1618.76 1211.65 L1618.18 1211.65 L1617.59 1211.65 L1617.01 1211.65 L1616.42 1211.65 L1615.83 1211.65 L1615.25 1211.65 L1614.66 1211.65 L1614.07 1211.65 L1613.49 1211.65 L1612.9 1211.65 L1612.31 1211.65 L1611.73 1211.65 L1611.14 1211.65 L1610.55 1211.65 L1609.97 1211.65 L1609.38 1211.65 L1608.8 1211.65 L1608.21 1211.65 L1607.62 1211.65 L1607.04 1211.65 L1606.45 1211.65 L1605.86 1211.65 L1605.28 1211.65 L1604.69 1211.65 L1604.1 1211.65 L1603.52 1211.65 L1602.93 1211.65 L1602.34 1211.65 L1601.76 1211.65 L1601.17 1211.65 L1600.59 1211.65 L1600 1211.65 L1599.41 1211.65 L1598.83 1211.65 L1598.24 1211.65 L1597.65 1211.65 L1597.07 1211.65 L1596.48 1211.65 L1595.89 1211.65 L1595.31 1211.65 L1594.72 1211.65 L1594.14 1211.65 L1593.55 1211.65 L1592.96 1211.65 L1592.38 1211.65 L1591.79 1211.65 L1591.2 1211.65 L1590.62 1211.65 L1590.03 1211.65 L1589.44 1211.65 L1588.86 1211.65 L1588.27 1211.65 L1587.68 1211.65 L1587.1 1211.65 L1586.51 1211.65 L1585.93 1211.65 L1585.34 1211.65 L1584.75 1211.65 L1584.17 1211.65 L1583.58 1211.65 L1582.99 1211.65 L1582.41 1211.65 L1581.82 1211.65 L1581.23 1211.65 L1580.65 1211.65 L1580.06 1211.65 L1579.47 1211.65 L1578.89 1211.65 L1578.3 1211.65 L1577.72 1211.65 L1577.13 1211.65 L1576.54 1211.65 L1575.96 1211.65 L1575.37 1211.65 L1574.78 1211.65 L1574.2 1211.65 L1573.61 1211.65 L1573.02 1211.65 L1572.44 1211.65 L1571.85 1211.65 L1571.27 1211.65 L1570.68 1211.65 L1570.09 1211.65 L1569.51 1211.65 L1568.92 1211.65 L1568.33 1211.65 L1567.75 1211.65 L1567.16 1211.65 L1566.57 1211.65 L1565.99 1211.65 L1565.4 1211.65 L1564.81 1211.65 L1564.23 1211.65 L1563.64 1211.65 L1563.06 1211.65 L1562.47 1211.65 L1561.88 1211.65 L1561.3 1211.65 L1560.71 1211.65 L1560.12 1211.65 L1559.54 1211.65 L1558.95 1211.65 L1558.36 1211.65 L1557.78 1211.65 L1557.19 1211.65 L1556.6 1211.65 L1556.02 1211.65 L1555.43 1211.65 L1554.85 1211.65 L1554.26 1211.65 L1553.67 1211.65 L1553.09 1211.65 L1552.5 1211.65 L1551.91 1211.65 L1551.33 1211.65 L1550.74 1211.65 L1550.15 1211.65 L1549.57 1211.65 L1548.98 1211.65 L1548.4 1211.65 L1547.81 1211.65 L1547.22 1211.65 L1546.64 1211.65 L1546.05 1211.65 L1545.46 1211.65 L1544.88 1211.65 L1544.29 1211.65 L1543.7 1211.65 L1543.12 1211.65 L1542.53 1211.65 L1541.94 1211.65 L1541.36 1211.65 L1540.77 1211.65 L1540.19 1211.65 L1539.6 1211.65 L1539.01 1211.65 L1538.43 1211.65 L1537.84 1211.65 L1537.25 1211.65 L1536.67 1211.65 L1536.08 1211.65 L1535.49 1211.65 L1534.91 1211.65 L1534.32 1211.65 L1533.73 1211.65 L1533.15 1211.65 L1532.56 1211.65 L1531.98 1211.65 L1531.39 1211.65 L1530.8 1211.65 L1530.22 1211.65 L1529.63 1211.65 L1529.04 1211.65 L1528.46 1211.65 L1527.87 1211.65 L1527.28 1211.65 L1526.7 1211.65 L1526.11 1211.65 L1525.52 1211.65 L1524.94 1211.65 L1524.35 1211.65 L1523.77 1211.65 L1523.18 1211.65 L1522.59 1211.65 L1522.01 1211.65 L1521.42 1211.65 L1520.83 1211.65 L1520.25 1211.65 L1519.66 1211.65 L1519.07 1211.65 L1518.49 1211.65 L1517.9 1211.65 L1517.32 1211.65 L1516.73 1211.65 L1516.14 1211.65 L1515.56 1211.65 L1514.97 1211.65 L1514.38 1211.65 L1513.8 1211.65 L1513.21 1211.65 L1512.62 1211.65 L1512.04 1211.65 L1511.45 1211.65 L1510.86 1211.65 L1510.28 1211.65 L1509.69 1211.65 L1509.11 1211.65 L1508.52 1211.65 L1507.93 1211.65 L1507.35 1211.65 L1506.76 1211.65 L1506.17 1211.65 L1505.59 1211.65 L1505 1211.65 L1504.41 1211.65 L1503.83 1211.65 L1503.24 1211.65 L1502.65 1211.65 L1502.07 1211.65 L1501.48 1211.65 L1500.9 1211.65 L1500.31 1211.65 L1499.72 1211.65 L1499.14 1211.65 L1498.55 1211.65 L1497.96 1211.65 L1497.38 1211.65 L1496.79 1211.65 L1496.2 1211.65 L1495.62 1211.65 L1495.03 1211.65 L1494.45 1211.65 L1493.86 1211.65 L1493.27 1211.65 L1492.69 1211.65 L1492.1 1211.65 L1491.51 1211.65 L1490.93 1211.65 L1490.34 1211.65 L1489.75 1211.65 L1489.17 1211.65 L1488.58 1211.65 L1487.99 1211.65 L1487.41 1211.65 L1486.82 1211.65 L1486.24 1211.65 L1485.65 1211.65 L1485.06 1211.65 L1484.48 1211.65 L1483.89 1211.65 L1483.3 1211.65 L1482.72 1211.65 L1482.13 1211.65 L1481.54 1211.65 L1480.96 1211.65 L1480.37 1211.65 L1479.78 1211.65 L1479.2 1211.65 L1478.61 1211.65 L1478.03 1211.65 L1477.44 1211.65 L1476.85 1211.65 L1476.27 1211.65 L1475.68 1211.65 L1475.09 1211.65 L1474.51 1211.65 L1473.92 1211.65 L1473.33 1211.65 L1472.75 1211.65 L1472.16 1211.65 L1471.57 1211.65 L1470.99 1211.65 L1470.4 1211.65 L1469.82 1211.65 L1469.23 1211.65 L1468.64 1211.65 L1468.06 1211.65 L1467.47 1211.65 L1466.88 1211.65 L1466.3 1211.65 L1465.71 1211.65 L1465.12 1211.65 L1464.54 1211.65 L1463.95 1211.65 L1463.37 1211.65 L1462.78 1211.65 L1462.19 1211.65 L1461.61 1211.65 L1461.02 1211.65 L1460.43 1211.65 L1459.85 1211.65 L1459.26 1211.65 L1458.67 1211.65 L1458.09 1211.65 L1457.5 1211.65 L1456.91 1211.65 L1456.33 1211.65 L1455.74 1211.65 L1455.16 1211.65 L1454.57 1211.65 L1453.98 1211.65 L1453.4 1211.65 L1452.81 1211.65 L1452.22 1211.65 L1451.64 1211.65 L1451.05 1211.65 L1450.46 1211.65 L1449.88 1211.65 L1449.29 1211.65 L1448.7 1211.65 L1448.12 1211.65 L1447.53 1211.65 L1446.95 1211.65 L1446.36 1211.65 L1445.77 1211.65 L1445.19 1211.65 L1444.6 1211.65 L1444.01 1211.65 L1443.43 1211.65 L1442.84 1211.65 L1442.25 1211.65 L1441.67 1211.65 L1441.08 1211.65 L1440.5 1211.65 L1439.91 1211.65 L1439.32 1211.65 L1438.74 1211.65 L1438.15 1211.65 L1437.56 1211.65 L1436.98 1211.65 L1436.39 1211.65 L1435.8 1211.65 L1435.22 1211.65 L1434.63 1211.65 L1434.04 1211.65 L1433.46 1211.65 L1432.87 1211.65 L1432.29 1211.65 L1431.7 1211.65 L1431.11 1211.65 L1430.53 1211.65 L1429.94 1211.65 L1429.35 1211.65 L1428.77 1211.65 L1428.18 1211.65 L1427.59 1211.65 L1427.01 1211.65 L1426.42 1211.65 L1425.83 1211.65 L1425.25 1211.65 L1424.66 1211.65 L1424.08 1211.65 L1423.49 1211.65 L1422.9 1211.65 L1422.32 1211.65 L1421.73 1211.65 L1421.14 1211.65 L1420.56 1211.65 L1419.97 1211.65 L1419.38 1211.65 L1418.8 1211.65 L1418.21 1211.65 L1417.63 1211.65 L1417.04 1211.65 L1416.45 1211.65 L1415.87 1211.65 L1415.28 1211.65 L1414.69 1211.65 L1414.11 1211.65 L1413.52 1211.65 L1412.93 1211.65 L1412.35 1211.65 L1411.76 1211.65 L1411.17 1211.65 L1410.59 1211.65 L1410 1211.65 L1409.42 1211.65 L1408.83 1211.65 L1408.24 1211.65 L1407.66 1211.65 L1407.07 1211.65 L1406.48 1211.65 L1405.9 1211.65 L1405.31 1211.65 L1404.72 1211.65 L1404.14 1211.65 L1403.55 1211.65 L1402.96 1211.65 L1402.38 1211.65 L1401.79 1211.65 L1401.21 1211.65 L1400.62 1211.65 L1400.03 1211.65 L1399.45 1211.65 L1398.86 1211.65 L1398.27 1211.65 L1397.69 1211.65 L1397.1 1211.65 L1396.51 1211.65 L1395.93 1211.65 L1395.34 1211.65 L1394.75 1211.65 L1394.17 1211.65 L1393.58 1211.65 L1393 1211.65 L1392.41 1211.65 L1391.82 1211.65 L1391.24 1211.65 L1390.65 1211.65 L1390.06 1211.65 L1389.48 1211.65 L1388.89 1211.65 L1388.3 1211.65 L1387.72 1211.65 L1387.13 1211.65 L1386.55 1211.65 L1385.96 1211.65 L1385.37 1211.65 L1384.79 1211.65 L1384.2 1211.65 L1383.61 1211.65 L1383.03 1211.65 L1382.44 1211.65 L1381.85 1211.65 L1381.27 1211.65 L1380.68 1211.65 L1380.09 1211.65 L1379.51 1211.65 L1378.92 1211.65 L1378.34 1211.65 L1377.75 1211.65 L1377.16 1211.65 L1376.58 1211.65 L1375.99 1211.65 L1375.4 1211.65 L1374.82 1211.65 L1374.23 1211.65 L1373.64 1211.65 L1373.06 1211.65 L1372.47 1211.65 L1371.88 1211.65 L1371.3 1211.65 L1370.71 1211.65 L1370.13 1211.65 L1369.54 1211.65 L1368.95 1211.65 L1368.37 1211.65 L1367.78 1211.65 L1367.19 1211.65 L1366.61 1211.65 L1366.02 1211.65 L1365.43 1211.65 L1364.85 1211.65 L1364.26 1211.65 L1363.68 1211.65 L1363.09 1211.65 L1362.5 1211.65 L1361.92 1211.65 L1361.33 1211.65 L1360.74 1211.65 L1360.16 1211.65 L1359.57 1211.65 L1358.98 1211.65 L1358.4 1211.65 L1357.81 1211.65 L1357.22 1211.65 L1356.64 1211.65 L1356.05 1211.65 L1355.47 1211.65 L1354.88 1211.65 L1354.29 1211.65 L1353.71 1211.65 L1353.12 1211.65 L1352.53 1211.65 L1351.95 1211.65 L1351.36 1211.65 L1350.77 1211.65 L1350.19 1211.65 L1349.6 1211.65 L1349.01 1211.65 L1348.43 1211.65 L1347.84 1211.65 L1347.26 1211.65 L1346.67 1211.65 L1346.08 1211.65 L1345.5 1211.65 L1344.91 1211.65 L1344.32 1211.65 L1343.74 1211.65 L1343.15 1211.65 L1342.56 1211.65 L1341.98 1211.65 L1341.39 1211.65 L1340.8 1211.65 L1340.22 1211.65 L1339.63 1211.65 L1339.05 1211.65 L1338.46 1211.65 L1337.87 1211.65 L1337.29 1211.65 L1336.7 1211.65 L1336.11 1211.65 L1335.53 1211.65 L1334.94 1211.65 L1334.35 1211.65 L1333.77 1211.65 L1333.18 1211.65 L1332.6 1211.65 L1332.01 1211.65 L1331.42 1211.65 L1330.84 1211.65 L1330.25 1211.65 L1329.66 1211.65 L1329.08 1211.65 L1328.49 1211.65 L1327.9 1211.65 L1327.32 1211.65 L1326.73 1211.65 L1326.14 1211.65 L1325.56 1211.65 L1324.97 1211.65 L1324.39 1211.65 L1323.8 1211.65 L1323.21 1211.65 L1322.63 1211.65 L1322.04 1211.65 L1321.45 1211.65 L1320.87 1211.65 L1320.28 1211.65 L1319.69 1211.65 L1319.11 1211.65 L1318.52 1211.65 L1317.93 1211.65 L1317.35 1211.65 L1316.76 1211.65 L1316.18 1211.65 L1315.59 1211.65 L1315 1211.65 L1314.42 1211.65 L1313.83 1211.65 L1313.24 1211.65 L1312.66 1211.65 L1312.07 1211.65 L1311.48 1211.65 L1310.9 1211.65 L1310.31 1211.65 L1309.73 1211.65 L1309.14 1211.65 L1308.55 1211.65 L1307.97 1211.65 L1307.38 1211.65 L1306.79 1211.65 L1306.21 1211.65 L1305.62 1211.65 L1305.03 1211.65 L1304.45 1211.65 L1303.86 1211.65 L1303.27 1211.65 L1302.69 1211.65 L1302.1 1211.65 L1301.52 1211.65 L1300.93 1211.65 L1300.34 1211.65 L1299.76 1211.65 L1299.17 1211.65 L1298.58 1211.65 L1298 1211.65 L1297.41 1211.65 L1296.82 1211.65 L1296.24 1211.65 L1295.65 1211.65 L1295.06 1211.65 L1294.48 1211.65 L1293.89 1211.65 L1293.31 1211.65 L1292.72 1211.65 L1292.13 1211.65 L1291.55 1211.65 L1290.96 1211.65 L1290.37 1211.65 L1289.79 1211.65 L1289.2 1211.65 L1288.61 1211.65 L1288.03 1211.65 L1287.44 1211.65 L1286.86 1211.65 L1286.27 1211.65 L1285.68 1211.65 L1285.1 1211.65 L1284.51 1211.65 L1283.92 1211.65 L1283.34 1211.65 L1282.75 1211.65 L1282.16 1211.65 L1281.58 1211.65 L1280.99 1211.65 L1280.4 1211.65 L1279.82 1211.65 L1279.23 1211.65 L1278.65 1211.65 L1278.06 1211.65 L1277.47 1211.65 L1276.89 1211.65 L1276.3 1211.65 L1275.71 1211.65 L1275.13 1211.65 L1274.54 1211.65 L1273.95 1211.65 L1273.37 1211.65 L1272.78 1211.65 L1272.19 1211.65 L1271.61 1211.65 L1271.02 1211.65 L1270.44 1211.65 L1269.85 1211.65 L1269.26 1211.65 L1268.68 1211.65 L1268.09 1211.65 L1267.5 1211.65 L1266.92 1211.65 L1266.33 1211.65 L1265.74 1211.65 L1265.16 1211.65 L1264.57 1211.65 L1263.98 1211.65 L1263.4 1211.65 L1262.81 1211.65 L1262.23 1211.65 L1261.64 1211.65 L1261.05 1211.65 L1260.47 1211.65 L1259.88 1211.65 L1259.29 1211.65 L1258.71 1211.65 L1258.12 1211.65 L1257.53 1211.65 L1256.95 1211.65 L1256.36 1211.65 L1255.78 1211.65 L1255.19 1211.65 L1254.6 1211.65 L1254.02 1211.65 L1253.43 1211.65 L1252.84 1211.65 L1252.26 1211.65 L1251.67 1211.65 L1251.08 1211.65 L1250.5 1211.65 L1249.91 1211.65 L1249.32 1211.65 L1248.74 1211.65 L1248.15 1211.65 L1247.57 1211.65 L1246.98 1211.65 L1246.39 1211.65 L1245.81 1211.65 L1245.22 1211.65 L1244.63 1211.65 L1244.05 1211.65 L1243.46 1211.65 L1242.87 1211.65 L1242.29 1211.65 L1241.7 1211.65 L1241.11 1211.65 L1240.53 1211.65 L1239.94 1211.65 L1239.36 1211.65 L1238.77 1211.65 L1238.18 1211.65 L1237.6 1211.65 L1237.01 1211.65 L1236.42 1211.65 L1235.84 1211.65 L1235.25 1211.65 L1234.66 1211.65 L1234.08 1211.65 L1233.49 1211.65 L1232.91 1211.65 L1232.32 1211.65 L1231.73 1211.65 L1231.15 1211.65 L1230.56 1211.65 L1229.97 1211.65 L1229.39 1211.65 L1228.8 1211.65 L1228.21 1211.65 L1227.63 1211.65 L1227.04 1211.65 L1226.45 1211.65 L1225.87 1211.65 L1225.28 1211.65 L1224.7 1211.65 L1224.11 1211.65 L1223.52 1211.65 L1222.94 1211.65 L1222.35 1211.65 L1221.76 1211.65 L1221.18 1211.65 L1220.59 1211.65 L1220 1211.65 L1219.42 1211.65 L1218.83 1211.65 L1218.24 1211.65 L1217.66 1211.65 L1217.07 1211.65 L1216.49 1211.65 L1215.9 1211.65 L1215.31 1211.65 L1214.73 1211.65 L1214.14 1211.65 L1213.55 1211.65 L1212.97 1211.65 L1212.38 1211.65 L1211.79 1211.65 L1211.21 1211.65 L1210.62 1211.65 L1210.03 1211.65 L1209.45 1211.65 L1208.86 1211.65 L1208.28 1211.65 L1207.69 1211.65 L1207.1 1211.65 L1206.52 1211.65 L1205.93 1211.65 L1205.34 1211.65 L1204.76 1211.65 L1204.17 1211.65 L1203.58 1211.65 L1203 1211.65 L1202.41 1211.65 L1201.83 1211.65 L1201.24 1211.65 L1200.65 1211.65 L1200.07 1211.65 L1199.48 1211.65 L1198.89 1211.65 L1198.31 1211.65 L1197.72 1211.65 L1197.13 1211.65 L1196.55 1211.65 L1195.96 1211.65 L1195.37 1211.65 L1194.79 1211.65 L1194.2 1211.65 L1193.62 1211.65 L1193.03 1211.65 L1192.44 1211.65 L1191.86 1211.65 L1191.27 1211.65 L1190.68 1211.65 L1190.1 1211.65 L1189.51 1211.65 L1188.92 1211.65 L1188.34 1211.65 L1187.75 1211.65 L1187.16 1211.65 L1186.58 1211.65 L1185.99 1211.65 L1185.41 1211.65 L1184.82 1211.65 L1184.23 1211.65 L1183.65 1211.65 L1183.06 1211.65 L1182.47 1211.65 L1181.89 1211.65 L1181.3 1211.65 L1180.71 1211.65 L1180.13 1211.65 L1179.54 1211.65 L1178.96 1211.65 L1178.37 1211.65 L1177.78 1211.65 L1177.2 1211.65 L1176.61 1211.65 L1176.02 1211.65 L1175.44 1211.65 L1174.85 1211.65 L1174.26 1211.65 L1173.68 1211.65 L1173.09 1211.65 L1172.5 1211.65 L1171.92 1211.65 L1171.33 1211.65 L1170.75 1211.65 L1170.16 1211.65 L1169.57 1211.65 L1168.99 1211.65 L1168.4 1211.65 L1167.81 1211.65 L1167.23 1211.65 L1166.64 1211.65 L1166.05 1211.65 L1165.47 1211.65 L1164.88 1211.65 L1164.29 1211.65 L1163.71 1211.65 L1163.12 1211.65 L1162.54 1211.65 L1161.95 1211.65 L1161.36 1211.65 L1160.78 1211.65 L1160.19 1211.65 L1159.6 1211.65 L1159.02 1211.65 L1158.43 1211.65 L1157.84 1211.65 L1157.26 1211.65 L1156.67 1211.65 L1156.09 1211.65 L1155.5 1211.65 L1154.91 1211.65 L1154.33 1211.65 L1153.74 1211.65 L1153.15 1211.65 L1152.57 1211.65 L1151.98 1211.65 L1151.39 1211.65 L1150.81 1211.65 L1150.22 1211.65 L1149.63 1211.65 L1149.05 1211.65 L1148.46 1211.65 L1147.88 1211.65 L1147.29 1211.65 L1146.7 1211.65 L1146.12 1211.65 L1145.53 1211.65 L1144.94 1211.65 L1144.36 1211.65 L1143.77 1211.65 L1143.18 1211.65 L1142.6 1211.65 L1142.01 1211.65 L1141.42 1211.65 L1140.84 1211.65 L1140.25 1211.65 L1139.67 1211.65 L1139.08 1211.65 L1138.49 1211.65 L1137.91 1211.65 L1137.32 1211.65 L1136.73 1211.65 L1136.15 1211.65 L1135.56 1211.65 L1134.97 1211.65 L1134.39 1211.65 L1133.8 1211.65 L1133.21 1211.65 L1132.63 1211.65 L1132.04 1211.65 L1131.46 1211.65 L1130.87 1211.65 L1130.28 1211.65 L1129.7 1211.65 L1129.11 1211.65 L1128.52 1211.65 L1127.94 1211.65 L1127.35 1211.65 L1126.76 1211.65 L1126.18 1211.65 L1125.59 1211.65 L1125.01 1211.65 L1124.42 1211.65 L1123.83 1211.65 L1123.25 1211.65 L1122.66 1211.65 L1122.07 1211.65 L1121.49 1211.65 L1120.9 1211.65 L1120.31 1211.65 L1119.73 1211.65 L1119.14 1211.65 L1118.55 1211.65 L1117.97 1211.65 L1117.38 1211.65 L1116.8 1211.65 L1116.21 1211.65 L1115.62 1211.65 L1115.04 1211.65 L1114.45 1211.65 L1113.86 1211.65 L1113.28 1211.65 L1112.69 1211.65 L1112.1 1211.65 L1111.52 1211.65 L1110.93 1211.65 L1110.34 1211.65 L1109.76 1211.65 L1109.17 1211.65 L1108.59 1211.65 L1108 1211.65 L1107.41 1211.65 L1106.83 1211.65 L1106.24 1211.65 L1105.65 1211.65 L1105.07 1211.65 L1104.48 1211.65 L1103.89 1211.65 L1103.31 1211.65 L1102.72 1211.65 L1102.14 1211.65 L1101.55 1211.65 L1100.96 1211.65 L1100.38 1211.65 L1099.79 1211.65 L1099.2 1211.65 L1098.62 1211.65 L1098.03 1211.65 L1097.44 1211.65 L1096.86 1211.65 L1096.27 1211.65 L1095.68 1211.65 L1095.1 1211.65 L1094.51 1211.65 L1093.93 1211.65 L1093.34 1211.65 L1092.75 1211.65 L1092.17 1211.65 L1091.58 1211.65 L1090.99 1211.65 L1090.41 1211.65 L1089.82 1211.65 L1089.23 1211.65 L1088.65 1211.65 L1088.06 1211.65 L1087.47 1211.65 L1086.89 1211.65 L1086.3 1211.65 L1085.72 1211.65 L1085.13 1211.65 L1084.54 1211.65 L1083.96 1211.65 L1083.37 1211.65 L1082.78 1211.65 L1082.2 1211.65 L1081.61 1211.65 L1081.02 1211.65 L1080.44 1211.65 L1079.85 1211.65 L1079.26 1211.65 L1078.68 1211.65 L1078.09 1211.65 L1077.51 1211.65 L1076.92 1211.65 L1076.33 1211.65 L1075.75 1211.65 L1075.16 1211.65 L1074.57 1211.65 L1073.99 1211.65 L1073.4 1211.65 L1072.81 1211.65 L1072.23 1211.65 L1071.64 1211.65 L1071.06 1211.65 L1070.47 1211.65 L1069.88 1211.65 L1069.3 1211.65 L1068.71 1211.65 L1068.12 1211.65 L1067.54 1211.65 L1066.95 1211.65 L1066.36 1211.65 L1065.78 1211.65 L1065.19 1211.65 L1064.6 1211.65 L1064.02 1211.65 L1063.43 1211.65 L1062.85 1211.65 L1062.26 1211.65 L1061.67 1211.65 L1061.09 1211.65 L1060.5 1211.65 L1059.91 1211.65 L1059.33 1211.65 L1058.74 1211.65 L1058.15 1211.65 L1057.57 1211.65 L1056.98 1211.65 L1056.39 1211.65 L1055.81 1211.65 L1055.22 1211.65 L1054.64 1211.65 L1054.05 1211.65 L1053.46 1211.65 L1052.88 1211.65 L1052.29 1211.65 L1051.7 1211.65 L1051.12 1211.65 L1050.53 1211.65 L1049.94 1211.65 L1049.36 1211.65 L1048.77 1211.65 L1048.19 1211.65 L1047.6 1211.65 L1047.01 1211.65 L1046.43 1211.65 L1045.84 1211.65 L1045.25 1211.65 L1044.67 1211.65 L1044.08 1211.65 L1043.49 1211.65 L1042.91 1211.65 L1042.32 1211.65 L1041.73 1211.65 L1041.15 1211.65 L1040.56 1211.65 L1039.98 1211.65 L1039.39 1211.65 L1038.8 1211.65 L1038.22 1211.65 L1037.63 1211.65 L1037.04 1211.65 L1036.46 1211.65 L1035.87 1211.65 L1035.28 1211.65 L1034.7 1211.65 L1034.11 1211.65 L1033.52 1211.65 L1032.94 1211.65 L1032.35 1211.65 L1031.77 1211.65 L1031.18 1211.65 L1030.59 1211.65 L1030.01 1211.65 L1029.42 1211.65 L1028.83 1211.65 L1028.25 1211.65 L1027.66 1211.65 L1027.07 1211.65 L1026.49 1211.65 L1025.9 1211.65 L1025.32 1211.65 L1024.73 1211.65 L1024.14 1211.65 L1023.56 1211.65 L1022.97 1211.65 L1022.38 1211.65 L1021.8 1211.65 L1021.21 1211.65 L1020.62 1211.65 L1020.04 1211.65 L1019.45 1211.65 L1018.86 1211.65 L1018.28 1211.65 L1017.69 1211.65 L1017.11 1211.65 L1016.52 1211.65 L1015.93 1211.65 L1015.35 1211.65 L1014.76 1211.65 L1014.17 1211.65 L1013.59 1211.65 L1013 1211.65 L1012.41 1211.65 L1011.83 1211.65 L1011.24 1211.65 L1010.65 1211.65 L1010.07 1211.65 L1009.48 1211.65 L1008.9 1211.65 L1008.31 1211.65 L1007.72 1211.65 L1007.14 1211.65 L1006.55 1211.65 L1005.96 1211.65 L1005.38 1211.65 L1004.79 1211.65 L1004.2 1211.65 L1003.62 1211.65 L1003.03 1211.65 L1002.44 1211.65 L1001.86 1211.65 L1001.27 1211.65 L1000.69 1211.65 L1000.1 1211.65 L999.513 1211.65 L998.926 1211.65 L998.34 1211.65 L997.754 1211.65 L997.167 1211.65 L996.581 1211.65 L995.994 1211.65 L995.408 1211.65 L994.822 1211.65 L994.235 1211.65 L993.649 1211.65 L993.062 1211.65 L992.476 1211.65 L991.889 1211.65 L991.303 1211.65 L990.717 1211.65 L990.13 1211.65 L989.544 1211.65 L988.957 1211.65 L988.371 1211.65 L987.785 1211.65 L987.198 1211.65 L986.612 1211.65 L986.025 1211.65  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip192)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1211.73 986.612,1211.73 987.198,1211.73 987.785,1211.73 988.371,1211.73 988.957,1211.73 989.544,1211.73 990.13,1211.73 990.717,1211.73 991.303,1211.73 991.889,1211.73 992.476,1211.73 993.062,1211.73 993.649,1211.73 994.235,1211.73 994.822,1211.73 995.408,1211.73 995.994,1211.73 996.581,1211.73 997.167,1211.73 997.754,1211.73 998.34,1211.73 998.926,1211.73 999.513,1211.73 1000.1,1211.73 1000.69,1211.73 1001.27,1211.73 1001.86,1211.73 1002.44,1211.73 1003.03,1211.73 1003.62,1211.73 1004.2,1211.73 1004.79,1211.73 1005.38,1211.73 1005.96,1211.73 1006.55,1211.73 1007.14,1211.73 1007.72,1211.73 1008.31,1211.73 1008.9,1211.73 1009.48,1211.73 1010.07,1211.73 1010.65,1211.73 1011.24,1211.73 1011.83,1211.73 1012.41,1211.73 1013,1211.73 1013.59,1211.73 1014.17,1211.73 1014.76,1211.73 1015.35,1211.73 1015.93,1211.73 1016.52,1211.73 1017.11,1211.73 1017.69,1211.73 1018.28,1211.73 1018.86,1211.73 1019.45,1211.73 1020.04,1211.73 1020.62,1211.73 1021.21,1211.73 1021.8,1211.73 1022.38,1211.73 1022.97,1211.73 1023.56,1211.73 1024.14,1211.73 1024.73,1211.73 1025.32,1211.73 1025.9,1211.73 1026.49,1211.73 1027.07,1211.73 1027.66,1211.73 1028.25,1211.73 1028.83,1211.73 1029.42,1211.73 1030.01,1211.73 1030.59,1211.73 1031.18,1211.73 1031.77,1211.73 1032.35,1211.73 1032.94,1211.73 1033.52,1211.73 1034.11,1211.73 1034.7,1211.73 1035.28,1211.73 1035.87,1211.73 1036.46,1211.73 1037.04,1211.73 1037.63,1211.73 1038.22,1211.73 1038.8,1211.73 1039.39,1211.73 1039.98,1211.73 1040.56,1211.73 1041.15,1211.73 1041.73,1211.73 1042.32,1211.73 1042.91,1211.73 1043.49,1211.73 1044.08,1211.73 1044.67,1211.73 1045.25,1211.73 1045.84,1211.73 1046.43,1211.73 1047.01,1211.73 1047.6,1211.73 1048.19,1211.73 1048.77,1211.73 1049.36,1211.73 1049.94,1211.73 1050.53,1211.73 1051.12,1211.73 1051.7,1211.73 1052.29,1211.73 1052.88,1211.73 1053.46,1211.73 1054.05,1211.73 1054.64,1211.73 1055.22,1211.73 1055.81,1211.73 1056.39,1211.73 1056.98,1211.73 1057.57,1211.73 1058.15,1211.73 1058.74,1211.73 1059.33,1211.73 1059.91,1211.73 1060.5,1211.73 1061.09,1211.73 1061.67,1211.73 1062.26,1211.73 1062.85,1211.73 1063.43,1211.73 1064.02,1211.73 1064.6,1211.73 1065.19,1211.73 1065.78,1211.73 1066.36,1211.73 1066.95,1211.73 1067.54,1211.73 1068.12,1211.73 1068.71,1211.73 1069.3,1211.73 1069.88,1211.73 1070.47,1211.73 1071.06,1211.73 1071.64,1211.73 1072.23,1211.73 1072.81,1211.73 1073.4,1211.73 1073.99,1211.73 1074.57,1211.73 1075.16,1211.73 1075.75,1211.73 1076.33,1211.73 1076.92,1211.73 1077.51,1211.73 1078.09,1211.73 1078.68,1211.73 1079.26,1211.73 1079.85,1211.73 1080.44,1211.73 1081.02,1211.73 1081.61,1211.73 1082.2,1211.73 1082.78,1211.73 1083.37,1211.73 1083.96,1211.73 1084.54,1211.73 1085.13,1211.73 1085.72,1211.73 1086.3,1211.73 1086.89,1211.73 1087.47,1211.73 1088.06,1211.73 1088.65,1211.73 1089.23,1211.73 1089.82,1211.73 1090.41,1211.73 1090.99,1211.73 1091.58,1211.73 1092.17,1211.73 1092.75,1211.73 1093.34,1211.73 1093.93,1211.73 1094.51,1211.73 1095.1,1211.73 1095.68,1211.73 1096.27,1211.73 1096.86,1211.73 1097.44,1211.73 1098.03,1211.73 1098.62,1211.73 1099.2,1211.73 1099.79,1211.73 1100.38,1211.73 1100.96,1211.73 1101.55,1211.73 1102.14,1211.73 1102.72,1211.73 1103.31,1211.73 1103.89,1211.73 1104.48,1211.73 1105.07,1211.73 1105.65,1211.73 1106.24,1211.73 1106.83,1211.73 1107.41,1211.73 1108,1211.73 1108.59,1211.73 1109.17,1211.73 1109.76,1211.73 1110.34,1211.73 1110.93,1211.73 1111.52,1211.73 1112.1,1211.73 1112.69,1211.73 1113.28,1211.73 1113.86,1211.73 1114.45,1211.73 1115.04,1211.73 1115.62,1211.73 1116.21,1211.73 1116.8,1211.73 1117.38,1211.73 1117.97,1211.73 1118.55,1211.73 1119.14,1211.73 1119.73,1211.73 1120.31,1211.73 1120.9,1211.73 1121.49,1211.73 1122.07,1211.73 1122.66,1211.73 1123.25,1211.73 1123.83,1211.73 1124.42,1211.73 1125.01,1211.73 1125.59,1211.73 1126.18,1211.73 1126.76,1211.73 1127.35,1211.73 1127.94,1211.73 1128.52,1211.73 1129.11,1211.73 1129.7,1211.73 1130.28,1211.73 1130.87,1211.73 1131.46,1211.73 1132.04,1211.73 1132.63,1211.73 1133.21,1211.73 1133.8,1211.73 1134.39,1211.73 1134.97,1211.73 1135.56,1211.73 1136.15,1211.73 1136.73,1211.73 1137.32,1211.73 1137.91,1211.73 1138.49,1211.73 1139.08,1211.73 1139.67,1211.73 1140.25,1211.73 1140.84,1211.73 1141.42,1211.73 1142.01,1211.73 1142.6,1211.73 1143.18,1211.73 1143.77,1211.73 1144.36,1211.73 1144.94,1211.73 1145.53,1211.73 1146.12,1211.73 1146.7,1211.73 1147.29,1211.73 1147.88,1211.73 1148.46,1211.73 1149.05,1211.73 1149.63,1211.73 1150.22,1211.73 1150.81,1211.73 1151.39,1211.73 1151.98,1211.73 1152.57,1211.73 1153.15,1211.73 1153.74,1211.73 1154.33,1211.73 1154.91,1211.73 1155.5,1211.73 1156.09,1211.73 1156.67,1211.73 1157.26,1211.73 1157.84,1211.73 1158.43,1211.73 1159.02,1211.73 1159.6,1211.73 1160.19,1211.73 1160.78,1211.73 1161.36,1211.73 1161.95,1211.73 1162.54,1211.73 1163.12,1211.73 1163.71,1211.73 1164.29,1211.73 1164.88,1211.73 1165.47,1211.73 1166.05,1211.73 1166.64,1211.73 1167.23,1211.73 1167.81,1211.73 1168.4,1211.73 1168.99,1211.73 1169.57,1211.73 1170.16,1211.73 1170.75,1211.73 1171.33,1211.73 1171.92,1211.73 1172.5,1211.73 1173.09,1211.73 1173.68,1211.73 1174.26,1211.73 1174.85,1211.73 1175.44,1211.73 1176.02,1211.73 1176.61,1211.73 1177.2,1211.73 1177.78,1211.73 1178.37,1211.73 1178.96,1211.73 1179.54,1211.73 1180.13,1211.73 1180.71,1211.73 1181.3,1211.73 1181.89,1211.73 1182.47,1211.73 1183.06,1211.73 1183.65,1211.73 1184.23,1211.73 1184.82,1211.73 1185.41,1211.73 1185.99,1211.73 1186.58,1211.73 1187.16,1211.73 1187.75,1211.73 1188.34,1211.73 1188.92,1211.73 1189.51,1211.73 1190.1,1211.73 1190.68,1211.73 1191.27,1211.73 1191.86,1211.73 1192.44,1211.73 1193.03,1211.73 1193.62,1211.73 1194.2,1211.73 1194.79,1211.73 1195.37,1211.73 1195.96,1211.73 1196.55,1211.73 1197.13,1211.73 1197.72,1211.73 1198.31,1211.73 1198.89,1211.73 1199.48,1211.73 1200.07,1211.73 1200.65,1211.73 1201.24,1211.73 1201.83,1211.73 1202.41,1211.73 1203,1211.73 1203.58,1211.73 1204.17,1211.73 1204.76,1211.73 1205.34,1211.73 1205.93,1211.73 1206.52,1211.73 1207.1,1211.73 1207.69,1211.73 1208.28,1211.73 1208.86,1211.73 1209.45,1211.73 1210.03,1211.73 1210.62,1211.73 1211.21,1211.73 1211.79,1211.73 1212.38,1211.73 1212.97,1211.73 1213.55,1211.73 1214.14,1211.73 1214.73,1211.73 1215.31,1211.73 1215.9,1211.73 1216.49,1211.73 1217.07,1211.73 1217.66,1211.73 1218.24,1211.73 1218.83,1211.73 1219.42,1211.73 1220,1211.73 1220.59,1211.73 1221.18,1211.73 1221.76,1211.73 1222.35,1211.73 1222.94,1211.73 1223.52,1211.73 1224.11,1211.73 1224.7,1211.73 1225.28,1211.73 1225.87,1211.73 1226.45,1211.73 1227.04,1211.73 1227.63,1211.73 1228.21,1211.73 1228.8,1211.73 1229.39,1211.73 1229.97,1211.73 1230.56,1211.73 1231.15,1211.73 1231.73,1211.73 1232.32,1211.73 1232.91,1211.73 1233.49,1211.73 1234.08,1211.73 1234.66,1211.73 1235.25,1211.73 1235.84,1211.73 1236.42,1211.73 1237.01,1211.73 1237.6,1211.73 1238.18,1211.73 1238.77,1211.73 1239.36,1211.73 1239.94,1211.73 1240.53,1211.73 1241.11,1211.73 1241.7,1211.73 1242.29,1211.73 1242.87,1211.73 1243.46,1211.73 1244.05,1211.73 1244.63,1211.73 1245.22,1211.73 1245.81,1211.73 1246.39,1211.73 1246.98,1211.73 1247.57,1211.73 1248.15,1211.73 1248.74,1211.73 1249.32,1211.73 1249.91,1211.73 1250.5,1211.73 1251.08,1211.73 1251.67,1211.73 1252.26,1211.73 1252.84,1211.73 1253.43,1211.73 1254.02,1211.73 1254.6,1211.73 1255.19,1211.73 1255.78,1211.73 1256.36,1211.73 1256.95,1211.73 1257.53,1211.73 1258.12,1211.73 1258.71,1211.73 1259.29,1211.73 1259.88,1211.73 1260.47,1211.73 1261.05,1211.73 1261.64,1211.73 1262.23,1211.73 1262.81,1211.73 1263.4,1211.73 1263.98,1211.73 1264.57,1211.73 1265.16,1211.73 1265.74,1211.73 1266.33,1211.73 1266.92,1211.73 1267.5,1211.73 1268.09,1211.73 1268.68,1211.73 1269.26,1211.73 1269.85,1211.73 1270.44,1211.73 1271.02,1211.73 1271.61,1211.73 1272.19,1211.73 1272.78,1211.73 1273.37,1211.73 1273.95,1211.73 1274.54,1211.73 1275.13,1211.73 1275.71,1211.73 1276.3,1211.73 1276.89,1211.73 1277.47,1211.73 1278.06,1211.73 1278.65,1211.73 1279.23,1211.73 1279.82,1211.73 1280.4,1211.73 1280.99,1211.73 1281.58,1211.73 1282.16,1211.73 1282.75,1211.73 1283.34,1211.73 1283.92,1211.73 1284.51,1211.73 1285.1,1211.73 1285.68,1211.73 1286.27,1211.73 1286.86,1211.73 1287.44,1211.73 1288.03,1211.73 1288.61,1211.73 1289.2,1211.73 1289.79,1211.73 1290.37,1211.73 1290.96,1211.73 1291.55,1211.73 1292.13,1211.73 1292.72,1211.73 1293.31,1211.73 1293.89,1211.73 1294.48,1211.73 1295.06,1211.73 1295.65,1211.73 1296.24,1211.73 1296.82,1211.73 1297.41,1211.73 1298,1211.73 1298.58,1211.73 1299.17,1211.73 1299.76,1211.73 1300.34,1211.73 1300.93,1211.73 1301.52,1211.73 1302.1,1211.73 1302.69,1211.73 1303.27,1211.73 1303.86,1211.73 1304.45,1211.73 1305.03,1211.73 1305.62,1211.73 1306.21,1211.73 1306.79,1211.73 1307.38,1211.73 1307.97,1211.73 1308.55,1211.73 1309.14,1211.73 1309.73,1211.73 1310.31,1211.73 1310.9,1211.73 1311.48,1211.73 1312.07,1211.73 1312.66,1211.73 1313.24,1211.73 1313.83,1211.73 1314.42,1211.73 1315,1211.73 1315.59,1211.73 1316.18,1211.73 1316.76,1211.73 1317.35,1211.73 1317.93,1211.73 1318.52,1211.73 1319.11,1211.73 1319.69,1211.73 1320.28,1211.73 1320.87,1211.73 1321.45,1211.73 1322.04,1211.73 1322.63,1211.73 1323.21,1211.73 1323.8,1211.73 1324.39,1211.73 1324.97,1211.73 1325.56,1211.73 1326.14,1211.73 1326.73,1211.73 1327.32,1211.73 1327.9,1211.73 1328.49,1211.73 1329.08,1211.73 1329.66,1211.73 1330.25,1211.73 1330.84,1211.73 1331.42,1211.73 1332.01,1211.73 1332.6,1211.73 1333.18,1211.73 1333.77,1211.73 1334.35,1211.73 1334.94,1211.73 1335.53,1211.73 1336.11,1211.73 1336.7,1211.73 1337.29,1211.73 1337.87,1211.73 1338.46,1211.73 1339.05,1211.73 1339.63,1211.73 1340.22,1211.73 1340.8,1211.73 1341.39,1211.73 1341.98,1211.73 1342.56,1211.73 1343.15,1211.73 1343.74,1211.73 1344.32,1211.73 1344.91,1211.73 1345.5,1211.73 1346.08,1211.73 1346.67,1211.73 1347.26,1211.73 1347.84,1211.73 1348.43,1211.73 1349.01,1211.73 1349.6,1211.73 1350.19,1211.73 1350.77,1211.73 1351.36,1211.73 1351.95,1211.73 1352.53,1211.73 1353.12,1211.73 1353.71,1211.73 1354.29,1211.73 1354.88,1211.73 1355.47,1211.73 1356.05,1211.73 1356.64,1211.73 1357.22,1211.73 1357.81,1211.73 1358.4,1211.73 1358.98,1211.73 1359.57,1211.73 1360.16,1211.73 1360.74,1211.73 1361.33,1211.73 1361.92,1211.73 1362.5,1211.73 1363.09,1211.73 1363.68,1211.73 1364.26,1211.73 1364.85,1211.73 1365.43,1211.73 1366.02,1211.73 1366.61,1211.73 1367.19,1211.73 1367.78,1211.73 1368.37,1211.73 1368.95,1211.73 1369.54,1211.73 1370.13,1211.73 1370.71,1211.73 1371.3,1211.73 1371.88,1211.73 1372.47,1211.73 1373.06,1211.73 1373.64,1211.73 1374.23,1211.73 1374.82,1211.73 1375.4,1211.73 1375.99,1211.73 1376.58,1211.73 1377.16,1211.73 1377.75,1211.73 1378.34,1211.73 1378.92,1211.73 1379.51,1211.73 1380.09,1211.73 1380.68,1211.73 1381.27,1211.73 1381.85,1211.73 1382.44,1211.73 1383.03,1211.73 1383.61,1211.73 1384.2,1211.73 1384.79,1211.73 1385.37,1211.73 1385.96,1211.73 1386.55,1211.73 1387.13,1211.73 1387.72,1211.73 1388.3,1211.73 1388.89,1211.73 1389.48,1211.73 1390.06,1211.73 1390.65,1211.73 1391.24,1211.73 1391.82,1211.73 1392.41,1211.73 1393,1211.73 1393.58,1211.73 1394.17,1211.73 1394.75,1211.73 1395.34,1211.73 1395.93,1211.73 1396.51,1211.73 1397.1,1211.73 1397.69,1211.73 1398.27,1211.73 1398.86,1211.73 1399.45,1211.73 1400.03,1211.73 1400.62,1211.73 1401.21,1211.73 1401.79,1211.73 1402.38,1211.73 1402.96,1211.73 1403.55,1211.73 1404.14,1211.73 1404.72,1211.73 1405.31,1211.73 1405.9,1211.73 1406.48,1211.73 1407.07,1211.73 1407.66,1211.73 1408.24,1211.73 1408.83,1211.73 1409.42,1211.73 1410,1211.73 1410.59,1211.73 1411.17,1211.73 1411.76,1211.73 1412.35,1211.73 1412.93,1211.73 1413.52,1211.73 1414.11,1211.73 1414.69,1211.73 1415.28,1211.73 1415.87,1211.73 1416.45,1211.73 1417.04,1211.73 1417.63,1211.73 1418.21,1211.73 1418.8,1211.73 1419.38,1211.73 1419.97,1211.73 1420.56,1211.73 1421.14,1211.73 1421.73,1211.73 1422.32,1211.73 1422.9,1211.73 1423.49,1211.73 1424.08,1211.73 1424.66,1211.73 1425.25,1211.73 1425.83,1211.73 1426.42,1211.73 1427.01,1211.73 1427.59,1211.73 1428.18,1211.73 1428.77,1211.73 1429.35,1211.73 1429.94,1211.73 1430.53,1211.73 1431.11,1211.73 1431.7,1211.73 1432.29,1211.73 1432.87,1211.73 1433.46,1211.73 1434.04,1211.73 1434.63,1211.73 1435.22,1211.73 1435.8,1211.73 1436.39,1211.73 1436.98,1211.73 1437.56,1211.73 1438.15,1211.73 1438.74,1211.73 1439.32,1211.73 1439.91,1211.73 1440.5,1211.73 1441.08,1211.73 1441.67,1211.73 1442.25,1211.73 1442.84,1211.73 1443.43,1211.73 1444.01,1211.73 1444.6,1211.73 1445.19,1211.73 1445.77,1211.73 1446.36,1211.73 1446.95,1211.73 1447.53,1211.73 1448.12,1211.73 1448.7,1211.73 1449.29,1211.73 1449.88,1211.73 1450.46,1211.73 1451.05,1211.73 1451.64,1211.73 1452.22,1211.73 1452.81,1211.73 1453.4,1211.73 1453.98,1211.73 1454.57,1211.73 1455.16,1211.73 1455.74,1211.73 1456.33,1211.73 1456.91,1211.73 1457.5,1211.73 1458.09,1211.73 1458.67,1211.73 1459.26,1211.73 1459.85,1211.73 1460.43,1211.73 1461.02,1211.73 1461.61,1211.73 1462.19,1211.73 1462.78,1211.73 1463.37,1211.73 1463.95,1211.73 1464.54,1211.73 1465.12,1211.73 1465.71,1211.73 1466.3,1211.73 1466.88,1211.73 1467.47,1211.73 1468.06,1211.73 1468.64,1211.73 1469.23,1211.73 1469.82,1211.73 1470.4,1211.73 1470.99,1211.73 1471.57,1211.73 1472.16,1211.73 1472.75,1211.73 1473.33,1211.73 1473.92,1211.73 1474.51,1211.73 1475.09,1211.73 1475.68,1211.73 1476.27,1211.73 1476.85,1211.73 1477.44,1211.73 1478.03,1211.73 1478.61,1211.73 1479.2,1211.73 1479.78,1211.73 1480.37,1211.73 1480.96,1211.73 1481.54,1211.73 1482.13,1211.73 1482.72,1211.73 1483.3,1211.73 1483.89,1211.73 1484.48,1211.73 1485.06,1211.73 1485.65,1211.73 1486.24,1211.73 1486.82,1211.73 1487.41,1211.73 1487.99,1211.73 1488.58,1211.73 1489.17,1211.73 1489.75,1211.73 1490.34,1211.73 1490.93,1211.73 1491.51,1211.73 1492.1,1211.73 1492.69,1211.73 1493.27,1211.73 1493.86,1211.73 1494.45,1211.73 1495.03,1211.73 1495.62,1211.73 1496.2,1211.73 1496.79,1211.73 1497.38,1211.73 1497.96,1211.73 1498.55,1211.73 1499.14,1211.73 1499.72,1211.73 1500.31,1211.73 1500.9,1211.73 1501.48,1211.73 1502.07,1211.73 1502.65,1211.73 1503.24,1211.73 1503.83,1211.73 1504.41,1211.73 1505,1211.73 1505.59,1211.73 1506.17,1211.73 1506.76,1211.73 1507.35,1211.73 1507.93,1211.73 1508.52,1211.73 1509.11,1211.73 1509.69,1211.73 1510.28,1211.73 1510.86,1211.73 1511.45,1211.73 1512.04,1211.73 1512.62,1211.73 1513.21,1211.73 1513.8,1211.73 1514.38,1211.73 1514.97,1211.73 1515.56,1211.73 1516.14,1211.73 1516.73,1211.73 1517.32,1211.73 1517.9,1211.73 1518.49,1211.73 1519.07,1211.73 1519.66,1211.73 1520.25,1211.73 1520.83,1211.73 1521.42,1211.73 1522.01,1211.73 1522.59,1211.73 1523.18,1211.73 1523.77,1211.73 1524.35,1211.73 1524.94,1211.73 1525.52,1211.73 1526.11,1211.73 1526.7,1211.73 1527.28,1211.73 1527.87,1211.73 1528.46,1211.73 1529.04,1211.73 1529.63,1211.73 1530.22,1211.73 1530.8,1211.73 1531.39,1211.73 1531.98,1211.73 1532.56,1211.73 1533.15,1211.73 1533.73,1211.73 1534.32,1211.73 1534.91,1211.73 1535.49,1211.73 1536.08,1211.73 1536.67,1211.73 1537.25,1211.73 1537.84,1211.73 1538.43,1211.73 1539.01,1211.73 1539.6,1211.73 1540.19,1211.73 1540.77,1211.73 1541.36,1211.73 1541.94,1211.73 1542.53,1211.73 1543.12,1211.73 1543.7,1211.73 1544.29,1211.73 1544.88,1211.73 1545.46,1211.73 1546.05,1211.73 1546.64,1211.73 1547.22,1211.73 1547.81,1211.73 1548.4,1211.73 1548.98,1211.73 1549.57,1211.73 1550.15,1211.73 1550.74,1211.73 1551.33,1211.73 1551.91,1211.73 1552.5,1211.73 1553.09,1211.73 1553.67,1211.73 1554.26,1211.73 1554.85,1211.73 1555.43,1211.73 1556.02,1211.73 1556.6,1211.73 1557.19,1211.73 1557.78,1211.73 1558.36,1211.73 1558.95,1211.73 1559.54,1211.73 1560.12,1211.73 1560.71,1211.73 1561.3,1211.73 1561.88,1211.73 1562.47,1211.73 1563.06,1211.73 1563.64,1211.73 1564.23,1211.73 1564.81,1211.73 1565.4,1211.73 1565.99,1211.73 1566.57,1211.73 1567.16,1211.73 1567.75,1211.73 1568.33,1211.73 1568.92,1211.73 1569.51,1211.73 1570.09,1211.73 1570.68,1211.73 1571.27,1211.73 1571.85,1211.73 1572.44,1211.73 1573.02,1211.73 1573.61,1211.73 1574.2,1211.73 1574.78,1211.73 1575.37,1211.73 1575.96,1211.73 1576.54,1211.73 1577.13,1211.73 1577.72,1211.73 1578.3,1211.73 1578.89,1211.73 1579.47,1211.73 1580.06,1211.73 1580.65,1211.73 1581.23,1211.73 1581.82,1211.73 1582.41,1211.73 1582.99,1211.73 1583.58,1211.73 1584.17,1211.73 1584.75,1211.73 1585.34,1211.73 1585.93,1211.73 1586.51,1211.73 1587.1,1211.73 1587.68,1211.73 1588.27,1211.73 1588.86,1211.73 1589.44,1211.73 1590.03,1211.73 1590.62,1211.73 1591.2,1211.73 1591.79,1211.73 1592.38,1211.73 1592.96,1211.73 1593.55,1211.73 1594.14,1211.73 1594.72,1211.73 1595.31,1211.73 1595.89,1211.73 1596.48,1211.73 1597.07,1211.73 1597.65,1211.73 1598.24,1211.73 1598.83,1211.73 1599.41,1211.73 1600,1211.73 1600.59,1211.73 1601.17,1211.73 1601.76,1211.73 1602.34,1211.73 1602.93,1211.73 1603.52,1211.73 1604.1,1211.73 1604.69,1211.73 1605.28,1211.73 1605.86,1211.73 1606.45,1211.73 1607.04,1211.73 1607.62,1211.73 1608.21,1211.73 1608.8,1211.73 1609.38,1211.73 1609.97,1211.73 1610.55,1211.73 1611.14,1211.73 1611.73,1211.73 1612.31,1211.73 1612.9,1211.73 1613.49,1211.73 1614.07,1211.73 1614.66,1211.73 1615.25,1211.73 1615.83,1211.73 1616.42,1211.73 1617.01,1211.73 1617.59,1211.73 1618.18,1211.73 1618.76,1211.73 1619.35,1211.73 1619.94,1211.73 1620.52,1211.73 1621.11,1211.73 1621.7,1211.73 1622.28,1211.73 1622.87,1211.73 1623.46,1211.73 1624.04,1211.73 1624.63,1211.73 1625.22,1211.73 1625.8,1211.73 1626.39,1211.73 1626.97,1211.73 1627.56,1211.73 1628.15,1211.73 1628.73,1211.73 1629.32,1211.73 1629.91,1211.73 1630.49,1211.73 1631.08,1211.73 1631.67,1211.73 1632.25,1211.73 1632.84,1211.73 1633.42,1211.73 1634.01,1211.73 1634.6,1211.73 1635.18,1211.73 1635.77,1211.73 1636.36,1211.73 1636.94,1211.73 1637.53,1211.73 1638.12,1211.73 1638.7,1211.73 1639.29,1211.73 1639.88,1211.73 1640.46,1211.73 1641.05,1211.73 1641.63,1211.73 1642.22,1211.73 1642.81,1211.73 1643.39,1211.73 1643.98,1211.73 1644.57,1211.73 1645.15,1211.73 1645.74,1211.73 1646.33,1211.73 1646.91,1211.73 1647.5,1211.73 1648.09,1211.73 1648.67,1211.73 1649.26,1211.73 1649.84,1211.73 1650.43,1211.73 1651.02,1211.73 1651.6,1211.73 1652.19,1211.73 1652.78,1211.73 1653.36,1211.73 1653.95,1211.73 1654.54,1211.73 1655.12,1211.73 1655.71,1211.73 1656.29,1211.73 1656.88,1211.73 1657.47,1211.73 1658.05,1211.73 1658.64,1211.73 1659.23,1211.73 1659.81,1211.73 1660.4,1211.73 1660.99,1211.73 1661.57,1211.73 1662.16,1211.73 1662.75,1211.73 1663.33,1211.73 1663.92,1211.73 1664.5,1211.73 1665.09,1211.73 1665.68,1211.73 1666.26,1211.73 1666.85,1211.73 1667.44,1211.73 1668.02,1211.73 1668.61,1211.73 1669.2,1211.73 1669.78,1211.73 1670.37,1211.73 1670.96,1211.73 1671.54,1211.73 1672.13,1211.73 1672.71,1211.73 1673.3,1211.73 1673.89,1211.73 1674.47,1211.73 1675.06,1211.73 1675.65,1211.73 1676.23,1211.73 1676.82,1211.73 1677.41,1211.73 1677.99,1211.73 1678.58,1211.73 1679.17,1211.73 1679.75,1211.73 1680.34,1211.73 1680.92,1211.73 1681.51,1211.73 1682.1,1211.73 1682.68,1211.73 1683.27,1211.73 1683.86,1211.73 1684.44,1211.73 1685.03,1211.73 1685.62,1211.73 1686.2,1211.73 1686.79,1211.73 1687.37,1211.73 1687.96,1211.73 1688.55,1211.73 1689.13,1211.73 1689.72,1211.73 1690.31,1211.73 1690.89,1211.73 1691.48,1211.73 1692.07,1211.73 1692.65,1211.73 1693.24,1211.73 1693.83,1211.73 1694.41,1211.73 1695,1211.73 1695.58,1211.73 1696.17,1211.73 1696.76,1211.73 1697.34,1211.73 1697.93,1211.73 1698.52,1211.73 1699.1,1211.73 1699.69,1211.73 1700.28,1211.73 1700.86,1211.73 1701.45,1211.73 1702.04,1211.73 1702.62,1211.73 1703.21,1211.73 1703.79,1211.73 1704.38,1211.73 1704.97,1211.73 1705.55,1211.73 1706.14,1211.73 1706.73,1211.73 1707.31,1211.73 1707.9,1211.73 1708.49,1211.73 1709.07,1211.73 1709.66,1211.73 1710.24,1211.73 1710.83,1211.73 1711.42,1211.73 1712,1211.73 1712.59,1211.73 1713.18,1211.73 1713.76,1211.73 1714.35,1211.73 1714.94,1211.73 1715.52,1211.73 1716.11,1211.73 1716.7,1211.73 1717.28,1211.73 1717.87,1211.73 1718.45,1211.73 1719.04,1211.73 1719.63,1211.73 1720.21,1211.73 1720.8,1211.73 1721.39,1211.73 1721.97,1211.73 1722.56,1211.73 1723.15,1211.73 1723.73,1211.73 1724.32,1211.73 1724.91,1211.73 1725.49,1211.73 1726.08,1211.73 1726.66,1211.73 1727.25,1211.73 1727.84,1211.73 1728.42,1211.73 1729.01,1211.73 1729.6,1211.73 1730.18,1211.73 1730.77,1211.73 1731.36,1211.73 1731.94,1211.73 1732.53,1211.73 1733.11,1211.73 1733.7,1211.73 1734.29,1211.73 1734.87,1211.73 1735.46,1211.73 1736.05,1211.73 1736.63,1211.73 1737.22,1211.73 1737.81,1211.73 1738.39,1211.73 1738.98,1211.73 1739.57,1211.73 1740.15,1211.73 1740.74,1211.73 1741.32,1211.73 1741.91,1211.73 1742.5,1211.73 1743.08,1211.73 1743.67,1211.73 1744.26,1211.73 1744.84,1211.73 1745.43,1211.73 1746.02,1211.73 1746.6,1211.73 1747.19,1211.73 1747.78,1211.73 1748.36,1211.73 1748.95,1211.73 1749.53,1211.73 1750.12,1211.73 1750.71,1211.73 1751.29,1211.73 1751.88,1211.73 1752.47,1211.73 1753.05,1211.73 1753.64,1211.73 1754.23,1211.73 1754.81,1211.73 1755.4,1211.73 1755.99,1211.73 1756.57,1211.73 1757.16,1211.73 1757.74,1211.73 1758.33,1211.73 1758.92,1211.73 1759.5,1211.73 1760.09,1211.73 1760.68,1211.73 1761.26,1211.73 1761.85,1211.73 1762.44,1211.73 1763.02,1211.73 1763.61,1211.73 1764.19,1211.73 1764.78,1211.73 1765.37,1211.73 1765.95,1211.73 1766.54,1211.73 1767.13,1211.73 1767.71,1211.73 1768.3,1211.73 1768.89,1211.73 1769.47,1211.73 1770.06,1211.73 1770.65,1211.73 1771.23,1211.73 1771.82,1211.73 1772.4,1211.73 1772.99,1211.73 1773.58,1211.73 1774.16,1211.73 1774.75,1211.73 1775.34,1211.73 1775.92,1211.73 1776.51,1211.73 1777.1,1211.73 1777.68,1211.73 1778.27,1211.73 1778.86,1211.73 1779.44,1211.73 1780.03,1211.73 1780.61,1211.73 1781.2,1211.73 1781.79,1211.73 1782.37,1211.73 1782.96,1211.73 1783.55,1211.73 1784.13,1211.73 1784.72,1211.73 1785.31,1211.73 1785.89,1211.73 1786.48,1211.73 1787.06,1211.73 1787.65,1211.73 1788.24,1211.73 1788.82,1211.73 1789.41,1211.73 1790,1211.73 1790.58,1211.73 1791.17,1211.73 1791.76,1211.73 1792.34,1211.73 1792.93,1211.73 1793.52,1211.73 1794.1,1211.73 1794.69,1211.73 1795.27,1211.73 1795.86,1211.73 1796.45,1211.73 1797.03,1211.73 1797.62,1211.73 1798.21,1211.73 1798.79,1211.73 1799.38,1211.73 1799.97,1211.73 1800.55,1211.73 1801.14,1211.73 1801.73,1211.73 1802.31,1211.73 1802.9,1211.73 1803.48,1211.73 1804.07,1211.73 1804.66,1211.73 1805.24,1211.73 1805.83,1211.73 1806.42,1211.73 1807,1211.73 1807.59,1211.73 1808.18,1211.73 1808.76,1211.73 1809.35,1211.73 1809.94,1211.73 1810.52,1211.73 1811.11,1211.73 1811.69,1211.73 1812.28,1211.73 1812.87,1211.73 1813.45,1211.73 1814.04,1211.73 1814.63,1211.73 1815.21,1211.73 1815.8,1211.73 1816.39,1211.73 1816.97,1211.73 1817.56,1211.73 1818.14,1211.73 1818.73,1211.73 1819.32,1211.73 1819.9,1211.73 1820.49,1211.73 1821.08,1211.73 1821.66,1211.73 1822.25,1211.73 1822.84,1211.73 1823.42,1211.73 1824.01,1211.73 1824.6,1211.73 1825.18,1211.73 1825.77,1211.73 1826.35,1211.73 1826.94,1211.73 1827.53,1211.73 1828.11,1211.73 1828.7,1211.73 1829.29,1211.73 1829.87,1211.73 1830.46,1211.73 1831.05,1211.73 1831.63,1211.73 1832.22,1211.73 1832.81,1211.73 1833.39,1211.73 1833.98,1211.73 1834.56,1211.73 1835.15,1211.73 1835.74,1211.73 1836.32,1211.73 1836.91,1211.73 1837.5,1211.73 1838.08,1211.73 1838.67,1211.73 1839.26,1211.73 1839.84,1211.73 1840.43,1211.73 1841.01,1211.73 1841.6,1211.73 1842.19,1211.73 1842.77,1211.73 1843.36,1211.73 1843.95,1211.73 1844.53,1211.73 1845.12,1211.73 1845.71,1211.73 1846.29,1211.73 1846.88,1211.73 1847.47,1211.73 1848.05,1211.73 1848.64,1211.73 1849.22,1211.73 1849.81,1211.73 1850.4,1211.73 1850.98,1211.73 1851.57,1211.73 1852.16,1211.73 1852.74,1211.73 1853.33,1211.73 1853.92,1211.73 1854.5,1211.73 1855.09,1211.73 1855.68,1211.73 1856.26,1211.73 1856.85,1211.73 1857.43,1211.73 1858.02,1211.73 1858.61,1211.73 1859.19,1211.73 1859.78,1211.73 1860.37,1211.73 1860.95,1211.73 1861.54,1211.73 1862.13,1211.73 1862.71,1211.73 1863.3,1211.73 1863.88,1211.73 1864.47,1211.73 1865.06,1211.73 1865.64,1211.73 1866.23,1211.73 1866.82,1211.73 1867.4,1211.73 1867.99,1211.73 1868.58,1211.73 1869.16,1211.73 1869.75,1211.73 1870.34,1211.73 1870.92,1211.73 1871.51,1211.73 1872.09,1211.73 1872.68,1211.73 1873.27,1211.73 1873.85,1211.73 1874.44,1211.73 1875.03,1211.73 1875.61,1211.73 1876.2,1211.73 1876.79,1211.73 1877.37,1211.73 1877.96,1211.73 1878.55,1211.73 1879.13,1211.73 1879.72,1211.73 1880.3,1211.73 1880.89,1211.73 1881.48,1211.73 1882.06,1211.73 1882.65,1211.73 1883.24,1211.73 1883.82,1211.73 1884.41,1211.73 1885,1211.73 1885.58,1211.73 1886.17,1211.73 1886.76,1211.73 1887.34,1211.73 1887.93,1211.73 1888.51,1211.73 1889.1,1211.73 1889.69,1211.73 1890.27,1211.73 1890.86,1211.73 1891.45,1211.73 1892.03,1211.73 1892.62,1211.73 1893.21,1211.73 1893.79,1211.73 1894.38,1211.73 1894.96,1211.73 1895.55,1211.73 1896.14,1211.73 1896.72,1211.73 1897.31,1211.73 1897.9,1211.73 1898.48,1211.73 1899.07,1211.73 1899.66,1211.73 1900.24,1211.73 1900.83,1211.73 1901.42,1211.73 1902,1211.73 1902.59,1211.73 1903.17,1211.73 1903.76,1211.73 1904.35,1211.73 1904.93,1211.73 1905.52,1211.73 1906.11,1211.73 1906.69,1211.73 1907.28,1211.73 1907.87,1211.73 1908.45,1211.73 1909.04,1211.73 1909.63,1211.73 1910.21,1211.73 1910.8,1211.73 1911.38,1211.73 1911.97,1211.73 1912.56,1211.73 1913.14,1211.73 1913.73,1211.73 1914.32,1211.73 1914.9,1211.73 1915.49,1211.73 1916.08,1211.73 1916.66,1211.73 1917.25,1211.73 1917.83,1211.73 1918.42,1211.73 1919.01,1211.73 1919.59,1211.73 1920.18,1211.73 1920.77,1211.73 1921.35,1211.73 1921.94,1211.73 1922.53,1211.73 1923.11,1211.73 1923.7,1211.73 1924.29,1211.73 1924.87,1211.73 1925.46,1211.73 1926.04,1211.73 1926.63,1211.73 1927.22,1211.73 1927.8,1211.73 1928.39,1211.73 1928.98,1211.73 1929.56,1211.73 1930.15,1211.73 1930.74,1211.73 1931.32,1211.73 1931.91,1211.73 1932.5,1211.73 1933.08,1211.73 1933.67,1211.73 1934.25,1211.73 1934.84,1211.73 1935.43,1211.73 1936.01,1211.73 1936.6,1211.73 1937.19,1211.73 1937.77,1211.73 1938.36,1211.73 1938.95,1211.73 1939.53,1211.73 1940.12,1211.73 1940.71,1211.73 1941.29,1211.73 1941.88,1211.73 1942.46,1211.73 1943.05,1211.73 1943.64,1211.73 1944.22,1211.73 1944.81,1211.73 1945.4,1211.73 1945.98,1211.73 1946.57,1211.73 1947.16,1211.73 1947.74,1211.73 1948.33,1211.73 1948.91,1211.73 1949.5,1211.73 1950.09,1211.73 1950.67,1211.73 1951.26,1211.73 1951.85,1211.73 1952.43,1211.73 1953.02,1211.73 1953.61,1211.73 1954.19,1211.73 1954.78,1211.73 1955.37,1211.73 1955.95,1211.73 1956.54,1211.73 1957.12,1211.73 1957.71,1211.73 1958.3,1211.73 1958.88,1211.73 1959.47,1211.73 1960.06,1211.73 1960.64,1211.73 1961.23,1211.73 1961.82,1211.73 1962.4,1211.73 1962.99,1211.73 1963.58,1211.73 1964.16,1211.73 1964.75,1211.73 1965.33,1211.73 1965.92,1211.73 1966.51,1211.73 1967.09,1211.73 1967.68,1211.73 1968.27,1211.73 1968.85,1211.73 1969.44,1211.73 1970.03,1211.73 1970.61,1211.73 1971.2,1211.73 1971.78,1211.73 1972.37,1211.73 1972.96,1211.73 1973.54,1211.73 1974.13,1211.73 1974.72,1211.73 1975.3,1211.73 1975.89,1211.73 1976.48,1211.73 1977.06,1211.73 1977.65,1211.73 1978.24,1211.73 1978.82,1211.73 1979.41,1211.73 1979.99,1211.73 1980.58,1211.73 1981.17,1211.73 1981.75,1211.73 1982.34,1211.73 1982.93,1211.73 1983.51,1211.73 1984.1,1211.73 1984.69,1211.73 1985.27,1211.73 1985.86,1211.73 1986.45,1211.73 1987.03,1211.73 1987.62,1211.73 1988.2,1211.73 1988.79,1211.73 1989.38,1211.73 1989.96,1211.73 1990.55,1211.73 1991.14,1211.73 1991.72,1211.73 1992.31,1211.73 1992.9,1211.73 1993.48,1211.73 1994.07,1211.73 1994.65,1211.73 1995.24,1211.73 1995.83,1211.73 1996.41,1211.73 1997,1211.73 1997.59,1211.73 1998.17,1211.73 1998.76,1211.73 1999.35,1211.73 1999.93,1211.73 2000.52,1211.73 2001.11,1211.73 2001.69,1211.73 2002.28,1211.73 2002.86,1211.73 2003.45,1211.73 2004.04,1211.73 2004.62,1211.73 2005.21,1211.73 2005.8,1211.73 2006.38,1211.73 2006.97,1211.73 2007.56,1211.73 2008.14,1211.73 2008.73,1211.73 2009.32,1211.73 2009.9,1211.73 2010.49,1211.73 2011.07,1211.73 2011.66,1211.73 2012.25,1211.73 2012.83,1211.73 2013.42,1211.73 2014.01,1211.73 2014.59,1211.73 2015.18,1211.73 2015.77,1211.73 2016.35,1211.73 2016.94,1211.73 2017.53,1211.73 2018.11,1211.73 2018.7,1211.73 2019.28,1211.73 2019.87,1211.73 2020.46,1211.73 2021.04,1211.73 2021.63,1211.73 2022.22,1211.73 2022.8,1211.73 2023.39,1211.73 2023.98,1211.73 2024.56,1211.73 2025.15,1211.73 2025.73,1211.73 2026.32,1211.73 2026.91,1211.73 2027.49,1211.73 2028.08,1211.73 2028.67,1211.73 2029.25,1211.73 2029.84,1211.73 2030.43,1211.73 2031.01,1211.73 2031.6,1211.73 2032.19,1211.73 2032.77,1211.73 2033.36,1211.73 2033.94,1211.73 2034.53,1211.73 2035.12,1211.73 2035.7,1211.73 2036.29,1211.73 2036.88,1211.73 2037.46,1211.73 2038.05,1211.73 2038.64,1211.73 2039.22,1211.73 2039.81,1211.73 2040.4,1211.73 2040.98,1211.73 2041.57,1211.73 2042.15,1211.73 2042.74,1211.73 2043.33,1211.73 2043.91,1211.73 2044.5,1211.73 2045.09,1211.73 2045.67,1211.73 2046.26,1211.73 2046.85,1211.73 2047.43,1211.73 2048.02,1211.73 2048.6,1211.73 2049.19,1211.73 2049.78,1211.73 2050.36,1211.73 2050.95,1211.73 2051.54,1211.73 2052.12,1211.73 2052.71,1211.73 2053.3,1211.73 2053.88,1211.73 2054.47,1211.73 2055.06,1211.73 2055.64,1211.73 2056.23,1211.73 2056.81,1211.73 2057.4,1211.73 2057.99,1211.73 2058.57,1211.73 2059.16,1211.73 2059.75,1211.73 2060.33,1211.73 2060.92,1211.73 2061.51,1211.73 2062.09,1211.73 2062.68,1211.73 2063.27,1211.73 2063.85,1211.73 2064.44,1211.73 2065.02,1211.73 2065.61,1211.73 2066.2,1211.73 2066.78,1211.73 2067.37,1211.73 2067.96,1211.73 2068.54,1211.73 2069.13,1211.73 2069.72,1211.73 2070.3,1211.73 2070.89,1211.73 2071.48,1211.73 2072.06,1211.73 2072.65,1211.73 2073.23,1211.73 2073.82,1211.73 2074.41,1211.73 2074.99,1211.73 2075.58,1211.73 2076.17,1211.73 2076.75,1211.73 2077.34,1211.73 2077.93,1211.73 2078.51,1211.73 2079.1,1211.73 2079.68,1211.73 2080.27,1211.73 2080.86,1211.73 2081.44,1211.73 2082.03,1211.73 2082.62,1211.73 2083.2,1211.73 2083.79,1211.73 2084.38,1211.73 2084.96,1211.73 2085.55,1211.73 2086.14,1211.73 2086.72,1211.73 2087.31,1211.73 2087.89,1211.73 2088.48,1211.73 2089.07,1211.73 2089.65,1211.73 2090.24,1211.73 2090.83,1211.73 2091.41,1211.73 2092,1211.73 2092.59,1211.73 2093.17,1211.73 2093.76,1211.73 2094.35,1211.73 2094.93,1211.73 2095.52,1211.73 2096.1,1211.73 2096.69,1211.73 2097.28,1211.73 2097.86,1211.73 2098.45,1211.73 2099.04,1211.73 2099.62,1211.73 2100.21,1211.73 2100.8,1211.73 2101.38,1211.73 2101.97,1211.73 2102.55,1211.73 2103.14,1211.73 2103.73,1211.73 2104.31,1211.73 2104.9,1211.73 2105.49,1211.73 2106.07,1211.73 2106.66,1211.73 2107.25,1211.73 2107.83,1211.73 2108.42,1211.73 2109.01,1211.73 2109.59,1211.73 2110.18,1211.73 2110.76,1211.73 2111.35,1211.73 2111.94,1211.73 2112.52,1211.73 2113.11,1211.73 2113.7,1211.73 2114.28,1211.73 2114.87,1211.73 2115.46,1211.73 2116.04,1211.73 2116.63,1211.73 2117.22,1211.73 2117.8,1211.73 2118.39,1211.73 2118.97,1211.73 2119.56,1211.73 2120.15,1211.73 2120.73,1211.73 2121.32,1211.73 2121.91,1211.73 2122.49,1211.73 2123.08,1211.73 2123.67,1211.73 2124.25,1211.73 2124.84,1211.73 2125.42,1211.73 2126.01,1211.73 2126.6,1211.73 2127.18,1211.73 2127.77,1211.73 2128.36,1211.73 2128.94,1211.73 2129.53,1211.73 2130.12,1211.73 2130.7,1211.73 2131.29,1211.73 2131.88,1211.73 2132.46,1211.73 2133.05,1211.73 2133.63,1211.73 2134.22,1211.73 2134.81,1211.73 2135.39,1211.73 2135.98,1211.73 2136.57,1211.73 2137.15,1211.73 2137.74,1211.73 2138.33,1211.73 2138.91,1211.73 2139.5,1211.73 2140.09,1211.73 2140.67,1211.73 2141.26,1211.73 2141.84,1211.73 2142.43,1211.73 2143.02,1211.73 2143.6,1211.73 2144.19,1211.73 2144.78,1211.73 2145.36,1211.73 2145.95,1211.73 2146.54,1211.73 2147.12,1211.73 2147.71,1211.73 2148.3,1211.73 2148.88,1211.73 2149.47,1211.73 2150.05,1211.73 2150.64,1211.73 2151.23,1211.73 2151.81,1211.73 2152.4,1211.73 2152.99,1211.73 2153.57,1211.73 2154.16,1211.73 2154.75,1211.73 2155.33,1211.73 2155.92,1211.73 2156.5,1211.73 2157.09,1211.73 2157.68,1211.73 2158.26,1211.73 \"/>\n<polyline clip-path=\"url(#clip192)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.06,1193.74 1399.49,899.083 \"/>\n<polyline clip-path=\"url(#clip192)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1229.25 985.439,1193.74 2158.26,1193.74 2158.26,1229.25 985.439,1229.25 \"/>\n<path clip-path=\"url(#clip190)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip190)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip190)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip190)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip190)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip190)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip193\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip193)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip193)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip193)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip193)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip193)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip190)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip193)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip193)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip193)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip193)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip193)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip190)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip190)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip190)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip193)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-4871.05 163.792,-4563.53 164.351,-4381.08 164.91,-5358.06 165.469,-5191.32 166.029,-6057.57 166.588,-6866.22 167.147,-7601.33 167.706,-8252.38 168.266,-8855.28 168.825,-8606.42 169.384,-9129.14 169.943,-9587.55 170.503,-9985.03 171.062,-10356.7 171.621,-10672.8 172.18,-10394.1 172.74,-10663.6 173.299,-10887.7 173.858,-11070.9 174.417,-11228.8 174.977,-11349.2 175.536,-11444.7 176.095,-11522.3 176.655,-11226.6 177.214,-11267.4 177.773,-11274.1 178.332,-10987.2 178.892,-10968 179.451,-10932.9 180.01,-10876.5 180.569,-10809.9 181.129,-10315 181.688,-9854.78 182.247,-9271.4 182.806,-9090.1 183.366,-9061.32 183.925,-9021.15 184.484,-8977.54 185.043,-8786.53 185.603,-8330.11 186.162,-8254.6 186.721,-8047.15 187.28,-7847.18 187.84,-7759.12 188.399,-7661.14 188.958,-7466.79 189.517,-7352.19 190.077,-6885.06 190.636,-6612.14 191.195,-6362.58 191.754,-6265.47 192.314,-6162.55 192.873,-6051.09 193.432,-5737.84 193.991,-5442.45 194.551,-5353.47 195.11,-5194.26 195.669,-5045.12 196.228,-4842.1 196.788,-4699.61 197.347,-4503.72 197.906,-4422.34 198.465,-4238.1 199.025,-4157.77 199.584,-3982.95 200.143,-3903.47 200.702,-3731.55 201.262,-3607.1 201.821,-3407.95 202.38,-3251.38 202.939,-3180.4 203.499,-2998.71 204.058,-2781.78 204.617,-2714.8 205.176,-2579.85 205.736,-2448.37 206.295,-2387.91 206.854,-2264.87 207.413,-2177.37 207.973,-2117.28 208.532,-2059.56 209.091,-2003.37 209.65,-1917.4 210.21,-1835.13 210.769,-1692.21 211.328,-1612.3 211.887,-1448.65 212.447,-1401.5 213.006,-1329.43 213.565,-1231.93 214.124,-1216.91 214.684,-1173.84 215.243,-1049.08 215.802,-983.648 216.361,-846.34 216.921,-736.058 217.48,-630.827 218.039,-602.498 218.598,-598.285 219.158,-519.746 219.717,-494.995 220.276,-373.329 220.835,-349.707 221.395,-325.552 221.954,-190.062 222.513,-149.675 223.072,-109.782 223.632,-74.4907 224.191,-78.5903 224.75,-17.749 225.309,21.5948 225.869,37.6408 226.428,75.0791 226.987,91.6726 227.546,126.011 228.106,183.654 228.665,195.866 229.224,232.853 229.783,247.13 230.343,243.311 230.902,340.229 231.461,353.747 232.02,385.125 232.58,413.859 233.139,442.983 233.698,529.445 234.257,537.904 234.817,581.918 235.376,605.699 235.935,681.81 236.494,660.345 237.054,695.444 237.613,714.664 238.172,712.102 238.731,745.769 239.291,742.22 239.85,746.244 240.409,761.598 240.968,761.348 241.528,777.421 242.087,777.329 242.646,793.02 243.205,790.457 243.765,825.678 244.324,824.222 244.883,842.443 245.442,838.4 246.002,855.39 246.561,855.504 247.12,835.501 247.679,835.661 248.239,853.312 248.798,889.622 249.357,940.82 249.916,970.091 250.476,1015.68 251.035,1026.61 251.594,1019.19 252.153,1044.17 252.713,1032.16 253.272,1027.27 253.831,1022.57 254.39,1050.08 254.95,1038.64 255.509,1050.23 256.068,1042.69 256.627,984.12 257.187,999.518 257.746,1030.42 258.305,1043.37 258.864,1052.14 259.424,1060.55 259.983,1015.69 260.542,976.34 261.101,991.935 261.661,1024.21 262.22,1031.17 262.779,1041.5 263.338,1069.58 263.898,1062.1 264.457,1088.23 265.016,1063.8 265.575,1054.14 266.135,1067.15 266.694,1077.04 267.253,1050.88 267.812,1043.03 268.372,1070.93 268.931,1048.82 269.49,1025.5 270.049,1037.34 270.609,1030.38 271.168,1058.04 271.727,1083.37 272.286,1057.21 272.846,1083.53 273.405,1088.45 273.964,1076.36 274.523,1102.06 275.083,1126.32 275.642,1117.64 276.201,1107.16 276.76,1099.22 277.32,1054.08 277.879,1062.96 278.438,1039.77 278.997,1019.93 279.557,1014.1 280.116,1039.86 280.675,1045.32 281.234,1069.51 281.794,1044.46 282.353,1017.14 282.912,1060.43 283.471,1036.61 284.031,1047.91 284.59,1057.18 285.149,1066.8 285.708,1076.12 286.268,1086.15 286.827,1093.11 287.386,1097.31 287.945,1087.18 288.505,1061.98 289.064,1054.45 289.623,1047.21 290.182,1025.05 290.742,1037.62 291.301,1014.51 291.86,1027.24 292.419,1041.08 292.979,1018.66 293.538,1011.65 294.097,988.646 294.656,983.041 295.216,977.913 295.775,1021.52 296.334,1050 296.893,1042.9 297.453,1086.52 298.012,1127.36 298.571,1117.84 299.13,1106.98 299.69,1080.3 300.249,1085.49 300.808,1091.97 301.368,1112.83 301.927,1135.51 302.486,1139.65 303.045,1160.93 303.605,1131.54 304.164,1152.13 304.723,1110.01 305.282,1085.78 305.842,1075.71 306.401,1097.83 306.96,1087.29 307.519,1090.72 308.079,1080.33 308.638,1070.09 309.197,1043.15 309.756,1069.02 310.316,1091.28 310.875,1082.86 311.434,1072.24 311.993,1078.8 312.553,1054.02 313.112,1074.77 313.671,1080.59 314.23,1120.4 314.79,1073.43 315.349,1033.23 315.908,1023.88 316.467,1014.82 317.027,1008.11 317.586,1018.92 318.145,962.563 318.704,940.59 319.264,951.556 319.823,914.326 320.382,896.066 320.941,889.387 321.501,906.18 322.06,899.145 322.619,879.156 323.178,862.341 323.738,844.844 324.297,861.851 324.856,827.372 325.415,863.658 325.975,830.543 326.534,867.992 327.093,871.098 327.652,871.242 328.212,872.795 328.771,856.089 329.33,841.315 329.889,856.695 330.449,858.326 331.008,841.575 331.567,856.088 332.126,887.134 332.686,867.736 333.245,848.927 333.804,864.987 334.363,879.49 334.923,879.082 335.482,826.104 336.041,862.529 336.6,859.895 337.16,872.748 337.719,876.038 338.278,837.216 338.837,822.934 339.397,839.734 339.956,823.607 340.515,823.513 341.074,810.537 341.634,845.82 342.193,848.749 342.752,869.08 343.311,900.457 343.871,961.078 344.43,986.913 344.989,998.189 345.548,988.935 346.108,994.711 346.667,1021.69 347.226,930.812 347.785,892.184 348.345,938.751 348.904,931.969 349.463,931.224 350.022,942.422 350.582,922.264 351.141,887.517 351.7,904.893 352.259,916.865 352.819,883.413 353.378,863.39 353.937,845.776 354.496,845.519 355.056,844.919 355.615,845.429 356.174,858.187 356.733,860.595 357.293,853.927 357.852,850.304 358.411,865.388 358.97,865.197 359.53,859.635 360.089,857.222 360.648,870.682 361.207,868.242 361.767,881.143 362.326,877.796 362.885,909.492 363.444,901.464 364.004,944.249 364.563,921.253 365.122,879.668 365.681,891.331 366.241,868.951 366.8,884.146 367.359,879.834 367.918,876.305 368.478,875.545 369.037,870.671 369.596,866.87 370.155,894.587 370.715,871.872 371.274,869.993 371.833,897.808 372.392,876.821 372.952,829.996 373.511,832.347 374.07,845.084 374.629,893.432 375.189,889.101 375.748,874.722 376.307,889.961 376.866,869.478 377.426,831.039 377.985,829.192 378.544,827.936 379.103,858.433 379.663,853.867 380.222,855.346 380.781,836.41 381.34,832.95 381.9,812.972 382.459,795.545 383.018,797.742 383.577,795.949 384.137,795.14 384.696,812.981 385.255,842.443 385.814,819.124 386.374,816.004 386.933,815.324 387.492,811.31 388.051,806.496 388.611,772.665 389.17,758.131 389.729,746.048 390.288,747.007 390.848,781.988 391.407,800.505 391.966,815.946 392.525,811.811 393.085,811.2 393.644,810.014 394.203,822.335 394.762,821.426 395.322,818.043 395.881,801.646 396.44,815.629 396.999,800.751 397.559,803.696 398.118,786.152 398.677,785.378 399.236,802.239 399.796,770.373 400.355,772.194 400.914,756.176 401.473,773.947 402.033,772.673 402.592,744.993 403.151,764.351 403.71,777.986 404.27,762.891 404.829,764.085 405.388,764.061 405.947,778.971 406.507,776.85 407.066,761.015 407.625,762.643 408.184,760.597 408.744,777.336 409.303,776.092 409.862,776.453 410.421,823.477 410.981,837.525 411.54,869.019 412.099,864.891 412.658,827.403 413.218,824.496 413.777,838.31 414.336,835.044 414.895,833.235 415.455,830.714 416.014,844.519 416.573,838.678 417.132,836.843 417.692,850.473 418.251,863.233 418.81,860.118 419.369,854.545 419.929,851.749 420.488,875.134 421.047,885.512 421.606,865.105 422.166,925.042 422.725,915.559 423.284,891.177 423.843,917.532 424.403,937.729 424.962,944.263 425.521,951.732 426.08,940.951 426.64,947.515 427.199,936.924 427.758,878.445 428.318,856.9 428.877,837.147 429.436,850.502 429.995,830.587 430.555,825.679 431.114,837.457 431.673,832.666 432.232,871.566 432.792,895.115 433.351,908.44 433.91,870.58 434.469,866.459 435.029,911.407 435.588,889.69 436.147,863.525 436.706,858.731 437.266,868.792 437.825,798.11 438.384,797.2 438.943,795.442 439.503,810.318 440.062,771.629 440.621,770.217 441.18,768.472 441.74,730.885 442.299,765.658 442.858,767.55 443.417,796.141 443.977,790.08 444.536,742.336 445.095,746.213 445.654,714.039 446.214,714.84 446.773,702.794 447.332,702.27 447.891,700.795 448.451,706.846 449.01,742.268 449.569,707.478 450.128,690.907 450.688,711.17 451.247,746.597 451.806,750.368 452.365,751.374 452.925,752.716 453.484,722.426 454.043,725.104 454.602,695.011 455.162,711.679 455.721,678.302 456.28,651.128 456.839,639.702 457.399,680.317 457.958,699.618 458.517,701.198 459.076,668.935 459.636,674.856 460.195,678.373 460.754,681.943 461.313,699.928 461.873,765.433 462.432,782.476 462.991,766.414 463.55,748.738 464.11,749.798 464.669,715.639 465.228,733.576 465.787,737.856 466.347,735.786 466.906,734.93 467.465,735.159 468.024,737.118 468.584,734.16 469.143,733.452 469.702,752.896 470.261,732.949 470.821,734.523 471.38,699.304 471.939,732.262 472.498,697.835 473.058,716.479 473.617,735.912 474.176,734.181 474.735,740.102 475.295,741.026 475.854,742.163 476.413,758.245 476.972,725.362 477.532,693.018 478.091,730.268 478.65,746.711 479.209,715.157 479.769,700.544 480.328,685.833 480.887,718.432 481.446,752.167 482.006,736.858 482.565,722.409 483.124,723.321 483.683,758.054 484.243,741.385 484.802,739.878 485.361,754.904 485.92,740.694 486.48,772.353 487.039,801.908 487.598,847.227 488.157,826.561 488.717,803.833 489.276,812.551 489.835,765.033 490.394,763.507 490.954,779.931 491.513,773.843 492.072,800.822 492.631,782.913 493.191,795.707 493.75,777.617 494.309,776.774 494.868,775.229 495.428,772.596 495.987,768.833 496.546,750.429 497.105,752.87 497.665,751.697 498.224,737.388 498.783,736.781 499.342,704.126 499.902,704.049 500.461,686.303 501.02,704.397 501.579,708.649 502.139,710.845 502.698,760.947 503.257,758.846 503.816,742.676 504.376,758.397 504.935,757.367 505.494,738.921 506.053,757.996 506.613,757.401 507.172,773.97 507.731,801.961 508.29,827.993 508.85,825 509.409,820.603 509.968,848.263 510.527,839.502 511.087,852.497 511.646,846.09 512.205,836.492 512.764,815.846 513.324,777.979 513.883,791.831 514.442,790.153 515.001,834.35 515.561,861.737 516.12,856.622 516.679,850.649 517.238,842.028 517.798,854.569 518.357,849.833 518.916,842.912 519.475,834.237 520.035,829.098 520.594,770.583 521.153,752.484 521.712,782.527 522.272,744.83 522.831,711.167 523.39,774.128 523.949,786.665 524.509,781.176 525.068,810.807 525.627,806.188 526.186,802.34 526.746,793.54 527.305,787.773 527.864,732.713 528.423,778.516 528.983,724.922 529.542,691.782 530.101,706.594 530.66,723.9 531.22,707.614 531.779,673.665 532.338,644.78 532.897,679.727 533.457,665.659 534.016,699.155 534.575,736.017 535.134,765.99 535.694,759.221 536.253,754.002 536.812,750.408 537.371,765.956 537.931,699.515 538.49,703.144 539.049,722.414 539.608,705.938 540.168,692.658 540.727,708.26 541.286,695.115 541.845,710.548 542.405,725.113 542.964,709.014 543.523,776.471 544.082,773.372 544.642,755.833 545.201,770.37 545.76,768.339 546.319,763.81 546.879,746.288 547.438,790.238 547.997,818.695 548.556,794.477 549.116,774.444 549.675,806.546 550.234,784.676 550.793,782.41 551.353,764.69 551.912,763.278 552.471,744.326 553.031,758.133 553.59,757.957 554.149,771.979 554.708,765.831 555.268,745.331 555.827,707.541 556.386,708.262 556.945,757.186 557.505,721.962 558.064,721.195 558.623,702.645 559.182,715.006 559.742,710.905 560.301,725.465 560.86,725.012 561.419,710.614 561.979,681.198 562.538,684.107 563.097,702.761 563.656,721.34 564.216,736.768 564.775,736.062 565.334,718.115 565.893,705.694 566.453,686.702 567.012,685.333 567.571,672.443 568.13,673.582 568.69,677.12 569.249,677.539 569.808,743.859 570.367,759.17 570.927,757.97 571.486,727.404 572.045,727.219 572.604,706.927 573.164,694.946 573.723,692.106 574.282,707 574.841,721.414 575.401,719.741 575.96,703.723 576.519,720.834 577.078,758.519 577.638,756.248 578.197,786.421 578.756,782.361 579.315,765.753 579.875,759.714 580.434,741.062 580.993,739.256 581.552,735.075 582.112,717.983 582.671,702.371 583.23,686.603 583.789,687.794 584.349,707.478 584.908,659.684 585.467,660.793 586.026,679.705 586.586,680.821 587.145,647.325 587.704,682.071 588.263,670.821 588.823,690.489 589.382,692.18 589.941,693.463 590.5,693.3 591.06,678.016 591.619,683.276 592.178,669.029 592.737,655.644 593.297,658.442 593.856,661.15 594.415,663.766 594.974,667.751 595.534,684.804 596.093,668.677 596.652,684.523 597.211,699.817 597.771,696.456 598.33,696.212 598.889,683.187 599.448,701.043 600.008,734.3 600.567,719.685 601.126,736.034 601.685,735.137 602.245,744.42 602.804,742.869 603.363,757.323 603.922,753.423 604.482,734.024 605.041,752.29 605.6,722.158 606.159,740.598 606.719,723.695 607.278,771.863 607.837,735.187 608.396,732.313 608.956,717.496 609.515,736.706 610.074,734.731 610.633,700.639 611.193,700.938 611.752,717.312 612.311,731.378 612.87,714.747 613.43,715.896 613.989,715.032 614.548,716.277 615.107,715.681 615.667,735.104 616.226,682.465 616.785,685.634 617.344,685.653 617.904,699.08 618.463,698.166 619.022,681.83 619.581,648.617 620.141,651.464 620.7,654.082 621.259,656.38 621.818,640.483 622.378,690.144 622.937,721.526 623.496,722.098 624.055,702.91 624.615,704.077 625.174,704.038 625.733,687.283 626.292,689.441 626.852,707.584 627.411,704.297 627.97,703.836 628.529,700.532 629.089,698.851 629.648,730.105 630.207,728.542 630.766,712.605 631.326,714.727 631.885,717.731 632.444,747.5 633.003,760.66 633.563,773.358 634.122,788.044 634.681,787.201 635.24,814.73 635.8,793.482 636.359,790.806 636.918,787.797 637.477,817.844 638.037,828.65 638.596,836.745 639.155,845.988 639.714,855.202 640.274,833.356 640.833,827.549 641.392,822.009 641.951,818.596 642.511,829.657 643.07,825.727 643.629,836.707 644.188,847.088 644.748,838.221 645.307,781.208 645.866,792.722 646.425,753.686 646.985,748.692 647.544,712.563 648.103,725.999 648.662,725.994 649.222,707.155 649.781,739.936 650.34,719.406 650.899,703.148 651.459,717.998 652.018,732.795 652.577,778.347 653.136,791.77 653.696,803.341 654.255,780.653 654.814,777.852 655.373,755.988 655.933,768.396 656.492,797.44 657.051,790.348 657.61,796.92 658.17,793.712 658.729,790.806 659.288,803.441 659.847,749.729 660.407,731.786 660.966,730.332 661.525,699.546 662.084,664.948 662.644,649.865 663.203,652.405 663.762,656.599 664.321,641.997 664.881,645.348 665.44,647.717 665.999,650.082 666.558,602.269 667.118,559.499 667.677,550.915 668.236,608.059 668.795,579.678 669.355,573.102 669.914,581.168 670.473,591.418 671.032,613.43 671.592,567.674 672.151,622.897 672.71,610.131 673.269,629.694 673.829,635.647 674.388,605.756 674.947,597.272 675.506,583.972 676.066,590.461 676.625,599.781 677.184,605.67 677.743,626.653 678.303,630.913 678.862,617.521 679.421,637.223 679.981,620.06 680.54,621.117 681.099,592.75 681.658,614.76 682.218,619.105 682.777,622.658 683.336,612.27 683.895,632.507 684.455,635.238 685.014,625.008 685.573,626.794 686.132,615.754 686.692,602.103 687.251,643.162 687.81,631.257 688.369,615.904 688.929,651.594 689.488,622.33 690.047,645.358 690.606,696.871 691.166,717.446 691.725,732.036 692.284,745.613 692.843,726.944 693.403,725.931 693.962,741.331 694.521,718.475 695.08,700.883 695.64,715.717 696.199,712.77 696.758,695.236 697.317,728.717 697.877,712.179 698.436,679.517 698.995,648.368 699.554,670.001 700.114,673.117 700.673,676.253 701.232,675.742 701.791,694.754 702.351,693.874 702.91,678.653 703.469,682.336 704.028,700.341 704.588,765.807 705.147,809.313 705.706,818.799 706.265,813.472 706.825,817.882 707.384,792.48 707.943,785.787 708.502,780.827 709.062,805.575 709.621,785.142 710.18,784.596 710.739,766.172 711.299,795.356 711.858,808.41 712.417,804.911 712.976,785.157 713.536,746.372 714.095,760.176 714.654,772.626 715.213,782.786 715.773,767.215 716.332,754.115 716.891,752.25 717.45,783.828 718.01,797.888 718.569,759.122 719.128,739.804 719.687,706.779 720.247,738.166 720.806,687.232 721.365,683.716 721.924,650.826 722.484,652.597 723.043,637.333 723.602,641.783 724.161,647.235 724.721,681.728 725.28,686.094 725.839,704.191 726.398,751.269 726.958,731.819 727.517,695.698 728.076,693.368 728.635,675.802 729.195,710.322 729.754,662.285 730.313,664.666 730.872,666.19 731.432,685.293 731.991,702.785 732.55,720.375 733.109,752.466 733.669,719.313 734.228,703.781 734.787,684.68 735.346,684.474 735.906,666.139 736.465,633.303 737.024,610.242 737.583,597.909 738.143,604.997 738.702,592.684 739.261,613.619 739.82,637.387 740.38,671.177 740.939,658.672 741.498,657.78 742.057,658.851 742.617,661.027 743.176,660.664 743.735,630.605 744.294,635.729 744.854,640.358 745.413,628.606 745.972,647.947 746.531,633.143 747.091,638.785 747.65,644.095 748.209,727.058 748.768,712.031 749.328,712.295 749.887,697.761 750.446,698.366 751.005,720.018 751.565,717.676 752.124,700.95 752.683,684.17 753.242,681.106 753.802,668.104 754.361,670.746 754.92,673.848 755.479,692.542 756.039,691.066 756.598,709.73 757.157,706.902 757.716,693.601 758.276,692.71 758.835,710.702 759.394,712.438 759.953,692.691 760.513,690.55 761.072,676.848 761.631,648.511 762.19,650.225 762.75,648.235 763.309,663.751 763.868,680.938 764.427,697.27 764.987,682.79 765.546,699.743 766.105,683.106 766.664,696.312 767.224,667.206 767.783,696.165 768.342,683.841 768.901,698.834 769.461,716.649 770.02,697.929 770.579,683.53 771.138,682.856 771.698,648.537 772.257,669.138 772.816,665.747 773.375,665.749 773.935,635.804 774.494,643.145 775.053,640.901 775.612,627.637 776.172,682.047 776.731,712.13 777.29,713.234 777.849,729.025 778.409,710.267 778.968,708.761 779.527,674.375 780.086,659.565 780.646,662.047 781.205,712.623 781.764,712.307 782.323,713.141 782.883,707.202 783.442,736.469 784.001,700.011 784.56,684.879 785.12,683.64 785.679,700.041 786.238,697.593 786.797,696.791 787.357,694.327 787.916,662.031 788.475,665.8 789.034,703.091 789.594,701.292 790.153,704.711 790.712,736.288 791.271,702.09 791.831,732.364 792.39,714.817 792.949,712.692 793.508,694.507 794.068,696.76 794.627,699.101 795.186,717.771 795.745,701.079 796.305,747.628 796.864,758.702 797.423,753.987 797.982,762.966 798.542,729.379 799.101,694.041 799.66,692.376 800.219,660.253 800.779,679.833 801.338,683.541 801.897,687.087 802.456,671.188 803.016,641.495 803.575,658.015 804.134,690.829 804.693,707.296 805.253,703.67 805.812,672.605 806.371,703.425 806.931,687.506 807.49,701.723 808.049,730.403 808.608,712.816 809.168,681.358 809.727,682.825 810.286,697.34 810.845,695.761 811.405,696.247 811.964,696.491 812.523,681.355 813.082,682.361 813.642,664.398 814.201,685.891 814.76,701.376 815.319,719.449 815.879,699.785 816.438,730.221 816.997,729.206 817.556,740.765 818.116,724.232 818.675,704.564 819.234,668.852 819.793,690.943 820.353,708.35 820.912,719.633 821.471,734.309 822.03,716.072 822.59,693.551 823.149,679.144 823.708,658.433 824.267,660.423 824.827,678.431 825.386,661.58 825.945,682.023 826.504,712.52 827.064,727.384 827.623,727.1 828.182,707.587 828.741,704.071 829.301,685.666 829.86,720.323 830.419,718.621 830.978,666.306 831.538,663.579 832.097,648.192 832.656,682.004 833.215,665.5 833.775,650.53 834.334,655.195 834.893,667.088 835.452,652.173 836.012,621.24 836.571,659.69 837.13,662.039 837.689,666.027 838.249,667.692 838.808,682.794 839.367,636.463 839.926,655.192 840.486,643.303 841.045,661.066 841.604,692.209 842.163,689.993 842.723,689.685 843.282,692.915 843.841,659.664 844.4,692.15 844.96,637.528 845.519,641.343 846.078,639.587 846.637,640.367 847.197,625.647 847.756,628.91 848.315,678.321 848.874,710.039 849.434,707.721 849.993,753.43 850.552,737.377 851.111,734.17 851.671,728.66 852.23,728.553 852.789,726.559 853.348,739.85 853.908,753.904 854.467,718.202 855.026,715.615 855.585,710.933 856.145,729.566 856.704,726.41 857.263,675.694 857.822,659.373 858.382,647.311 858.941,647.349 859.5,605.037 860.059,607.757 860.619,611.562 861.178,618.521 861.737,635.349 862.296,622.669 862.856,639.546 863.415,610.073 863.974,628.611 864.533,631.353 865.093,652.126 865.652,650.437 866.211,669.765 866.77,657.034 867.33,689.362 867.889,706.388 868.448,641.771 869.007,672.922 869.567,688.886 870.126,671.904 870.685,658.278 871.244,644.875 871.804,650.09 872.363,685.994 872.922,686.819 873.481,703.287 874.041,699.219 874.6,685.147 875.159,673.227 875.718,671.115 876.278,701.493 876.837,668.396 877.396,635.375 877.955,639.502 878.515,664.082 879.074,682.078 879.633,680.626 880.192,731.802 880.752,731.942 881.311,744.276 881.87,740.968 882.429,753.975 882.989,735.251 883.548,768.385 884.107,770.835 884.666,764.066 885.226,759.342 885.785,754.103 886.344,748.621 886.903,749.089 887.463,748.498 888.022,744.956 888.581,675.572 889.14,675.889 889.7,674.603 890.259,690.149 890.818,722.898 891.377,686.221 891.937,666.265 892.496,682.816 893.055,670.015 893.614,670.521 894.174,687.548 894.733,674.273 895.292,673.907 895.851,676.685 896.411,709.274 896.97,707.947 897.529,754.334 898.088,769.458 898.648,760.758 899.207,723.109 899.766,705.521 900.325,702.201 900.885,716.326 901.444,713.326 902.003,711.304 902.562,742.045 903.122,754.278 903.681,735.363 904.24,732.123 904.799,697.173 905.359,695.79 905.918,644.195 906.477,612.946 907.036,615.722 907.596,603.344 908.155,590.665 908.714,595.647 909.273,617.983 909.833,616.799 910.392,634.904 910.951,637.237 911.51,654.872 912.07,657.116 912.629,660.645 913.188,658.328 913.747,675.743 914.307,674.391 914.866,672.626 915.425,674.919 915.984,638.54 916.544,637.623 917.103,643.64 917.662,645.291 918.221,611.946 918.781,618.641 919.34,623.675 919.899,626.845 920.458,678.631 921.018,696.862 921.577,678.164 922.136,664.543 922.695,665.27 923.255,671.294 923.814,671.707 924.373,636.056 924.932,622.125 925.492,660.879 926.051,661.545 926.61,645.238 927.169,648.101 927.729,664.786 928.288,644.33 928.847,612.586 929.406,620.125 929.966,607.876 930.525,612.379 931.084,615.57 931.644,639.86 932.203,641.391 932.762,628.428 933.321,631.893 933.881,618.799 934.44,571.298 934.999,557.61 935.558,612.949 936.118,616.87 936.677,624.284 937.236,660.33 937.795,660.056 938.355,663.004 938.914,694.366 939.473,695.734 940.032,710.563 940.592,728.048 941.151,713.524 941.71,695.927 942.269,678.703 942.829,679.997 943.388,694.807 943.947,681.172 944.506,667.595 945.066,649.487 945.625,687.198 946.184,721.36 946.743,702.355 947.303,719.363 947.862,730.77 948.421,727.947 948.98,759.291 949.54,723.369 950.099,722.166 950.658,722.327 951.217,717.968 951.777,718.395 952.336,733.518 952.895,714.473 953.454,712.181 954.014,697.401 954.573,745.902 955.132,721.883 955.691,721.728 956.251,706.313 956.81,722.836 957.369,738.377 957.928,731.945 958.488,696.868 959.047,678.431 959.606,694.255 960.165,660.745 960.725,677.543 961.284,678.739 961.843,646.263 962.402,647.527 962.962,650.071 963.521,665.934 964.08,667.82 964.639,685.037 965.199,699.58 965.758,664.39 966.317,663.811 966.876,663.266 967.436,663.86 967.995,693.873 968.554,675.054 969.113,661.546 969.673,676.461 970.232,709.019 970.791,703.582 971.35,699.179 971.91,698.539 972.469,695.949 973.028,729.132 973.587,711.924 974.147,723.205 974.706,754.231 975.265,750.327 975.824,765.214 976.384,758.581 976.943,753.368 977.502,752.182 978.061,747.907 978.621,773.399 979.18,752.022 979.739,731.608 980.298,715.872 980.858,732.029 981.417,727.735 981.976,710.324 982.535,727.899 983.095,723.398 983.654,770.257 984.213,747.443 984.772,792.093 985.332,754.491 985.891,733.543 986.45,730.5 987.009,779.07 987.569,771.801 988.128,784.449 988.687,778.413 989.246,772.618 989.806,735.394 990.365,714.683 990.924,680.114 991.483,647.443 992.043,615.199 992.602,638.581 993.161,641.89 993.72,643.75 994.28,611.937 994.839,598.043 995.398,603.01 995.957,607.011 996.517,630.19 997.076,664.669 997.635,665.636 998.194,653.984 998.754,636.543 999.313,655.017 999.872,653.27 1000.43,686.694 1000.99,654.55 1001.55,640.583 1002.11,643.68 1002.67,646.467 1003.23,648.201 1003.79,665.555 1004.35,665.673 1004.91,666.653 1005.46,635.196 1006.02,636.791 1006.58,593.381 1007.14,578.611 1007.7,588.1 1008.26,592.074 1008.82,616.526 1009.38,637.815 1009.94,624.163 1010.5,616.542 1011.06,601.294 1011.62,653.254 1012.18,672.908 1012.73,717.843 1013.29,720.254 1013.85,716.369 1014.41,715.764 1014.97,695.665 1015.53,695.499 1016.09,678.335 1016.65,713.018 1017.21,696.846 1017.77,712.179 1018.33,726.97 1018.89,725.881 1019.45,725.803 1020.01,724.235 1020.56,719.164 1021.12,751.302 1021.68,733.601 1022.24,764.922 1022.8,728.639 1023.36,729.67 1023.92,710.606 1024.48,690.948 1025.04,689.384 1025.6,725.08 1026.16,737.075 1026.72,721.885 1027.28,720.466 1027.83,732.641 1028.39,715.389 1028.95,665.449 1029.51,664.306 1030.07,667.965 1030.63,637.077 1031.19,657.161 1031.75,642.7 1032.31,690.779 1032.87,725.238 1033.43,754.59 1033.99,765.571 1034.55,745.347 1035.1,726.269 1035.66,726.608 1036.22,692.192 1036.78,689.885 1037.34,687.429 1037.9,721.472 1038.46,721.696 1039.02,755.672 1039.58,752.199 1040.14,732.846 1040.7,699.414 1041.26,716.118 1041.82,732.964 1042.38,730.537 1042.93,712.605 1043.49,746.032 1044.05,758.23 1044.61,739.479 1045.17,736.456 1045.73,750.999 1046.29,729.813 1046.85,694.741 1047.41,691.099 1047.97,705.29 1048.53,703.79 1049.09,723.496 1049.65,704.196 1050.2,687.57 1050.76,684.807 1051.32,666.209 1051.88,685.429 1052.44,653.592 1053,689.762 1053.56,690.12 1054.12,703.953 1054.68,667.589 1055.24,652.237 1055.8,670.214 1056.36,671.772 1056.92,639.278 1057.48,606.257 1058.03,626.495 1058.59,647.723 1059.15,649.14 1059.71,669.229 1060.27,654.463 1060.83,674.993 1061.39,690.897 1061.95,704.676 1062.51,701.511 1063.07,697.563 1063.63,699.159 1064.19,665.18 1064.75,699.844 1065.3,683.275 1065.86,650.995 1066.42,667.952 1066.98,669.983 1067.54,656.267 1068.1,660.724 1068.66,664.105 1069.22,696.859 1069.78,696.784 1070.34,699.482 1070.9,680.701 1071.46,697.179 1072.02,699.252 1072.57,701.099 1073.13,702.838 1073.69,717.212 1074.25,650.317 1074.81,700.338 1075.37,729.446 1075.93,740.546 1076.49,704.703 1077.05,682.162 1077.61,696.893 1078.17,693.851 1078.73,694.159 1079.29,712.875 1079.85,694.737 1080.4,714.55 1080.96,730.335 1081.52,744.734 1082.08,794.914 1082.64,802.077 1083.2,794.76 1083.76,754.283 1084.32,765.087 1084.88,777.774 1085.44,786.991 1086,732.685 1086.56,733.899 1087.12,728.428 1087.67,777.467 1088.23,757.462 1088.79,737.161 1089.35,747.629 1089.91,745.209 1090.47,725.811 1091.03,711.122 1091.59,691.168 1092.15,689.826 1092.71,705.554 1093.27,676.04 1093.83,674.215 1094.39,670.929 1094.94,622.212 1095.5,640.348 1096.06,627.388 1096.62,614.149 1097.18,616.013 1097.74,636.177 1098.3,620.25 1098.86,589.507 1099.42,594.189 1099.98,567.104 1100.54,586.511 1101.1,591.841 1101.66,594.413 1102.22,598.053 1102.77,599.475 1103.33,570.336 1103.89,578.626 1104.45,599.69 1105.01,588.598 1105.57,580.294 1106.13,588.447 1106.69,611.326 1107.25,612.534 1107.81,615.964 1108.37,586.312 1108.93,608.255 1109.49,628.211 1110.04,616.862 1110.6,623.126 1111.16,596.314 1111.72,617.784 1112.28,620.933 1112.84,628.298 1113.4,650.435 1113.96,684.373 1114.52,716.238 1115.08,758.303 1115.64,756.844 1116.2,752.695 1116.76,780.082 1117.31,775.899 1117.87,785.91 1118.43,764.887 1118.99,776.782 1119.55,772.282 1120.11,770.096 1120.67,746.789 1121.23,729.401 1121.79,729.572 1122.35,727.899 1122.91,740.163 1123.47,703.74 1124.03,670.999 1124.59,674.112 1125.14,643.148 1125.7,675.817 1126.26,679.023 1126.82,660.072 1127.38,660.899 1127.94,645.707 1128.5,663.746 1129.06,667.963 1129.62,682.468 1130.18,681.396 1130.74,698.552 1131.3,682.907 1131.86,698.767 1132.41,668.458 1132.97,636.136 1133.53,608.797 1134.09,616.508 1134.65,590.846 1135.21,612.13 1135.77,632.183 1136.33,618 1136.89,637.041 1137.45,622.342 1138.01,626.687 1138.57,642.926 1139.13,610.42 1139.68,629.37 1140.24,630.628 1140.8,646.627 1141.36,647.749 1141.92,651.855 1142.48,654.25 1143.04,672.857 1143.6,674.952 1144.16,676.265 1144.72,675.277 1145.28,677.491 1145.84,675.5 1146.4,676.353 1146.96,662.194 1147.51,661.732 1148.07,695.713 1148.63,692.97 1149.19,675.311 1149.75,640.766 1150.31,656.669 1150.87,655.685 1151.43,643.261 1151.99,633.177 1152.55,637.294 1153.11,636.945 1153.67,639.972 1154.23,657.267 1154.78,726.108 1155.34,724.355 1155.9,721.435 1156.46,700.824 1157.02,702.54 1157.58,736.799 1158.14,747.387 1158.7,760.325 1159.26,724.92 1159.82,704.288 1160.38,722.794 1160.94,688.658 1161.5,709.288 1162.05,708.544 1162.61,696.171 1163.17,744.299 1163.73,709.413 1164.29,706.895 1164.85,705.27 1165.41,720.101 1165.97,735.337 1166.53,748.591 1167.09,699.271 1167.65,717.136 1168.21,713.963 1168.77,741.267 1169.33,739.508 1169.88,722.347 1170.44,721.941 1171,718.488 1171.56,685.13 1172.12,703.722 1172.68,686.504 1173.24,681.344 1173.8,678.898 1174.36,742.729 1174.92,770.933 1175.48,746.817 1176.04,759.193 1176.6,754.243 1177.15,735.782 1177.71,748.498 1178.27,745.323 1178.83,790.442 1179.39,785.683 1179.95,811.365 1180.51,804.37 1181.07,768.381 1181.63,763.987 1182.19,774.509 1182.75,751.347 1183.31,761.206 1183.87,785.915 1184.43,794.118 1184.98,790.158 1185.54,718.703 1186.1,681.494 1186.66,679.696 1187.22,728.126 1187.78,724.022 1188.34,654.506 1188.9,672.1 1189.46,655.822 1190.02,657.169 1190.58,656.533 1191.14,642.61 1191.7,661.145 1192.25,631.093 1192.81,629.319 1193.37,630.763 1193.93,648.698 1194.49,653.306 1195.05,651.159 1195.61,670.583 1196.17,653.745 1196.73,672.575 1197.29,658.621 1197.85,693.722 1198.41,662.788 1198.97,647.995 1199.52,633.724 1200.08,637.935 1200.64,639.436 1201.2,623.31 1201.76,612.134 1202.32,634.044 1202.88,634.872 1203.44,637.273 1204,605.519 1204.56,627.065 1205.12,627.33 1205.68,616.021 1206.24,621.909 1206.8,655.043 1207.35,642.333 1207.91,662.959 1208.47,663.826 1209.03,682.587 1209.59,700.577 1210.15,699.436 1210.71,683.312 1211.27,683.764 1211.83,670.444 1212.39,657.684 1212.95,674.556 1213.51,628.82 1214.07,630.452 1214.62,618.643 1215.18,638.361 1215.74,672.16 1216.3,706.728 1216.86,688.585 1217.42,639.284 1217.98,644.003 1218.54,596.793 1219.1,616.932 1219.66,637.357 1220.22,657.345 1220.78,662.031 1221.34,707.457 1221.89,725.271 1222.45,741.171 1223.01,720.378 1223.57,717.563 1224.13,730.8 1224.69,711.766 1225.25,709.443 1225.81,724.677 1226.37,758.195 1226.93,753.398 1227.49,752.375 1228.05,731.823 1228.61,729.945 1229.17,723.936 1229.72,719.961 1230.28,718.176 1230.84,734.936 1231.4,748.689 1231.96,713.771 1232.52,712.954 1233.08,726.706 1233.64,723.899 1234.2,738.097 1234.76,720.21 1235.32,734.828 1235.88,730.05 1236.44,710.546 1236.99,708.281 1237.55,735.092 1238.11,716.247 1238.67,650.506 1239.23,622.146 1239.79,577.896 1240.35,565.1 1240.91,604.313 1241.47,605.533 1242.03,611.23 1242.59,596.77 1243.15,555.506 1243.71,545.945 1244.26,555.17 1244.82,574.886 1245.38,548.912 1245.94,539.854 1246.5,548.459 1247.06,561.686 1247.62,566.155 1248.18,589.132 1248.74,593.313 1249.3,613.267 1249.86,630.694 1250.42,616.951 1250.98,622.42 1251.54,595.344 1252.09,649.578 1252.65,650.256 1253.21,687.279 1253.77,655.824 1254.33,672.743 1254.89,677.267 1255.45,690.377 1256.01,672.482 1256.57,658.654 1257.13,646.167 1257.69,647.689 1258.25,650.711 1258.81,668.794 1259.36,670.529 1259.92,690.22 1260.48,685.354 1261.04,670.697 1261.6,670.377 1262.16,670.355 1262.72,652.928 1263.28,667.967 1263.84,656.729 1264.4,658.261 1264.96,677.38 1265.52,677.15 1266.08,645.674 1266.63,665.047 1267.19,651.539 1267.75,654.282 1268.31,642.165 1268.87,631.777 1269.43,621.899 1269.99,609.02 1270.55,642.946 1271.11,648.414 1271.67,680.099 1272.23,682.514 1272.79,684.179 1273.35,685.441 1273.91,686.037 1274.46,669.745 1275.02,672.468 1275.58,688.959 1276.14,671.592 1276.7,706.261 1277.26,704.703 1277.82,719.421 1278.38,705.008 1278.94,704.917 1279.5,704.367 1280.06,672.781 1280.62,672.906 1281.18,673.403 1281.73,690.309 1282.29,658.025 1282.85,676.473 1283.41,664.376 1283.97,682.069 1284.53,667.109 1285.09,682.461 1285.65,684.428 1286.21,670.1 1286.77,686.511 1287.33,671.71 1287.89,672.611 1288.45,639.445 1289,642.431 1289.56,675.259 1290.12,673.324 1290.68,706.609 1291.24,705.84 1291.8,706.324 1292.36,706.035 1292.92,686.497 1293.48,716.79 1294.04,730.535 1294.6,747.299 1295.16,740.433 1295.72,719.082 1296.28,734.263 1296.83,730.635 1297.39,744.698 1297.95,769.898 1298.51,734.618 1299.07,764.932 1299.63,809.542 1300.19,790.233 1300.75,817.13 1301.31,824.535 1301.87,799.774 1302.43,779.777 1302.99,775.941 1303.55,756.675 1304.1,685.818 1304.66,718.633 1305.22,734.069 1305.78,716.391 1306.34,715.388 1306.9,731.685 1307.46,699.127 1308.02,695.304 1308.58,692.092 1309.14,690.839 1309.7,688.452 1310.26,621.329 1310.82,622.97 1311.38,593.048 1311.93,613.831 1312.49,618.693 1313.05,590.561 1313.61,595.854 1314.17,583.152 1314.73,589.946 1315.29,608.586 1315.85,645.801 1316.41,661.973 1316.97,674.928 1317.53,693.43 1318.09,690.677 1318.65,693.848 1319.2,694.353 1319.76,694.496 1320.32,692.807 1320.88,692.845 1321.44,693 1322,710.388 1322.56,710.926 1323.12,697.895 1323.68,710.226 1324.24,707.935 1324.8,720.877 1325.36,702.133 1325.92,683.916 1326.47,716.874 1327.03,760.471 1327.59,739.195 1328.15,749.514 1328.71,758.919 1329.27,741.132 1329.83,704.479 1330.39,701.437 1330.95,714.142 1331.51,725.875 1332.07,721.322 1332.63,671.047 1333.19,636.389 1333.75,638.728 1334.3,677.732 1334.86,678.436 1335.42,695.444 1335.98,694.429 1336.54,691.019 1337.1,691.89 1337.66,707.823 1338.22,709.29 1338.78,724.291 1339.34,738.271 1339.9,704.2 1340.46,719.175 1341.02,717.658 1341.57,727.835 1342.13,710.345 1342.69,677.904 1343.25,645.322 1343.81,661.548 1344.37,643.411 1344.93,663.467 1345.49,676.754 1346.05,697.08 1346.61,698.584 1347.17,695.317 1347.73,711.301 1348.29,740.317 1348.84,706.817 1349.4,688.734 1349.96,674.184 1350.52,643.473 1351.08,681.369 1351.64,712.644 1352.2,709.734 1352.76,743.55 1353.32,738.005 1353.88,751.737 1354.44,734.903 1355,746.045 1355.56,729.959 1356.12,714.654 1356.67,665.533 1357.23,664.287 1357.79,648.732 1358.35,665.713 1358.91,629.857 1359.47,617.887 1360.03,593.404 1360.59,615.204 1361.15,599.985 1361.71,654.45 1362.27,637.632 1362.83,626.312 1363.39,677.524 1363.94,696.291 1364.5,681.717 1365.06,683.216 1365.62,669.883 1366.18,654.327 1366.74,669.616 1367.3,654.841 1367.86,641.325 1368.42,613.678 1368.98,601.802 1369.54,592.029 1370.1,613.194 1370.66,652.798 1371.21,671.004 1371.77,653.988 1372.33,642.497 1372.89,674.343 1373.45,709.041 1374.01,689.7 1374.57,706.059 1375.13,706.713 1375.69,720.071 1376.25,718.336 1376.81,704.587 1377.37,704.121 1377.93,685.714 1378.49,685.11 1379.04,671.598 1379.6,654.575 1380.16,657.688 1380.72,673.752 1381.28,707.317 1381.84,720.301 1382.4,702.211 1382.96,670.676 1383.52,653.55 1384.08,702.785 1384.64,685.088 1385.2,686.911 1385.76,687.676 1386.31,669.775 1386.87,667.784 1387.43,652.952 1387.99,640.577 1388.55,639.603 1389.11,643.527 1389.67,664.702 1390.23,670.863 1390.79,689.315 1391.35,658.791 1391.91,630.139 1392.47,645.931 1393.03,682.105 1393.58,702.173 1394.14,684.893 1394.7,682.487 1395.26,696.922 1395.82,677.341 1396.38,692.998 1396.94,713.333 1397.5,733 1398.06,719.409 1398.62,697.609 1399.18,693.051 1399.74,704.043 1400.3,716.943 1400.86,729.728 1401.41,707.258 1401.97,673.743 1402.53,676.051 1403.09,644.974 1403.65,646.699 1404.21,649.994 1404.77,636.846 1405.33,657.934 1405.89,675.582 1406.45,677.426 1407.01,710.932 1407.57,722.746 1408.13,675.228 1408.68,691.172 1409.24,720.415 1409.8,733.372 1410.36,767.036 1410.92,794.414 1411.48,805.421 1412.04,818.157 1412.6,845.208 1413.16,821.502 1413.72,801.735 1414.28,797.242 1414.84,837.108 1415.4,846.516 1415.95,837.536 1416.51,828.409 1417.07,821.67 1417.63,798.605 1418.19,792.504 1418.75,799.189 1419.31,793.587 1419.87,803.553 1420.43,802.908 1420.99,795.884 1421.55,806.279 1422.11,798.728 1422.67,794.641 1423.23,769.915 1423.78,748.086 1424.34,725.705 1424.9,720.093 1425.46,718.744 1426.02,715.599 1426.58,709.117 1427.14,687.618 1427.7,704.364 1428.26,703.877 1428.82,700.476 1429.38,670.298 1429.94,652.323 1430.5,639.008 1431.05,660.465 1431.61,644.491 1432.17,615.352 1432.73,571.297 1433.29,561.525 1433.85,580.048 1434.41,601.519 1434.97,602.99 1435.53,591.97 1436.09,596.028 1436.65,616.76 1437.21,604.812 1437.77,609.573 1438.33,597.418 1438.88,616.909 1439.44,618.499 1440,619.853 1440.56,608.087 1441.12,609.421 1441.68,584.237 1442.24,592.953 1442.8,614.167 1443.36,587.626 1443.92,609.859 1444.48,598.929 1445.04,601.013 1445.6,638.103 1446.15,607.099 1446.71,658.382 1447.27,660.523 1447.83,660.173 1448.39,675.864 1448.95,676.379 1449.51,681.608 1450.07,685.013 1450.63,652.48 1451.19,657.065 1451.75,658.023 1452.31,644.512 1452.87,631.136 1453.42,633.712 1453.98,620.913 1454.54,610.535 1455.1,649.705 1455.66,633.893 1456.22,637.559 1456.78,639.129 1457.34,642.834 1457.9,643.149 1458.46,644.227 1459.02,630.166 1459.58,647.035 1460.14,634.254 1460.7,618.793 1461.25,624.535 1461.81,625.184 1462.37,647.733 1462.93,651.754 1463.49,637.76 1464.05,656.865 1464.61,642.228 1465.17,628.71 1465.73,632.994 1466.29,617.829 1466.85,637.634 1467.41,640.888 1467.97,705.519 1468.52,689.644 1469.08,704.591 1469.64,689.763 1470.2,703.713 1470.76,735.014 1471.32,729.644 1471.88,729.211 1472.44,740.954 1473,770.31 1473.56,797.694 1474.12,791.149 1474.68,767.334 1475.24,811.898 1475.79,785.341 1476.35,780.111 1476.91,774.151 1477.47,769.949 1478.03,765.018 1478.59,794.145 1479.15,805.295 1479.71,814.268 1480.27,743.925 1480.83,759.67 1481.39,721.615 1481.95,734.994 1482.51,699.076 1483.07,699.059 1483.62,698.417 1484.18,695.747 1484.74,727.74 1485.3,723.423 1485.86,719.523 1486.42,688.997 1486.98,704.396 1487.54,701.089 1488.1,715.531 1488.66,728.572 1489.22,725.265 1489.78,690.423 1490.34,690.715 1490.89,672.609 1491.45,655.067 1492.01,644.844 1492.57,645.823 1493.13,696.652 1493.69,728.733 1494.25,740.918 1494.81,739.81 1495.37,738.286 1495.93,737.446 1496.49,767.97 1497.05,765.696 1497.61,748.388 1498.16,727.921 1498.72,692.178 1499.28,739.744 1499.84,753.346 1500.4,753.926 1500.96,748.349 1501.52,727.078 1502.08,708.738 1502.64,705.76 1503.2,689.565 1503.76,670.94 1504.32,668.506 1504.88,682.463 1505.44,683.329 1505.99,681.958 1506.55,698.734 1507.11,679.327 1507.67,714.606 1508.23,696.955 1508.79,663.765 1509.35,666.884 1509.91,666.61 1510.47,668.84 1511.03,699.349 1511.59,683.546 1512.15,682.293 1512.71,716.277 1513.26,730.909 1513.82,723.417 1514.38,754.903 1514.94,718.698 1515.5,713.245 1516.06,698.862 1516.62,699.088 1517.18,695.795 1517.74,645.791 1518.3,665.349 1518.86,653.47 1519.42,657.1 1519.98,658.117 1520.53,676.033 1521.09,659.421 1521.65,659.331 1522.21,659.851 1522.77,680.045 1523.33,712.722 1523.89,697.214 1524.45,696.969 1525.01,728.878 1525.57,727.546 1526.13,727.366 1526.69,740.5 1527.25,722.616 1527.81,686.074 1528.36,651.691 1528.92,702.258 1529.48,718.613 1530.04,716.173 1530.6,717.053 1531.16,714.474 1531.72,713.684 1532.28,695.814 1532.84,690.897 1533.4,689.023 1533.96,670.789 1534.52,658.568 1535.08,661.128 1535.63,679.25 1536.19,696.027 1536.75,714.869 1537.31,711.163 1537.87,659.004 1538.43,689.56 1538.99,659.81 1539.55,677.925 1540.11,679.796 1540.67,696.672 1541.23,693.837 1541.79,708.601 1542.35,738.149 1542.9,685.9 1543.46,700.549 1544.02,713.509 1544.58,743.871 1545.14,738.914 1545.7,717.55 1546.26,730.595 1546.82,777.727 1547.38,789.857 1547.94,799.479 1548.5,824.557 1549.06,816.955 1549.62,761.986 1550.18,744.047 1550.73,741.743 1551.29,741.369 1551.85,737.099 1552.41,716.134 1552.97,713.585 1553.53,744.343 1554.09,705.082 1554.65,704.413 1555.21,655.7 1555.77,658.972 1556.33,643.212 1556.89,648.34 1557.45,635.195 1558,639.869 1558.56,660.63 1559.12,659.463 1559.68,660.868 1560.24,661.891 1560.8,682.455 1561.36,686.848 1561.92,703.95 1562.48,684.129 1563.04,711.489 1563.6,677.9 1564.16,663.899 1564.72,698.702 1565.28,697.467 1565.83,727.306 1566.39,693.912 1566.95,694.722 1567.51,741.795 1568.07,755.306 1568.63,765.262 1569.19,777.86 1569.75,807.755 1570.31,818.351 1570.87,798.589 1571.43,794.658 1571.99,804.311 1572.55,798.436 1573.1,825.537 1573.66,798.96 1574.22,793.49 1574.78,770.691 1575.34,754.636 1575.9,796.779 1576.46,790.303 1577.02,755.217 1577.58,750.768 1578.14,749.198 1578.7,744.815 1579.26,756.886 1579.82,732.135 1580.37,697.317 1580.93,664.655 1581.49,633.814 1582.05,686.39 1582.61,655.561 1583.17,674.582 1583.73,656.009 1584.29,707.274 1584.85,724.489 1585.41,705.942 1585.97,737.27 1586.53,717.272 1587.09,749.288 1587.65,726.846 1588.2,739.866 1588.76,753.577 1589.32,765.311 1589.88,728.642 1590.44,692.193 1591,673.779 1591.56,675.502 1592.12,663.621 1592.68,650.249 1593.24,635.221 1593.8,603.013 1594.36,622.839 1594.92,571.886 1595.47,576.409 1596.03,567.436 1596.59,579.856 1597.15,583.829 1597.71,537.659 1598.27,564.126 1598.83,573.056 1599.39,598.087 1599.95,570.901 1600.51,604.789 1601.07,610.935 1601.63,600.542 1602.19,591.375 1602.74,595.282 1603.3,618.54 1603.86,640.458 1604.42,609.665 1604.98,614.165 1605.54,636.2 1606.1,674.204 1606.66,657.723 1607.22,673.426 1607.78,655.338 1608.34,641.908 1608.9,677.321 1609.46,678.49 1610.02,692.166 1610.57,679.138 1611.13,696.357 1611.69,663.491 1612.25,697.227 1612.81,697.448 1613.37,684.135 1613.93,697.532 1614.49,698.767 1615.05,680.357 1615.61,679.007 1616.17,664.372 1616.73,647.431 1617.29,634.063 1617.84,636.513 1618.4,623.533 1618.96,610.477 1619.52,647.918 1620.08,685.978 1620.64,650.46 1621.2,622.829 1621.76,625.392 1622.32,646.414 1622.88,646.894 1623.44,666.596 1624,685.689 1624.56,664.973 1625.11,681.567 1625.67,684.966 1626.23,683.568 1626.79,697.534 1627.35,679.234 1627.91,664.408 1628.47,664.791 1629.03,647.038 1629.59,615.926 1630.15,617.361 1630.71,621.733 1631.27,627.675 1631.83,651.039 1632.39,651.8 1632.94,654.718 1633.5,737.788 1634.06,783.153 1634.62,761.537 1635.18,756.389 1635.74,752.629 1636.3,747.216 1636.86,741.853 1637.42,722.581 1637.98,738.796 1638.54,685.603 1639.1,703.739 1639.66,722.29 1640.21,721.106 1640.77,655.602 1641.33,641.586 1641.89,610.683 1642.45,666.36 1643.01,666.118 1643.57,668.924 1644.13,739.19 1644.69,768.952 1645.25,749.46 1645.81,726.845 1646.37,705.978 1646.93,643.983 1647.48,661.026 1648.04,642.945 1648.6,662.499 1649.16,645.805 1649.72,664.061 1650.28,662.62 1650.84,697.071 1651.4,693.799 1651.96,693.688 1652.52,677.098 1653.08,661.188 1653.64,667.112 1654.2,682.146 1654.76,748.145 1655.31,712.187 1655.87,727.506 1656.43,727.941 1656.99,697.766 1657.55,666.082 1658.11,665.914 1658.67,682.094 1659.23,684.191 1659.79,670.196 1660.35,670.972 1660.91,655.133 1661.47,656.138 1662.03,607.884 1662.58,594.464 1663.14,597.416 1663.7,600.255 1664.26,588.678 1664.82,576.744 1665.38,581.916 1665.94,569.578 1666.5,593.754 1667.06,617.683 1667.62,617.386 1668.18,607.25 1668.74,609.526 1669.3,613.95 1669.85,617.905 1670.41,590.516 1670.97,642.979 1671.53,595.036 1672.09,602.382 1672.65,626.512 1673.21,627.09 1673.77,616.378 1674.33,636.319 1674.89,673.356 1675.45,658.751 1676.01,625.868 1676.57,576.536 1677.13,581.441 1677.68,569.583 1678.24,559.271 1678.8,563.456 1679.36,616.383 1679.92,616.647 1680.48,587.725 1681.04,593.913 1681.6,580.004 1682.16,569.277 1682.72,576.68 1683.28,567.662 1683.84,626.047 1684.4,643.29 1684.95,630.73 1685.51,619.55 1686.07,620.566 1686.63,605.107 1687.19,654.726 1687.75,705.85 1688.31,709.297 1688.87,725.427 1689.43,723.338 1689.99,707.478 1690.55,710.087 1691.11,708.429 1691.67,676.325 1692.23,672.684 1692.78,671.841 1693.34,690.299 1693.9,709.87 1694.46,725.046 1695.02,707.143 1695.58,706.001 1696.14,705.089 1696.7,721.519 1697.26,718.336 1697.82,699.17 1698.38,727.288 1698.94,693.578 1699.5,692.098 1700.05,676.487 1700.61,693.802 1701.17,694.545 1701.73,679.99 1702.29,649.658 1702.85,641.355 1703.41,642.547 1703.97,694.745 1704.53,676.141 1705.09,677.611 1705.65,710.106 1706.21,691.975 1706.77,724.707 1707.32,706.126 1707.88,702.016 1708.44,686.428 1709,687.832 1709.56,653.054 1710.12,650.962 1710.68,640.556 1711.24,660.013 1711.8,630.005 1712.36,666.148 1712.92,650.136 1713.48,669.17 1714.04,686.337 1714.6,685.853 1715.15,703.891 1715.71,701.988 1716.27,686.713 1716.83,690.063 1717.39,703.597 1717.95,683.632 1718.51,651.784 1719.07,672.211 1719.63,672.501 1720.19,690.067 1720.75,690.877 1721.31,689.673 1721.87,722.569 1722.42,722.501 1722.98,750.811 1723.54,781.387 1724.1,758.1 1724.66,758.7 1725.22,753.513 1725.78,763.913 1726.34,740.708 1726.9,722.827 1727.46,735.773 1728.02,718.646 1728.58,719.076 1729.14,684.406 1729.69,667.482 1730.25,636.044 1730.81,656.405 1731.37,657.652 1731.93,662.643 1732.49,663.239 1733.05,664.198 1733.61,665.837 1734.17,667.222 1734.73,697.853 1735.29,699.222 1735.85,678.953 1736.41,711.327 1736.97,741.986 1737.52,740.112 1738.08,735.071 1738.64,731.884 1739.2,698.456 1739.76,715.398 1740.32,744.348 1740.88,741.713 1741.44,708.205 1742,740.125 1742.56,769.53 1743.12,765.831 1743.68,760.417 1744.24,756.663 1744.79,734.036 1745.35,733.351 1745.91,731.263 1746.47,730.68 1747.03,696.23 1747.59,645.054 1748.15,663.444 1748.71,648.683 1749.27,633.198 1749.83,640.499 1750.39,660.155 1750.95,690.54 1751.51,719.971 1752.06,703.166 1752.62,700.933 1753.18,684.012 1753.74,698.662 1754.3,694.756 1754.86,725.318 1755.42,705.907 1755.98,705.023 1756.54,686.553 1757.1,684.544 1757.66,668.461 1758.22,651.826 1758.78,683.706 1759.34,699.11 1759.89,665.816 1760.45,669.536 1761.01,669.172 1761.57,636.107 1762.13,638.216 1762.69,658.67 1763.25,662.49 1763.81,661.463 1764.37,661.581 1764.93,667.175 1765.49,666.156 1766.05,617.353 1766.61,603.068 1767.16,621.759 1767.72,639.601 1768.28,691.085 1768.84,644.223 1769.4,646.325 1769.96,650.002 1770.52,651.943 1771.08,623.713 1771.64,643.426 1772.2,629.453 1772.76,649.633 1773.32,634.525 1773.88,640.6 1774.43,659.264 1774.99,656.672 1775.55,640.145 1776.11,645.493 1776.67,644.368 1777.23,628.92 1777.79,648.692 1778.35,651.384 1778.91,668.429 1779.47,686.855 1780.03,668.431 1780.59,719.691 1781.15,730.417 1781.71,729.431 1782.26,725.979 1782.82,725.504 1783.38,694.727 1783.94,680.233 1784.5,700.926 1785.06,695.608 1785.62,710.065 1786.18,709.878 1786.74,709.206 1787.3,725.877 1787.86,722.278 1788.42,722.31 1788.98,724.6 1789.53,750.736 1790.09,761.657 1790.65,757.518 1791.21,783.137 1791.77,793.86 1792.33,787.653 1792.89,782.943 1793.45,810.332 1794.01,806.542 1794.57,803.048 1795.13,796.018 1795.69,793.116 1796.25,785.247 1796.8,793.933 1797.36,806.697 1797.92,830.726 1798.48,824.154 1799.04,817.681 1799.6,778.004 1800.16,756.079 1800.72,753.07 1801.28,727.172 1801.84,727.385 1802.4,723.669 1802.96,750.874 1803.52,734.726 1804.08,732.66 1804.63,728.938 1805.19,710.142 1805.75,710.21 1806.31,690.963 1806.87,690.818 1807.43,707.49 1807.99,707.72 1808.55,693.173 1809.11,741.222 1809.67,753.809 1810.23,746.917 1810.79,772.83 1811.35,769.982 1811.9,764.52 1812.46,744.192 1813.02,709.556 1813.58,704.895 1814.14,701.732 1814.7,654.499 1815.26,621.628 1815.82,629.201 1816.38,616.713 1816.94,618.844 1817.5,618.201 1818.06,621.191 1818.62,590.817 1819.18,565.591 1819.73,589.361 1820.29,627.666 1820.85,647.54 1821.41,650.052 1821.97,650.808 1822.53,636.222 1823.09,605.373 1823.65,658.764 1824.21,645.643 1824.77,633.598 1825.33,652 1825.89,668.491 1826.45,652.374 1827,654.761 1827.56,674.947 1828.12,688.194 1828.68,703.56 1829.24,700.845 1829.8,715.131 1830.36,680.024 1830.92,647.694 1831.48,615.522 1832.04,617.633 1832.6,635.318 1833.16,591.25 1833.72,613.874 1834.27,602.734 1834.83,624.528 1835.39,642.378 1835.95,642.273 1836.51,630.144 1837.07,647.858 1837.63,617.427 1838.19,590.2 \"/>\n<path clip-path=\"url(#clip193)\" d=\"M720.247 688.991 L720.806 688.991 L721.365 688.991 L721.924 688.991 L722.484 688.991 L723.043 688.991 L723.602 688.991 L724.161 688.991 L724.721 688.991 L725.28 688.991 L725.839 688.991 L726.398 688.991 L726.958 688.991 L727.517 688.991 L728.076 688.991 L728.635 688.991 L729.195 688.991 L729.754 688.991 L730.313 688.991 L730.872 688.991 L731.432 688.991 L731.991 688.991 L732.55 688.991 L733.109 688.991 L733.669 688.991 L734.228 688.991 L734.787 688.991 L735.346 688.991 L735.906 688.991 L736.465 688.991 L737.024 688.991 L737.583 688.991 L738.143 688.991 L738.702 688.991 L739.261 688.991 L739.82 688.991 L740.38 688.991 L740.939 688.991 L741.498 688.991 L742.057 688.991 L742.617 688.991 L743.176 688.991 L743.735 688.991 L744.294 688.991 L744.854 688.991 L745.413 688.991 L745.972 688.991 L746.531 688.991 L747.091 688.991 L747.65 688.991 L748.209 688.991 L748.768 688.991 L749.328 688.991 L749.887 688.991 L750.446 688.991 L751.005 688.991 L751.565 688.991 L752.124 688.991 L752.683 688.991 L753.242 688.991 L753.802 688.991 L754.361 688.991 L754.92 688.991 L755.479 688.991 L756.039 688.991 L756.598 688.991 L757.157 688.991 L757.716 688.991 L758.276 688.991 L758.835 688.991 L759.394 688.991 L759.953 688.991 L760.513 688.991 L761.072 688.991 L761.631 688.991 L762.19 688.991 L762.75 688.991 L763.309 688.991 L763.868 688.991 L764.427 688.991 L764.987 688.991 L765.546 688.991 L766.105 688.991 L766.664 688.991 L767.224 688.991 L767.783 688.991 L768.342 688.991 L768.901 688.991 L769.461 688.991 L770.02 688.991 L770.579 688.991 L771.138 688.991 L771.698 688.991 L772.257 688.991 L772.816 688.991 L773.375 688.991 L773.935 688.991 L774.494 688.991 L775.053 688.991 L775.612 688.991 L776.172 688.991 L776.731 688.991 L777.29 688.991 L777.849 688.991 L778.409 688.991 L778.968 688.991 L779.527 688.991 L780.086 688.991 L780.646 688.991 L781.205 688.991 L781.764 688.991 L782.323 688.991 L782.883 688.991 L783.442 688.991 L784.001 688.991 L784.56 688.991 L785.12 688.991 L785.679 688.991 L786.238 688.991 L786.797 688.991 L787.357 688.991 L787.916 688.991 L788.475 688.991 L789.034 688.991 L789.594 688.991 L790.153 688.991 L790.712 688.991 L791.271 688.991 L791.831 688.991 L792.39 688.991 L792.949 688.991 L793.508 688.991 L794.068 688.991 L794.627 688.991 L795.186 688.991 L795.745 688.991 L796.305 688.991 L796.864 688.991 L797.423 688.991 L797.982 688.991 L798.542 688.991 L799.101 688.991 L799.66 688.991 L800.219 688.991 L800.779 688.991 L801.338 688.991 L801.897 688.991 L802.456 688.991 L803.016 688.991 L803.575 688.991 L804.134 688.991 L804.693 688.991 L805.253 688.991 L805.812 688.991 L806.371 688.991 L806.931 688.991 L807.49 688.991 L808.049 688.991 L808.608 688.991 L809.168 688.991 L809.727 688.991 L810.286 688.991 L810.845 688.991 L811.405 688.991 L811.964 688.991 L812.523 688.991 L813.082 688.991 L813.642 688.991 L814.201 688.991 L814.76 688.991 L815.319 688.991 L815.879 688.991 L816.438 688.991 L816.997 688.991 L817.556 688.991 L818.116 688.991 L818.675 688.991 L819.234 688.991 L819.793 688.991 L820.353 688.991 L820.912 688.991 L821.471 688.991 L822.03 688.991 L822.59 688.991 L823.149 688.991 L823.708 688.991 L824.267 688.991 L824.827 688.991 L825.386 688.991 L825.945 688.991 L826.504 688.991 L827.064 688.991 L827.623 688.991 L828.182 688.991 L828.741 688.991 L829.301 688.991 L829.86 688.991 L830.419 688.991 L830.978 688.991 L831.538 688.991 L832.097 688.991 L832.656 688.991 L833.215 688.991 L833.775 688.991 L834.334 688.991 L834.893 688.991 L835.452 688.991 L836.012 688.991 L836.571 688.991 L837.13 688.991 L837.689 688.991 L838.249 688.991 L838.808 688.991 L839.367 688.991 L839.926 688.991 L840.486 688.991 L841.045 688.991 L841.604 688.991 L842.163 688.991 L842.723 688.991 L843.282 688.991 L843.841 688.991 L844.4 688.991 L844.96 688.991 L845.519 688.991 L846.078 688.991 L846.637 688.991 L847.197 688.991 L847.756 688.991 L848.315 688.991 L848.874 688.991 L849.434 688.991 L849.993 688.991 L850.552 688.991 L851.111 688.991 L851.671 688.991 L852.23 688.991 L852.789 688.991 L853.348 688.991 L853.908 688.991 L854.467 688.991 L855.026 688.991 L855.585 688.991 L856.145 688.991 L856.704 688.991 L857.263 688.991 L857.822 688.991 L858.382 688.991 L858.941 688.991 L859.5 688.991 L860.059 688.991 L860.619 688.991 L861.178 688.991 L861.737 688.991 L862.296 688.991 L862.856 688.991 L863.415 688.991 L863.974 688.991 L864.533 688.991 L865.093 688.991 L865.652 688.991 L866.211 688.991 L866.77 688.991 L867.33 688.991 L867.889 688.991 L868.448 688.991 L869.007 688.991 L869.567 688.991 L870.126 688.991 L870.685 688.991 L871.244 688.991 L871.804 688.991 L872.363 688.991 L872.922 688.991 L873.481 688.991 L874.041 688.991 L874.6 688.991 L875.159 688.991 L875.718 688.991 L876.278 688.991 L876.837 688.991 L877.396 688.991 L877.955 688.991 L878.515 688.991 L879.074 688.991 L879.633 688.991 L880.192 688.991 L880.752 688.991 L881.311 688.991 L881.87 688.991 L882.429 688.991 L882.989 688.991 L883.548 688.991 L884.107 688.991 L884.666 688.991 L885.226 688.991 L885.785 688.991 L886.344 688.991 L886.903 688.991 L887.463 688.991 L888.022 688.991 L888.581 688.991 L889.14 688.991 L889.7 688.991 L890.259 688.991 L890.818 688.991 L891.377 688.991 L891.937 688.991 L892.496 688.991 L893.055 688.991 L893.614 688.991 L894.174 688.991 L894.733 688.991 L895.292 688.991 L895.851 688.991 L896.411 688.991 L896.97 688.991 L897.529 688.991 L898.088 688.991 L898.648 688.991 L899.207 688.991 L899.766 688.991 L900.325 688.991 L900.885 688.991 L901.444 688.991 L902.003 688.991 L902.562 688.991 L903.122 688.991 L903.681 688.991 L904.24 688.991 L904.799 688.991 L905.359 688.991 L905.918 688.991 L906.477 688.991 L907.036 688.991 L907.596 688.991 L908.155 688.991 L908.714 688.991 L909.273 688.991 L909.833 688.991 L910.392 688.991 L910.951 688.991 L911.51 688.991 L912.07 688.991 L912.629 688.991 L913.188 688.991 L913.747 688.991 L914.307 688.991 L914.866 688.991 L915.425 688.991 L915.984 688.991 L916.544 688.991 L917.103 688.991 L917.662 688.991 L918.221 688.991 L918.781 688.991 L919.34 688.991 L919.899 688.991 L920.458 688.991 L921.018 688.991 L921.577 688.991 L922.136 688.991 L922.695 688.991 L923.255 688.991 L923.814 688.991 L924.373 688.991 L924.932 688.991 L925.492 688.991 L926.051 688.991 L926.61 688.991 L927.169 688.991 L927.729 688.991 L928.288 688.991 L928.847 688.991 L929.406 688.991 L929.966 688.991 L930.525 688.991 L931.084 688.991 L931.644 688.991 L932.203 688.991 L932.762 688.991 L933.321 688.991 L933.881 688.991 L934.44 688.991 L934.999 688.991 L935.558 688.991 L936.118 688.991 L936.677 688.991 L937.236 688.991 L937.795 688.991 L938.355 688.991 L938.914 688.991 L939.473 688.991 L940.032 688.991 L940.592 688.991 L941.151 688.991 L941.71 688.991 L942.269 688.991 L942.829 688.991 L943.388 688.991 L943.947 688.991 L944.506 688.991 L945.066 688.991 L945.625 688.991 L946.184 688.991 L946.743 688.991 L947.303 688.991 L947.862 688.991 L948.421 688.991 L948.98 688.991 L949.54 688.991 L950.099 688.991 L950.658 688.991 L951.217 688.991 L951.777 688.991 L952.336 688.991 L952.895 688.991 L953.454 688.991 L954.014 688.991 L954.573 688.991 L955.132 688.991 L955.691 688.991 L956.251 688.991 L956.81 688.991 L957.369 688.991 L957.928 688.991 L958.488 688.991 L959.047 688.991 L959.606 688.991 L960.165 688.991 L960.725 688.991 L961.284 688.991 L961.843 688.991 L962.402 688.991 L962.962 688.991 L963.521 688.991 L964.08 688.991 L964.639 688.991 L965.199 688.991 L965.758 688.991 L966.317 688.991 L966.876 688.991 L967.436 688.991 L967.995 688.991 L968.554 688.991 L969.113 688.991 L969.673 688.991 L970.232 688.991 L970.791 688.991 L971.35 688.991 L971.91 688.991 L972.469 688.991 L973.028 688.991 L973.587 688.991 L974.147 688.991 L974.706 688.991 L975.265 688.991 L975.824 688.991 L976.384 688.991 L976.943 688.991 L977.502 688.991 L978.061 688.991 L978.621 688.991 L979.18 688.991 L979.739 688.991 L980.298 688.991 L980.858 688.991 L981.417 688.991 L981.976 688.991 L982.535 688.991 L983.095 688.991 L983.654 688.991 L984.213 688.991 L984.772 688.991 L985.332 688.991 L985.891 688.991 L986.45 688.991 L987.009 688.991 L987.569 688.991 L988.128 688.991 L988.687 688.991 L989.246 688.991 L989.806 688.991 L990.365 688.991 L990.924 688.991 L991.483 688.991 L992.043 688.991 L992.602 688.991 L993.161 688.991 L993.72 688.991 L994.28 688.991 L994.839 688.991 L995.398 688.991 L995.957 688.991 L996.517 688.991 L997.076 688.991 L997.635 688.991 L998.194 688.991 L998.754 688.991 L999.313 688.991 L999.872 688.991 L1000.43 688.991 L1000.99 688.991 L1001.55 688.991 L1002.11 688.991 L1002.67 688.991 L1003.23 688.991 L1003.79 688.991 L1004.35 688.991 L1004.91 688.991 L1005.46 688.991 L1006.02 688.991 L1006.58 688.991 L1007.14 688.991 L1007.7 688.991 L1008.26 688.991 L1008.82 688.991 L1009.38 688.991 L1009.94 688.991 L1010.5 688.991 L1011.06 688.991 L1011.62 688.991 L1012.18 688.991 L1012.73 688.991 L1013.29 688.991 L1013.85 688.991 L1014.41 688.991 L1014.97 688.991 L1015.53 688.991 L1016.09 688.991 L1016.65 688.991 L1017.21 688.991 L1017.77 688.991 L1018.33 688.991 L1018.89 688.991 L1019.45 688.991 L1020.01 688.991 L1020.56 688.991 L1021.12 688.991 L1021.68 688.991 L1022.24 688.991 L1022.8 688.991 L1023.36 688.991 L1023.92 688.991 L1024.48 688.991 L1025.04 688.991 L1025.6 688.991 L1026.16 688.991 L1026.72 688.991 L1027.28 688.991 L1027.83 688.991 L1028.39 688.991 L1028.95 688.991 L1029.51 688.991 L1030.07 688.991 L1030.63 688.991 L1031.19 688.991 L1031.75 688.991 L1032.31 688.991 L1032.87 688.991 L1033.43 688.991 L1033.99 688.991 L1034.55 688.991 L1035.1 688.991 L1035.66 688.991 L1036.22 688.991 L1036.78 688.991 L1037.34 688.991 L1037.9 688.991 L1038.46 688.991 L1039.02 688.991 L1039.58 688.991 L1040.14 688.991 L1040.7 688.991 L1041.26 688.991 L1041.82 688.991 L1042.38 688.991 L1042.93 688.991 L1043.49 688.991 L1044.05 688.991 L1044.61 688.991 L1045.17 688.991 L1045.73 688.991 L1046.29 688.991 L1046.85 688.991 L1047.41 688.991 L1047.97 688.991 L1048.53 688.991 L1049.09 688.991 L1049.65 688.991 L1050.2 688.991 L1050.76 688.991 L1051.32 688.991 L1051.88 688.991 L1052.44 688.991 L1053 688.991 L1053.56 688.991 L1054.12 688.991 L1054.68 688.991 L1055.24 688.991 L1055.8 688.991 L1056.36 688.991 L1056.92 688.991 L1057.48 688.991 L1058.03 688.991 L1058.59 688.991 L1059.15 688.991 L1059.71 688.991 L1060.27 688.991 L1060.83 688.991 L1061.39 688.991 L1061.95 688.991 L1062.51 688.991 L1063.07 688.991 L1063.63 688.991 L1064.19 688.991 L1064.75 688.991 L1065.3 688.991 L1065.86 688.991 L1066.42 688.991 L1066.98 688.991 L1067.54 688.991 L1068.1 688.991 L1068.66 688.991 L1069.22 688.991 L1069.78 688.991 L1070.34 688.991 L1070.9 688.991 L1071.46 688.991 L1072.02 688.991 L1072.57 688.991 L1073.13 688.991 L1073.69 688.991 L1074.25 688.991 L1074.81 688.991 L1075.37 688.991 L1075.93 688.991 L1076.49 688.991 L1077.05 688.991 L1077.61 688.991 L1078.17 688.991 L1078.73 688.991 L1079.29 688.991 L1079.85 688.991 L1080.4 688.991 L1080.96 688.991 L1081.52 688.991 L1082.08 688.991 L1082.64 688.991 L1083.2 688.991 L1083.76 688.991 L1084.32 688.991 L1084.88 688.991 L1085.44 688.991 L1086 688.991 L1086.56 688.991 L1087.12 688.991 L1087.67 688.991 L1088.23 688.991 L1088.79 688.991 L1089.35 688.991 L1089.91 688.991 L1090.47 688.991 L1091.03 688.991 L1091.59 688.991 L1092.15 688.991 L1092.71 688.991 L1093.27 688.991 L1093.83 688.991 L1094.39 688.991 L1094.94 688.991 L1095.5 688.991 L1096.06 688.991 L1096.62 688.991 L1097.18 688.991 L1097.74 688.991 L1098.3 688.991 L1098.86 688.991 L1099.42 688.991 L1099.98 688.991 L1100.54 688.991 L1101.1 688.991 L1101.66 688.991 L1102.22 688.991 L1102.77 688.991 L1103.33 688.991 L1103.89 688.991 L1104.45 688.991 L1105.01 688.991 L1105.57 688.991 L1106.13 688.991 L1106.69 688.991 L1107.25 688.991 L1107.81 688.991 L1108.37 688.991 L1108.93 688.991 L1109.49 688.991 L1110.04 688.991 L1110.6 688.991 L1111.16 688.991 L1111.72 688.991 L1112.28 688.991 L1112.84 688.991 L1113.4 688.991 L1113.96 688.991 L1114.52 688.991 L1115.08 688.991 L1115.64 688.991 L1116.2 688.991 L1116.76 688.991 L1117.31 688.991 L1117.87 688.991 L1118.43 688.991 L1118.99 688.991 L1119.55 688.991 L1120.11 688.991 L1120.67 688.991 L1121.23 688.991 L1121.79 688.991 L1122.35 688.991 L1122.91 688.991 L1123.47 688.991 L1124.03 688.991 L1124.59 688.991 L1125.14 688.991 L1125.7 688.991 L1126.26 688.991 L1126.82 688.991 L1127.38 688.991 L1127.94 688.991 L1128.5 688.991 L1129.06 688.991 L1129.62 688.991 L1130.18 688.991 L1130.74 688.991 L1131.3 688.991 L1131.86 688.991 L1132.41 688.991 L1132.97 688.991 L1133.53 688.991 L1134.09 688.991 L1134.65 688.991 L1135.21 688.991 L1135.77 688.991 L1136.33 688.991 L1136.89 688.991 L1137.45 688.991 L1138.01 688.991 L1138.57 688.991 L1139.13 688.991 L1139.68 688.991 L1140.24 688.991 L1140.8 688.991 L1141.36 688.991 L1141.92 688.991 L1142.48 688.991 L1143.04 688.991 L1143.6 688.991 L1144.16 688.991 L1144.72 688.991 L1145.28 688.991 L1145.84 688.991 L1146.4 688.991 L1146.96 688.991 L1147.51 688.991 L1148.07 688.991 L1148.63 688.991 L1149.19 688.991 L1149.75 688.991 L1150.31 688.991 L1150.87 688.991 L1151.43 688.991 L1151.99 688.991 L1152.55 688.991 L1153.11 688.991 L1153.67 688.991 L1154.23 688.991 L1154.78 688.991 L1155.34 688.991 L1155.9 688.991 L1156.46 688.991 L1157.02 688.991 L1157.58 688.991 L1158.14 688.991 L1158.7 688.991 L1159.26 688.991 L1159.82 688.991 L1160.38 688.991 L1160.94 688.991 L1161.5 688.991 L1162.05 688.991 L1162.61 688.991 L1163.17 688.991 L1163.73 688.991 L1164.29 688.991 L1164.85 688.991 L1165.41 688.991 L1165.97 688.991 L1166.53 688.991 L1167.09 688.991 L1167.65 688.991 L1168.21 688.991 L1168.77 688.991 L1169.33 688.991 L1169.88 688.991 L1170.44 688.991 L1171 688.991 L1171.56 688.991 L1172.12 688.991 L1172.68 688.991 L1173.24 688.991 L1173.8 688.991 L1174.36 688.991 L1174.92 688.991 L1175.48 688.991 L1176.04 688.991 L1176.6 688.991 L1177.15 688.991 L1177.71 688.991 L1178.27 688.991 L1178.83 688.991 L1179.39 688.991 L1179.95 688.991 L1180.51 688.991 L1181.07 688.991 L1181.63 688.991 L1182.19 688.991 L1182.75 688.991 L1183.31 688.991 L1183.87 688.991 L1184.43 688.991 L1184.98 688.991 L1185.54 688.991 L1186.1 688.991 L1186.66 688.991 L1187.22 688.991 L1187.78 688.991 L1188.34 688.991 L1188.9 688.991 L1189.46 688.991 L1190.02 688.991 L1190.58 688.991 L1191.14 688.991 L1191.7 688.991 L1192.25 688.991 L1192.81 688.991 L1193.37 688.991 L1193.93 688.991 L1194.49 688.991 L1195.05 688.991 L1195.61 688.991 L1196.17 688.991 L1196.73 688.991 L1197.29 688.991 L1197.85 688.991 L1198.41 688.991 L1198.97 688.991 L1199.52 688.991 L1200.08 688.991 L1200.64 688.991 L1201.2 688.991 L1201.76 688.991 L1202.32 688.991 L1202.88 688.991 L1203.44 688.991 L1204 688.991 L1204.56 688.991 L1205.12 688.991 L1205.68 688.991 L1206.24 688.991 L1206.8 688.991 L1207.35 688.991 L1207.91 688.991 L1208.47 688.991 L1209.03 688.991 L1209.59 688.991 L1210.15 688.991 L1210.71 688.991 L1211.27 688.991 L1211.83 688.991 L1212.39 688.991 L1212.95 688.991 L1213.51 688.991 L1214.07 688.991 L1214.62 688.991 L1215.18 688.991 L1215.74 688.991 L1216.3 688.991 L1216.86 688.991 L1217.42 688.991 L1217.98 688.991 L1218.54 688.991 L1219.1 688.991 L1219.66 688.991 L1220.22 688.991 L1220.78 688.991 L1221.34 688.991 L1221.89 688.991 L1222.45 688.991 L1223.01 688.991 L1223.57 688.991 L1224.13 688.991 L1224.69 688.991 L1225.25 688.991 L1225.81 688.991 L1226.37 688.991 L1226.93 688.991 L1227.49 688.991 L1228.05 688.991 L1228.61 688.991 L1229.17 688.991 L1229.72 688.991 L1230.28 688.991 L1230.84 688.991 L1231.4 688.991 L1231.96 688.991 L1232.52 688.991 L1233.08 688.991 L1233.64 688.991 L1234.2 688.991 L1234.76 688.991 L1235.32 688.991 L1235.88 688.991 L1236.44 688.991 L1236.99 688.991 L1237.55 688.991 L1238.11 688.991 L1238.67 688.991 L1239.23 688.991 L1239.79 688.991 L1240.35 688.991 L1240.91 688.991 L1241.47 688.991 L1242.03 688.991 L1242.59 688.991 L1243.15 688.991 L1243.71 688.991 L1244.26 688.991 L1244.82 688.991 L1245.38 688.991 L1245.94 688.991 L1246.5 688.991 L1247.06 688.991 L1247.62 688.991 L1248.18 688.991 L1248.74 688.991 L1249.3 688.991 L1249.86 688.991 L1250.42 688.991 L1250.98 688.991 L1251.54 688.991 L1252.09 688.991 L1252.65 688.991 L1253.21 688.991 L1253.77 688.991 L1254.33 688.991 L1254.89 688.991 L1255.45 688.991 L1256.01 688.991 L1256.57 688.991 L1257.13 688.991 L1257.69 688.991 L1258.25 688.991 L1258.81 688.991 L1259.36 688.991 L1259.92 688.991 L1260.48 688.991 L1261.04 688.991 L1261.6 688.991 L1262.16 688.991 L1262.72 688.991 L1263.28 688.991 L1263.84 688.991 L1264.4 688.991 L1264.96 688.991 L1265.52 688.991 L1266.08 688.991 L1266.63 688.991 L1267.19 688.991 L1267.75 688.991 L1268.31 688.991 L1268.87 688.991 L1269.43 688.991 L1269.99 688.991 L1270.55 688.991 L1271.11 688.991 L1271.67 688.991 L1272.23 688.991 L1272.79 688.991 L1273.35 688.991 L1273.91 688.991 L1274.46 688.991 L1275.02 688.991 L1275.58 688.991 L1276.14 688.991 L1276.7 688.991 L1277.26 688.991 L1277.82 688.991 L1278.38 688.991 L1278.94 688.991 L1279.5 688.991 L1280.06 688.991 L1280.62 688.991 L1281.18 688.991 L1281.73 688.991 L1282.29 688.991 L1282.85 688.991 L1283.41 688.991 L1283.97 688.991 L1284.53 688.991 L1285.09 688.991 L1285.65 688.991 L1286.21 688.991 L1286.77 688.991 L1287.33 688.991 L1287.89 688.991 L1288.45 688.991 L1289 688.991 L1289.56 688.991 L1290.12 688.991 L1290.68 688.991 L1291.24 688.991 L1291.8 688.991 L1292.36 688.991 L1292.92 688.991 L1293.48 688.991 L1294.04 688.991 L1294.6 688.991 L1295.16 688.991 L1295.72 688.991 L1296.28 688.991 L1296.83 688.991 L1297.39 688.991 L1297.95 688.991 L1298.51 688.991 L1299.07 688.991 L1299.63 688.991 L1300.19 688.991 L1300.75 688.991 L1301.31 688.991 L1301.87 688.991 L1302.43 688.991 L1302.99 688.991 L1303.55 688.991 L1304.1 688.991 L1304.66 688.991 L1305.22 688.991 L1305.78 688.991 L1306.34 688.991 L1306.9 688.991 L1307.46 688.991 L1308.02 688.991 L1308.58 688.991 L1309.14 688.991 L1309.7 688.991 L1310.26 688.991 L1310.82 688.991 L1311.38 688.991 L1311.93 688.991 L1312.49 688.991 L1313.05 688.991 L1313.61 688.991 L1314.17 688.991 L1314.73 688.991 L1315.29 688.991 L1315.85 688.991 L1316.41 688.991 L1316.97 688.991 L1317.53 688.991 L1318.09 688.991 L1318.65 688.991 L1319.2 688.991 L1319.76 688.991 L1320.32 688.991 L1320.88 688.991 L1321.44 688.991 L1322 688.991 L1322.56 688.991 L1323.12 688.991 L1323.68 688.991 L1324.24 688.991 L1324.8 688.991 L1325.36 688.991 L1325.92 688.991 L1326.47 688.991 L1327.03 688.991 L1327.59 688.991 L1328.15 688.991 L1328.71 688.991 L1329.27 688.991 L1329.83 688.991 L1330.39 688.991 L1330.95 688.991 L1331.51 688.991 L1332.07 688.991 L1332.63 688.991 L1333.19 688.991 L1333.75 688.991 L1334.3 688.991 L1334.86 688.991 L1335.42 688.991 L1335.98 688.991 L1336.54 688.991 L1337.1 688.991 L1337.66 688.991 L1338.22 688.991 L1338.78 688.991 L1339.34 688.991 L1339.9 688.991 L1340.46 688.991 L1341.02 688.991 L1341.57 688.991 L1342.13 688.991 L1342.69 688.991 L1343.25 688.991 L1343.81 688.991 L1344.37 688.991 L1344.93 688.991 L1345.49 688.991 L1346.05 688.991 L1346.61 688.991 L1347.17 688.991 L1347.73 688.991 L1348.29 688.991 L1348.84 688.991 L1349.4 688.991 L1349.96 688.991 L1350.52 688.991 L1351.08 688.991 L1351.64 688.991 L1352.2 688.991 L1352.76 688.991 L1353.32 688.991 L1353.88 688.991 L1354.44 688.991 L1355 688.991 L1355.56 688.991 L1356.12 688.991 L1356.67 688.991 L1357.23 688.991 L1357.79 688.991 L1358.35 688.991 L1358.91 688.991 L1359.47 688.991 L1360.03 688.991 L1360.59 688.991 L1361.15 688.991 L1361.71 688.991 L1362.27 688.991 L1362.83 688.991 L1363.39 688.991 L1363.94 688.991 L1364.5 688.991 L1365.06 688.991 L1365.62 688.991 L1366.18 688.991 L1366.74 688.991 L1367.3 688.991 L1367.86 688.991 L1368.42 688.991 L1368.98 688.991 L1369.54 688.991 L1370.1 688.991 L1370.66 688.991 L1371.21 688.991 L1371.77 688.991 L1372.33 688.991 L1372.89 688.991 L1373.45 688.991 L1374.01 688.991 L1374.57 688.991 L1375.13 688.991 L1375.69 688.991 L1376.25 688.991 L1376.81 688.991 L1377.37 688.991 L1377.93 688.991 L1378.49 688.991 L1379.04 688.991 L1379.6 688.991 L1380.16 688.991 L1380.72 688.991 L1381.28 688.991 L1381.84 688.991 L1382.4 688.991 L1382.96 688.991 L1383.52 688.991 L1384.08 688.991 L1384.64 688.991 L1385.2 688.991 L1385.76 688.991 L1386.31 688.991 L1386.87 688.991 L1387.43 688.991 L1387.99 688.991 L1388.55 688.991 L1389.11 688.991 L1389.67 688.991 L1390.23 688.991 L1390.79 688.991 L1391.35 688.991 L1391.91 688.991 L1392.47 688.991 L1393.03 688.991 L1393.58 688.991 L1394.14 688.991 L1394.7 688.991 L1395.26 688.991 L1395.82 688.991 L1396.38 688.991 L1396.94 688.991 L1397.5 688.991 L1398.06 688.991 L1398.62 688.991 L1399.18 688.991 L1399.74 688.991 L1400.3 688.991 L1400.86 688.991 L1401.41 688.991 L1401.97 688.991 L1402.53 688.991 L1403.09 688.991 L1403.65 688.991 L1404.21 688.991 L1404.77 688.991 L1405.33 688.991 L1405.89 688.991 L1406.45 688.991 L1407.01 688.991 L1407.57 688.991 L1408.13 688.991 L1408.68 688.991 L1409.24 688.991 L1409.8 688.991 L1410.36 688.991 L1410.92 688.991 L1411.48 688.991 L1412.04 688.991 L1412.6 688.991 L1413.16 688.991 L1413.72 688.991 L1414.28 688.991 L1414.84 688.991 L1415.4 688.991 L1415.95 688.991 L1416.51 688.991 L1417.07 688.991 L1417.63 688.991 L1418.19 688.991 L1418.75 688.991 L1419.31 688.991 L1419.87 688.991 L1420.43 688.991 L1420.99 688.991 L1421.55 688.991 L1422.11 688.991 L1422.67 688.991 L1423.23 688.991 L1423.78 688.991 L1424.34 688.991 L1424.9 688.991 L1425.46 688.991 L1426.02 688.991 L1426.58 688.991 L1427.14 688.991 L1427.7 688.991 L1428.26 688.991 L1428.82 688.991 L1429.38 688.991 L1429.94 688.991 L1430.5 688.991 L1431.05 688.991 L1431.61 688.991 L1432.17 688.991 L1432.73 688.991 L1433.29 688.991 L1433.85 688.991 L1434.41 688.991 L1434.97 688.991 L1435.53 688.991 L1436.09 688.991 L1436.65 688.991 L1437.21 688.991 L1437.77 688.991 L1438.33 688.991 L1438.88 688.991 L1439.44 688.991 L1440 688.991 L1440.56 688.991 L1441.12 688.991 L1441.68 688.991 L1442.24 688.991 L1442.8 688.991 L1443.36 688.991 L1443.92 688.991 L1444.48 688.991 L1445.04 688.991 L1445.6 688.991 L1446.15 688.991 L1446.71 688.991 L1447.27 688.991 L1447.83 688.991 L1448.39 688.991 L1448.95 688.991 L1449.51 688.991 L1450.07 688.991 L1450.63 688.991 L1451.19 688.991 L1451.75 688.991 L1452.31 688.991 L1452.87 688.991 L1453.42 688.991 L1453.98 688.991 L1454.54 688.991 L1455.1 688.991 L1455.66 688.991 L1456.22 688.991 L1456.78 688.991 L1457.34 688.991 L1457.9 688.991 L1458.46 688.991 L1459.02 688.991 L1459.58 688.991 L1460.14 688.991 L1460.7 688.991 L1461.25 688.991 L1461.81 688.991 L1462.37 688.991 L1462.93 688.991 L1463.49 688.991 L1464.05 688.991 L1464.61 688.991 L1465.17 688.991 L1465.73 688.991 L1466.29 688.991 L1466.85 688.991 L1467.41 688.991 L1467.97 688.991 L1468.52 688.991 L1469.08 688.991 L1469.64 688.991 L1470.2 688.991 L1470.76 688.991 L1471.32 688.991 L1471.88 688.991 L1472.44 688.991 L1473 688.991 L1473.56 688.991 L1474.12 688.991 L1474.68 688.991 L1475.24 688.991 L1475.79 688.991 L1476.35 688.991 L1476.91 688.991 L1477.47 688.991 L1478.03 688.991 L1478.59 688.991 L1479.15 688.991 L1479.71 688.991 L1480.27 688.991 L1480.83 688.991 L1481.39 688.991 L1481.95 688.991 L1482.51 688.991 L1483.07 688.991 L1483.62 688.991 L1484.18 688.991 L1484.74 688.991 L1485.3 688.991 L1485.86 688.991 L1486.42 688.991 L1486.98 688.991 L1487.54 688.991 L1488.1 688.991 L1488.66 688.991 L1489.22 688.991 L1489.78 688.991 L1490.34 688.991 L1490.89 688.991 L1491.45 688.991 L1492.01 688.991 L1492.57 688.991 L1493.13 688.991 L1493.69 688.991 L1494.25 688.991 L1494.81 688.991 L1495.37 688.991 L1495.93 688.991 L1496.49 688.991 L1497.05 688.991 L1497.61 688.991 L1498.16 688.991 L1498.72 688.991 L1499.28 688.991 L1499.84 688.991 L1500.4 688.991 L1500.96 688.991 L1501.52 688.991 L1502.08 688.991 L1502.64 688.991 L1503.2 688.991 L1503.76 688.991 L1504.32 688.991 L1504.88 688.991 L1505.44 688.991 L1505.99 688.991 L1506.55 688.991 L1507.11 688.991 L1507.67 688.991 L1508.23 688.991 L1508.79 688.991 L1509.35 688.991 L1509.91 688.991 L1510.47 688.991 L1511.03 688.991 L1511.59 688.991 L1512.15 688.991 L1512.71 688.991 L1513.26 688.991 L1513.82 688.991 L1514.38 688.991 L1514.94 688.991 L1515.5 688.991 L1516.06 688.991 L1516.62 688.991 L1517.18 688.991 L1517.74 688.991 L1518.3 688.991 L1518.86 688.991 L1519.42 688.991 L1519.98 688.991 L1520.53 688.991 L1521.09 688.991 L1521.65 688.991 L1522.21 688.991 L1522.77 688.991 L1523.33 688.991 L1523.89 688.991 L1524.45 688.991 L1525.01 688.991 L1525.57 688.991 L1526.13 688.991 L1526.69 688.991 L1527.25 688.991 L1527.81 688.991 L1528.36 688.991 L1528.92 688.991 L1529.48 688.991 L1530.04 688.991 L1530.6 688.991 L1531.16 688.991 L1531.72 688.991 L1532.28 688.991 L1532.84 688.991 L1533.4 688.991 L1533.96 688.991 L1534.52 688.991 L1535.08 688.991 L1535.63 688.991 L1536.19 688.991 L1536.75 688.991 L1537.31 688.991 L1537.87 688.991 L1538.43 688.991 L1538.99 688.991 L1539.55 688.991 L1540.11 688.991 L1540.67 688.991 L1541.23 688.991 L1541.79 688.991 L1542.35 688.991 L1542.9 688.991 L1543.46 688.991 L1544.02 688.991 L1544.58 688.991 L1545.14 688.991 L1545.7 688.991 L1546.26 688.991 L1546.82 688.991 L1547.38 688.991 L1547.94 688.991 L1548.5 688.991 L1549.06 688.991 L1549.62 688.991 L1550.18 688.991 L1550.73 688.991 L1551.29 688.991 L1551.85 688.991 L1552.41 688.991 L1552.97 688.991 L1553.53 688.991 L1554.09 688.991 L1554.65 688.991 L1555.21 688.991 L1555.77 688.991 L1556.33 688.991 L1556.89 688.991 L1557.45 688.991 L1558 688.991 L1558.56 688.991 L1559.12 688.991 L1559.68 688.991 L1560.24 688.991 L1560.8 688.991 L1561.36 688.991 L1561.92 688.991 L1562.48 688.991 L1563.04 688.991 L1563.6 688.991 L1564.16 688.991 L1564.72 688.991 L1565.28 688.991 L1565.83 688.991 L1566.39 688.991 L1566.95 688.991 L1567.51 688.991 L1568.07 688.991 L1568.63 688.991 L1569.19 688.991 L1569.75 688.991 L1570.31 688.991 L1570.87 688.991 L1571.43 688.991 L1571.99 688.991 L1572.55 688.991 L1573.1 688.991 L1573.66 688.991 L1574.22 688.991 L1574.78 688.991 L1575.34 688.991 L1575.9 688.991 L1576.46 688.991 L1577.02 688.991 L1577.58 688.991 L1578.14 688.991 L1578.7 688.991 L1579.26 688.991 L1579.82 688.991 L1580.37 688.991 L1580.93 688.991 L1581.49 688.991 L1582.05 688.991 L1582.61 688.991 L1583.17 688.991 L1583.73 688.991 L1584.29 688.991 L1584.85 688.991 L1585.41 688.991 L1585.97 688.991 L1586.53 688.991 L1587.09 688.991 L1587.65 688.991 L1588.2 688.991 L1588.76 688.991 L1589.32 688.991 L1589.88 688.991 L1590.44 688.991 L1591 688.991 L1591.56 688.991 L1592.12 688.991 L1592.68 688.991 L1593.24 688.991 L1593.8 688.991 L1594.36 688.991 L1594.92 688.991 L1595.47 688.991 L1596.03 688.991 L1596.59 688.991 L1597.15 688.991 L1597.71 688.991 L1598.27 688.991 L1598.83 688.991 L1599.39 688.991 L1599.95 688.991 L1600.51 688.991 L1601.07 688.991 L1601.63 688.991 L1602.19 688.991 L1602.74 688.991 L1603.3 688.991 L1603.86 688.991 L1604.42 688.991 L1604.98 688.991 L1605.54 688.991 L1606.1 688.991 L1606.66 688.991 L1607.22 688.991 L1607.78 688.991 L1608.34 688.991 L1608.9 688.991 L1609.46 688.991 L1610.02 688.991 L1610.57 688.991 L1611.13 688.991 L1611.69 688.991 L1612.25 688.991 L1612.81 688.991 L1613.37 688.991 L1613.93 688.991 L1614.49 688.991 L1615.05 688.991 L1615.61 688.991 L1616.17 688.991 L1616.73 688.991 L1617.29 688.991 L1617.84 688.991 L1618.4 688.991 L1618.96 688.991 L1619.52 688.991 L1620.08 688.991 L1620.64 688.991 L1621.2 688.991 L1621.76 688.991 L1622.32 688.991 L1622.88 688.991 L1623.44 688.991 L1624 688.991 L1624.56 688.991 L1625.11 688.991 L1625.67 688.991 L1626.23 688.991 L1626.79 688.991 L1627.35 688.991 L1627.91 688.991 L1628.47 688.991 L1629.03 688.991 L1629.59 688.991 L1630.15 688.991 L1630.71 688.991 L1631.27 688.991 L1631.83 688.991 L1632.39 688.991 L1632.94 688.991 L1633.5 688.991 L1634.06 688.991 L1634.62 688.991 L1635.18 688.991 L1635.74 688.991 L1636.3 688.991 L1636.86 688.991 L1637.42 688.991 L1637.98 688.991 L1638.54 688.991 L1639.1 688.991 L1639.66 688.991 L1640.21 688.991 L1640.77 688.991 L1641.33 688.991 L1641.89 688.991 L1642.45 688.991 L1643.01 688.991 L1643.57 688.991 L1644.13 688.991 L1644.69 688.991 L1645.25 688.991 L1645.81 688.991 L1646.37 688.991 L1646.93 688.991 L1647.48 688.991 L1648.04 688.991 L1648.6 688.991 L1649.16 688.991 L1649.72 688.991 L1650.28 688.991 L1650.84 688.991 L1651.4 688.991 L1651.96 688.991 L1652.52 688.991 L1653.08 688.991 L1653.64 688.991 L1654.2 688.991 L1654.76 688.991 L1655.31 688.991 L1655.87 688.991 L1656.43 688.991 L1656.99 688.991 L1657.55 688.991 L1658.11 688.991 L1658.67 688.991 L1659.23 688.991 L1659.79 688.991 L1660.35 688.991 L1660.91 688.991 L1661.47 688.991 L1662.03 688.991 L1662.58 688.991 L1663.14 688.991 L1663.7 688.991 L1664.26 688.991 L1664.82 688.991 L1665.38 688.991 L1665.94 688.991 L1666.5 688.991 L1667.06 688.991 L1667.62 688.991 L1668.18 688.991 L1668.74 688.991 L1669.3 688.991 L1669.85 688.991 L1670.41 688.991 L1670.97 688.991 L1671.53 688.991 L1672.09 688.991 L1672.65 688.991 L1673.21 688.991 L1673.77 688.991 L1674.33 688.991 L1674.89 688.991 L1675.45 688.991 L1676.01 688.991 L1676.57 688.991 L1677.13 688.991 L1677.68 688.991 L1678.24 688.991 L1678.8 688.991 L1679.36 688.991 L1679.92 688.991 L1680.48 688.991 L1681.04 688.991 L1681.6 688.991 L1682.16 688.991 L1682.72 688.991 L1683.28 688.991 L1683.84 688.991 L1684.4 688.991 L1684.95 688.991 L1685.51 688.991 L1686.07 688.991 L1686.63 688.991 L1687.19 688.991 L1687.75 688.991 L1688.31 688.991 L1688.87 688.991 L1689.43 688.991 L1689.99 688.991 L1690.55 688.991 L1691.11 688.991 L1691.67 688.991 L1692.23 688.991 L1692.78 688.991 L1693.34 688.991 L1693.9 688.991 L1694.46 688.991 L1695.02 688.991 L1695.58 688.991 L1696.14 688.991 L1696.7 688.991 L1697.26 688.991 L1697.82 688.991 L1698.38 688.991 L1698.94 688.991 L1699.5 688.991 L1700.05 688.991 L1700.61 688.991 L1701.17 688.991 L1701.73 688.991 L1702.29 688.991 L1702.85 688.991 L1703.41 688.991 L1703.97 688.991 L1704.53 688.991 L1705.09 688.991 L1705.65 688.991 L1706.21 688.991 L1706.77 688.991 L1707.32 688.991 L1707.88 688.991 L1708.44 688.991 L1709 688.991 L1709.56 688.991 L1710.12 688.991 L1710.68 688.991 L1711.24 688.991 L1711.8 688.991 L1712.36 688.991 L1712.92 688.991 L1713.48 688.991 L1714.04 688.991 L1714.6 688.991 L1715.15 688.991 L1715.71 688.991 L1716.27 688.991 L1716.83 688.991 L1717.39 688.991 L1717.95 688.991 L1718.51 688.991 L1719.07 688.991 L1719.63 688.991 L1720.19 688.991 L1720.75 688.991 L1721.31 688.991 L1721.87 688.991 L1722.42 688.991 L1722.98 688.991 L1723.54 688.991 L1724.1 688.991 L1724.66 688.991 L1725.22 688.991 L1725.78 688.991 L1726.34 688.991 L1726.9 688.991 L1727.46 688.991 L1728.02 688.991 L1728.58 688.991 L1729.14 688.991 L1729.69 688.991 L1730.25 688.991 L1730.81 688.991 L1731.37 688.991 L1731.93 688.991 L1732.49 688.991 L1733.05 688.991 L1733.61 688.991 L1734.17 688.991 L1734.73 688.991 L1735.29 688.991 L1735.85 688.991 L1736.41 688.991 L1736.97 688.991 L1737.52 688.991 L1738.08 688.991 L1738.64 688.991 L1739.2 688.991 L1739.76 688.991 L1740.32 688.991 L1740.88 688.991 L1741.44 688.991 L1742 688.991 L1742.56 688.991 L1743.12 688.991 L1743.68 688.991 L1744.24 688.991 L1744.79 688.991 L1745.35 688.991 L1745.91 688.991 L1746.47 688.991 L1747.03 688.991 L1747.59 688.991 L1748.15 688.991 L1748.71 688.991 L1749.27 688.991 L1749.83 688.991 L1750.39 688.991 L1750.95 688.991 L1751.51 688.991 L1752.06 688.991 L1752.62 688.991 L1753.18 688.991 L1753.74 688.991 L1754.3 688.991 L1754.86 688.991 L1755.42 688.991 L1755.98 688.991 L1756.54 688.991 L1757.1 688.991 L1757.66 688.991 L1758.22 688.991 L1758.78 688.991 L1759.34 688.991 L1759.89 688.991 L1760.45 688.991 L1761.01 688.991 L1761.57 688.991 L1762.13 688.991 L1762.69 688.991 L1763.25 688.991 L1763.81 688.991 L1764.37 688.991 L1764.93 688.991 L1765.49 688.991 L1766.05 688.991 L1766.61 688.991 L1767.16 688.991 L1767.72 688.991 L1768.28 688.991 L1768.84 688.991 L1769.4 688.991 L1769.96 688.991 L1770.52 688.991 L1771.08 688.991 L1771.64 688.991 L1772.2 688.991 L1772.76 688.991 L1773.32 688.991 L1773.88 688.991 L1774.43 688.991 L1774.99 688.991 L1775.55 688.991 L1776.11 688.991 L1776.67 688.991 L1777.23 688.991 L1777.79 688.991 L1778.35 688.991 L1778.91 688.991 L1779.47 688.991 L1780.03 688.991 L1780.59 688.991 L1781.15 688.991 L1781.71 688.991 L1782.26 688.991 L1782.82 688.991 L1783.38 688.991 L1783.94 688.991 L1784.5 688.991 L1785.06 688.991 L1785.62 688.991 L1786.18 688.991 L1786.74 688.991 L1787.3 688.991 L1787.86 688.991 L1788.42 688.991 L1788.98 688.991 L1789.53 688.991 L1790.09 688.991 L1790.65 688.991 L1791.21 688.991 L1791.77 688.991 L1792.33 688.991 L1792.89 688.991 L1793.45 688.991 L1794.01 688.991 L1794.57 688.991 L1795.13 688.991 L1795.69 688.991 L1796.25 688.991 L1796.8 688.991 L1797.36 688.991 L1797.92 688.991 L1798.48 688.991 L1799.04 688.991 L1799.6 688.991 L1800.16 688.991 L1800.72 688.991 L1801.28 688.991 L1801.84 688.991 L1802.4 688.991 L1802.96 688.991 L1803.52 688.991 L1804.08 688.991 L1804.63 688.991 L1805.19 688.991 L1805.75 688.991 L1806.31 688.991 L1806.87 688.991 L1807.43 688.991 L1807.99 688.991 L1808.55 688.991 L1809.11 688.991 L1809.67 688.991 L1810.23 688.991 L1810.79 688.991 L1811.35 688.991 L1811.9 688.991 L1812.46 688.991 L1813.02 688.991 L1813.58 688.991 L1814.14 688.991 L1814.7 688.991 L1815.26 688.991 L1815.82 688.991 L1816.38 688.991 L1816.94 688.991 L1817.5 688.991 L1818.06 688.991 L1818.62 688.991 L1819.18 688.991 L1819.73 688.991 L1820.29 688.991 L1820.85 688.991 L1821.41 688.991 L1821.97 688.991 L1822.53 688.991 L1823.09 688.991 L1823.65 688.991 L1824.21 688.991 L1824.77 688.991 L1825.33 688.991 L1825.89 688.991 L1826.45 688.991 L1827 688.991 L1827.56 688.991 L1828.12 688.991 L1828.68 688.991 L1829.24 688.991 L1829.8 688.991 L1830.36 688.991 L1830.92 688.991 L1831.48 688.991 L1832.04 688.991 L1832.6 688.991 L1833.16 688.991 L1833.72 688.991 L1834.27 688.991 L1834.83 688.991 L1835.39 688.991 L1835.95 688.991 L1836.51 688.991 L1837.07 688.991 L1837.63 688.991 L1838.19 688.991 L1838.19 681.504 L1837.63 681.504 L1837.07 681.504 L1836.51 681.504 L1835.95 681.504 L1835.39 681.504 L1834.83 681.504 L1834.27 681.504 L1833.72 681.504 L1833.16 681.504 L1832.6 681.504 L1832.04 681.504 L1831.48 681.504 L1830.92 681.504 L1830.36 681.504 L1829.8 681.504 L1829.24 681.504 L1828.68 681.504 L1828.12 681.504 L1827.56 681.504 L1827 681.504 L1826.45 681.504 L1825.89 681.504 L1825.33 681.504 L1824.77 681.504 L1824.21 681.504 L1823.65 681.504 L1823.09 681.504 L1822.53 681.504 L1821.97 681.504 L1821.41 681.504 L1820.85 681.504 L1820.29 681.504 L1819.73 681.504 L1819.18 681.504 L1818.62 681.504 L1818.06 681.504 L1817.5 681.504 L1816.94 681.504 L1816.38 681.504 L1815.82 681.504 L1815.26 681.504 L1814.7 681.504 L1814.14 681.504 L1813.58 681.504 L1813.02 681.504 L1812.46 681.504 L1811.9 681.504 L1811.35 681.504 L1810.79 681.504 L1810.23 681.504 L1809.67 681.504 L1809.11 681.504 L1808.55 681.504 L1807.99 681.504 L1807.43 681.504 L1806.87 681.504 L1806.31 681.504 L1805.75 681.504 L1805.19 681.504 L1804.63 681.504 L1804.08 681.504 L1803.52 681.504 L1802.96 681.504 L1802.4 681.504 L1801.84 681.504 L1801.28 681.504 L1800.72 681.504 L1800.16 681.504 L1799.6 681.504 L1799.04 681.504 L1798.48 681.504 L1797.92 681.504 L1797.36 681.504 L1796.8 681.504 L1796.25 681.504 L1795.69 681.504 L1795.13 681.504 L1794.57 681.504 L1794.01 681.504 L1793.45 681.504 L1792.89 681.504 L1792.33 681.504 L1791.77 681.504 L1791.21 681.504 L1790.65 681.504 L1790.09 681.504 L1789.53 681.504 L1788.98 681.504 L1788.42 681.504 L1787.86 681.504 L1787.3 681.504 L1786.74 681.504 L1786.18 681.504 L1785.62 681.504 L1785.06 681.504 L1784.5 681.504 L1783.94 681.504 L1783.38 681.504 L1782.82 681.504 L1782.26 681.504 L1781.71 681.504 L1781.15 681.504 L1780.59 681.504 L1780.03 681.504 L1779.47 681.504 L1778.91 681.504 L1778.35 681.504 L1777.79 681.504 L1777.23 681.504 L1776.67 681.504 L1776.11 681.504 L1775.55 681.504 L1774.99 681.504 L1774.43 681.504 L1773.88 681.504 L1773.32 681.504 L1772.76 681.504 L1772.2 681.504 L1771.64 681.504 L1771.08 681.504 L1770.52 681.504 L1769.96 681.504 L1769.4 681.504 L1768.84 681.504 L1768.28 681.504 L1767.72 681.504 L1767.16 681.504 L1766.61 681.504 L1766.05 681.504 L1765.49 681.504 L1764.93 681.504 L1764.37 681.504 L1763.81 681.504 L1763.25 681.504 L1762.69 681.504 L1762.13 681.504 L1761.57 681.504 L1761.01 681.504 L1760.45 681.504 L1759.89 681.504 L1759.34 681.504 L1758.78 681.504 L1758.22 681.504 L1757.66 681.504 L1757.1 681.504 L1756.54 681.504 L1755.98 681.504 L1755.42 681.504 L1754.86 681.504 L1754.3 681.504 L1753.74 681.504 L1753.18 681.504 L1752.62 681.504 L1752.06 681.504 L1751.51 681.504 L1750.95 681.504 L1750.39 681.504 L1749.83 681.504 L1749.27 681.504 L1748.71 681.504 L1748.15 681.504 L1747.59 681.504 L1747.03 681.504 L1746.47 681.504 L1745.91 681.504 L1745.35 681.504 L1744.79 681.504 L1744.24 681.504 L1743.68 681.504 L1743.12 681.504 L1742.56 681.504 L1742 681.504 L1741.44 681.504 L1740.88 681.504 L1740.32 681.504 L1739.76 681.504 L1739.2 681.504 L1738.64 681.504 L1738.08 681.504 L1737.52 681.504 L1736.97 681.504 L1736.41 681.504 L1735.85 681.504 L1735.29 681.504 L1734.73 681.504 L1734.17 681.504 L1733.61 681.504 L1733.05 681.504 L1732.49 681.504 L1731.93 681.504 L1731.37 681.504 L1730.81 681.504 L1730.25 681.504 L1729.69 681.504 L1729.14 681.504 L1728.58 681.504 L1728.02 681.504 L1727.46 681.504 L1726.9 681.504 L1726.34 681.504 L1725.78 681.504 L1725.22 681.504 L1724.66 681.504 L1724.1 681.504 L1723.54 681.504 L1722.98 681.504 L1722.42 681.504 L1721.87 681.504 L1721.31 681.504 L1720.75 681.504 L1720.19 681.504 L1719.63 681.504 L1719.07 681.504 L1718.51 681.504 L1717.95 681.504 L1717.39 681.504 L1716.83 681.504 L1716.27 681.504 L1715.71 681.504 L1715.15 681.504 L1714.6 681.504 L1714.04 681.504 L1713.48 681.504 L1712.92 681.504 L1712.36 681.504 L1711.8 681.504 L1711.24 681.504 L1710.68 681.504 L1710.12 681.504 L1709.56 681.504 L1709 681.504 L1708.44 681.504 L1707.88 681.504 L1707.32 681.504 L1706.77 681.504 L1706.21 681.504 L1705.65 681.504 L1705.09 681.504 L1704.53 681.504 L1703.97 681.504 L1703.41 681.504 L1702.85 681.504 L1702.29 681.504 L1701.73 681.504 L1701.17 681.504 L1700.61 681.504 L1700.05 681.504 L1699.5 681.504 L1698.94 681.504 L1698.38 681.504 L1697.82 681.504 L1697.26 681.504 L1696.7 681.504 L1696.14 681.504 L1695.58 681.504 L1695.02 681.504 L1694.46 681.504 L1693.9 681.504 L1693.34 681.504 L1692.78 681.504 L1692.23 681.504 L1691.67 681.504 L1691.11 681.504 L1690.55 681.504 L1689.99 681.504 L1689.43 681.504 L1688.87 681.504 L1688.31 681.504 L1687.75 681.504 L1687.19 681.504 L1686.63 681.504 L1686.07 681.504 L1685.51 681.504 L1684.95 681.504 L1684.4 681.504 L1683.84 681.504 L1683.28 681.504 L1682.72 681.504 L1682.16 681.504 L1681.6 681.504 L1681.04 681.504 L1680.48 681.504 L1679.92 681.504 L1679.36 681.504 L1678.8 681.504 L1678.24 681.504 L1677.68 681.504 L1677.13 681.504 L1676.57 681.504 L1676.01 681.504 L1675.45 681.504 L1674.89 681.504 L1674.33 681.504 L1673.77 681.504 L1673.21 681.504 L1672.65 681.504 L1672.09 681.504 L1671.53 681.504 L1670.97 681.504 L1670.41 681.504 L1669.85 681.504 L1669.3 681.504 L1668.74 681.504 L1668.18 681.504 L1667.62 681.504 L1667.06 681.504 L1666.5 681.504 L1665.94 681.504 L1665.38 681.504 L1664.82 681.504 L1664.26 681.504 L1663.7 681.504 L1663.14 681.504 L1662.58 681.504 L1662.03 681.504 L1661.47 681.504 L1660.91 681.504 L1660.35 681.504 L1659.79 681.504 L1659.23 681.504 L1658.67 681.504 L1658.11 681.504 L1657.55 681.504 L1656.99 681.504 L1656.43 681.504 L1655.87 681.504 L1655.31 681.504 L1654.76 681.504 L1654.2 681.504 L1653.64 681.504 L1653.08 681.504 L1652.52 681.504 L1651.96 681.504 L1651.4 681.504 L1650.84 681.504 L1650.28 681.504 L1649.72 681.504 L1649.16 681.504 L1648.6 681.504 L1648.04 681.504 L1647.48 681.504 L1646.93 681.504 L1646.37 681.504 L1645.81 681.504 L1645.25 681.504 L1644.69 681.504 L1644.13 681.504 L1643.57 681.504 L1643.01 681.504 L1642.45 681.504 L1641.89 681.504 L1641.33 681.504 L1640.77 681.504 L1640.21 681.504 L1639.66 681.504 L1639.1 681.504 L1638.54 681.504 L1637.98 681.504 L1637.42 681.504 L1636.86 681.504 L1636.3 681.504 L1635.74 681.504 L1635.18 681.504 L1634.62 681.504 L1634.06 681.504 L1633.5 681.504 L1632.94 681.504 L1632.39 681.504 L1631.83 681.504 L1631.27 681.504 L1630.71 681.504 L1630.15 681.504 L1629.59 681.504 L1629.03 681.504 L1628.47 681.504 L1627.91 681.504 L1627.35 681.504 L1626.79 681.504 L1626.23 681.504 L1625.67 681.504 L1625.11 681.504 L1624.56 681.504 L1624 681.504 L1623.44 681.504 L1622.88 681.504 L1622.32 681.504 L1621.76 681.504 L1621.2 681.504 L1620.64 681.504 L1620.08 681.504 L1619.52 681.504 L1618.96 681.504 L1618.4 681.504 L1617.84 681.504 L1617.29 681.504 L1616.73 681.504 L1616.17 681.504 L1615.61 681.504 L1615.05 681.504 L1614.49 681.504 L1613.93 681.504 L1613.37 681.504 L1612.81 681.504 L1612.25 681.504 L1611.69 681.504 L1611.13 681.504 L1610.57 681.504 L1610.02 681.504 L1609.46 681.504 L1608.9 681.504 L1608.34 681.504 L1607.78 681.504 L1607.22 681.504 L1606.66 681.504 L1606.1 681.504 L1605.54 681.504 L1604.98 681.504 L1604.42 681.504 L1603.86 681.504 L1603.3 681.504 L1602.74 681.504 L1602.19 681.504 L1601.63 681.504 L1601.07 681.504 L1600.51 681.504 L1599.95 681.504 L1599.39 681.504 L1598.83 681.504 L1598.27 681.504 L1597.71 681.504 L1597.15 681.504 L1596.59 681.504 L1596.03 681.504 L1595.47 681.504 L1594.92 681.504 L1594.36 681.504 L1593.8 681.504 L1593.24 681.504 L1592.68 681.504 L1592.12 681.504 L1591.56 681.504 L1591 681.504 L1590.44 681.504 L1589.88 681.504 L1589.32 681.504 L1588.76 681.504 L1588.2 681.504 L1587.65 681.504 L1587.09 681.504 L1586.53 681.504 L1585.97 681.504 L1585.41 681.504 L1584.85 681.504 L1584.29 681.504 L1583.73 681.504 L1583.17 681.504 L1582.61 681.504 L1582.05 681.504 L1581.49 681.504 L1580.93 681.504 L1580.37 681.504 L1579.82 681.504 L1579.26 681.504 L1578.7 681.504 L1578.14 681.504 L1577.58 681.504 L1577.02 681.504 L1576.46 681.504 L1575.9 681.504 L1575.34 681.504 L1574.78 681.504 L1574.22 681.504 L1573.66 681.504 L1573.1 681.504 L1572.55 681.504 L1571.99 681.504 L1571.43 681.504 L1570.87 681.504 L1570.31 681.504 L1569.75 681.504 L1569.19 681.504 L1568.63 681.504 L1568.07 681.504 L1567.51 681.504 L1566.95 681.504 L1566.39 681.504 L1565.83 681.504 L1565.28 681.504 L1564.72 681.504 L1564.16 681.504 L1563.6 681.504 L1563.04 681.504 L1562.48 681.504 L1561.92 681.504 L1561.36 681.504 L1560.8 681.504 L1560.24 681.504 L1559.68 681.504 L1559.12 681.504 L1558.56 681.504 L1558 681.504 L1557.45 681.504 L1556.89 681.504 L1556.33 681.504 L1555.77 681.504 L1555.21 681.504 L1554.65 681.504 L1554.09 681.504 L1553.53 681.504 L1552.97 681.504 L1552.41 681.504 L1551.85 681.504 L1551.29 681.504 L1550.73 681.504 L1550.18 681.504 L1549.62 681.504 L1549.06 681.504 L1548.5 681.504 L1547.94 681.504 L1547.38 681.504 L1546.82 681.504 L1546.26 681.504 L1545.7 681.504 L1545.14 681.504 L1544.58 681.504 L1544.02 681.504 L1543.46 681.504 L1542.9 681.504 L1542.35 681.504 L1541.79 681.504 L1541.23 681.504 L1540.67 681.504 L1540.11 681.504 L1539.55 681.504 L1538.99 681.504 L1538.43 681.504 L1537.87 681.504 L1537.31 681.504 L1536.75 681.504 L1536.19 681.504 L1535.63 681.504 L1535.08 681.504 L1534.52 681.504 L1533.96 681.504 L1533.4 681.504 L1532.84 681.504 L1532.28 681.504 L1531.72 681.504 L1531.16 681.504 L1530.6 681.504 L1530.04 681.504 L1529.48 681.504 L1528.92 681.504 L1528.36 681.504 L1527.81 681.504 L1527.25 681.504 L1526.69 681.504 L1526.13 681.504 L1525.57 681.504 L1525.01 681.504 L1524.45 681.504 L1523.89 681.504 L1523.33 681.504 L1522.77 681.504 L1522.21 681.504 L1521.65 681.504 L1521.09 681.504 L1520.53 681.504 L1519.98 681.504 L1519.42 681.504 L1518.86 681.504 L1518.3 681.504 L1517.74 681.504 L1517.18 681.504 L1516.62 681.504 L1516.06 681.504 L1515.5 681.504 L1514.94 681.504 L1514.38 681.504 L1513.82 681.504 L1513.26 681.504 L1512.71 681.504 L1512.15 681.504 L1511.59 681.504 L1511.03 681.504 L1510.47 681.504 L1509.91 681.504 L1509.35 681.504 L1508.79 681.504 L1508.23 681.504 L1507.67 681.504 L1507.11 681.504 L1506.55 681.504 L1505.99 681.504 L1505.44 681.504 L1504.88 681.504 L1504.32 681.504 L1503.76 681.504 L1503.2 681.504 L1502.64 681.504 L1502.08 681.504 L1501.52 681.504 L1500.96 681.504 L1500.4 681.504 L1499.84 681.504 L1499.28 681.504 L1498.72 681.504 L1498.16 681.504 L1497.61 681.504 L1497.05 681.504 L1496.49 681.504 L1495.93 681.504 L1495.37 681.504 L1494.81 681.504 L1494.25 681.504 L1493.69 681.504 L1493.13 681.504 L1492.57 681.504 L1492.01 681.504 L1491.45 681.504 L1490.89 681.504 L1490.34 681.504 L1489.78 681.504 L1489.22 681.504 L1488.66 681.504 L1488.1 681.504 L1487.54 681.504 L1486.98 681.504 L1486.42 681.504 L1485.86 681.504 L1485.3 681.504 L1484.74 681.504 L1484.18 681.504 L1483.62 681.504 L1483.07 681.504 L1482.51 681.504 L1481.95 681.504 L1481.39 681.504 L1480.83 681.504 L1480.27 681.504 L1479.71 681.504 L1479.15 681.504 L1478.59 681.504 L1478.03 681.504 L1477.47 681.504 L1476.91 681.504 L1476.35 681.504 L1475.79 681.504 L1475.24 681.504 L1474.68 681.504 L1474.12 681.504 L1473.56 681.504 L1473 681.504 L1472.44 681.504 L1471.88 681.504 L1471.32 681.504 L1470.76 681.504 L1470.2 681.504 L1469.64 681.504 L1469.08 681.504 L1468.52 681.504 L1467.97 681.504 L1467.41 681.504 L1466.85 681.504 L1466.29 681.504 L1465.73 681.504 L1465.17 681.504 L1464.61 681.504 L1464.05 681.504 L1463.49 681.504 L1462.93 681.504 L1462.37 681.504 L1461.81 681.504 L1461.25 681.504 L1460.7 681.504 L1460.14 681.504 L1459.58 681.504 L1459.02 681.504 L1458.46 681.504 L1457.9 681.504 L1457.34 681.504 L1456.78 681.504 L1456.22 681.504 L1455.66 681.504 L1455.1 681.504 L1454.54 681.504 L1453.98 681.504 L1453.42 681.504 L1452.87 681.504 L1452.31 681.504 L1451.75 681.504 L1451.19 681.504 L1450.63 681.504 L1450.07 681.504 L1449.51 681.504 L1448.95 681.504 L1448.39 681.504 L1447.83 681.504 L1447.27 681.504 L1446.71 681.504 L1446.15 681.504 L1445.6 681.504 L1445.04 681.504 L1444.48 681.504 L1443.92 681.504 L1443.36 681.504 L1442.8 681.504 L1442.24 681.504 L1441.68 681.504 L1441.12 681.504 L1440.56 681.504 L1440 681.504 L1439.44 681.504 L1438.88 681.504 L1438.33 681.504 L1437.77 681.504 L1437.21 681.504 L1436.65 681.504 L1436.09 681.504 L1435.53 681.504 L1434.97 681.504 L1434.41 681.504 L1433.85 681.504 L1433.29 681.504 L1432.73 681.504 L1432.17 681.504 L1431.61 681.504 L1431.05 681.504 L1430.5 681.504 L1429.94 681.504 L1429.38 681.504 L1428.82 681.504 L1428.26 681.504 L1427.7 681.504 L1427.14 681.504 L1426.58 681.504 L1426.02 681.504 L1425.46 681.504 L1424.9 681.504 L1424.34 681.504 L1423.78 681.504 L1423.23 681.504 L1422.67 681.504 L1422.11 681.504 L1421.55 681.504 L1420.99 681.504 L1420.43 681.504 L1419.87 681.504 L1419.31 681.504 L1418.75 681.504 L1418.19 681.504 L1417.63 681.504 L1417.07 681.504 L1416.51 681.504 L1415.95 681.504 L1415.4 681.504 L1414.84 681.504 L1414.28 681.504 L1413.72 681.504 L1413.16 681.504 L1412.6 681.504 L1412.04 681.504 L1411.48 681.504 L1410.92 681.504 L1410.36 681.504 L1409.8 681.504 L1409.24 681.504 L1408.68 681.504 L1408.13 681.504 L1407.57 681.504 L1407.01 681.504 L1406.45 681.504 L1405.89 681.504 L1405.33 681.504 L1404.77 681.504 L1404.21 681.504 L1403.65 681.504 L1403.09 681.504 L1402.53 681.504 L1401.97 681.504 L1401.41 681.504 L1400.86 681.504 L1400.3 681.504 L1399.74 681.504 L1399.18 681.504 L1398.62 681.504 L1398.06 681.504 L1397.5 681.504 L1396.94 681.504 L1396.38 681.504 L1395.82 681.504 L1395.26 681.504 L1394.7 681.504 L1394.14 681.504 L1393.58 681.504 L1393.03 681.504 L1392.47 681.504 L1391.91 681.504 L1391.35 681.504 L1390.79 681.504 L1390.23 681.504 L1389.67 681.504 L1389.11 681.504 L1388.55 681.504 L1387.99 681.504 L1387.43 681.504 L1386.87 681.504 L1386.31 681.504 L1385.76 681.504 L1385.2 681.504 L1384.64 681.504 L1384.08 681.504 L1383.52 681.504 L1382.96 681.504 L1382.4 681.504 L1381.84 681.504 L1381.28 681.504 L1380.72 681.504 L1380.16 681.504 L1379.6 681.504 L1379.04 681.504 L1378.49 681.504 L1377.93 681.504 L1377.37 681.504 L1376.81 681.504 L1376.25 681.504 L1375.69 681.504 L1375.13 681.504 L1374.57 681.504 L1374.01 681.504 L1373.45 681.504 L1372.89 681.504 L1372.33 681.504 L1371.77 681.504 L1371.21 681.504 L1370.66 681.504 L1370.1 681.504 L1369.54 681.504 L1368.98 681.504 L1368.42 681.504 L1367.86 681.504 L1367.3 681.504 L1366.74 681.504 L1366.18 681.504 L1365.62 681.504 L1365.06 681.504 L1364.5 681.504 L1363.94 681.504 L1363.39 681.504 L1362.83 681.504 L1362.27 681.504 L1361.71 681.504 L1361.15 681.504 L1360.59 681.504 L1360.03 681.504 L1359.47 681.504 L1358.91 681.504 L1358.35 681.504 L1357.79 681.504 L1357.23 681.504 L1356.67 681.504 L1356.12 681.504 L1355.56 681.504 L1355 681.504 L1354.44 681.504 L1353.88 681.504 L1353.32 681.504 L1352.76 681.504 L1352.2 681.504 L1351.64 681.504 L1351.08 681.504 L1350.52 681.504 L1349.96 681.504 L1349.4 681.504 L1348.84 681.504 L1348.29 681.504 L1347.73 681.504 L1347.17 681.504 L1346.61 681.504 L1346.05 681.504 L1345.49 681.504 L1344.93 681.504 L1344.37 681.504 L1343.81 681.504 L1343.25 681.504 L1342.69 681.504 L1342.13 681.504 L1341.57 681.504 L1341.02 681.504 L1340.46 681.504 L1339.9 681.504 L1339.34 681.504 L1338.78 681.504 L1338.22 681.504 L1337.66 681.504 L1337.1 681.504 L1336.54 681.504 L1335.98 681.504 L1335.42 681.504 L1334.86 681.504 L1334.3 681.504 L1333.75 681.504 L1333.19 681.504 L1332.63 681.504 L1332.07 681.504 L1331.51 681.504 L1330.95 681.504 L1330.39 681.504 L1329.83 681.504 L1329.27 681.504 L1328.71 681.504 L1328.15 681.504 L1327.59 681.504 L1327.03 681.504 L1326.47 681.504 L1325.92 681.504 L1325.36 681.504 L1324.8 681.504 L1324.24 681.504 L1323.68 681.504 L1323.12 681.504 L1322.56 681.504 L1322 681.504 L1321.44 681.504 L1320.88 681.504 L1320.32 681.504 L1319.76 681.504 L1319.2 681.504 L1318.65 681.504 L1318.09 681.504 L1317.53 681.504 L1316.97 681.504 L1316.41 681.504 L1315.85 681.504 L1315.29 681.504 L1314.73 681.504 L1314.17 681.504 L1313.61 681.504 L1313.05 681.504 L1312.49 681.504 L1311.93 681.504 L1311.38 681.504 L1310.82 681.504 L1310.26 681.504 L1309.7 681.504 L1309.14 681.504 L1308.58 681.504 L1308.02 681.504 L1307.46 681.504 L1306.9 681.504 L1306.34 681.504 L1305.78 681.504 L1305.22 681.504 L1304.66 681.504 L1304.1 681.504 L1303.55 681.504 L1302.99 681.504 L1302.43 681.504 L1301.87 681.504 L1301.31 681.504 L1300.75 681.504 L1300.19 681.504 L1299.63 681.504 L1299.07 681.504 L1298.51 681.504 L1297.95 681.504 L1297.39 681.504 L1296.83 681.504 L1296.28 681.504 L1295.72 681.504 L1295.16 681.504 L1294.6 681.504 L1294.04 681.504 L1293.48 681.504 L1292.92 681.504 L1292.36 681.504 L1291.8 681.504 L1291.24 681.504 L1290.68 681.504 L1290.12 681.504 L1289.56 681.504 L1289 681.504 L1288.45 681.504 L1287.89 681.504 L1287.33 681.504 L1286.77 681.504 L1286.21 681.504 L1285.65 681.504 L1285.09 681.504 L1284.53 681.504 L1283.97 681.504 L1283.41 681.504 L1282.85 681.504 L1282.29 681.504 L1281.73 681.504 L1281.18 681.504 L1280.62 681.504 L1280.06 681.504 L1279.5 681.504 L1278.94 681.504 L1278.38 681.504 L1277.82 681.504 L1277.26 681.504 L1276.7 681.504 L1276.14 681.504 L1275.58 681.504 L1275.02 681.504 L1274.46 681.504 L1273.91 681.504 L1273.35 681.504 L1272.79 681.504 L1272.23 681.504 L1271.67 681.504 L1271.11 681.504 L1270.55 681.504 L1269.99 681.504 L1269.43 681.504 L1268.87 681.504 L1268.31 681.504 L1267.75 681.504 L1267.19 681.504 L1266.63 681.504 L1266.08 681.504 L1265.52 681.504 L1264.96 681.504 L1264.4 681.504 L1263.84 681.504 L1263.28 681.504 L1262.72 681.504 L1262.16 681.504 L1261.6 681.504 L1261.04 681.504 L1260.48 681.504 L1259.92 681.504 L1259.36 681.504 L1258.81 681.504 L1258.25 681.504 L1257.69 681.504 L1257.13 681.504 L1256.57 681.504 L1256.01 681.504 L1255.45 681.504 L1254.89 681.504 L1254.33 681.504 L1253.77 681.504 L1253.21 681.504 L1252.65 681.504 L1252.09 681.504 L1251.54 681.504 L1250.98 681.504 L1250.42 681.504 L1249.86 681.504 L1249.3 681.504 L1248.74 681.504 L1248.18 681.504 L1247.62 681.504 L1247.06 681.504 L1246.5 681.504 L1245.94 681.504 L1245.38 681.504 L1244.82 681.504 L1244.26 681.504 L1243.71 681.504 L1243.15 681.504 L1242.59 681.504 L1242.03 681.504 L1241.47 681.504 L1240.91 681.504 L1240.35 681.504 L1239.79 681.504 L1239.23 681.504 L1238.67 681.504 L1238.11 681.504 L1237.55 681.504 L1236.99 681.504 L1236.44 681.504 L1235.88 681.504 L1235.32 681.504 L1234.76 681.504 L1234.2 681.504 L1233.64 681.504 L1233.08 681.504 L1232.52 681.504 L1231.96 681.504 L1231.4 681.504 L1230.84 681.504 L1230.28 681.504 L1229.72 681.504 L1229.17 681.504 L1228.61 681.504 L1228.05 681.504 L1227.49 681.504 L1226.93 681.504 L1226.37 681.504 L1225.81 681.504 L1225.25 681.504 L1224.69 681.504 L1224.13 681.504 L1223.57 681.504 L1223.01 681.504 L1222.45 681.504 L1221.89 681.504 L1221.34 681.504 L1220.78 681.504 L1220.22 681.504 L1219.66 681.504 L1219.1 681.504 L1218.54 681.504 L1217.98 681.504 L1217.42 681.504 L1216.86 681.504 L1216.3 681.504 L1215.74 681.504 L1215.18 681.504 L1214.62 681.504 L1214.07 681.504 L1213.51 681.504 L1212.95 681.504 L1212.39 681.504 L1211.83 681.504 L1211.27 681.504 L1210.71 681.504 L1210.15 681.504 L1209.59 681.504 L1209.03 681.504 L1208.47 681.504 L1207.91 681.504 L1207.35 681.504 L1206.8 681.504 L1206.24 681.504 L1205.68 681.504 L1205.12 681.504 L1204.56 681.504 L1204 681.504 L1203.44 681.504 L1202.88 681.504 L1202.32 681.504 L1201.76 681.504 L1201.2 681.504 L1200.64 681.504 L1200.08 681.504 L1199.52 681.504 L1198.97 681.504 L1198.41 681.504 L1197.85 681.504 L1197.29 681.504 L1196.73 681.504 L1196.17 681.504 L1195.61 681.504 L1195.05 681.504 L1194.49 681.504 L1193.93 681.504 L1193.37 681.504 L1192.81 681.504 L1192.25 681.504 L1191.7 681.504 L1191.14 681.504 L1190.58 681.504 L1190.02 681.504 L1189.46 681.504 L1188.9 681.504 L1188.34 681.504 L1187.78 681.504 L1187.22 681.504 L1186.66 681.504 L1186.1 681.504 L1185.54 681.504 L1184.98 681.504 L1184.43 681.504 L1183.87 681.504 L1183.31 681.504 L1182.75 681.504 L1182.19 681.504 L1181.63 681.504 L1181.07 681.504 L1180.51 681.504 L1179.95 681.504 L1179.39 681.504 L1178.83 681.504 L1178.27 681.504 L1177.71 681.504 L1177.15 681.504 L1176.6 681.504 L1176.04 681.504 L1175.48 681.504 L1174.92 681.504 L1174.36 681.504 L1173.8 681.504 L1173.24 681.504 L1172.68 681.504 L1172.12 681.504 L1171.56 681.504 L1171 681.504 L1170.44 681.504 L1169.88 681.504 L1169.33 681.504 L1168.77 681.504 L1168.21 681.504 L1167.65 681.504 L1167.09 681.504 L1166.53 681.504 L1165.97 681.504 L1165.41 681.504 L1164.85 681.504 L1164.29 681.504 L1163.73 681.504 L1163.17 681.504 L1162.61 681.504 L1162.05 681.504 L1161.5 681.504 L1160.94 681.504 L1160.38 681.504 L1159.82 681.504 L1159.26 681.504 L1158.7 681.504 L1158.14 681.504 L1157.58 681.504 L1157.02 681.504 L1156.46 681.504 L1155.9 681.504 L1155.34 681.504 L1154.78 681.504 L1154.23 681.504 L1153.67 681.504 L1153.11 681.504 L1152.55 681.504 L1151.99 681.504 L1151.43 681.504 L1150.87 681.504 L1150.31 681.504 L1149.75 681.504 L1149.19 681.504 L1148.63 681.504 L1148.07 681.504 L1147.51 681.504 L1146.96 681.504 L1146.4 681.504 L1145.84 681.504 L1145.28 681.504 L1144.72 681.504 L1144.16 681.504 L1143.6 681.504 L1143.04 681.504 L1142.48 681.504 L1141.92 681.504 L1141.36 681.504 L1140.8 681.504 L1140.24 681.504 L1139.68 681.504 L1139.13 681.504 L1138.57 681.504 L1138.01 681.504 L1137.45 681.504 L1136.89 681.504 L1136.33 681.504 L1135.77 681.504 L1135.21 681.504 L1134.65 681.504 L1134.09 681.504 L1133.53 681.504 L1132.97 681.504 L1132.41 681.504 L1131.86 681.504 L1131.3 681.504 L1130.74 681.504 L1130.18 681.504 L1129.62 681.504 L1129.06 681.504 L1128.5 681.504 L1127.94 681.504 L1127.38 681.504 L1126.82 681.504 L1126.26 681.504 L1125.7 681.504 L1125.14 681.504 L1124.59 681.504 L1124.03 681.504 L1123.47 681.504 L1122.91 681.504 L1122.35 681.504 L1121.79 681.504 L1121.23 681.504 L1120.67 681.504 L1120.11 681.504 L1119.55 681.504 L1118.99 681.504 L1118.43 681.504 L1117.87 681.504 L1117.31 681.504 L1116.76 681.504 L1116.2 681.504 L1115.64 681.504 L1115.08 681.504 L1114.52 681.504 L1113.96 681.504 L1113.4 681.504 L1112.84 681.504 L1112.28 681.504 L1111.72 681.504 L1111.16 681.504 L1110.6 681.504 L1110.04 681.504 L1109.49 681.504 L1108.93 681.504 L1108.37 681.504 L1107.81 681.504 L1107.25 681.504 L1106.69 681.504 L1106.13 681.504 L1105.57 681.504 L1105.01 681.504 L1104.45 681.504 L1103.89 681.504 L1103.33 681.504 L1102.77 681.504 L1102.22 681.504 L1101.66 681.504 L1101.1 681.504 L1100.54 681.504 L1099.98 681.504 L1099.42 681.504 L1098.86 681.504 L1098.3 681.504 L1097.74 681.504 L1097.18 681.504 L1096.62 681.504 L1096.06 681.504 L1095.5 681.504 L1094.94 681.504 L1094.39 681.504 L1093.83 681.504 L1093.27 681.504 L1092.71 681.504 L1092.15 681.504 L1091.59 681.504 L1091.03 681.504 L1090.47 681.504 L1089.91 681.504 L1089.35 681.504 L1088.79 681.504 L1088.23 681.504 L1087.67 681.504 L1087.12 681.504 L1086.56 681.504 L1086 681.504 L1085.44 681.504 L1084.88 681.504 L1084.32 681.504 L1083.76 681.504 L1083.2 681.504 L1082.64 681.504 L1082.08 681.504 L1081.52 681.504 L1080.96 681.504 L1080.4 681.504 L1079.85 681.504 L1079.29 681.504 L1078.73 681.504 L1078.17 681.504 L1077.61 681.504 L1077.05 681.504 L1076.49 681.504 L1075.93 681.504 L1075.37 681.504 L1074.81 681.504 L1074.25 681.504 L1073.69 681.504 L1073.13 681.504 L1072.57 681.504 L1072.02 681.504 L1071.46 681.504 L1070.9 681.504 L1070.34 681.504 L1069.78 681.504 L1069.22 681.504 L1068.66 681.504 L1068.1 681.504 L1067.54 681.504 L1066.98 681.504 L1066.42 681.504 L1065.86 681.504 L1065.3 681.504 L1064.75 681.504 L1064.19 681.504 L1063.63 681.504 L1063.07 681.504 L1062.51 681.504 L1061.95 681.504 L1061.39 681.504 L1060.83 681.504 L1060.27 681.504 L1059.71 681.504 L1059.15 681.504 L1058.59 681.504 L1058.03 681.504 L1057.48 681.504 L1056.92 681.504 L1056.36 681.504 L1055.8 681.504 L1055.24 681.504 L1054.68 681.504 L1054.12 681.504 L1053.56 681.504 L1053 681.504 L1052.44 681.504 L1051.88 681.504 L1051.32 681.504 L1050.76 681.504 L1050.2 681.504 L1049.65 681.504 L1049.09 681.504 L1048.53 681.504 L1047.97 681.504 L1047.41 681.504 L1046.85 681.504 L1046.29 681.504 L1045.73 681.504 L1045.17 681.504 L1044.61 681.504 L1044.05 681.504 L1043.49 681.504 L1042.93 681.504 L1042.38 681.504 L1041.82 681.504 L1041.26 681.504 L1040.7 681.504 L1040.14 681.504 L1039.58 681.504 L1039.02 681.504 L1038.46 681.504 L1037.9 681.504 L1037.34 681.504 L1036.78 681.504 L1036.22 681.504 L1035.66 681.504 L1035.1 681.504 L1034.55 681.504 L1033.99 681.504 L1033.43 681.504 L1032.87 681.504 L1032.31 681.504 L1031.75 681.504 L1031.19 681.504 L1030.63 681.504 L1030.07 681.504 L1029.51 681.504 L1028.95 681.504 L1028.39 681.504 L1027.83 681.504 L1027.28 681.504 L1026.72 681.504 L1026.16 681.504 L1025.6 681.504 L1025.04 681.504 L1024.48 681.504 L1023.92 681.504 L1023.36 681.504 L1022.8 681.504 L1022.24 681.504 L1021.68 681.504 L1021.12 681.504 L1020.56 681.504 L1020.01 681.504 L1019.45 681.504 L1018.89 681.504 L1018.33 681.504 L1017.77 681.504 L1017.21 681.504 L1016.65 681.504 L1016.09 681.504 L1015.53 681.504 L1014.97 681.504 L1014.41 681.504 L1013.85 681.504 L1013.29 681.504 L1012.73 681.504 L1012.18 681.504 L1011.62 681.504 L1011.06 681.504 L1010.5 681.504 L1009.94 681.504 L1009.38 681.504 L1008.82 681.504 L1008.26 681.504 L1007.7 681.504 L1007.14 681.504 L1006.58 681.504 L1006.02 681.504 L1005.46 681.504 L1004.91 681.504 L1004.35 681.504 L1003.79 681.504 L1003.23 681.504 L1002.67 681.504 L1002.11 681.504 L1001.55 681.504 L1000.99 681.504 L1000.43 681.504 L999.872 681.504 L999.313 681.504 L998.754 681.504 L998.194 681.504 L997.635 681.504 L997.076 681.504 L996.517 681.504 L995.957 681.504 L995.398 681.504 L994.839 681.504 L994.28 681.504 L993.72 681.504 L993.161 681.504 L992.602 681.504 L992.043 681.504 L991.483 681.504 L990.924 681.504 L990.365 681.504 L989.806 681.504 L989.246 681.504 L988.687 681.504 L988.128 681.504 L987.569 681.504 L987.009 681.504 L986.45 681.504 L985.891 681.504 L985.332 681.504 L984.772 681.504 L984.213 681.504 L983.654 681.504 L983.095 681.504 L982.535 681.504 L981.976 681.504 L981.417 681.504 L980.858 681.504 L980.298 681.504 L979.739 681.504 L979.18 681.504 L978.621 681.504 L978.061 681.504 L977.502 681.504 L976.943 681.504 L976.384 681.504 L975.824 681.504 L975.265 681.504 L974.706 681.504 L974.147 681.504 L973.587 681.504 L973.028 681.504 L972.469 681.504 L971.91 681.504 L971.35 681.504 L970.791 681.504 L970.232 681.504 L969.673 681.504 L969.113 681.504 L968.554 681.504 L967.995 681.504 L967.436 681.504 L966.876 681.504 L966.317 681.504 L965.758 681.504 L965.199 681.504 L964.639 681.504 L964.08 681.504 L963.521 681.504 L962.962 681.504 L962.402 681.504 L961.843 681.504 L961.284 681.504 L960.725 681.504 L960.165 681.504 L959.606 681.504 L959.047 681.504 L958.488 681.504 L957.928 681.504 L957.369 681.504 L956.81 681.504 L956.251 681.504 L955.691 681.504 L955.132 681.504 L954.573 681.504 L954.014 681.504 L953.454 681.504 L952.895 681.504 L952.336 681.504 L951.777 681.504 L951.217 681.504 L950.658 681.504 L950.099 681.504 L949.54 681.504 L948.98 681.504 L948.421 681.504 L947.862 681.504 L947.303 681.504 L946.743 681.504 L946.184 681.504 L945.625 681.504 L945.066 681.504 L944.506 681.504 L943.947 681.504 L943.388 681.504 L942.829 681.504 L942.269 681.504 L941.71 681.504 L941.151 681.504 L940.592 681.504 L940.032 681.504 L939.473 681.504 L938.914 681.504 L938.355 681.504 L937.795 681.504 L937.236 681.504 L936.677 681.504 L936.118 681.504 L935.558 681.504 L934.999 681.504 L934.44 681.504 L933.881 681.504 L933.321 681.504 L932.762 681.504 L932.203 681.504 L931.644 681.504 L931.084 681.504 L930.525 681.504 L929.966 681.504 L929.406 681.504 L928.847 681.504 L928.288 681.504 L927.729 681.504 L927.169 681.504 L926.61 681.504 L926.051 681.504 L925.492 681.504 L924.932 681.504 L924.373 681.504 L923.814 681.504 L923.255 681.504 L922.695 681.504 L922.136 681.504 L921.577 681.504 L921.018 681.504 L920.458 681.504 L919.899 681.504 L919.34 681.504 L918.781 681.504 L918.221 681.504 L917.662 681.504 L917.103 681.504 L916.544 681.504 L915.984 681.504 L915.425 681.504 L914.866 681.504 L914.307 681.504 L913.747 681.504 L913.188 681.504 L912.629 681.504 L912.07 681.504 L911.51 681.504 L910.951 681.504 L910.392 681.504 L909.833 681.504 L909.273 681.504 L908.714 681.504 L908.155 681.504 L907.596 681.504 L907.036 681.504 L906.477 681.504 L905.918 681.504 L905.359 681.504 L904.799 681.504 L904.24 681.504 L903.681 681.504 L903.122 681.504 L902.562 681.504 L902.003 681.504 L901.444 681.504 L900.885 681.504 L900.325 681.504 L899.766 681.504 L899.207 681.504 L898.648 681.504 L898.088 681.504 L897.529 681.504 L896.97 681.504 L896.411 681.504 L895.851 681.504 L895.292 681.504 L894.733 681.504 L894.174 681.504 L893.614 681.504 L893.055 681.504 L892.496 681.504 L891.937 681.504 L891.377 681.504 L890.818 681.504 L890.259 681.504 L889.7 681.504 L889.14 681.504 L888.581 681.504 L888.022 681.504 L887.463 681.504 L886.903 681.504 L886.344 681.504 L885.785 681.504 L885.226 681.504 L884.666 681.504 L884.107 681.504 L883.548 681.504 L882.989 681.504 L882.429 681.504 L881.87 681.504 L881.311 681.504 L880.752 681.504 L880.192 681.504 L879.633 681.504 L879.074 681.504 L878.515 681.504 L877.955 681.504 L877.396 681.504 L876.837 681.504 L876.278 681.504 L875.718 681.504 L875.159 681.504 L874.6 681.504 L874.041 681.504 L873.481 681.504 L872.922 681.504 L872.363 681.504 L871.804 681.504 L871.244 681.504 L870.685 681.504 L870.126 681.504 L869.567 681.504 L869.007 681.504 L868.448 681.504 L867.889 681.504 L867.33 681.504 L866.77 681.504 L866.211 681.504 L865.652 681.504 L865.093 681.504 L864.533 681.504 L863.974 681.504 L863.415 681.504 L862.856 681.504 L862.296 681.504 L861.737 681.504 L861.178 681.504 L860.619 681.504 L860.059 681.504 L859.5 681.504 L858.941 681.504 L858.382 681.504 L857.822 681.504 L857.263 681.504 L856.704 681.504 L856.145 681.504 L855.585 681.504 L855.026 681.504 L854.467 681.504 L853.908 681.504 L853.348 681.504 L852.789 681.504 L852.23 681.504 L851.671 681.504 L851.111 681.504 L850.552 681.504 L849.993 681.504 L849.434 681.504 L848.874 681.504 L848.315 681.504 L847.756 681.504 L847.197 681.504 L846.637 681.504 L846.078 681.504 L845.519 681.504 L844.96 681.504 L844.4 681.504 L843.841 681.504 L843.282 681.504 L842.723 681.504 L842.163 681.504 L841.604 681.504 L841.045 681.504 L840.486 681.504 L839.926 681.504 L839.367 681.504 L838.808 681.504 L838.249 681.504 L837.689 681.504 L837.13 681.504 L836.571 681.504 L836.012 681.504 L835.452 681.504 L834.893 681.504 L834.334 681.504 L833.775 681.504 L833.215 681.504 L832.656 681.504 L832.097 681.504 L831.538 681.504 L830.978 681.504 L830.419 681.504 L829.86 681.504 L829.301 681.504 L828.741 681.504 L828.182 681.504 L827.623 681.504 L827.064 681.504 L826.504 681.504 L825.945 681.504 L825.386 681.504 L824.827 681.504 L824.267 681.504 L823.708 681.504 L823.149 681.504 L822.59 681.504 L822.03 681.504 L821.471 681.504 L820.912 681.504 L820.353 681.504 L819.793 681.504 L819.234 681.504 L818.675 681.504 L818.116 681.504 L817.556 681.504 L816.997 681.504 L816.438 681.504 L815.879 681.504 L815.319 681.504 L814.76 681.504 L814.201 681.504 L813.642 681.504 L813.082 681.504 L812.523 681.504 L811.964 681.504 L811.405 681.504 L810.845 681.504 L810.286 681.504 L809.727 681.504 L809.168 681.504 L808.608 681.504 L808.049 681.504 L807.49 681.504 L806.931 681.504 L806.371 681.504 L805.812 681.504 L805.253 681.504 L804.693 681.504 L804.134 681.504 L803.575 681.504 L803.016 681.504 L802.456 681.504 L801.897 681.504 L801.338 681.504 L800.779 681.504 L800.219 681.504 L799.66 681.504 L799.101 681.504 L798.542 681.504 L797.982 681.504 L797.423 681.504 L796.864 681.504 L796.305 681.504 L795.745 681.504 L795.186 681.504 L794.627 681.504 L794.068 681.504 L793.508 681.504 L792.949 681.504 L792.39 681.504 L791.831 681.504 L791.271 681.504 L790.712 681.504 L790.153 681.504 L789.594 681.504 L789.034 681.504 L788.475 681.504 L787.916 681.504 L787.357 681.504 L786.797 681.504 L786.238 681.504 L785.679 681.504 L785.12 681.504 L784.56 681.504 L784.001 681.504 L783.442 681.504 L782.883 681.504 L782.323 681.504 L781.764 681.504 L781.205 681.504 L780.646 681.504 L780.086 681.504 L779.527 681.504 L778.968 681.504 L778.409 681.504 L777.849 681.504 L777.29 681.504 L776.731 681.504 L776.172 681.504 L775.612 681.504 L775.053 681.504 L774.494 681.504 L773.935 681.504 L773.375 681.504 L772.816 681.504 L772.257 681.504 L771.698 681.504 L771.138 681.504 L770.579 681.504 L770.02 681.504 L769.461 681.504 L768.901 681.504 L768.342 681.504 L767.783 681.504 L767.224 681.504 L766.664 681.504 L766.105 681.504 L765.546 681.504 L764.987 681.504 L764.427 681.504 L763.868 681.504 L763.309 681.504 L762.75 681.504 L762.19 681.504 L761.631 681.504 L761.072 681.504 L760.513 681.504 L759.953 681.504 L759.394 681.504 L758.835 681.504 L758.276 681.504 L757.716 681.504 L757.157 681.504 L756.598 681.504 L756.039 681.504 L755.479 681.504 L754.92 681.504 L754.361 681.504 L753.802 681.504 L753.242 681.504 L752.683 681.504 L752.124 681.504 L751.565 681.504 L751.005 681.504 L750.446 681.504 L749.887 681.504 L749.328 681.504 L748.768 681.504 L748.209 681.504 L747.65 681.504 L747.091 681.504 L746.531 681.504 L745.972 681.504 L745.413 681.504 L744.854 681.504 L744.294 681.504 L743.735 681.504 L743.176 681.504 L742.617 681.504 L742.057 681.504 L741.498 681.504 L740.939 681.504 L740.38 681.504 L739.82 681.504 L739.261 681.504 L738.702 681.504 L738.143 681.504 L737.583 681.504 L737.024 681.504 L736.465 681.504 L735.906 681.504 L735.346 681.504 L734.787 681.504 L734.228 681.504 L733.669 681.504 L733.109 681.504 L732.55 681.504 L731.991 681.504 L731.432 681.504 L730.872 681.504 L730.313 681.504 L729.754 681.504 L729.195 681.504 L728.635 681.504 L728.076 681.504 L727.517 681.504 L726.958 681.504 L726.398 681.504 L725.839 681.504 L725.28 681.504 L724.721 681.504 L724.161 681.504 L723.602 681.504 L723.043 681.504 L722.484 681.504 L721.924 681.504 L721.365 681.504 L720.806 681.504 L720.247 681.504  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip193)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,685.247 720.806,685.247 721.365,685.247 721.924,685.247 722.484,685.247 723.043,685.247 723.602,685.247 724.161,685.247 724.721,685.247 725.28,685.247 725.839,685.247 726.398,685.247 726.958,685.247 727.517,685.247 728.076,685.247 728.635,685.247 729.195,685.247 729.754,685.247 730.313,685.247 730.872,685.247 731.432,685.247 731.991,685.247 732.55,685.247 733.109,685.247 733.669,685.247 734.228,685.247 734.787,685.247 735.346,685.247 735.906,685.247 736.465,685.247 737.024,685.247 737.583,685.247 738.143,685.247 738.702,685.247 739.261,685.247 739.82,685.247 740.38,685.247 740.939,685.247 741.498,685.247 742.057,685.247 742.617,685.247 743.176,685.247 743.735,685.247 744.294,685.247 744.854,685.247 745.413,685.247 745.972,685.247 746.531,685.247 747.091,685.247 747.65,685.247 748.209,685.247 748.768,685.247 749.328,685.247 749.887,685.247 750.446,685.247 751.005,685.247 751.565,685.247 752.124,685.247 752.683,685.247 753.242,685.247 753.802,685.247 754.361,685.247 754.92,685.247 755.479,685.247 756.039,685.247 756.598,685.247 757.157,685.247 757.716,685.247 758.276,685.247 758.835,685.247 759.394,685.247 759.953,685.247 760.513,685.247 761.072,685.247 761.631,685.247 762.19,685.247 762.75,685.247 763.309,685.247 763.868,685.247 764.427,685.247 764.987,685.247 765.546,685.247 766.105,685.247 766.664,685.247 767.224,685.247 767.783,685.247 768.342,685.247 768.901,685.247 769.461,685.247 770.02,685.247 770.579,685.247 771.138,685.247 771.698,685.247 772.257,685.247 772.816,685.247 773.375,685.247 773.935,685.247 774.494,685.247 775.053,685.247 775.612,685.247 776.172,685.247 776.731,685.247 777.29,685.247 777.849,685.247 778.409,685.247 778.968,685.247 779.527,685.247 780.086,685.247 780.646,685.247 781.205,685.247 781.764,685.247 782.323,685.247 782.883,685.247 783.442,685.247 784.001,685.247 784.56,685.247 785.12,685.247 785.679,685.247 786.238,685.247 786.797,685.247 787.357,685.247 787.916,685.247 788.475,685.247 789.034,685.247 789.594,685.247 790.153,685.247 790.712,685.247 791.271,685.247 791.831,685.247 792.39,685.247 792.949,685.247 793.508,685.247 794.068,685.247 794.627,685.247 795.186,685.247 795.745,685.247 796.305,685.247 796.864,685.247 797.423,685.247 797.982,685.247 798.542,685.247 799.101,685.247 799.66,685.247 800.219,685.247 800.779,685.247 801.338,685.247 801.897,685.247 802.456,685.247 803.016,685.247 803.575,685.247 804.134,685.247 804.693,685.247 805.253,685.247 805.812,685.247 806.371,685.247 806.931,685.247 807.49,685.247 808.049,685.247 808.608,685.247 809.168,685.247 809.727,685.247 810.286,685.247 810.845,685.247 811.405,685.247 811.964,685.247 812.523,685.247 813.082,685.247 813.642,685.247 814.201,685.247 814.76,685.247 815.319,685.247 815.879,685.247 816.438,685.247 816.997,685.247 817.556,685.247 818.116,685.247 818.675,685.247 819.234,685.247 819.793,685.247 820.353,685.247 820.912,685.247 821.471,685.247 822.03,685.247 822.59,685.247 823.149,685.247 823.708,685.247 824.267,685.247 824.827,685.247 825.386,685.247 825.945,685.247 826.504,685.247 827.064,685.247 827.623,685.247 828.182,685.247 828.741,685.247 829.301,685.247 829.86,685.247 830.419,685.247 830.978,685.247 831.538,685.247 832.097,685.247 832.656,685.247 833.215,685.247 833.775,685.247 834.334,685.247 834.893,685.247 835.452,685.247 836.012,685.247 836.571,685.247 837.13,685.247 837.689,685.247 838.249,685.247 838.808,685.247 839.367,685.247 839.926,685.247 840.486,685.247 841.045,685.247 841.604,685.247 842.163,685.247 842.723,685.247 843.282,685.247 843.841,685.247 844.4,685.247 844.96,685.247 845.519,685.247 846.078,685.247 846.637,685.247 847.197,685.247 847.756,685.247 848.315,685.247 848.874,685.247 849.434,685.247 849.993,685.247 850.552,685.247 851.111,685.247 851.671,685.247 852.23,685.247 852.789,685.247 853.348,685.247 853.908,685.247 854.467,685.247 855.026,685.247 855.585,685.247 856.145,685.247 856.704,685.247 857.263,685.247 857.822,685.247 858.382,685.247 858.941,685.247 859.5,685.247 860.059,685.247 860.619,685.247 861.178,685.247 861.737,685.247 862.296,685.247 862.856,685.247 863.415,685.247 863.974,685.247 864.533,685.247 865.093,685.247 865.652,685.247 866.211,685.247 866.77,685.247 867.33,685.247 867.889,685.247 868.448,685.247 869.007,685.247 869.567,685.247 870.126,685.247 870.685,685.247 871.244,685.247 871.804,685.247 872.363,685.247 872.922,685.247 873.481,685.247 874.041,685.247 874.6,685.247 875.159,685.247 875.718,685.247 876.278,685.247 876.837,685.247 877.396,685.247 877.955,685.247 878.515,685.247 879.074,685.247 879.633,685.247 880.192,685.247 880.752,685.247 881.311,685.247 881.87,685.247 882.429,685.247 882.989,685.247 883.548,685.247 884.107,685.247 884.666,685.247 885.226,685.247 885.785,685.247 886.344,685.247 886.903,685.247 887.463,685.247 888.022,685.247 888.581,685.247 889.14,685.247 889.7,685.247 890.259,685.247 890.818,685.247 891.377,685.247 891.937,685.247 892.496,685.247 893.055,685.247 893.614,685.247 894.174,685.247 894.733,685.247 895.292,685.247 895.851,685.247 896.411,685.247 896.97,685.247 897.529,685.247 898.088,685.247 898.648,685.247 899.207,685.247 899.766,685.247 900.325,685.247 900.885,685.247 901.444,685.247 902.003,685.247 902.562,685.247 903.122,685.247 903.681,685.247 904.24,685.247 904.799,685.247 905.359,685.247 905.918,685.247 906.477,685.247 907.036,685.247 907.596,685.247 908.155,685.247 908.714,685.247 909.273,685.247 909.833,685.247 910.392,685.247 910.951,685.247 911.51,685.247 912.07,685.247 912.629,685.247 913.188,685.247 913.747,685.247 914.307,685.247 914.866,685.247 915.425,685.247 915.984,685.247 916.544,685.247 917.103,685.247 917.662,685.247 918.221,685.247 918.781,685.247 919.34,685.247 919.899,685.247 920.458,685.247 921.018,685.247 921.577,685.247 922.136,685.247 922.695,685.247 923.255,685.247 923.814,685.247 924.373,685.247 924.932,685.247 925.492,685.247 926.051,685.247 926.61,685.247 927.169,685.247 927.729,685.247 928.288,685.247 928.847,685.247 929.406,685.247 929.966,685.247 930.525,685.247 931.084,685.247 931.644,685.247 932.203,685.247 932.762,685.247 933.321,685.247 933.881,685.247 934.44,685.247 934.999,685.247 935.558,685.247 936.118,685.247 936.677,685.247 937.236,685.247 937.795,685.247 938.355,685.247 938.914,685.247 939.473,685.247 940.032,685.247 940.592,685.247 941.151,685.247 941.71,685.247 942.269,685.247 942.829,685.247 943.388,685.247 943.947,685.247 944.506,685.247 945.066,685.247 945.625,685.247 946.184,685.247 946.743,685.247 947.303,685.247 947.862,685.247 948.421,685.247 948.98,685.247 949.54,685.247 950.099,685.247 950.658,685.247 951.217,685.247 951.777,685.247 952.336,685.247 952.895,685.247 953.454,685.247 954.014,685.247 954.573,685.247 955.132,685.247 955.691,685.247 956.251,685.247 956.81,685.247 957.369,685.247 957.928,685.247 958.488,685.247 959.047,685.247 959.606,685.247 960.165,685.247 960.725,685.247 961.284,685.247 961.843,685.247 962.402,685.247 962.962,685.247 963.521,685.247 964.08,685.247 964.639,685.247 965.199,685.247 965.758,685.247 966.317,685.247 966.876,685.247 967.436,685.247 967.995,685.247 968.554,685.247 969.113,685.247 969.673,685.247 970.232,685.247 970.791,685.247 971.35,685.247 971.91,685.247 972.469,685.247 973.028,685.247 973.587,685.247 974.147,685.247 974.706,685.247 975.265,685.247 975.824,685.247 976.384,685.247 976.943,685.247 977.502,685.247 978.061,685.247 978.621,685.247 979.18,685.247 979.739,685.247 980.298,685.247 980.858,685.247 981.417,685.247 981.976,685.247 982.535,685.247 983.095,685.247 983.654,685.247 984.213,685.247 984.772,685.247 985.332,685.247 985.891,685.247 986.45,685.247 987.009,685.247 987.569,685.247 988.128,685.247 988.687,685.247 989.246,685.247 989.806,685.247 990.365,685.247 990.924,685.247 991.483,685.247 992.043,685.247 992.602,685.247 993.161,685.247 993.72,685.247 994.28,685.247 994.839,685.247 995.398,685.247 995.957,685.247 996.517,685.247 997.076,685.247 997.635,685.247 998.194,685.247 998.754,685.247 999.313,685.247 999.872,685.247 1000.43,685.247 1000.99,685.247 1001.55,685.247 1002.11,685.247 1002.67,685.247 1003.23,685.247 1003.79,685.247 1004.35,685.247 1004.91,685.247 1005.46,685.247 1006.02,685.247 1006.58,685.247 1007.14,685.247 1007.7,685.247 1008.26,685.247 1008.82,685.247 1009.38,685.247 1009.94,685.247 1010.5,685.247 1011.06,685.247 1011.62,685.247 1012.18,685.247 1012.73,685.247 1013.29,685.247 1013.85,685.247 1014.41,685.247 1014.97,685.247 1015.53,685.247 1016.09,685.247 1016.65,685.247 1017.21,685.247 1017.77,685.247 1018.33,685.247 1018.89,685.247 1019.45,685.247 1020.01,685.247 1020.56,685.247 1021.12,685.247 1021.68,685.247 1022.24,685.247 1022.8,685.247 1023.36,685.247 1023.92,685.247 1024.48,685.247 1025.04,685.247 1025.6,685.247 1026.16,685.247 1026.72,685.247 1027.28,685.247 1027.83,685.247 1028.39,685.247 1028.95,685.247 1029.51,685.247 1030.07,685.247 1030.63,685.247 1031.19,685.247 1031.75,685.247 1032.31,685.247 1032.87,685.247 1033.43,685.247 1033.99,685.247 1034.55,685.247 1035.1,685.247 1035.66,685.247 1036.22,685.247 1036.78,685.247 1037.34,685.247 1037.9,685.247 1038.46,685.247 1039.02,685.247 1039.58,685.247 1040.14,685.247 1040.7,685.247 1041.26,685.247 1041.82,685.247 1042.38,685.247 1042.93,685.247 1043.49,685.247 1044.05,685.247 1044.61,685.247 1045.17,685.247 1045.73,685.247 1046.29,685.247 1046.85,685.247 1047.41,685.247 1047.97,685.247 1048.53,685.247 1049.09,685.247 1049.65,685.247 1050.2,685.247 1050.76,685.247 1051.32,685.247 1051.88,685.247 1052.44,685.247 1053,685.247 1053.56,685.247 1054.12,685.247 1054.68,685.247 1055.24,685.247 1055.8,685.247 1056.36,685.247 1056.92,685.247 1057.48,685.247 1058.03,685.247 1058.59,685.247 1059.15,685.247 1059.71,685.247 1060.27,685.247 1060.83,685.247 1061.39,685.247 1061.95,685.247 1062.51,685.247 1063.07,685.247 1063.63,685.247 1064.19,685.247 1064.75,685.247 1065.3,685.247 1065.86,685.247 1066.42,685.247 1066.98,685.247 1067.54,685.247 1068.1,685.247 1068.66,685.247 1069.22,685.247 1069.78,685.247 1070.34,685.247 1070.9,685.247 1071.46,685.247 1072.02,685.247 1072.57,685.247 1073.13,685.247 1073.69,685.247 1074.25,685.247 1074.81,685.247 1075.37,685.247 1075.93,685.247 1076.49,685.247 1077.05,685.247 1077.61,685.247 1078.17,685.247 1078.73,685.247 1079.29,685.247 1079.85,685.247 1080.4,685.247 1080.96,685.247 1081.52,685.247 1082.08,685.247 1082.64,685.247 1083.2,685.247 1083.76,685.247 1084.32,685.247 1084.88,685.247 1085.44,685.247 1086,685.247 1086.56,685.247 1087.12,685.247 1087.67,685.247 1088.23,685.247 1088.79,685.247 1089.35,685.247 1089.91,685.247 1090.47,685.247 1091.03,685.247 1091.59,685.247 1092.15,685.247 1092.71,685.247 1093.27,685.247 1093.83,685.247 1094.39,685.247 1094.94,685.247 1095.5,685.247 1096.06,685.247 1096.62,685.247 1097.18,685.247 1097.74,685.247 1098.3,685.247 1098.86,685.247 1099.42,685.247 1099.98,685.247 1100.54,685.247 1101.1,685.247 1101.66,685.247 1102.22,685.247 1102.77,685.247 1103.33,685.247 1103.89,685.247 1104.45,685.247 1105.01,685.247 1105.57,685.247 1106.13,685.247 1106.69,685.247 1107.25,685.247 1107.81,685.247 1108.37,685.247 1108.93,685.247 1109.49,685.247 1110.04,685.247 1110.6,685.247 1111.16,685.247 1111.72,685.247 1112.28,685.247 1112.84,685.247 1113.4,685.247 1113.96,685.247 1114.52,685.247 1115.08,685.247 1115.64,685.247 1116.2,685.247 1116.76,685.247 1117.31,685.247 1117.87,685.247 1118.43,685.247 1118.99,685.247 1119.55,685.247 1120.11,685.247 1120.67,685.247 1121.23,685.247 1121.79,685.247 1122.35,685.247 1122.91,685.247 1123.47,685.247 1124.03,685.247 1124.59,685.247 1125.14,685.247 1125.7,685.247 1126.26,685.247 1126.82,685.247 1127.38,685.247 1127.94,685.247 1128.5,685.247 1129.06,685.247 1129.62,685.247 1130.18,685.247 1130.74,685.247 1131.3,685.247 1131.86,685.247 1132.41,685.247 1132.97,685.247 1133.53,685.247 1134.09,685.247 1134.65,685.247 1135.21,685.247 1135.77,685.247 1136.33,685.247 1136.89,685.247 1137.45,685.247 1138.01,685.247 1138.57,685.247 1139.13,685.247 1139.68,685.247 1140.24,685.247 1140.8,685.247 1141.36,685.247 1141.92,685.247 1142.48,685.247 1143.04,685.247 1143.6,685.247 1144.16,685.247 1144.72,685.247 1145.28,685.247 1145.84,685.247 1146.4,685.247 1146.96,685.247 1147.51,685.247 1148.07,685.247 1148.63,685.247 1149.19,685.247 1149.75,685.247 1150.31,685.247 1150.87,685.247 1151.43,685.247 1151.99,685.247 1152.55,685.247 1153.11,685.247 1153.67,685.247 1154.23,685.247 1154.78,685.247 1155.34,685.247 1155.9,685.247 1156.46,685.247 1157.02,685.247 1157.58,685.247 1158.14,685.247 1158.7,685.247 1159.26,685.247 1159.82,685.247 1160.38,685.247 1160.94,685.247 1161.5,685.247 1162.05,685.247 1162.61,685.247 1163.17,685.247 1163.73,685.247 1164.29,685.247 1164.85,685.247 1165.41,685.247 1165.97,685.247 1166.53,685.247 1167.09,685.247 1167.65,685.247 1168.21,685.247 1168.77,685.247 1169.33,685.247 1169.88,685.247 1170.44,685.247 1171,685.247 1171.56,685.247 1172.12,685.247 1172.68,685.247 1173.24,685.247 1173.8,685.247 1174.36,685.247 1174.92,685.247 1175.48,685.247 1176.04,685.247 1176.6,685.247 1177.15,685.247 1177.71,685.247 1178.27,685.247 1178.83,685.247 1179.39,685.247 1179.95,685.247 1180.51,685.247 1181.07,685.247 1181.63,685.247 1182.19,685.247 1182.75,685.247 1183.31,685.247 1183.87,685.247 1184.43,685.247 1184.98,685.247 1185.54,685.247 1186.1,685.247 1186.66,685.247 1187.22,685.247 1187.78,685.247 1188.34,685.247 1188.9,685.247 1189.46,685.247 1190.02,685.247 1190.58,685.247 1191.14,685.247 1191.7,685.247 1192.25,685.247 1192.81,685.247 1193.37,685.247 1193.93,685.247 1194.49,685.247 1195.05,685.247 1195.61,685.247 1196.17,685.247 1196.73,685.247 1197.29,685.247 1197.85,685.247 1198.41,685.247 1198.97,685.247 1199.52,685.247 1200.08,685.247 1200.64,685.247 1201.2,685.247 1201.76,685.247 1202.32,685.247 1202.88,685.247 1203.44,685.247 1204,685.247 1204.56,685.247 1205.12,685.247 1205.68,685.247 1206.24,685.247 1206.8,685.247 1207.35,685.247 1207.91,685.247 1208.47,685.247 1209.03,685.247 1209.59,685.247 1210.15,685.247 1210.71,685.247 1211.27,685.247 1211.83,685.247 1212.39,685.247 1212.95,685.247 1213.51,685.247 1214.07,685.247 1214.62,685.247 1215.18,685.247 1215.74,685.247 1216.3,685.247 1216.86,685.247 1217.42,685.247 1217.98,685.247 1218.54,685.247 1219.1,685.247 1219.66,685.247 1220.22,685.247 1220.78,685.247 1221.34,685.247 1221.89,685.247 1222.45,685.247 1223.01,685.247 1223.57,685.247 1224.13,685.247 1224.69,685.247 1225.25,685.247 1225.81,685.247 1226.37,685.247 1226.93,685.247 1227.49,685.247 1228.05,685.247 1228.61,685.247 1229.17,685.247 1229.72,685.247 1230.28,685.247 1230.84,685.247 1231.4,685.247 1231.96,685.247 1232.52,685.247 1233.08,685.247 1233.64,685.247 1234.2,685.247 1234.76,685.247 1235.32,685.247 1235.88,685.247 1236.44,685.247 1236.99,685.247 1237.55,685.247 1238.11,685.247 1238.67,685.247 1239.23,685.247 1239.79,685.247 1240.35,685.247 1240.91,685.247 1241.47,685.247 1242.03,685.247 1242.59,685.247 1243.15,685.247 1243.71,685.247 1244.26,685.247 1244.82,685.247 1245.38,685.247 1245.94,685.247 1246.5,685.247 1247.06,685.247 1247.62,685.247 1248.18,685.247 1248.74,685.247 1249.3,685.247 1249.86,685.247 1250.42,685.247 1250.98,685.247 1251.54,685.247 1252.09,685.247 1252.65,685.247 1253.21,685.247 1253.77,685.247 1254.33,685.247 1254.89,685.247 1255.45,685.247 1256.01,685.247 1256.57,685.247 1257.13,685.247 1257.69,685.247 1258.25,685.247 1258.81,685.247 1259.36,685.247 1259.92,685.247 1260.48,685.247 1261.04,685.247 1261.6,685.247 1262.16,685.247 1262.72,685.247 1263.28,685.247 1263.84,685.247 1264.4,685.247 1264.96,685.247 1265.52,685.247 1266.08,685.247 1266.63,685.247 1267.19,685.247 1267.75,685.247 1268.31,685.247 1268.87,685.247 1269.43,685.247 1269.99,685.247 1270.55,685.247 1271.11,685.247 1271.67,685.247 1272.23,685.247 1272.79,685.247 1273.35,685.247 1273.91,685.247 1274.46,685.247 1275.02,685.247 1275.58,685.247 1276.14,685.247 1276.7,685.247 1277.26,685.247 1277.82,685.247 1278.38,685.247 1278.94,685.247 1279.5,685.247 1280.06,685.247 1280.62,685.247 1281.18,685.247 1281.73,685.247 1282.29,685.247 1282.85,685.247 1283.41,685.247 1283.97,685.247 1284.53,685.247 1285.09,685.247 1285.65,685.247 1286.21,685.247 1286.77,685.247 1287.33,685.247 1287.89,685.247 1288.45,685.247 1289,685.247 1289.56,685.247 1290.12,685.247 1290.68,685.247 1291.24,685.247 1291.8,685.247 1292.36,685.247 1292.92,685.247 1293.48,685.247 1294.04,685.247 1294.6,685.247 1295.16,685.247 1295.72,685.247 1296.28,685.247 1296.83,685.247 1297.39,685.247 1297.95,685.247 1298.51,685.247 1299.07,685.247 1299.63,685.247 1300.19,685.247 1300.75,685.247 1301.31,685.247 1301.87,685.247 1302.43,685.247 1302.99,685.247 1303.55,685.247 1304.1,685.247 1304.66,685.247 1305.22,685.247 1305.78,685.247 1306.34,685.247 1306.9,685.247 1307.46,685.247 1308.02,685.247 1308.58,685.247 1309.14,685.247 1309.7,685.247 1310.26,685.247 1310.82,685.247 1311.38,685.247 1311.93,685.247 1312.49,685.247 1313.05,685.247 1313.61,685.247 1314.17,685.247 1314.73,685.247 1315.29,685.247 1315.85,685.247 1316.41,685.247 1316.97,685.247 1317.53,685.247 1318.09,685.247 1318.65,685.247 1319.2,685.247 1319.76,685.247 1320.32,685.247 1320.88,685.247 1321.44,685.247 1322,685.247 1322.56,685.247 1323.12,685.247 1323.68,685.247 1324.24,685.247 1324.8,685.247 1325.36,685.247 1325.92,685.247 1326.47,685.247 1327.03,685.247 1327.59,685.247 1328.15,685.247 1328.71,685.247 1329.27,685.247 1329.83,685.247 1330.39,685.247 1330.95,685.247 1331.51,685.247 1332.07,685.247 1332.63,685.247 1333.19,685.247 1333.75,685.247 1334.3,685.247 1334.86,685.247 1335.42,685.247 1335.98,685.247 1336.54,685.247 1337.1,685.247 1337.66,685.247 1338.22,685.247 1338.78,685.247 1339.34,685.247 1339.9,685.247 1340.46,685.247 1341.02,685.247 1341.57,685.247 1342.13,685.247 1342.69,685.247 1343.25,685.247 1343.81,685.247 1344.37,685.247 1344.93,685.247 1345.49,685.247 1346.05,685.247 1346.61,685.247 1347.17,685.247 1347.73,685.247 1348.29,685.247 1348.84,685.247 1349.4,685.247 1349.96,685.247 1350.52,685.247 1351.08,685.247 1351.64,685.247 1352.2,685.247 1352.76,685.247 1353.32,685.247 1353.88,685.247 1354.44,685.247 1355,685.247 1355.56,685.247 1356.12,685.247 1356.67,685.247 1357.23,685.247 1357.79,685.247 1358.35,685.247 1358.91,685.247 1359.47,685.247 1360.03,685.247 1360.59,685.247 1361.15,685.247 1361.71,685.247 1362.27,685.247 1362.83,685.247 1363.39,685.247 1363.94,685.247 1364.5,685.247 1365.06,685.247 1365.62,685.247 1366.18,685.247 1366.74,685.247 1367.3,685.247 1367.86,685.247 1368.42,685.247 1368.98,685.247 1369.54,685.247 1370.1,685.247 1370.66,685.247 1371.21,685.247 1371.77,685.247 1372.33,685.247 1372.89,685.247 1373.45,685.247 1374.01,685.247 1374.57,685.247 1375.13,685.247 1375.69,685.247 1376.25,685.247 1376.81,685.247 1377.37,685.247 1377.93,685.247 1378.49,685.247 1379.04,685.247 1379.6,685.247 1380.16,685.247 1380.72,685.247 1381.28,685.247 1381.84,685.247 1382.4,685.247 1382.96,685.247 1383.52,685.247 1384.08,685.247 1384.64,685.247 1385.2,685.247 1385.76,685.247 1386.31,685.247 1386.87,685.247 1387.43,685.247 1387.99,685.247 1388.55,685.247 1389.11,685.247 1389.67,685.247 1390.23,685.247 1390.79,685.247 1391.35,685.247 1391.91,685.247 1392.47,685.247 1393.03,685.247 1393.58,685.247 1394.14,685.247 1394.7,685.247 1395.26,685.247 1395.82,685.247 1396.38,685.247 1396.94,685.247 1397.5,685.247 1398.06,685.247 1398.62,685.247 1399.18,685.247 1399.74,685.247 1400.3,685.247 1400.86,685.247 1401.41,685.247 1401.97,685.247 1402.53,685.247 1403.09,685.247 1403.65,685.247 1404.21,685.247 1404.77,685.247 1405.33,685.247 1405.89,685.247 1406.45,685.247 1407.01,685.247 1407.57,685.247 1408.13,685.247 1408.68,685.247 1409.24,685.247 1409.8,685.247 1410.36,685.247 1410.92,685.247 1411.48,685.247 1412.04,685.247 1412.6,685.247 1413.16,685.247 1413.72,685.247 1414.28,685.247 1414.84,685.247 1415.4,685.247 1415.95,685.247 1416.51,685.247 1417.07,685.247 1417.63,685.247 1418.19,685.247 1418.75,685.247 1419.31,685.247 1419.87,685.247 1420.43,685.247 1420.99,685.247 1421.55,685.247 1422.11,685.247 1422.67,685.247 1423.23,685.247 1423.78,685.247 1424.34,685.247 1424.9,685.247 1425.46,685.247 1426.02,685.247 1426.58,685.247 1427.14,685.247 1427.7,685.247 1428.26,685.247 1428.82,685.247 1429.38,685.247 1429.94,685.247 1430.5,685.247 1431.05,685.247 1431.61,685.247 1432.17,685.247 1432.73,685.247 1433.29,685.247 1433.85,685.247 1434.41,685.247 1434.97,685.247 1435.53,685.247 1436.09,685.247 1436.65,685.247 1437.21,685.247 1437.77,685.247 1438.33,685.247 1438.88,685.247 1439.44,685.247 1440,685.247 1440.56,685.247 1441.12,685.247 1441.68,685.247 1442.24,685.247 1442.8,685.247 1443.36,685.247 1443.92,685.247 1444.48,685.247 1445.04,685.247 1445.6,685.247 1446.15,685.247 1446.71,685.247 1447.27,685.247 1447.83,685.247 1448.39,685.247 1448.95,685.247 1449.51,685.247 1450.07,685.247 1450.63,685.247 1451.19,685.247 1451.75,685.247 1452.31,685.247 1452.87,685.247 1453.42,685.247 1453.98,685.247 1454.54,685.247 1455.1,685.247 1455.66,685.247 1456.22,685.247 1456.78,685.247 1457.34,685.247 1457.9,685.247 1458.46,685.247 1459.02,685.247 1459.58,685.247 1460.14,685.247 1460.7,685.247 1461.25,685.247 1461.81,685.247 1462.37,685.247 1462.93,685.247 1463.49,685.247 1464.05,685.247 1464.61,685.247 1465.17,685.247 1465.73,685.247 1466.29,685.247 1466.85,685.247 1467.41,685.247 1467.97,685.247 1468.52,685.247 1469.08,685.247 1469.64,685.247 1470.2,685.247 1470.76,685.247 1471.32,685.247 1471.88,685.247 1472.44,685.247 1473,685.247 1473.56,685.247 1474.12,685.247 1474.68,685.247 1475.24,685.247 1475.79,685.247 1476.35,685.247 1476.91,685.247 1477.47,685.247 1478.03,685.247 1478.59,685.247 1479.15,685.247 1479.71,685.247 1480.27,685.247 1480.83,685.247 1481.39,685.247 1481.95,685.247 1482.51,685.247 1483.07,685.247 1483.62,685.247 1484.18,685.247 1484.74,685.247 1485.3,685.247 1485.86,685.247 1486.42,685.247 1486.98,685.247 1487.54,685.247 1488.1,685.247 1488.66,685.247 1489.22,685.247 1489.78,685.247 1490.34,685.247 1490.89,685.247 1491.45,685.247 1492.01,685.247 1492.57,685.247 1493.13,685.247 1493.69,685.247 1494.25,685.247 1494.81,685.247 1495.37,685.247 1495.93,685.247 1496.49,685.247 1497.05,685.247 1497.61,685.247 1498.16,685.247 1498.72,685.247 1499.28,685.247 1499.84,685.247 1500.4,685.247 1500.96,685.247 1501.52,685.247 1502.08,685.247 1502.64,685.247 1503.2,685.247 1503.76,685.247 1504.32,685.247 1504.88,685.247 1505.44,685.247 1505.99,685.247 1506.55,685.247 1507.11,685.247 1507.67,685.247 1508.23,685.247 1508.79,685.247 1509.35,685.247 1509.91,685.247 1510.47,685.247 1511.03,685.247 1511.59,685.247 1512.15,685.247 1512.71,685.247 1513.26,685.247 1513.82,685.247 1514.38,685.247 1514.94,685.247 1515.5,685.247 1516.06,685.247 1516.62,685.247 1517.18,685.247 1517.74,685.247 1518.3,685.247 1518.86,685.247 1519.42,685.247 1519.98,685.247 1520.53,685.247 1521.09,685.247 1521.65,685.247 1522.21,685.247 1522.77,685.247 1523.33,685.247 1523.89,685.247 1524.45,685.247 1525.01,685.247 1525.57,685.247 1526.13,685.247 1526.69,685.247 1527.25,685.247 1527.81,685.247 1528.36,685.247 1528.92,685.247 1529.48,685.247 1530.04,685.247 1530.6,685.247 1531.16,685.247 1531.72,685.247 1532.28,685.247 1532.84,685.247 1533.4,685.247 1533.96,685.247 1534.52,685.247 1535.08,685.247 1535.63,685.247 1536.19,685.247 1536.75,685.247 1537.31,685.247 1537.87,685.247 1538.43,685.247 1538.99,685.247 1539.55,685.247 1540.11,685.247 1540.67,685.247 1541.23,685.247 1541.79,685.247 1542.35,685.247 1542.9,685.247 1543.46,685.247 1544.02,685.247 1544.58,685.247 1545.14,685.247 1545.7,685.247 1546.26,685.247 1546.82,685.247 1547.38,685.247 1547.94,685.247 1548.5,685.247 1549.06,685.247 1549.62,685.247 1550.18,685.247 1550.73,685.247 1551.29,685.247 1551.85,685.247 1552.41,685.247 1552.97,685.247 1553.53,685.247 1554.09,685.247 1554.65,685.247 1555.21,685.247 1555.77,685.247 1556.33,685.247 1556.89,685.247 1557.45,685.247 1558,685.247 1558.56,685.247 1559.12,685.247 1559.68,685.247 1560.24,685.247 1560.8,685.247 1561.36,685.247 1561.92,685.247 1562.48,685.247 1563.04,685.247 1563.6,685.247 1564.16,685.247 1564.72,685.247 1565.28,685.247 1565.83,685.247 1566.39,685.247 1566.95,685.247 1567.51,685.247 1568.07,685.247 1568.63,685.247 1569.19,685.247 1569.75,685.247 1570.31,685.247 1570.87,685.247 1571.43,685.247 1571.99,685.247 1572.55,685.247 1573.1,685.247 1573.66,685.247 1574.22,685.247 1574.78,685.247 1575.34,685.247 1575.9,685.247 1576.46,685.247 1577.02,685.247 1577.58,685.247 1578.14,685.247 1578.7,685.247 1579.26,685.247 1579.82,685.247 1580.37,685.247 1580.93,685.247 1581.49,685.247 1582.05,685.247 1582.61,685.247 1583.17,685.247 1583.73,685.247 1584.29,685.247 1584.85,685.247 1585.41,685.247 1585.97,685.247 1586.53,685.247 1587.09,685.247 1587.65,685.247 1588.2,685.247 1588.76,685.247 1589.32,685.247 1589.88,685.247 1590.44,685.247 1591,685.247 1591.56,685.247 1592.12,685.247 1592.68,685.247 1593.24,685.247 1593.8,685.247 1594.36,685.247 1594.92,685.247 1595.47,685.247 1596.03,685.247 1596.59,685.247 1597.15,685.247 1597.71,685.247 1598.27,685.247 1598.83,685.247 1599.39,685.247 1599.95,685.247 1600.51,685.247 1601.07,685.247 1601.63,685.247 1602.19,685.247 1602.74,685.247 1603.3,685.247 1603.86,685.247 1604.42,685.247 1604.98,685.247 1605.54,685.247 1606.1,685.247 1606.66,685.247 1607.22,685.247 1607.78,685.247 1608.34,685.247 1608.9,685.247 1609.46,685.247 1610.02,685.247 1610.57,685.247 1611.13,685.247 1611.69,685.247 1612.25,685.247 1612.81,685.247 1613.37,685.247 1613.93,685.247 1614.49,685.247 1615.05,685.247 1615.61,685.247 1616.17,685.247 1616.73,685.247 1617.29,685.247 1617.84,685.247 1618.4,685.247 1618.96,685.247 1619.52,685.247 1620.08,685.247 1620.64,685.247 1621.2,685.247 1621.76,685.247 1622.32,685.247 1622.88,685.247 1623.44,685.247 1624,685.247 1624.56,685.247 1625.11,685.247 1625.67,685.247 1626.23,685.247 1626.79,685.247 1627.35,685.247 1627.91,685.247 1628.47,685.247 1629.03,685.247 1629.59,685.247 1630.15,685.247 1630.71,685.247 1631.27,685.247 1631.83,685.247 1632.39,685.247 1632.94,685.247 1633.5,685.247 1634.06,685.247 1634.62,685.247 1635.18,685.247 1635.74,685.247 1636.3,685.247 1636.86,685.247 1637.42,685.247 1637.98,685.247 1638.54,685.247 1639.1,685.247 1639.66,685.247 1640.21,685.247 1640.77,685.247 1641.33,685.247 1641.89,685.247 1642.45,685.247 1643.01,685.247 1643.57,685.247 1644.13,685.247 1644.69,685.247 1645.25,685.247 1645.81,685.247 1646.37,685.247 1646.93,685.247 1647.48,685.247 1648.04,685.247 1648.6,685.247 1649.16,685.247 1649.72,685.247 1650.28,685.247 1650.84,685.247 1651.4,685.247 1651.96,685.247 1652.52,685.247 1653.08,685.247 1653.64,685.247 1654.2,685.247 1654.76,685.247 1655.31,685.247 1655.87,685.247 1656.43,685.247 1656.99,685.247 1657.55,685.247 1658.11,685.247 1658.67,685.247 1659.23,685.247 1659.79,685.247 1660.35,685.247 1660.91,685.247 1661.47,685.247 1662.03,685.247 1662.58,685.247 1663.14,685.247 1663.7,685.247 1664.26,685.247 1664.82,685.247 1665.38,685.247 1665.94,685.247 1666.5,685.247 1667.06,685.247 1667.62,685.247 1668.18,685.247 1668.74,685.247 1669.3,685.247 1669.85,685.247 1670.41,685.247 1670.97,685.247 1671.53,685.247 1672.09,685.247 1672.65,685.247 1673.21,685.247 1673.77,685.247 1674.33,685.247 1674.89,685.247 1675.45,685.247 1676.01,685.247 1676.57,685.247 1677.13,685.247 1677.68,685.247 1678.24,685.247 1678.8,685.247 1679.36,685.247 1679.92,685.247 1680.48,685.247 1681.04,685.247 1681.6,685.247 1682.16,685.247 1682.72,685.247 1683.28,685.247 1683.84,685.247 1684.4,685.247 1684.95,685.247 1685.51,685.247 1686.07,685.247 1686.63,685.247 1687.19,685.247 1687.75,685.247 1688.31,685.247 1688.87,685.247 1689.43,685.247 1689.99,685.247 1690.55,685.247 1691.11,685.247 1691.67,685.247 1692.23,685.247 1692.78,685.247 1693.34,685.247 1693.9,685.247 1694.46,685.247 1695.02,685.247 1695.58,685.247 1696.14,685.247 1696.7,685.247 1697.26,685.247 1697.82,685.247 1698.38,685.247 1698.94,685.247 1699.5,685.247 1700.05,685.247 1700.61,685.247 1701.17,685.247 1701.73,685.247 1702.29,685.247 1702.85,685.247 1703.41,685.247 1703.97,685.247 1704.53,685.247 1705.09,685.247 1705.65,685.247 1706.21,685.247 1706.77,685.247 1707.32,685.247 1707.88,685.247 1708.44,685.247 1709,685.247 1709.56,685.247 1710.12,685.247 1710.68,685.247 1711.24,685.247 1711.8,685.247 1712.36,685.247 1712.92,685.247 1713.48,685.247 1714.04,685.247 1714.6,685.247 1715.15,685.247 1715.71,685.247 1716.27,685.247 1716.83,685.247 1717.39,685.247 1717.95,685.247 1718.51,685.247 1719.07,685.247 1719.63,685.247 1720.19,685.247 1720.75,685.247 1721.31,685.247 1721.87,685.247 1722.42,685.247 1722.98,685.247 1723.54,685.247 1724.1,685.247 1724.66,685.247 1725.22,685.247 1725.78,685.247 1726.34,685.247 1726.9,685.247 1727.46,685.247 1728.02,685.247 1728.58,685.247 1729.14,685.247 1729.69,685.247 1730.25,685.247 1730.81,685.247 1731.37,685.247 1731.93,685.247 1732.49,685.247 1733.05,685.247 1733.61,685.247 1734.17,685.247 1734.73,685.247 1735.29,685.247 1735.85,685.247 1736.41,685.247 1736.97,685.247 1737.52,685.247 1738.08,685.247 1738.64,685.247 1739.2,685.247 1739.76,685.247 1740.32,685.247 1740.88,685.247 1741.44,685.247 1742,685.247 1742.56,685.247 1743.12,685.247 1743.68,685.247 1744.24,685.247 1744.79,685.247 1745.35,685.247 1745.91,685.247 1746.47,685.247 1747.03,685.247 1747.59,685.247 1748.15,685.247 1748.71,685.247 1749.27,685.247 1749.83,685.247 1750.39,685.247 1750.95,685.247 1751.51,685.247 1752.06,685.247 1752.62,685.247 1753.18,685.247 1753.74,685.247 1754.3,685.247 1754.86,685.247 1755.42,685.247 1755.98,685.247 1756.54,685.247 1757.1,685.247 1757.66,685.247 1758.22,685.247 1758.78,685.247 1759.34,685.247 1759.89,685.247 1760.45,685.247 1761.01,685.247 1761.57,685.247 1762.13,685.247 1762.69,685.247 1763.25,685.247 1763.81,685.247 1764.37,685.247 1764.93,685.247 1765.49,685.247 1766.05,685.247 1766.61,685.247 1767.16,685.247 1767.72,685.247 1768.28,685.247 1768.84,685.247 1769.4,685.247 1769.96,685.247 1770.52,685.247 1771.08,685.247 1771.64,685.247 1772.2,685.247 1772.76,685.247 1773.32,685.247 1773.88,685.247 1774.43,685.247 1774.99,685.247 1775.55,685.247 1776.11,685.247 1776.67,685.247 1777.23,685.247 1777.79,685.247 1778.35,685.247 1778.91,685.247 1779.47,685.247 1780.03,685.247 1780.59,685.247 1781.15,685.247 1781.71,685.247 1782.26,685.247 1782.82,685.247 1783.38,685.247 1783.94,685.247 1784.5,685.247 1785.06,685.247 1785.62,685.247 1786.18,685.247 1786.74,685.247 1787.3,685.247 1787.86,685.247 1788.42,685.247 1788.98,685.247 1789.53,685.247 1790.09,685.247 1790.65,685.247 1791.21,685.247 1791.77,685.247 1792.33,685.247 1792.89,685.247 1793.45,685.247 1794.01,685.247 1794.57,685.247 1795.13,685.247 1795.69,685.247 1796.25,685.247 1796.8,685.247 1797.36,685.247 1797.92,685.247 1798.48,685.247 1799.04,685.247 1799.6,685.247 1800.16,685.247 1800.72,685.247 1801.28,685.247 1801.84,685.247 1802.4,685.247 1802.96,685.247 1803.52,685.247 1804.08,685.247 1804.63,685.247 1805.19,685.247 1805.75,685.247 1806.31,685.247 1806.87,685.247 1807.43,685.247 1807.99,685.247 1808.55,685.247 1809.11,685.247 1809.67,685.247 1810.23,685.247 1810.79,685.247 1811.35,685.247 1811.9,685.247 1812.46,685.247 1813.02,685.247 1813.58,685.247 1814.14,685.247 1814.7,685.247 1815.26,685.247 1815.82,685.247 1816.38,685.247 1816.94,685.247 1817.5,685.247 1818.06,685.247 1818.62,685.247 1819.18,685.247 1819.73,685.247 1820.29,685.247 1820.85,685.247 1821.41,685.247 1821.97,685.247 1822.53,685.247 1823.09,685.247 1823.65,685.247 1824.21,685.247 1824.77,685.247 1825.33,685.247 1825.89,685.247 1826.45,685.247 1827,685.247 1827.56,685.247 1828.12,685.247 1828.68,685.247 1829.24,685.247 1829.8,685.247 1830.36,685.247 1830.92,685.247 1831.48,685.247 1832.04,685.247 1832.6,685.247 1833.16,685.247 1833.72,685.247 1834.27,685.247 1834.83,685.247 1835.39,685.247 1835.95,685.247 1836.51,685.247 1837.07,685.247 1837.63,685.247 1838.19,685.247 \"/>\n<path clip-path=\"url(#clip193)\" d=\"M720.247 684.488 L720.806 684.488 L721.365 684.488 L721.924 684.488 L722.484 684.488 L723.043 684.488 L723.602 684.488 L724.161 684.488 L724.721 684.488 L725.28 684.488 L725.839 684.488 L726.398 684.488 L726.958 684.488 L727.517 684.488 L728.076 684.488 L728.635 684.488 L729.195 684.488 L729.754 684.488 L730.313 684.488 L730.872 684.488 L731.432 684.488 L731.991 684.488 L732.55 684.488 L733.109 684.488 L733.669 684.488 L734.228 684.488 L734.787 684.488 L735.346 684.488 L735.906 684.488 L736.465 684.488 L737.024 684.488 L737.583 684.488 L738.143 684.488 L738.702 684.488 L739.261 684.488 L739.82 684.488 L740.38 684.488 L740.939 684.488 L741.498 684.488 L742.057 684.488 L742.617 684.488 L743.176 684.488 L743.735 684.488 L744.294 684.488 L744.854 684.488 L745.413 684.488 L745.972 684.488 L746.531 684.488 L747.091 684.488 L747.65 684.488 L748.209 684.488 L748.768 684.488 L749.328 684.488 L749.887 684.488 L750.446 684.488 L751.005 684.488 L751.565 684.488 L752.124 684.488 L752.683 684.488 L753.242 684.488 L753.802 684.488 L754.361 684.488 L754.92 684.488 L755.479 684.488 L756.039 684.488 L756.598 684.488 L757.157 684.488 L757.716 684.488 L758.276 684.488 L758.835 684.488 L759.394 684.488 L759.953 684.488 L760.513 684.488 L761.072 684.488 L761.631 684.488 L762.19 684.488 L762.75 684.488 L763.309 684.488 L763.868 684.488 L764.427 684.488 L764.987 684.488 L765.546 684.488 L766.105 684.488 L766.664 684.488 L767.224 684.488 L767.783 684.488 L768.342 684.488 L768.901 684.488 L769.461 684.488 L770.02 684.488 L770.579 684.488 L771.138 684.488 L771.698 684.488 L772.257 684.488 L772.816 684.488 L773.375 684.488 L773.935 684.488 L774.494 684.488 L775.053 684.488 L775.612 684.488 L776.172 684.488 L776.731 684.488 L777.29 684.488 L777.849 684.488 L778.409 684.488 L778.968 684.488 L779.527 684.488 L780.086 684.488 L780.646 684.488 L781.205 684.488 L781.764 684.488 L782.323 684.488 L782.883 684.488 L783.442 684.488 L784.001 684.488 L784.56 684.488 L785.12 684.488 L785.679 684.488 L786.238 684.488 L786.797 684.488 L787.357 684.488 L787.916 684.488 L788.475 684.488 L789.034 684.488 L789.594 684.488 L790.153 684.488 L790.712 684.488 L791.271 684.488 L791.831 684.488 L792.39 684.488 L792.949 684.488 L793.508 684.488 L794.068 684.488 L794.627 684.488 L795.186 684.488 L795.745 684.488 L796.305 684.488 L796.864 684.488 L797.423 684.488 L797.982 684.488 L798.542 684.488 L799.101 684.488 L799.66 684.488 L800.219 684.488 L800.779 684.488 L801.338 684.488 L801.897 684.488 L802.456 684.488 L803.016 684.488 L803.575 684.488 L804.134 684.488 L804.693 684.488 L805.253 684.488 L805.812 684.488 L806.371 684.488 L806.931 684.488 L807.49 684.488 L808.049 684.488 L808.608 684.488 L809.168 684.488 L809.727 684.488 L810.286 684.488 L810.845 684.488 L811.405 684.488 L811.964 684.488 L812.523 684.488 L813.082 684.488 L813.642 684.488 L814.201 684.488 L814.76 684.488 L815.319 684.488 L815.879 684.488 L816.438 684.488 L816.997 684.488 L817.556 684.488 L818.116 684.488 L818.675 684.488 L819.234 684.488 L819.793 684.488 L820.353 684.488 L820.912 684.488 L821.471 684.488 L822.03 684.488 L822.59 684.488 L823.149 684.488 L823.708 684.488 L824.267 684.488 L824.827 684.488 L825.386 684.488 L825.945 684.488 L826.504 684.488 L827.064 684.488 L827.623 684.488 L828.182 684.488 L828.741 684.488 L829.301 684.488 L829.86 684.488 L830.419 684.488 L830.978 684.488 L831.538 684.488 L832.097 684.488 L832.656 684.488 L833.215 684.488 L833.775 684.488 L834.334 684.488 L834.893 684.488 L835.452 684.488 L836.012 684.488 L836.571 684.488 L837.13 684.488 L837.689 684.488 L838.249 684.488 L838.808 684.488 L839.367 684.488 L839.926 684.488 L840.486 684.488 L841.045 684.488 L841.604 684.488 L842.163 684.488 L842.723 684.488 L843.282 684.488 L843.841 684.488 L844.4 684.488 L844.96 684.488 L845.519 684.488 L846.078 684.488 L846.637 684.488 L847.197 684.488 L847.756 684.488 L848.315 684.488 L848.874 684.488 L849.434 684.488 L849.993 684.488 L850.552 684.488 L851.111 684.488 L851.671 684.488 L852.23 684.488 L852.789 684.488 L853.348 684.488 L853.908 684.488 L854.467 684.488 L855.026 684.488 L855.585 684.488 L856.145 684.488 L856.704 684.488 L857.263 684.488 L857.822 684.488 L858.382 684.488 L858.941 684.488 L859.5 684.488 L860.059 684.488 L860.619 684.488 L861.178 684.488 L861.737 684.488 L862.296 684.488 L862.856 684.488 L863.415 684.488 L863.974 684.488 L864.533 684.488 L865.093 684.488 L865.652 684.488 L866.211 684.488 L866.77 684.488 L867.33 684.488 L867.889 684.488 L868.448 684.488 L869.007 684.488 L869.567 684.488 L870.126 684.488 L870.685 684.488 L871.244 684.488 L871.804 684.488 L872.363 684.488 L872.922 684.488 L873.481 684.488 L874.041 684.488 L874.6 684.488 L875.159 684.488 L875.718 684.488 L876.278 684.488 L876.837 684.488 L877.396 684.488 L877.955 684.488 L878.515 684.488 L879.074 684.488 L879.633 684.488 L880.192 684.488 L880.752 684.488 L881.311 684.488 L881.87 684.488 L882.429 684.488 L882.989 684.488 L883.548 684.488 L884.107 684.488 L884.666 684.488 L885.226 684.488 L885.785 684.488 L886.344 684.488 L886.903 684.488 L887.463 684.488 L888.022 684.488 L888.581 684.488 L889.14 684.488 L889.7 684.488 L890.259 684.488 L890.818 684.488 L891.377 684.488 L891.937 684.488 L892.496 684.488 L893.055 684.488 L893.614 684.488 L894.174 684.488 L894.733 684.488 L895.292 684.488 L895.851 684.488 L896.411 684.488 L896.97 684.488 L897.529 684.488 L898.088 684.488 L898.648 684.488 L899.207 684.488 L899.766 684.488 L900.325 684.488 L900.885 684.488 L901.444 684.488 L902.003 684.488 L902.562 684.488 L903.122 684.488 L903.681 684.488 L904.24 684.488 L904.799 684.488 L905.359 684.488 L905.918 684.488 L906.477 684.488 L907.036 684.488 L907.596 684.488 L908.155 684.488 L908.714 684.488 L909.273 684.488 L909.833 684.488 L910.392 684.488 L910.951 684.488 L911.51 684.488 L912.07 684.488 L912.629 684.488 L913.188 684.488 L913.747 684.488 L914.307 684.488 L914.866 684.488 L915.425 684.488 L915.984 684.488 L916.544 684.488 L917.103 684.488 L917.662 684.488 L918.221 684.488 L918.781 684.488 L919.34 684.488 L919.899 684.488 L920.458 684.488 L921.018 684.488 L921.577 684.488 L922.136 684.488 L922.695 684.488 L923.255 684.488 L923.814 684.488 L924.373 684.488 L924.932 684.488 L925.492 684.488 L926.051 684.488 L926.61 684.488 L927.169 684.488 L927.729 684.488 L928.288 684.488 L928.847 684.488 L929.406 684.488 L929.966 684.488 L930.525 684.488 L931.084 684.488 L931.644 684.488 L932.203 684.488 L932.762 684.488 L933.321 684.488 L933.881 684.488 L934.44 684.488 L934.999 684.488 L935.558 684.488 L936.118 684.488 L936.677 684.488 L937.236 684.488 L937.795 684.488 L938.355 684.488 L938.914 684.488 L939.473 684.488 L940.032 684.488 L940.592 684.488 L941.151 684.488 L941.71 684.488 L942.269 684.488 L942.829 684.488 L943.388 684.488 L943.947 684.488 L944.506 684.488 L945.066 684.488 L945.625 684.488 L946.184 684.488 L946.743 684.488 L947.303 684.488 L947.862 684.488 L948.421 684.488 L948.98 684.488 L949.54 684.488 L950.099 684.488 L950.658 684.488 L951.217 684.488 L951.777 684.488 L952.336 684.488 L952.895 684.488 L953.454 684.488 L954.014 684.488 L954.573 684.488 L955.132 684.488 L955.691 684.488 L956.251 684.488 L956.81 684.488 L957.369 684.488 L957.928 684.488 L958.488 684.488 L959.047 684.488 L959.606 684.488 L960.165 684.488 L960.725 684.488 L961.284 684.488 L961.843 684.488 L962.402 684.488 L962.962 684.488 L963.521 684.488 L964.08 684.488 L964.639 684.488 L965.199 684.488 L965.758 684.488 L966.317 684.488 L966.876 684.488 L967.436 684.488 L967.995 684.488 L968.554 684.488 L969.113 684.488 L969.673 684.488 L970.232 684.488 L970.791 684.488 L971.35 684.488 L971.91 684.488 L972.469 684.488 L973.028 684.488 L973.587 684.488 L974.147 684.488 L974.706 684.488 L975.265 684.488 L975.824 684.488 L976.384 684.488 L976.943 684.488 L977.502 684.488 L978.061 684.488 L978.621 684.488 L979.18 684.488 L979.739 684.488 L980.298 684.488 L980.858 684.488 L981.417 684.488 L981.976 684.488 L982.535 684.488 L983.095 684.488 L983.654 684.488 L984.213 684.488 L984.772 684.488 L985.332 684.488 L985.891 684.488 L986.45 684.488 L987.009 684.488 L987.569 684.488 L988.128 684.488 L988.687 684.488 L989.246 684.488 L989.806 684.488 L990.365 684.488 L990.924 684.488 L991.483 684.488 L992.043 684.488 L992.602 684.488 L993.161 684.488 L993.72 684.488 L994.28 684.488 L994.839 684.488 L995.398 684.488 L995.957 684.488 L996.517 684.488 L997.076 684.488 L997.635 684.488 L998.194 684.488 L998.754 684.488 L999.313 684.488 L999.872 684.488 L1000.43 684.488 L1000.99 684.488 L1001.55 684.488 L1002.11 684.488 L1002.67 684.488 L1003.23 684.488 L1003.79 684.488 L1004.35 684.488 L1004.91 684.488 L1005.46 684.488 L1006.02 684.488 L1006.58 684.488 L1007.14 684.488 L1007.7 684.488 L1008.26 684.488 L1008.82 684.488 L1009.38 684.488 L1009.94 684.488 L1010.5 684.488 L1011.06 684.488 L1011.62 684.488 L1012.18 684.488 L1012.73 684.488 L1013.29 684.488 L1013.85 684.488 L1014.41 684.488 L1014.97 684.488 L1015.53 684.488 L1016.09 684.488 L1016.65 684.488 L1017.21 684.488 L1017.77 684.488 L1018.33 684.488 L1018.89 684.488 L1019.45 684.488 L1020.01 684.488 L1020.56 684.488 L1021.12 684.488 L1021.68 684.488 L1022.24 684.488 L1022.8 684.488 L1023.36 684.488 L1023.92 684.488 L1024.48 684.488 L1025.04 684.488 L1025.6 684.488 L1026.16 684.488 L1026.72 684.488 L1027.28 684.488 L1027.83 684.488 L1028.39 684.488 L1028.95 684.488 L1029.51 684.488 L1030.07 684.488 L1030.63 684.488 L1031.19 684.488 L1031.75 684.488 L1032.31 684.488 L1032.87 684.488 L1033.43 684.488 L1033.99 684.488 L1034.55 684.488 L1035.1 684.488 L1035.66 684.488 L1036.22 684.488 L1036.78 684.488 L1037.34 684.488 L1037.9 684.488 L1038.46 684.488 L1039.02 684.488 L1039.58 684.488 L1040.14 684.488 L1040.7 684.488 L1041.26 684.488 L1041.82 684.488 L1042.38 684.488 L1042.93 684.488 L1043.49 684.488 L1044.05 684.488 L1044.61 684.488 L1045.17 684.488 L1045.73 684.488 L1046.29 684.488 L1046.85 684.488 L1047.41 684.488 L1047.97 684.488 L1048.53 684.488 L1049.09 684.488 L1049.65 684.488 L1050.2 684.488 L1050.76 684.488 L1051.32 684.488 L1051.88 684.488 L1052.44 684.488 L1053 684.488 L1053.56 684.488 L1054.12 684.488 L1054.68 684.488 L1055.24 684.488 L1055.8 684.488 L1056.36 684.488 L1056.92 684.488 L1057.48 684.488 L1058.03 684.488 L1058.59 684.488 L1059.15 684.488 L1059.71 684.488 L1060.27 684.488 L1060.83 684.488 L1061.39 684.488 L1061.95 684.488 L1062.51 684.488 L1063.07 684.488 L1063.63 684.488 L1064.19 684.488 L1064.75 684.488 L1065.3 684.488 L1065.86 684.488 L1066.42 684.488 L1066.98 684.488 L1067.54 684.488 L1068.1 684.488 L1068.66 684.488 L1069.22 684.488 L1069.78 684.488 L1070.34 684.488 L1070.9 684.488 L1071.46 684.488 L1072.02 684.488 L1072.57 684.488 L1073.13 684.488 L1073.69 684.488 L1074.25 684.488 L1074.81 684.488 L1075.37 684.488 L1075.93 684.488 L1076.49 684.488 L1077.05 684.488 L1077.61 684.488 L1078.17 684.488 L1078.73 684.488 L1079.29 684.488 L1079.85 684.488 L1080.4 684.488 L1080.96 684.488 L1081.52 684.488 L1082.08 684.488 L1082.64 684.488 L1083.2 684.488 L1083.76 684.488 L1084.32 684.488 L1084.88 684.488 L1085.44 684.488 L1086 684.488 L1086.56 684.488 L1087.12 684.488 L1087.67 684.488 L1088.23 684.488 L1088.79 684.488 L1089.35 684.488 L1089.91 684.488 L1090.47 684.488 L1091.03 684.488 L1091.59 684.488 L1092.15 684.488 L1092.71 684.488 L1093.27 684.488 L1093.83 684.488 L1094.39 684.488 L1094.94 684.488 L1095.5 684.488 L1096.06 684.488 L1096.62 684.488 L1097.18 684.488 L1097.74 684.488 L1098.3 684.488 L1098.86 684.488 L1099.42 684.488 L1099.98 684.488 L1100.54 684.488 L1101.1 684.488 L1101.66 684.488 L1102.22 684.488 L1102.77 684.488 L1103.33 684.488 L1103.89 684.488 L1104.45 684.488 L1105.01 684.488 L1105.57 684.488 L1106.13 684.488 L1106.69 684.488 L1107.25 684.488 L1107.81 684.488 L1108.37 684.488 L1108.93 684.488 L1109.49 684.488 L1110.04 684.488 L1110.6 684.488 L1111.16 684.488 L1111.72 684.488 L1112.28 684.488 L1112.84 684.488 L1113.4 684.488 L1113.96 684.488 L1114.52 684.488 L1115.08 684.488 L1115.64 684.488 L1116.2 684.488 L1116.76 684.488 L1117.31 684.488 L1117.87 684.488 L1118.43 684.488 L1118.99 684.488 L1119.55 684.488 L1120.11 684.488 L1120.67 684.488 L1121.23 684.488 L1121.79 684.488 L1122.35 684.488 L1122.91 684.488 L1123.47 684.488 L1124.03 684.488 L1124.59 684.488 L1125.14 684.488 L1125.7 684.488 L1126.26 684.488 L1126.82 684.488 L1127.38 684.488 L1127.94 684.488 L1128.5 684.488 L1129.06 684.488 L1129.62 684.488 L1130.18 684.488 L1130.74 684.488 L1131.3 684.488 L1131.86 684.488 L1132.41 684.488 L1132.97 684.488 L1133.53 684.488 L1134.09 684.488 L1134.65 684.488 L1135.21 684.488 L1135.77 684.488 L1136.33 684.488 L1136.89 684.488 L1137.45 684.488 L1138.01 684.488 L1138.57 684.488 L1139.13 684.488 L1139.68 684.488 L1140.24 684.488 L1140.8 684.488 L1141.36 684.488 L1141.92 684.488 L1142.48 684.488 L1143.04 684.488 L1143.6 684.488 L1144.16 684.488 L1144.72 684.488 L1145.28 684.488 L1145.84 684.488 L1146.4 684.488 L1146.96 684.488 L1147.51 684.488 L1148.07 684.488 L1148.63 684.488 L1149.19 684.488 L1149.75 684.488 L1150.31 684.488 L1150.87 684.488 L1151.43 684.488 L1151.99 684.488 L1152.55 684.488 L1153.11 684.488 L1153.67 684.488 L1154.23 684.488 L1154.78 684.488 L1155.34 684.488 L1155.9 684.488 L1156.46 684.488 L1157.02 684.488 L1157.58 684.488 L1158.14 684.488 L1158.7 684.488 L1159.26 684.488 L1159.82 684.488 L1160.38 684.488 L1160.94 684.488 L1161.5 684.488 L1162.05 684.488 L1162.61 684.488 L1163.17 684.488 L1163.73 684.488 L1164.29 684.488 L1164.85 684.488 L1165.41 684.488 L1165.97 684.488 L1166.53 684.488 L1167.09 684.488 L1167.65 684.488 L1168.21 684.488 L1168.77 684.488 L1169.33 684.488 L1169.88 684.488 L1170.44 684.488 L1171 684.488 L1171.56 684.488 L1172.12 684.488 L1172.68 684.488 L1173.24 684.488 L1173.8 684.488 L1174.36 684.488 L1174.92 684.488 L1175.48 684.488 L1176.04 684.488 L1176.6 684.488 L1177.15 684.488 L1177.71 684.488 L1178.27 684.488 L1178.83 684.488 L1179.39 684.488 L1179.95 684.488 L1180.51 684.488 L1181.07 684.488 L1181.63 684.488 L1182.19 684.488 L1182.75 684.488 L1183.31 684.488 L1183.87 684.488 L1184.43 684.488 L1184.98 684.488 L1185.54 684.488 L1186.1 684.488 L1186.66 684.488 L1187.22 684.488 L1187.78 684.488 L1188.34 684.488 L1188.9 684.488 L1189.46 684.488 L1190.02 684.488 L1190.58 684.488 L1191.14 684.488 L1191.7 684.488 L1192.25 684.488 L1192.81 684.488 L1193.37 684.488 L1193.93 684.488 L1194.49 684.488 L1195.05 684.488 L1195.61 684.488 L1196.17 684.488 L1196.73 684.488 L1197.29 684.488 L1197.85 684.488 L1198.41 684.488 L1198.97 684.488 L1199.52 684.488 L1200.08 684.488 L1200.64 684.488 L1201.2 684.488 L1201.76 684.488 L1202.32 684.488 L1202.88 684.488 L1203.44 684.488 L1204 684.488 L1204.56 684.488 L1205.12 684.488 L1205.68 684.488 L1206.24 684.488 L1206.8 684.488 L1207.35 684.488 L1207.91 684.488 L1208.47 684.488 L1209.03 684.488 L1209.59 684.488 L1210.15 684.488 L1210.71 684.488 L1211.27 684.488 L1211.83 684.488 L1212.39 684.488 L1212.95 684.488 L1213.51 684.488 L1214.07 684.488 L1214.62 684.488 L1215.18 684.488 L1215.74 684.488 L1216.3 684.488 L1216.86 684.488 L1217.42 684.488 L1217.98 684.488 L1218.54 684.488 L1219.1 684.488 L1219.66 684.488 L1220.22 684.488 L1220.78 684.488 L1221.34 684.488 L1221.89 684.488 L1222.45 684.488 L1223.01 684.488 L1223.57 684.488 L1224.13 684.488 L1224.69 684.488 L1225.25 684.488 L1225.81 684.488 L1226.37 684.488 L1226.93 684.488 L1227.49 684.488 L1228.05 684.488 L1228.61 684.488 L1229.17 684.488 L1229.72 684.488 L1230.28 684.488 L1230.84 684.488 L1231.4 684.488 L1231.96 684.488 L1232.52 684.488 L1233.08 684.488 L1233.64 684.488 L1234.2 684.488 L1234.76 684.488 L1235.32 684.488 L1235.88 684.488 L1236.44 684.488 L1236.99 684.488 L1237.55 684.488 L1238.11 684.488 L1238.67 684.488 L1239.23 684.488 L1239.79 684.488 L1240.35 684.488 L1240.91 684.488 L1241.47 684.488 L1242.03 684.488 L1242.59 684.488 L1243.15 684.488 L1243.71 684.488 L1244.26 684.488 L1244.82 684.488 L1245.38 684.488 L1245.94 684.488 L1246.5 684.488 L1247.06 684.488 L1247.62 684.488 L1248.18 684.488 L1248.74 684.488 L1249.3 684.488 L1249.86 684.488 L1250.42 684.488 L1250.98 684.488 L1251.54 684.488 L1252.09 684.488 L1252.65 684.488 L1253.21 684.488 L1253.77 684.488 L1254.33 684.488 L1254.89 684.488 L1255.45 684.488 L1256.01 684.488 L1256.57 684.488 L1257.13 684.488 L1257.69 684.488 L1258.25 684.488 L1258.81 684.488 L1259.36 684.488 L1259.92 684.488 L1260.48 684.488 L1261.04 684.488 L1261.6 684.488 L1262.16 684.488 L1262.72 684.488 L1263.28 684.488 L1263.84 684.488 L1264.4 684.488 L1264.96 684.488 L1265.52 684.488 L1266.08 684.488 L1266.63 684.488 L1267.19 684.488 L1267.75 684.488 L1268.31 684.488 L1268.87 684.488 L1269.43 684.488 L1269.99 684.488 L1270.55 684.488 L1271.11 684.488 L1271.67 684.488 L1272.23 684.488 L1272.79 684.488 L1273.35 684.488 L1273.91 684.488 L1274.46 684.488 L1275.02 684.488 L1275.58 684.488 L1276.14 684.488 L1276.7 684.488 L1277.26 684.488 L1277.82 684.488 L1278.38 684.488 L1278.94 684.488 L1279.5 684.488 L1280.06 684.488 L1280.62 684.488 L1281.18 684.488 L1281.73 684.488 L1282.29 684.488 L1282.85 684.488 L1283.41 684.488 L1283.97 684.488 L1284.53 684.488 L1285.09 684.488 L1285.65 684.488 L1286.21 684.488 L1286.77 684.488 L1287.33 684.488 L1287.89 684.488 L1288.45 684.488 L1289 684.488 L1289.56 684.488 L1290.12 684.488 L1290.68 684.488 L1291.24 684.488 L1291.8 684.488 L1292.36 684.488 L1292.92 684.488 L1293.48 684.488 L1294.04 684.488 L1294.6 684.488 L1295.16 684.488 L1295.72 684.488 L1296.28 684.488 L1296.83 684.488 L1297.39 684.488 L1297.95 684.488 L1298.51 684.488 L1299.07 684.488 L1299.63 684.488 L1300.19 684.488 L1300.75 684.488 L1301.31 684.488 L1301.87 684.488 L1302.43 684.488 L1302.99 684.488 L1303.55 684.488 L1304.1 684.488 L1304.66 684.488 L1305.22 684.488 L1305.78 684.488 L1306.34 684.488 L1306.9 684.488 L1307.46 684.488 L1308.02 684.488 L1308.58 684.488 L1309.14 684.488 L1309.7 684.488 L1310.26 684.488 L1310.82 684.488 L1311.38 684.488 L1311.93 684.488 L1312.49 684.488 L1313.05 684.488 L1313.61 684.488 L1314.17 684.488 L1314.73 684.488 L1315.29 684.488 L1315.85 684.488 L1316.41 684.488 L1316.97 684.488 L1317.53 684.488 L1318.09 684.488 L1318.65 684.488 L1319.2 684.488 L1319.76 684.488 L1320.32 684.488 L1320.88 684.488 L1321.44 684.488 L1322 684.488 L1322.56 684.488 L1323.12 684.488 L1323.68 684.488 L1324.24 684.488 L1324.8 684.488 L1325.36 684.488 L1325.92 684.488 L1326.47 684.488 L1327.03 684.488 L1327.59 684.488 L1328.15 684.488 L1328.71 684.488 L1329.27 684.488 L1329.83 684.488 L1330.39 684.488 L1330.95 684.488 L1331.51 684.488 L1332.07 684.488 L1332.63 684.488 L1333.19 684.488 L1333.75 684.488 L1334.3 684.488 L1334.86 684.488 L1335.42 684.488 L1335.98 684.488 L1336.54 684.488 L1337.1 684.488 L1337.66 684.488 L1338.22 684.488 L1338.78 684.488 L1339.34 684.488 L1339.9 684.488 L1340.46 684.488 L1341.02 684.488 L1341.57 684.488 L1342.13 684.488 L1342.69 684.488 L1343.25 684.488 L1343.81 684.488 L1344.37 684.488 L1344.93 684.488 L1345.49 684.488 L1346.05 684.488 L1346.61 684.488 L1347.17 684.488 L1347.73 684.488 L1348.29 684.488 L1348.84 684.488 L1349.4 684.488 L1349.96 684.488 L1350.52 684.488 L1351.08 684.488 L1351.64 684.488 L1352.2 684.488 L1352.76 684.488 L1353.32 684.488 L1353.88 684.488 L1354.44 684.488 L1355 684.488 L1355.56 684.488 L1356.12 684.488 L1356.67 684.488 L1357.23 684.488 L1357.79 684.488 L1358.35 684.488 L1358.91 684.488 L1359.47 684.488 L1360.03 684.488 L1360.59 684.488 L1361.15 684.488 L1361.71 684.488 L1362.27 684.488 L1362.83 684.488 L1363.39 684.488 L1363.94 684.488 L1364.5 684.488 L1365.06 684.488 L1365.62 684.488 L1366.18 684.488 L1366.74 684.488 L1367.3 684.488 L1367.86 684.488 L1368.42 684.488 L1368.98 684.488 L1369.54 684.488 L1370.1 684.488 L1370.66 684.488 L1371.21 684.488 L1371.77 684.488 L1372.33 684.488 L1372.89 684.488 L1373.45 684.488 L1374.01 684.488 L1374.57 684.488 L1375.13 684.488 L1375.69 684.488 L1376.25 684.488 L1376.81 684.488 L1377.37 684.488 L1377.93 684.488 L1378.49 684.488 L1379.04 684.488 L1379.6 684.488 L1380.16 684.488 L1380.72 684.488 L1381.28 684.488 L1381.84 684.488 L1382.4 684.488 L1382.96 684.488 L1383.52 684.488 L1384.08 684.488 L1384.64 684.488 L1385.2 684.488 L1385.76 684.488 L1386.31 684.488 L1386.87 684.488 L1387.43 684.488 L1387.99 684.488 L1388.55 684.488 L1389.11 684.488 L1389.67 684.488 L1390.23 684.488 L1390.79 684.488 L1391.35 684.488 L1391.91 684.488 L1392.47 684.488 L1393.03 684.488 L1393.58 684.488 L1394.14 684.488 L1394.7 684.488 L1395.26 684.488 L1395.82 684.488 L1396.38 684.488 L1396.94 684.488 L1397.5 684.488 L1398.06 684.488 L1398.62 684.488 L1399.18 684.488 L1399.74 684.488 L1400.3 684.488 L1400.86 684.488 L1401.41 684.488 L1401.97 684.488 L1402.53 684.488 L1403.09 684.488 L1403.65 684.488 L1404.21 684.488 L1404.77 684.488 L1405.33 684.488 L1405.89 684.488 L1406.45 684.488 L1407.01 684.488 L1407.57 684.488 L1408.13 684.488 L1408.68 684.488 L1409.24 684.488 L1409.8 684.488 L1410.36 684.488 L1410.92 684.488 L1411.48 684.488 L1412.04 684.488 L1412.6 684.488 L1413.16 684.488 L1413.72 684.488 L1414.28 684.488 L1414.84 684.488 L1415.4 684.488 L1415.95 684.488 L1416.51 684.488 L1417.07 684.488 L1417.63 684.488 L1418.19 684.488 L1418.75 684.488 L1419.31 684.488 L1419.87 684.488 L1420.43 684.488 L1420.99 684.488 L1421.55 684.488 L1422.11 684.488 L1422.67 684.488 L1423.23 684.488 L1423.78 684.488 L1424.34 684.488 L1424.9 684.488 L1425.46 684.488 L1426.02 684.488 L1426.58 684.488 L1427.14 684.488 L1427.7 684.488 L1428.26 684.488 L1428.82 684.488 L1429.38 684.488 L1429.94 684.488 L1430.5 684.488 L1431.05 684.488 L1431.61 684.488 L1432.17 684.488 L1432.73 684.488 L1433.29 684.488 L1433.85 684.488 L1434.41 684.488 L1434.97 684.488 L1435.53 684.488 L1436.09 684.488 L1436.65 684.488 L1437.21 684.488 L1437.77 684.488 L1438.33 684.488 L1438.88 684.488 L1439.44 684.488 L1440 684.488 L1440.56 684.488 L1441.12 684.488 L1441.68 684.488 L1442.24 684.488 L1442.8 684.488 L1443.36 684.488 L1443.92 684.488 L1444.48 684.488 L1445.04 684.488 L1445.6 684.488 L1446.15 684.488 L1446.71 684.488 L1447.27 684.488 L1447.83 684.488 L1448.39 684.488 L1448.95 684.488 L1449.51 684.488 L1450.07 684.488 L1450.63 684.488 L1451.19 684.488 L1451.75 684.488 L1452.31 684.488 L1452.87 684.488 L1453.42 684.488 L1453.98 684.488 L1454.54 684.488 L1455.1 684.488 L1455.66 684.488 L1456.22 684.488 L1456.78 684.488 L1457.34 684.488 L1457.9 684.488 L1458.46 684.488 L1459.02 684.488 L1459.58 684.488 L1460.14 684.488 L1460.7 684.488 L1461.25 684.488 L1461.81 684.488 L1462.37 684.488 L1462.93 684.488 L1463.49 684.488 L1464.05 684.488 L1464.61 684.488 L1465.17 684.488 L1465.73 684.488 L1466.29 684.488 L1466.85 684.488 L1467.41 684.488 L1467.97 684.488 L1468.52 684.488 L1469.08 684.488 L1469.64 684.488 L1470.2 684.488 L1470.76 684.488 L1471.32 684.488 L1471.88 684.488 L1472.44 684.488 L1473 684.488 L1473.56 684.488 L1474.12 684.488 L1474.68 684.488 L1475.24 684.488 L1475.79 684.488 L1476.35 684.488 L1476.91 684.488 L1477.47 684.488 L1478.03 684.488 L1478.59 684.488 L1479.15 684.488 L1479.71 684.488 L1480.27 684.488 L1480.83 684.488 L1481.39 684.488 L1481.95 684.488 L1482.51 684.488 L1483.07 684.488 L1483.62 684.488 L1484.18 684.488 L1484.74 684.488 L1485.3 684.488 L1485.86 684.488 L1486.42 684.488 L1486.98 684.488 L1487.54 684.488 L1488.1 684.488 L1488.66 684.488 L1489.22 684.488 L1489.78 684.488 L1490.34 684.488 L1490.89 684.488 L1491.45 684.488 L1492.01 684.488 L1492.57 684.488 L1493.13 684.488 L1493.69 684.488 L1494.25 684.488 L1494.81 684.488 L1495.37 684.488 L1495.93 684.488 L1496.49 684.488 L1497.05 684.488 L1497.61 684.488 L1498.16 684.488 L1498.72 684.488 L1499.28 684.488 L1499.84 684.488 L1500.4 684.488 L1500.96 684.488 L1501.52 684.488 L1502.08 684.488 L1502.64 684.488 L1503.2 684.488 L1503.76 684.488 L1504.32 684.488 L1504.88 684.488 L1505.44 684.488 L1505.99 684.488 L1506.55 684.488 L1507.11 684.488 L1507.67 684.488 L1508.23 684.488 L1508.79 684.488 L1509.35 684.488 L1509.91 684.488 L1510.47 684.488 L1511.03 684.488 L1511.59 684.488 L1512.15 684.488 L1512.71 684.488 L1513.26 684.488 L1513.82 684.488 L1514.38 684.488 L1514.94 684.488 L1515.5 684.488 L1516.06 684.488 L1516.62 684.488 L1517.18 684.488 L1517.74 684.488 L1518.3 684.488 L1518.86 684.488 L1519.42 684.488 L1519.98 684.488 L1520.53 684.488 L1521.09 684.488 L1521.65 684.488 L1522.21 684.488 L1522.77 684.488 L1523.33 684.488 L1523.89 684.488 L1524.45 684.488 L1525.01 684.488 L1525.57 684.488 L1526.13 684.488 L1526.69 684.488 L1527.25 684.488 L1527.81 684.488 L1528.36 684.488 L1528.92 684.488 L1529.48 684.488 L1530.04 684.488 L1530.6 684.488 L1531.16 684.488 L1531.72 684.488 L1532.28 684.488 L1532.84 684.488 L1533.4 684.488 L1533.96 684.488 L1534.52 684.488 L1535.08 684.488 L1535.63 684.488 L1536.19 684.488 L1536.75 684.488 L1537.31 684.488 L1537.87 684.488 L1538.43 684.488 L1538.99 684.488 L1539.55 684.488 L1540.11 684.488 L1540.67 684.488 L1541.23 684.488 L1541.79 684.488 L1542.35 684.488 L1542.9 684.488 L1543.46 684.488 L1544.02 684.488 L1544.58 684.488 L1545.14 684.488 L1545.7 684.488 L1546.26 684.488 L1546.82 684.488 L1547.38 684.488 L1547.94 684.488 L1548.5 684.488 L1549.06 684.488 L1549.62 684.488 L1550.18 684.488 L1550.73 684.488 L1551.29 684.488 L1551.85 684.488 L1552.41 684.488 L1552.97 684.488 L1553.53 684.488 L1554.09 684.488 L1554.65 684.488 L1555.21 684.488 L1555.77 684.488 L1556.33 684.488 L1556.89 684.488 L1557.45 684.488 L1558 684.488 L1558.56 684.488 L1559.12 684.488 L1559.68 684.488 L1560.24 684.488 L1560.8 684.488 L1561.36 684.488 L1561.92 684.488 L1562.48 684.488 L1563.04 684.488 L1563.6 684.488 L1564.16 684.488 L1564.72 684.488 L1565.28 684.488 L1565.83 684.488 L1566.39 684.488 L1566.95 684.488 L1567.51 684.488 L1568.07 684.488 L1568.63 684.488 L1569.19 684.488 L1569.75 684.488 L1570.31 684.488 L1570.87 684.488 L1571.43 684.488 L1571.99 684.488 L1572.55 684.488 L1573.1 684.488 L1573.66 684.488 L1574.22 684.488 L1574.78 684.488 L1575.34 684.488 L1575.9 684.488 L1576.46 684.488 L1577.02 684.488 L1577.58 684.488 L1578.14 684.488 L1578.7 684.488 L1579.26 684.488 L1579.82 684.488 L1580.37 684.488 L1580.93 684.488 L1581.49 684.488 L1582.05 684.488 L1582.61 684.488 L1583.17 684.488 L1583.73 684.488 L1584.29 684.488 L1584.85 684.488 L1585.41 684.488 L1585.97 684.488 L1586.53 684.488 L1587.09 684.488 L1587.65 684.488 L1588.2 684.488 L1588.76 684.488 L1589.32 684.488 L1589.88 684.488 L1590.44 684.488 L1591 684.488 L1591.56 684.488 L1592.12 684.488 L1592.68 684.488 L1593.24 684.488 L1593.8 684.488 L1594.36 684.488 L1594.92 684.488 L1595.47 684.488 L1596.03 684.488 L1596.59 684.488 L1597.15 684.488 L1597.71 684.488 L1598.27 684.488 L1598.83 684.488 L1599.39 684.488 L1599.95 684.488 L1600.51 684.488 L1601.07 684.488 L1601.63 684.488 L1602.19 684.488 L1602.74 684.488 L1603.3 684.488 L1603.86 684.488 L1604.42 684.488 L1604.98 684.488 L1605.54 684.488 L1606.1 684.488 L1606.66 684.488 L1607.22 684.488 L1607.78 684.488 L1608.34 684.488 L1608.9 684.488 L1609.46 684.488 L1610.02 684.488 L1610.57 684.488 L1611.13 684.488 L1611.69 684.488 L1612.25 684.488 L1612.81 684.488 L1613.37 684.488 L1613.93 684.488 L1614.49 684.488 L1615.05 684.488 L1615.61 684.488 L1616.17 684.488 L1616.73 684.488 L1617.29 684.488 L1617.84 684.488 L1618.4 684.488 L1618.96 684.488 L1619.52 684.488 L1620.08 684.488 L1620.64 684.488 L1621.2 684.488 L1621.76 684.488 L1622.32 684.488 L1622.88 684.488 L1623.44 684.488 L1624 684.488 L1624.56 684.488 L1625.11 684.488 L1625.67 684.488 L1626.23 684.488 L1626.79 684.488 L1627.35 684.488 L1627.91 684.488 L1628.47 684.488 L1629.03 684.488 L1629.59 684.488 L1630.15 684.488 L1630.71 684.488 L1631.27 684.488 L1631.83 684.488 L1632.39 684.488 L1632.94 684.488 L1633.5 684.488 L1634.06 684.488 L1634.62 684.488 L1635.18 684.488 L1635.74 684.488 L1636.3 684.488 L1636.86 684.488 L1637.42 684.488 L1637.98 684.488 L1638.54 684.488 L1639.1 684.488 L1639.66 684.488 L1640.21 684.488 L1640.77 684.488 L1641.33 684.488 L1641.89 684.488 L1642.45 684.488 L1643.01 684.488 L1643.57 684.488 L1644.13 684.488 L1644.69 684.488 L1645.25 684.488 L1645.81 684.488 L1646.37 684.488 L1646.93 684.488 L1647.48 684.488 L1648.04 684.488 L1648.6 684.488 L1649.16 684.488 L1649.72 684.488 L1650.28 684.488 L1650.84 684.488 L1651.4 684.488 L1651.96 684.488 L1652.52 684.488 L1653.08 684.488 L1653.64 684.488 L1654.2 684.488 L1654.76 684.488 L1655.31 684.488 L1655.87 684.488 L1656.43 684.488 L1656.99 684.488 L1657.55 684.488 L1658.11 684.488 L1658.67 684.488 L1659.23 684.488 L1659.79 684.488 L1660.35 684.488 L1660.91 684.488 L1661.47 684.488 L1662.03 684.488 L1662.58 684.488 L1663.14 684.488 L1663.7 684.488 L1664.26 684.488 L1664.82 684.488 L1665.38 684.488 L1665.94 684.488 L1666.5 684.488 L1667.06 684.488 L1667.62 684.488 L1668.18 684.488 L1668.74 684.488 L1669.3 684.488 L1669.85 684.488 L1670.41 684.488 L1670.97 684.488 L1671.53 684.488 L1672.09 684.488 L1672.65 684.488 L1673.21 684.488 L1673.77 684.488 L1674.33 684.488 L1674.89 684.488 L1675.45 684.488 L1676.01 684.488 L1676.57 684.488 L1677.13 684.488 L1677.68 684.488 L1678.24 684.488 L1678.8 684.488 L1679.36 684.488 L1679.92 684.488 L1680.48 684.488 L1681.04 684.488 L1681.6 684.488 L1682.16 684.488 L1682.72 684.488 L1683.28 684.488 L1683.84 684.488 L1684.4 684.488 L1684.95 684.488 L1685.51 684.488 L1686.07 684.488 L1686.63 684.488 L1687.19 684.488 L1687.75 684.488 L1688.31 684.488 L1688.87 684.488 L1689.43 684.488 L1689.99 684.488 L1690.55 684.488 L1691.11 684.488 L1691.67 684.488 L1692.23 684.488 L1692.78 684.488 L1693.34 684.488 L1693.9 684.488 L1694.46 684.488 L1695.02 684.488 L1695.58 684.488 L1696.14 684.488 L1696.7 684.488 L1697.26 684.488 L1697.82 684.488 L1698.38 684.488 L1698.94 684.488 L1699.5 684.488 L1700.05 684.488 L1700.61 684.488 L1701.17 684.488 L1701.73 684.488 L1702.29 684.488 L1702.85 684.488 L1703.41 684.488 L1703.97 684.488 L1704.53 684.488 L1705.09 684.488 L1705.65 684.488 L1706.21 684.488 L1706.77 684.488 L1707.32 684.488 L1707.88 684.488 L1708.44 684.488 L1709 684.488 L1709.56 684.488 L1710.12 684.488 L1710.68 684.488 L1711.24 684.488 L1711.8 684.488 L1712.36 684.488 L1712.92 684.488 L1713.48 684.488 L1714.04 684.488 L1714.6 684.488 L1715.15 684.488 L1715.71 684.488 L1716.27 684.488 L1716.83 684.488 L1717.39 684.488 L1717.95 684.488 L1718.51 684.488 L1719.07 684.488 L1719.63 684.488 L1720.19 684.488 L1720.75 684.488 L1721.31 684.488 L1721.87 684.488 L1722.42 684.488 L1722.98 684.488 L1723.54 684.488 L1724.1 684.488 L1724.66 684.488 L1725.22 684.488 L1725.78 684.488 L1726.34 684.488 L1726.9 684.488 L1727.46 684.488 L1728.02 684.488 L1728.58 684.488 L1729.14 684.488 L1729.69 684.488 L1730.25 684.488 L1730.81 684.488 L1731.37 684.488 L1731.93 684.488 L1732.49 684.488 L1733.05 684.488 L1733.61 684.488 L1734.17 684.488 L1734.73 684.488 L1735.29 684.488 L1735.85 684.488 L1736.41 684.488 L1736.97 684.488 L1737.52 684.488 L1738.08 684.488 L1738.64 684.488 L1739.2 684.488 L1739.76 684.488 L1740.32 684.488 L1740.88 684.488 L1741.44 684.488 L1742 684.488 L1742.56 684.488 L1743.12 684.488 L1743.68 684.488 L1744.24 684.488 L1744.79 684.488 L1745.35 684.488 L1745.91 684.488 L1746.47 684.488 L1747.03 684.488 L1747.59 684.488 L1748.15 684.488 L1748.71 684.488 L1749.27 684.488 L1749.83 684.488 L1750.39 684.488 L1750.95 684.488 L1751.51 684.488 L1752.06 684.488 L1752.62 684.488 L1753.18 684.488 L1753.74 684.488 L1754.3 684.488 L1754.86 684.488 L1755.42 684.488 L1755.98 684.488 L1756.54 684.488 L1757.1 684.488 L1757.66 684.488 L1758.22 684.488 L1758.78 684.488 L1759.34 684.488 L1759.89 684.488 L1760.45 684.488 L1761.01 684.488 L1761.57 684.488 L1762.13 684.488 L1762.69 684.488 L1763.25 684.488 L1763.81 684.488 L1764.37 684.488 L1764.93 684.488 L1765.49 684.488 L1766.05 684.488 L1766.61 684.488 L1767.16 684.488 L1767.72 684.488 L1768.28 684.488 L1768.84 684.488 L1769.4 684.488 L1769.96 684.488 L1770.52 684.488 L1771.08 684.488 L1771.64 684.488 L1772.2 684.488 L1772.76 684.488 L1773.32 684.488 L1773.88 684.488 L1774.43 684.488 L1774.99 684.488 L1775.55 684.488 L1776.11 684.488 L1776.67 684.488 L1777.23 684.488 L1777.79 684.488 L1778.35 684.488 L1778.91 684.488 L1779.47 684.488 L1780.03 684.488 L1780.59 684.488 L1781.15 684.488 L1781.71 684.488 L1782.26 684.488 L1782.82 684.488 L1783.38 684.488 L1783.94 684.488 L1784.5 684.488 L1785.06 684.488 L1785.62 684.488 L1786.18 684.488 L1786.74 684.488 L1787.3 684.488 L1787.86 684.488 L1788.42 684.488 L1788.98 684.488 L1789.53 684.488 L1790.09 684.488 L1790.65 684.488 L1791.21 684.488 L1791.77 684.488 L1792.33 684.488 L1792.89 684.488 L1793.45 684.488 L1794.01 684.488 L1794.57 684.488 L1795.13 684.488 L1795.69 684.488 L1796.25 684.488 L1796.8 684.488 L1797.36 684.488 L1797.92 684.488 L1798.48 684.488 L1799.04 684.488 L1799.6 684.488 L1800.16 684.488 L1800.72 684.488 L1801.28 684.488 L1801.84 684.488 L1802.4 684.488 L1802.96 684.488 L1803.52 684.488 L1804.08 684.488 L1804.63 684.488 L1805.19 684.488 L1805.75 684.488 L1806.31 684.488 L1806.87 684.488 L1807.43 684.488 L1807.99 684.488 L1808.55 684.488 L1809.11 684.488 L1809.67 684.488 L1810.23 684.488 L1810.79 684.488 L1811.35 684.488 L1811.9 684.488 L1812.46 684.488 L1813.02 684.488 L1813.58 684.488 L1814.14 684.488 L1814.7 684.488 L1815.26 684.488 L1815.82 684.488 L1816.38 684.488 L1816.94 684.488 L1817.5 684.488 L1818.06 684.488 L1818.62 684.488 L1819.18 684.488 L1819.73 684.488 L1820.29 684.488 L1820.85 684.488 L1821.41 684.488 L1821.97 684.488 L1822.53 684.488 L1823.09 684.488 L1823.65 684.488 L1824.21 684.488 L1824.77 684.488 L1825.33 684.488 L1825.89 684.488 L1826.45 684.488 L1827 684.488 L1827.56 684.488 L1828.12 684.488 L1828.68 684.488 L1829.24 684.488 L1829.8 684.488 L1830.36 684.488 L1830.92 684.488 L1831.48 684.488 L1832.04 684.488 L1832.6 684.488 L1833.16 684.488 L1833.72 684.488 L1834.27 684.488 L1834.83 684.488 L1835.39 684.488 L1835.95 684.488 L1836.51 684.488 L1837.07 684.488 L1837.63 684.488 L1838.19 684.488 L1838.19 682.481 L1837.63 682.481 L1837.07 682.481 L1836.51 682.481 L1835.95 682.481 L1835.39 682.481 L1834.83 682.481 L1834.27 682.481 L1833.72 682.481 L1833.16 682.481 L1832.6 682.481 L1832.04 682.481 L1831.48 682.481 L1830.92 682.481 L1830.36 682.481 L1829.8 682.481 L1829.24 682.481 L1828.68 682.481 L1828.12 682.481 L1827.56 682.481 L1827 682.481 L1826.45 682.481 L1825.89 682.481 L1825.33 682.481 L1824.77 682.481 L1824.21 682.481 L1823.65 682.481 L1823.09 682.481 L1822.53 682.481 L1821.97 682.481 L1821.41 682.481 L1820.85 682.481 L1820.29 682.481 L1819.73 682.481 L1819.18 682.481 L1818.62 682.481 L1818.06 682.481 L1817.5 682.481 L1816.94 682.481 L1816.38 682.481 L1815.82 682.481 L1815.26 682.481 L1814.7 682.481 L1814.14 682.481 L1813.58 682.481 L1813.02 682.481 L1812.46 682.481 L1811.9 682.481 L1811.35 682.481 L1810.79 682.481 L1810.23 682.481 L1809.67 682.481 L1809.11 682.481 L1808.55 682.481 L1807.99 682.481 L1807.43 682.481 L1806.87 682.481 L1806.31 682.481 L1805.75 682.481 L1805.19 682.481 L1804.63 682.481 L1804.08 682.481 L1803.52 682.481 L1802.96 682.481 L1802.4 682.481 L1801.84 682.481 L1801.28 682.481 L1800.72 682.481 L1800.16 682.481 L1799.6 682.481 L1799.04 682.481 L1798.48 682.481 L1797.92 682.481 L1797.36 682.481 L1796.8 682.481 L1796.25 682.481 L1795.69 682.481 L1795.13 682.481 L1794.57 682.481 L1794.01 682.481 L1793.45 682.481 L1792.89 682.481 L1792.33 682.481 L1791.77 682.481 L1791.21 682.481 L1790.65 682.481 L1790.09 682.481 L1789.53 682.481 L1788.98 682.481 L1788.42 682.481 L1787.86 682.481 L1787.3 682.481 L1786.74 682.481 L1786.18 682.481 L1785.62 682.481 L1785.06 682.481 L1784.5 682.481 L1783.94 682.481 L1783.38 682.481 L1782.82 682.481 L1782.26 682.481 L1781.71 682.481 L1781.15 682.481 L1780.59 682.481 L1780.03 682.481 L1779.47 682.481 L1778.91 682.481 L1778.35 682.481 L1777.79 682.481 L1777.23 682.481 L1776.67 682.481 L1776.11 682.481 L1775.55 682.481 L1774.99 682.481 L1774.43 682.481 L1773.88 682.481 L1773.32 682.481 L1772.76 682.481 L1772.2 682.481 L1771.64 682.481 L1771.08 682.481 L1770.52 682.481 L1769.96 682.481 L1769.4 682.481 L1768.84 682.481 L1768.28 682.481 L1767.72 682.481 L1767.16 682.481 L1766.61 682.481 L1766.05 682.481 L1765.49 682.481 L1764.93 682.481 L1764.37 682.481 L1763.81 682.481 L1763.25 682.481 L1762.69 682.481 L1762.13 682.481 L1761.57 682.481 L1761.01 682.481 L1760.45 682.481 L1759.89 682.481 L1759.34 682.481 L1758.78 682.481 L1758.22 682.481 L1757.66 682.481 L1757.1 682.481 L1756.54 682.481 L1755.98 682.481 L1755.42 682.481 L1754.86 682.481 L1754.3 682.481 L1753.74 682.481 L1753.18 682.481 L1752.62 682.481 L1752.06 682.481 L1751.51 682.481 L1750.95 682.481 L1750.39 682.481 L1749.83 682.481 L1749.27 682.481 L1748.71 682.481 L1748.15 682.481 L1747.59 682.481 L1747.03 682.481 L1746.47 682.481 L1745.91 682.481 L1745.35 682.481 L1744.79 682.481 L1744.24 682.481 L1743.68 682.481 L1743.12 682.481 L1742.56 682.481 L1742 682.481 L1741.44 682.481 L1740.88 682.481 L1740.32 682.481 L1739.76 682.481 L1739.2 682.481 L1738.64 682.481 L1738.08 682.481 L1737.52 682.481 L1736.97 682.481 L1736.41 682.481 L1735.85 682.481 L1735.29 682.481 L1734.73 682.481 L1734.17 682.481 L1733.61 682.481 L1733.05 682.481 L1732.49 682.481 L1731.93 682.481 L1731.37 682.481 L1730.81 682.481 L1730.25 682.481 L1729.69 682.481 L1729.14 682.481 L1728.58 682.481 L1728.02 682.481 L1727.46 682.481 L1726.9 682.481 L1726.34 682.481 L1725.78 682.481 L1725.22 682.481 L1724.66 682.481 L1724.1 682.481 L1723.54 682.481 L1722.98 682.481 L1722.42 682.481 L1721.87 682.481 L1721.31 682.481 L1720.75 682.481 L1720.19 682.481 L1719.63 682.481 L1719.07 682.481 L1718.51 682.481 L1717.95 682.481 L1717.39 682.481 L1716.83 682.481 L1716.27 682.481 L1715.71 682.481 L1715.15 682.481 L1714.6 682.481 L1714.04 682.481 L1713.48 682.481 L1712.92 682.481 L1712.36 682.481 L1711.8 682.481 L1711.24 682.481 L1710.68 682.481 L1710.12 682.481 L1709.56 682.481 L1709 682.481 L1708.44 682.481 L1707.88 682.481 L1707.32 682.481 L1706.77 682.481 L1706.21 682.481 L1705.65 682.481 L1705.09 682.481 L1704.53 682.481 L1703.97 682.481 L1703.41 682.481 L1702.85 682.481 L1702.29 682.481 L1701.73 682.481 L1701.17 682.481 L1700.61 682.481 L1700.05 682.481 L1699.5 682.481 L1698.94 682.481 L1698.38 682.481 L1697.82 682.481 L1697.26 682.481 L1696.7 682.481 L1696.14 682.481 L1695.58 682.481 L1695.02 682.481 L1694.46 682.481 L1693.9 682.481 L1693.34 682.481 L1692.78 682.481 L1692.23 682.481 L1691.67 682.481 L1691.11 682.481 L1690.55 682.481 L1689.99 682.481 L1689.43 682.481 L1688.87 682.481 L1688.31 682.481 L1687.75 682.481 L1687.19 682.481 L1686.63 682.481 L1686.07 682.481 L1685.51 682.481 L1684.95 682.481 L1684.4 682.481 L1683.84 682.481 L1683.28 682.481 L1682.72 682.481 L1682.16 682.481 L1681.6 682.481 L1681.04 682.481 L1680.48 682.481 L1679.92 682.481 L1679.36 682.481 L1678.8 682.481 L1678.24 682.481 L1677.68 682.481 L1677.13 682.481 L1676.57 682.481 L1676.01 682.481 L1675.45 682.481 L1674.89 682.481 L1674.33 682.481 L1673.77 682.481 L1673.21 682.481 L1672.65 682.481 L1672.09 682.481 L1671.53 682.481 L1670.97 682.481 L1670.41 682.481 L1669.85 682.481 L1669.3 682.481 L1668.74 682.481 L1668.18 682.481 L1667.62 682.481 L1667.06 682.481 L1666.5 682.481 L1665.94 682.481 L1665.38 682.481 L1664.82 682.481 L1664.26 682.481 L1663.7 682.481 L1663.14 682.481 L1662.58 682.481 L1662.03 682.481 L1661.47 682.481 L1660.91 682.481 L1660.35 682.481 L1659.79 682.481 L1659.23 682.481 L1658.67 682.481 L1658.11 682.481 L1657.55 682.481 L1656.99 682.481 L1656.43 682.481 L1655.87 682.481 L1655.31 682.481 L1654.76 682.481 L1654.2 682.481 L1653.64 682.481 L1653.08 682.481 L1652.52 682.481 L1651.96 682.481 L1651.4 682.481 L1650.84 682.481 L1650.28 682.481 L1649.72 682.481 L1649.16 682.481 L1648.6 682.481 L1648.04 682.481 L1647.48 682.481 L1646.93 682.481 L1646.37 682.481 L1645.81 682.481 L1645.25 682.481 L1644.69 682.481 L1644.13 682.481 L1643.57 682.481 L1643.01 682.481 L1642.45 682.481 L1641.89 682.481 L1641.33 682.481 L1640.77 682.481 L1640.21 682.481 L1639.66 682.481 L1639.1 682.481 L1638.54 682.481 L1637.98 682.481 L1637.42 682.481 L1636.86 682.481 L1636.3 682.481 L1635.74 682.481 L1635.18 682.481 L1634.62 682.481 L1634.06 682.481 L1633.5 682.481 L1632.94 682.481 L1632.39 682.481 L1631.83 682.481 L1631.27 682.481 L1630.71 682.481 L1630.15 682.481 L1629.59 682.481 L1629.03 682.481 L1628.47 682.481 L1627.91 682.481 L1627.35 682.481 L1626.79 682.481 L1626.23 682.481 L1625.67 682.481 L1625.11 682.481 L1624.56 682.481 L1624 682.481 L1623.44 682.481 L1622.88 682.481 L1622.32 682.481 L1621.76 682.481 L1621.2 682.481 L1620.64 682.481 L1620.08 682.481 L1619.52 682.481 L1618.96 682.481 L1618.4 682.481 L1617.84 682.481 L1617.29 682.481 L1616.73 682.481 L1616.17 682.481 L1615.61 682.481 L1615.05 682.481 L1614.49 682.481 L1613.93 682.481 L1613.37 682.481 L1612.81 682.481 L1612.25 682.481 L1611.69 682.481 L1611.13 682.481 L1610.57 682.481 L1610.02 682.481 L1609.46 682.481 L1608.9 682.481 L1608.34 682.481 L1607.78 682.481 L1607.22 682.481 L1606.66 682.481 L1606.1 682.481 L1605.54 682.481 L1604.98 682.481 L1604.42 682.481 L1603.86 682.481 L1603.3 682.481 L1602.74 682.481 L1602.19 682.481 L1601.63 682.481 L1601.07 682.481 L1600.51 682.481 L1599.95 682.481 L1599.39 682.481 L1598.83 682.481 L1598.27 682.481 L1597.71 682.481 L1597.15 682.481 L1596.59 682.481 L1596.03 682.481 L1595.47 682.481 L1594.92 682.481 L1594.36 682.481 L1593.8 682.481 L1593.24 682.481 L1592.68 682.481 L1592.12 682.481 L1591.56 682.481 L1591 682.481 L1590.44 682.481 L1589.88 682.481 L1589.32 682.481 L1588.76 682.481 L1588.2 682.481 L1587.65 682.481 L1587.09 682.481 L1586.53 682.481 L1585.97 682.481 L1585.41 682.481 L1584.85 682.481 L1584.29 682.481 L1583.73 682.481 L1583.17 682.481 L1582.61 682.481 L1582.05 682.481 L1581.49 682.481 L1580.93 682.481 L1580.37 682.481 L1579.82 682.481 L1579.26 682.481 L1578.7 682.481 L1578.14 682.481 L1577.58 682.481 L1577.02 682.481 L1576.46 682.481 L1575.9 682.481 L1575.34 682.481 L1574.78 682.481 L1574.22 682.481 L1573.66 682.481 L1573.1 682.481 L1572.55 682.481 L1571.99 682.481 L1571.43 682.481 L1570.87 682.481 L1570.31 682.481 L1569.75 682.481 L1569.19 682.481 L1568.63 682.481 L1568.07 682.481 L1567.51 682.481 L1566.95 682.481 L1566.39 682.481 L1565.83 682.481 L1565.28 682.481 L1564.72 682.481 L1564.16 682.481 L1563.6 682.481 L1563.04 682.481 L1562.48 682.481 L1561.92 682.481 L1561.36 682.481 L1560.8 682.481 L1560.24 682.481 L1559.68 682.481 L1559.12 682.481 L1558.56 682.481 L1558 682.481 L1557.45 682.481 L1556.89 682.481 L1556.33 682.481 L1555.77 682.481 L1555.21 682.481 L1554.65 682.481 L1554.09 682.481 L1553.53 682.481 L1552.97 682.481 L1552.41 682.481 L1551.85 682.481 L1551.29 682.481 L1550.73 682.481 L1550.18 682.481 L1549.62 682.481 L1549.06 682.481 L1548.5 682.481 L1547.94 682.481 L1547.38 682.481 L1546.82 682.481 L1546.26 682.481 L1545.7 682.481 L1545.14 682.481 L1544.58 682.481 L1544.02 682.481 L1543.46 682.481 L1542.9 682.481 L1542.35 682.481 L1541.79 682.481 L1541.23 682.481 L1540.67 682.481 L1540.11 682.481 L1539.55 682.481 L1538.99 682.481 L1538.43 682.481 L1537.87 682.481 L1537.31 682.481 L1536.75 682.481 L1536.19 682.481 L1535.63 682.481 L1535.08 682.481 L1534.52 682.481 L1533.96 682.481 L1533.4 682.481 L1532.84 682.481 L1532.28 682.481 L1531.72 682.481 L1531.16 682.481 L1530.6 682.481 L1530.04 682.481 L1529.48 682.481 L1528.92 682.481 L1528.36 682.481 L1527.81 682.481 L1527.25 682.481 L1526.69 682.481 L1526.13 682.481 L1525.57 682.481 L1525.01 682.481 L1524.45 682.481 L1523.89 682.481 L1523.33 682.481 L1522.77 682.481 L1522.21 682.481 L1521.65 682.481 L1521.09 682.481 L1520.53 682.481 L1519.98 682.481 L1519.42 682.481 L1518.86 682.481 L1518.3 682.481 L1517.74 682.481 L1517.18 682.481 L1516.62 682.481 L1516.06 682.481 L1515.5 682.481 L1514.94 682.481 L1514.38 682.481 L1513.82 682.481 L1513.26 682.481 L1512.71 682.481 L1512.15 682.481 L1511.59 682.481 L1511.03 682.481 L1510.47 682.481 L1509.91 682.481 L1509.35 682.481 L1508.79 682.481 L1508.23 682.481 L1507.67 682.481 L1507.11 682.481 L1506.55 682.481 L1505.99 682.481 L1505.44 682.481 L1504.88 682.481 L1504.32 682.481 L1503.76 682.481 L1503.2 682.481 L1502.64 682.481 L1502.08 682.481 L1501.52 682.481 L1500.96 682.481 L1500.4 682.481 L1499.84 682.481 L1499.28 682.481 L1498.72 682.481 L1498.16 682.481 L1497.61 682.481 L1497.05 682.481 L1496.49 682.481 L1495.93 682.481 L1495.37 682.481 L1494.81 682.481 L1494.25 682.481 L1493.69 682.481 L1493.13 682.481 L1492.57 682.481 L1492.01 682.481 L1491.45 682.481 L1490.89 682.481 L1490.34 682.481 L1489.78 682.481 L1489.22 682.481 L1488.66 682.481 L1488.1 682.481 L1487.54 682.481 L1486.98 682.481 L1486.42 682.481 L1485.86 682.481 L1485.3 682.481 L1484.74 682.481 L1484.18 682.481 L1483.62 682.481 L1483.07 682.481 L1482.51 682.481 L1481.95 682.481 L1481.39 682.481 L1480.83 682.481 L1480.27 682.481 L1479.71 682.481 L1479.15 682.481 L1478.59 682.481 L1478.03 682.481 L1477.47 682.481 L1476.91 682.481 L1476.35 682.481 L1475.79 682.481 L1475.24 682.481 L1474.68 682.481 L1474.12 682.481 L1473.56 682.481 L1473 682.481 L1472.44 682.481 L1471.88 682.481 L1471.32 682.481 L1470.76 682.481 L1470.2 682.481 L1469.64 682.481 L1469.08 682.481 L1468.52 682.481 L1467.97 682.481 L1467.41 682.481 L1466.85 682.481 L1466.29 682.481 L1465.73 682.481 L1465.17 682.481 L1464.61 682.481 L1464.05 682.481 L1463.49 682.481 L1462.93 682.481 L1462.37 682.481 L1461.81 682.481 L1461.25 682.481 L1460.7 682.481 L1460.14 682.481 L1459.58 682.481 L1459.02 682.481 L1458.46 682.481 L1457.9 682.481 L1457.34 682.481 L1456.78 682.481 L1456.22 682.481 L1455.66 682.481 L1455.1 682.481 L1454.54 682.481 L1453.98 682.481 L1453.42 682.481 L1452.87 682.481 L1452.31 682.481 L1451.75 682.481 L1451.19 682.481 L1450.63 682.481 L1450.07 682.481 L1449.51 682.481 L1448.95 682.481 L1448.39 682.481 L1447.83 682.481 L1447.27 682.481 L1446.71 682.481 L1446.15 682.481 L1445.6 682.481 L1445.04 682.481 L1444.48 682.481 L1443.92 682.481 L1443.36 682.481 L1442.8 682.481 L1442.24 682.481 L1441.68 682.481 L1441.12 682.481 L1440.56 682.481 L1440 682.481 L1439.44 682.481 L1438.88 682.481 L1438.33 682.481 L1437.77 682.481 L1437.21 682.481 L1436.65 682.481 L1436.09 682.481 L1435.53 682.481 L1434.97 682.481 L1434.41 682.481 L1433.85 682.481 L1433.29 682.481 L1432.73 682.481 L1432.17 682.481 L1431.61 682.481 L1431.05 682.481 L1430.5 682.481 L1429.94 682.481 L1429.38 682.481 L1428.82 682.481 L1428.26 682.481 L1427.7 682.481 L1427.14 682.481 L1426.58 682.481 L1426.02 682.481 L1425.46 682.481 L1424.9 682.481 L1424.34 682.481 L1423.78 682.481 L1423.23 682.481 L1422.67 682.481 L1422.11 682.481 L1421.55 682.481 L1420.99 682.481 L1420.43 682.481 L1419.87 682.481 L1419.31 682.481 L1418.75 682.481 L1418.19 682.481 L1417.63 682.481 L1417.07 682.481 L1416.51 682.481 L1415.95 682.481 L1415.4 682.481 L1414.84 682.481 L1414.28 682.481 L1413.72 682.481 L1413.16 682.481 L1412.6 682.481 L1412.04 682.481 L1411.48 682.481 L1410.92 682.481 L1410.36 682.481 L1409.8 682.481 L1409.24 682.481 L1408.68 682.481 L1408.13 682.481 L1407.57 682.481 L1407.01 682.481 L1406.45 682.481 L1405.89 682.481 L1405.33 682.481 L1404.77 682.481 L1404.21 682.481 L1403.65 682.481 L1403.09 682.481 L1402.53 682.481 L1401.97 682.481 L1401.41 682.481 L1400.86 682.481 L1400.3 682.481 L1399.74 682.481 L1399.18 682.481 L1398.62 682.481 L1398.06 682.481 L1397.5 682.481 L1396.94 682.481 L1396.38 682.481 L1395.82 682.481 L1395.26 682.481 L1394.7 682.481 L1394.14 682.481 L1393.58 682.481 L1393.03 682.481 L1392.47 682.481 L1391.91 682.481 L1391.35 682.481 L1390.79 682.481 L1390.23 682.481 L1389.67 682.481 L1389.11 682.481 L1388.55 682.481 L1387.99 682.481 L1387.43 682.481 L1386.87 682.481 L1386.31 682.481 L1385.76 682.481 L1385.2 682.481 L1384.64 682.481 L1384.08 682.481 L1383.52 682.481 L1382.96 682.481 L1382.4 682.481 L1381.84 682.481 L1381.28 682.481 L1380.72 682.481 L1380.16 682.481 L1379.6 682.481 L1379.04 682.481 L1378.49 682.481 L1377.93 682.481 L1377.37 682.481 L1376.81 682.481 L1376.25 682.481 L1375.69 682.481 L1375.13 682.481 L1374.57 682.481 L1374.01 682.481 L1373.45 682.481 L1372.89 682.481 L1372.33 682.481 L1371.77 682.481 L1371.21 682.481 L1370.66 682.481 L1370.1 682.481 L1369.54 682.481 L1368.98 682.481 L1368.42 682.481 L1367.86 682.481 L1367.3 682.481 L1366.74 682.481 L1366.18 682.481 L1365.62 682.481 L1365.06 682.481 L1364.5 682.481 L1363.94 682.481 L1363.39 682.481 L1362.83 682.481 L1362.27 682.481 L1361.71 682.481 L1361.15 682.481 L1360.59 682.481 L1360.03 682.481 L1359.47 682.481 L1358.91 682.481 L1358.35 682.481 L1357.79 682.481 L1357.23 682.481 L1356.67 682.481 L1356.12 682.481 L1355.56 682.481 L1355 682.481 L1354.44 682.481 L1353.88 682.481 L1353.32 682.481 L1352.76 682.481 L1352.2 682.481 L1351.64 682.481 L1351.08 682.481 L1350.52 682.481 L1349.96 682.481 L1349.4 682.481 L1348.84 682.481 L1348.29 682.481 L1347.73 682.481 L1347.17 682.481 L1346.61 682.481 L1346.05 682.481 L1345.49 682.481 L1344.93 682.481 L1344.37 682.481 L1343.81 682.481 L1343.25 682.481 L1342.69 682.481 L1342.13 682.481 L1341.57 682.481 L1341.02 682.481 L1340.46 682.481 L1339.9 682.481 L1339.34 682.481 L1338.78 682.481 L1338.22 682.481 L1337.66 682.481 L1337.1 682.481 L1336.54 682.481 L1335.98 682.481 L1335.42 682.481 L1334.86 682.481 L1334.3 682.481 L1333.75 682.481 L1333.19 682.481 L1332.63 682.481 L1332.07 682.481 L1331.51 682.481 L1330.95 682.481 L1330.39 682.481 L1329.83 682.481 L1329.27 682.481 L1328.71 682.481 L1328.15 682.481 L1327.59 682.481 L1327.03 682.481 L1326.47 682.481 L1325.92 682.481 L1325.36 682.481 L1324.8 682.481 L1324.24 682.481 L1323.68 682.481 L1323.12 682.481 L1322.56 682.481 L1322 682.481 L1321.44 682.481 L1320.88 682.481 L1320.32 682.481 L1319.76 682.481 L1319.2 682.481 L1318.65 682.481 L1318.09 682.481 L1317.53 682.481 L1316.97 682.481 L1316.41 682.481 L1315.85 682.481 L1315.29 682.481 L1314.73 682.481 L1314.17 682.481 L1313.61 682.481 L1313.05 682.481 L1312.49 682.481 L1311.93 682.481 L1311.38 682.481 L1310.82 682.481 L1310.26 682.481 L1309.7 682.481 L1309.14 682.481 L1308.58 682.481 L1308.02 682.481 L1307.46 682.481 L1306.9 682.481 L1306.34 682.481 L1305.78 682.481 L1305.22 682.481 L1304.66 682.481 L1304.1 682.481 L1303.55 682.481 L1302.99 682.481 L1302.43 682.481 L1301.87 682.481 L1301.31 682.481 L1300.75 682.481 L1300.19 682.481 L1299.63 682.481 L1299.07 682.481 L1298.51 682.481 L1297.95 682.481 L1297.39 682.481 L1296.83 682.481 L1296.28 682.481 L1295.72 682.481 L1295.16 682.481 L1294.6 682.481 L1294.04 682.481 L1293.48 682.481 L1292.92 682.481 L1292.36 682.481 L1291.8 682.481 L1291.24 682.481 L1290.68 682.481 L1290.12 682.481 L1289.56 682.481 L1289 682.481 L1288.45 682.481 L1287.89 682.481 L1287.33 682.481 L1286.77 682.481 L1286.21 682.481 L1285.65 682.481 L1285.09 682.481 L1284.53 682.481 L1283.97 682.481 L1283.41 682.481 L1282.85 682.481 L1282.29 682.481 L1281.73 682.481 L1281.18 682.481 L1280.62 682.481 L1280.06 682.481 L1279.5 682.481 L1278.94 682.481 L1278.38 682.481 L1277.82 682.481 L1277.26 682.481 L1276.7 682.481 L1276.14 682.481 L1275.58 682.481 L1275.02 682.481 L1274.46 682.481 L1273.91 682.481 L1273.35 682.481 L1272.79 682.481 L1272.23 682.481 L1271.67 682.481 L1271.11 682.481 L1270.55 682.481 L1269.99 682.481 L1269.43 682.481 L1268.87 682.481 L1268.31 682.481 L1267.75 682.481 L1267.19 682.481 L1266.63 682.481 L1266.08 682.481 L1265.52 682.481 L1264.96 682.481 L1264.4 682.481 L1263.84 682.481 L1263.28 682.481 L1262.72 682.481 L1262.16 682.481 L1261.6 682.481 L1261.04 682.481 L1260.48 682.481 L1259.92 682.481 L1259.36 682.481 L1258.81 682.481 L1258.25 682.481 L1257.69 682.481 L1257.13 682.481 L1256.57 682.481 L1256.01 682.481 L1255.45 682.481 L1254.89 682.481 L1254.33 682.481 L1253.77 682.481 L1253.21 682.481 L1252.65 682.481 L1252.09 682.481 L1251.54 682.481 L1250.98 682.481 L1250.42 682.481 L1249.86 682.481 L1249.3 682.481 L1248.74 682.481 L1248.18 682.481 L1247.62 682.481 L1247.06 682.481 L1246.5 682.481 L1245.94 682.481 L1245.38 682.481 L1244.82 682.481 L1244.26 682.481 L1243.71 682.481 L1243.15 682.481 L1242.59 682.481 L1242.03 682.481 L1241.47 682.481 L1240.91 682.481 L1240.35 682.481 L1239.79 682.481 L1239.23 682.481 L1238.67 682.481 L1238.11 682.481 L1237.55 682.481 L1236.99 682.481 L1236.44 682.481 L1235.88 682.481 L1235.32 682.481 L1234.76 682.481 L1234.2 682.481 L1233.64 682.481 L1233.08 682.481 L1232.52 682.481 L1231.96 682.481 L1231.4 682.481 L1230.84 682.481 L1230.28 682.481 L1229.72 682.481 L1229.17 682.481 L1228.61 682.481 L1228.05 682.481 L1227.49 682.481 L1226.93 682.481 L1226.37 682.481 L1225.81 682.481 L1225.25 682.481 L1224.69 682.481 L1224.13 682.481 L1223.57 682.481 L1223.01 682.481 L1222.45 682.481 L1221.89 682.481 L1221.34 682.481 L1220.78 682.481 L1220.22 682.481 L1219.66 682.481 L1219.1 682.481 L1218.54 682.481 L1217.98 682.481 L1217.42 682.481 L1216.86 682.481 L1216.3 682.481 L1215.74 682.481 L1215.18 682.481 L1214.62 682.481 L1214.07 682.481 L1213.51 682.481 L1212.95 682.481 L1212.39 682.481 L1211.83 682.481 L1211.27 682.481 L1210.71 682.481 L1210.15 682.481 L1209.59 682.481 L1209.03 682.481 L1208.47 682.481 L1207.91 682.481 L1207.35 682.481 L1206.8 682.481 L1206.24 682.481 L1205.68 682.481 L1205.12 682.481 L1204.56 682.481 L1204 682.481 L1203.44 682.481 L1202.88 682.481 L1202.32 682.481 L1201.76 682.481 L1201.2 682.481 L1200.64 682.481 L1200.08 682.481 L1199.52 682.481 L1198.97 682.481 L1198.41 682.481 L1197.85 682.481 L1197.29 682.481 L1196.73 682.481 L1196.17 682.481 L1195.61 682.481 L1195.05 682.481 L1194.49 682.481 L1193.93 682.481 L1193.37 682.481 L1192.81 682.481 L1192.25 682.481 L1191.7 682.481 L1191.14 682.481 L1190.58 682.481 L1190.02 682.481 L1189.46 682.481 L1188.9 682.481 L1188.34 682.481 L1187.78 682.481 L1187.22 682.481 L1186.66 682.481 L1186.1 682.481 L1185.54 682.481 L1184.98 682.481 L1184.43 682.481 L1183.87 682.481 L1183.31 682.481 L1182.75 682.481 L1182.19 682.481 L1181.63 682.481 L1181.07 682.481 L1180.51 682.481 L1179.95 682.481 L1179.39 682.481 L1178.83 682.481 L1178.27 682.481 L1177.71 682.481 L1177.15 682.481 L1176.6 682.481 L1176.04 682.481 L1175.48 682.481 L1174.92 682.481 L1174.36 682.481 L1173.8 682.481 L1173.24 682.481 L1172.68 682.481 L1172.12 682.481 L1171.56 682.481 L1171 682.481 L1170.44 682.481 L1169.88 682.481 L1169.33 682.481 L1168.77 682.481 L1168.21 682.481 L1167.65 682.481 L1167.09 682.481 L1166.53 682.481 L1165.97 682.481 L1165.41 682.481 L1164.85 682.481 L1164.29 682.481 L1163.73 682.481 L1163.17 682.481 L1162.61 682.481 L1162.05 682.481 L1161.5 682.481 L1160.94 682.481 L1160.38 682.481 L1159.82 682.481 L1159.26 682.481 L1158.7 682.481 L1158.14 682.481 L1157.58 682.481 L1157.02 682.481 L1156.46 682.481 L1155.9 682.481 L1155.34 682.481 L1154.78 682.481 L1154.23 682.481 L1153.67 682.481 L1153.11 682.481 L1152.55 682.481 L1151.99 682.481 L1151.43 682.481 L1150.87 682.481 L1150.31 682.481 L1149.75 682.481 L1149.19 682.481 L1148.63 682.481 L1148.07 682.481 L1147.51 682.481 L1146.96 682.481 L1146.4 682.481 L1145.84 682.481 L1145.28 682.481 L1144.72 682.481 L1144.16 682.481 L1143.6 682.481 L1143.04 682.481 L1142.48 682.481 L1141.92 682.481 L1141.36 682.481 L1140.8 682.481 L1140.24 682.481 L1139.68 682.481 L1139.13 682.481 L1138.57 682.481 L1138.01 682.481 L1137.45 682.481 L1136.89 682.481 L1136.33 682.481 L1135.77 682.481 L1135.21 682.481 L1134.65 682.481 L1134.09 682.481 L1133.53 682.481 L1132.97 682.481 L1132.41 682.481 L1131.86 682.481 L1131.3 682.481 L1130.74 682.481 L1130.18 682.481 L1129.62 682.481 L1129.06 682.481 L1128.5 682.481 L1127.94 682.481 L1127.38 682.481 L1126.82 682.481 L1126.26 682.481 L1125.7 682.481 L1125.14 682.481 L1124.59 682.481 L1124.03 682.481 L1123.47 682.481 L1122.91 682.481 L1122.35 682.481 L1121.79 682.481 L1121.23 682.481 L1120.67 682.481 L1120.11 682.481 L1119.55 682.481 L1118.99 682.481 L1118.43 682.481 L1117.87 682.481 L1117.31 682.481 L1116.76 682.481 L1116.2 682.481 L1115.64 682.481 L1115.08 682.481 L1114.52 682.481 L1113.96 682.481 L1113.4 682.481 L1112.84 682.481 L1112.28 682.481 L1111.72 682.481 L1111.16 682.481 L1110.6 682.481 L1110.04 682.481 L1109.49 682.481 L1108.93 682.481 L1108.37 682.481 L1107.81 682.481 L1107.25 682.481 L1106.69 682.481 L1106.13 682.481 L1105.57 682.481 L1105.01 682.481 L1104.45 682.481 L1103.89 682.481 L1103.33 682.481 L1102.77 682.481 L1102.22 682.481 L1101.66 682.481 L1101.1 682.481 L1100.54 682.481 L1099.98 682.481 L1099.42 682.481 L1098.86 682.481 L1098.3 682.481 L1097.74 682.481 L1097.18 682.481 L1096.62 682.481 L1096.06 682.481 L1095.5 682.481 L1094.94 682.481 L1094.39 682.481 L1093.83 682.481 L1093.27 682.481 L1092.71 682.481 L1092.15 682.481 L1091.59 682.481 L1091.03 682.481 L1090.47 682.481 L1089.91 682.481 L1089.35 682.481 L1088.79 682.481 L1088.23 682.481 L1087.67 682.481 L1087.12 682.481 L1086.56 682.481 L1086 682.481 L1085.44 682.481 L1084.88 682.481 L1084.32 682.481 L1083.76 682.481 L1083.2 682.481 L1082.64 682.481 L1082.08 682.481 L1081.52 682.481 L1080.96 682.481 L1080.4 682.481 L1079.85 682.481 L1079.29 682.481 L1078.73 682.481 L1078.17 682.481 L1077.61 682.481 L1077.05 682.481 L1076.49 682.481 L1075.93 682.481 L1075.37 682.481 L1074.81 682.481 L1074.25 682.481 L1073.69 682.481 L1073.13 682.481 L1072.57 682.481 L1072.02 682.481 L1071.46 682.481 L1070.9 682.481 L1070.34 682.481 L1069.78 682.481 L1069.22 682.481 L1068.66 682.481 L1068.1 682.481 L1067.54 682.481 L1066.98 682.481 L1066.42 682.481 L1065.86 682.481 L1065.3 682.481 L1064.75 682.481 L1064.19 682.481 L1063.63 682.481 L1063.07 682.481 L1062.51 682.481 L1061.95 682.481 L1061.39 682.481 L1060.83 682.481 L1060.27 682.481 L1059.71 682.481 L1059.15 682.481 L1058.59 682.481 L1058.03 682.481 L1057.48 682.481 L1056.92 682.481 L1056.36 682.481 L1055.8 682.481 L1055.24 682.481 L1054.68 682.481 L1054.12 682.481 L1053.56 682.481 L1053 682.481 L1052.44 682.481 L1051.88 682.481 L1051.32 682.481 L1050.76 682.481 L1050.2 682.481 L1049.65 682.481 L1049.09 682.481 L1048.53 682.481 L1047.97 682.481 L1047.41 682.481 L1046.85 682.481 L1046.29 682.481 L1045.73 682.481 L1045.17 682.481 L1044.61 682.481 L1044.05 682.481 L1043.49 682.481 L1042.93 682.481 L1042.38 682.481 L1041.82 682.481 L1041.26 682.481 L1040.7 682.481 L1040.14 682.481 L1039.58 682.481 L1039.02 682.481 L1038.46 682.481 L1037.9 682.481 L1037.34 682.481 L1036.78 682.481 L1036.22 682.481 L1035.66 682.481 L1035.1 682.481 L1034.55 682.481 L1033.99 682.481 L1033.43 682.481 L1032.87 682.481 L1032.31 682.481 L1031.75 682.481 L1031.19 682.481 L1030.63 682.481 L1030.07 682.481 L1029.51 682.481 L1028.95 682.481 L1028.39 682.481 L1027.83 682.481 L1027.28 682.481 L1026.72 682.481 L1026.16 682.481 L1025.6 682.481 L1025.04 682.481 L1024.48 682.481 L1023.92 682.481 L1023.36 682.481 L1022.8 682.481 L1022.24 682.481 L1021.68 682.481 L1021.12 682.481 L1020.56 682.481 L1020.01 682.481 L1019.45 682.481 L1018.89 682.481 L1018.33 682.481 L1017.77 682.481 L1017.21 682.481 L1016.65 682.481 L1016.09 682.481 L1015.53 682.481 L1014.97 682.481 L1014.41 682.481 L1013.85 682.481 L1013.29 682.481 L1012.73 682.481 L1012.18 682.481 L1011.62 682.481 L1011.06 682.481 L1010.5 682.481 L1009.94 682.481 L1009.38 682.481 L1008.82 682.481 L1008.26 682.481 L1007.7 682.481 L1007.14 682.481 L1006.58 682.481 L1006.02 682.481 L1005.46 682.481 L1004.91 682.481 L1004.35 682.481 L1003.79 682.481 L1003.23 682.481 L1002.67 682.481 L1002.11 682.481 L1001.55 682.481 L1000.99 682.481 L1000.43 682.481 L999.872 682.481 L999.313 682.481 L998.754 682.481 L998.194 682.481 L997.635 682.481 L997.076 682.481 L996.517 682.481 L995.957 682.481 L995.398 682.481 L994.839 682.481 L994.28 682.481 L993.72 682.481 L993.161 682.481 L992.602 682.481 L992.043 682.481 L991.483 682.481 L990.924 682.481 L990.365 682.481 L989.806 682.481 L989.246 682.481 L988.687 682.481 L988.128 682.481 L987.569 682.481 L987.009 682.481 L986.45 682.481 L985.891 682.481 L985.332 682.481 L984.772 682.481 L984.213 682.481 L983.654 682.481 L983.095 682.481 L982.535 682.481 L981.976 682.481 L981.417 682.481 L980.858 682.481 L980.298 682.481 L979.739 682.481 L979.18 682.481 L978.621 682.481 L978.061 682.481 L977.502 682.481 L976.943 682.481 L976.384 682.481 L975.824 682.481 L975.265 682.481 L974.706 682.481 L974.147 682.481 L973.587 682.481 L973.028 682.481 L972.469 682.481 L971.91 682.481 L971.35 682.481 L970.791 682.481 L970.232 682.481 L969.673 682.481 L969.113 682.481 L968.554 682.481 L967.995 682.481 L967.436 682.481 L966.876 682.481 L966.317 682.481 L965.758 682.481 L965.199 682.481 L964.639 682.481 L964.08 682.481 L963.521 682.481 L962.962 682.481 L962.402 682.481 L961.843 682.481 L961.284 682.481 L960.725 682.481 L960.165 682.481 L959.606 682.481 L959.047 682.481 L958.488 682.481 L957.928 682.481 L957.369 682.481 L956.81 682.481 L956.251 682.481 L955.691 682.481 L955.132 682.481 L954.573 682.481 L954.014 682.481 L953.454 682.481 L952.895 682.481 L952.336 682.481 L951.777 682.481 L951.217 682.481 L950.658 682.481 L950.099 682.481 L949.54 682.481 L948.98 682.481 L948.421 682.481 L947.862 682.481 L947.303 682.481 L946.743 682.481 L946.184 682.481 L945.625 682.481 L945.066 682.481 L944.506 682.481 L943.947 682.481 L943.388 682.481 L942.829 682.481 L942.269 682.481 L941.71 682.481 L941.151 682.481 L940.592 682.481 L940.032 682.481 L939.473 682.481 L938.914 682.481 L938.355 682.481 L937.795 682.481 L937.236 682.481 L936.677 682.481 L936.118 682.481 L935.558 682.481 L934.999 682.481 L934.44 682.481 L933.881 682.481 L933.321 682.481 L932.762 682.481 L932.203 682.481 L931.644 682.481 L931.084 682.481 L930.525 682.481 L929.966 682.481 L929.406 682.481 L928.847 682.481 L928.288 682.481 L927.729 682.481 L927.169 682.481 L926.61 682.481 L926.051 682.481 L925.492 682.481 L924.932 682.481 L924.373 682.481 L923.814 682.481 L923.255 682.481 L922.695 682.481 L922.136 682.481 L921.577 682.481 L921.018 682.481 L920.458 682.481 L919.899 682.481 L919.34 682.481 L918.781 682.481 L918.221 682.481 L917.662 682.481 L917.103 682.481 L916.544 682.481 L915.984 682.481 L915.425 682.481 L914.866 682.481 L914.307 682.481 L913.747 682.481 L913.188 682.481 L912.629 682.481 L912.07 682.481 L911.51 682.481 L910.951 682.481 L910.392 682.481 L909.833 682.481 L909.273 682.481 L908.714 682.481 L908.155 682.481 L907.596 682.481 L907.036 682.481 L906.477 682.481 L905.918 682.481 L905.359 682.481 L904.799 682.481 L904.24 682.481 L903.681 682.481 L903.122 682.481 L902.562 682.481 L902.003 682.481 L901.444 682.481 L900.885 682.481 L900.325 682.481 L899.766 682.481 L899.207 682.481 L898.648 682.481 L898.088 682.481 L897.529 682.481 L896.97 682.481 L896.411 682.481 L895.851 682.481 L895.292 682.481 L894.733 682.481 L894.174 682.481 L893.614 682.481 L893.055 682.481 L892.496 682.481 L891.937 682.481 L891.377 682.481 L890.818 682.481 L890.259 682.481 L889.7 682.481 L889.14 682.481 L888.581 682.481 L888.022 682.481 L887.463 682.481 L886.903 682.481 L886.344 682.481 L885.785 682.481 L885.226 682.481 L884.666 682.481 L884.107 682.481 L883.548 682.481 L882.989 682.481 L882.429 682.481 L881.87 682.481 L881.311 682.481 L880.752 682.481 L880.192 682.481 L879.633 682.481 L879.074 682.481 L878.515 682.481 L877.955 682.481 L877.396 682.481 L876.837 682.481 L876.278 682.481 L875.718 682.481 L875.159 682.481 L874.6 682.481 L874.041 682.481 L873.481 682.481 L872.922 682.481 L872.363 682.481 L871.804 682.481 L871.244 682.481 L870.685 682.481 L870.126 682.481 L869.567 682.481 L869.007 682.481 L868.448 682.481 L867.889 682.481 L867.33 682.481 L866.77 682.481 L866.211 682.481 L865.652 682.481 L865.093 682.481 L864.533 682.481 L863.974 682.481 L863.415 682.481 L862.856 682.481 L862.296 682.481 L861.737 682.481 L861.178 682.481 L860.619 682.481 L860.059 682.481 L859.5 682.481 L858.941 682.481 L858.382 682.481 L857.822 682.481 L857.263 682.481 L856.704 682.481 L856.145 682.481 L855.585 682.481 L855.026 682.481 L854.467 682.481 L853.908 682.481 L853.348 682.481 L852.789 682.481 L852.23 682.481 L851.671 682.481 L851.111 682.481 L850.552 682.481 L849.993 682.481 L849.434 682.481 L848.874 682.481 L848.315 682.481 L847.756 682.481 L847.197 682.481 L846.637 682.481 L846.078 682.481 L845.519 682.481 L844.96 682.481 L844.4 682.481 L843.841 682.481 L843.282 682.481 L842.723 682.481 L842.163 682.481 L841.604 682.481 L841.045 682.481 L840.486 682.481 L839.926 682.481 L839.367 682.481 L838.808 682.481 L838.249 682.481 L837.689 682.481 L837.13 682.481 L836.571 682.481 L836.012 682.481 L835.452 682.481 L834.893 682.481 L834.334 682.481 L833.775 682.481 L833.215 682.481 L832.656 682.481 L832.097 682.481 L831.538 682.481 L830.978 682.481 L830.419 682.481 L829.86 682.481 L829.301 682.481 L828.741 682.481 L828.182 682.481 L827.623 682.481 L827.064 682.481 L826.504 682.481 L825.945 682.481 L825.386 682.481 L824.827 682.481 L824.267 682.481 L823.708 682.481 L823.149 682.481 L822.59 682.481 L822.03 682.481 L821.471 682.481 L820.912 682.481 L820.353 682.481 L819.793 682.481 L819.234 682.481 L818.675 682.481 L818.116 682.481 L817.556 682.481 L816.997 682.481 L816.438 682.481 L815.879 682.481 L815.319 682.481 L814.76 682.481 L814.201 682.481 L813.642 682.481 L813.082 682.481 L812.523 682.481 L811.964 682.481 L811.405 682.481 L810.845 682.481 L810.286 682.481 L809.727 682.481 L809.168 682.481 L808.608 682.481 L808.049 682.481 L807.49 682.481 L806.931 682.481 L806.371 682.481 L805.812 682.481 L805.253 682.481 L804.693 682.481 L804.134 682.481 L803.575 682.481 L803.016 682.481 L802.456 682.481 L801.897 682.481 L801.338 682.481 L800.779 682.481 L800.219 682.481 L799.66 682.481 L799.101 682.481 L798.542 682.481 L797.982 682.481 L797.423 682.481 L796.864 682.481 L796.305 682.481 L795.745 682.481 L795.186 682.481 L794.627 682.481 L794.068 682.481 L793.508 682.481 L792.949 682.481 L792.39 682.481 L791.831 682.481 L791.271 682.481 L790.712 682.481 L790.153 682.481 L789.594 682.481 L789.034 682.481 L788.475 682.481 L787.916 682.481 L787.357 682.481 L786.797 682.481 L786.238 682.481 L785.679 682.481 L785.12 682.481 L784.56 682.481 L784.001 682.481 L783.442 682.481 L782.883 682.481 L782.323 682.481 L781.764 682.481 L781.205 682.481 L780.646 682.481 L780.086 682.481 L779.527 682.481 L778.968 682.481 L778.409 682.481 L777.849 682.481 L777.29 682.481 L776.731 682.481 L776.172 682.481 L775.612 682.481 L775.053 682.481 L774.494 682.481 L773.935 682.481 L773.375 682.481 L772.816 682.481 L772.257 682.481 L771.698 682.481 L771.138 682.481 L770.579 682.481 L770.02 682.481 L769.461 682.481 L768.901 682.481 L768.342 682.481 L767.783 682.481 L767.224 682.481 L766.664 682.481 L766.105 682.481 L765.546 682.481 L764.987 682.481 L764.427 682.481 L763.868 682.481 L763.309 682.481 L762.75 682.481 L762.19 682.481 L761.631 682.481 L761.072 682.481 L760.513 682.481 L759.953 682.481 L759.394 682.481 L758.835 682.481 L758.276 682.481 L757.716 682.481 L757.157 682.481 L756.598 682.481 L756.039 682.481 L755.479 682.481 L754.92 682.481 L754.361 682.481 L753.802 682.481 L753.242 682.481 L752.683 682.481 L752.124 682.481 L751.565 682.481 L751.005 682.481 L750.446 682.481 L749.887 682.481 L749.328 682.481 L748.768 682.481 L748.209 682.481 L747.65 682.481 L747.091 682.481 L746.531 682.481 L745.972 682.481 L745.413 682.481 L744.854 682.481 L744.294 682.481 L743.735 682.481 L743.176 682.481 L742.617 682.481 L742.057 682.481 L741.498 682.481 L740.939 682.481 L740.38 682.481 L739.82 682.481 L739.261 682.481 L738.702 682.481 L738.143 682.481 L737.583 682.481 L737.024 682.481 L736.465 682.481 L735.906 682.481 L735.346 682.481 L734.787 682.481 L734.228 682.481 L733.669 682.481 L733.109 682.481 L732.55 682.481 L731.991 682.481 L731.432 682.481 L730.872 682.481 L730.313 682.481 L729.754 682.481 L729.195 682.481 L728.635 682.481 L728.076 682.481 L727.517 682.481 L726.958 682.481 L726.398 682.481 L725.839 682.481 L725.28 682.481 L724.721 682.481 L724.161 682.481 L723.602 682.481 L723.043 682.481 L722.484 682.481 L721.924 682.481 L721.365 682.481 L720.806 682.481 L720.247 682.481  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip193)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.5 720.806,683.5 721.365,683.5 721.924,683.5 722.484,683.5 723.043,683.5 723.602,683.5 724.161,683.5 724.721,683.5 725.28,683.5 725.839,683.5 726.398,683.5 726.958,683.5 727.517,683.5 728.076,683.5 728.635,683.5 729.195,683.5 729.754,683.5 730.313,683.5 730.872,683.5 731.432,683.5 731.991,683.5 732.55,683.5 733.109,683.5 733.669,683.5 734.228,683.5 734.787,683.5 735.346,683.5 735.906,683.5 736.465,683.5 737.024,683.5 737.583,683.5 738.143,683.5 738.702,683.5 739.261,683.5 739.82,683.5 740.38,683.5 740.939,683.5 741.498,683.5 742.057,683.5 742.617,683.5 743.176,683.5 743.735,683.5 744.294,683.5 744.854,683.5 745.413,683.5 745.972,683.5 746.531,683.5 747.091,683.5 747.65,683.5 748.209,683.5 748.768,683.5 749.328,683.5 749.887,683.5 750.446,683.5 751.005,683.5 751.565,683.5 752.124,683.5 752.683,683.5 753.242,683.5 753.802,683.5 754.361,683.5 754.92,683.5 755.479,683.5 756.039,683.5 756.598,683.5 757.157,683.5 757.716,683.5 758.276,683.5 758.835,683.5 759.394,683.5 759.953,683.5 760.513,683.5 761.072,683.5 761.631,683.5 762.19,683.5 762.75,683.5 763.309,683.5 763.868,683.5 764.427,683.5 764.987,683.5 765.546,683.5 766.105,683.5 766.664,683.5 767.224,683.5 767.783,683.5 768.342,683.5 768.901,683.5 769.461,683.5 770.02,683.5 770.579,683.5 771.138,683.5 771.698,683.5 772.257,683.5 772.816,683.5 773.375,683.5 773.935,683.5 774.494,683.5 775.053,683.5 775.612,683.5 776.172,683.5 776.731,683.5 777.29,683.5 777.849,683.5 778.409,683.5 778.968,683.5 779.527,683.5 780.086,683.5 780.646,683.5 781.205,683.5 781.764,683.5 782.323,683.5 782.883,683.5 783.442,683.5 784.001,683.5 784.56,683.5 785.12,683.5 785.679,683.5 786.238,683.5 786.797,683.5 787.357,683.5 787.916,683.5 788.475,683.5 789.034,683.5 789.594,683.5 790.153,683.5 790.712,683.5 791.271,683.5 791.831,683.5 792.39,683.5 792.949,683.5 793.508,683.5 794.068,683.5 794.627,683.5 795.186,683.5 795.745,683.5 796.305,683.5 796.864,683.5 797.423,683.5 797.982,683.5 798.542,683.5 799.101,683.5 799.66,683.5 800.219,683.5 800.779,683.5 801.338,683.5 801.897,683.5 802.456,683.5 803.016,683.5 803.575,683.5 804.134,683.5 804.693,683.5 805.253,683.5 805.812,683.5 806.371,683.5 806.931,683.5 807.49,683.5 808.049,683.5 808.608,683.5 809.168,683.5 809.727,683.5 810.286,683.5 810.845,683.5 811.405,683.5 811.964,683.5 812.523,683.5 813.082,683.5 813.642,683.5 814.201,683.5 814.76,683.5 815.319,683.5 815.879,683.5 816.438,683.5 816.997,683.5 817.556,683.5 818.116,683.5 818.675,683.5 819.234,683.5 819.793,683.5 820.353,683.5 820.912,683.5 821.471,683.5 822.03,683.5 822.59,683.5 823.149,683.5 823.708,683.5 824.267,683.5 824.827,683.5 825.386,683.5 825.945,683.5 826.504,683.5 827.064,683.5 827.623,683.5 828.182,683.5 828.741,683.5 829.301,683.5 829.86,683.5 830.419,683.5 830.978,683.5 831.538,683.5 832.097,683.5 832.656,683.5 833.215,683.5 833.775,683.5 834.334,683.5 834.893,683.5 835.452,683.5 836.012,683.5 836.571,683.5 837.13,683.5 837.689,683.5 838.249,683.5 838.808,683.5 839.367,683.5 839.926,683.5 840.486,683.5 841.045,683.5 841.604,683.5 842.163,683.5 842.723,683.5 843.282,683.5 843.841,683.5 844.4,683.5 844.96,683.5 845.519,683.5 846.078,683.5 846.637,683.5 847.197,683.5 847.756,683.5 848.315,683.5 848.874,683.5 849.434,683.5 849.993,683.5 850.552,683.5 851.111,683.5 851.671,683.5 852.23,683.5 852.789,683.5 853.348,683.5 853.908,683.5 854.467,683.5 855.026,683.5 855.585,683.5 856.145,683.5 856.704,683.5 857.263,683.5 857.822,683.5 858.382,683.5 858.941,683.5 859.5,683.5 860.059,683.5 860.619,683.5 861.178,683.5 861.737,683.5 862.296,683.5 862.856,683.5 863.415,683.5 863.974,683.5 864.533,683.5 865.093,683.5 865.652,683.5 866.211,683.5 866.77,683.5 867.33,683.5 867.889,683.5 868.448,683.5 869.007,683.5 869.567,683.5 870.126,683.5 870.685,683.5 871.244,683.5 871.804,683.5 872.363,683.5 872.922,683.5 873.481,683.5 874.041,683.5 874.6,683.5 875.159,683.5 875.718,683.5 876.278,683.5 876.837,683.5 877.396,683.5 877.955,683.5 878.515,683.5 879.074,683.5 879.633,683.5 880.192,683.5 880.752,683.5 881.311,683.5 881.87,683.5 882.429,683.5 882.989,683.5 883.548,683.5 884.107,683.5 884.666,683.5 885.226,683.5 885.785,683.5 886.344,683.5 886.903,683.5 887.463,683.5 888.022,683.5 888.581,683.5 889.14,683.5 889.7,683.5 890.259,683.5 890.818,683.5 891.377,683.5 891.937,683.5 892.496,683.5 893.055,683.5 893.614,683.5 894.174,683.5 894.733,683.5 895.292,683.5 895.851,683.5 896.411,683.5 896.97,683.5 897.529,683.5 898.088,683.5 898.648,683.5 899.207,683.5 899.766,683.5 900.325,683.5 900.885,683.5 901.444,683.5 902.003,683.5 902.562,683.5 903.122,683.5 903.681,683.5 904.24,683.5 904.799,683.5 905.359,683.5 905.918,683.5 906.477,683.5 907.036,683.5 907.596,683.5 908.155,683.5 908.714,683.5 909.273,683.5 909.833,683.5 910.392,683.5 910.951,683.5 911.51,683.5 912.07,683.5 912.629,683.5 913.188,683.5 913.747,683.5 914.307,683.5 914.866,683.5 915.425,683.5 915.984,683.5 916.544,683.5 917.103,683.5 917.662,683.5 918.221,683.5 918.781,683.5 919.34,683.5 919.899,683.5 920.458,683.5 921.018,683.5 921.577,683.5 922.136,683.5 922.695,683.5 923.255,683.5 923.814,683.5 924.373,683.5 924.932,683.5 925.492,683.5 926.051,683.5 926.61,683.5 927.169,683.5 927.729,683.5 928.288,683.5 928.847,683.5 929.406,683.5 929.966,683.5 930.525,683.5 931.084,683.5 931.644,683.5 932.203,683.5 932.762,683.5 933.321,683.5 933.881,683.5 934.44,683.5 934.999,683.5 935.558,683.5 936.118,683.5 936.677,683.5 937.236,683.5 937.795,683.5 938.355,683.5 938.914,683.5 939.473,683.5 940.032,683.5 940.592,683.5 941.151,683.5 941.71,683.5 942.269,683.5 942.829,683.5 943.388,683.5 943.947,683.5 944.506,683.5 945.066,683.5 945.625,683.5 946.184,683.5 946.743,683.5 947.303,683.5 947.862,683.5 948.421,683.5 948.98,683.5 949.54,683.5 950.099,683.5 950.658,683.5 951.217,683.5 951.777,683.5 952.336,683.5 952.895,683.5 953.454,683.5 954.014,683.5 954.573,683.5 955.132,683.5 955.691,683.5 956.251,683.5 956.81,683.5 957.369,683.5 957.928,683.5 958.488,683.5 959.047,683.5 959.606,683.5 960.165,683.5 960.725,683.5 961.284,683.5 961.843,683.5 962.402,683.5 962.962,683.5 963.521,683.5 964.08,683.5 964.639,683.5 965.199,683.5 965.758,683.5 966.317,683.5 966.876,683.5 967.436,683.5 967.995,683.5 968.554,683.5 969.113,683.5 969.673,683.5 970.232,683.5 970.791,683.5 971.35,683.5 971.91,683.5 972.469,683.5 973.028,683.5 973.587,683.5 974.147,683.5 974.706,683.5 975.265,683.5 975.824,683.5 976.384,683.5 976.943,683.5 977.502,683.5 978.061,683.5 978.621,683.5 979.18,683.5 979.739,683.5 980.298,683.5 980.858,683.5 981.417,683.5 981.976,683.5 982.535,683.5 983.095,683.5 983.654,683.5 984.213,683.5 984.772,683.5 985.332,683.5 985.891,683.5 986.45,683.5 987.009,683.5 987.569,683.5 988.128,683.5 988.687,683.5 989.246,683.5 989.806,683.5 990.365,683.5 990.924,683.5 991.483,683.5 992.043,683.5 992.602,683.5 993.161,683.5 993.72,683.5 994.28,683.5 994.839,683.5 995.398,683.5 995.957,683.5 996.517,683.5 997.076,683.5 997.635,683.5 998.194,683.5 998.754,683.5 999.313,683.5 999.872,683.5 1000.43,683.5 1000.99,683.5 1001.55,683.5 1002.11,683.5 1002.67,683.5 1003.23,683.5 1003.79,683.5 1004.35,683.5 1004.91,683.5 1005.46,683.5 1006.02,683.5 1006.58,683.5 1007.14,683.5 1007.7,683.5 1008.26,683.5 1008.82,683.5 1009.38,683.5 1009.94,683.5 1010.5,683.5 1011.06,683.5 1011.62,683.5 1012.18,683.5 1012.73,683.5 1013.29,683.5 1013.85,683.5 1014.41,683.5 1014.97,683.5 1015.53,683.5 1016.09,683.5 1016.65,683.5 1017.21,683.5 1017.77,683.5 1018.33,683.5 1018.89,683.5 1019.45,683.5 1020.01,683.5 1020.56,683.5 1021.12,683.5 1021.68,683.5 1022.24,683.5 1022.8,683.5 1023.36,683.5 1023.92,683.5 1024.48,683.5 1025.04,683.5 1025.6,683.5 1026.16,683.5 1026.72,683.5 1027.28,683.5 1027.83,683.5 1028.39,683.5 1028.95,683.5 1029.51,683.5 1030.07,683.5 1030.63,683.5 1031.19,683.5 1031.75,683.5 1032.31,683.5 1032.87,683.5 1033.43,683.5 1033.99,683.5 1034.55,683.5 1035.1,683.5 1035.66,683.5 1036.22,683.5 1036.78,683.5 1037.34,683.5 1037.9,683.5 1038.46,683.5 1039.02,683.5 1039.58,683.5 1040.14,683.5 1040.7,683.5 1041.26,683.5 1041.82,683.5 1042.38,683.5 1042.93,683.5 1043.49,683.5 1044.05,683.5 1044.61,683.5 1045.17,683.5 1045.73,683.5 1046.29,683.5 1046.85,683.5 1047.41,683.5 1047.97,683.5 1048.53,683.5 1049.09,683.5 1049.65,683.5 1050.2,683.5 1050.76,683.5 1051.32,683.5 1051.88,683.5 1052.44,683.5 1053,683.5 1053.56,683.5 1054.12,683.5 1054.68,683.5 1055.24,683.5 1055.8,683.5 1056.36,683.5 1056.92,683.5 1057.48,683.5 1058.03,683.5 1058.59,683.5 1059.15,683.5 1059.71,683.5 1060.27,683.5 1060.83,683.5 1061.39,683.5 1061.95,683.5 1062.51,683.5 1063.07,683.5 1063.63,683.5 1064.19,683.5 1064.75,683.5 1065.3,683.5 1065.86,683.5 1066.42,683.5 1066.98,683.5 1067.54,683.5 1068.1,683.5 1068.66,683.5 1069.22,683.5 1069.78,683.5 1070.34,683.5 1070.9,683.5 1071.46,683.5 1072.02,683.5 1072.57,683.5 1073.13,683.5 1073.69,683.5 1074.25,683.5 1074.81,683.5 1075.37,683.5 1075.93,683.5 1076.49,683.5 1077.05,683.5 1077.61,683.5 1078.17,683.5 1078.73,683.5 1079.29,683.5 1079.85,683.5 1080.4,683.5 1080.96,683.5 1081.52,683.5 1082.08,683.5 1082.64,683.5 1083.2,683.5 1083.76,683.5 1084.32,683.5 1084.88,683.5 1085.44,683.5 1086,683.5 1086.56,683.5 1087.12,683.5 1087.67,683.5 1088.23,683.5 1088.79,683.5 1089.35,683.5 1089.91,683.5 1090.47,683.5 1091.03,683.5 1091.59,683.5 1092.15,683.5 1092.71,683.5 1093.27,683.5 1093.83,683.5 1094.39,683.5 1094.94,683.5 1095.5,683.5 1096.06,683.5 1096.62,683.5 1097.18,683.5 1097.74,683.5 1098.3,683.5 1098.86,683.5 1099.42,683.5 1099.98,683.5 1100.54,683.5 1101.1,683.5 1101.66,683.5 1102.22,683.5 1102.77,683.5 1103.33,683.5 1103.89,683.5 1104.45,683.5 1105.01,683.5 1105.57,683.5 1106.13,683.5 1106.69,683.5 1107.25,683.5 1107.81,683.5 1108.37,683.5 1108.93,683.5 1109.49,683.5 1110.04,683.5 1110.6,683.5 1111.16,683.5 1111.72,683.5 1112.28,683.5 1112.84,683.5 1113.4,683.5 1113.96,683.5 1114.52,683.5 1115.08,683.5 1115.64,683.5 1116.2,683.5 1116.76,683.5 1117.31,683.5 1117.87,683.5 1118.43,683.5 1118.99,683.5 1119.55,683.5 1120.11,683.5 1120.67,683.5 1121.23,683.5 1121.79,683.5 1122.35,683.5 1122.91,683.5 1123.47,683.5 1124.03,683.5 1124.59,683.5 1125.14,683.5 1125.7,683.5 1126.26,683.5 1126.82,683.5 1127.38,683.5 1127.94,683.5 1128.5,683.5 1129.06,683.5 1129.62,683.5 1130.18,683.5 1130.74,683.5 1131.3,683.5 1131.86,683.5 1132.41,683.5 1132.97,683.5 1133.53,683.5 1134.09,683.5 1134.65,683.5 1135.21,683.5 1135.77,683.5 1136.33,683.5 1136.89,683.5 1137.45,683.5 1138.01,683.5 1138.57,683.5 1139.13,683.5 1139.68,683.5 1140.24,683.5 1140.8,683.5 1141.36,683.5 1141.92,683.5 1142.48,683.5 1143.04,683.5 1143.6,683.5 1144.16,683.5 1144.72,683.5 1145.28,683.5 1145.84,683.5 1146.4,683.5 1146.96,683.5 1147.51,683.5 1148.07,683.5 1148.63,683.5 1149.19,683.5 1149.75,683.5 1150.31,683.5 1150.87,683.5 1151.43,683.5 1151.99,683.5 1152.55,683.5 1153.11,683.5 1153.67,683.5 1154.23,683.5 1154.78,683.5 1155.34,683.5 1155.9,683.5 1156.46,683.5 1157.02,683.5 1157.58,683.5 1158.14,683.5 1158.7,683.5 1159.26,683.5 1159.82,683.5 1160.38,683.5 1160.94,683.5 1161.5,683.5 1162.05,683.5 1162.61,683.5 1163.17,683.5 1163.73,683.5 1164.29,683.5 1164.85,683.5 1165.41,683.5 1165.97,683.5 1166.53,683.5 1167.09,683.5 1167.65,683.5 1168.21,683.5 1168.77,683.5 1169.33,683.5 1169.88,683.5 1170.44,683.5 1171,683.5 1171.56,683.5 1172.12,683.5 1172.68,683.5 1173.24,683.5 1173.8,683.5 1174.36,683.5 1174.92,683.5 1175.48,683.5 1176.04,683.5 1176.6,683.5 1177.15,683.5 1177.71,683.5 1178.27,683.5 1178.83,683.5 1179.39,683.5 1179.95,683.5 1180.51,683.5 1181.07,683.5 1181.63,683.5 1182.19,683.5 1182.75,683.5 1183.31,683.5 1183.87,683.5 1184.43,683.5 1184.98,683.5 1185.54,683.5 1186.1,683.5 1186.66,683.5 1187.22,683.5 1187.78,683.5 1188.34,683.5 1188.9,683.5 1189.46,683.5 1190.02,683.5 1190.58,683.5 1191.14,683.5 1191.7,683.5 1192.25,683.5 1192.81,683.5 1193.37,683.5 1193.93,683.5 1194.49,683.5 1195.05,683.5 1195.61,683.5 1196.17,683.5 1196.73,683.5 1197.29,683.5 1197.85,683.5 1198.41,683.5 1198.97,683.5 1199.52,683.5 1200.08,683.5 1200.64,683.5 1201.2,683.5 1201.76,683.5 1202.32,683.5 1202.88,683.5 1203.44,683.5 1204,683.5 1204.56,683.5 1205.12,683.5 1205.68,683.5 1206.24,683.5 1206.8,683.5 1207.35,683.5 1207.91,683.5 1208.47,683.5 1209.03,683.5 1209.59,683.5 1210.15,683.5 1210.71,683.5 1211.27,683.5 1211.83,683.5 1212.39,683.5 1212.95,683.5 1213.51,683.5 1214.07,683.5 1214.62,683.5 1215.18,683.5 1215.74,683.5 1216.3,683.5 1216.86,683.5 1217.42,683.5 1217.98,683.5 1218.54,683.5 1219.1,683.5 1219.66,683.5 1220.22,683.5 1220.78,683.5 1221.34,683.5 1221.89,683.5 1222.45,683.5 1223.01,683.5 1223.57,683.5 1224.13,683.5 1224.69,683.5 1225.25,683.5 1225.81,683.5 1226.37,683.5 1226.93,683.5 1227.49,683.5 1228.05,683.5 1228.61,683.5 1229.17,683.5 1229.72,683.5 1230.28,683.5 1230.84,683.5 1231.4,683.5 1231.96,683.5 1232.52,683.5 1233.08,683.5 1233.64,683.5 1234.2,683.5 1234.76,683.5 1235.32,683.5 1235.88,683.5 1236.44,683.5 1236.99,683.5 1237.55,683.5 1238.11,683.5 1238.67,683.5 1239.23,683.5 1239.79,683.5 1240.35,683.5 1240.91,683.5 1241.47,683.5 1242.03,683.5 1242.59,683.5 1243.15,683.5 1243.71,683.5 1244.26,683.5 1244.82,683.5 1245.38,683.5 1245.94,683.5 1246.5,683.5 1247.06,683.5 1247.62,683.5 1248.18,683.5 1248.74,683.5 1249.3,683.5 1249.86,683.5 1250.42,683.5 1250.98,683.5 1251.54,683.5 1252.09,683.5 1252.65,683.5 1253.21,683.5 1253.77,683.5 1254.33,683.5 1254.89,683.5 1255.45,683.5 1256.01,683.5 1256.57,683.5 1257.13,683.5 1257.69,683.5 1258.25,683.5 1258.81,683.5 1259.36,683.5 1259.92,683.5 1260.48,683.5 1261.04,683.5 1261.6,683.5 1262.16,683.5 1262.72,683.5 1263.28,683.5 1263.84,683.5 1264.4,683.5 1264.96,683.5 1265.52,683.5 1266.08,683.5 1266.63,683.5 1267.19,683.5 1267.75,683.5 1268.31,683.5 1268.87,683.5 1269.43,683.5 1269.99,683.5 1270.55,683.5 1271.11,683.5 1271.67,683.5 1272.23,683.5 1272.79,683.5 1273.35,683.5 1273.91,683.5 1274.46,683.5 1275.02,683.5 1275.58,683.5 1276.14,683.5 1276.7,683.5 1277.26,683.5 1277.82,683.5 1278.38,683.5 1278.94,683.5 1279.5,683.5 1280.06,683.5 1280.62,683.5 1281.18,683.5 1281.73,683.5 1282.29,683.5 1282.85,683.5 1283.41,683.5 1283.97,683.5 1284.53,683.5 1285.09,683.5 1285.65,683.5 1286.21,683.5 1286.77,683.5 1287.33,683.5 1287.89,683.5 1288.45,683.5 1289,683.5 1289.56,683.5 1290.12,683.5 1290.68,683.5 1291.24,683.5 1291.8,683.5 1292.36,683.5 1292.92,683.5 1293.48,683.5 1294.04,683.5 1294.6,683.5 1295.16,683.5 1295.72,683.5 1296.28,683.5 1296.83,683.5 1297.39,683.5 1297.95,683.5 1298.51,683.5 1299.07,683.5 1299.63,683.5 1300.19,683.5 1300.75,683.5 1301.31,683.5 1301.87,683.5 1302.43,683.5 1302.99,683.5 1303.55,683.5 1304.1,683.5 1304.66,683.5 1305.22,683.5 1305.78,683.5 1306.34,683.5 1306.9,683.5 1307.46,683.5 1308.02,683.5 1308.58,683.5 1309.14,683.5 1309.7,683.5 1310.26,683.5 1310.82,683.5 1311.38,683.5 1311.93,683.5 1312.49,683.5 1313.05,683.5 1313.61,683.5 1314.17,683.5 1314.73,683.5 1315.29,683.5 1315.85,683.5 1316.41,683.5 1316.97,683.5 1317.53,683.5 1318.09,683.5 1318.65,683.5 1319.2,683.5 1319.76,683.5 1320.32,683.5 1320.88,683.5 1321.44,683.5 1322,683.5 1322.56,683.5 1323.12,683.5 1323.68,683.5 1324.24,683.5 1324.8,683.5 1325.36,683.5 1325.92,683.5 1326.47,683.5 1327.03,683.5 1327.59,683.5 1328.15,683.5 1328.71,683.5 1329.27,683.5 1329.83,683.5 1330.39,683.5 1330.95,683.5 1331.51,683.5 1332.07,683.5 1332.63,683.5 1333.19,683.5 1333.75,683.5 1334.3,683.5 1334.86,683.5 1335.42,683.5 1335.98,683.5 1336.54,683.5 1337.1,683.5 1337.66,683.5 1338.22,683.5 1338.78,683.5 1339.34,683.5 1339.9,683.5 1340.46,683.5 1341.02,683.5 1341.57,683.5 1342.13,683.5 1342.69,683.5 1343.25,683.5 1343.81,683.5 1344.37,683.5 1344.93,683.5 1345.49,683.5 1346.05,683.5 1346.61,683.5 1347.17,683.5 1347.73,683.5 1348.29,683.5 1348.84,683.5 1349.4,683.5 1349.96,683.5 1350.52,683.5 1351.08,683.5 1351.64,683.5 1352.2,683.5 1352.76,683.5 1353.32,683.5 1353.88,683.5 1354.44,683.5 1355,683.5 1355.56,683.5 1356.12,683.5 1356.67,683.5 1357.23,683.5 1357.79,683.5 1358.35,683.5 1358.91,683.5 1359.47,683.5 1360.03,683.5 1360.59,683.5 1361.15,683.5 1361.71,683.5 1362.27,683.5 1362.83,683.5 1363.39,683.5 1363.94,683.5 1364.5,683.5 1365.06,683.5 1365.62,683.5 1366.18,683.5 1366.74,683.5 1367.3,683.5 1367.86,683.5 1368.42,683.5 1368.98,683.5 1369.54,683.5 1370.1,683.5 1370.66,683.5 1371.21,683.5 1371.77,683.5 1372.33,683.5 1372.89,683.5 1373.45,683.5 1374.01,683.5 1374.57,683.5 1375.13,683.5 1375.69,683.5 1376.25,683.5 1376.81,683.5 1377.37,683.5 1377.93,683.5 1378.49,683.5 1379.04,683.5 1379.6,683.5 1380.16,683.5 1380.72,683.5 1381.28,683.5 1381.84,683.5 1382.4,683.5 1382.96,683.5 1383.52,683.5 1384.08,683.5 1384.64,683.5 1385.2,683.5 1385.76,683.5 1386.31,683.5 1386.87,683.5 1387.43,683.5 1387.99,683.5 1388.55,683.5 1389.11,683.5 1389.67,683.5 1390.23,683.5 1390.79,683.5 1391.35,683.5 1391.91,683.5 1392.47,683.5 1393.03,683.5 1393.58,683.5 1394.14,683.5 1394.7,683.5 1395.26,683.5 1395.82,683.5 1396.38,683.5 1396.94,683.5 1397.5,683.5 1398.06,683.5 1398.62,683.5 1399.18,683.5 1399.74,683.5 1400.3,683.5 1400.86,683.5 1401.41,683.5 1401.97,683.5 1402.53,683.5 1403.09,683.5 1403.65,683.5 1404.21,683.5 1404.77,683.5 1405.33,683.5 1405.89,683.5 1406.45,683.5 1407.01,683.5 1407.57,683.5 1408.13,683.5 1408.68,683.5 1409.24,683.5 1409.8,683.5 1410.36,683.5 1410.92,683.5 1411.48,683.5 1412.04,683.5 1412.6,683.5 1413.16,683.5 1413.72,683.5 1414.28,683.5 1414.84,683.5 1415.4,683.5 1415.95,683.5 1416.51,683.5 1417.07,683.5 1417.63,683.5 1418.19,683.5 1418.75,683.5 1419.31,683.5 1419.87,683.5 1420.43,683.5 1420.99,683.5 1421.55,683.5 1422.11,683.5 1422.67,683.5 1423.23,683.5 1423.78,683.5 1424.34,683.5 1424.9,683.5 1425.46,683.5 1426.02,683.5 1426.58,683.5 1427.14,683.5 1427.7,683.5 1428.26,683.5 1428.82,683.5 1429.38,683.5 1429.94,683.5 1430.5,683.5 1431.05,683.5 1431.61,683.5 1432.17,683.5 1432.73,683.5 1433.29,683.5 1433.85,683.5 1434.41,683.5 1434.97,683.5 1435.53,683.5 1436.09,683.5 1436.65,683.5 1437.21,683.5 1437.77,683.5 1438.33,683.5 1438.88,683.5 1439.44,683.5 1440,683.5 1440.56,683.5 1441.12,683.5 1441.68,683.5 1442.24,683.5 1442.8,683.5 1443.36,683.5 1443.92,683.5 1444.48,683.5 1445.04,683.5 1445.6,683.5 1446.15,683.5 1446.71,683.5 1447.27,683.5 1447.83,683.5 1448.39,683.5 1448.95,683.5 1449.51,683.5 1450.07,683.5 1450.63,683.5 1451.19,683.5 1451.75,683.5 1452.31,683.5 1452.87,683.5 1453.42,683.5 1453.98,683.5 1454.54,683.5 1455.1,683.5 1455.66,683.5 1456.22,683.5 1456.78,683.5 1457.34,683.5 1457.9,683.5 1458.46,683.5 1459.02,683.5 1459.58,683.5 1460.14,683.5 1460.7,683.5 1461.25,683.5 1461.81,683.5 1462.37,683.5 1462.93,683.5 1463.49,683.5 1464.05,683.5 1464.61,683.5 1465.17,683.5 1465.73,683.5 1466.29,683.5 1466.85,683.5 1467.41,683.5 1467.97,683.5 1468.52,683.5 1469.08,683.5 1469.64,683.5 1470.2,683.5 1470.76,683.5 1471.32,683.5 1471.88,683.5 1472.44,683.5 1473,683.5 1473.56,683.5 1474.12,683.5 1474.68,683.5 1475.24,683.5 1475.79,683.5 1476.35,683.5 1476.91,683.5 1477.47,683.5 1478.03,683.5 1478.59,683.5 1479.15,683.5 1479.71,683.5 1480.27,683.5 1480.83,683.5 1481.39,683.5 1481.95,683.5 1482.51,683.5 1483.07,683.5 1483.62,683.5 1484.18,683.5 1484.74,683.5 1485.3,683.5 1485.86,683.5 1486.42,683.5 1486.98,683.5 1487.54,683.5 1488.1,683.5 1488.66,683.5 1489.22,683.5 1489.78,683.5 1490.34,683.5 1490.89,683.5 1491.45,683.5 1492.01,683.5 1492.57,683.5 1493.13,683.5 1493.69,683.5 1494.25,683.5 1494.81,683.5 1495.37,683.5 1495.93,683.5 1496.49,683.5 1497.05,683.5 1497.61,683.5 1498.16,683.5 1498.72,683.5 1499.28,683.5 1499.84,683.5 1500.4,683.5 1500.96,683.5 1501.52,683.5 1502.08,683.5 1502.64,683.5 1503.2,683.5 1503.76,683.5 1504.32,683.5 1504.88,683.5 1505.44,683.5 1505.99,683.5 1506.55,683.5 1507.11,683.5 1507.67,683.5 1508.23,683.5 1508.79,683.5 1509.35,683.5 1509.91,683.5 1510.47,683.5 1511.03,683.5 1511.59,683.5 1512.15,683.5 1512.71,683.5 1513.26,683.5 1513.82,683.5 1514.38,683.5 1514.94,683.5 1515.5,683.5 1516.06,683.5 1516.62,683.5 1517.18,683.5 1517.74,683.5 1518.3,683.5 1518.86,683.5 1519.42,683.5 1519.98,683.5 1520.53,683.5 1521.09,683.5 1521.65,683.5 1522.21,683.5 1522.77,683.5 1523.33,683.5 1523.89,683.5 1524.45,683.5 1525.01,683.5 1525.57,683.5 1526.13,683.5 1526.69,683.5 1527.25,683.5 1527.81,683.5 1528.36,683.5 1528.92,683.5 1529.48,683.5 1530.04,683.5 1530.6,683.5 1531.16,683.5 1531.72,683.5 1532.28,683.5 1532.84,683.5 1533.4,683.5 1533.96,683.5 1534.52,683.5 1535.08,683.5 1535.63,683.5 1536.19,683.5 1536.75,683.5 1537.31,683.5 1537.87,683.5 1538.43,683.5 1538.99,683.5 1539.55,683.5 1540.11,683.5 1540.67,683.5 1541.23,683.5 1541.79,683.5 1542.35,683.5 1542.9,683.5 1543.46,683.5 1544.02,683.5 1544.58,683.5 1545.14,683.5 1545.7,683.5 1546.26,683.5 1546.82,683.5 1547.38,683.5 1547.94,683.5 1548.5,683.5 1549.06,683.5 1549.62,683.5 1550.18,683.5 1550.73,683.5 1551.29,683.5 1551.85,683.5 1552.41,683.5 1552.97,683.5 1553.53,683.5 1554.09,683.5 1554.65,683.5 1555.21,683.5 1555.77,683.5 1556.33,683.5 1556.89,683.5 1557.45,683.5 1558,683.5 1558.56,683.5 1559.12,683.5 1559.68,683.5 1560.24,683.5 1560.8,683.5 1561.36,683.5 1561.92,683.5 1562.48,683.5 1563.04,683.5 1563.6,683.5 1564.16,683.5 1564.72,683.5 1565.28,683.5 1565.83,683.5 1566.39,683.5 1566.95,683.5 1567.51,683.5 1568.07,683.5 1568.63,683.5 1569.19,683.5 1569.75,683.5 1570.31,683.5 1570.87,683.5 1571.43,683.5 1571.99,683.5 1572.55,683.5 1573.1,683.5 1573.66,683.5 1574.22,683.5 1574.78,683.5 1575.34,683.5 1575.9,683.5 1576.46,683.5 1577.02,683.5 1577.58,683.5 1578.14,683.5 1578.7,683.5 1579.26,683.5 1579.82,683.5 1580.37,683.5 1580.93,683.5 1581.49,683.5 1582.05,683.5 1582.61,683.5 1583.17,683.5 1583.73,683.5 1584.29,683.5 1584.85,683.5 1585.41,683.5 1585.97,683.5 1586.53,683.5 1587.09,683.5 1587.65,683.5 1588.2,683.5 1588.76,683.5 1589.32,683.5 1589.88,683.5 1590.44,683.5 1591,683.5 1591.56,683.5 1592.12,683.5 1592.68,683.5 1593.24,683.5 1593.8,683.5 1594.36,683.5 1594.92,683.5 1595.47,683.5 1596.03,683.5 1596.59,683.5 1597.15,683.5 1597.71,683.5 1598.27,683.5 1598.83,683.5 1599.39,683.5 1599.95,683.5 1600.51,683.5 1601.07,683.5 1601.63,683.5 1602.19,683.5 1602.74,683.5 1603.3,683.5 1603.86,683.5 1604.42,683.5 1604.98,683.5 1605.54,683.5 1606.1,683.5 1606.66,683.5 1607.22,683.5 1607.78,683.5 1608.34,683.5 1608.9,683.5 1609.46,683.5 1610.02,683.5 1610.57,683.5 1611.13,683.5 1611.69,683.5 1612.25,683.5 1612.81,683.5 1613.37,683.5 1613.93,683.5 1614.49,683.5 1615.05,683.5 1615.61,683.5 1616.17,683.5 1616.73,683.5 1617.29,683.5 1617.84,683.5 1618.4,683.5 1618.96,683.5 1619.52,683.5 1620.08,683.5 1620.64,683.5 1621.2,683.5 1621.76,683.5 1622.32,683.5 1622.88,683.5 1623.44,683.5 1624,683.5 1624.56,683.5 1625.11,683.5 1625.67,683.5 1626.23,683.5 1626.79,683.5 1627.35,683.5 1627.91,683.5 1628.47,683.5 1629.03,683.5 1629.59,683.5 1630.15,683.5 1630.71,683.5 1631.27,683.5 1631.83,683.5 1632.39,683.5 1632.94,683.5 1633.5,683.5 1634.06,683.5 1634.62,683.5 1635.18,683.5 1635.74,683.5 1636.3,683.5 1636.86,683.5 1637.42,683.5 1637.98,683.5 1638.54,683.5 1639.1,683.5 1639.66,683.5 1640.21,683.5 1640.77,683.5 1641.33,683.5 1641.89,683.5 1642.45,683.5 1643.01,683.5 1643.57,683.5 1644.13,683.5 1644.69,683.5 1645.25,683.5 1645.81,683.5 1646.37,683.5 1646.93,683.5 1647.48,683.5 1648.04,683.5 1648.6,683.5 1649.16,683.5 1649.72,683.5 1650.28,683.5 1650.84,683.5 1651.4,683.5 1651.96,683.5 1652.52,683.5 1653.08,683.5 1653.64,683.5 1654.2,683.5 1654.76,683.5 1655.31,683.5 1655.87,683.5 1656.43,683.5 1656.99,683.5 1657.55,683.5 1658.11,683.5 1658.67,683.5 1659.23,683.5 1659.79,683.5 1660.35,683.5 1660.91,683.5 1661.47,683.5 1662.03,683.5 1662.58,683.5 1663.14,683.5 1663.7,683.5 1664.26,683.5 1664.82,683.5 1665.38,683.5 1665.94,683.5 1666.5,683.5 1667.06,683.5 1667.62,683.5 1668.18,683.5 1668.74,683.5 1669.3,683.5 1669.85,683.5 1670.41,683.5 1670.97,683.5 1671.53,683.5 1672.09,683.5 1672.65,683.5 1673.21,683.5 1673.77,683.5 1674.33,683.5 1674.89,683.5 1675.45,683.5 1676.01,683.5 1676.57,683.5 1677.13,683.5 1677.68,683.5 1678.24,683.5 1678.8,683.5 1679.36,683.5 1679.92,683.5 1680.48,683.5 1681.04,683.5 1681.6,683.5 1682.16,683.5 1682.72,683.5 1683.28,683.5 1683.84,683.5 1684.4,683.5 1684.95,683.5 1685.51,683.5 1686.07,683.5 1686.63,683.5 1687.19,683.5 1687.75,683.5 1688.31,683.5 1688.87,683.5 1689.43,683.5 1689.99,683.5 1690.55,683.5 1691.11,683.5 1691.67,683.5 1692.23,683.5 1692.78,683.5 1693.34,683.5 1693.9,683.5 1694.46,683.5 1695.02,683.5 1695.58,683.5 1696.14,683.5 1696.7,683.5 1697.26,683.5 1697.82,683.5 1698.38,683.5 1698.94,683.5 1699.5,683.5 1700.05,683.5 1700.61,683.5 1701.17,683.5 1701.73,683.5 1702.29,683.5 1702.85,683.5 1703.41,683.5 1703.97,683.5 1704.53,683.5 1705.09,683.5 1705.65,683.5 1706.21,683.5 1706.77,683.5 1707.32,683.5 1707.88,683.5 1708.44,683.5 1709,683.5 1709.56,683.5 1710.12,683.5 1710.68,683.5 1711.24,683.5 1711.8,683.5 1712.36,683.5 1712.92,683.5 1713.48,683.5 1714.04,683.5 1714.6,683.5 1715.15,683.5 1715.71,683.5 1716.27,683.5 1716.83,683.5 1717.39,683.5 1717.95,683.5 1718.51,683.5 1719.07,683.5 1719.63,683.5 1720.19,683.5 1720.75,683.5 1721.31,683.5 1721.87,683.5 1722.42,683.5 1722.98,683.5 1723.54,683.5 1724.1,683.5 1724.66,683.5 1725.22,683.5 1725.78,683.5 1726.34,683.5 1726.9,683.5 1727.46,683.5 1728.02,683.5 1728.58,683.5 1729.14,683.5 1729.69,683.5 1730.25,683.5 1730.81,683.5 1731.37,683.5 1731.93,683.5 1732.49,683.5 1733.05,683.5 1733.61,683.5 1734.17,683.5 1734.73,683.5 1735.29,683.5 1735.85,683.5 1736.41,683.5 1736.97,683.5 1737.52,683.5 1738.08,683.5 1738.64,683.5 1739.2,683.5 1739.76,683.5 1740.32,683.5 1740.88,683.5 1741.44,683.5 1742,683.5 1742.56,683.5 1743.12,683.5 1743.68,683.5 1744.24,683.5 1744.79,683.5 1745.35,683.5 1745.91,683.5 1746.47,683.5 1747.03,683.5 1747.59,683.5 1748.15,683.5 1748.71,683.5 1749.27,683.5 1749.83,683.5 1750.39,683.5 1750.95,683.5 1751.51,683.5 1752.06,683.5 1752.62,683.5 1753.18,683.5 1753.74,683.5 1754.3,683.5 1754.86,683.5 1755.42,683.5 1755.98,683.5 1756.54,683.5 1757.1,683.5 1757.66,683.5 1758.22,683.5 1758.78,683.5 1759.34,683.5 1759.89,683.5 1760.45,683.5 1761.01,683.5 1761.57,683.5 1762.13,683.5 1762.69,683.5 1763.25,683.5 1763.81,683.5 1764.37,683.5 1764.93,683.5 1765.49,683.5 1766.05,683.5 1766.61,683.5 1767.16,683.5 1767.72,683.5 1768.28,683.5 1768.84,683.5 1769.4,683.5 1769.96,683.5 1770.52,683.5 1771.08,683.5 1771.64,683.5 1772.2,683.5 1772.76,683.5 1773.32,683.5 1773.88,683.5 1774.43,683.5 1774.99,683.5 1775.55,683.5 1776.11,683.5 1776.67,683.5 1777.23,683.5 1777.79,683.5 1778.35,683.5 1778.91,683.5 1779.47,683.5 1780.03,683.5 1780.59,683.5 1781.15,683.5 1781.71,683.5 1782.26,683.5 1782.82,683.5 1783.38,683.5 1783.94,683.5 1784.5,683.5 1785.06,683.5 1785.62,683.5 1786.18,683.5 1786.74,683.5 1787.3,683.5 1787.86,683.5 1788.42,683.5 1788.98,683.5 1789.53,683.5 1790.09,683.5 1790.65,683.5 1791.21,683.5 1791.77,683.5 1792.33,683.5 1792.89,683.5 1793.45,683.5 1794.01,683.5 1794.57,683.5 1795.13,683.5 1795.69,683.5 1796.25,683.5 1796.8,683.5 1797.36,683.5 1797.92,683.5 1798.48,683.5 1799.04,683.5 1799.6,683.5 1800.16,683.5 1800.72,683.5 1801.28,683.5 1801.84,683.5 1802.4,683.5 1802.96,683.5 1803.52,683.5 1804.08,683.5 1804.63,683.5 1805.19,683.5 1805.75,683.5 1806.31,683.5 1806.87,683.5 1807.43,683.5 1807.99,683.5 1808.55,683.5 1809.11,683.5 1809.67,683.5 1810.23,683.5 1810.79,683.5 1811.35,683.5 1811.9,683.5 1812.46,683.5 1813.02,683.5 1813.58,683.5 1814.14,683.5 1814.7,683.5 1815.26,683.5 1815.82,683.5 1816.38,683.5 1816.94,683.5 1817.5,683.5 1818.06,683.5 1818.62,683.5 1819.18,683.5 1819.73,683.5 1820.29,683.5 1820.85,683.5 1821.41,683.5 1821.97,683.5 1822.53,683.5 1823.09,683.5 1823.65,683.5 1824.21,683.5 1824.77,683.5 1825.33,683.5 1825.89,683.5 1826.45,683.5 1827,683.5 1827.56,683.5 1828.12,683.5 1828.68,683.5 1829.24,683.5 1829.8,683.5 1830.36,683.5 1830.92,683.5 1831.48,683.5 1832.04,683.5 1832.6,683.5 1833.16,683.5 1833.72,683.5 1834.27,683.5 1834.83,683.5 1835.39,683.5 1835.95,683.5 1836.51,683.5 1837.07,683.5 1837.63,683.5 1838.19,683.5 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.023454013864414 ± 0.018845958483904572\nProjected Energy: -4.014658141393588 ± (0.004973583220700739, 0.005128436682840132)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.469988</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.3756e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.2855e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.097e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.252e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.585e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.617e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0, boundary_condition=:periodic)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\nboundary_condition : the boundary condition to apply. Can be one of :periodic, :twisted, or :hard_wall\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{boundary_condition}, Tuple{SingleComponentFockAddress, Any, Val{boundary_condition}}} where boundary_condition","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen, Val(boundary_condition))\n\nCompute the new address of a hopping event for the Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes multiplied by a term consistent with boundary condition.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions can be periodic, pi-twisted and hard-wall.\n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(:twisted))\n(BoseFS{2,3}(2, 0, 0), -1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(:hard_wall))\n(BoseFS{2,3}(2, 0, 0), 0.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
