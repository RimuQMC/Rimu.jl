var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip280\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip280)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip281\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip280)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip282\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip280)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.83 2211.02,1260.83 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.34 2211.02,1003.34 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.852 2211.02,745.852 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.363 2211.02,488.363 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,230.875 2211.02,230.875 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.83 423.181,1260.83 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.34 423.181,1003.34 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.852 423.181,745.852 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.363 423.181,488.363 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,230.875 423.181,230.875 \"/>\n<path clip-path=\"url(#clip280)\" d=\"M356.339 1246.63 Q352.728 1246.63 350.899 1250.19 Q349.094 1253.73 349.094 1260.86 Q349.094 1267.97 350.899 1271.53 Q352.728 1275.08 356.339 1275.08 Q359.973 1275.08 361.779 1271.53 Q363.608 1267.97 363.608 1260.86 Q363.608 1253.73 361.779 1250.19 Q359.973 1246.63 356.339 1246.63 M356.339 1242.92 Q362.149 1242.92 365.205 1247.53 Q368.284 1252.11 368.284 1260.86 Q368.284 1269.59 365.205 1274.2 Q362.149 1278.78 356.339 1278.78 Q350.529 1278.78 347.45 1274.2 Q344.395 1269.59 344.395 1260.86 Q344.395 1252.11 347.45 1247.53 Q350.529 1242.92 356.339 1242.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M290.043 1016.68 L306.363 1016.68 L306.363 1020.62 L284.418 1020.62 L284.418 1016.68 Q287.08 1013.93 291.664 1009.3 Q296.27 1004.65 297.451 1003.31 Q299.696 1000.78 300.576 999.046 Q301.478 997.287 301.478 995.597 Q301.478 992.842 299.534 991.106 Q297.613 989.37 294.511 989.37 Q292.312 989.37 289.858 990.134 Q287.427 990.898 284.65 992.449 L284.65 987.726 Q287.474 986.592 289.927 986.014 Q292.381 985.435 294.418 985.435 Q299.789 985.435 302.983 988.12 Q306.177 990.805 306.177 995.296 Q306.177 997.426 305.367 999.347 Q304.58 1001.24 302.474 1003.84 Q301.895 1004.51 298.793 1007.73 Q295.691 1010.92 290.043 1016.68 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M316.224 986.06 L334.58 986.06 L334.58 989.995 L320.506 989.995 L320.506 998.467 Q321.524 998.12 322.543 997.958 Q323.562 997.773 324.58 997.773 Q330.367 997.773 333.747 1000.94 Q337.126 1004.12 337.126 1009.53 Q337.126 1015.11 333.654 1018.21 Q330.182 1021.29 323.862 1021.29 Q321.687 1021.29 319.418 1020.92 Q317.173 1020.55 314.765 1019.81 L314.765 1015.11 Q316.849 1016.24 319.071 1016.8 Q321.293 1017.36 323.77 1017.36 Q327.774 1017.36 330.112 1015.25 Q332.45 1013.14 332.45 1009.53 Q332.45 1005.92 330.112 1003.81 Q327.774 1001.71 323.77 1001.71 Q321.895 1001.71 320.02 1002.12 Q318.168 1002.54 316.224 1003.42 L316.224 986.06 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M356.339 989.139 Q352.728 989.139 350.899 992.703 Q349.094 996.245 349.094 1003.37 Q349.094 1010.48 350.899 1014.05 Q352.728 1017.59 356.339 1017.59 Q359.973 1017.59 361.779 1014.05 Q363.608 1010.48 363.608 1003.37 Q363.608 996.245 361.779 992.703 Q359.973 989.139 356.339 989.139 M356.339 985.435 Q362.149 985.435 365.205 990.041 Q368.284 994.625 368.284 1003.37 Q368.284 1012.1 365.205 1016.71 Q362.149 1021.29 356.339 1021.29 Q350.529 1021.29 347.45 1016.71 Q344.395 1012.1 344.395 1003.37 Q344.395 994.625 347.45 990.041 Q350.529 985.435 356.339 985.435 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M286.062 728.572 L304.418 728.572 L304.418 732.507 L290.344 732.507 L290.344 740.979 Q291.363 740.632 292.381 740.47 Q293.4 740.284 294.418 740.284 Q300.205 740.284 303.585 743.456 Q306.964 746.627 306.964 752.044 Q306.964 757.622 303.492 760.724 Q300.02 763.803 293.701 763.803 Q291.525 763.803 289.256 763.432 Q287.011 763.062 284.603 762.321 L284.603 757.622 Q286.687 758.757 288.909 759.312 Q291.131 759.868 293.608 759.868 Q297.613 759.868 299.951 757.761 Q302.288 755.655 302.288 752.044 Q302.288 748.433 299.951 746.326 Q297.613 744.22 293.608 744.22 Q291.733 744.22 289.858 744.636 Q288.006 745.053 286.062 745.933 L286.062 728.572 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M326.177 731.65 Q322.566 731.65 320.737 735.215 Q318.932 738.757 318.932 745.886 Q318.932 752.993 320.737 756.558 Q322.566 760.099 326.177 760.099 Q329.811 760.099 331.617 756.558 Q333.446 752.993 333.446 745.886 Q333.446 738.757 331.617 735.215 Q329.811 731.65 326.177 731.65 M326.177 727.947 Q331.987 727.947 335.043 732.553 Q338.122 737.136 338.122 745.886 Q338.122 754.613 335.043 759.22 Q331.987 763.803 326.177 763.803 Q320.367 763.803 317.288 759.22 Q314.233 754.613 314.233 745.886 Q314.233 737.136 317.288 732.553 Q320.367 727.947 326.177 727.947 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M356.339 731.65 Q352.728 731.65 350.899 735.215 Q349.094 738.757 349.094 745.886 Q349.094 752.993 350.899 756.558 Q352.728 760.099 356.339 760.099 Q359.973 760.099 361.779 756.558 Q363.608 752.993 363.608 745.886 Q363.608 738.757 361.779 735.215 Q359.973 731.65 356.339 731.65 M356.339 727.947 Q362.149 727.947 365.205 732.553 Q368.284 737.136 368.284 745.886 Q368.284 754.613 365.205 759.22 Q362.149 763.803 356.339 763.803 Q350.529 763.803 347.45 759.22 Q344.395 754.613 344.395 745.886 Q344.395 737.136 347.45 732.553 Q350.529 727.947 356.339 727.947 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M284.835 471.083 L307.057 471.083 L307.057 473.074 L294.511 505.643 L289.627 505.643 L301.432 475.018 L284.835 475.018 L284.835 471.083 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M316.224 471.083 L334.58 471.083 L334.58 475.018 L320.506 475.018 L320.506 483.491 Q321.524 483.143 322.543 482.981 Q323.562 482.796 324.58 482.796 Q330.367 482.796 333.747 485.967 Q337.126 489.139 337.126 494.555 Q337.126 500.134 333.654 503.236 Q330.182 506.315 323.862 506.315 Q321.687 506.315 319.418 505.944 Q317.173 505.574 314.765 504.833 L314.765 500.134 Q316.849 501.268 319.071 501.824 Q321.293 502.379 323.77 502.379 Q327.774 502.379 330.112 500.273 Q332.45 498.166 332.45 494.555 Q332.45 490.944 330.112 488.838 Q327.774 486.731 323.77 486.731 Q321.895 486.731 320.02 487.148 Q318.168 487.565 316.224 488.444 L316.224 471.083 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M356.339 474.162 Q352.728 474.162 350.899 477.727 Q349.094 481.268 349.094 488.398 Q349.094 495.504 350.899 499.069 Q352.728 502.611 356.339 502.611 Q359.973 502.611 361.779 499.069 Q363.608 495.504 363.608 488.398 Q363.608 481.268 361.779 477.727 Q359.973 474.162 356.339 474.162 M356.339 470.458 Q362.149 470.458 365.205 475.065 Q368.284 479.648 368.284 488.398 Q368.284 497.125 365.205 501.731 Q362.149 506.315 356.339 506.315 Q350.529 506.315 347.45 501.731 Q344.395 497.125 344.395 488.398 Q344.395 479.648 347.45 475.065 Q350.529 470.458 356.339 470.458 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M256.664 244.22 L264.303 244.22 L264.303 217.854 L255.992 219.521 L255.992 215.262 L264.256 213.595 L268.932 213.595 L268.932 244.22 L276.571 244.22 L276.571 248.155 L256.664 248.155 L256.664 244.22 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M296.015 216.674 Q292.404 216.674 290.576 220.239 Q288.77 223.78 288.77 230.91 Q288.77 238.016 290.576 241.581 Q292.404 245.123 296.015 245.123 Q299.65 245.123 301.455 241.581 Q303.284 238.016 303.284 230.91 Q303.284 223.78 301.455 220.239 Q299.65 216.674 296.015 216.674 M296.015 212.97 Q301.826 212.97 304.881 217.576 Q307.96 222.16 307.96 230.91 Q307.96 239.637 304.881 244.243 Q301.826 248.826 296.015 248.826 Q290.205 248.826 287.127 244.243 Q284.071 239.637 284.071 230.91 Q284.071 222.16 287.127 217.576 Q290.205 212.97 296.015 212.97 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M326.177 216.674 Q322.566 216.674 320.737 220.239 Q318.932 223.78 318.932 230.91 Q318.932 238.016 320.737 241.581 Q322.566 245.123 326.177 245.123 Q329.811 245.123 331.617 241.581 Q333.446 238.016 333.446 230.91 Q333.446 223.78 331.617 220.239 Q329.811 216.674 326.177 216.674 M326.177 212.97 Q331.987 212.97 335.043 217.576 Q338.122 222.16 338.122 230.91 Q338.122 239.637 335.043 244.243 Q331.987 248.826 326.177 248.826 Q320.367 248.826 317.288 244.243 Q314.233 239.637 314.233 230.91 Q314.233 222.16 317.288 217.576 Q320.367 212.97 326.177 212.97 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M356.339 216.674 Q352.728 216.674 350.899 220.239 Q349.094 223.78 349.094 230.91 Q349.094 238.016 350.899 241.581 Q352.728 245.123 356.339 245.123 Q359.973 245.123 361.779 241.581 Q363.608 238.016 363.608 230.91 Q363.608 223.78 361.779 220.239 Q359.973 216.674 356.339 216.674 M356.339 212.97 Q362.149 212.97 365.205 217.576 Q368.284 222.16 368.284 230.91 Q368.284 239.637 365.205 244.243 Q362.149 248.826 356.339 248.826 Q350.529 248.826 347.45 244.243 Q344.395 239.637 344.395 230.91 Q344.395 222.16 347.45 217.576 Q350.529 212.97 356.339 212.97 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip282)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,230.875 4017.76,230.875 \"/>\n<polyline clip-path=\"url(#clip282)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1249.06 459.396,1247.55 459.964,1247.04 460.533,1246.46 461.101,1245.8 461.669,1245.06 462.238,1244.24 462.806,1243.34 463.375,1242.35 463.943,1241.26 464.511,1240.08 465.08,1238.79 465.648,1236.37 466.216,1234.85 466.785,1233.2 467.353,1231.42 467.921,1229.5 468.49,1227.46 469.058,1225.24 469.626,1222.85 470.195,1220.35 470.763,1217.69 471.331,1214.85 471.9,1211.83 472.468,1208.61 473.036,1204.14 473.605,1198.42 474.173,1193.52 474.741,1189.37 475.31,1185.02 475.878,1178.38 476.446,1172.55 477.015,1166.45 477.583,1161.17 478.152,1155.64 478.72,1148.8 479.288,1141.67 479.857,1135.4 480.425,1127.89 480.993,1119.9 481.562,1112.82 482.13,1103.41 482.698,1095.8 483.267,1086.92 483.835,1077.91 484.403,1068.75 484.972,1059.41 485.54,1049.72 486.108,1038.8 486.677,1028.97 487.245,1018.9 487.813,1009.79 488.382,1000.6 488.95,990.231 489.518,978.749 490.087,967.157 490.655,955.512 491.224,941.927 491.792,932.483 492.36,923.016 492.929,912.432 493.497,901.774 494.065,888.932 494.634,879.244 495.202,869.639 495.77,858.849 496.339,847.104 496.907,834.415 497.475,820.952 498.044,810.711 498.612,799.503 499.18,790.396 499.749,779.222 500.317,767.987 500.885,758.007 501.454,747.198 502.022,735.24 502.59,724.68 503.159,716.268 503.727,707.913 504.295,695.547 504.864,686.43 505.432,675.307 506.001,667.453 506.569,659.572 507.137,650.558 507.706,642.857 508.274,634.266 508.842,625.697 509.411,617.418 509.979,608.194 510.547,599.979 511.116,592.809 511.684,584.822 512.252,576.711 512.821,569.797 513.389,562.105 513.957,553.514 514.526,545.072 515.094,538.867 515.662,530.699 516.231,524.45 516.799,517.288 517.367,508.214 517.936,502.557 518.504,497.252 519.072,489.729 519.641,481.384 520.209,473.343 520.778,468.532 521.346,461.885 521.914,457.423 522.483,448.866 523.051,444.722 523.619,439.695 524.188,435.747 524.756,430.723 525.324,424.737 525.893,419.946 526.461,414.295 527.029,410.774 527.598,405.296 528.166,400.137 528.734,394.122 529.303,391.296 529.871,386.251 530.439,383.381 531.008,381.712 531.576,378.968 532.144,375.256 532.713,371.781 533.281,366.117 533.85,360.635 534.418,357.546 534.986,352.333 535.555,350.372 536.123,347.208 536.691,344.241 537.26,341.533 537.828,338.948 538.396,337.313 538.965,337.717 539.533,334.119 540.101,333.53 540.67,330.81 541.238,328.065 541.806,324.351 542.375,321.96 542.943,320.73 543.511,318.225 544.08,316.911 544.648,315.569 545.216,314.269 545.785,313.047 546.353,311.725 546.921,310.421 547.49,309.149 548.058,307.79 548.627,305.463 549.195,300.145 549.763,298.331 550.332,296.413 550.9,296.664 551.468,295.797 552.037,292.815 552.605,293.954 553.173,294.103 553.742,294.306 554.31,292.031 554.878,290.908 555.447,288.879 556.015,286.023 556.583,283.319 557.152,280.891 557.72,280.354 558.288,278.085 558.857,275.685 559.425,274.509 559.993,272.42 560.562,270.372 561.13,269.18 561.698,269.502 562.267,269.663 562.835,269.569 563.404,268.646 563.972,268.696 564.54,268.435 565.109,268.516 565.677,267.464 566.245,266.251 566.814,269.335 567.382,269.044 567.95,269.724 568.519,267.407 569.087,266.976 569.655,265.84 570.224,263.676 570.792,264.782 571.36,264.568 571.929,263.375 572.497,261.367 573.065,262.525 573.634,261.265 574.202,258.973 574.77,260.053 575.339,257.708 575.907,255.766 576.476,254.833 577.044,254.897 577.612,253.221 578.181,253.643 578.749,253.928 579.317,254.064 579.886,253.188 580.454,253.37 581.022,252.434 581.591,250.642 582.159,251.111 582.727,249.346 583.296,250.781 583.864,251.069 584.432,251.349 585.001,249.45 585.569,250.775 586.137,249.958 586.706,247.271 587.274,247.783 587.842,249.217 588.411,249.397 588.979,250.735 589.547,246.884 590.116,247.43 590.684,247.905 591.253,247.076 591.821,248.289 592.389,249.516 592.958,249.81 593.526,249.078 594.094,250.195 594.663,250.422 595.231,250.4 595.799,252.74 596.368,250.376 596.936,251.355 597.504,247.983 598.073,251.137 598.641,250.105 599.209,245.049 599.778,246.504 600.346,242.428 600.914,241.664 601.483,238.984 602.051,240.696 602.619,239.405 603.188,241.153 603.756,239.673 604.325,240.088 604.893,241.708 605.461,241.372 606.03,239.81 606.598,241.065 607.166,240.526 607.735,243.217 608.303,243.67 608.871,243.762 609.44,246.007 610.008,245.245 610.576,245.403 611.145,245.623 611.713,246.853 612.281,245.705 612.85,244.639 613.418,243.894 613.986,246.073 614.555,247.166 615.123,248.969 615.691,247.615 616.26,247.434 616.828,248.487 617.396,247.401 617.965,247.42 618.533,245.121 619.102,245.125 619.67,244.148 620.238,244.252 620.807,242.942 621.375,244.052 621.943,244.042 622.512,243.891 623.08,243.615 623.648,244.647 624.217,243.495 624.785,241.443 625.353,240.613 625.922,239.518 626.49,239.468 627.058,238.779 627.627,240.002 628.195,241.213 628.763,240.16 629.332,243.294 629.9,244.312 630.468,244.002 631.037,243.712 631.605,243.64 632.173,245.377 632.742,243.774 633.31,244.592 633.879,244.12 634.447,244.878 635.015,240.563 635.584,239.605 636.152,237.752 636.72,236.957 637.289,234.959 637.857,236.184 638.425,237.481 638.994,236.659 639.562,233.751 640.13,234.085 640.699,236.673 641.267,237.021 641.835,238.297 642.404,237.327 642.972,237.21 643.54,237.17 644.109,234.329 644.677,235.941 645.245,234.186 645.814,231.689 646.382,232.157 646.951,233.553 647.519,235.018 648.087,236.237 648.656,237.464 649.224,237.662 649.792,237.843 650.361,236.456 650.929,236.918 651.497,238.174 652.066,237.167 652.634,239.469 653.202,238.411 653.771,239.523 654.339,237.669 654.907,237.906 655.476,239.048 656.044,240.082 656.612,238.875 657.181,236.721 657.749,237.72 658.317,239.109 658.886,236.864 659.454,236.886 660.022,237.971 660.591,237.161 661.159,237.176 661.728,238.319 662.296,237.303 662.864,238.322 663.433,236.067 664.001,234.292 664.569,235.521 665.138,234.833 665.706,237.246 666.274,237.062 666.843,237.038 667.411,235.278 667.979,236.52 668.548,235.656 669.116,236.745 669.684,234.837 670.253,234.704 670.821,232.874 671.389,235.178 671.958,235.19 672.526,232.251 673.094,230.412 673.663,231.007 674.231,230.633 674.799,231.206 675.368,233.721 675.936,237.022 676.505,236.92 677.073,238.019 677.641,238.882 678.21,238.712 678.778,240.68 679.346,239.533 679.915,239.286 680.483,239.229 681.051,239.092 681.62,236.709 682.188,238.843 682.756,239.628 683.325,240.263 683.893,238.879 684.461,239.545 685.03,239.17 685.598,238.997 686.166,239.696 686.735,239.334 687.303,239.181 687.871,238.779 688.44,237.494 689.008,238.347 689.577,238.026 690.145,235.664 690.713,234.422 691.282,235.232 691.85,234.1 692.418,232.974 692.987,231.978 693.555,232.176 694.123,232.355 694.692,230.313 695.26,231.469 695.828,230.689 696.397,231.22 696.965,231.288 697.533,230.255 698.102,229.439 698.67,228.925 699.238,229.352 699.807,226.763 700.375,228.567 700.943,229.288 701.512,230.774 702.08,232.239 702.648,232.499 703.217,232.504 703.785,229.739 704.354,229.248 704.922,231.59 705.49,231.882 706.059,230.424 706.627,229.858 707.195,229.418 707.764,230.934 708.332,230.294 708.9,229.577 709.469,231.225 710.037,231.585 710.605,232.905 711.174,233.083 711.742,233.253 712.31,232.322 712.879,230.191 713.447,229.679 714.015,231.1 714.584,232.423 715.152,232.763 715.72,234.916 716.289,234.101 716.857,235.399 717.425,236.051 717.994,236.153 718.562,236.056 719.131,233.995 719.699,233.91 720.267,232.934 720.836,232.073 721.404,232.574 721.972,232.651 722.541,230.571 723.109,231.91 723.677,231.98 724.246,230.253 724.814,230.652 725.382,229.849 725.951,230.275 726.519,230.34 727.087,231.583 727.656,232.751 728.224,234.082 728.792,234.05 729.361,233.114 729.929,234.489 730.497,233.494 731.066,233.845 731.634,236.872 732.203,237.852 732.771,237.645 733.339,239.552 733.908,240.296 734.476,240.874 735.044,239.464 735.613,238.895 736.181,238.479 736.749,238.195 737.318,237.945 737.886,236.743 738.454,237.546 739.023,237.327 739.591,238.05 740.159,236.691 740.728,235.362 741.296,234.28 741.864,233.363 742.433,235.324 743.001,234.903 743.569,232.692 744.138,232.829 744.706,232.01 745.274,231.22 745.843,231.368 746.411,231.394 746.98,232.44 747.548,232.492 748.116,233.689 748.685,232.687 749.253,234.718 749.821,233.566 750.39,231.366 750.958,232.717 751.526,232.744 752.095,232.723 752.663,232.898 753.231,232.932 753.8,234.106 754.368,230.959 754.936,230.033 755.505,230.541 756.073,228.581 756.641,226.036 757.21,225.882 757.778,223.312 758.346,224.081 758.915,223.734 759.483,224.342 760.052,226.188 760.62,227.006 761.188,228.654 761.757,228.113 762.325,229.635 762.893,229.073 763.462,231.602 764.03,232.768 764.598,233.024 765.167,233.125 765.735,234.31 766.303,235.205 766.872,236.151 767.44,237.312 768.008,239.297 768.577,239.869 769.145,242.59 769.713,243.009 770.282,239.558 770.85,240.248 771.418,239.818 771.987,239.374 772.555,238.947 773.123,238.611 773.692,238.163 774.26,237.658 774.829,237.229 775.397,233.862 775.965,234.676 776.534,233.518 777.102,234.546 777.67,232.257 778.239,232.219 778.807,233.172 779.375,232.34 779.944,232.166 780.512,234.595 781.08,235.405 781.649,236.072 782.217,235.805 782.785,235.825 783.354,236.492 783.922,234.227 784.49,231.979 785.059,231.952 785.627,232.968 786.195,234.904 786.764,235.895 787.332,237.616 787.9,237.163 788.469,236.792 789.037,236.521 789.606,235.231 790.174,233.131 790.742,233.032 791.311,235.088 791.879,234.723 792.447,234.367 793.016,234.026 793.584,230.646 794.152,231.459 794.721,233.55 795.289,231.247 795.857,231.053 796.426,230.958 796.994,231.997 797.562,231.886 798.131,232.972 798.699,232.897 799.267,232.523 799.836,231.525 800.404,229.284 800.972,228.158 801.541,228.285 802.109,231.522 802.678,231.457 803.246,230.393 803.814,229.27 804.383,226.237 804.951,224.536 805.519,225.909 806.088,226.485 806.656,228.106 807.224,229.581 807.793,230.574 808.361,229.75 808.929,230.89 809.498,230.82 810.066,229.821 810.634,226.62 811.203,226.998 811.771,227.555 812.339,227.901 812.908,229.344 813.476,228.588 814.044,229.887 814.613,230.167 815.181,230.231 815.749,230.465 816.318,230.605 816.886,231.663 817.455,231.854 818.023,231.942 818.591,231.111 819.16,231.283 819.728,235.436 820.296,237.291 820.865,239.066 821.433,236.456 822.001,236.293 822.57,235.148 823.138,236.017 823.706,235.541 824.275,235.422 824.843,235.398 825.411,233.877 825.98,233.669 826.548,231.242 827.116,233.251 827.685,233.374 828.253,232.444 828.821,231.374 829.39,229.28 829.958,229.672 830.526,229.756 831.095,228.95 831.663,229.127 832.232,229.123 832.8,229.401 833.368,230.484 833.937,230.866 834.505,231.897 835.073,232.999 835.642,232.007 836.21,231.954 836.778,233.095 837.347,234.04 837.915,234.057 838.483,233.886 839.052,232.666 839.62,233.513 840.188,234.452 840.757,238.419 841.325,237.837 841.893,237.405 842.462,237.1 843.03,236.82 843.598,236.453 844.167,235.025 844.735,231.731 845.304,231.783 845.872,230.66 846.44,228.68 847.009,228.907 847.577,230.044 848.145,231.32 848.714,232.464 849.282,232.586 849.85,230.539 850.419,230.754 850.987,231.821 851.555,228.842 852.124,228.943 852.692,229.98 853.26,231.198 853.829,231.332 854.397,232.308 854.965,231.189 855.534,231.328 856.102,231.383 856.67,228.235 857.239,228.46 857.807,230.677 858.375,231.716 858.944,229.742 859.512,229.626 860.081,229.716 860.649,231.883 861.217,230.891 861.786,228.863 862.354,230.117 862.922,229.202 863.491,229.379 864.059,228.52 864.627,229.768 865.196,228.957 865.764,228.995 866.332,227.037 866.901,226.195 867.469,225.502 868.037,224.839 868.606,226.194 869.174,227.782 869.742,228.062 870.311,228.429 870.879,227.487 871.447,226.807 872.016,227.006 872.584,227.513 873.152,228.8 873.721,230.077 874.289,232.294 874.858,231.354 875.426,232.396 875.994,231.432 876.563,230.505 877.131,230.722 877.699,232.084 878.268,230.833 878.836,232.896 879.404,231.965 879.973,232.07 880.541,232.045 881.109,234.237 881.678,231.822 882.246,231.918 882.814,230.974 883.383,231.001 883.951,234.021 884.519,235.132 885.088,233.826 885.656,233.575 886.224,233.72 886.793,232.575 887.361,232.564 887.93,234.684 888.498,233.469 889.066,234.595 889.635,235.237 890.203,235.135 890.771,233.966 891.34,233.854 891.908,233.528 892.476,233.447 893.045,234.262 893.613,233.03 894.181,231.937 894.75,232.052 895.318,231.996 895.886,232.867 896.455,231.771 897.023,232.92 897.591,235.819 898.16,235.552 898.728,235.183 899.296,232.679 899.865,231.529 900.433,230.408 901.001,229.231 901.57,231.351 902.138,232.359 902.707,232.187 903.275,232.324 903.843,231.091 904.412,230.905 904.98,232.011 905.548,230.624 906.117,228.739 906.685,227.828 907.253,228.242 907.822,226.411 908.39,228.723 908.958,229.073 909.527,230.257 910.095,229.403 910.663,229.693 911.232,229.709 911.8,227.694 912.368,228.033 912.937,230.355 913.505,228.579 914.073,231.04 914.642,230.126 915.21,231.133 915.779,230.205 916.347,231.585 916.915,230.616 917.484,230.612 918.052,233.802 918.62,233.86 919.189,234.736 919.757,234.492 920.325,235.371 920.894,233.914 921.462,232.759 922.03,232.664 922.599,234.476 923.167,235.224 923.735,234.918 924.304,232.803 924.872,232.635 925.44,230.302 926.009,230.285 926.577,231.565 927.145,231.44 927.714,232.149 928.282,233.019 928.85,232.953 929.419,233.029 929.987,233.791 930.556,235.531 931.124,236.402 931.692,234.836 932.261,235.595 932.829,232.215 933.397,231.096 933.966,228.855 934.534,228.941 935.102,227.04 935.671,228.513 936.239,228.641 936.807,229.986 937.376,229.955 937.944,231.006 938.512,231.904 939.081,230.875 939.649,228.781 940.217,228.947 940.786,228.121 941.354,224.169 941.922,225.57 942.491,229.202 943.059,229.349 943.627,229.51 944.196,228.639 944.764,230.042 945.333,230.342 945.901,229.434 946.469,228.479 947.038,228.817 947.606,230.101 948.174,232.403 948.743,231.247 949.311,232.223 949.879,235.141 950.448,234.893 951.016,235.835 951.584,235.555 952.153,233.442 952.721,233.146 953.289,232.053 953.858,232.194 954.426,232.117 954.994,234.117 955.563,231.842 956.131,232.801 956.699,230.688 957.268,230.85 957.836,231.823 958.405,231.851 958.973,231.634 959.541,231.833 960.11,230.527 960.678,232.661 961.246,231.644 961.815,233.751 962.383,232.609 962.951,231.572 963.52,232.547 964.088,231.511 964.656,231.3 965.225,231.067 965.793,232.161 966.361,231.098 966.93,232.161 967.498,230.974 968.066,231.848 968.635,236.042 969.203,235.673 969.771,233.294 970.34,233.077 970.908,232.799 971.476,232.693 972.045,234.586 972.613,232.16 973.182,232.898 973.75,229.454 974.318,229.494 974.887,229.357 975.455,228.338 976.023,225.587 976.592,226.051 977.16,227.201 977.728,226.142 978.297,226.497 978.865,226.582 979.433,226.743 980.002,228.131 980.57,227.548 981.138,228.73 981.707,228.948 982.275,228.052 982.843,228.291 983.412,228.404 983.98,230.574 984.548,230.507 985.117,232.604 985.685,231.445 986.253,229.513 986.822,230.796 987.39,229.874 987.959,229.985 988.527,229.096 989.095,227.229 989.664,226.625 990.232,225.871 990.8,223.158 991.369,223.596 991.937,227.253 992.505,229.77 993.074,231.199 993.642,232.238 994.21,231.062 994.779,231.205 995.347,230.267 995.915,230.345 996.484,231.591 997.052,230.413 997.62,229.703 998.189,231.95 998.757,230.935 999.325,231.015 999.894,230.909 1000.46,231.022 1001.03,231.31 1001.6,230.433 1002.17,230.536 1002.74,229.66 1003.3,228.807 1003.87,230.242 1004.44,231.307 1005.01,231.584 1005.58,232.894 1006.15,235.875 1006.71,236.415 1007.28,235.085 1007.85,232.86 1008.42,233.904 1008.99,234.597 1009.56,234.492 1010.12,235.254 1010.69,235.127 1011.26,234.72 1011.83,235.576 1012.4,235.28 1012.97,234.141 1013.53,231.93 1014.1,230.882 1014.67,229.85 1015.24,229.967 1015.81,228.864 1016.38,230.935 1016.94,230.981 1017.51,230.116 1018.08,230.191 1018.65,228.343 1019.22,230.552 1019.79,231.388 1020.35,232.328 1020.92,231.187 1021.49,231.161 1022.06,228.997 1022.63,230.058 1023.2,229.087 1023.76,230.364 1024.33,230.34 1024.9,227.409 1025.47,228.782 1026.04,229.095 1026.61,230.317 1027.17,231.371 1027.74,231.195 1028.31,230.776 1028.88,230.723 1029.45,230.681 1030.02,228.706 1030.58,228.738 1031.15,231.06 1031.72,231.112 1032.29,232.074 1032.86,233.861 1033.43,233.697 1033.99,235.301 1034.56,234.924 1035.13,234.891 1035.7,233.652 1036.27,233.479 1036.84,231.228 1037.4,231.237 1037.97,232.168 1038.54,233.984 1039.11,235.871 1039.68,235.797 1040.25,235.535 1040.81,236.158 1041.38,236.662 1041.95,235.384 1042.52,234.008 1043.09,232.851 1043.66,232.665 1044.22,233.483 1044.79,233.1 1045.36,232.966 1045.93,234.001 1046.5,233.884 1047.07,233.622 1047.63,233.361 1048.2,233.991 1048.77,234.534 1049.34,234.095 1049.91,233.624 1050.48,233.584 1051.05,232.359 1051.61,232.308 1052.18,233.225 1052.75,233.098 1053.32,232.913 1053.89,232.685 1054.46,233.77 1055.02,231.454 1055.59,231.297 1056.16,231.123 1056.73,232.187 1057.3,233.32 1057.87,231.269 1058.43,232.241 1059,232.169 1059.57,232.915 1060.14,231.59 1060.71,231.319 1061.28,231.239 1061.84,231.097 1062.41,230.048 1062.98,229.194 1063.55,229.072 1064.12,229.094 1064.69,228.089 1065.25,228.244 1065.82,227.288 1066.39,228.462 1066.96,227.396 1067.53,227.552 1068.1,226.842 1068.66,226.782 1069.23,226.037 1069.8,226.361 1070.37,229.627 1070.94,228.626 1071.51,228.924 1072.07,225.95 1072.64,228.356 1073.21,229.645 1073.78,229.956 1074.35,230.974 1074.92,228.807 1075.48,228.129 1076.05,228.401 1076.62,227.725 1077.19,228.051 1077.76,227.283 1078.33,228.551 1078.89,228.587 1079.46,228.817 1080.03,227.993 1080.6,229.136 1081.17,230.59 1081.74,231.503 1082.3,231.494 1082.87,232.487 1083.44,233.5 1084.01,232.192 1084.58,231.922 1085.15,232.85 1085.71,229.544 1086.28,229.679 1086.85,226.772 1087.42,224.122 1087.99,225.763 1088.56,227.19 1089.12,228.612 1089.69,231.909 1090.26,233.723 1090.83,233.494 1091.4,233.228 1091.97,234.084 1092.53,233.694 1093.1,233.283 1093.67,233.168 1094.24,234.023 1094.81,236.704 1095.38,234.39 1095.94,234.136 1096.51,234.982 1097.08,234.588 1097.65,233.369 1098.22,234.124 1098.79,229.79 1099.35,227.836 1099.92,227.071 1100.49,226.363 1101.06,225.527 1101.63,224.996 1102.2,225.686 1102.76,228.329 1103.33,230.547 1103.9,228.719 1104.47,226.013 1105.04,227.432 1105.61,227.621 1106.17,224.763 1106.74,223.846 1107.31,228.386 1107.88,232.89 1108.45,232.658 1109.02,230.546 1109.58,230.534 1110.15,232.575 1110.72,233.726 1111.29,236.496 1111.86,238.284 1112.43,237.929 1112.99,237.709 1113.56,237.183 1114.13,238.681 1114.7,238.131 1115.27,237.602 1115.84,237.919 1116.4,237.491 1116.97,237.74 1117.54,236.08 1118.11,232.701 1118.68,231.354 1119.25,231.45 1119.81,232.492 1120.38,232.505 1120.95,232.393 1121.52,233.455 1122.09,234.05 1122.66,234.809 1123.23,232.061 1123.79,233.059 1124.36,232.727 1124.93,232.385 1125.5,232.106 1126.07,229.957 1126.64,226.852 1127.2,227.08 1127.77,228.262 1128.34,226.435 1128.91,227.853 1129.48,229.183 1130.05,227.059 1130.61,227.292 1131.18,227.631 1131.75,229.023 1132.32,227.959 1132.89,230.121 1133.46,228.979 1134.02,230.247 1134.59,229.221 1135.16,227.025 1135.73,227.317 1136.3,226.659 1136.87,226.989 1137.43,226.187 1138,225.427 1138.57,223.685 1139.14,224.298 1139.71,225.816 1140.28,225.066 1140.84,228.578 1141.41,227.721 1141.98,230.186 1142.55,232.58 1143.12,231.476 1143.69,231.232 1144.25,230.244 1144.82,230.147 1145.39,230.163 1145.96,230.18 1146.53,230.323 1147.1,230.389 1147.66,231.619 1148.23,233.791 1148.8,232.587 1149.37,232.448 1149.94,233.499 1150.51,234.466 1151.07,234.182 1151.64,233.802 1152.21,233.473 1152.78,232.142 1153.35,231.881 1153.92,232.811 1154.48,233.745 1155.05,234.511 1155.62,233.07 1156.19,233.022 1156.76,232.904 1157.33,231.679 1157.89,232.643 1158.46,233.636 1159.03,235.652 1159.6,233.263 1160.17,232.945 1160.74,232.87 1161.3,231.753 1161.87,233.673 1162.44,233.593 1163.01,232.528 1163.58,231.659 1164.15,231.454 1164.71,231.666 1165.28,229.458 1165.85,231.6 1166.42,231.44 1166.99,231.179 1167.56,231.2 1168.12,230.998 1168.69,232.008 1169.26,232.718 1169.83,231.443 1170.4,232.264 1170.97,232.002 1171.53,230.984 1172.1,230.693 1172.67,229.612 1173.24,230.54 1173.81,231.557 1174.38,231.499 1174.94,230.121 1175.51,230.052 1176.08,231.217 1176.65,231.235 1177.22,231.242 1177.79,231.079 1178.35,231.209 1178.92,230.149 1179.49,231.292 1180.06,231.097 1180.63,230.744 1181.2,230.874 1181.76,230.814 1182.33,231.877 1182.9,230.786 1183.47,229.626 1184.04,230.663 1184.61,232.722 1185.17,233.715 1185.74,232.695 1186.31,231.363 1186.88,231.23 1187.45,232.276 1188.02,232.257 1188.58,233.218 1189.15,230.916 1189.72,230.675 1190.29,231.788 1190.86,231.658 1191.43,231.709 1192,231.648 1192.56,231.552 1193.13,231.609 1193.7,231.485 1194.27,230.444 1194.84,231.39 1195.41,232.482 1195.97,231.354 1196.54,232.496 1197.11,233.372 1197.68,234.283 1198.25,233.113 1198.82,229.779 1199.38,229.833 1199.95,230.848 1200.52,231.837 1201.09,233.862 1201.66,233.478 1202.23,230.082 1202.79,229.952 1203.36,228.063 1203.93,228.337 1204.5,224.423 1205.07,224.019 1205.64,226.712 1206.2,227.127 1206.77,225.321 1207.34,222.878 1207.91,221.455 1208.48,220.157 1209.05,219.895 1209.61,223.173 1210.18,221.557 1210.75,224.272 1211.32,224.955 1211.89,226.515 1212.46,226.961 1213.02,225.489 1213.59,225.82 1214.16,228.058 1214.73,228.386 1215.3,228.41 1215.87,227.44 1216.43,227.716 1217,226.77 1217.57,227.18 1218.14,226.559 1218.71,227.2 1219.28,227.615 1219.84,229.095 1220.41,227.426 1220.98,227.931 1221.55,232.299 1222.12,232.36 1222.69,231.155 1223.25,232.461 1223.82,231.48 1224.39,232.726 1224.96,232.7 1225.53,230.795 1226.1,229.879 1226.66,231.224 1227.23,233.436 1227.8,231.282 1228.37,231.467 1228.94,230.493 1229.51,232.67 1230.07,233.833 1230.64,233.833 1231.21,233.546 1231.78,234.472 1232.35,235.296 1232.92,234.933 1233.48,235.772 1234.05,238.767 1234.62,238.363 1235.19,238.027 1235.76,237.592 1236.33,237.272 1236.89,236.732 1237.46,237.557 1238.03,237.271 1238.6,237.097 1239.17,236.4 1239.74,236.164 1240.3,236.77 1240.87,234.312 1241.44,232.185 1242.01,230.951 1242.58,235.023 1243.15,232.514 1243.71,235.339 1244.28,233.036 1244.85,233.117 1245.42,234.125 1245.99,235.072 1246.56,231.574 1247.12,230.653 1247.69,228.634 1248.26,227.506 1248.83,229.895 1249.4,229.908 1249.97,231.05 1250.53,230.974 1251.1,231.975 1251.67,233.001 1252.24,233.974 1252.81,235.812 1253.38,236.717 1253.94,234.334 1254.51,235.093 1255.08,234.982 1255.65,234.793 1256.22,233.546 1256.79,232.396 1257.35,231.232 1257.92,232.102 1258.49,232.052 1259.06,231.884 1259.63,228.736 1260.2,225.634 1260.76,225.782 1261.33,225.762 1261.9,226.164 1262.47,226.407 1263.04,225.484 1263.61,225.948 1264.18,227.321 1264.74,224.485 1265.31,227.153 1265.88,228.185 1266.45,228.292 1267.02,227.513 1267.59,224.878 1268.15,224.063 1268.72,225.414 1269.29,225.578 1269.86,223.848 1270.43,223.178 1271,221.709 1271.56,222.423 1272.13,221.33 1272.7,223.311 1273.27,224.963 1273.84,224.283 1274.41,224.898 1274.97,225.54 1275.54,226.898 1276.11,227.016 1276.68,227.079 1277.25,224.301 1277.82,223.698 1278.38,224.395 1278.95,225.036 1279.52,225.568 1280.09,224.185 1280.66,224.006 1281.23,225.615 1281.79,226.124 1282.36,226.563 1282.93,225.924 1283.5,227.193 1284.07,227.393 1284.64,226.595 1285.2,228.253 1285.77,227.594 1286.34,225.917 1286.91,227.662 1287.48,227.129 1288.05,226.776 1288.61,226.425 1289.18,228.751 1289.75,230.106 1290.32,230.471 1290.89,230.758 1291.46,233.095 1292.02,232.264 1292.59,235.629 1293.16,235.519 1293.73,235.416 1294.3,233.37 1294.87,232.195 1295.43,231.522 1296,230.708 1296.57,228.953 1297.14,229.386 1297.71,230.735 1298.28,230.962 1298.84,231.276 1299.41,232.64 1299.98,232.746 1300.55,232.593 1301.12,232.587 1301.69,232.551 1302.25,233.533 1302.82,232.402 1303.39,235.638 1303.96,232.529 1304.53,235.742 1305.1,235.697 1305.66,235.614 1306.23,237.623 1306.8,240.365 1307.37,239.822 1307.94,240.396 1308.51,239.996 1309.07,240.582 1309.64,239.957 1310.21,239.505 1310.78,238.913 1311.35,239.496 1311.92,235.828 1312.48,234.293 1313.05,233.02 1313.62,232.862 1314.19,231.825 1314.76,233.048 1315.33,232.82 1315.89,234.553 1316.46,233.249 1317.03,234.09 1317.6,234.972 1318.17,235.81 1318.74,234.475 1319.3,235.118 1319.87,233.104 1320.44,232.815 1321.01,231.57 1321.58,232.457 1322.15,231.14 1322.71,231.215 1323.28,231.131 1323.85,232.18 1324.42,234.18 1324.99,236.976 1325.56,238.607 1326.12,239.016 1326.69,237.259 1327.26,236.883 1327.83,236.378 1328.4,233.6 1328.97,233.167 1329.53,233.155 1330.1,232.544 1330.67,231.304 1331.24,232.359 1331.81,230.302 1332.38,230.232 1332.94,231.164 1333.51,231.048 1334.08,227.772 1334.65,228.794 1335.22,229.007 1335.79,229.234 1336.36,229.35 1336.92,228.502 1337.49,229.788 1338.06,230.08 1338.63,230.028 1339.2,229.978 1339.77,229.974 1340.33,229.99 1340.9,230.115 1341.47,229.045 1342.04,230.312 1342.61,229.342 1343.18,228.48 1343.74,229.379 1344.31,229.537 1344.88,229.447 1345.45,228.461 1346.02,227.396 1346.59,226.419 1347.15,227.615 1347.72,228.96 1348.29,230.234 1348.86,232.389 1349.43,235.432 1350,237.116 1350.56,238.617 1351.13,238.1 1351.7,236.705 1352.27,233.288 1352.84,235.152 1353.41,234.707 1353.97,232.378 1354.54,232.911 1355.11,230.771 1355.68,231.579 1356.25,231.318 1356.82,232.32 1357.38,230.111 1357.95,230.21 1358.52,227.101 1359.09,227.332 1359.66,228.434 1360.23,229.479 1360.79,229.648 1361.36,230.738 1361.93,230.455 1362.5,230.59 1363.07,231.646 1363.64,230.447 1364.2,231.444 1364.77,232.286 1365.34,234.129 1365.91,233.721 1366.48,232.519 1367.05,232.354 1367.61,231.972 1368.18,231.918 1368.75,230.673 1369.32,229.639 1369.89,228.924 1370.46,227.795 1371.02,228.774 1371.59,228.921 1372.16,227.961 1372.73,228.119 1373.3,228.249 1373.87,232.47 1374.43,231.138 1375,234.401 1375.57,234.105 1376.14,232.753 1376.71,233.481 1377.28,232.318 1377.84,233.086 1378.41,228.736 1378.98,227.97 1379.55,227.348 1380.12,226.579 1380.69,226.885 1381.25,229.294 1381.82,229.298 1382.39,231.385 1382.96,231.426 1383.53,231.366 1384.1,230.014 1384.66,232.135 1385.23,231.892 1385.8,232.822 1386.37,231.54 1386.94,231.477 1387.51,231.396 1388.07,232.376 1388.64,232.061 1389.21,235.841 1389.78,236.604 1390.35,235.112 1390.92,235.898 1391.48,237.641 1392.05,236.912 1392.62,236.561 1393.19,234.81 1393.76,233.238 1394.33,231.79 1394.89,231.378 1395.46,230.373 1396.03,230.228 1396.6,230.208 1397.17,229.15 1397.74,228.003 1398.3,227.054 1398.87,227.114 1399.44,230.687 1400.01,230.706 1400.58,230.626 1401.15,230.586 1401.71,230.5 1402.28,228.396 1402.85,224.603 1403.42,224.106 1403.99,224.508 1404.56,224.915 1405.13,224.411 1405.69,224.924 1406.26,227.408 1406.83,226.67 1407.4,225.792 1407.97,225.238 1408.54,224.693 1409.1,226.187 1409.67,226.5 1410.24,226.728 1410.81,227.124 1411.38,229.415 1411.95,231.571 1412.51,232.49 1413.08,232.55 1413.65,233.66 1414.22,232.37 1414.79,231.368 1415.36,232.365 1415.92,232.31 1416.49,233.309 1417.06,234.394 1417.63,235.036 1418.2,235.671 1418.77,237.322 1419.33,236.881 1419.9,235.397 1420.47,235.082 1421.04,234.647 1421.61,234.046 1422.18,233.774 1422.74,233.501 1423.31,232.314 1423.88,231.98 1424.45,230.987 1425.02,230.882 1425.59,230.974 1426.15,232.947 1426.72,235.974 1427.29,234.394 1427.86,232.045 1428.43,232.675 1429,230.496 1429.56,230.51 1430.13,232.568 1430.7,232.43 1431.27,230.266 1431.84,229.093 1432.41,229.107 1432.97,230.062 1433.54,232.279 1434.11,230.135 1434.68,230.498 1435.25,230.45 1435.82,230.481 1436.38,232.587 1436.95,233.435 1437.52,233.226 1438.09,234.891 1438.66,233.265 1439.23,234.181 1439.79,233.744 1440.36,233.401 1440.93,233.029 1441.5,231.597 1442.07,231.48 1442.64,233.33 1443.2,232.971 1443.77,229.672 1444.34,226.527 1444.91,227.903 1445.48,226.081 1446.05,227.277 1446.61,227.357 1447.18,227.72 1447.75,228.559 1448.32,229.715 1448.89,226.555 1449.46,225.766 1450.02,227.164 1450.59,228.337 1451.16,228.512 1451.73,227.556 1452.3,225.658 1452.87,226.936 1453.43,226.263 1454,225.471 1454.57,224.917 1455.14,225.269 1455.71,227.749 1456.28,229.176 1456.84,228.136 1457.41,229.451 1457.98,229.517 1458.55,229.371 1459.12,226.391 1459.69,227.543 1460.25,227.803 1460.82,228.132 1461.39,226.162 1461.96,228.565 1462.53,227.782 1463.1,226.024 1463.66,228.533 1464.23,229.752 1464.8,228.788 1465.37,229.029 1465.94,226.145 1466.51,228.763 1467.07,227.807 1467.64,225.929 1468.21,226.324 1468.78,224.732 1469.35,226.35 1469.92,227.919 1470.48,228.161 1471.05,227.515 1471.62,227.818 1472.19,228.036 1472.76,228.34 1473.33,228.631 1473.89,228.997 1474.46,228.223 1475.03,230.828 1475.6,231.906 1476.17,229.902 1476.74,231.068 1477.31,233.247 1477.87,234.947 1478.44,235.028 1479.01,233.554 1479.58,233.442 1480.15,230.164 1480.72,229.084 1481.28,229.244 1481.85,228.3 1482.42,230.817 1482.99,230.94 1483.56,232.926 1484.13,235.061 1484.69,233.819 1485.26,234.56 1485.83,233.441 1486.4,232.245 1486.97,232.204 1487.54,232.156 1488.1,234.03 1488.67,233.907 1489.24,233.766 1489.81,234.696 1490.38,234.598 1490.95,232.402 1491.51,233.421 1492.08,230.133 1492.65,232.147 1493.22,233.975 1493.79,233.792 1494.36,234.782 1494.92,234.558 1495.49,235.279 1496.06,234.821 1496.63,233.662 1497.2,232.47 1497.77,232.29 1498.33,234.259 1498.9,235.082 1499.47,233.682 1500.04,231.629 1500.61,231.416 1501.18,233.391 1501.74,233.255 1502.31,234.186 1502.88,234.935 1503.45,232.729 1504.02,231.79 1504.59,231.667 1505.15,231.457 1505.72,231.294 1506.29,234.594 1506.86,234.486 1507.43,233.996 1508,233.774 1508.56,234.661 1509.13,235.394 1509.7,234.095 1510.27,233.866 1510.84,235.787 1511.41,236.298 1511.97,233.612 1512.54,233.198 1513.11,234.062 1513.68,233.733 1514.25,231.516 1514.82,232.388 1515.38,233.137 1515.95,233.046 1516.52,229.629 1517.09,230.592 1517.66,230.531 1518.23,232.245 1518.79,233.199 1519.36,233.15 1519.93,231.819 1520.5,231.838 1521.07,230.587 1521.64,228.498 1522.2,229.498 1522.77,231.488 1523.34,231.232 1523.91,229.967 1524.48,229.721 1525.05,230.95 1525.61,229.819 1526.18,229.745 1526.75,230.548 1527.32,231.51 1527.89,232.236 1528.46,233.136 1529.02,234.801 1529.59,234.213 1530.16,231.895 1530.73,229.7 1531.3,230.558 1531.87,234.373 1532.43,231.997 1533,230.633 1533.57,231.552 1534.14,231.145 1534.71,232.043 1535.28,233.901 1535.84,231.364 1536.41,233.288 1536.98,232.063 1537.55,228.866 1538.12,229.916 1538.69,227.418 1539.25,228.73 1539.82,229.886 1540.39,229.733 1540.96,230.119 1541.53,229.239 1542.1,230.19 1542.66,229.113 1543.23,229.037 1543.8,227.141 1544.37,227.391 1544.94,226.55 1545.51,227.893 1546.08,226.903 1546.64,226.943 1547.21,227.164 1547.78,227.399 1548.35,226.755 1548.92,226.07 1549.49,226.397 1550.05,225.803 1550.62,230.424 1551.19,230.556 1551.76,229.515 1552.33,229.286 1552.9,230.255 1553.46,229.337 1554.03,227.259 1554.6,231.62 1555.17,232.388 1555.74,231.173 1556.31,227.997 1556.87,228.282 1557.44,226.196 1558.01,226.496 1558.58,225.81 1559.15,226.197 1559.72,223.581 1560.28,223.097 1560.85,224.733 1561.42,224.253 1561.99,224.694 1562.56,224.027 1563.13,224.545 1563.69,224.056 1564.26,224.766 1564.83,225.349 1565.4,225.819 1565.97,226.132 1566.54,225.517 1567.1,224.894 1567.67,223.289 1568.24,223.056 1568.81,224.669 1569.38,225.311 1569.95,224.89 1570.51,223.375 1571.08,224.09 1571.65,221.599 1572.22,222.397 1572.79,222.126 1573.36,223.25 1573.92,224.815 1574.49,225.473 1575.06,226.998 1575.63,226.453 1576.2,230.285 1576.77,231.736 1577.33,232.935 1577.9,234.233 1578.47,234.259 1579.04,236.452 1579.61,237.4 1580.18,236.003 1580.74,236.906 1581.31,237.696 1581.88,235.218 1582.45,234.967 1583.02,234.906 1583.59,234.91 1584.15,234.901 1584.72,232.703 1585.29,232.767 1585.86,233.924 1586.43,232.894 1587,233.105 1587.56,233.053 1588.13,233.274 1588.7,234.347 1589.27,232.37 1589.84,234.465 1590.41,234.485 1590.97,232.298 1591.54,231.371 1592.11,231.224 1592.68,232.343 1593.25,230.323 1593.82,229.505 1594.38,229.68 1594.95,231.132 1595.52,230.132 1596.09,230.45 1596.66,228.634 1597.23,231.023 1597.79,232.249 1598.36,234.212 1598.93,234.076 1599.5,233.805 1600.07,234.601 1600.64,234.429 1601.2,234.464 1601.77,233.032 1602.34,232.983 1602.91,232.8 1603.48,230.71 1604.05,229.668 1604.61,230.854 1605.18,232.197 1605.75,230.121 1606.32,232.346 1606.89,231.408 1607.46,231.255 1608.02,230.357 1608.59,231.607 1609.16,231.95 1609.73,229.85 1610.3,228.937 1610.87,230.234 1611.43,231.336 1612,231.363 1612.57,233.537 1613.14,233.324 1613.71,232.074 1614.28,231.885 1614.84,233.933 1615.41,234.985 1615.98,233.528 1616.55,235.348 1617.12,234.08 1617.69,232.964 1618.26,233.966 1618.82,233.946 1619.39,235.671 1619.96,236.35 1620.53,236.09 1621.1,236.732 1621.67,237.483 1622.23,236.999 1622.8,236.464 1623.37,237.289 1623.94,238.916 1624.51,238.548 1625.08,236.099 1625.64,232.784 1626.21,234.776 1626.78,233.329 1627.35,233.405 1627.92,232.116 1628.49,232.019 1629.05,231.854 1629.62,229.676 1630.19,230.045 1630.76,230.096 1631.33,228.907 1631.9,230.209 1632.46,229.221 1633.03,229.41 1633.6,228.494 1634.17,228.594 1634.74,227.77 1635.31,227.094 1635.87,229.416 1636.44,229.495 1637.01,229.876 1637.58,227.913 1638.15,228.156 1638.72,228.214 1639.28,229.345 1639.85,229.485 1640.42,230.557 1640.99,230.888 1641.56,231.019 1642.13,227.102 1642.69,227.407 1643.26,228.748 1643.83,226.973 1644.4,228.445 1644.97,227.792 1645.54,229.187 1646.1,230.261 1646.67,231.318 1647.24,232.098 1647.81,233.074 1648.38,235.398 1648.95,234.919 1649.51,233.413 1650.08,231.279 1650.65,232.294 1651.22,231.237 1651.79,231.287 1652.36,234.448 1652.92,235.07 1653.49,233.914 1654.06,234.694 1654.63,236.533 1655.2,235.941 1655.77,238.615 1656.33,237.082 1656.9,238.794 1657.47,238.314 1658.04,235.639 1658.61,236.569 1659.18,236.13 1659.74,235.695 1660.31,236.654 1660.88,236.124 1661.45,235.464 1662.02,233.062 1662.59,232.83 1663.15,231.87 1663.72,231.639 1664.29,230.452 1664.86,230.323 1665.43,230.129 1666,231.853 1666.56,232.885 1667.13,232.637 1667.7,232.581 1668.27,232.385 1668.84,231.01 1669.41,229.884 1669.97,231.074 1670.54,230.853 1671.11,232.752 1671.68,231.465 1672.25,229.243 1672.82,228.121 1673.38,230.154 1673.95,229.086 1674.52,229.153 1675.09,229.06 1675.66,230.053 1676.23,226.707 1676.79,227.061 1677.36,229.189 1677.93,229.171 1678.5,233.263 1679.07,234.049 1679.64,232.809 1680.2,233.423 1680.77,232.188 1681.34,234.124 1681.91,234.948 1682.48,235.523 1683.05,236.083 1683.61,236.706 1684.18,235.953 1684.75,235.517 1685.32,235.099 1685.89,234.644 1686.46,236.265 1687.02,233.777 1687.59,234.502 1688.16,231.906 1688.73,231.823 1689.3,232.693 1689.87,231.292 1690.44,232.22 1691,230.995 1691.57,229.962 1692.14,229.963 1692.71,230.797 1693.28,231.898 1693.85,231.73 1694.41,230.221 1694.98,227.805 1695.55,226.749 1696.12,226.793 1696.69,226.807 1697.26,227.969 1697.82,224.935 1698.39,226.388 1698.96,225.617 1699.53,223.569 1700.1,226.029 1700.67,226.122 1701.23,225.483 1701.8,224.685 1702.37,226.091 1702.94,228.427 1703.51,228.502 1704.08,229.475 1704.64,228.472 1705.21,229.579 1705.78,229.484 1706.35,230.486 1706.92,229.384 1707.49,230.201 1708.05,231.158 1708.62,230.105 1709.19,229.126 1709.76,230.249 1710.33,230.195 1710.9,234.347 1711.46,233.009 1712.03,232.651 1712.6,231.295 1713.17,230.008 1713.74,229.978 1714.31,229.979 1714.87,229.025 1715.44,228.139 1716.01,227.279 1716.58,228.452 1717.15,228.605 1717.72,228.525 1718.28,228.651 1718.85,226.508 1719.42,228.851 1719.99,228.982 1720.56,228.938 1721.13,227.888 1721.69,227.944 1722.26,226.337 1722.83,227.638 1723.4,228.611 1723.97,228.803 1724.54,227.83 1725.1,226.908 1725.67,229.517 1726.24,229.547 1726.81,228.752 1727.38,229.877 1727.95,229.955 1728.51,229.998 1729.08,229.979 1729.65,229.956 1730.22,231.218 1730.79,231.44 1731.36,228.664 1731.92,228.976 1732.49,230.123 1733.06,229.293 1733.63,229.584 1734.2,229.743 1734.77,228.863 1735.33,229.121 1735.9,230.414 1736.47,229.325 1737.04,230.546 1737.61,231.758 1738.18,231.836 1738.74,232.892 1739.31,233.938 1739.88,231.774 1740.45,233.661 1741.02,231.155 1741.59,230.952 1742.15,228.789 1742.72,229.911 1743.29,228.141 1743.86,230.234 1744.43,230.161 1745,229.297 1745.56,230.249 1746.13,231.266 1746.7,233.297 1747.27,232.213 1747.84,233.265 1748.41,231.029 1748.97,233.865 1749.54,232.733 1750.11,230.74 1750.68,229.642 1751.25,229.571 1751.82,229.548 1752.38,228.586 1752.95,228.702 1753.52,230.093 1754.09,229.072 1754.66,229.227 1755.23,228.291 1755.79,227.481 1756.36,225.708 1756.93,225.962 1757.5,227.215 1758.07,226.405 1758.64,227.923 1759.21,227.121 1759.77,228.558 1760.34,226.602 1760.91,226.05 1761.48,225.3 1762.05,226.635 1762.62,228.133 1763.18,229.364 1763.75,229.46 1764.32,227.52 1764.89,228.991 1765.46,229.958 1766.03,231.369 1766.59,230.205 1767.16,227.321 1767.73,228.751 1768.3,229.249 1768.87,229.573 1769.44,229.711 1770,228.983 1770.57,229.226 1771.14,230.504 1771.71,230.727 1772.28,229.843 1772.85,227.874 1773.41,227.273 1773.98,228.734 1774.55,228.941 1775.12,228.307 1775.69,227.731 1776.26,228.131 1776.82,228.335 1777.39,227.438 1777.96,227.78 1778.53,223.987 1779.1,224.677 1779.67,226.392 1780.23,228.721 1780.8,229.101 1781.37,231.563 1781.94,232.624 1782.51,233.601 1783.08,233.605 1783.64,232.463 1784.21,234.696 1784.78,232.508 1785.35,234.591 1785.92,234.316 1786.49,234.273 1787.05,235.24 1787.62,236.3 1788.19,238.115 1788.76,237.745 1789.33,236.26 1789.9,236.047 1790.46,233.867 1791.03,232.714 1791.6,232.562 1792.17,233.446 1792.74,234.479 1793.31,235.096 1793.87,236.86 1794.44,237.531 1795.01,238.944 1795.58,237.505 1796.15,238.341 1796.72,237.921 1797.28,236.562 1797.85,236.307 1798.42,235.957 1798.99,234.611 1799.56,235.149 1800.13,233.949 1800.69,233.763 1801.26,233.531 1801.83,233.192 1802.4,232.095 1802.97,230.795 1803.54,232.001 1804.1,231.118 1804.67,229.051 1805.24,231.268 1805.81,232.099 1806.38,230.72 1806.95,230.611 1807.51,231.593 1808.08,233.321 1808.65,233.218 1809.22,231.252 1809.79,231.181 1810.36,230.152 1810.92,232.054 1811.49,233.11 1812.06,230.967 1812.63,230.838 1813.2,228.812 1813.77,226.885 1814.33,228.209 1814.9,229.246 1815.47,229.264 1816.04,230.273 1816.61,231.186 1817.18,231.189 1817.74,231.188 1818.31,232.034 1818.88,232.844 1819.45,233.746 1820.02,234.495 1820.59,233.106 1821.15,232.861 1821.72,230.952 1822.29,231.033 1822.86,231.08 1823.43,229.054 1824,229.089 1824.56,231.33 1825.13,231.26 1825.7,231.394 1826.27,232.322 1826.84,230.959 1827.41,232.003 1827.97,232.768 1828.54,232.813 1829.11,232.746 1829.68,232.409 1830.25,230.015 1830.82,228.906 1831.39,229.261 1831.95,231.344 1832.52,229.278 1833.09,229.269 1833.66,229.36 1834.23,230.567 1834.8,229.459 1835.36,229.328 1835.93,229.281 1836.5,229.374 1837.07,229.228 1837.64,227.336 1838.21,227.559 1838.77,225.856 1839.34,227.349 1839.91,226.493 1840.48,226.847 1841.05,227.033 1841.62,227.354 1842.18,227.756 1842.75,228.91 1843.32,227.037 1843.89,228.471 1844.46,229.606 1845.03,226.743 1845.59,226.135 1846.16,226.267 1846.73,224.634 1847.3,226.202 1847.87,227.32 1848.44,230.664 1849,232.935 1849.57,233.739 1850.14,234.687 1850.71,236.539 1851.28,236.107 1851.85,235.603 1852.41,234.351 1852.98,233.093 1853.55,232.948 1854.12,232.846 1854.69,232.65 1855.26,235.804 1855.82,237.317 1856.39,236.94 1856.96,236.401 1857.53,236.929 1858.1,238.493 1858.67,236.889 1859.23,236.416 1859.8,235.962 1860.37,236.785 1860.94,236.158 1861.51,236.744 1862.08,235.091 1862.64,235.904 1863.21,233.326 1863.78,235.065 1864.35,235.652 1864.92,234.009 1865.49,234.551 1866.05,235.21 1866.62,234.862 1867.19,234.542 1867.76,233.451 1868.33,231.283 1868.9,231.234 1869.46,233.074 1870.03,229.875 1870.6,227.067 1871.17,228.293 1871.74,229.068 1872.31,229.988 1872.87,230.862 1873.44,231.753 1874.01,230.624 1874.58,228.307 1875.15,226.326 1875.72,225.57 1876.28,225.876 1876.85,226.304 1877.42,226.485 1877.99,225.656 1878.56,224.877 1879.13,226.025 1879.69,227.192 1880.26,224.146 1880.83,224.288 1881.4,225.654 1881.97,227.071 1882.54,226.254 1883.1,227.757 1883.67,227.839 1884.24,229.008 1884.81,229.156 1885.38,230.081 1885.95,228.057 1886.51,231.533 1887.08,231.385 1887.65,231.485 1888.22,232.403 1888.79,232.276 1889.36,231.118 1889.92,232.12 1890.49,231.96 1891.06,231.762 1891.63,232.78 1892.2,230.454 1892.77,230.805 1893.33,229.856 1893.9,231.198 1894.47,231.158 1895.04,229.824 1895.61,230.014 1896.18,230.095 1896.74,229.874 1897.31,234.143 1897.88,233.531 1898.45,234.543 1899.02,234.239 1899.59,233.965 1900.16,232.436 1900.72,231.187 1901.29,231.021 1901.86,229.93 1902.43,230.885 1903,229.819 1903.57,228.735 1904.13,225.73 1904.7,225.217 1905.27,224.34 1905.84,224.74 1906.41,224.082 1906.98,224.66 1907.54,223.044 1908.11,222.52 1908.68,223.126 1909.25,221.393 1909.82,222.035 1910.39,224.792 1910.95,225.129 1911.52,227.483 1912.09,227.989 1912.66,229.402 1913.23,229.565 1913.8,231.855 1914.36,229.952 1914.93,230.126 1915.5,230.189 1916.07,229.486 1916.64,229.55 1917.21,233.664 1917.77,235.588 1918.34,236.209 1918.91,235.903 1919.48,231.347 1920.05,231.515 1920.62,231.478 1921.18,232.532 1921.75,233.431 1922.32,231.512 1922.89,230.597 1923.46,230.377 1924.03,229.488 1924.59,228.775 1925.16,229.123 1925.73,228.369 1926.3,227.66 1926.87,227.073 1927.44,230.467 1928,230.571 1928.57,232.94 1929.14,236.046 1929.71,235.587 1930.28,234.171 1930.85,234.739 1931.41,232.507 1931.98,231.475 1932.55,232.588 1933.12,230.728 1933.69,233.975 1934.26,233.877 1934.82,232.579 1935.39,232.445 1935.96,231.66 1936.53,232.553 1937.1,233.561 1937.67,233.417 1938.23,234.24 1938.8,233.872 1939.37,233.511 1939.94,231.466 1940.51,229.471 1941.08,231.646 1941.64,232.491 1942.21,231.215 1942.78,232.403 1943.35,231.18 1943.92,230.832 1944.49,229.594 1945.05,228.551 1945.62,227.685 1946.19,229.943 1946.76,229.956 1947.33,233.037 1947.9,234.029 1948.46,233.044 1949.03,231.883 1949.6,228.652 1950.17,228.897 1950.74,229.983 1951.31,230.001 1951.87,228.89 1952.44,229.096 1953.01,229.217 1953.58,230.437 1954.15,228.422 1954.72,227.555 1955.28,227.147 1955.85,227.659 1956.42,230.266 1956.99,227.389 1957.56,228.833 1958.13,231.12 1958.69,232.245 1959.26,232.229 1959.83,230.915 1960.4,233.986 1960.97,236.891 1961.54,235.364 1962.1,238.209 1962.67,241.8 1963.24,241.106 1963.81,240.199 1964.38,240.394 1964.95,238.795 1965.51,237.079 1966.08,236.629 1966.65,237.056 1967.22,235.211 1967.79,235.893 1968.36,235.487 1968.92,236.032 1969.49,234.546 1970.06,237.638 1970.63,238.181 1971.2,238.545 1971.77,238.032 1972.34,237.447 1972.9,234.579 1973.47,234.287 1974.04,234.833 1974.61,234.23 1975.18,233.773 1975.75,231.367 1976.31,232.247 1976.88,232.987 1977.45,232.623 1978.02,234.525 1978.59,233.077 1979.16,232.683 1979.72,234.494 1980.29,232.869 1980.86,230.608 1981.43,230.486 1982,230.434 1982.57,228.337 1983.13,228.274 1983.7,228.225 1984.27,227.082 1984.84,226.049 1985.41,225.301 1985.98,226.743 1986.54,225.838 1987.11,226.117 1987.68,227.462 1988.25,226.697 1988.82,226.06 1989.39,225.3 1989.95,227.509 1990.52,228.797 1991.09,228.749 1991.66,229.674 1992.23,228.81 1992.8,227.808 1993.36,228.153 1993.93,229.331 1994.5,230.506 1995.07,230.447 1995.64,230.286 1996.21,226.936 1996.77,226.132 1997.34,226.649 1997.91,228.816 1998.48,228.019 1999.05,228.236 1999.62,229.308 2000.18,228.329 2000.75,229.602 2001.32,229.828 2001.89,231.938 2002.46,231.951 2003.03,231.632 2003.59,232.742 2004.16,233.659 2004.73,233.379 2005.3,234.203 2005.87,231.824 2006.44,230.711 2007,233.786 2007.57,232.367 2008.14,232.003 2008.71,233.025 2009.28,232.739 2009.85,232.68 2010.41,232.408 2010.98,233.066 2011.55,232.731 2012.12,233.52 2012.69,235.312 2013.26,235.012 2013.82,231.583 2014.39,232.789 2014.96,232.544 2015.53,231.178 2016.1,227.984 2016.67,229.08 2017.23,229.118 2017.8,228.047 2018.37,227.013 2018.94,228.305 2019.51,227.449 2020.08,227.654 2020.64,229.8 2021.21,229.095 2021.78,230.303 2022.35,231.428 2022.92,232.317 2023.49,232.162 2024.05,228.915 2024.62,227.156 2025.19,227.367 2025.76,226.591 2026.33,226.77 2026.9,226.821 2027.46,228.146 2028.03,228.369 2028.6,230.567 2029.17,229.459 2029.74,230.554 2030.31,229.799 2030.87,230.752 2031.44,231.692 2032.01,230.514 2032.58,231.437 2033.15,231.396 2033.72,231.512 2034.28,231.588 2034.85,229.409 2035.42,229.515 2035.99,229.545 2036.56,227.569 2037.13,227.859 2037.69,227.831 2038.26,226.3 2038.83,223.392 2039.4,221.892 2039.97,222.468 2040.54,224.147 2041.11,224.561 2041.67,228.075 2042.24,228.289 2042.81,228.621 2043.38,226.769 2043.95,226.163 2044.52,226.661 2045.08,226.126 2045.65,226.302 2046.22,227.691 2046.79,227.906 2047.36,228.187 2047.93,227.562 2048.49,226.912 2049.06,226.233 2049.63,226.813 2050.2,225.162 2050.77,224.571 2051.34,225.15 2051.9,225.654 2052.47,226.212 2053.04,228.729 2053.61,230.219 2054.18,231.414 2054.75,232.46 2055.31,233.517 2055.88,235.362 2056.45,235.085 2057.02,233.964 2057.59,231.851 2058.16,232.979 2058.72,232.754 2059.29,232.462 2059.86,232.44 2060.43,234.653 2061,234.284 2061.57,236.152 2062.13,234.823 2062.7,235.379 2063.27,234.897 2063.84,237.893 2064.41,237.531 2064.98,237.259 2065.54,238.094 2066.11,236.963 2066.68,238.284 2067.25,237.713 2067.82,237.216 2068.39,236.588 2068.95,236.959 2069.52,236.533 2070.09,237.055 2070.66,236.465 2071.23,234.014 2071.8,229.543 2072.36,227.648 2072.93,226.548 2073.5,224.647 2074.07,222.894 2074.64,224.447 2075.21,224.817 2075.77,225.166 2076.34,226.612 2076.91,227.017 2077.48,228.484 2078.05,230.867 2078.62,229.852 2079.18,232.246 2079.75,232.255 2080.32,231.091 2080.89,230.47 2081.46,230.501 2082.03,231.457 2082.59,230.336 2083.16,231.55 2083.73,231.638 2084.3,232.889 2084.87,231.75 2085.44,231.741 2086,231.923 2086.57,234.06 2087.14,231.782 2087.71,231.521 2088.28,230.17 2088.85,230.064 2089.41,229.35 2089.98,228.657 2090.55,228.721 2091.12,228.764 2091.69,230.771 2092.26,231.778 2092.82,230.797 2093.39,230.878 2093.96,229.786 2094.53,227.569 2095.1,230.6 2095.67,228.593 2096.23,228.618 2096.8,228.831 2097.37,231.097 2097.94,230.171 2098.51,229.398 2099.08,229.544 2099.64,227.703 2100.21,230.019 2100.78,231.063 2101.35,230.181 2101.92,230.619 2102.49,229.562 2103.05,230.674 2103.62,229.536 2104.19,228.725 2104.76,229.092 2105.33,230.376 2105.9,228.348 2106.46,228.482 2107.03,228.578 2107.6,229.764 2108.17,232.766 2108.74,232.707 2109.31,232.673 2109.87,233.681 2110.44,232.373 2111.01,234.253 2111.58,236.045 2112.15,234.458 2112.72,233.27 2113.29,234.12 2113.85,233.914 2114.42,230.803 2114.99,231.078 2115.56,231.066 2116.13,231.223 2116.7,231.124 2117.26,231.182 2117.83,232.455 2118.4,232.357 2118.97,232.19 2119.54,235.29 2120.11,236.939 2120.67,236.773 2121.24,236.788 2121.81,234.367 2122.38,236.104 2122.95,234.631 2123.52,235.49 2124.08,234.348 2124.65,236.236 2125.22,236.877 2125.79,237.155 2126.36,234.53 2126.93,235.516 2127.49,234.127 2128.06,234.776 2128.63,229.541 2129.2,230.686 2129.77,231.808 2130.34,231.892 2130.9,232.912 2131.47,233.631 2132.04,233.428 2132.61,233.084 2133.18,233.099 2133.75,234.093 2134.31,232.87 2134.88,231.583 2135.45,231.276 2136.02,231.969 2136.59,232.549 2137.16,233.431 2137.72,232.142 2138.29,232.086 2138.86,231.83 2139.43,231.923 2140,230.909 2140.57,230.796 2141.13,229.694 2141.7,228.53 2142.27,227.612 2142.84,227.752 2143.41,227.728 2143.98,229.734 2144.54,226.66 2145.11,229.168 2145.68,231.307 2146.25,229.06 2146.82,228.769 2147.39,228.979 2147.95,228.983 2148.52,227.971 2149.09,225.825 2149.66,226.005 2150.23,227.359 2150.8,226.456 2151.36,227.938 2151.93,228.181 2152.5,227.22 2153.07,226.432 2153.64,225.557 2154.21,224.904 2154.77,225.251 2155.34,223.691 2155.91,226.33 2156.48,225.454 2157.05,226.713 2157.62,229.137 2158.18,229.375 2158.75,229.45 2159.32,230.554 2159.89,228.517 \"/>\n<path clip-path=\"url(#clip280)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip280)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip280)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip280)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip280)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip280)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.031 ± 0.024\n  with uncertainty of ± 0.002155513452605973\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01866 ± (0.00388068, 0.00431444) (MC)\n  95% confidence interval: [-4.0268, -4.01085]) (MC)\n  linear error propagation: -4.01923 ± 0.00409336\n  |δ_y| = |0.00274497| (≤ 0.1 for normal approx)\n  Blocking successful with 15 blocks after 7 transformations (k = 8).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.018662201962396, val_l = 0.008134813936076846, val_u = 0.007816055549670686)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip310\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip310)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip311\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip310)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip312\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1151.51 2211.02,1151.51 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1006.45 2211.02,1006.45 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,861.399 2211.02,861.399 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,716.345 2211.02,716.345 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,571.29 2211.02,571.29 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,426.236 2211.02,426.236 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,281.182 2211.02,281.182 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1151.51 365.751,1151.51 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1006.45 365.751,1006.45 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,861.399 365.751,861.399 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,716.345 365.751,716.345 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,571.29 365.751,571.29 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,426.236 365.751,426.236 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,281.182 365.751,281.182 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M298.909 1137.31 Q295.298 1137.31 293.469 1140.87 Q291.664 1144.41 291.664 1151.54 Q291.664 1158.65 293.469 1162.21 Q295.298 1165.76 298.909 1165.76 Q302.543 1165.76 304.349 1162.21 Q306.177 1158.65 306.177 1151.54 Q306.177 1144.41 304.349 1140.87 Q302.543 1137.31 298.909 1137.31 M298.909 1133.6 Q304.719 1133.6 307.775 1138.21 Q310.853 1142.79 310.853 1151.54 Q310.853 1160.27 307.775 1164.88 Q304.719 1169.46 298.909 1169.46 Q293.099 1169.46 290.02 1164.88 Q286.964 1160.27 286.964 1151.54 Q286.964 1142.79 290.02 1138.21 Q293.099 1133.6 298.909 1133.6 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M259.557 1019.8 L267.196 1019.8 L267.196 993.432 L258.886 995.099 L258.886 990.84 L267.15 989.173 L271.826 989.173 L271.826 1019.8 L279.465 1019.8 L279.465 1023.73 L259.557 1023.73 L259.557 1019.8 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M298.909 992.252 Q295.298 992.252 293.469 995.817 Q291.664 999.358 291.664 1006.49 Q291.664 1013.59 293.469 1017.16 Q295.298 1020.7 298.909 1020.7 Q302.543 1020.7 304.349 1017.16 Q306.177 1013.59 306.177 1006.49 Q306.177 999.358 304.349 995.817 Q302.543 992.252 298.909 992.252 M298.909 988.548 Q304.719 988.548 307.775 993.155 Q310.853 997.738 310.853 1006.49 Q310.853 1015.21 307.775 1019.82 Q304.719 1024.4 298.909 1024.4 Q293.099 1024.4 290.02 1019.82 Q286.964 1015.21 286.964 1006.49 Q286.964 997.738 290.02 993.155 Q293.099 988.548 298.909 988.548 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M262.775 874.744 L279.094 874.744 L279.094 878.679 L257.15 878.679 L257.15 874.744 Q259.812 871.989 264.395 867.359 Q269.002 862.707 270.182 861.364 Q272.428 858.841 273.307 857.105 Q274.21 855.346 274.21 853.656 Q274.21 850.901 272.266 849.165 Q270.344 847.429 267.242 847.429 Q265.043 847.429 262.59 848.193 Q260.159 848.957 257.381 850.508 L257.381 845.786 Q260.205 844.651 262.659 844.073 Q265.113 843.494 267.15 843.494 Q272.52 843.494 275.715 846.179 Q278.909 848.864 278.909 853.355 Q278.909 855.485 278.099 857.406 Q277.312 859.304 275.205 861.897 Q274.627 862.568 271.525 865.785 Q268.423 868.98 262.775 874.744 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M298.909 847.198 Q295.298 847.198 293.469 850.762 Q291.664 854.304 291.664 861.434 Q291.664 868.54 293.469 872.105 Q295.298 875.646 298.909 875.646 Q302.543 875.646 304.349 872.105 Q306.177 868.54 306.177 861.434 Q306.177 854.304 304.349 850.762 Q302.543 847.198 298.909 847.198 M298.909 843.494 Q304.719 843.494 307.775 848.1 Q310.853 852.684 310.853 861.434 Q310.853 870.16 307.775 874.767 Q304.719 879.35 298.909 879.35 Q293.099 879.35 290.02 874.767 Q286.964 870.16 286.964 861.434 Q286.964 852.684 290.02 848.1 Q293.099 843.494 298.909 843.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M272.914 714.99 Q276.27 715.708 278.145 717.977 Q280.043 720.245 280.043 723.578 Q280.043 728.694 276.525 731.495 Q273.006 734.296 266.525 734.296 Q264.349 734.296 262.034 733.856 Q259.742 733.439 257.289 732.583 L257.289 728.069 Q259.233 729.203 261.548 729.782 Q263.863 730.361 266.386 730.361 Q270.784 730.361 273.076 728.625 Q275.39 726.889 275.39 723.578 Q275.39 720.523 273.238 718.81 Q271.108 717.074 267.289 717.074 L263.261 717.074 L263.261 713.231 L267.474 713.231 Q270.923 713.231 272.752 711.865 Q274.58 710.477 274.58 707.884 Q274.58 705.222 272.682 703.81 Q270.807 702.375 267.289 702.375 Q265.367 702.375 263.168 702.791 Q260.969 703.208 258.33 704.088 L258.33 699.921 Q260.992 699.18 263.307 698.81 Q265.645 698.44 267.705 698.44 Q273.029 698.44 276.131 700.87 Q279.233 703.278 279.233 707.398 Q279.233 710.268 277.59 712.259 Q275.946 714.227 272.914 714.99 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M298.909 702.143 Q295.298 702.143 293.469 705.708 Q291.664 709.25 291.664 716.379 Q291.664 723.486 293.469 727.051 Q295.298 730.592 298.909 730.592 Q302.543 730.592 304.349 727.051 Q306.177 723.486 306.177 716.379 Q306.177 709.25 304.349 705.708 Q302.543 702.143 298.909 702.143 M298.909 698.44 Q304.719 698.44 307.775 703.046 Q310.853 707.629 310.853 716.379 Q310.853 725.106 307.775 729.713 Q304.719 734.296 298.909 734.296 Q293.099 734.296 290.02 729.713 Q286.964 725.106 286.964 716.379 Q286.964 707.629 290.02 703.046 Q293.099 698.44 298.909 698.44 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M271.594 558.084 L259.789 576.533 L271.594 576.533 L271.594 558.084 M270.367 554.01 L276.247 554.01 L276.247 576.533 L281.177 576.533 L281.177 580.422 L276.247 580.422 L276.247 588.57 L271.594 588.57 L271.594 580.422 L255.992 580.422 L255.992 575.908 L270.367 554.01 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M298.909 557.089 Q295.298 557.089 293.469 560.654 Q291.664 564.195 291.664 571.325 Q291.664 578.432 293.469 581.996 Q295.298 585.538 298.909 585.538 Q302.543 585.538 304.349 581.996 Q306.177 578.432 306.177 571.325 Q306.177 564.195 304.349 560.654 Q302.543 557.089 298.909 557.089 M298.909 553.385 Q304.719 553.385 307.775 557.992 Q310.853 562.575 310.853 571.325 Q310.853 580.052 307.775 584.658 Q304.719 589.242 298.909 589.242 Q293.099 589.242 290.02 584.658 Q286.964 580.052 286.964 571.325 Q286.964 562.575 290.02 557.992 Q293.099 553.385 298.909 553.385 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M258.793 408.956 L277.15 408.956 L277.15 412.891 L263.076 412.891 L263.076 421.363 Q264.094 421.016 265.113 420.854 Q266.131 420.669 267.15 420.669 Q272.937 420.669 276.316 423.84 Q279.696 427.012 279.696 432.428 Q279.696 438.007 276.224 441.109 Q272.752 444.187 266.432 444.187 Q264.256 444.187 261.988 443.817 Q259.742 443.447 257.335 442.706 L257.335 438.007 Q259.418 439.141 261.641 439.697 Q263.863 440.252 266.34 440.252 Q270.344 440.252 272.682 438.146 Q275.02 436.039 275.02 432.428 Q275.02 428.817 272.682 426.711 Q270.344 424.604 266.34 424.604 Q264.465 424.604 262.59 425.021 Q260.738 425.437 258.793 426.317 L258.793 408.956 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M298.909 412.035 Q295.298 412.035 293.469 415.6 Q291.664 419.141 291.664 426.271 Q291.664 433.377 293.469 436.942 Q295.298 440.484 298.909 440.484 Q302.543 440.484 304.349 436.942 Q306.177 433.377 306.177 426.271 Q306.177 419.141 304.349 415.6 Q302.543 412.035 298.909 412.035 M298.909 408.331 Q304.719 408.331 307.775 412.938 Q310.853 417.521 310.853 426.271 Q310.853 434.998 307.775 439.604 Q304.719 444.187 298.909 444.187 Q293.099 444.187 290.02 439.604 Q286.964 434.998 286.964 426.271 Q286.964 417.521 290.02 412.938 Q293.099 408.331 298.909 408.331 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M269.326 279.318 Q266.178 279.318 264.326 281.471 Q262.497 283.624 262.497 287.374 Q262.497 291.101 264.326 293.277 Q266.178 295.429 269.326 295.429 Q272.474 295.429 274.303 293.277 Q276.154 291.101 276.154 287.374 Q276.154 283.624 274.303 281.471 Q272.474 279.318 269.326 279.318 M278.608 264.666 L278.608 268.925 Q276.849 268.092 275.043 267.652 Q273.261 267.212 271.502 267.212 Q266.872 267.212 264.418 270.337 Q261.988 273.462 261.641 279.781 Q263.006 277.768 265.066 276.703 Q267.127 275.615 269.603 275.615 Q274.812 275.615 277.821 278.786 Q280.853 281.934 280.853 287.374 Q280.853 292.698 277.705 295.916 Q274.557 299.133 269.326 299.133 Q263.33 299.133 260.159 294.55 Q256.988 289.943 256.988 281.217 Q256.988 273.022 260.877 268.161 Q264.766 263.277 271.316 263.277 Q273.076 263.277 274.858 263.624 Q276.664 263.971 278.608 264.666 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M298.909 266.981 Q295.298 266.981 293.469 270.545 Q291.664 274.087 291.664 281.217 Q291.664 288.323 293.469 291.888 Q295.298 295.429 298.909 295.429 Q302.543 295.429 304.349 291.888 Q306.177 288.323 306.177 281.217 Q306.177 274.087 304.349 270.545 Q302.543 266.981 298.909 266.981 M298.909 263.277 Q304.719 263.277 307.775 267.883 Q310.853 272.467 310.853 281.217 Q310.853 289.943 307.775 294.55 Q304.719 299.133 298.909 299.133 Q293.099 299.133 290.02 294.55 Q286.964 289.943 286.964 281.217 Q286.964 272.467 290.02 267.883 Q293.099 263.277 298.909 263.277 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip312)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1044.63 400.199,946.437 400.786,856.344 401.372,773.804 401.958,698.314 402.545,629.409 403.131,566.658 403.718,605.265 404.304,549.118 404.891,498.112 405.477,452.049 406.063,410.609 406.65,373.493 407.236,340.422 407.823,311.131 408.409,285.375 408.995,262.921 409.582,243.551 410.168,277.976 410.755,262.323 411.341,249.929 411.927,239.881 412.514,232.043 413.1,225.602 413.687,222.431 414.273,221.067 414.86,219.895 415.446,220.279 416.032,222.101 416.619,225.25 417.205,229.965 417.792,257.897 418.378,304.429 418.964,328.729 419.551,336.259 420.137,344.277 420.724,383.05 421.31,405.356 421.896,427.412 422.483,436.388 423.069,446.187 423.656,467.706 424.242,489.314 424.829,499.925 425.415,519.89 426.001,541.463 426.588,553.323 427.174,581.271 427.761,593.569 428.347,613.078 428.933,631.62 429.52,649.344 430.106,666.56 430.693,684.286 431.279,707.18 431.865,722.885 432.452,738.552 433.038,748.726 433.625,758.505 434.211,772.818 434.798,790.986 435.384,808.597 435.97,825.505 436.557,848.812 437.143,856.145 437.73,863.26 438.316,873.903 438.902,884.413 439.489,901.551 440.075,908.349 440.662,914.728 441.248,924.467 441.835,936.717 442.421,951.307 443.007,967.634 443.594,975.13 444.18,985.03 444.767,989.527 445.353,999.128 445.939,1008.78 446.526,1015.4 447.112,1023.94 447.699,1035.03 448.285,1042.96 448.871,1046.24 449.458,1049.47 450.044,1061.21 450.631,1066.22 451.217,1075.37 451.804,1078.04 452.39,1080.86 452.976,1085.98 453.563,1088.67 454.149,1093.16 454.736,1097.7 455.322,1101.81 455.908,1107.74 456.495,1111.96 457.081,1114.43 457.668,1118.45 458.254,1122.8 458.84,1125.21 459.427,1129.04 460.013,1134.5 460.6,1139.83 461.186,1141.6 461.773,1146.67 462.359,1148.77 462.945,1152.44 463.532,1159.23 464.118,1160.82 464.705,1161.96 465.291,1166.62 465.877,1172.64 466.464,1178.32 467.05,1179.3 467.637,1183.1 468.223,1183.8 468.809,1190.58 469.396,1191.08 469.982,1192.95 470.569,1193.37 471.155,1195.41 471.742,1198.9 472.328,1200.83 472.914,1204.05 473.501,1204.41 474.087,1207.56 474.674,1210.37 475.26,1214.44 475.846,1214.29 476.433,1217.21 477.019,1217.29 477.606,1215.82 478.192,1215.84 478.778,1217.21 479.365,1218.34 479.951,1222.44 480.538,1226.4 481.124,1227.33 481.711,1231.1 482.297,1230.74 482.883,1231.98 483.47,1233.04 484.056,1233.82 484.643,1234.51 485.229,1234.03 485.815,1230.98 486.402,1233.05 486.988,1231.35 487.575,1232.38 488.161,1233.5 488.748,1235.9 489.334,1236.71 489.92,1236.11 490.507,1237.14 491.093,1236.73 491.68,1236.39 492.266,1236.03 492.852,1235.59 493.439,1235.31 494.025,1235.04 494.612,1234.76 495.198,1234.61 495.784,1235.7 496.371,1240.52 496.957,1241.14 497.544,1241.93 498.13,1240.09 498.717,1239.62 499.303,1241.76 499.889,1238.93 500.476,1237.28 501.062,1235.56 501.649,1236.87 502.235,1236.82 502.821,1237.9 503.408,1240.03 503.994,1242.03 504.581,1243.75 505.167,1243.25 505.753,1244.84 506.34,1246.64 506.926,1247.02 507.513,1248.52 508.099,1250.01 508.686,1250.53 509.272,1249.26 509.858,1248.18 510.445,1247.41 511.031,1247.62 511.618,1246.69 512.204,1246.13 512.79,1245.18 513.377,1245.57 513.963,1246.17 514.55,1241.68 515.136,1241.15 515.722,1239.46 516.309,1241.33 516.895,1241.01 517.482,1241.53 518.068,1243.3 518.655,1241.24 519.241,1240.71 519.827,1241.36 520.414,1242.99 521,1240.93 521.587,1241.69 522.173,1243.71 522.759,1241.79 523.346,1243.89 523.932,1245.57 524.519,1246.1 525.105,1245.48 525.691,1246.9 526.278,1245.9 526.864,1245.04 527.451,1244.36 528.037,1244.86 528.624,1244.14 529.21,1244.72 529.796,1246.33 530.383,1245.34 530.969,1246.94 531.556,1244.84 532.142,1244.05 532.728,1243.26 533.315,1245.02 533.901,1243.05 534.488,1243.55 535.074,1246.26 535.661,1245.29 536.247,1243.23 536.833,1242.6 537.42,1240.61 538.006,1244.67 538.593,1243.66 539.179,1242.73 539.765,1243.31 540.352,1241.53 540.938,1239.7 541.525,1238.93 542.111,1239.36 542.697,1237.63 543.284,1236.93 543.87,1236.51 544.457,1233.32 545.043,1235.6 545.63,1234.01 546.216,1237.49 546.802,1233.41 547.389,1234.15 547.975,1239.62 548.562,1237.6 549.148,1242 549.734,1242.62 550.321,1245.49 550.907,1243.32 551.494,1244.59 552.08,1242.37 552.666,1243.86 553.253,1243.18 553.839,1241.09 554.426,1241.23 555.012,1242.81 555.599,1241.15 556.185,1241.54 556.771,1238.2 557.358,1237.39 557.944,1236.99 558.531,1234.09 559.117,1234.63 559.703,1234.12 560.29,1233.54 560.876,1231.77 561.463,1232.74 562.049,1233.65 562.635,1234.2 563.222,1231.37 563.808,1229.75 564.395,1227.27 564.981,1228.44 565.568,1228.27 566.154,1226.67 566.74,1227.54 567.327,1227.14 567.913,1229.44 568.5,1229.12 569.086,1229.93 569.672,1229.51 570.259,1230.73 570.845,1229.17 571.432,1228.88 572.018,1228.76 572.605,1228.78 573.191,1227.29 573.777,1228.32 574.364,1230.42 574.95,1231.14 575.537,1232.19 576.123,1232.05 576.709,1232.66 577.296,1231.06 577.882,1229.45 578.469,1230.44 579.055,1226.59 579.641,1225.12 580.228,1225.18 580.814,1225.22 581.401,1225.01 581.987,1222.7 582.574,1224.24 583.16,1222.99 583.746,1223.23 584.333,1222.05 584.919,1226.75 585.506,1227.64 586.092,1229.59 586.678,1230.35 587.265,1232.52 587.851,1231.01 588.438,1229.39 589.024,1230.19 589.61,1233.42 590.197,1232.97 590.783,1229.91 591.37,1229.38 591.956,1227.76 592.543,1228.72 593.129,1228.71 593.715,1228.61 594.302,1231.75 594.888,1229.81 595.475,1231.72 596.061,1234.52 596.647,1233.96 597.234,1232.33 597.82,1230.58 598.407,1229.08 598.993,1227.54 599.579,1227.16 600.166,1226.8 600.752,1228.24 601.339,1227.58 601.925,1225.99 602.512,1226.99 603.098,1224.19 603.684,1225.22 604.271,1223.76 604.857,1225.71 605.444,1225.28 606.03,1223.8 606.616,1222.42 607.203,1223.61 607.789,1225.92 608.376,1224.63 608.962,1222.87 609.548,1225.28 610.135,1225.12 610.721,1223.73 611.308,1224.5 611.894,1224.35 612.481,1222.88 613.067,1223.89 613.653,1222.56 614.24,1225 614.826,1226.93 615.413,1225.44 615.999,1226.13 616.585,1223.25 617.172,1223.32 617.758,1223.21 618.345,1225.1 618.931,1223.57 619.518,1224.44 620.104,1223.07 620.69,1225.14 621.277,1225.21 621.863,1227.23 622.45,1224.53 623.036,1224.42 623.622,1227.71 624.209,1229.79 624.795,1229.12 625.382,1229.54 625.968,1228.89 626.554,1225.99 627.141,1222.11 627.727,1222.09 628.314,1220.69 628.9,1219.52 629.487,1219.54 630.073,1217.08 630.659,1218.19 631.246,1218.28 631.832,1218.16 632.419,1218.13 633.005,1220.7 633.591,1218.1 634.178,1217.01 634.764,1216.07 635.351,1217.46 635.937,1216.51 636.523,1216.75 637.11,1216.76 637.696,1215.77 638.283,1215.99 638.869,1215.98 639.456,1216.25 640.042,1217.56 640.628,1216.42 641.215,1216.63 641.801,1219.2 642.388,1220.52 642.974,1219.51 643.56,1220.71 644.147,1221.94 644.733,1223.04 645.32,1222.78 645.906,1222.55 646.492,1224.86 647.079,1223.55 647.665,1224.43 648.252,1223.82 648.838,1223.74 649.425,1224.92 650.011,1225.87 650.597,1226.49 651.184,1226.04 651.77,1229.04 652.357,1227.07 652.943,1226.3 653.529,1224.62 654.116,1222.94 654.702,1222.61 655.289,1222.57 655.875,1225.71 656.462,1226.3 657.048,1223.65 657.634,1223.29 658.221,1224.95 658.807,1225.61 659.394,1226.14 659.98,1224.43 660.566,1225.16 661.153,1226 661.739,1224.13 662.326,1223.71 662.912,1222.18 663.498,1221.93 664.085,1221.68 664.671,1222.7 665.258,1225.12 665.844,1225.72 666.431,1224.12 667.017,1222.59 667.603,1222.16 668.19,1219.64 668.776,1220.49 669.363,1218.92 669.949,1218.06 670.535,1217.83 671.122,1217.82 671.708,1220.08 672.295,1220.11 672.881,1221.16 673.467,1222.11 674.054,1221.5 674.64,1221.38 675.227,1223.73 675.813,1222.2 676.4,1222.09 676.986,1224.05 677.572,1223.61 678.159,1224.54 678.745,1224.07 679.332,1224.01 679.918,1222.59 680.504,1221.23 681.091,1219.66 681.677,1219.62 682.264,1220.63 682.85,1218.99 683.436,1220.06 684.023,1219.6 684.609,1216.03 685.196,1214.77 685.782,1214.85 686.369,1212.49 686.955,1211.43 687.541,1210.54 688.128,1211.95 688.714,1212.42 689.301,1212.72 689.887,1212.87 690.473,1213 691.06,1214.23 691.646,1213.17 692.233,1213.27 692.819,1212.29 693.405,1213.7 693.992,1215.1 694.578,1216.25 695.165,1217.23 695.751,1214.91 696.338,1215.3 696.924,1217.75 697.51,1217.55 698.097,1218.45 698.683,1219.33 699.27,1219.16 699.856,1219.12 700.442,1217.9 701.029,1217.81 701.615,1216.39 702.202,1217.48 702.788,1215.1 703.375,1216.34 703.961,1218.81 704.547,1217.25 705.134,1217.18 705.72,1217.16 706.307,1216.91 706.893,1216.83 707.479,1215.43 708.066,1218.98 708.652,1220.04 709.239,1219.48 709.825,1221.73 710.411,1224.7 710.998,1224.99 711.584,1228.03 712.171,1227.32 712.757,1227.87 713.344,1227.34 713.93,1225.38 714.516,1224.55 715.103,1222.75 715.689,1223.42 716.276,1221.73 716.862,1222.4 717.448,1219.54 718.035,1218.18 718.621,1217.84 719.208,1217.68 719.794,1216.26 720.38,1215.15 720.967,1213.96 721.553,1212.5 722.14,1210.06 722.726,1209.21 723.313,1205.84 723.899,1205.09 724.485,1208.82 725.072,1207.83 725.658,1208.11 726.245,1208.42 726.831,1208.73 727.417,1208.93 728.004,1209.28 728.59,1209.7 729.177,1210.04 729.763,1213.78 730.349,1212.78 730.936,1214.03 731.522,1212.78 732.109,1215.34 732.695,1215.35 733.282,1214.22 733.868,1215.13 734.454,1215.29 735.041,1212.47 735.627,1211.45 736.214,1210.57 736.8,1210.77 737.386,1210.63 737.973,1209.75 738.559,1212.24 739.146,1214.75 739.732,1214.76 740.318,1213.56 740.905,1211.28 741.491,1210.05 742.078,1207.95 742.664,1208.32 743.251,1208.6 743.837,1208.78 744.423,1210.15 745.01,1212.47 745.596,1212.53 746.183,1210.11 746.769,1210.44 747.355,1210.76 747.942,1211.08 748.528,1214.9 749.115,1213.97 749.701,1211.55 750.288,1214.14 750.874,1214.35 751.46,1214.46 752.047,1213.26 752.633,1213.36 753.22,1212.09 753.806,1212.13 754.392,1212.51 754.979,1213.63 755.565,1216.18 756.152,1217.51 756.738,1217.43 757.324,1213.77 757.911,1213.83 758.497,1215.04 759.084,1216.34 759.67,1219.85 760.257,1221.9 760.843,1220.47 761.429,1219.92 762.016,1218.17 762.602,1216.54 763.189,1215.43 763.775,1216.38 764.361,1215.1 764.948,1215.18 765.534,1216.32 766.121,1220.02 766.707,1219.68 767.293,1219.13 767.88,1218.81 768.466,1217.22 769.053,1218.12 769.639,1216.68 770.226,1216.38 770.812,1216.33 771.398,1216.07 771.985,1215.92 772.571,1214.71 773.158,1214.47 773.744,1214.35 774.33,1215.28 774.917,1215.08 775.503,1210.29 776.09,1208.04 776.676,1205.84 777.262,1208.67 777.849,1208.74 778.435,1209.94 779.022,1208.84 779.608,1209.27 780.195,1209.3 780.781,1209.23 781.367,1210.88 781.954,1211.05 782.54,1213.78 783.127,1211.46 783.713,1211.27 784.299,1212.28 784.886,1213.48 785.472,1215.87 786.059,1215.45 786.645,1215.39 787.232,1216.34 787.818,1216.18 788.404,1216.22 788.991,1215.94 789.577,1214.73 790.164,1214.3 790.75,1213.11 791.336,1211.82 791.923,1212.92 792.509,1212.95 793.096,1211.61 793.682,1210.48 794.268,1210.39 794.855,1210.51 795.441,1211.85 796.028,1210.83 796.614,1209.69 797.201,1205.03 797.787,1205.53 798.373,1205.87 798.96,1206.08 799.546,1206.26 800.133,1206.55 800.719,1208.07 801.305,1211.77 801.892,1211.69 802.478,1212.96 803.065,1215.24 803.651,1215.03 804.237,1213.77 804.824,1212.32 805.41,1211 805.997,1210.82 806.583,1213.14 807.17,1212.9 807.756,1211.67 808.342,1215.07 808.929,1215 809.515,1213.86 810.102,1212.48 810.688,1212.32 811.274,1211.18 811.861,1212.44 812.447,1212.27 813.034,1212.2 813.62,1215.8 814.206,1215.6 814.793,1213.11 815.379,1211.92 815.966,1214.17 816.552,1214.33 817.139,1214.25 817.725,1211.79 818.311,1212.91 818.898,1215.24 819.484,1213.84 820.071,1214.91 820.657,1214.74 821.243,1215.76 821.83,1214.38 822.416,1215.34 823.003,1215.34 823.589,1217.63 824.175,1218.68 824.762,1219.57 825.348,1220.45 825.935,1219.04 826.521,1217.33 827.108,1217.07 827.694,1216.72 828.28,1217.85 828.867,1218.71 829.453,1218.57 830.04,1218.08 830.626,1216.68 831.212,1215.26 831.799,1212.73 832.385,1213.78 832.972,1212.57 833.558,1213.64 834.145,1214.69 834.731,1214.45 835.317,1212.89 835.904,1214.3 836.49,1211.93 837.077,1212.96 837.663,1212.81 838.249,1212.81 838.836,1210.26 839.422,1212.97 840.009,1212.83 840.595,1213.9 841.181,1213.86 841.768,1210.38 842.354,1209.03 842.941,1210.44 843.527,1210.66 844.114,1210.44 844.7,1211.69 845.286,1211.67 845.873,1209.19 846.459,1210.5 847.046,1209.14 847.632,1208.32 848.218,1208.34 848.805,1209.59 849.391,1209.65 849.978,1209.96 850.564,1209.99 851.15,1208.99 851.737,1210.34 852.323,1211.55 852.91,1211.39 853.496,1211.43 854.083,1210.4 854.669,1211.62 855.255,1210.27 855.842,1206.88 856.428,1207.08 857.015,1207.4 857.601,1210.19 858.187,1211.47 858.774,1212.75 859.36,1214.11 859.947,1211.71 860.533,1210.54 861.119,1210.71 861.706,1210.52 862.292,1211.9 862.879,1212.11 863.465,1210.84 864.052,1212.41 864.638,1214.58 865.224,1215.67 865.811,1215.26 866.397,1217.42 866.984,1214.87 867.57,1214.52 868.156,1213.2 868.743,1214.2 869.329,1213.9 869.916,1213.9 870.502,1216.24 871.089,1215.92 871.675,1213.32 872.261,1215.37 872.848,1212.6 873.434,1213.65 874.021,1212.51 874.607,1213.57 875.193,1212 875.78,1213.09 876.366,1213.1 876.953,1209.44 877.539,1209.31 878.125,1208.23 878.712,1208.42 879.298,1207.33 879.885,1208.91 880.471,1210.17 881.058,1210.24 881.644,1208.11 882.23,1207.16 882.817,1207.42 883.403,1209.76 883.99,1209.91 884.576,1212.56 885.162,1212.59 885.749,1211.13 886.335,1211.26 886.922,1210.43 887.508,1209.4 888.094,1209.43 888.681,1209.29 889.267,1208.37 889.854,1206.3 890.44,1205.18 891.027,1206.87 891.613,1205.9 892.199,1209.69 892.786,1210.95 893.372,1213.52 893.959,1213.46 894.545,1215.69 895.131,1214.08 895.718,1213.99 896.304,1212.5 896.891,1212.55 897.477,1211.37 898.063,1210.33 898.65,1211.49 899.236,1213.89 899.823,1213.75 900.409,1214.74 900.996,1219.32 901.582,1217.87 902.168,1213.83 902.755,1213.7 903.341,1213.55 903.928,1214.58 904.514,1213.02 905.1,1212.7 905.687,1213.75 906.273,1214.88 906.86,1214.55 907.446,1213.12 908.032,1210.49 908.619,1211.78 909.205,1210.65 909.792,1207.26 910.378,1207.45 910.965,1206.27 911.551,1206.48 912.137,1208.82 912.724,1209.1 913.31,1210.31 913.897,1210.12 914.483,1210.18 915.069,1207.84 915.656,1210.39 916.242,1209.26 916.829,1211.65 917.415,1211.47 918.002,1210.35 918.588,1210.3 919.174,1210.53 919.761,1210.28 920.347,1211.76 920.934,1209.31 921.52,1210.44 922.106,1208 922.693,1209.25 923.279,1210.4 923.866,1209.27 924.452,1210.42 925.038,1210.65 925.625,1210.91 926.211,1209.65 926.798,1210.84 927.384,1209.61 927.971,1210.95 928.557,1209.94 929.143,1205.08 929.73,1205.39 930.316,1208.03 930.903,1208.22 931.489,1208.49 932.075,1208.57 932.662,1206.35 933.248,1209.06 933.835,1208.18 934.421,1212.1 935.007,1212.08 935.594,1212.27 936.18,1213.47 936.767,1216.68 937.353,1216.27 937.94,1215.06 938.526,1216.36 939.112,1216.06 939.699,1216.06 940.285,1215.97 940.872,1214.47 941.458,1215.2 942.044,1213.92 942.631,1213.72 943.217,1214.79 943.804,1214.58 944.39,1214.51 944.976,1212.08 945.563,1212.16 946.149,1209.76 946.736,1211.05 947.322,1213.26 947.909,1211.81 948.495,1212.88 949.081,1212.77 949.668,1213.81 950.254,1215.99 950.841,1216.76 951.427,1217.72 952.013,1220.93 952.6,1220.61 953.186,1216.59 953.773,1213.79 954.359,1212.17 954.945,1210.97 955.532,1212.29 956.118,1212.12 956.705,1213.19 957.291,1213.11 957.878,1211.69 958.464,1213.03 959.05,1213.86 959.637,1211.3 960.223,1212.44 960.81,1212.35 961.396,1212.47 961.982,1212.34 962.569,1212 963.155,1213 963.742,1212.89 964.328,1213.91 964.915,1214.91 965.501,1213.31 966.087,1212.1 966.674,1211.78 967.26,1210.25 967.847,1206.77 968.433,1206.03 969.019,1207.44 969.606,1209.91 970.192,1208.66 970.779,1207.8 971.365,1207.84 971.951,1206.87 972.538,1206.92 973.124,1207.3 973.711,1206.22 974.297,1206.46 974.884,1207.67 975.47,1210.14 976.056,1211.32 976.643,1212.51 977.229,1212.4 977.816,1213.68 978.402,1211.35 978.988,1211.3 979.575,1212.29 980.161,1212.22 980.748,1214.36 981.334,1211.88 981.92,1210.92 982.507,1209.83 983.093,1211.11 983.68,1211.13 984.266,1213.61 984.853,1212.44 985.439,1213.57 986.025,1212.14 986.612,1212.18 987.198,1215.56 987.785,1214.06 988.371,1213.75 988.957,1212.39 989.544,1211.19 990.13,1211.38 990.717,1211.85 991.303,1211.92 991.889,1211.97 992.476,1214.24 993.062,1214.25 993.649,1211.63 994.235,1211.57 994.822,1210.46 995.408,1208.37 995.994,1208.5 996.581,1206.58 997.167,1206.92 997.754,1206.86 998.34,1208.2 998.926,1208.34 999.513,1210.87 1000.1,1210.85 1000.69,1209.77 1001.27,1207.65 1001.86,1205.4 1002.44,1205.38 1003.03,1205.57 1003.62,1204.74 1004.2,1204.04 1004.79,1205.39 1005.38,1206.87 1005.96,1208.14 1006.55,1208.31 1007.14,1207.32 1007.72,1207.71 1008.31,1207.81 1008.9,1206.57 1009.48,1206.63 1010.07,1206.87 1010.65,1207.11 1011.24,1206.32 1011.83,1205.63 1012.41,1206.05 1013,1206.52 1013.59,1206.51 1014.17,1207.86 1014.76,1207.88 1015.35,1206.79 1015.93,1206.89 1016.52,1207.05 1017.11,1207.26 1017.69,1205.97 1018.28,1208.58 1018.86,1208.74 1019.45,1208.93 1020.04,1207.7 1020.62,1206.37 1021.21,1208.68 1021.8,1207.55 1022.38,1207.6 1022.97,1206.71 1023.56,1208.19 1024.14,1208.49 1024.73,1208.57 1025.32,1208.72 1025.9,1209.92 1026.49,1210.92 1027.07,1211.1 1027.66,1211.12 1028.25,1212.31 1028.83,1212.19 1029.42,1213.35 1030.01,1212.08 1030.59,1213.36 1031.18,1213.26 1031.77,1214.15 1032.35,1214.31 1032.94,1215.25 1033.52,1214.99 1034.11,1211.35 1034.7,1212.52 1035.28,1212.23 1035.87,1215.68 1036.46,1213.04 1037.04,1211.62 1037.63,1211.29 1038.22,1210.14 1038.8,1212.62 1039.39,1213.45 1039.98,1213.2 1040.56,1214.03 1041.15,1213.73 1041.73,1214.67 1042.32,1213.3 1042.91,1213.31 1043.49,1213.1 1044.08,1214.09 1044.67,1212.84 1045.25,1211.21 1045.84,1210.17 1046.43,1210.16 1047.01,1209.01 1047.6,1207.81 1048.19,1209.25 1048.77,1209.53 1049.36,1208.44 1049.94,1212.2 1050.53,1212.07 1051.12,1215.43 1051.7,1218.55 1052.29,1216.83 1052.88,1215.31 1053.46,1213.77 1054.05,1210.03 1054.64,1207.92 1055.22,1208.12 1055.81,1208.36 1056.39,1207.32 1056.98,1207.7 1057.57,1208.11 1058.15,1208.19 1058.74,1207.15 1059.33,1203.99 1059.91,1206.53 1060.5,1206.74 1061.09,1205.69 1061.67,1206.05 1062.26,1207.37 1062.85,1206.45 1063.43,1211.36 1064.02,1213.63 1064.6,1214.57 1065.19,1215.47 1065.78,1216.52 1066.36,1217.25 1066.95,1216.6 1067.54,1213.69 1068.12,1211.2 1068.71,1213.3 1069.3,1216.45 1069.88,1214.94 1070.47,1214.8 1071.06,1218.14 1071.64,1219.32 1072.23,1214.29 1072.81,1209.17 1073.4,1209.39 1073.99,1211.78 1074.57,1211.8 1075.16,1209.46 1075.75,1208.1 1076.33,1204.84 1076.92,1202.64 1077.51,1202.89 1078.09,1202.98 1078.68,1203.43 1079.26,1201.56 1079.85,1202.02 1080.44,1202.47 1081.02,1201.95 1081.61,1202.28 1082.2,1201.85 1082.78,1203.61 1083.37,1207.39 1083.96,1208.9 1084.54,1208.78 1085.13,1207.56 1085.72,1207.51 1086.3,1207.61 1086.89,1206.35 1087.47,1205.6 1088.06,1204.66 1088.65,1207.73 1089.23,1206.56 1089.82,1206.89 1090.41,1207.24 1090.99,1207.53 1091.58,1209.97 1092.17,1213.55 1092.75,1213.38 1093.34,1212.11 1093.93,1214.27 1094.51,1212.74 1095.1,1211.28 1095.68,1213.76 1096.27,1213.58 1096.86,1213.27 1097.44,1211.75 1098.03,1213.01 1098.62,1210.59 1099.2,1211.92 1099.79,1210.51 1100.38,1211.7 1100.96,1214.25 1101.55,1214.01 1102.14,1214.84 1102.72,1214.56 1103.31,1215.56 1103.89,1216.54 1104.48,1218.65 1105.07,1218.11 1105.65,1216.52 1106.24,1217.49 1106.83,1213.6 1107.41,1214.64 1108,1211.88 1108.59,1209.15 1109.17,1210.38 1109.76,1210.64 1110.34,1211.77 1110.93,1211.9 1111.52,1211.89 1112.1,1211.89 1112.69,1211.74 1113.28,1211.68 1113.86,1210.28 1114.45,1207.76 1115.04,1209.08 1115.62,1209.2 1116.21,1207.96 1116.8,1206.78 1117.38,1207.03 1117.97,1207.39 1118.55,1207.7 1119.14,1209.18 1119.73,1209.45 1120.31,1208.36 1120.9,1207.24 1121.49,1206.29 1122.07,1207.87 1122.66,1207.87 1123.25,1207.96 1123.83,1209.32 1124.42,1208.2 1125.01,1207.01 1125.59,1204.63 1126.18,1207.27 1126.76,1207.59 1127.35,1207.63 1127.94,1208.87 1128.52,1206.64 1129.11,1206.67 1129.7,1207.83 1130.28,1208.79 1130.87,1209.01 1131.46,1208.75 1132.04,1211.27 1132.63,1208.84 1133.21,1209.01 1133.8,1209.3 1134.39,1209.27 1134.97,1209.49 1135.56,1208.33 1136.15,1207.49 1136.73,1208.91 1137.32,1207.95 1137.91,1208.22 1138.49,1209.37 1139.08,1209.7 1139.67,1210.95 1140.25,1209.91 1140.84,1208.75 1141.42,1208.8 1142.01,1210.37 1142.6,1210.47 1143.18,1209.15 1143.77,1209.12 1144.36,1209.1 1144.94,1209.28 1145.53,1209.13 1146.12,1210.34 1146.7,1209.04 1147.29,1209.25 1147.88,1209.66 1148.46,1209.51 1149.05,1209.58 1149.63,1208.36 1150.22,1209.59 1150.81,1210.92 1151.39,1209.76 1151.98,1207.4 1152.57,1206.21 1153.15,1207.32 1153.74,1208.81 1154.33,1208.96 1154.91,1207.74 1155.5,1207.73 1156.09,1206.6 1156.67,1209.19 1157.26,1209.47 1157.84,1208.19 1158.43,1208.32 1159.02,1208.25 1159.6,1208.3 1160.19,1208.39 1160.78,1208.31 1161.36,1208.44 1161.95,1209.62 1162.54,1208.54 1163.12,1207.27 1163.71,1208.53 1164.29,1207.21 1164.88,1206.17 1165.47,1205.06 1166.05,1206.33 1166.64,1210.11 1167.23,1210.08 1167.81,1208.93 1168.4,1207.8 1168.99,1205.44 1169.57,1205.82 1170.16,1209.67 1170.75,1209.83 1171.33,1212.02 1171.92,1211.77 1172.5,1216.31 1173.09,1216.91 1173.68,1213.99 1174.26,1213.61 1174.85,1215.76 1175.44,1218.67 1176.02,1220.47 1176.61,1222.16 1177.2,1222.7 1177.78,1219.21 1178.37,1221.23 1178.96,1218.34 1179.54,1217.71 1180.13,1216.06 1180.71,1215.64 1181.3,1217.42 1181.89,1217.16 1182.47,1214.71 1183.06,1214.4 1183.65,1214.43 1184.23,1215.59 1184.82,1215.35 1185.41,1216.51 1185.99,1216.13 1186.58,1216.93 1187.16,1216.29 1187.75,1215.9 1188.34,1214.27 1188.92,1216.23 1189.51,1215.73 1190.1,1210.78 1190.68,1210.67 1191.27,1212.02 1191.86,1210.52 1192.44,1211.61 1193.03,1210.16 1193.62,1210.15 1194.2,1212.3 1194.79,1213.35 1195.37,1211.83 1195.96,1209.28 1196.55,1211.7 1197.13,1211.48 1197.72,1212.58 1198.31,1210.09 1198.89,1208.71 1199.48,1208.64 1200.07,1208.91 1200.65,1207.78 1201.24,1206.75 1201.83,1207.07 1202.41,1206.01 1203,1202.43 1203.58,1202.72 1204.17,1202.94 1204.76,1203.28 1205.34,1203.5 1205.93,1203.98 1206.52,1202.89 1207.1,1203.07 1207.69,1203.13 1208.28,1203.79 1208.86,1203.94 1209.45,1203.12 1210.03,1205.83 1210.62,1208.2 1211.21,1209.59 1211.79,1204.9 1212.38,1207.7 1212.97,1204.4 1213.55,1206.96 1214.14,1206.82 1214.73,1205.6 1215.31,1204.44 1215.9,1208.37 1216.49,1209.42 1217.07,1211.74 1217.66,1213.08 1218.24,1210.42 1218.83,1210.42 1219.42,1209.13 1220,1209.22 1220.59,1208.06 1221.18,1206.86 1221.76,1205.69 1222.35,1203.5 1222.94,1202.34 1223.52,1204.96 1224.11,1204.01 1224.7,1204.04 1225.28,1204.17 1225.87,1205.51 1226.45,1206.78 1227.04,1208.08 1227.63,1207.07 1228.21,1207.1 1228.8,1207.27 1229.39,1210.86 1229.97,1214.46 1230.56,1214.41 1231.15,1214.55 1231.73,1214.21 1232.32,1214.03 1232.91,1215.19 1233.49,1214.78 1234.08,1213.32 1234.66,1216.64 1235.25,1213.74 1235.84,1212.64 1236.42,1212.58 1237.01,1213.52 1237.6,1216.62 1238.18,1217.68 1238.77,1216.29 1239.36,1216.23 1239.94,1218.32 1240.53,1219.24 1241.11,1221.09 1241.7,1220.48 1242.29,1221.92 1242.87,1219.87 1243.46,1218.16 1244.05,1219.07 1244.63,1218.51 1245.22,1217.91 1245.81,1216.48 1246.39,1216.43 1246.98,1216.45 1247.57,1219.71 1248.15,1220.55 1248.74,1219.91 1249.32,1219.33 1249.91,1218.85 1250.5,1220.55 1251.08,1220.9 1251.67,1219.22 1252.26,1218.75 1252.84,1218.36 1253.43,1219.19 1254.02,1217.85 1254.6,1217.7 1255.19,1218.69 1255.78,1216.89 1256.36,1217.7 1256.95,1219.7 1257.53,1217.81 1258.12,1218.49 1258.71,1218.98 1259.29,1219.48 1259.88,1216.91 1260.47,1215.4 1261.05,1215 1261.64,1214.68 1262.23,1212 1262.81,1212.9 1263.4,1208.99 1263.98,1209.01 1264.57,1209.03 1265.16,1211.28 1265.74,1212.58 1266.33,1213.32 1266.92,1214.24 1267.5,1216.26 1268.09,1215.81 1268.68,1214.29 1269.26,1214.04 1269.85,1213.67 1270.44,1212.1 1271.02,1211.93 1271.61,1212.07 1272.19,1212.04 1272.78,1212.04 1273.37,1210.87 1273.95,1212.11 1274.54,1208.35 1275.13,1211.82 1275.71,1208.08 1276.3,1208.03 1276.89,1208.01 1277.47,1205.58 1278.06,1202.25 1278.65,1202.67 1279.23,1201.8 1279.82,1202.05 1280.4,1201.16 1280.99,1201.67 1281.58,1201.99 1282.16,1202.48 1282.75,1201.62 1283.34,1205.67 1283.92,1207.33 1284.51,1208.72 1285.1,1208.85 1285.68,1210 1286.27,1208.57 1286.86,1208.78 1287.44,1206.74 1288.03,1208.16 1288.61,1207.14 1289.2,1206.05 1289.79,1204.99 1290.37,1206.42 1290.96,1205.6 1291.55,1207.82 1292.13,1208.11 1292.72,1209.49 1293.31,1208.46 1293.89,1209.94 1294.48,1209.84 1295.06,1209.93 1295.65,1208.72 1296.24,1206.39 1296.82,1203.09 1297.41,1201.06 1298,1200.41 1298.58,1202.26 1299.17,1202.55 1299.76,1203 1300.34,1206.08 1300.93,1206.52 1301.52,1206.48 1302.1,1207.13 1302.69,1208.52 1303.27,1207.3 1303.86,1209.63 1304.45,1209.72 1305.03,1208.67 1305.62,1208.79 1306.21,1212.55 1306.79,1211.45 1307.38,1211.25 1307.97,1211.03 1308.55,1210.94 1309.14,1211.94 1309.73,1210.52 1310.31,1210.21 1310.9,1210.29 1311.48,1210.36 1312.07,1210.39 1312.66,1210.39 1313.24,1210.27 1313.83,1211.51 1314.42,1210.1 1315,1211.23 1315.59,1212.25 1316.18,1211.27 1316.76,1211.12 1317.35,1211.26 1317.93,1212.42 1318.52,1213.7 1319.11,1214.89 1319.69,1213.62 1320.28,1212.15 1320.87,1210.74 1321.45,1208.27 1322.04,1204.73 1322.63,1202.68 1323.21,1200.8 1323.8,1201.23 1324.39,1202.68 1324.97,1206.49 1325.56,1204.29 1326.14,1204.7 1326.73,1207.3 1327.32,1206.65 1327.9,1209.07 1328.49,1208.14 1329.08,1208.42 1329.66,1207.26 1330.25,1209.77 1330.84,1209.67 1331.42,1213.25 1332.01,1213.07 1332.6,1211.89 1333.18,1210.75 1333.77,1210.58 1334.35,1209.36 1334.94,1209.69 1335.53,1209.54 1336.11,1208.33 1336.7,1209.7 1337.29,1208.56 1337.87,1207.58 1338.46,1205.42 1339.05,1205.82 1339.63,1207.14 1340.22,1207.29 1340.8,1207.7 1341.39,1207.74 1341.98,1209.14 1342.56,1210.34 1343.15,1211.19 1343.74,1212.52 1344.32,1211.47 1344.91,1211.35 1345.5,1212.49 1346.08,1212.38 1346.67,1212.29 1347.26,1207.5 1347.84,1209 1348.43,1205.24 1349.01,1205.5 1349.6,1206.98 1350.19,1206.1 1350.77,1207.38 1351.36,1206.46 1351.95,1211.41 1352.53,1212.34 1353.12,1213.12 1353.71,1214.08 1354.29,1213.82 1354.88,1211.15 1355.47,1211.18 1356.05,1208.82 1356.64,1208.76 1357.22,1208.82 1357.81,1210.36 1358.4,1207.94 1358.98,1208.19 1359.57,1207.1 1360.16,1208.53 1360.74,1208.59 1361.33,1208.67 1361.92,1207.53 1362.5,1207.86 1363.09,1203.48 1363.68,1202.48 1364.26,1204.08 1364.85,1203.07 1365.43,1200.94 1366.02,1201.64 1366.61,1201.9 1367.19,1203.8 1367.78,1205.52 1368.37,1207.13 1368.95,1207.59 1369.54,1208.73 1370.13,1208.91 1370.71,1208.95 1371.3,1210.18 1371.88,1211.53 1372.47,1212.68 1373.06,1212.7 1373.64,1208.68 1374.23,1208.67 1374.82,1208.76 1375.4,1208.82 1375.99,1208.92 1376.58,1211.34 1377.16,1215.74 1377.75,1216.45 1378.34,1216.14 1378.92,1215.82 1379.51,1216.53 1380.09,1216.09 1380.68,1213.38 1381.27,1214.3 1381.85,1215.4 1382.44,1216.15 1383.03,1216.9 1383.61,1215.33 1384.2,1215.08 1384.79,1214.91 1385.37,1214.55 1385.96,1212.01 1386.55,1209.57 1387.13,1208.5 1387.72,1208.39 1388.3,1207.07 1388.89,1208.5 1389.48,1209.62 1390.06,1208.46 1390.65,1208.49 1391.24,1207.31 1391.82,1206 1392.41,1205.18 1393,1204.35 1393.58,1202.34 1394.17,1202.7 1394.75,1204.28 1395.34,1204.54 1395.93,1204.95 1396.51,1205.55 1397.1,1205.8 1397.69,1206.05 1398.27,1207.35 1398.86,1207.71 1399.45,1208.82 1400.03,1208.94 1400.62,1208.84 1401.21,1206.56 1401.79,1203.03 1402.38,1204.73 1402.96,1207.36 1403.55,1206.61 1404.14,1209.07 1404.72,1209.07 1405.31,1206.71 1405.9,1206.83 1406.48,1209.28 1407.07,1210.64 1407.66,1210.66 1408.24,1209.61 1408.83,1207.08 1409.42,1209.51 1410,1209.11 1410.59,1209.18 1411.17,1209.15 1411.76,1206.74 1412.35,1205.72 1412.93,1205.9 1413.52,1203.93 1414.11,1205.72 1414.69,1204.61 1415.28,1205.04 1415.87,1205.37 1416.45,1205.74 1417.04,1207.34 1417.63,1207.45 1418.21,1205.31 1418.8,1205.67 1419.38,1209.42 1419.97,1213.05 1420.56,1211.57 1421.14,1213.72 1421.73,1212.46 1422.32,1212.45 1422.9,1212.11 1423.49,1211.22 1424.08,1209.95 1424.66,1213.6 1425.25,1214.6 1425.83,1213.11 1426.42,1211.85 1427.01,1211.71 1427.59,1212.86 1428.18,1215.1 1428.77,1213.76 1429.35,1214.62 1429.94,1215.63 1430.53,1216.38 1431.11,1216.11 1431.7,1213.4 1432.29,1211.84 1432.87,1213.07 1433.46,1211.62 1434.04,1211.58 1434.63,1211.77 1435.22,1215.22 1435.8,1214 1436.39,1213.78 1436.98,1213.47 1437.56,1215.79 1438.15,1213.15 1438.74,1214.09 1439.32,1216.18 1439.91,1213.41 1440.5,1212.07 1441.08,1213.2 1441.67,1212.97 1442.25,1216.31 1442.84,1213.42 1443.43,1214.56 1444.01,1216.78 1444.6,1216.44 1445.19,1218.37 1445.77,1216.65 1446.36,1214.96 1446.95,1214.75 1447.53,1215.55 1448.12,1215.28 1448.7,1215.1 1449.29,1214.81 1449.88,1214.54 1450.46,1214.17 1451.05,1215.1 1451.64,1212.17 1452.22,1210.93 1452.81,1213.21 1453.4,1211.89 1453.98,1209.38 1454.57,1207.37 1455.16,1207.18 1455.74,1208.79 1456.33,1208.85 1456.91,1212.57 1457.5,1213.82 1458.09,1213.68 1458.67,1214.8 1459.26,1211.97 1459.85,1211.83 1460.43,1209.54 1461.02,1207.03 1461.61,1208.37 1462.19,1207.45 1462.78,1208.66 1463.37,1209.98 1463.95,1209.99 1464.54,1210.02 1465.12,1207.83 1465.71,1207.9 1466.3,1208 1466.88,1206.86 1467.47,1206.89 1468.06,1209.33 1468.64,1208.12 1469.23,1211.85 1469.82,1209.55 1470.4,1207.42 1470.99,1207.56 1471.57,1206.35 1472.16,1206.52 1472.75,1205.6 1473.33,1206.03 1473.92,1207.28 1474.51,1208.59 1475.09,1208.76 1475.68,1206.46 1476.27,1205.44 1476.85,1206.96 1477.44,1209.26 1478.03,1209.48 1478.61,1207.2 1479.2,1207.3 1479.78,1206.17 1480.37,1205.23 1480.96,1207.68 1481.54,1208.72 1482.13,1208.84 1482.72,1209.07 1483.3,1209.24 1483.89,1205.43 1484.48,1205.47 1485.06,1205.96 1485.65,1206.14 1486.24,1205.05 1486.82,1204.12 1487.41,1205.52 1487.99,1205.71 1488.58,1203.43 1489.17,1202.73 1489.75,1205.7 1490.34,1206.12 1490.93,1205.07 1491.51,1205.38 1492.1,1207.86 1492.69,1206.85 1493.27,1205.95 1493.86,1206 1494.45,1209.88 1495.03,1208.8 1495.62,1208.88 1496.2,1206.92 1496.79,1205.79 1497.38,1205.79 1497.96,1207.27 1498.55,1207.23 1499.14,1208.65 1499.72,1211.05 1500.31,1209.96 1500.9,1207.7 1501.48,1207.98 1502.07,1209.43 1502.65,1209.73 1503.24,1208.35 1503.83,1209.64 1504.41,1209.75 1505,1208.86 1505.59,1207.76 1506.17,1206.91 1506.76,1205.84 1507.35,1203.87 1507.93,1204.46 1508.52,1207.05 1509.11,1209.55 1509.69,1208.6 1510.28,1204.21 1510.86,1206.87 1511.45,1208.41 1512.04,1207.36 1512.62,1207.81 1513.21,1206.77 1513.8,1204.61 1514.38,1207.46 1514.97,1205.24 1515.56,1206.59 1516.14,1210.24 1516.73,1209.08 1517.32,1211.96 1517.9,1210.54 1518.49,1209.26 1519.07,1209.46 1519.66,1209.04 1520.25,1210.07 1520.83,1209.01 1521.42,1210.26 1522.01,1210.39 1522.59,1212.61 1523.18,1212.4 1523.77,1213.44 1524.35,1212 1524.94,1213.2 1525.52,1213.25 1526.11,1213.08 1526.7,1212.9 1527.28,1213.71 1527.87,1214.59 1528.46,1214.32 1529.04,1215.1 1529.63,1209.92 1530.22,1209.78 1530.8,1210.98 1531.39,1211.28 1531.98,1210.2 1532.56,1211.27 1533.15,1213.68 1533.73,1208.76 1534.32,1207.86 1534.91,1209.22 1535.49,1212.86 1536.08,1212.6 1536.67,1215.05 1537.25,1214.81 1537.84,1215.69 1538.43,1215.36 1539.01,1218.46 1539.6,1219.17 1540.19,1217.48 1540.77,1218.17 1541.36,1217.81 1541.94,1218.71 1542.53,1218.28 1543.12,1218.98 1543.7,1218.32 1544.29,1217.79 1544.88,1217.38 1545.46,1217.13 1546.05,1217.94 1546.64,1218.77 1547.22,1220.74 1547.81,1221.18 1548.4,1219.51 1548.98,1218.92 1549.57,1219.52 1550.15,1221.39 1550.74,1220.74 1551.33,1223.73 1551.91,1223.03 1552.5,1223.53 1553.09,1222.45 1553.67,1220.83 1554.26,1220.21 1554.85,1218.59 1555.43,1219.3 1556.02,1215.01 1556.6,1213.35 1557.19,1211.95 1557.78,1210.41 1558.36,1210.31 1558.95,1207.7 1559.54,1206.48 1560.12,1207.94 1560.71,1206.79 1561.3,1205.74 1561.88,1208.44 1562.47,1208.64 1563.06,1208.61 1563.64,1208.52 1564.23,1208.44 1564.81,1210.88 1565.4,1210.77 1565.99,1209.39 1566.57,1210.51 1567.16,1210.22 1567.75,1210.23 1568.33,1209.93 1568.92,1208.63 1569.51,1210.83 1570.09,1208.39 1570.68,1208.28 1571.27,1210.72 1571.85,1211.75 1572.44,1211.91 1573.02,1210.62 1573.61,1212.91 1574.2,1213.86 1574.78,1213.69 1575.37,1212.05 1575.96,1213.19 1576.54,1212.84 1577.13,1214.94 1577.72,1212.24 1578.3,1210.83 1578.89,1208.54 1579.47,1208.62 1580.06,1208.86 1580.65,1207.88 1581.23,1207.99 1581.82,1207.87 1582.41,1209.44 1582.99,1209.45 1583.58,1209.61 1584.17,1211.97 1584.75,1213.17 1585.34,1211.84 1585.93,1210.29 1586.51,1212.65 1587.1,1210.11 1587.68,1211.15 1588.27,1211.32 1588.86,1212.34 1589.44,1210.91 1590.03,1210.5 1590.62,1212.89 1591.2,1213.96 1591.79,1212.52 1592.38,1211.27 1592.96,1211.23 1593.55,1208.71 1594.14,1208.9 1594.72,1210.28 1595.31,1210.47 1595.89,1208.09 1596.48,1206.81 1597.07,1208.4 1597.65,1206.24 1598.24,1207.6 1598.83,1208.81 1599.41,1207.61 1600,1207.56 1600.59,1205.51 1601.17,1204.61 1601.76,1204.79 1602.34,1203.93 1602.93,1202.93 1603.52,1203.34 1604.1,1203.82 1604.69,1202.74 1605.28,1200.71 1605.86,1200.95 1606.45,1203.61 1607.04,1207.32 1607.62,1204.98 1608.21,1206.56 1608.8,1206.42 1609.38,1207.84 1609.97,1207.93 1610.55,1208.09 1611.14,1210.57 1611.73,1210.18 1612.31,1210.14 1612.9,1211.52 1613.49,1210.07 1614.07,1211.22 1614.66,1211.04 1615.25,1212.12 1615.83,1212.06 1616.42,1213.06 1617.01,1213.9 1617.59,1211.32 1618.18,1211.27 1618.76,1210.86 1619.35,1213.13 1619.94,1212.92 1620.52,1212.92 1621.11,1211.68 1621.7,1211.55 1622.28,1210.35 1622.87,1209.98 1623.46,1209.83 1624.04,1214.32 1624.63,1214.06 1625.22,1212.6 1625.8,1214.68 1626.39,1213.08 1626.97,1213.88 1627.56,1212.35 1628.15,1211.16 1628.73,1209.96 1629.32,1209.05 1629.91,1207.9 1630.49,1205.17 1631.08,1205.62 1631.67,1207.26 1632.25,1209.66 1632.84,1208.49 1633.42,1209.67 1634.01,1209.6 1634.6,1205.96 1635.18,1205.16 1635.77,1206.4 1636.36,1205.43 1636.94,1203.22 1637.53,1203.77 1638.12,1200.57 1638.7,1202.17 1639.29,1200.05 1639.88,1200.42 1640.46,1203.35 1641.05,1202.16 1641.63,1202.54 1642.22,1202.93 1642.81,1201.71 1643.39,1202.19 1643.98,1202.84 1644.57,1205.5 1645.15,1205.72 1645.74,1206.78 1646.33,1207.02 1646.91,1208.37 1647.5,1208.53 1648.09,1208.76 1648.67,1206.8 1649.26,1205.59 1649.84,1205.83 1650.43,1205.85 1651.02,1206.04 1651.6,1207.59 1652.19,1208.88 1652.78,1207.53 1653.36,1207.78 1653.95,1205.6 1654.54,1207.04 1655.12,1209.58 1655.71,1210.9 1656.29,1208.63 1656.88,1209.87 1657.47,1209.84 1658.05,1209.98 1658.64,1208.88 1659.23,1212.74 1659.81,1212.43 1660.4,1210.07 1660.99,1210.13 1661.57,1205.47 1662.16,1204.51 1662.75,1205.86 1663.33,1205.11 1663.92,1206.48 1664.5,1204.22 1665.09,1203.19 1665.68,1202.44 1666.26,1201.69 1666.85,1200.85 1667.44,1201.59 1668.02,1201.98 1668.61,1202.35 1669.2,1202.78 1669.78,1200.83 1670.37,1203.58 1670.96,1202.67 1671.54,1205.58 1672.13,1205.65 1672.71,1204.63 1673.3,1206.2 1673.89,1205.13 1674.47,1206.5 1675.06,1207.69 1675.65,1207.71 1676.23,1206.77 1676.82,1205.51 1677.41,1205.68 1677.99,1207.39 1678.58,1210.18 1679.17,1211.46 1679.75,1211.5 1680.34,1211.57 1680.92,1210.33 1681.51,1213.87 1682.1,1212.34 1682.68,1213.33 1683.27,1215.78 1683.86,1213.14 1684.44,1213.14 1685.03,1213.98 1685.62,1215.01 1686.2,1213.54 1686.79,1210.98 1687.37,1210.94 1687.96,1209.88 1688.55,1211.06 1689.13,1209.85 1689.72,1209.99 1690.31,1208.87 1690.89,1210.14 1691.48,1209.24 1692.07,1208.15 1692.65,1209.36 1693.24,1210.5 1693.83,1209.25 1694.41,1209.32 1695,1204.56 1695.58,1206.02 1696.17,1206.39 1696.76,1207.91 1697.34,1209.38 1697.93,1209.43 1698.52,1209.45 1699.1,1210.57 1699.69,1211.62 1700.28,1212.67 1700.86,1211.41 1701.45,1211.29 1702.04,1211.43 1702.62,1211.34 1703.21,1213.84 1703.79,1211.26 1704.38,1211.15 1704.97,1211.24 1705.55,1212.49 1706.14,1212.49 1706.73,1214.4 1707.31,1213.01 1707.9,1211.97 1708.49,1211.8 1709.07,1212.96 1709.66,1214.09 1710.24,1211.19 1710.83,1211.18 1711.42,1212.13 1712,1210.88 1712.59,1210.82 1713.18,1210.79 1713.76,1210.83 1714.35,1210.87 1714.94,1209.45 1715.52,1209.18 1716.11,1212.36 1716.7,1212.05 1717.28,1210.78 1717.87,1211.75 1718.45,1211.45 1719.04,1211.29 1719.63,1212.33 1720.21,1212.08 1720.8,1210.63 1721.39,1211.89 1721.97,1210.53 1722.56,1209.14 1723.15,1209.03 1723.73,1207.79 1724.32,1206.54 1724.91,1208.97 1725.49,1206.77 1726.08,1209.6 1726.66,1209.82 1727.25,1212.3 1727.84,1211.06 1728.42,1213.12 1729.01,1210.78 1729.6,1210.87 1730.18,1211.88 1730.77,1210.82 1731.36,1209.67 1731.94,1207.32 1732.53,1208.52 1733.11,1207.28 1733.7,1209.8 1734.29,1206.53 1734.87,1207.76 1735.46,1210.01 1736.05,1211.28 1736.63,1211.39 1737.22,1211.44 1737.81,1212.58 1738.39,1212.5 1738.98,1210.95 1739.57,1212.14 1740.15,1212 1740.74,1213.11 1741.32,1214.1 1741.91,1216.2 1742.5,1216.03 1743.08,1214.7 1743.67,1215.71 1744.26,1214.08 1744.84,1215.06 1745.43,1213.5 1746.02,1215.79 1746.6,1216.52 1747.19,1217.49 1747.78,1216.08 1748.36,1214.46 1748.95,1213.11 1749.53,1213.04 1750.12,1215.29 1750.71,1213.68 1751.29,1212.62 1751.88,1211.01 1752.47,1212.34 1753.05,1215.66 1753.64,1214.11 1754.23,1213.58 1754.81,1213.25 1755.4,1213.12 1755.99,1213.98 1756.57,1213.74 1757.16,1212.31 1757.74,1212.07 1758.33,1213.08 1758.92,1215.37 1759.5,1216.12 1760.09,1214.53 1760.68,1214.34 1761.26,1215.11 1761.85,1215.83 1762.44,1215.44 1763.02,1215.27 1763.61,1216.35 1764.19,1216.04 1764.78,1220.45 1765.37,1219.81 1765.95,1217.99 1766.54,1215.42 1767.13,1215.04 1767.71,1212.25 1768.3,1211.01 1768.89,1209.85 1769.47,1209.78 1770.06,1211.03 1770.65,1208.43 1771.23,1210.86 1771.82,1208.42 1772.4,1208.66 1772.99,1208.63 1773.58,1207.44 1774.16,1206.11 1774.75,1203.89 1775.34,1204.16 1775.92,1205.72 1776.51,1205.84 1777.1,1208.24 1777.68,1209.5 1778.27,1209.64 1778.86,1208.58 1779.44,1207.33 1780.03,1206.54 1780.61,1204.41 1781.2,1203.49 1781.79,1201.71 1782.37,1203.19 1782.96,1202.07 1783.55,1202.39 1784.13,1203.8 1784.72,1203.97 1785.31,1204.25 1785.89,1205.69 1786.48,1204.98 1787.06,1206.27 1787.65,1206.42 1788.24,1206.62 1788.82,1206.95 1789.41,1208.16 1790,1209.63 1790.58,1208.24 1791.17,1209.23 1791.76,1211.6 1792.34,1209.1 1792.93,1208.13 1793.52,1209.69 1794.1,1209.82 1794.69,1208.7 1795.27,1206.69 1795.86,1206.75 1796.45,1208.96 1797.03,1209.04 1797.62,1210.21 1798.21,1208.04 1798.79,1206.8 1799.38,1209.22 1799.97,1209.36 1800.55,1211.69 1801.14,1213.94 1801.73,1212.52 1802.31,1211.39 1802.9,1211.4 1803.48,1210.28 1804.07,1209.25 1804.66,1209.23 1805.24,1209.23 1805.83,1208.25 1806.42,1207.29 1807,1206.21 1807.59,1205.28 1808.18,1206.8 1808.76,1207.03 1809.35,1209.18 1809.94,1209.09 1810.52,1209.03 1811.11,1211.35 1811.69,1211.35 1812.28,1208.82 1812.87,1208.89 1813.45,1208.72 1814.04,1207.65 1814.63,1209.18 1815.21,1207.98 1815.8,1207.07 1816.39,1206.98 1816.97,1207.01 1817.56,1207.36 1818.14,1210.07 1818.73,1211.37 1819.32,1211 1819.9,1208.65 1820.49,1211.01 1821.08,1211.06 1821.66,1210.99 1822.25,1209.64 1822.84,1210.91 1823.42,1211.1 1824.01,1211.19 1824.6,1211.12 1825.18,1211.32 1825.77,1213.52 1826.35,1213.35 1826.94,1215.37 1827.53,1213.78 1828.11,1214.83 1828.7,1214.53 1829.29,1214.4 1829.87,1214.12 1830.46,1213.74 1831.05,1212.49 1831.63,1214.68 1832.22,1213.12 1832.81,1211.88 1833.39,1215.19 1833.98,1215.97 1834.56,1215.93 1835.15,1217.9 1835.74,1216.25 1836.32,1215.07 1836.91,1211.32 1837.5,1208.71 1838.08,1207.74 1838.67,1206.58 1839.26,1204.36 1839.84,1204.73 1840.43,1205.19 1841.01,1206.53 1841.6,1207.9 1842.19,1208.02 1842.77,1208.09 1843.36,1208.27 1843.95,1204.59 1844.53,1202.73 1845.12,1203.02 1845.71,1203.51 1846.29,1202.77 1846.88,1200.83 1847.47,1202.51 1848.05,1202.92 1848.64,1203.32 1849.22,1202.25 1849.81,1202.85 1850.4,1202.05 1850.98,1203.83 1851.57,1202.79 1852.16,1205.65 1852.74,1203.59 1853.33,1202.82 1853.92,1204.61 1854.5,1203.91 1855.09,1203.07 1855.68,1203.37 1856.26,1203.65 1856.85,1204.83 1857.43,1207.26 1858.02,1207.31 1858.61,1205.18 1859.19,1208.81 1859.78,1212.06 1860.37,1210.74 1860.95,1209.91 1861.54,1208.89 1862.13,1207.91 1862.71,1206.88 1863.3,1208.16 1863.88,1210.83 1864.47,1213.15 1865.06,1214.12 1865.64,1213.89 1866.23,1213.51 1866.82,1213.41 1867.4,1214.45 1867.99,1215.46 1868.58,1214.28 1869.16,1213.06 1869.75,1216.62 1870.34,1216.61 1870.92,1215.2 1871.51,1213.69 1872.09,1214.72 1872.68,1213.1 1873.27,1213.08 1873.85,1211.8 1874.44,1211.68 1875.03,1210.65 1875.61,1212.99 1876.2,1209.07 1876.79,1209.22 1877.37,1209.09 1877.96,1208.02 1878.55,1208.14 1879.13,1209.44 1879.72,1208.28 1880.3,1208.43 1880.89,1208.64 1881.48,1207.45 1882.06,1210.08 1882.65,1209.68 1883.24,1210.78 1883.82,1209.26 1884.41,1209.3 1885,1210.82 1885.58,1210.63 1886.17,1210.55 1886.76,1210.83 1887.34,1205.94 1887.93,1206.57 1888.51,1205.34 1889.1,1205.61 1889.69,1205.85 1890.27,1207.54 1890.86,1208.94 1891.45,1209.13 1892.03,1210.38 1892.62,1209.3 1893.21,1210.52 1893.79,1211.79 1894.38,1215.28 1894.96,1215.98 1895.55,1217.11 1896.14,1216.8 1896.72,1217.69 1897.31,1217.18 1897.9,1219.17 1898.48,1219.94 1899.07,1219.44 1899.66,1221.59 1900.24,1221.07 1900.83,1218.12 1901.42,1217.87 1902,1215.31 1902.59,1214.81 1903.17,1213.25 1903.76,1213.1 1904.35,1210.49 1904.93,1212.66 1905.52,1212.48 1906.11,1212.42 1906.69,1213.25 1907.28,1213.21 1907.87,1208.5 1908.45,1206.22 1909.04,1205.4 1909.63,1205.63 1910.21,1210.77 1910.8,1210.56 1911.38,1210.59 1911.97,1209.36 1912.56,1208.29 1913.14,1210.44 1913.73,1211.48 1914.32,1211.74 1914.9,1212.77 1915.49,1213.62 1916.08,1213.27 1916.66,1214.17 1917.25,1215.04 1917.83,1215.79 1918.42,1211.98 1919.01,1211.87 1919.59,1209.15 1920.18,1205.52 1920.77,1205.94 1921.35,1207.46 1921.94,1206.73 1922.53,1209.22 1923.11,1210.37 1923.7,1209.08 1924.29,1211.18 1924.87,1207.44 1925.46,1207.49 1926.04,1208.91 1926.63,1209.03 1927.22,1209.9 1927.8,1208.85 1928.39,1207.65 1928.98,1207.76 1929.56,1206.75 1930.15,1207.1 1930.74,1207.45 1931.32,1209.74 1931.91,1212.02 1932.5,1209.55 1933.08,1208.56 1933.67,1210 1934.25,1208.62 1934.84,1209.99 1935.43,1210.39 1936.01,1211.81 1936.6,1213.04 1937.19,1214.08 1937.77,1211.56 1938.36,1211.57 1938.95,1208.05 1939.53,1206.85 1940.12,1207.92 1940.71,1209.21 1941.29,1212.89 1941.88,1212.66 1942.46,1211.46 1943.05,1211.46 1943.64,1212.76 1944.22,1212.56 1944.81,1212.47 1945.4,1211.1 1945.98,1213.42 1946.57,1214.47 1947.16,1215.01 1947.74,1214.51 1948.33,1211.59 1948.91,1214.91 1949.5,1213.33 1950.09,1210.75 1950.67,1209.45 1951.26,1209.44 1951.85,1210.92 1952.43,1207.38 1953.02,1203.96 1953.61,1205.59 1954.19,1202.2 1954.78,1197.87 1955.37,1198.43 1955.95,1199.25 1956.54,1198.81 1957.12,1200.45 1957.71,1202.26 1958.3,1202.64 1958.88,1202.01 1959.47,1204 1960.06,1203.12 1960.64,1203.47 1961.23,1202.74 1961.82,1204.34 1962.4,1200.68 1962.99,1199.9 1963.58,1199.32 1964.16,1199.74 1964.75,1200.25 1965.33,1203.41 1965.92,1203.67 1966.51,1202.96 1967.09,1203.57 1967.68,1204.02 1968.27,1206.72 1968.85,1205.7 1969.44,1204.82 1970.03,1205.19 1970.61,1202.96 1971.2,1204.54 1971.78,1204.95 1972.37,1202.82 1972.96,1204.61 1973.54,1207.17 1974.13,1207.31 1974.72,1207.38 1975.3,1209.8 1975.89,1209.93 1976.48,1210.04 1977.06,1211.41 1977.65,1212.68 1978.24,1213.64 1978.82,1212.12 1979.41,1213.25 1979.99,1213.04 1980.58,1211.61 1981.17,1212.56 1981.75,1213.38 1982.34,1214.36 1982.93,1211.96 1983.51,1210.56 1984.1,1210.66 1984.69,1209.65 1985.27,1210.66 1985.86,1211.86 1986.45,1211.53 1987.03,1210.24 1987.62,1208.93 1988.2,1209.01 1988.79,1209.2 1989.38,1213.05 1989.96,1214.06 1990.55,1213.58 1991.14,1211.19 1991.72,1212.15 1992.31,1211.97 1992.9,1210.8 1993.48,1211.95 1994.07,1210.55 1994.65,1210.32 1995.24,1207.92 1995.83,1207.88 1996.41,1208.22 1997,1206.93 1997.59,1205.83 1998.17,1206.09 1998.76,1205.08 1999.35,1207.75 1999.93,1209.01 2000.52,1205.47 2001.11,1207.04 2001.69,1207.43 2002.28,1206.22 2002.86,1206.5 2003.45,1206.53 2004.04,1206.8 2004.62,1206.01 2005.21,1206.35 2005.8,1205.4 2006.38,1203.27 2006.97,1203.52 2007.56,1207.37 2008.14,1205.97 2008.73,1206.21 2009.32,1207.74 2009.9,1211.4 2010.49,1210.21 2011.07,1210.21 2011.66,1211.47 2012.25,1212.72 2012.83,1211.33 2013.42,1212.37 2014.01,1212.21 2014.59,1209.82 2015.18,1210.65 2015.77,1209.31 2016.35,1208.03 2016.94,1206.99 2017.53,1207.14 2018.11,1210.84 2018.7,1212.9 2019.28,1212.74 2019.87,1213.71 2020.46,1213.6 2021.04,1213.63 2021.63,1212.21 2022.22,1212.01 2022.8,1209.55 2023.39,1210.83 2023.98,1209.6 2024.56,1210.48 2025.15,1209.41 2025.73,1208.33 2026.32,1209.66 2026.91,1208.61 2027.49,1208.64 2028.08,1208.5 2028.67,1208.4 2029.25,1210.88 2029.84,1210.8 2030.43,1210.79 2031.01,1213.09 2031.6,1212.83 2032.19,1212.93 2032.77,1214.75 2033.36,1218.18 2033.94,1220.06 2034.53,1219.6 2035.12,1217.87 2035.7,1217.55 2036.29,1213.67 2036.88,1213.49 2037.46,1213.17 2038.05,1215.34 2038.64,1216.13 2039.22,1215.66 2039.81,1216.37 2040.4,1216.28 2040.98,1214.79 2041.57,1214.61 2042.15,1214.36 2042.74,1215.13 2043.33,1215.95 2043.91,1216.82 2044.5,1216.26 2045.09,1218.24 2045.67,1219.04 2046.26,1218.52 2046.85,1218.08 2047.43,1217.56 2048.02,1214.78 2048.6,1213.11 2049.19,1211.76 2049.78,1210.54 2050.36,1209.29 2050.95,1207.1 2051.54,1207.32 2052.12,1208.52 2052.71,1210.88 2053.3,1209.56 2053.88,1209.77 2054.47,1210.07 2055.06,1210.06 2055.64,1207.47 2056.23,1207.81 2056.81,1205.58 2057.4,1206.99 2057.99,1206.26 2058.57,1206.72 2059.16,1203.16 2059.75,1203.42 2060.33,1203.59 2060.92,1202.48 2061.51,1203.62 2062.09,1201.96 2062.68,1202.45 2063.27,1202.87 2063.85,1203.45 2064.44,1202.9 2065.02,1203.25 2065.61,1202.52 2066.2,1203.06 2066.78,1205.76 2067.37,1210.84 2067.96,1213.04 2068.54,1214.37 2069.13,1216.64 2069.72,1218.78 2070.3,1217.19 2070.89,1216.91 2071.48,1216.65 2072.06,1215.12 2072.65,1214.76 2073.23,1213.16 2073.82,1210.48 2074.41,1211.65 2074.99,1208.92 2075.58,1208.88 2076.17,1210.18 2076.75,1210.89 2077.34,1210.87 2077.93,1209.77 2078.51,1211.05 2079.1,1209.67 2079.68,1209.55 2080.27,1208.09 2080.86,1209.36 2081.44,1209.35 2082.03,1209.12 2082.62,1206.64 2083.2,1209.19 2083.79,1209.47 2084.38,1211.01 2084.96,1211.14 2085.55,1211.98 2086.14,1212.81 2086.72,1212.79 2087.31,1212.79 2087.89,1210.53 2088.48,1209.37 2089.07,1210.48 2089.65,1210.39 2090.24,1211.64 2090.83,1214.21 2091.41,1210.81 2092,1213.12 2092.59,1213.14 2093.17,1212.95 2093.76,1210.39 2094.35,1211.45 2094.93,1212.35 2095.52,1212.22 2096.1,1214.36 2096.69,1211.78 2097.28,1210.6 2097.86,1211.61 2098.45,1211.12 2099.04,1212.34 2099.62,1211.09 2100.21,1212.4 2100.8,1213.36 2101.38,1212.99 2101.97,1211.56 2102.55,1213.89 2103.14,1213.8 2103.73,1213.74 2104.31,1212.43 2104.9,1209.01 2105.49,1209.03 2106.07,1209.03 2106.66,1207.83 2107.25,1209.27 2107.83,1207.07 2108.42,1204.93 2109.01,1206.64 2109.59,1207.93 2110.18,1206.9 2110.76,1207.06 2111.35,1210.57 2111.94,1210.26 2112.52,1210.27 2113.11,1210.08 2113.7,1210.19 2114.28,1210.12 2114.87,1208.64 2115.46,1208.72 2116.04,1208.88 2116.63,1205.28 2117.22,1203.27 2117.8,1203.33 2118.39,1203.18 2118.97,1205.84 2119.56,1203.76 2120.15,1205.34 2120.73,1204.26 2121.32,1205.48 2121.91,1203.22 2122.49,1202.36 2123.08,1201.9 2123.67,1204.79 2124.25,1203.57 2124.84,1205.06 2125.42,1204.24 2126.01,1210.18 2126.6,1208.89 2127.18,1207.61 2127.77,1207.49 2128.36,1206.29 2128.94,1205.42 2129.53,1205.59 2130.12,1205.93 2130.7,1205.86 2131.29,1204.67 2131.88,1206 2132.46,1207.44 2133.05,1207.78 2133.63,1206.97 2134.22,1206.28 2134.81,1205.23 2135.39,1206.65 2135.98,1206.69 2136.57,1206.95 2137.15,1206.83 2137.74,1207.97 2138.33,1208.1 2138.91,1209.37 2139.5,1210.73 2140.09,1211.83 2140.67,1211.75 2141.26,1211.84 2141.84,1209.61 2142.43,1213.16 2143.02,1210.38 2143.6,1207.97 2144.19,1210.54 2144.78,1210.91 2145.36,1210.72 2145.95,1210.76 2146.54,1211.96 2147.12,1214.48 2147.71,1214.39 2148.3,1212.95 2148.88,1214.06 2149.47,1212.46 2150.05,1212.25 2150.64,1213.41 2151.23,1214.4 2151.81,1215.5 2152.4,1216.36 2152.99,1216.1 2153.57,1218.01 2154.16,1215.15 2154.75,1216.26 2155.33,1214.94 2155.92,1212.26 2156.5,1212.02 2157.09,1211.97 2157.68,1210.73 2158.26,1213.08 \"/>\n<path clip-path=\"url(#clip312)\" d=\"M986.025 1210.33 L986.612 1210.33 L987.198 1210.33 L987.785 1210.33 L988.371 1210.33 L988.957 1210.33 L989.544 1210.33 L990.13 1210.33 L990.717 1210.33 L991.303 1210.33 L991.889 1210.33 L992.476 1210.33 L993.062 1210.33 L993.649 1210.33 L994.235 1210.33 L994.822 1210.33 L995.408 1210.33 L995.994 1210.33 L996.581 1210.33 L997.167 1210.33 L997.754 1210.33 L998.34 1210.33 L998.926 1210.33 L999.513 1210.33 L1000.1 1210.33 L1000.69 1210.33 L1001.27 1210.33 L1001.86 1210.33 L1002.44 1210.33 L1003.03 1210.33 L1003.62 1210.33 L1004.2 1210.33 L1004.79 1210.33 L1005.38 1210.33 L1005.96 1210.33 L1006.55 1210.33 L1007.14 1210.33 L1007.72 1210.33 L1008.31 1210.33 L1008.9 1210.33 L1009.48 1210.33 L1010.07 1210.33 L1010.65 1210.33 L1011.24 1210.33 L1011.83 1210.33 L1012.41 1210.33 L1013 1210.33 L1013.59 1210.33 L1014.17 1210.33 L1014.76 1210.33 L1015.35 1210.33 L1015.93 1210.33 L1016.52 1210.33 L1017.11 1210.33 L1017.69 1210.33 L1018.28 1210.33 L1018.86 1210.33 L1019.45 1210.33 L1020.04 1210.33 L1020.62 1210.33 L1021.21 1210.33 L1021.8 1210.33 L1022.38 1210.33 L1022.97 1210.33 L1023.56 1210.33 L1024.14 1210.33 L1024.73 1210.33 L1025.32 1210.33 L1025.9 1210.33 L1026.49 1210.33 L1027.07 1210.33 L1027.66 1210.33 L1028.25 1210.33 L1028.83 1210.33 L1029.42 1210.33 L1030.01 1210.33 L1030.59 1210.33 L1031.18 1210.33 L1031.77 1210.33 L1032.35 1210.33 L1032.94 1210.33 L1033.52 1210.33 L1034.11 1210.33 L1034.7 1210.33 L1035.28 1210.33 L1035.87 1210.33 L1036.46 1210.33 L1037.04 1210.33 L1037.63 1210.33 L1038.22 1210.33 L1038.8 1210.33 L1039.39 1210.33 L1039.98 1210.33 L1040.56 1210.33 L1041.15 1210.33 L1041.73 1210.33 L1042.32 1210.33 L1042.91 1210.33 L1043.49 1210.33 L1044.08 1210.33 L1044.67 1210.33 L1045.25 1210.33 L1045.84 1210.33 L1046.43 1210.33 L1047.01 1210.33 L1047.6 1210.33 L1048.19 1210.33 L1048.77 1210.33 L1049.36 1210.33 L1049.94 1210.33 L1050.53 1210.33 L1051.12 1210.33 L1051.7 1210.33 L1052.29 1210.33 L1052.88 1210.33 L1053.46 1210.33 L1054.05 1210.33 L1054.64 1210.33 L1055.22 1210.33 L1055.81 1210.33 L1056.39 1210.33 L1056.98 1210.33 L1057.57 1210.33 L1058.15 1210.33 L1058.74 1210.33 L1059.33 1210.33 L1059.91 1210.33 L1060.5 1210.33 L1061.09 1210.33 L1061.67 1210.33 L1062.26 1210.33 L1062.85 1210.33 L1063.43 1210.33 L1064.02 1210.33 L1064.6 1210.33 L1065.19 1210.33 L1065.78 1210.33 L1066.36 1210.33 L1066.95 1210.33 L1067.54 1210.33 L1068.12 1210.33 L1068.71 1210.33 L1069.3 1210.33 L1069.88 1210.33 L1070.47 1210.33 L1071.06 1210.33 L1071.64 1210.33 L1072.23 1210.33 L1072.81 1210.33 L1073.4 1210.33 L1073.99 1210.33 L1074.57 1210.33 L1075.16 1210.33 L1075.75 1210.33 L1076.33 1210.33 L1076.92 1210.33 L1077.51 1210.33 L1078.09 1210.33 L1078.68 1210.33 L1079.26 1210.33 L1079.85 1210.33 L1080.44 1210.33 L1081.02 1210.33 L1081.61 1210.33 L1082.2 1210.33 L1082.78 1210.33 L1083.37 1210.33 L1083.96 1210.33 L1084.54 1210.33 L1085.13 1210.33 L1085.72 1210.33 L1086.3 1210.33 L1086.89 1210.33 L1087.47 1210.33 L1088.06 1210.33 L1088.65 1210.33 L1089.23 1210.33 L1089.82 1210.33 L1090.41 1210.33 L1090.99 1210.33 L1091.58 1210.33 L1092.17 1210.33 L1092.75 1210.33 L1093.34 1210.33 L1093.93 1210.33 L1094.51 1210.33 L1095.1 1210.33 L1095.68 1210.33 L1096.27 1210.33 L1096.86 1210.33 L1097.44 1210.33 L1098.03 1210.33 L1098.62 1210.33 L1099.2 1210.33 L1099.79 1210.33 L1100.38 1210.33 L1100.96 1210.33 L1101.55 1210.33 L1102.14 1210.33 L1102.72 1210.33 L1103.31 1210.33 L1103.89 1210.33 L1104.48 1210.33 L1105.07 1210.33 L1105.65 1210.33 L1106.24 1210.33 L1106.83 1210.33 L1107.41 1210.33 L1108 1210.33 L1108.59 1210.33 L1109.17 1210.33 L1109.76 1210.33 L1110.34 1210.33 L1110.93 1210.33 L1111.52 1210.33 L1112.1 1210.33 L1112.69 1210.33 L1113.28 1210.33 L1113.86 1210.33 L1114.45 1210.33 L1115.04 1210.33 L1115.62 1210.33 L1116.21 1210.33 L1116.8 1210.33 L1117.38 1210.33 L1117.97 1210.33 L1118.55 1210.33 L1119.14 1210.33 L1119.73 1210.33 L1120.31 1210.33 L1120.9 1210.33 L1121.49 1210.33 L1122.07 1210.33 L1122.66 1210.33 L1123.25 1210.33 L1123.83 1210.33 L1124.42 1210.33 L1125.01 1210.33 L1125.59 1210.33 L1126.18 1210.33 L1126.76 1210.33 L1127.35 1210.33 L1127.94 1210.33 L1128.52 1210.33 L1129.11 1210.33 L1129.7 1210.33 L1130.28 1210.33 L1130.87 1210.33 L1131.46 1210.33 L1132.04 1210.33 L1132.63 1210.33 L1133.21 1210.33 L1133.8 1210.33 L1134.39 1210.33 L1134.97 1210.33 L1135.56 1210.33 L1136.15 1210.33 L1136.73 1210.33 L1137.32 1210.33 L1137.91 1210.33 L1138.49 1210.33 L1139.08 1210.33 L1139.67 1210.33 L1140.25 1210.33 L1140.84 1210.33 L1141.42 1210.33 L1142.01 1210.33 L1142.6 1210.33 L1143.18 1210.33 L1143.77 1210.33 L1144.36 1210.33 L1144.94 1210.33 L1145.53 1210.33 L1146.12 1210.33 L1146.7 1210.33 L1147.29 1210.33 L1147.88 1210.33 L1148.46 1210.33 L1149.05 1210.33 L1149.63 1210.33 L1150.22 1210.33 L1150.81 1210.33 L1151.39 1210.33 L1151.98 1210.33 L1152.57 1210.33 L1153.15 1210.33 L1153.74 1210.33 L1154.33 1210.33 L1154.91 1210.33 L1155.5 1210.33 L1156.09 1210.33 L1156.67 1210.33 L1157.26 1210.33 L1157.84 1210.33 L1158.43 1210.33 L1159.02 1210.33 L1159.6 1210.33 L1160.19 1210.33 L1160.78 1210.33 L1161.36 1210.33 L1161.95 1210.33 L1162.54 1210.33 L1163.12 1210.33 L1163.71 1210.33 L1164.29 1210.33 L1164.88 1210.33 L1165.47 1210.33 L1166.05 1210.33 L1166.64 1210.33 L1167.23 1210.33 L1167.81 1210.33 L1168.4 1210.33 L1168.99 1210.33 L1169.57 1210.33 L1170.16 1210.33 L1170.75 1210.33 L1171.33 1210.33 L1171.92 1210.33 L1172.5 1210.33 L1173.09 1210.33 L1173.68 1210.33 L1174.26 1210.33 L1174.85 1210.33 L1175.44 1210.33 L1176.02 1210.33 L1176.61 1210.33 L1177.2 1210.33 L1177.78 1210.33 L1178.37 1210.33 L1178.96 1210.33 L1179.54 1210.33 L1180.13 1210.33 L1180.71 1210.33 L1181.3 1210.33 L1181.89 1210.33 L1182.47 1210.33 L1183.06 1210.33 L1183.65 1210.33 L1184.23 1210.33 L1184.82 1210.33 L1185.41 1210.33 L1185.99 1210.33 L1186.58 1210.33 L1187.16 1210.33 L1187.75 1210.33 L1188.34 1210.33 L1188.92 1210.33 L1189.51 1210.33 L1190.1 1210.33 L1190.68 1210.33 L1191.27 1210.33 L1191.86 1210.33 L1192.44 1210.33 L1193.03 1210.33 L1193.62 1210.33 L1194.2 1210.33 L1194.79 1210.33 L1195.37 1210.33 L1195.96 1210.33 L1196.55 1210.33 L1197.13 1210.33 L1197.72 1210.33 L1198.31 1210.33 L1198.89 1210.33 L1199.48 1210.33 L1200.07 1210.33 L1200.65 1210.33 L1201.24 1210.33 L1201.83 1210.33 L1202.41 1210.33 L1203 1210.33 L1203.58 1210.33 L1204.17 1210.33 L1204.76 1210.33 L1205.34 1210.33 L1205.93 1210.33 L1206.52 1210.33 L1207.1 1210.33 L1207.69 1210.33 L1208.28 1210.33 L1208.86 1210.33 L1209.45 1210.33 L1210.03 1210.33 L1210.62 1210.33 L1211.21 1210.33 L1211.79 1210.33 L1212.38 1210.33 L1212.97 1210.33 L1213.55 1210.33 L1214.14 1210.33 L1214.73 1210.33 L1215.31 1210.33 L1215.9 1210.33 L1216.49 1210.33 L1217.07 1210.33 L1217.66 1210.33 L1218.24 1210.33 L1218.83 1210.33 L1219.42 1210.33 L1220 1210.33 L1220.59 1210.33 L1221.18 1210.33 L1221.76 1210.33 L1222.35 1210.33 L1222.94 1210.33 L1223.52 1210.33 L1224.11 1210.33 L1224.7 1210.33 L1225.28 1210.33 L1225.87 1210.33 L1226.45 1210.33 L1227.04 1210.33 L1227.63 1210.33 L1228.21 1210.33 L1228.8 1210.33 L1229.39 1210.33 L1229.97 1210.33 L1230.56 1210.33 L1231.15 1210.33 L1231.73 1210.33 L1232.32 1210.33 L1232.91 1210.33 L1233.49 1210.33 L1234.08 1210.33 L1234.66 1210.33 L1235.25 1210.33 L1235.84 1210.33 L1236.42 1210.33 L1237.01 1210.33 L1237.6 1210.33 L1238.18 1210.33 L1238.77 1210.33 L1239.36 1210.33 L1239.94 1210.33 L1240.53 1210.33 L1241.11 1210.33 L1241.7 1210.33 L1242.29 1210.33 L1242.87 1210.33 L1243.46 1210.33 L1244.05 1210.33 L1244.63 1210.33 L1245.22 1210.33 L1245.81 1210.33 L1246.39 1210.33 L1246.98 1210.33 L1247.57 1210.33 L1248.15 1210.33 L1248.74 1210.33 L1249.32 1210.33 L1249.91 1210.33 L1250.5 1210.33 L1251.08 1210.33 L1251.67 1210.33 L1252.26 1210.33 L1252.84 1210.33 L1253.43 1210.33 L1254.02 1210.33 L1254.6 1210.33 L1255.19 1210.33 L1255.78 1210.33 L1256.36 1210.33 L1256.95 1210.33 L1257.53 1210.33 L1258.12 1210.33 L1258.71 1210.33 L1259.29 1210.33 L1259.88 1210.33 L1260.47 1210.33 L1261.05 1210.33 L1261.64 1210.33 L1262.23 1210.33 L1262.81 1210.33 L1263.4 1210.33 L1263.98 1210.33 L1264.57 1210.33 L1265.16 1210.33 L1265.74 1210.33 L1266.33 1210.33 L1266.92 1210.33 L1267.5 1210.33 L1268.09 1210.33 L1268.68 1210.33 L1269.26 1210.33 L1269.85 1210.33 L1270.44 1210.33 L1271.02 1210.33 L1271.61 1210.33 L1272.19 1210.33 L1272.78 1210.33 L1273.37 1210.33 L1273.95 1210.33 L1274.54 1210.33 L1275.13 1210.33 L1275.71 1210.33 L1276.3 1210.33 L1276.89 1210.33 L1277.47 1210.33 L1278.06 1210.33 L1278.65 1210.33 L1279.23 1210.33 L1279.82 1210.33 L1280.4 1210.33 L1280.99 1210.33 L1281.58 1210.33 L1282.16 1210.33 L1282.75 1210.33 L1283.34 1210.33 L1283.92 1210.33 L1284.51 1210.33 L1285.1 1210.33 L1285.68 1210.33 L1286.27 1210.33 L1286.86 1210.33 L1287.44 1210.33 L1288.03 1210.33 L1288.61 1210.33 L1289.2 1210.33 L1289.79 1210.33 L1290.37 1210.33 L1290.96 1210.33 L1291.55 1210.33 L1292.13 1210.33 L1292.72 1210.33 L1293.31 1210.33 L1293.89 1210.33 L1294.48 1210.33 L1295.06 1210.33 L1295.65 1210.33 L1296.24 1210.33 L1296.82 1210.33 L1297.41 1210.33 L1298 1210.33 L1298.58 1210.33 L1299.17 1210.33 L1299.76 1210.33 L1300.34 1210.33 L1300.93 1210.33 L1301.52 1210.33 L1302.1 1210.33 L1302.69 1210.33 L1303.27 1210.33 L1303.86 1210.33 L1304.45 1210.33 L1305.03 1210.33 L1305.62 1210.33 L1306.21 1210.33 L1306.79 1210.33 L1307.38 1210.33 L1307.97 1210.33 L1308.55 1210.33 L1309.14 1210.33 L1309.73 1210.33 L1310.31 1210.33 L1310.9 1210.33 L1311.48 1210.33 L1312.07 1210.33 L1312.66 1210.33 L1313.24 1210.33 L1313.83 1210.33 L1314.42 1210.33 L1315 1210.33 L1315.59 1210.33 L1316.18 1210.33 L1316.76 1210.33 L1317.35 1210.33 L1317.93 1210.33 L1318.52 1210.33 L1319.11 1210.33 L1319.69 1210.33 L1320.28 1210.33 L1320.87 1210.33 L1321.45 1210.33 L1322.04 1210.33 L1322.63 1210.33 L1323.21 1210.33 L1323.8 1210.33 L1324.39 1210.33 L1324.97 1210.33 L1325.56 1210.33 L1326.14 1210.33 L1326.73 1210.33 L1327.32 1210.33 L1327.9 1210.33 L1328.49 1210.33 L1329.08 1210.33 L1329.66 1210.33 L1330.25 1210.33 L1330.84 1210.33 L1331.42 1210.33 L1332.01 1210.33 L1332.6 1210.33 L1333.18 1210.33 L1333.77 1210.33 L1334.35 1210.33 L1334.94 1210.33 L1335.53 1210.33 L1336.11 1210.33 L1336.7 1210.33 L1337.29 1210.33 L1337.87 1210.33 L1338.46 1210.33 L1339.05 1210.33 L1339.63 1210.33 L1340.22 1210.33 L1340.8 1210.33 L1341.39 1210.33 L1341.98 1210.33 L1342.56 1210.33 L1343.15 1210.33 L1343.74 1210.33 L1344.32 1210.33 L1344.91 1210.33 L1345.5 1210.33 L1346.08 1210.33 L1346.67 1210.33 L1347.26 1210.33 L1347.84 1210.33 L1348.43 1210.33 L1349.01 1210.33 L1349.6 1210.33 L1350.19 1210.33 L1350.77 1210.33 L1351.36 1210.33 L1351.95 1210.33 L1352.53 1210.33 L1353.12 1210.33 L1353.71 1210.33 L1354.29 1210.33 L1354.88 1210.33 L1355.47 1210.33 L1356.05 1210.33 L1356.64 1210.33 L1357.22 1210.33 L1357.81 1210.33 L1358.4 1210.33 L1358.98 1210.33 L1359.57 1210.33 L1360.16 1210.33 L1360.74 1210.33 L1361.33 1210.33 L1361.92 1210.33 L1362.5 1210.33 L1363.09 1210.33 L1363.68 1210.33 L1364.26 1210.33 L1364.85 1210.33 L1365.43 1210.33 L1366.02 1210.33 L1366.61 1210.33 L1367.19 1210.33 L1367.78 1210.33 L1368.37 1210.33 L1368.95 1210.33 L1369.54 1210.33 L1370.13 1210.33 L1370.71 1210.33 L1371.3 1210.33 L1371.88 1210.33 L1372.47 1210.33 L1373.06 1210.33 L1373.64 1210.33 L1374.23 1210.33 L1374.82 1210.33 L1375.4 1210.33 L1375.99 1210.33 L1376.58 1210.33 L1377.16 1210.33 L1377.75 1210.33 L1378.34 1210.33 L1378.92 1210.33 L1379.51 1210.33 L1380.09 1210.33 L1380.68 1210.33 L1381.27 1210.33 L1381.85 1210.33 L1382.44 1210.33 L1383.03 1210.33 L1383.61 1210.33 L1384.2 1210.33 L1384.79 1210.33 L1385.37 1210.33 L1385.96 1210.33 L1386.55 1210.33 L1387.13 1210.33 L1387.72 1210.33 L1388.3 1210.33 L1388.89 1210.33 L1389.48 1210.33 L1390.06 1210.33 L1390.65 1210.33 L1391.24 1210.33 L1391.82 1210.33 L1392.41 1210.33 L1393 1210.33 L1393.58 1210.33 L1394.17 1210.33 L1394.75 1210.33 L1395.34 1210.33 L1395.93 1210.33 L1396.51 1210.33 L1397.1 1210.33 L1397.69 1210.33 L1398.27 1210.33 L1398.86 1210.33 L1399.45 1210.33 L1400.03 1210.33 L1400.62 1210.33 L1401.21 1210.33 L1401.79 1210.33 L1402.38 1210.33 L1402.96 1210.33 L1403.55 1210.33 L1404.14 1210.33 L1404.72 1210.33 L1405.31 1210.33 L1405.9 1210.33 L1406.48 1210.33 L1407.07 1210.33 L1407.66 1210.33 L1408.24 1210.33 L1408.83 1210.33 L1409.42 1210.33 L1410 1210.33 L1410.59 1210.33 L1411.17 1210.33 L1411.76 1210.33 L1412.35 1210.33 L1412.93 1210.33 L1413.52 1210.33 L1414.11 1210.33 L1414.69 1210.33 L1415.28 1210.33 L1415.87 1210.33 L1416.45 1210.33 L1417.04 1210.33 L1417.63 1210.33 L1418.21 1210.33 L1418.8 1210.33 L1419.38 1210.33 L1419.97 1210.33 L1420.56 1210.33 L1421.14 1210.33 L1421.73 1210.33 L1422.32 1210.33 L1422.9 1210.33 L1423.49 1210.33 L1424.08 1210.33 L1424.66 1210.33 L1425.25 1210.33 L1425.83 1210.33 L1426.42 1210.33 L1427.01 1210.33 L1427.59 1210.33 L1428.18 1210.33 L1428.77 1210.33 L1429.35 1210.33 L1429.94 1210.33 L1430.53 1210.33 L1431.11 1210.33 L1431.7 1210.33 L1432.29 1210.33 L1432.87 1210.33 L1433.46 1210.33 L1434.04 1210.33 L1434.63 1210.33 L1435.22 1210.33 L1435.8 1210.33 L1436.39 1210.33 L1436.98 1210.33 L1437.56 1210.33 L1438.15 1210.33 L1438.74 1210.33 L1439.32 1210.33 L1439.91 1210.33 L1440.5 1210.33 L1441.08 1210.33 L1441.67 1210.33 L1442.25 1210.33 L1442.84 1210.33 L1443.43 1210.33 L1444.01 1210.33 L1444.6 1210.33 L1445.19 1210.33 L1445.77 1210.33 L1446.36 1210.33 L1446.95 1210.33 L1447.53 1210.33 L1448.12 1210.33 L1448.7 1210.33 L1449.29 1210.33 L1449.88 1210.33 L1450.46 1210.33 L1451.05 1210.33 L1451.64 1210.33 L1452.22 1210.33 L1452.81 1210.33 L1453.4 1210.33 L1453.98 1210.33 L1454.57 1210.33 L1455.16 1210.33 L1455.74 1210.33 L1456.33 1210.33 L1456.91 1210.33 L1457.5 1210.33 L1458.09 1210.33 L1458.67 1210.33 L1459.26 1210.33 L1459.85 1210.33 L1460.43 1210.33 L1461.02 1210.33 L1461.61 1210.33 L1462.19 1210.33 L1462.78 1210.33 L1463.37 1210.33 L1463.95 1210.33 L1464.54 1210.33 L1465.12 1210.33 L1465.71 1210.33 L1466.3 1210.33 L1466.88 1210.33 L1467.47 1210.33 L1468.06 1210.33 L1468.64 1210.33 L1469.23 1210.33 L1469.82 1210.33 L1470.4 1210.33 L1470.99 1210.33 L1471.57 1210.33 L1472.16 1210.33 L1472.75 1210.33 L1473.33 1210.33 L1473.92 1210.33 L1474.51 1210.33 L1475.09 1210.33 L1475.68 1210.33 L1476.27 1210.33 L1476.85 1210.33 L1477.44 1210.33 L1478.03 1210.33 L1478.61 1210.33 L1479.2 1210.33 L1479.78 1210.33 L1480.37 1210.33 L1480.96 1210.33 L1481.54 1210.33 L1482.13 1210.33 L1482.72 1210.33 L1483.3 1210.33 L1483.89 1210.33 L1484.48 1210.33 L1485.06 1210.33 L1485.65 1210.33 L1486.24 1210.33 L1486.82 1210.33 L1487.41 1210.33 L1487.99 1210.33 L1488.58 1210.33 L1489.17 1210.33 L1489.75 1210.33 L1490.34 1210.33 L1490.93 1210.33 L1491.51 1210.33 L1492.1 1210.33 L1492.69 1210.33 L1493.27 1210.33 L1493.86 1210.33 L1494.45 1210.33 L1495.03 1210.33 L1495.62 1210.33 L1496.2 1210.33 L1496.79 1210.33 L1497.38 1210.33 L1497.96 1210.33 L1498.55 1210.33 L1499.14 1210.33 L1499.72 1210.33 L1500.31 1210.33 L1500.9 1210.33 L1501.48 1210.33 L1502.07 1210.33 L1502.65 1210.33 L1503.24 1210.33 L1503.83 1210.33 L1504.41 1210.33 L1505 1210.33 L1505.59 1210.33 L1506.17 1210.33 L1506.76 1210.33 L1507.35 1210.33 L1507.93 1210.33 L1508.52 1210.33 L1509.11 1210.33 L1509.69 1210.33 L1510.28 1210.33 L1510.86 1210.33 L1511.45 1210.33 L1512.04 1210.33 L1512.62 1210.33 L1513.21 1210.33 L1513.8 1210.33 L1514.38 1210.33 L1514.97 1210.33 L1515.56 1210.33 L1516.14 1210.33 L1516.73 1210.33 L1517.32 1210.33 L1517.9 1210.33 L1518.49 1210.33 L1519.07 1210.33 L1519.66 1210.33 L1520.25 1210.33 L1520.83 1210.33 L1521.42 1210.33 L1522.01 1210.33 L1522.59 1210.33 L1523.18 1210.33 L1523.77 1210.33 L1524.35 1210.33 L1524.94 1210.33 L1525.52 1210.33 L1526.11 1210.33 L1526.7 1210.33 L1527.28 1210.33 L1527.87 1210.33 L1528.46 1210.33 L1529.04 1210.33 L1529.63 1210.33 L1530.22 1210.33 L1530.8 1210.33 L1531.39 1210.33 L1531.98 1210.33 L1532.56 1210.33 L1533.15 1210.33 L1533.73 1210.33 L1534.32 1210.33 L1534.91 1210.33 L1535.49 1210.33 L1536.08 1210.33 L1536.67 1210.33 L1537.25 1210.33 L1537.84 1210.33 L1538.43 1210.33 L1539.01 1210.33 L1539.6 1210.33 L1540.19 1210.33 L1540.77 1210.33 L1541.36 1210.33 L1541.94 1210.33 L1542.53 1210.33 L1543.12 1210.33 L1543.7 1210.33 L1544.29 1210.33 L1544.88 1210.33 L1545.46 1210.33 L1546.05 1210.33 L1546.64 1210.33 L1547.22 1210.33 L1547.81 1210.33 L1548.4 1210.33 L1548.98 1210.33 L1549.57 1210.33 L1550.15 1210.33 L1550.74 1210.33 L1551.33 1210.33 L1551.91 1210.33 L1552.5 1210.33 L1553.09 1210.33 L1553.67 1210.33 L1554.26 1210.33 L1554.85 1210.33 L1555.43 1210.33 L1556.02 1210.33 L1556.6 1210.33 L1557.19 1210.33 L1557.78 1210.33 L1558.36 1210.33 L1558.95 1210.33 L1559.54 1210.33 L1560.12 1210.33 L1560.71 1210.33 L1561.3 1210.33 L1561.88 1210.33 L1562.47 1210.33 L1563.06 1210.33 L1563.64 1210.33 L1564.23 1210.33 L1564.81 1210.33 L1565.4 1210.33 L1565.99 1210.33 L1566.57 1210.33 L1567.16 1210.33 L1567.75 1210.33 L1568.33 1210.33 L1568.92 1210.33 L1569.51 1210.33 L1570.09 1210.33 L1570.68 1210.33 L1571.27 1210.33 L1571.85 1210.33 L1572.44 1210.33 L1573.02 1210.33 L1573.61 1210.33 L1574.2 1210.33 L1574.78 1210.33 L1575.37 1210.33 L1575.96 1210.33 L1576.54 1210.33 L1577.13 1210.33 L1577.72 1210.33 L1578.3 1210.33 L1578.89 1210.33 L1579.47 1210.33 L1580.06 1210.33 L1580.65 1210.33 L1581.23 1210.33 L1581.82 1210.33 L1582.41 1210.33 L1582.99 1210.33 L1583.58 1210.33 L1584.17 1210.33 L1584.75 1210.33 L1585.34 1210.33 L1585.93 1210.33 L1586.51 1210.33 L1587.1 1210.33 L1587.68 1210.33 L1588.27 1210.33 L1588.86 1210.33 L1589.44 1210.33 L1590.03 1210.33 L1590.62 1210.33 L1591.2 1210.33 L1591.79 1210.33 L1592.38 1210.33 L1592.96 1210.33 L1593.55 1210.33 L1594.14 1210.33 L1594.72 1210.33 L1595.31 1210.33 L1595.89 1210.33 L1596.48 1210.33 L1597.07 1210.33 L1597.65 1210.33 L1598.24 1210.33 L1598.83 1210.33 L1599.41 1210.33 L1600 1210.33 L1600.59 1210.33 L1601.17 1210.33 L1601.76 1210.33 L1602.34 1210.33 L1602.93 1210.33 L1603.52 1210.33 L1604.1 1210.33 L1604.69 1210.33 L1605.28 1210.33 L1605.86 1210.33 L1606.45 1210.33 L1607.04 1210.33 L1607.62 1210.33 L1608.21 1210.33 L1608.8 1210.33 L1609.38 1210.33 L1609.97 1210.33 L1610.55 1210.33 L1611.14 1210.33 L1611.73 1210.33 L1612.31 1210.33 L1612.9 1210.33 L1613.49 1210.33 L1614.07 1210.33 L1614.66 1210.33 L1615.25 1210.33 L1615.83 1210.33 L1616.42 1210.33 L1617.01 1210.33 L1617.59 1210.33 L1618.18 1210.33 L1618.76 1210.33 L1619.35 1210.33 L1619.94 1210.33 L1620.52 1210.33 L1621.11 1210.33 L1621.7 1210.33 L1622.28 1210.33 L1622.87 1210.33 L1623.46 1210.33 L1624.04 1210.33 L1624.63 1210.33 L1625.22 1210.33 L1625.8 1210.33 L1626.39 1210.33 L1626.97 1210.33 L1627.56 1210.33 L1628.15 1210.33 L1628.73 1210.33 L1629.32 1210.33 L1629.91 1210.33 L1630.49 1210.33 L1631.08 1210.33 L1631.67 1210.33 L1632.25 1210.33 L1632.84 1210.33 L1633.42 1210.33 L1634.01 1210.33 L1634.6 1210.33 L1635.18 1210.33 L1635.77 1210.33 L1636.36 1210.33 L1636.94 1210.33 L1637.53 1210.33 L1638.12 1210.33 L1638.7 1210.33 L1639.29 1210.33 L1639.88 1210.33 L1640.46 1210.33 L1641.05 1210.33 L1641.63 1210.33 L1642.22 1210.33 L1642.81 1210.33 L1643.39 1210.33 L1643.98 1210.33 L1644.57 1210.33 L1645.15 1210.33 L1645.74 1210.33 L1646.33 1210.33 L1646.91 1210.33 L1647.5 1210.33 L1648.09 1210.33 L1648.67 1210.33 L1649.26 1210.33 L1649.84 1210.33 L1650.43 1210.33 L1651.02 1210.33 L1651.6 1210.33 L1652.19 1210.33 L1652.78 1210.33 L1653.36 1210.33 L1653.95 1210.33 L1654.54 1210.33 L1655.12 1210.33 L1655.71 1210.33 L1656.29 1210.33 L1656.88 1210.33 L1657.47 1210.33 L1658.05 1210.33 L1658.64 1210.33 L1659.23 1210.33 L1659.81 1210.33 L1660.4 1210.33 L1660.99 1210.33 L1661.57 1210.33 L1662.16 1210.33 L1662.75 1210.33 L1663.33 1210.33 L1663.92 1210.33 L1664.5 1210.33 L1665.09 1210.33 L1665.68 1210.33 L1666.26 1210.33 L1666.85 1210.33 L1667.44 1210.33 L1668.02 1210.33 L1668.61 1210.33 L1669.2 1210.33 L1669.78 1210.33 L1670.37 1210.33 L1670.96 1210.33 L1671.54 1210.33 L1672.13 1210.33 L1672.71 1210.33 L1673.3 1210.33 L1673.89 1210.33 L1674.47 1210.33 L1675.06 1210.33 L1675.65 1210.33 L1676.23 1210.33 L1676.82 1210.33 L1677.41 1210.33 L1677.99 1210.33 L1678.58 1210.33 L1679.17 1210.33 L1679.75 1210.33 L1680.34 1210.33 L1680.92 1210.33 L1681.51 1210.33 L1682.1 1210.33 L1682.68 1210.33 L1683.27 1210.33 L1683.86 1210.33 L1684.44 1210.33 L1685.03 1210.33 L1685.62 1210.33 L1686.2 1210.33 L1686.79 1210.33 L1687.37 1210.33 L1687.96 1210.33 L1688.55 1210.33 L1689.13 1210.33 L1689.72 1210.33 L1690.31 1210.33 L1690.89 1210.33 L1691.48 1210.33 L1692.07 1210.33 L1692.65 1210.33 L1693.24 1210.33 L1693.83 1210.33 L1694.41 1210.33 L1695 1210.33 L1695.58 1210.33 L1696.17 1210.33 L1696.76 1210.33 L1697.34 1210.33 L1697.93 1210.33 L1698.52 1210.33 L1699.1 1210.33 L1699.69 1210.33 L1700.28 1210.33 L1700.86 1210.33 L1701.45 1210.33 L1702.04 1210.33 L1702.62 1210.33 L1703.21 1210.33 L1703.79 1210.33 L1704.38 1210.33 L1704.97 1210.33 L1705.55 1210.33 L1706.14 1210.33 L1706.73 1210.33 L1707.31 1210.33 L1707.9 1210.33 L1708.49 1210.33 L1709.07 1210.33 L1709.66 1210.33 L1710.24 1210.33 L1710.83 1210.33 L1711.42 1210.33 L1712 1210.33 L1712.59 1210.33 L1713.18 1210.33 L1713.76 1210.33 L1714.35 1210.33 L1714.94 1210.33 L1715.52 1210.33 L1716.11 1210.33 L1716.7 1210.33 L1717.28 1210.33 L1717.87 1210.33 L1718.45 1210.33 L1719.04 1210.33 L1719.63 1210.33 L1720.21 1210.33 L1720.8 1210.33 L1721.39 1210.33 L1721.97 1210.33 L1722.56 1210.33 L1723.15 1210.33 L1723.73 1210.33 L1724.32 1210.33 L1724.91 1210.33 L1725.49 1210.33 L1726.08 1210.33 L1726.66 1210.33 L1727.25 1210.33 L1727.84 1210.33 L1728.42 1210.33 L1729.01 1210.33 L1729.6 1210.33 L1730.18 1210.33 L1730.77 1210.33 L1731.36 1210.33 L1731.94 1210.33 L1732.53 1210.33 L1733.11 1210.33 L1733.7 1210.33 L1734.29 1210.33 L1734.87 1210.33 L1735.46 1210.33 L1736.05 1210.33 L1736.63 1210.33 L1737.22 1210.33 L1737.81 1210.33 L1738.39 1210.33 L1738.98 1210.33 L1739.57 1210.33 L1740.15 1210.33 L1740.74 1210.33 L1741.32 1210.33 L1741.91 1210.33 L1742.5 1210.33 L1743.08 1210.33 L1743.67 1210.33 L1744.26 1210.33 L1744.84 1210.33 L1745.43 1210.33 L1746.02 1210.33 L1746.6 1210.33 L1747.19 1210.33 L1747.78 1210.33 L1748.36 1210.33 L1748.95 1210.33 L1749.53 1210.33 L1750.12 1210.33 L1750.71 1210.33 L1751.29 1210.33 L1751.88 1210.33 L1752.47 1210.33 L1753.05 1210.33 L1753.64 1210.33 L1754.23 1210.33 L1754.81 1210.33 L1755.4 1210.33 L1755.99 1210.33 L1756.57 1210.33 L1757.16 1210.33 L1757.74 1210.33 L1758.33 1210.33 L1758.92 1210.33 L1759.5 1210.33 L1760.09 1210.33 L1760.68 1210.33 L1761.26 1210.33 L1761.85 1210.33 L1762.44 1210.33 L1763.02 1210.33 L1763.61 1210.33 L1764.19 1210.33 L1764.78 1210.33 L1765.37 1210.33 L1765.95 1210.33 L1766.54 1210.33 L1767.13 1210.33 L1767.71 1210.33 L1768.3 1210.33 L1768.89 1210.33 L1769.47 1210.33 L1770.06 1210.33 L1770.65 1210.33 L1771.23 1210.33 L1771.82 1210.33 L1772.4 1210.33 L1772.99 1210.33 L1773.58 1210.33 L1774.16 1210.33 L1774.75 1210.33 L1775.34 1210.33 L1775.92 1210.33 L1776.51 1210.33 L1777.1 1210.33 L1777.68 1210.33 L1778.27 1210.33 L1778.86 1210.33 L1779.44 1210.33 L1780.03 1210.33 L1780.61 1210.33 L1781.2 1210.33 L1781.79 1210.33 L1782.37 1210.33 L1782.96 1210.33 L1783.55 1210.33 L1784.13 1210.33 L1784.72 1210.33 L1785.31 1210.33 L1785.89 1210.33 L1786.48 1210.33 L1787.06 1210.33 L1787.65 1210.33 L1788.24 1210.33 L1788.82 1210.33 L1789.41 1210.33 L1790 1210.33 L1790.58 1210.33 L1791.17 1210.33 L1791.76 1210.33 L1792.34 1210.33 L1792.93 1210.33 L1793.52 1210.33 L1794.1 1210.33 L1794.69 1210.33 L1795.27 1210.33 L1795.86 1210.33 L1796.45 1210.33 L1797.03 1210.33 L1797.62 1210.33 L1798.21 1210.33 L1798.79 1210.33 L1799.38 1210.33 L1799.97 1210.33 L1800.55 1210.33 L1801.14 1210.33 L1801.73 1210.33 L1802.31 1210.33 L1802.9 1210.33 L1803.48 1210.33 L1804.07 1210.33 L1804.66 1210.33 L1805.24 1210.33 L1805.83 1210.33 L1806.42 1210.33 L1807 1210.33 L1807.59 1210.33 L1808.18 1210.33 L1808.76 1210.33 L1809.35 1210.33 L1809.94 1210.33 L1810.52 1210.33 L1811.11 1210.33 L1811.69 1210.33 L1812.28 1210.33 L1812.87 1210.33 L1813.45 1210.33 L1814.04 1210.33 L1814.63 1210.33 L1815.21 1210.33 L1815.8 1210.33 L1816.39 1210.33 L1816.97 1210.33 L1817.56 1210.33 L1818.14 1210.33 L1818.73 1210.33 L1819.32 1210.33 L1819.9 1210.33 L1820.49 1210.33 L1821.08 1210.33 L1821.66 1210.33 L1822.25 1210.33 L1822.84 1210.33 L1823.42 1210.33 L1824.01 1210.33 L1824.6 1210.33 L1825.18 1210.33 L1825.77 1210.33 L1826.35 1210.33 L1826.94 1210.33 L1827.53 1210.33 L1828.11 1210.33 L1828.7 1210.33 L1829.29 1210.33 L1829.87 1210.33 L1830.46 1210.33 L1831.05 1210.33 L1831.63 1210.33 L1832.22 1210.33 L1832.81 1210.33 L1833.39 1210.33 L1833.98 1210.33 L1834.56 1210.33 L1835.15 1210.33 L1835.74 1210.33 L1836.32 1210.33 L1836.91 1210.33 L1837.5 1210.33 L1838.08 1210.33 L1838.67 1210.33 L1839.26 1210.33 L1839.84 1210.33 L1840.43 1210.33 L1841.01 1210.33 L1841.6 1210.33 L1842.19 1210.33 L1842.77 1210.33 L1843.36 1210.33 L1843.95 1210.33 L1844.53 1210.33 L1845.12 1210.33 L1845.71 1210.33 L1846.29 1210.33 L1846.88 1210.33 L1847.47 1210.33 L1848.05 1210.33 L1848.64 1210.33 L1849.22 1210.33 L1849.81 1210.33 L1850.4 1210.33 L1850.98 1210.33 L1851.57 1210.33 L1852.16 1210.33 L1852.74 1210.33 L1853.33 1210.33 L1853.92 1210.33 L1854.5 1210.33 L1855.09 1210.33 L1855.68 1210.33 L1856.26 1210.33 L1856.85 1210.33 L1857.43 1210.33 L1858.02 1210.33 L1858.61 1210.33 L1859.19 1210.33 L1859.78 1210.33 L1860.37 1210.33 L1860.95 1210.33 L1861.54 1210.33 L1862.13 1210.33 L1862.71 1210.33 L1863.3 1210.33 L1863.88 1210.33 L1864.47 1210.33 L1865.06 1210.33 L1865.64 1210.33 L1866.23 1210.33 L1866.82 1210.33 L1867.4 1210.33 L1867.99 1210.33 L1868.58 1210.33 L1869.16 1210.33 L1869.75 1210.33 L1870.34 1210.33 L1870.92 1210.33 L1871.51 1210.33 L1872.09 1210.33 L1872.68 1210.33 L1873.27 1210.33 L1873.85 1210.33 L1874.44 1210.33 L1875.03 1210.33 L1875.61 1210.33 L1876.2 1210.33 L1876.79 1210.33 L1877.37 1210.33 L1877.96 1210.33 L1878.55 1210.33 L1879.13 1210.33 L1879.72 1210.33 L1880.3 1210.33 L1880.89 1210.33 L1881.48 1210.33 L1882.06 1210.33 L1882.65 1210.33 L1883.24 1210.33 L1883.82 1210.33 L1884.41 1210.33 L1885 1210.33 L1885.58 1210.33 L1886.17 1210.33 L1886.76 1210.33 L1887.34 1210.33 L1887.93 1210.33 L1888.51 1210.33 L1889.1 1210.33 L1889.69 1210.33 L1890.27 1210.33 L1890.86 1210.33 L1891.45 1210.33 L1892.03 1210.33 L1892.62 1210.33 L1893.21 1210.33 L1893.79 1210.33 L1894.38 1210.33 L1894.96 1210.33 L1895.55 1210.33 L1896.14 1210.33 L1896.72 1210.33 L1897.31 1210.33 L1897.9 1210.33 L1898.48 1210.33 L1899.07 1210.33 L1899.66 1210.33 L1900.24 1210.33 L1900.83 1210.33 L1901.42 1210.33 L1902 1210.33 L1902.59 1210.33 L1903.17 1210.33 L1903.76 1210.33 L1904.35 1210.33 L1904.93 1210.33 L1905.52 1210.33 L1906.11 1210.33 L1906.69 1210.33 L1907.28 1210.33 L1907.87 1210.33 L1908.45 1210.33 L1909.04 1210.33 L1909.63 1210.33 L1910.21 1210.33 L1910.8 1210.33 L1911.38 1210.33 L1911.97 1210.33 L1912.56 1210.33 L1913.14 1210.33 L1913.73 1210.33 L1914.32 1210.33 L1914.9 1210.33 L1915.49 1210.33 L1916.08 1210.33 L1916.66 1210.33 L1917.25 1210.33 L1917.83 1210.33 L1918.42 1210.33 L1919.01 1210.33 L1919.59 1210.33 L1920.18 1210.33 L1920.77 1210.33 L1921.35 1210.33 L1921.94 1210.33 L1922.53 1210.33 L1923.11 1210.33 L1923.7 1210.33 L1924.29 1210.33 L1924.87 1210.33 L1925.46 1210.33 L1926.04 1210.33 L1926.63 1210.33 L1927.22 1210.33 L1927.8 1210.33 L1928.39 1210.33 L1928.98 1210.33 L1929.56 1210.33 L1930.15 1210.33 L1930.74 1210.33 L1931.32 1210.33 L1931.91 1210.33 L1932.5 1210.33 L1933.08 1210.33 L1933.67 1210.33 L1934.25 1210.33 L1934.84 1210.33 L1935.43 1210.33 L1936.01 1210.33 L1936.6 1210.33 L1937.19 1210.33 L1937.77 1210.33 L1938.36 1210.33 L1938.95 1210.33 L1939.53 1210.33 L1940.12 1210.33 L1940.71 1210.33 L1941.29 1210.33 L1941.88 1210.33 L1942.46 1210.33 L1943.05 1210.33 L1943.64 1210.33 L1944.22 1210.33 L1944.81 1210.33 L1945.4 1210.33 L1945.98 1210.33 L1946.57 1210.33 L1947.16 1210.33 L1947.74 1210.33 L1948.33 1210.33 L1948.91 1210.33 L1949.5 1210.33 L1950.09 1210.33 L1950.67 1210.33 L1951.26 1210.33 L1951.85 1210.33 L1952.43 1210.33 L1953.02 1210.33 L1953.61 1210.33 L1954.19 1210.33 L1954.78 1210.33 L1955.37 1210.33 L1955.95 1210.33 L1956.54 1210.33 L1957.12 1210.33 L1957.71 1210.33 L1958.3 1210.33 L1958.88 1210.33 L1959.47 1210.33 L1960.06 1210.33 L1960.64 1210.33 L1961.23 1210.33 L1961.82 1210.33 L1962.4 1210.33 L1962.99 1210.33 L1963.58 1210.33 L1964.16 1210.33 L1964.75 1210.33 L1965.33 1210.33 L1965.92 1210.33 L1966.51 1210.33 L1967.09 1210.33 L1967.68 1210.33 L1968.27 1210.33 L1968.85 1210.33 L1969.44 1210.33 L1970.03 1210.33 L1970.61 1210.33 L1971.2 1210.33 L1971.78 1210.33 L1972.37 1210.33 L1972.96 1210.33 L1973.54 1210.33 L1974.13 1210.33 L1974.72 1210.33 L1975.3 1210.33 L1975.89 1210.33 L1976.48 1210.33 L1977.06 1210.33 L1977.65 1210.33 L1978.24 1210.33 L1978.82 1210.33 L1979.41 1210.33 L1979.99 1210.33 L1980.58 1210.33 L1981.17 1210.33 L1981.75 1210.33 L1982.34 1210.33 L1982.93 1210.33 L1983.51 1210.33 L1984.1 1210.33 L1984.69 1210.33 L1985.27 1210.33 L1985.86 1210.33 L1986.45 1210.33 L1987.03 1210.33 L1987.62 1210.33 L1988.2 1210.33 L1988.79 1210.33 L1989.38 1210.33 L1989.96 1210.33 L1990.55 1210.33 L1991.14 1210.33 L1991.72 1210.33 L1992.31 1210.33 L1992.9 1210.33 L1993.48 1210.33 L1994.07 1210.33 L1994.65 1210.33 L1995.24 1210.33 L1995.83 1210.33 L1996.41 1210.33 L1997 1210.33 L1997.59 1210.33 L1998.17 1210.33 L1998.76 1210.33 L1999.35 1210.33 L1999.93 1210.33 L2000.52 1210.33 L2001.11 1210.33 L2001.69 1210.33 L2002.28 1210.33 L2002.86 1210.33 L2003.45 1210.33 L2004.04 1210.33 L2004.62 1210.33 L2005.21 1210.33 L2005.8 1210.33 L2006.38 1210.33 L2006.97 1210.33 L2007.56 1210.33 L2008.14 1210.33 L2008.73 1210.33 L2009.32 1210.33 L2009.9 1210.33 L2010.49 1210.33 L2011.07 1210.33 L2011.66 1210.33 L2012.25 1210.33 L2012.83 1210.33 L2013.42 1210.33 L2014.01 1210.33 L2014.59 1210.33 L2015.18 1210.33 L2015.77 1210.33 L2016.35 1210.33 L2016.94 1210.33 L2017.53 1210.33 L2018.11 1210.33 L2018.7 1210.33 L2019.28 1210.33 L2019.87 1210.33 L2020.46 1210.33 L2021.04 1210.33 L2021.63 1210.33 L2022.22 1210.33 L2022.8 1210.33 L2023.39 1210.33 L2023.98 1210.33 L2024.56 1210.33 L2025.15 1210.33 L2025.73 1210.33 L2026.32 1210.33 L2026.91 1210.33 L2027.49 1210.33 L2028.08 1210.33 L2028.67 1210.33 L2029.25 1210.33 L2029.84 1210.33 L2030.43 1210.33 L2031.01 1210.33 L2031.6 1210.33 L2032.19 1210.33 L2032.77 1210.33 L2033.36 1210.33 L2033.94 1210.33 L2034.53 1210.33 L2035.12 1210.33 L2035.7 1210.33 L2036.29 1210.33 L2036.88 1210.33 L2037.46 1210.33 L2038.05 1210.33 L2038.64 1210.33 L2039.22 1210.33 L2039.81 1210.33 L2040.4 1210.33 L2040.98 1210.33 L2041.57 1210.33 L2042.15 1210.33 L2042.74 1210.33 L2043.33 1210.33 L2043.91 1210.33 L2044.5 1210.33 L2045.09 1210.33 L2045.67 1210.33 L2046.26 1210.33 L2046.85 1210.33 L2047.43 1210.33 L2048.02 1210.33 L2048.6 1210.33 L2049.19 1210.33 L2049.78 1210.33 L2050.36 1210.33 L2050.95 1210.33 L2051.54 1210.33 L2052.12 1210.33 L2052.71 1210.33 L2053.3 1210.33 L2053.88 1210.33 L2054.47 1210.33 L2055.06 1210.33 L2055.64 1210.33 L2056.23 1210.33 L2056.81 1210.33 L2057.4 1210.33 L2057.99 1210.33 L2058.57 1210.33 L2059.16 1210.33 L2059.75 1210.33 L2060.33 1210.33 L2060.92 1210.33 L2061.51 1210.33 L2062.09 1210.33 L2062.68 1210.33 L2063.27 1210.33 L2063.85 1210.33 L2064.44 1210.33 L2065.02 1210.33 L2065.61 1210.33 L2066.2 1210.33 L2066.78 1210.33 L2067.37 1210.33 L2067.96 1210.33 L2068.54 1210.33 L2069.13 1210.33 L2069.72 1210.33 L2070.3 1210.33 L2070.89 1210.33 L2071.48 1210.33 L2072.06 1210.33 L2072.65 1210.33 L2073.23 1210.33 L2073.82 1210.33 L2074.41 1210.33 L2074.99 1210.33 L2075.58 1210.33 L2076.17 1210.33 L2076.75 1210.33 L2077.34 1210.33 L2077.93 1210.33 L2078.51 1210.33 L2079.1 1210.33 L2079.68 1210.33 L2080.27 1210.33 L2080.86 1210.33 L2081.44 1210.33 L2082.03 1210.33 L2082.62 1210.33 L2083.2 1210.33 L2083.79 1210.33 L2084.38 1210.33 L2084.96 1210.33 L2085.55 1210.33 L2086.14 1210.33 L2086.72 1210.33 L2087.31 1210.33 L2087.89 1210.33 L2088.48 1210.33 L2089.07 1210.33 L2089.65 1210.33 L2090.24 1210.33 L2090.83 1210.33 L2091.41 1210.33 L2092 1210.33 L2092.59 1210.33 L2093.17 1210.33 L2093.76 1210.33 L2094.35 1210.33 L2094.93 1210.33 L2095.52 1210.33 L2096.1 1210.33 L2096.69 1210.33 L2097.28 1210.33 L2097.86 1210.33 L2098.45 1210.33 L2099.04 1210.33 L2099.62 1210.33 L2100.21 1210.33 L2100.8 1210.33 L2101.38 1210.33 L2101.97 1210.33 L2102.55 1210.33 L2103.14 1210.33 L2103.73 1210.33 L2104.31 1210.33 L2104.9 1210.33 L2105.49 1210.33 L2106.07 1210.33 L2106.66 1210.33 L2107.25 1210.33 L2107.83 1210.33 L2108.42 1210.33 L2109.01 1210.33 L2109.59 1210.33 L2110.18 1210.33 L2110.76 1210.33 L2111.35 1210.33 L2111.94 1210.33 L2112.52 1210.33 L2113.11 1210.33 L2113.7 1210.33 L2114.28 1210.33 L2114.87 1210.33 L2115.46 1210.33 L2116.04 1210.33 L2116.63 1210.33 L2117.22 1210.33 L2117.8 1210.33 L2118.39 1210.33 L2118.97 1210.33 L2119.56 1210.33 L2120.15 1210.33 L2120.73 1210.33 L2121.32 1210.33 L2121.91 1210.33 L2122.49 1210.33 L2123.08 1210.33 L2123.67 1210.33 L2124.25 1210.33 L2124.84 1210.33 L2125.42 1210.33 L2126.01 1210.33 L2126.6 1210.33 L2127.18 1210.33 L2127.77 1210.33 L2128.36 1210.33 L2128.94 1210.33 L2129.53 1210.33 L2130.12 1210.33 L2130.7 1210.33 L2131.29 1210.33 L2131.88 1210.33 L2132.46 1210.33 L2133.05 1210.33 L2133.63 1210.33 L2134.22 1210.33 L2134.81 1210.33 L2135.39 1210.33 L2135.98 1210.33 L2136.57 1210.33 L2137.15 1210.33 L2137.74 1210.33 L2138.33 1210.33 L2138.91 1210.33 L2139.5 1210.33 L2140.09 1210.33 L2140.67 1210.33 L2141.26 1210.33 L2141.84 1210.33 L2142.43 1210.33 L2143.02 1210.33 L2143.6 1210.33 L2144.19 1210.33 L2144.78 1210.33 L2145.36 1210.33 L2145.95 1210.33 L2146.54 1210.33 L2147.12 1210.33 L2147.71 1210.33 L2148.3 1210.33 L2148.88 1210.33 L2149.47 1210.33 L2150.05 1210.33 L2150.64 1210.33 L2151.23 1210.33 L2151.81 1210.33 L2152.4 1210.33 L2152.99 1210.33 L2153.57 1210.33 L2154.16 1210.33 L2154.75 1210.33 L2155.33 1210.33 L2155.92 1210.33 L2156.5 1210.33 L2157.09 1210.33 L2157.68 1210.33 L2158.26 1210.33 L2158.26 1209.64 L2157.68 1209.64 L2157.09 1209.64 L2156.5 1209.64 L2155.92 1209.64 L2155.33 1209.64 L2154.75 1209.64 L2154.16 1209.64 L2153.57 1209.64 L2152.99 1209.64 L2152.4 1209.64 L2151.81 1209.64 L2151.23 1209.64 L2150.64 1209.64 L2150.05 1209.64 L2149.47 1209.64 L2148.88 1209.64 L2148.3 1209.64 L2147.71 1209.64 L2147.12 1209.64 L2146.54 1209.64 L2145.95 1209.64 L2145.36 1209.64 L2144.78 1209.64 L2144.19 1209.64 L2143.6 1209.64 L2143.02 1209.64 L2142.43 1209.64 L2141.84 1209.64 L2141.26 1209.64 L2140.67 1209.64 L2140.09 1209.64 L2139.5 1209.64 L2138.91 1209.64 L2138.33 1209.64 L2137.74 1209.64 L2137.15 1209.64 L2136.57 1209.64 L2135.98 1209.64 L2135.39 1209.64 L2134.81 1209.64 L2134.22 1209.64 L2133.63 1209.64 L2133.05 1209.64 L2132.46 1209.64 L2131.88 1209.64 L2131.29 1209.64 L2130.7 1209.64 L2130.12 1209.64 L2129.53 1209.64 L2128.94 1209.64 L2128.36 1209.64 L2127.77 1209.64 L2127.18 1209.64 L2126.6 1209.64 L2126.01 1209.64 L2125.42 1209.64 L2124.84 1209.64 L2124.25 1209.64 L2123.67 1209.64 L2123.08 1209.64 L2122.49 1209.64 L2121.91 1209.64 L2121.32 1209.64 L2120.73 1209.64 L2120.15 1209.64 L2119.56 1209.64 L2118.97 1209.64 L2118.39 1209.64 L2117.8 1209.64 L2117.22 1209.64 L2116.63 1209.64 L2116.04 1209.64 L2115.46 1209.64 L2114.87 1209.64 L2114.28 1209.64 L2113.7 1209.64 L2113.11 1209.64 L2112.52 1209.64 L2111.94 1209.64 L2111.35 1209.64 L2110.76 1209.64 L2110.18 1209.64 L2109.59 1209.64 L2109.01 1209.64 L2108.42 1209.64 L2107.83 1209.64 L2107.25 1209.64 L2106.66 1209.64 L2106.07 1209.64 L2105.49 1209.64 L2104.9 1209.64 L2104.31 1209.64 L2103.73 1209.64 L2103.14 1209.64 L2102.55 1209.64 L2101.97 1209.64 L2101.38 1209.64 L2100.8 1209.64 L2100.21 1209.64 L2099.62 1209.64 L2099.04 1209.64 L2098.45 1209.64 L2097.86 1209.64 L2097.28 1209.64 L2096.69 1209.64 L2096.1 1209.64 L2095.52 1209.64 L2094.93 1209.64 L2094.35 1209.64 L2093.76 1209.64 L2093.17 1209.64 L2092.59 1209.64 L2092 1209.64 L2091.41 1209.64 L2090.83 1209.64 L2090.24 1209.64 L2089.65 1209.64 L2089.07 1209.64 L2088.48 1209.64 L2087.89 1209.64 L2087.31 1209.64 L2086.72 1209.64 L2086.14 1209.64 L2085.55 1209.64 L2084.96 1209.64 L2084.38 1209.64 L2083.79 1209.64 L2083.2 1209.64 L2082.62 1209.64 L2082.03 1209.64 L2081.44 1209.64 L2080.86 1209.64 L2080.27 1209.64 L2079.68 1209.64 L2079.1 1209.64 L2078.51 1209.64 L2077.93 1209.64 L2077.34 1209.64 L2076.75 1209.64 L2076.17 1209.64 L2075.58 1209.64 L2074.99 1209.64 L2074.41 1209.64 L2073.82 1209.64 L2073.23 1209.64 L2072.65 1209.64 L2072.06 1209.64 L2071.48 1209.64 L2070.89 1209.64 L2070.3 1209.64 L2069.72 1209.64 L2069.13 1209.64 L2068.54 1209.64 L2067.96 1209.64 L2067.37 1209.64 L2066.78 1209.64 L2066.2 1209.64 L2065.61 1209.64 L2065.02 1209.64 L2064.44 1209.64 L2063.85 1209.64 L2063.27 1209.64 L2062.68 1209.64 L2062.09 1209.64 L2061.51 1209.64 L2060.92 1209.64 L2060.33 1209.64 L2059.75 1209.64 L2059.16 1209.64 L2058.57 1209.64 L2057.99 1209.64 L2057.4 1209.64 L2056.81 1209.64 L2056.23 1209.64 L2055.64 1209.64 L2055.06 1209.64 L2054.47 1209.64 L2053.88 1209.64 L2053.3 1209.64 L2052.71 1209.64 L2052.12 1209.64 L2051.54 1209.64 L2050.95 1209.64 L2050.36 1209.64 L2049.78 1209.64 L2049.19 1209.64 L2048.6 1209.64 L2048.02 1209.64 L2047.43 1209.64 L2046.85 1209.64 L2046.26 1209.64 L2045.67 1209.64 L2045.09 1209.64 L2044.5 1209.64 L2043.91 1209.64 L2043.33 1209.64 L2042.74 1209.64 L2042.15 1209.64 L2041.57 1209.64 L2040.98 1209.64 L2040.4 1209.64 L2039.81 1209.64 L2039.22 1209.64 L2038.64 1209.64 L2038.05 1209.64 L2037.46 1209.64 L2036.88 1209.64 L2036.29 1209.64 L2035.7 1209.64 L2035.12 1209.64 L2034.53 1209.64 L2033.94 1209.64 L2033.36 1209.64 L2032.77 1209.64 L2032.19 1209.64 L2031.6 1209.64 L2031.01 1209.64 L2030.43 1209.64 L2029.84 1209.64 L2029.25 1209.64 L2028.67 1209.64 L2028.08 1209.64 L2027.49 1209.64 L2026.91 1209.64 L2026.32 1209.64 L2025.73 1209.64 L2025.15 1209.64 L2024.56 1209.64 L2023.98 1209.64 L2023.39 1209.64 L2022.8 1209.64 L2022.22 1209.64 L2021.63 1209.64 L2021.04 1209.64 L2020.46 1209.64 L2019.87 1209.64 L2019.28 1209.64 L2018.7 1209.64 L2018.11 1209.64 L2017.53 1209.64 L2016.94 1209.64 L2016.35 1209.64 L2015.77 1209.64 L2015.18 1209.64 L2014.59 1209.64 L2014.01 1209.64 L2013.42 1209.64 L2012.83 1209.64 L2012.25 1209.64 L2011.66 1209.64 L2011.07 1209.64 L2010.49 1209.64 L2009.9 1209.64 L2009.32 1209.64 L2008.73 1209.64 L2008.14 1209.64 L2007.56 1209.64 L2006.97 1209.64 L2006.38 1209.64 L2005.8 1209.64 L2005.21 1209.64 L2004.62 1209.64 L2004.04 1209.64 L2003.45 1209.64 L2002.86 1209.64 L2002.28 1209.64 L2001.69 1209.64 L2001.11 1209.64 L2000.52 1209.64 L1999.93 1209.64 L1999.35 1209.64 L1998.76 1209.64 L1998.17 1209.64 L1997.59 1209.64 L1997 1209.64 L1996.41 1209.64 L1995.83 1209.64 L1995.24 1209.64 L1994.65 1209.64 L1994.07 1209.64 L1993.48 1209.64 L1992.9 1209.64 L1992.31 1209.64 L1991.72 1209.64 L1991.14 1209.64 L1990.55 1209.64 L1989.96 1209.64 L1989.38 1209.64 L1988.79 1209.64 L1988.2 1209.64 L1987.62 1209.64 L1987.03 1209.64 L1986.45 1209.64 L1985.86 1209.64 L1985.27 1209.64 L1984.69 1209.64 L1984.1 1209.64 L1983.51 1209.64 L1982.93 1209.64 L1982.34 1209.64 L1981.75 1209.64 L1981.17 1209.64 L1980.58 1209.64 L1979.99 1209.64 L1979.41 1209.64 L1978.82 1209.64 L1978.24 1209.64 L1977.65 1209.64 L1977.06 1209.64 L1976.48 1209.64 L1975.89 1209.64 L1975.3 1209.64 L1974.72 1209.64 L1974.13 1209.64 L1973.54 1209.64 L1972.96 1209.64 L1972.37 1209.64 L1971.78 1209.64 L1971.2 1209.64 L1970.61 1209.64 L1970.03 1209.64 L1969.44 1209.64 L1968.85 1209.64 L1968.27 1209.64 L1967.68 1209.64 L1967.09 1209.64 L1966.51 1209.64 L1965.92 1209.64 L1965.33 1209.64 L1964.75 1209.64 L1964.16 1209.64 L1963.58 1209.64 L1962.99 1209.64 L1962.4 1209.64 L1961.82 1209.64 L1961.23 1209.64 L1960.64 1209.64 L1960.06 1209.64 L1959.47 1209.64 L1958.88 1209.64 L1958.3 1209.64 L1957.71 1209.64 L1957.12 1209.64 L1956.54 1209.64 L1955.95 1209.64 L1955.37 1209.64 L1954.78 1209.64 L1954.19 1209.64 L1953.61 1209.64 L1953.02 1209.64 L1952.43 1209.64 L1951.85 1209.64 L1951.26 1209.64 L1950.67 1209.64 L1950.09 1209.64 L1949.5 1209.64 L1948.91 1209.64 L1948.33 1209.64 L1947.74 1209.64 L1947.16 1209.64 L1946.57 1209.64 L1945.98 1209.64 L1945.4 1209.64 L1944.81 1209.64 L1944.22 1209.64 L1943.64 1209.64 L1943.05 1209.64 L1942.46 1209.64 L1941.88 1209.64 L1941.29 1209.64 L1940.71 1209.64 L1940.12 1209.64 L1939.53 1209.64 L1938.95 1209.64 L1938.36 1209.64 L1937.77 1209.64 L1937.19 1209.64 L1936.6 1209.64 L1936.01 1209.64 L1935.43 1209.64 L1934.84 1209.64 L1934.25 1209.64 L1933.67 1209.64 L1933.08 1209.64 L1932.5 1209.64 L1931.91 1209.64 L1931.32 1209.64 L1930.74 1209.64 L1930.15 1209.64 L1929.56 1209.64 L1928.98 1209.64 L1928.39 1209.64 L1927.8 1209.64 L1927.22 1209.64 L1926.63 1209.64 L1926.04 1209.64 L1925.46 1209.64 L1924.87 1209.64 L1924.29 1209.64 L1923.7 1209.64 L1923.11 1209.64 L1922.53 1209.64 L1921.94 1209.64 L1921.35 1209.64 L1920.77 1209.64 L1920.18 1209.64 L1919.59 1209.64 L1919.01 1209.64 L1918.42 1209.64 L1917.83 1209.64 L1917.25 1209.64 L1916.66 1209.64 L1916.08 1209.64 L1915.49 1209.64 L1914.9 1209.64 L1914.32 1209.64 L1913.73 1209.64 L1913.14 1209.64 L1912.56 1209.64 L1911.97 1209.64 L1911.38 1209.64 L1910.8 1209.64 L1910.21 1209.64 L1909.63 1209.64 L1909.04 1209.64 L1908.45 1209.64 L1907.87 1209.64 L1907.28 1209.64 L1906.69 1209.64 L1906.11 1209.64 L1905.52 1209.64 L1904.93 1209.64 L1904.35 1209.64 L1903.76 1209.64 L1903.17 1209.64 L1902.59 1209.64 L1902 1209.64 L1901.42 1209.64 L1900.83 1209.64 L1900.24 1209.64 L1899.66 1209.64 L1899.07 1209.64 L1898.48 1209.64 L1897.9 1209.64 L1897.31 1209.64 L1896.72 1209.64 L1896.14 1209.64 L1895.55 1209.64 L1894.96 1209.64 L1894.38 1209.64 L1893.79 1209.64 L1893.21 1209.64 L1892.62 1209.64 L1892.03 1209.64 L1891.45 1209.64 L1890.86 1209.64 L1890.27 1209.64 L1889.69 1209.64 L1889.1 1209.64 L1888.51 1209.64 L1887.93 1209.64 L1887.34 1209.64 L1886.76 1209.64 L1886.17 1209.64 L1885.58 1209.64 L1885 1209.64 L1884.41 1209.64 L1883.82 1209.64 L1883.24 1209.64 L1882.65 1209.64 L1882.06 1209.64 L1881.48 1209.64 L1880.89 1209.64 L1880.3 1209.64 L1879.72 1209.64 L1879.13 1209.64 L1878.55 1209.64 L1877.96 1209.64 L1877.37 1209.64 L1876.79 1209.64 L1876.2 1209.64 L1875.61 1209.64 L1875.03 1209.64 L1874.44 1209.64 L1873.85 1209.64 L1873.27 1209.64 L1872.68 1209.64 L1872.09 1209.64 L1871.51 1209.64 L1870.92 1209.64 L1870.34 1209.64 L1869.75 1209.64 L1869.16 1209.64 L1868.58 1209.64 L1867.99 1209.64 L1867.4 1209.64 L1866.82 1209.64 L1866.23 1209.64 L1865.64 1209.64 L1865.06 1209.64 L1864.47 1209.64 L1863.88 1209.64 L1863.3 1209.64 L1862.71 1209.64 L1862.13 1209.64 L1861.54 1209.64 L1860.95 1209.64 L1860.37 1209.64 L1859.78 1209.64 L1859.19 1209.64 L1858.61 1209.64 L1858.02 1209.64 L1857.43 1209.64 L1856.85 1209.64 L1856.26 1209.64 L1855.68 1209.64 L1855.09 1209.64 L1854.5 1209.64 L1853.92 1209.64 L1853.33 1209.64 L1852.74 1209.64 L1852.16 1209.64 L1851.57 1209.64 L1850.98 1209.64 L1850.4 1209.64 L1849.81 1209.64 L1849.22 1209.64 L1848.64 1209.64 L1848.05 1209.64 L1847.47 1209.64 L1846.88 1209.64 L1846.29 1209.64 L1845.71 1209.64 L1845.12 1209.64 L1844.53 1209.64 L1843.95 1209.64 L1843.36 1209.64 L1842.77 1209.64 L1842.19 1209.64 L1841.6 1209.64 L1841.01 1209.64 L1840.43 1209.64 L1839.84 1209.64 L1839.26 1209.64 L1838.67 1209.64 L1838.08 1209.64 L1837.5 1209.64 L1836.91 1209.64 L1836.32 1209.64 L1835.74 1209.64 L1835.15 1209.64 L1834.56 1209.64 L1833.98 1209.64 L1833.39 1209.64 L1832.81 1209.64 L1832.22 1209.64 L1831.63 1209.64 L1831.05 1209.64 L1830.46 1209.64 L1829.87 1209.64 L1829.29 1209.64 L1828.7 1209.64 L1828.11 1209.64 L1827.53 1209.64 L1826.94 1209.64 L1826.35 1209.64 L1825.77 1209.64 L1825.18 1209.64 L1824.6 1209.64 L1824.01 1209.64 L1823.42 1209.64 L1822.84 1209.64 L1822.25 1209.64 L1821.66 1209.64 L1821.08 1209.64 L1820.49 1209.64 L1819.9 1209.64 L1819.32 1209.64 L1818.73 1209.64 L1818.14 1209.64 L1817.56 1209.64 L1816.97 1209.64 L1816.39 1209.64 L1815.8 1209.64 L1815.21 1209.64 L1814.63 1209.64 L1814.04 1209.64 L1813.45 1209.64 L1812.87 1209.64 L1812.28 1209.64 L1811.69 1209.64 L1811.11 1209.64 L1810.52 1209.64 L1809.94 1209.64 L1809.35 1209.64 L1808.76 1209.64 L1808.18 1209.64 L1807.59 1209.64 L1807 1209.64 L1806.42 1209.64 L1805.83 1209.64 L1805.24 1209.64 L1804.66 1209.64 L1804.07 1209.64 L1803.48 1209.64 L1802.9 1209.64 L1802.31 1209.64 L1801.73 1209.64 L1801.14 1209.64 L1800.55 1209.64 L1799.97 1209.64 L1799.38 1209.64 L1798.79 1209.64 L1798.21 1209.64 L1797.62 1209.64 L1797.03 1209.64 L1796.45 1209.64 L1795.86 1209.64 L1795.27 1209.64 L1794.69 1209.64 L1794.1 1209.64 L1793.52 1209.64 L1792.93 1209.64 L1792.34 1209.64 L1791.76 1209.64 L1791.17 1209.64 L1790.58 1209.64 L1790 1209.64 L1789.41 1209.64 L1788.82 1209.64 L1788.24 1209.64 L1787.65 1209.64 L1787.06 1209.64 L1786.48 1209.64 L1785.89 1209.64 L1785.31 1209.64 L1784.72 1209.64 L1784.13 1209.64 L1783.55 1209.64 L1782.96 1209.64 L1782.37 1209.64 L1781.79 1209.64 L1781.2 1209.64 L1780.61 1209.64 L1780.03 1209.64 L1779.44 1209.64 L1778.86 1209.64 L1778.27 1209.64 L1777.68 1209.64 L1777.1 1209.64 L1776.51 1209.64 L1775.92 1209.64 L1775.34 1209.64 L1774.75 1209.64 L1774.16 1209.64 L1773.58 1209.64 L1772.99 1209.64 L1772.4 1209.64 L1771.82 1209.64 L1771.23 1209.64 L1770.65 1209.64 L1770.06 1209.64 L1769.47 1209.64 L1768.89 1209.64 L1768.3 1209.64 L1767.71 1209.64 L1767.13 1209.64 L1766.54 1209.64 L1765.95 1209.64 L1765.37 1209.64 L1764.78 1209.64 L1764.19 1209.64 L1763.61 1209.64 L1763.02 1209.64 L1762.44 1209.64 L1761.85 1209.64 L1761.26 1209.64 L1760.68 1209.64 L1760.09 1209.64 L1759.5 1209.64 L1758.92 1209.64 L1758.33 1209.64 L1757.74 1209.64 L1757.16 1209.64 L1756.57 1209.64 L1755.99 1209.64 L1755.4 1209.64 L1754.81 1209.64 L1754.23 1209.64 L1753.64 1209.64 L1753.05 1209.64 L1752.47 1209.64 L1751.88 1209.64 L1751.29 1209.64 L1750.71 1209.64 L1750.12 1209.64 L1749.53 1209.64 L1748.95 1209.64 L1748.36 1209.64 L1747.78 1209.64 L1747.19 1209.64 L1746.6 1209.64 L1746.02 1209.64 L1745.43 1209.64 L1744.84 1209.64 L1744.26 1209.64 L1743.67 1209.64 L1743.08 1209.64 L1742.5 1209.64 L1741.91 1209.64 L1741.32 1209.64 L1740.74 1209.64 L1740.15 1209.64 L1739.57 1209.64 L1738.98 1209.64 L1738.39 1209.64 L1737.81 1209.64 L1737.22 1209.64 L1736.63 1209.64 L1736.05 1209.64 L1735.46 1209.64 L1734.87 1209.64 L1734.29 1209.64 L1733.7 1209.64 L1733.11 1209.64 L1732.53 1209.64 L1731.94 1209.64 L1731.36 1209.64 L1730.77 1209.64 L1730.18 1209.64 L1729.6 1209.64 L1729.01 1209.64 L1728.42 1209.64 L1727.84 1209.64 L1727.25 1209.64 L1726.66 1209.64 L1726.08 1209.64 L1725.49 1209.64 L1724.91 1209.64 L1724.32 1209.64 L1723.73 1209.64 L1723.15 1209.64 L1722.56 1209.64 L1721.97 1209.64 L1721.39 1209.64 L1720.8 1209.64 L1720.21 1209.64 L1719.63 1209.64 L1719.04 1209.64 L1718.45 1209.64 L1717.87 1209.64 L1717.28 1209.64 L1716.7 1209.64 L1716.11 1209.64 L1715.52 1209.64 L1714.94 1209.64 L1714.35 1209.64 L1713.76 1209.64 L1713.18 1209.64 L1712.59 1209.64 L1712 1209.64 L1711.42 1209.64 L1710.83 1209.64 L1710.24 1209.64 L1709.66 1209.64 L1709.07 1209.64 L1708.49 1209.64 L1707.9 1209.64 L1707.31 1209.64 L1706.73 1209.64 L1706.14 1209.64 L1705.55 1209.64 L1704.97 1209.64 L1704.38 1209.64 L1703.79 1209.64 L1703.21 1209.64 L1702.62 1209.64 L1702.04 1209.64 L1701.45 1209.64 L1700.86 1209.64 L1700.28 1209.64 L1699.69 1209.64 L1699.1 1209.64 L1698.52 1209.64 L1697.93 1209.64 L1697.34 1209.64 L1696.76 1209.64 L1696.17 1209.64 L1695.58 1209.64 L1695 1209.64 L1694.41 1209.64 L1693.83 1209.64 L1693.24 1209.64 L1692.65 1209.64 L1692.07 1209.64 L1691.48 1209.64 L1690.89 1209.64 L1690.31 1209.64 L1689.72 1209.64 L1689.13 1209.64 L1688.55 1209.64 L1687.96 1209.64 L1687.37 1209.64 L1686.79 1209.64 L1686.2 1209.64 L1685.62 1209.64 L1685.03 1209.64 L1684.44 1209.64 L1683.86 1209.64 L1683.27 1209.64 L1682.68 1209.64 L1682.1 1209.64 L1681.51 1209.64 L1680.92 1209.64 L1680.34 1209.64 L1679.75 1209.64 L1679.17 1209.64 L1678.58 1209.64 L1677.99 1209.64 L1677.41 1209.64 L1676.82 1209.64 L1676.23 1209.64 L1675.65 1209.64 L1675.06 1209.64 L1674.47 1209.64 L1673.89 1209.64 L1673.3 1209.64 L1672.71 1209.64 L1672.13 1209.64 L1671.54 1209.64 L1670.96 1209.64 L1670.37 1209.64 L1669.78 1209.64 L1669.2 1209.64 L1668.61 1209.64 L1668.02 1209.64 L1667.44 1209.64 L1666.85 1209.64 L1666.26 1209.64 L1665.68 1209.64 L1665.09 1209.64 L1664.5 1209.64 L1663.92 1209.64 L1663.33 1209.64 L1662.75 1209.64 L1662.16 1209.64 L1661.57 1209.64 L1660.99 1209.64 L1660.4 1209.64 L1659.81 1209.64 L1659.23 1209.64 L1658.64 1209.64 L1658.05 1209.64 L1657.47 1209.64 L1656.88 1209.64 L1656.29 1209.64 L1655.71 1209.64 L1655.12 1209.64 L1654.54 1209.64 L1653.95 1209.64 L1653.36 1209.64 L1652.78 1209.64 L1652.19 1209.64 L1651.6 1209.64 L1651.02 1209.64 L1650.43 1209.64 L1649.84 1209.64 L1649.26 1209.64 L1648.67 1209.64 L1648.09 1209.64 L1647.5 1209.64 L1646.91 1209.64 L1646.33 1209.64 L1645.74 1209.64 L1645.15 1209.64 L1644.57 1209.64 L1643.98 1209.64 L1643.39 1209.64 L1642.81 1209.64 L1642.22 1209.64 L1641.63 1209.64 L1641.05 1209.64 L1640.46 1209.64 L1639.88 1209.64 L1639.29 1209.64 L1638.7 1209.64 L1638.12 1209.64 L1637.53 1209.64 L1636.94 1209.64 L1636.36 1209.64 L1635.77 1209.64 L1635.18 1209.64 L1634.6 1209.64 L1634.01 1209.64 L1633.42 1209.64 L1632.84 1209.64 L1632.25 1209.64 L1631.67 1209.64 L1631.08 1209.64 L1630.49 1209.64 L1629.91 1209.64 L1629.32 1209.64 L1628.73 1209.64 L1628.15 1209.64 L1627.56 1209.64 L1626.97 1209.64 L1626.39 1209.64 L1625.8 1209.64 L1625.22 1209.64 L1624.63 1209.64 L1624.04 1209.64 L1623.46 1209.64 L1622.87 1209.64 L1622.28 1209.64 L1621.7 1209.64 L1621.11 1209.64 L1620.52 1209.64 L1619.94 1209.64 L1619.35 1209.64 L1618.76 1209.64 L1618.18 1209.64 L1617.59 1209.64 L1617.01 1209.64 L1616.42 1209.64 L1615.83 1209.64 L1615.25 1209.64 L1614.66 1209.64 L1614.07 1209.64 L1613.49 1209.64 L1612.9 1209.64 L1612.31 1209.64 L1611.73 1209.64 L1611.14 1209.64 L1610.55 1209.64 L1609.97 1209.64 L1609.38 1209.64 L1608.8 1209.64 L1608.21 1209.64 L1607.62 1209.64 L1607.04 1209.64 L1606.45 1209.64 L1605.86 1209.64 L1605.28 1209.64 L1604.69 1209.64 L1604.1 1209.64 L1603.52 1209.64 L1602.93 1209.64 L1602.34 1209.64 L1601.76 1209.64 L1601.17 1209.64 L1600.59 1209.64 L1600 1209.64 L1599.41 1209.64 L1598.83 1209.64 L1598.24 1209.64 L1597.65 1209.64 L1597.07 1209.64 L1596.48 1209.64 L1595.89 1209.64 L1595.31 1209.64 L1594.72 1209.64 L1594.14 1209.64 L1593.55 1209.64 L1592.96 1209.64 L1592.38 1209.64 L1591.79 1209.64 L1591.2 1209.64 L1590.62 1209.64 L1590.03 1209.64 L1589.44 1209.64 L1588.86 1209.64 L1588.27 1209.64 L1587.68 1209.64 L1587.1 1209.64 L1586.51 1209.64 L1585.93 1209.64 L1585.34 1209.64 L1584.75 1209.64 L1584.17 1209.64 L1583.58 1209.64 L1582.99 1209.64 L1582.41 1209.64 L1581.82 1209.64 L1581.23 1209.64 L1580.65 1209.64 L1580.06 1209.64 L1579.47 1209.64 L1578.89 1209.64 L1578.3 1209.64 L1577.72 1209.64 L1577.13 1209.64 L1576.54 1209.64 L1575.96 1209.64 L1575.37 1209.64 L1574.78 1209.64 L1574.2 1209.64 L1573.61 1209.64 L1573.02 1209.64 L1572.44 1209.64 L1571.85 1209.64 L1571.27 1209.64 L1570.68 1209.64 L1570.09 1209.64 L1569.51 1209.64 L1568.92 1209.64 L1568.33 1209.64 L1567.75 1209.64 L1567.16 1209.64 L1566.57 1209.64 L1565.99 1209.64 L1565.4 1209.64 L1564.81 1209.64 L1564.23 1209.64 L1563.64 1209.64 L1563.06 1209.64 L1562.47 1209.64 L1561.88 1209.64 L1561.3 1209.64 L1560.71 1209.64 L1560.12 1209.64 L1559.54 1209.64 L1558.95 1209.64 L1558.36 1209.64 L1557.78 1209.64 L1557.19 1209.64 L1556.6 1209.64 L1556.02 1209.64 L1555.43 1209.64 L1554.85 1209.64 L1554.26 1209.64 L1553.67 1209.64 L1553.09 1209.64 L1552.5 1209.64 L1551.91 1209.64 L1551.33 1209.64 L1550.74 1209.64 L1550.15 1209.64 L1549.57 1209.64 L1548.98 1209.64 L1548.4 1209.64 L1547.81 1209.64 L1547.22 1209.64 L1546.64 1209.64 L1546.05 1209.64 L1545.46 1209.64 L1544.88 1209.64 L1544.29 1209.64 L1543.7 1209.64 L1543.12 1209.64 L1542.53 1209.64 L1541.94 1209.64 L1541.36 1209.64 L1540.77 1209.64 L1540.19 1209.64 L1539.6 1209.64 L1539.01 1209.64 L1538.43 1209.64 L1537.84 1209.64 L1537.25 1209.64 L1536.67 1209.64 L1536.08 1209.64 L1535.49 1209.64 L1534.91 1209.64 L1534.32 1209.64 L1533.73 1209.64 L1533.15 1209.64 L1532.56 1209.64 L1531.98 1209.64 L1531.39 1209.64 L1530.8 1209.64 L1530.22 1209.64 L1529.63 1209.64 L1529.04 1209.64 L1528.46 1209.64 L1527.87 1209.64 L1527.28 1209.64 L1526.7 1209.64 L1526.11 1209.64 L1525.52 1209.64 L1524.94 1209.64 L1524.35 1209.64 L1523.77 1209.64 L1523.18 1209.64 L1522.59 1209.64 L1522.01 1209.64 L1521.42 1209.64 L1520.83 1209.64 L1520.25 1209.64 L1519.66 1209.64 L1519.07 1209.64 L1518.49 1209.64 L1517.9 1209.64 L1517.32 1209.64 L1516.73 1209.64 L1516.14 1209.64 L1515.56 1209.64 L1514.97 1209.64 L1514.38 1209.64 L1513.8 1209.64 L1513.21 1209.64 L1512.62 1209.64 L1512.04 1209.64 L1511.45 1209.64 L1510.86 1209.64 L1510.28 1209.64 L1509.69 1209.64 L1509.11 1209.64 L1508.52 1209.64 L1507.93 1209.64 L1507.35 1209.64 L1506.76 1209.64 L1506.17 1209.64 L1505.59 1209.64 L1505 1209.64 L1504.41 1209.64 L1503.83 1209.64 L1503.24 1209.64 L1502.65 1209.64 L1502.07 1209.64 L1501.48 1209.64 L1500.9 1209.64 L1500.31 1209.64 L1499.72 1209.64 L1499.14 1209.64 L1498.55 1209.64 L1497.96 1209.64 L1497.38 1209.64 L1496.79 1209.64 L1496.2 1209.64 L1495.62 1209.64 L1495.03 1209.64 L1494.45 1209.64 L1493.86 1209.64 L1493.27 1209.64 L1492.69 1209.64 L1492.1 1209.64 L1491.51 1209.64 L1490.93 1209.64 L1490.34 1209.64 L1489.75 1209.64 L1489.17 1209.64 L1488.58 1209.64 L1487.99 1209.64 L1487.41 1209.64 L1486.82 1209.64 L1486.24 1209.64 L1485.65 1209.64 L1485.06 1209.64 L1484.48 1209.64 L1483.89 1209.64 L1483.3 1209.64 L1482.72 1209.64 L1482.13 1209.64 L1481.54 1209.64 L1480.96 1209.64 L1480.37 1209.64 L1479.78 1209.64 L1479.2 1209.64 L1478.61 1209.64 L1478.03 1209.64 L1477.44 1209.64 L1476.85 1209.64 L1476.27 1209.64 L1475.68 1209.64 L1475.09 1209.64 L1474.51 1209.64 L1473.92 1209.64 L1473.33 1209.64 L1472.75 1209.64 L1472.16 1209.64 L1471.57 1209.64 L1470.99 1209.64 L1470.4 1209.64 L1469.82 1209.64 L1469.23 1209.64 L1468.64 1209.64 L1468.06 1209.64 L1467.47 1209.64 L1466.88 1209.64 L1466.3 1209.64 L1465.71 1209.64 L1465.12 1209.64 L1464.54 1209.64 L1463.95 1209.64 L1463.37 1209.64 L1462.78 1209.64 L1462.19 1209.64 L1461.61 1209.64 L1461.02 1209.64 L1460.43 1209.64 L1459.85 1209.64 L1459.26 1209.64 L1458.67 1209.64 L1458.09 1209.64 L1457.5 1209.64 L1456.91 1209.64 L1456.33 1209.64 L1455.74 1209.64 L1455.16 1209.64 L1454.57 1209.64 L1453.98 1209.64 L1453.4 1209.64 L1452.81 1209.64 L1452.22 1209.64 L1451.64 1209.64 L1451.05 1209.64 L1450.46 1209.64 L1449.88 1209.64 L1449.29 1209.64 L1448.7 1209.64 L1448.12 1209.64 L1447.53 1209.64 L1446.95 1209.64 L1446.36 1209.64 L1445.77 1209.64 L1445.19 1209.64 L1444.6 1209.64 L1444.01 1209.64 L1443.43 1209.64 L1442.84 1209.64 L1442.25 1209.64 L1441.67 1209.64 L1441.08 1209.64 L1440.5 1209.64 L1439.91 1209.64 L1439.32 1209.64 L1438.74 1209.64 L1438.15 1209.64 L1437.56 1209.64 L1436.98 1209.64 L1436.39 1209.64 L1435.8 1209.64 L1435.22 1209.64 L1434.63 1209.64 L1434.04 1209.64 L1433.46 1209.64 L1432.87 1209.64 L1432.29 1209.64 L1431.7 1209.64 L1431.11 1209.64 L1430.53 1209.64 L1429.94 1209.64 L1429.35 1209.64 L1428.77 1209.64 L1428.18 1209.64 L1427.59 1209.64 L1427.01 1209.64 L1426.42 1209.64 L1425.83 1209.64 L1425.25 1209.64 L1424.66 1209.64 L1424.08 1209.64 L1423.49 1209.64 L1422.9 1209.64 L1422.32 1209.64 L1421.73 1209.64 L1421.14 1209.64 L1420.56 1209.64 L1419.97 1209.64 L1419.38 1209.64 L1418.8 1209.64 L1418.21 1209.64 L1417.63 1209.64 L1417.04 1209.64 L1416.45 1209.64 L1415.87 1209.64 L1415.28 1209.64 L1414.69 1209.64 L1414.11 1209.64 L1413.52 1209.64 L1412.93 1209.64 L1412.35 1209.64 L1411.76 1209.64 L1411.17 1209.64 L1410.59 1209.64 L1410 1209.64 L1409.42 1209.64 L1408.83 1209.64 L1408.24 1209.64 L1407.66 1209.64 L1407.07 1209.64 L1406.48 1209.64 L1405.9 1209.64 L1405.31 1209.64 L1404.72 1209.64 L1404.14 1209.64 L1403.55 1209.64 L1402.96 1209.64 L1402.38 1209.64 L1401.79 1209.64 L1401.21 1209.64 L1400.62 1209.64 L1400.03 1209.64 L1399.45 1209.64 L1398.86 1209.64 L1398.27 1209.64 L1397.69 1209.64 L1397.1 1209.64 L1396.51 1209.64 L1395.93 1209.64 L1395.34 1209.64 L1394.75 1209.64 L1394.17 1209.64 L1393.58 1209.64 L1393 1209.64 L1392.41 1209.64 L1391.82 1209.64 L1391.24 1209.64 L1390.65 1209.64 L1390.06 1209.64 L1389.48 1209.64 L1388.89 1209.64 L1388.3 1209.64 L1387.72 1209.64 L1387.13 1209.64 L1386.55 1209.64 L1385.96 1209.64 L1385.37 1209.64 L1384.79 1209.64 L1384.2 1209.64 L1383.61 1209.64 L1383.03 1209.64 L1382.44 1209.64 L1381.85 1209.64 L1381.27 1209.64 L1380.68 1209.64 L1380.09 1209.64 L1379.51 1209.64 L1378.92 1209.64 L1378.34 1209.64 L1377.75 1209.64 L1377.16 1209.64 L1376.58 1209.64 L1375.99 1209.64 L1375.4 1209.64 L1374.82 1209.64 L1374.23 1209.64 L1373.64 1209.64 L1373.06 1209.64 L1372.47 1209.64 L1371.88 1209.64 L1371.3 1209.64 L1370.71 1209.64 L1370.13 1209.64 L1369.54 1209.64 L1368.95 1209.64 L1368.37 1209.64 L1367.78 1209.64 L1367.19 1209.64 L1366.61 1209.64 L1366.02 1209.64 L1365.43 1209.64 L1364.85 1209.64 L1364.26 1209.64 L1363.68 1209.64 L1363.09 1209.64 L1362.5 1209.64 L1361.92 1209.64 L1361.33 1209.64 L1360.74 1209.64 L1360.16 1209.64 L1359.57 1209.64 L1358.98 1209.64 L1358.4 1209.64 L1357.81 1209.64 L1357.22 1209.64 L1356.64 1209.64 L1356.05 1209.64 L1355.47 1209.64 L1354.88 1209.64 L1354.29 1209.64 L1353.71 1209.64 L1353.12 1209.64 L1352.53 1209.64 L1351.95 1209.64 L1351.36 1209.64 L1350.77 1209.64 L1350.19 1209.64 L1349.6 1209.64 L1349.01 1209.64 L1348.43 1209.64 L1347.84 1209.64 L1347.26 1209.64 L1346.67 1209.64 L1346.08 1209.64 L1345.5 1209.64 L1344.91 1209.64 L1344.32 1209.64 L1343.74 1209.64 L1343.15 1209.64 L1342.56 1209.64 L1341.98 1209.64 L1341.39 1209.64 L1340.8 1209.64 L1340.22 1209.64 L1339.63 1209.64 L1339.05 1209.64 L1338.46 1209.64 L1337.87 1209.64 L1337.29 1209.64 L1336.7 1209.64 L1336.11 1209.64 L1335.53 1209.64 L1334.94 1209.64 L1334.35 1209.64 L1333.77 1209.64 L1333.18 1209.64 L1332.6 1209.64 L1332.01 1209.64 L1331.42 1209.64 L1330.84 1209.64 L1330.25 1209.64 L1329.66 1209.64 L1329.08 1209.64 L1328.49 1209.64 L1327.9 1209.64 L1327.32 1209.64 L1326.73 1209.64 L1326.14 1209.64 L1325.56 1209.64 L1324.97 1209.64 L1324.39 1209.64 L1323.8 1209.64 L1323.21 1209.64 L1322.63 1209.64 L1322.04 1209.64 L1321.45 1209.64 L1320.87 1209.64 L1320.28 1209.64 L1319.69 1209.64 L1319.11 1209.64 L1318.52 1209.64 L1317.93 1209.64 L1317.35 1209.64 L1316.76 1209.64 L1316.18 1209.64 L1315.59 1209.64 L1315 1209.64 L1314.42 1209.64 L1313.83 1209.64 L1313.24 1209.64 L1312.66 1209.64 L1312.07 1209.64 L1311.48 1209.64 L1310.9 1209.64 L1310.31 1209.64 L1309.73 1209.64 L1309.14 1209.64 L1308.55 1209.64 L1307.97 1209.64 L1307.38 1209.64 L1306.79 1209.64 L1306.21 1209.64 L1305.62 1209.64 L1305.03 1209.64 L1304.45 1209.64 L1303.86 1209.64 L1303.27 1209.64 L1302.69 1209.64 L1302.1 1209.64 L1301.52 1209.64 L1300.93 1209.64 L1300.34 1209.64 L1299.76 1209.64 L1299.17 1209.64 L1298.58 1209.64 L1298 1209.64 L1297.41 1209.64 L1296.82 1209.64 L1296.24 1209.64 L1295.65 1209.64 L1295.06 1209.64 L1294.48 1209.64 L1293.89 1209.64 L1293.31 1209.64 L1292.72 1209.64 L1292.13 1209.64 L1291.55 1209.64 L1290.96 1209.64 L1290.37 1209.64 L1289.79 1209.64 L1289.2 1209.64 L1288.61 1209.64 L1288.03 1209.64 L1287.44 1209.64 L1286.86 1209.64 L1286.27 1209.64 L1285.68 1209.64 L1285.1 1209.64 L1284.51 1209.64 L1283.92 1209.64 L1283.34 1209.64 L1282.75 1209.64 L1282.16 1209.64 L1281.58 1209.64 L1280.99 1209.64 L1280.4 1209.64 L1279.82 1209.64 L1279.23 1209.64 L1278.65 1209.64 L1278.06 1209.64 L1277.47 1209.64 L1276.89 1209.64 L1276.3 1209.64 L1275.71 1209.64 L1275.13 1209.64 L1274.54 1209.64 L1273.95 1209.64 L1273.37 1209.64 L1272.78 1209.64 L1272.19 1209.64 L1271.61 1209.64 L1271.02 1209.64 L1270.44 1209.64 L1269.85 1209.64 L1269.26 1209.64 L1268.68 1209.64 L1268.09 1209.64 L1267.5 1209.64 L1266.92 1209.64 L1266.33 1209.64 L1265.74 1209.64 L1265.16 1209.64 L1264.57 1209.64 L1263.98 1209.64 L1263.4 1209.64 L1262.81 1209.64 L1262.23 1209.64 L1261.64 1209.64 L1261.05 1209.64 L1260.47 1209.64 L1259.88 1209.64 L1259.29 1209.64 L1258.71 1209.64 L1258.12 1209.64 L1257.53 1209.64 L1256.95 1209.64 L1256.36 1209.64 L1255.78 1209.64 L1255.19 1209.64 L1254.6 1209.64 L1254.02 1209.64 L1253.43 1209.64 L1252.84 1209.64 L1252.26 1209.64 L1251.67 1209.64 L1251.08 1209.64 L1250.5 1209.64 L1249.91 1209.64 L1249.32 1209.64 L1248.74 1209.64 L1248.15 1209.64 L1247.57 1209.64 L1246.98 1209.64 L1246.39 1209.64 L1245.81 1209.64 L1245.22 1209.64 L1244.63 1209.64 L1244.05 1209.64 L1243.46 1209.64 L1242.87 1209.64 L1242.29 1209.64 L1241.7 1209.64 L1241.11 1209.64 L1240.53 1209.64 L1239.94 1209.64 L1239.36 1209.64 L1238.77 1209.64 L1238.18 1209.64 L1237.6 1209.64 L1237.01 1209.64 L1236.42 1209.64 L1235.84 1209.64 L1235.25 1209.64 L1234.66 1209.64 L1234.08 1209.64 L1233.49 1209.64 L1232.91 1209.64 L1232.32 1209.64 L1231.73 1209.64 L1231.15 1209.64 L1230.56 1209.64 L1229.97 1209.64 L1229.39 1209.64 L1228.8 1209.64 L1228.21 1209.64 L1227.63 1209.64 L1227.04 1209.64 L1226.45 1209.64 L1225.87 1209.64 L1225.28 1209.64 L1224.7 1209.64 L1224.11 1209.64 L1223.52 1209.64 L1222.94 1209.64 L1222.35 1209.64 L1221.76 1209.64 L1221.18 1209.64 L1220.59 1209.64 L1220 1209.64 L1219.42 1209.64 L1218.83 1209.64 L1218.24 1209.64 L1217.66 1209.64 L1217.07 1209.64 L1216.49 1209.64 L1215.9 1209.64 L1215.31 1209.64 L1214.73 1209.64 L1214.14 1209.64 L1213.55 1209.64 L1212.97 1209.64 L1212.38 1209.64 L1211.79 1209.64 L1211.21 1209.64 L1210.62 1209.64 L1210.03 1209.64 L1209.45 1209.64 L1208.86 1209.64 L1208.28 1209.64 L1207.69 1209.64 L1207.1 1209.64 L1206.52 1209.64 L1205.93 1209.64 L1205.34 1209.64 L1204.76 1209.64 L1204.17 1209.64 L1203.58 1209.64 L1203 1209.64 L1202.41 1209.64 L1201.83 1209.64 L1201.24 1209.64 L1200.65 1209.64 L1200.07 1209.64 L1199.48 1209.64 L1198.89 1209.64 L1198.31 1209.64 L1197.72 1209.64 L1197.13 1209.64 L1196.55 1209.64 L1195.96 1209.64 L1195.37 1209.64 L1194.79 1209.64 L1194.2 1209.64 L1193.62 1209.64 L1193.03 1209.64 L1192.44 1209.64 L1191.86 1209.64 L1191.27 1209.64 L1190.68 1209.64 L1190.1 1209.64 L1189.51 1209.64 L1188.92 1209.64 L1188.34 1209.64 L1187.75 1209.64 L1187.16 1209.64 L1186.58 1209.64 L1185.99 1209.64 L1185.41 1209.64 L1184.82 1209.64 L1184.23 1209.64 L1183.65 1209.64 L1183.06 1209.64 L1182.47 1209.64 L1181.89 1209.64 L1181.3 1209.64 L1180.71 1209.64 L1180.13 1209.64 L1179.54 1209.64 L1178.96 1209.64 L1178.37 1209.64 L1177.78 1209.64 L1177.2 1209.64 L1176.61 1209.64 L1176.02 1209.64 L1175.44 1209.64 L1174.85 1209.64 L1174.26 1209.64 L1173.68 1209.64 L1173.09 1209.64 L1172.5 1209.64 L1171.92 1209.64 L1171.33 1209.64 L1170.75 1209.64 L1170.16 1209.64 L1169.57 1209.64 L1168.99 1209.64 L1168.4 1209.64 L1167.81 1209.64 L1167.23 1209.64 L1166.64 1209.64 L1166.05 1209.64 L1165.47 1209.64 L1164.88 1209.64 L1164.29 1209.64 L1163.71 1209.64 L1163.12 1209.64 L1162.54 1209.64 L1161.95 1209.64 L1161.36 1209.64 L1160.78 1209.64 L1160.19 1209.64 L1159.6 1209.64 L1159.02 1209.64 L1158.43 1209.64 L1157.84 1209.64 L1157.26 1209.64 L1156.67 1209.64 L1156.09 1209.64 L1155.5 1209.64 L1154.91 1209.64 L1154.33 1209.64 L1153.74 1209.64 L1153.15 1209.64 L1152.57 1209.64 L1151.98 1209.64 L1151.39 1209.64 L1150.81 1209.64 L1150.22 1209.64 L1149.63 1209.64 L1149.05 1209.64 L1148.46 1209.64 L1147.88 1209.64 L1147.29 1209.64 L1146.7 1209.64 L1146.12 1209.64 L1145.53 1209.64 L1144.94 1209.64 L1144.36 1209.64 L1143.77 1209.64 L1143.18 1209.64 L1142.6 1209.64 L1142.01 1209.64 L1141.42 1209.64 L1140.84 1209.64 L1140.25 1209.64 L1139.67 1209.64 L1139.08 1209.64 L1138.49 1209.64 L1137.91 1209.64 L1137.32 1209.64 L1136.73 1209.64 L1136.15 1209.64 L1135.56 1209.64 L1134.97 1209.64 L1134.39 1209.64 L1133.8 1209.64 L1133.21 1209.64 L1132.63 1209.64 L1132.04 1209.64 L1131.46 1209.64 L1130.87 1209.64 L1130.28 1209.64 L1129.7 1209.64 L1129.11 1209.64 L1128.52 1209.64 L1127.94 1209.64 L1127.35 1209.64 L1126.76 1209.64 L1126.18 1209.64 L1125.59 1209.64 L1125.01 1209.64 L1124.42 1209.64 L1123.83 1209.64 L1123.25 1209.64 L1122.66 1209.64 L1122.07 1209.64 L1121.49 1209.64 L1120.9 1209.64 L1120.31 1209.64 L1119.73 1209.64 L1119.14 1209.64 L1118.55 1209.64 L1117.97 1209.64 L1117.38 1209.64 L1116.8 1209.64 L1116.21 1209.64 L1115.62 1209.64 L1115.04 1209.64 L1114.45 1209.64 L1113.86 1209.64 L1113.28 1209.64 L1112.69 1209.64 L1112.1 1209.64 L1111.52 1209.64 L1110.93 1209.64 L1110.34 1209.64 L1109.76 1209.64 L1109.17 1209.64 L1108.59 1209.64 L1108 1209.64 L1107.41 1209.64 L1106.83 1209.64 L1106.24 1209.64 L1105.65 1209.64 L1105.07 1209.64 L1104.48 1209.64 L1103.89 1209.64 L1103.31 1209.64 L1102.72 1209.64 L1102.14 1209.64 L1101.55 1209.64 L1100.96 1209.64 L1100.38 1209.64 L1099.79 1209.64 L1099.2 1209.64 L1098.62 1209.64 L1098.03 1209.64 L1097.44 1209.64 L1096.86 1209.64 L1096.27 1209.64 L1095.68 1209.64 L1095.1 1209.64 L1094.51 1209.64 L1093.93 1209.64 L1093.34 1209.64 L1092.75 1209.64 L1092.17 1209.64 L1091.58 1209.64 L1090.99 1209.64 L1090.41 1209.64 L1089.82 1209.64 L1089.23 1209.64 L1088.65 1209.64 L1088.06 1209.64 L1087.47 1209.64 L1086.89 1209.64 L1086.3 1209.64 L1085.72 1209.64 L1085.13 1209.64 L1084.54 1209.64 L1083.96 1209.64 L1083.37 1209.64 L1082.78 1209.64 L1082.2 1209.64 L1081.61 1209.64 L1081.02 1209.64 L1080.44 1209.64 L1079.85 1209.64 L1079.26 1209.64 L1078.68 1209.64 L1078.09 1209.64 L1077.51 1209.64 L1076.92 1209.64 L1076.33 1209.64 L1075.75 1209.64 L1075.16 1209.64 L1074.57 1209.64 L1073.99 1209.64 L1073.4 1209.64 L1072.81 1209.64 L1072.23 1209.64 L1071.64 1209.64 L1071.06 1209.64 L1070.47 1209.64 L1069.88 1209.64 L1069.3 1209.64 L1068.71 1209.64 L1068.12 1209.64 L1067.54 1209.64 L1066.95 1209.64 L1066.36 1209.64 L1065.78 1209.64 L1065.19 1209.64 L1064.6 1209.64 L1064.02 1209.64 L1063.43 1209.64 L1062.85 1209.64 L1062.26 1209.64 L1061.67 1209.64 L1061.09 1209.64 L1060.5 1209.64 L1059.91 1209.64 L1059.33 1209.64 L1058.74 1209.64 L1058.15 1209.64 L1057.57 1209.64 L1056.98 1209.64 L1056.39 1209.64 L1055.81 1209.64 L1055.22 1209.64 L1054.64 1209.64 L1054.05 1209.64 L1053.46 1209.64 L1052.88 1209.64 L1052.29 1209.64 L1051.7 1209.64 L1051.12 1209.64 L1050.53 1209.64 L1049.94 1209.64 L1049.36 1209.64 L1048.77 1209.64 L1048.19 1209.64 L1047.6 1209.64 L1047.01 1209.64 L1046.43 1209.64 L1045.84 1209.64 L1045.25 1209.64 L1044.67 1209.64 L1044.08 1209.64 L1043.49 1209.64 L1042.91 1209.64 L1042.32 1209.64 L1041.73 1209.64 L1041.15 1209.64 L1040.56 1209.64 L1039.98 1209.64 L1039.39 1209.64 L1038.8 1209.64 L1038.22 1209.64 L1037.63 1209.64 L1037.04 1209.64 L1036.46 1209.64 L1035.87 1209.64 L1035.28 1209.64 L1034.7 1209.64 L1034.11 1209.64 L1033.52 1209.64 L1032.94 1209.64 L1032.35 1209.64 L1031.77 1209.64 L1031.18 1209.64 L1030.59 1209.64 L1030.01 1209.64 L1029.42 1209.64 L1028.83 1209.64 L1028.25 1209.64 L1027.66 1209.64 L1027.07 1209.64 L1026.49 1209.64 L1025.9 1209.64 L1025.32 1209.64 L1024.73 1209.64 L1024.14 1209.64 L1023.56 1209.64 L1022.97 1209.64 L1022.38 1209.64 L1021.8 1209.64 L1021.21 1209.64 L1020.62 1209.64 L1020.04 1209.64 L1019.45 1209.64 L1018.86 1209.64 L1018.28 1209.64 L1017.69 1209.64 L1017.11 1209.64 L1016.52 1209.64 L1015.93 1209.64 L1015.35 1209.64 L1014.76 1209.64 L1014.17 1209.64 L1013.59 1209.64 L1013 1209.64 L1012.41 1209.64 L1011.83 1209.64 L1011.24 1209.64 L1010.65 1209.64 L1010.07 1209.64 L1009.48 1209.64 L1008.9 1209.64 L1008.31 1209.64 L1007.72 1209.64 L1007.14 1209.64 L1006.55 1209.64 L1005.96 1209.64 L1005.38 1209.64 L1004.79 1209.64 L1004.2 1209.64 L1003.62 1209.64 L1003.03 1209.64 L1002.44 1209.64 L1001.86 1209.64 L1001.27 1209.64 L1000.69 1209.64 L1000.1 1209.64 L999.513 1209.64 L998.926 1209.64 L998.34 1209.64 L997.754 1209.64 L997.167 1209.64 L996.581 1209.64 L995.994 1209.64 L995.408 1209.64 L994.822 1209.64 L994.235 1209.64 L993.649 1209.64 L993.062 1209.64 L992.476 1209.64 L991.889 1209.64 L991.303 1209.64 L990.717 1209.64 L990.13 1209.64 L989.544 1209.64 L988.957 1209.64 L988.371 1209.64 L987.785 1209.64 L987.198 1209.64 L986.612 1209.64 L986.025 1209.64  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1209.98 986.612,1209.98 987.198,1209.98 987.785,1209.98 988.371,1209.98 988.957,1209.98 989.544,1209.98 990.13,1209.98 990.717,1209.98 991.303,1209.98 991.889,1209.98 992.476,1209.98 993.062,1209.98 993.649,1209.98 994.235,1209.98 994.822,1209.98 995.408,1209.98 995.994,1209.98 996.581,1209.98 997.167,1209.98 997.754,1209.98 998.34,1209.98 998.926,1209.98 999.513,1209.98 1000.1,1209.98 1000.69,1209.98 1001.27,1209.98 1001.86,1209.98 1002.44,1209.98 1003.03,1209.98 1003.62,1209.98 1004.2,1209.98 1004.79,1209.98 1005.38,1209.98 1005.96,1209.98 1006.55,1209.98 1007.14,1209.98 1007.72,1209.98 1008.31,1209.98 1008.9,1209.98 1009.48,1209.98 1010.07,1209.98 1010.65,1209.98 1011.24,1209.98 1011.83,1209.98 1012.41,1209.98 1013,1209.98 1013.59,1209.98 1014.17,1209.98 1014.76,1209.98 1015.35,1209.98 1015.93,1209.98 1016.52,1209.98 1017.11,1209.98 1017.69,1209.98 1018.28,1209.98 1018.86,1209.98 1019.45,1209.98 1020.04,1209.98 1020.62,1209.98 1021.21,1209.98 1021.8,1209.98 1022.38,1209.98 1022.97,1209.98 1023.56,1209.98 1024.14,1209.98 1024.73,1209.98 1025.32,1209.98 1025.9,1209.98 1026.49,1209.98 1027.07,1209.98 1027.66,1209.98 1028.25,1209.98 1028.83,1209.98 1029.42,1209.98 1030.01,1209.98 1030.59,1209.98 1031.18,1209.98 1031.77,1209.98 1032.35,1209.98 1032.94,1209.98 1033.52,1209.98 1034.11,1209.98 1034.7,1209.98 1035.28,1209.98 1035.87,1209.98 1036.46,1209.98 1037.04,1209.98 1037.63,1209.98 1038.22,1209.98 1038.8,1209.98 1039.39,1209.98 1039.98,1209.98 1040.56,1209.98 1041.15,1209.98 1041.73,1209.98 1042.32,1209.98 1042.91,1209.98 1043.49,1209.98 1044.08,1209.98 1044.67,1209.98 1045.25,1209.98 1045.84,1209.98 1046.43,1209.98 1047.01,1209.98 1047.6,1209.98 1048.19,1209.98 1048.77,1209.98 1049.36,1209.98 1049.94,1209.98 1050.53,1209.98 1051.12,1209.98 1051.7,1209.98 1052.29,1209.98 1052.88,1209.98 1053.46,1209.98 1054.05,1209.98 1054.64,1209.98 1055.22,1209.98 1055.81,1209.98 1056.39,1209.98 1056.98,1209.98 1057.57,1209.98 1058.15,1209.98 1058.74,1209.98 1059.33,1209.98 1059.91,1209.98 1060.5,1209.98 1061.09,1209.98 1061.67,1209.98 1062.26,1209.98 1062.85,1209.98 1063.43,1209.98 1064.02,1209.98 1064.6,1209.98 1065.19,1209.98 1065.78,1209.98 1066.36,1209.98 1066.95,1209.98 1067.54,1209.98 1068.12,1209.98 1068.71,1209.98 1069.3,1209.98 1069.88,1209.98 1070.47,1209.98 1071.06,1209.98 1071.64,1209.98 1072.23,1209.98 1072.81,1209.98 1073.4,1209.98 1073.99,1209.98 1074.57,1209.98 1075.16,1209.98 1075.75,1209.98 1076.33,1209.98 1076.92,1209.98 1077.51,1209.98 1078.09,1209.98 1078.68,1209.98 1079.26,1209.98 1079.85,1209.98 1080.44,1209.98 1081.02,1209.98 1081.61,1209.98 1082.2,1209.98 1082.78,1209.98 1083.37,1209.98 1083.96,1209.98 1084.54,1209.98 1085.13,1209.98 1085.72,1209.98 1086.3,1209.98 1086.89,1209.98 1087.47,1209.98 1088.06,1209.98 1088.65,1209.98 1089.23,1209.98 1089.82,1209.98 1090.41,1209.98 1090.99,1209.98 1091.58,1209.98 1092.17,1209.98 1092.75,1209.98 1093.34,1209.98 1093.93,1209.98 1094.51,1209.98 1095.1,1209.98 1095.68,1209.98 1096.27,1209.98 1096.86,1209.98 1097.44,1209.98 1098.03,1209.98 1098.62,1209.98 1099.2,1209.98 1099.79,1209.98 1100.38,1209.98 1100.96,1209.98 1101.55,1209.98 1102.14,1209.98 1102.72,1209.98 1103.31,1209.98 1103.89,1209.98 1104.48,1209.98 1105.07,1209.98 1105.65,1209.98 1106.24,1209.98 1106.83,1209.98 1107.41,1209.98 1108,1209.98 1108.59,1209.98 1109.17,1209.98 1109.76,1209.98 1110.34,1209.98 1110.93,1209.98 1111.52,1209.98 1112.1,1209.98 1112.69,1209.98 1113.28,1209.98 1113.86,1209.98 1114.45,1209.98 1115.04,1209.98 1115.62,1209.98 1116.21,1209.98 1116.8,1209.98 1117.38,1209.98 1117.97,1209.98 1118.55,1209.98 1119.14,1209.98 1119.73,1209.98 1120.31,1209.98 1120.9,1209.98 1121.49,1209.98 1122.07,1209.98 1122.66,1209.98 1123.25,1209.98 1123.83,1209.98 1124.42,1209.98 1125.01,1209.98 1125.59,1209.98 1126.18,1209.98 1126.76,1209.98 1127.35,1209.98 1127.94,1209.98 1128.52,1209.98 1129.11,1209.98 1129.7,1209.98 1130.28,1209.98 1130.87,1209.98 1131.46,1209.98 1132.04,1209.98 1132.63,1209.98 1133.21,1209.98 1133.8,1209.98 1134.39,1209.98 1134.97,1209.98 1135.56,1209.98 1136.15,1209.98 1136.73,1209.98 1137.32,1209.98 1137.91,1209.98 1138.49,1209.98 1139.08,1209.98 1139.67,1209.98 1140.25,1209.98 1140.84,1209.98 1141.42,1209.98 1142.01,1209.98 1142.6,1209.98 1143.18,1209.98 1143.77,1209.98 1144.36,1209.98 1144.94,1209.98 1145.53,1209.98 1146.12,1209.98 1146.7,1209.98 1147.29,1209.98 1147.88,1209.98 1148.46,1209.98 1149.05,1209.98 1149.63,1209.98 1150.22,1209.98 1150.81,1209.98 1151.39,1209.98 1151.98,1209.98 1152.57,1209.98 1153.15,1209.98 1153.74,1209.98 1154.33,1209.98 1154.91,1209.98 1155.5,1209.98 1156.09,1209.98 1156.67,1209.98 1157.26,1209.98 1157.84,1209.98 1158.43,1209.98 1159.02,1209.98 1159.6,1209.98 1160.19,1209.98 1160.78,1209.98 1161.36,1209.98 1161.95,1209.98 1162.54,1209.98 1163.12,1209.98 1163.71,1209.98 1164.29,1209.98 1164.88,1209.98 1165.47,1209.98 1166.05,1209.98 1166.64,1209.98 1167.23,1209.98 1167.81,1209.98 1168.4,1209.98 1168.99,1209.98 1169.57,1209.98 1170.16,1209.98 1170.75,1209.98 1171.33,1209.98 1171.92,1209.98 1172.5,1209.98 1173.09,1209.98 1173.68,1209.98 1174.26,1209.98 1174.85,1209.98 1175.44,1209.98 1176.02,1209.98 1176.61,1209.98 1177.2,1209.98 1177.78,1209.98 1178.37,1209.98 1178.96,1209.98 1179.54,1209.98 1180.13,1209.98 1180.71,1209.98 1181.3,1209.98 1181.89,1209.98 1182.47,1209.98 1183.06,1209.98 1183.65,1209.98 1184.23,1209.98 1184.82,1209.98 1185.41,1209.98 1185.99,1209.98 1186.58,1209.98 1187.16,1209.98 1187.75,1209.98 1188.34,1209.98 1188.92,1209.98 1189.51,1209.98 1190.1,1209.98 1190.68,1209.98 1191.27,1209.98 1191.86,1209.98 1192.44,1209.98 1193.03,1209.98 1193.62,1209.98 1194.2,1209.98 1194.79,1209.98 1195.37,1209.98 1195.96,1209.98 1196.55,1209.98 1197.13,1209.98 1197.72,1209.98 1198.31,1209.98 1198.89,1209.98 1199.48,1209.98 1200.07,1209.98 1200.65,1209.98 1201.24,1209.98 1201.83,1209.98 1202.41,1209.98 1203,1209.98 1203.58,1209.98 1204.17,1209.98 1204.76,1209.98 1205.34,1209.98 1205.93,1209.98 1206.52,1209.98 1207.1,1209.98 1207.69,1209.98 1208.28,1209.98 1208.86,1209.98 1209.45,1209.98 1210.03,1209.98 1210.62,1209.98 1211.21,1209.98 1211.79,1209.98 1212.38,1209.98 1212.97,1209.98 1213.55,1209.98 1214.14,1209.98 1214.73,1209.98 1215.31,1209.98 1215.9,1209.98 1216.49,1209.98 1217.07,1209.98 1217.66,1209.98 1218.24,1209.98 1218.83,1209.98 1219.42,1209.98 1220,1209.98 1220.59,1209.98 1221.18,1209.98 1221.76,1209.98 1222.35,1209.98 1222.94,1209.98 1223.52,1209.98 1224.11,1209.98 1224.7,1209.98 1225.28,1209.98 1225.87,1209.98 1226.45,1209.98 1227.04,1209.98 1227.63,1209.98 1228.21,1209.98 1228.8,1209.98 1229.39,1209.98 1229.97,1209.98 1230.56,1209.98 1231.15,1209.98 1231.73,1209.98 1232.32,1209.98 1232.91,1209.98 1233.49,1209.98 1234.08,1209.98 1234.66,1209.98 1235.25,1209.98 1235.84,1209.98 1236.42,1209.98 1237.01,1209.98 1237.6,1209.98 1238.18,1209.98 1238.77,1209.98 1239.36,1209.98 1239.94,1209.98 1240.53,1209.98 1241.11,1209.98 1241.7,1209.98 1242.29,1209.98 1242.87,1209.98 1243.46,1209.98 1244.05,1209.98 1244.63,1209.98 1245.22,1209.98 1245.81,1209.98 1246.39,1209.98 1246.98,1209.98 1247.57,1209.98 1248.15,1209.98 1248.74,1209.98 1249.32,1209.98 1249.91,1209.98 1250.5,1209.98 1251.08,1209.98 1251.67,1209.98 1252.26,1209.98 1252.84,1209.98 1253.43,1209.98 1254.02,1209.98 1254.6,1209.98 1255.19,1209.98 1255.78,1209.98 1256.36,1209.98 1256.95,1209.98 1257.53,1209.98 1258.12,1209.98 1258.71,1209.98 1259.29,1209.98 1259.88,1209.98 1260.47,1209.98 1261.05,1209.98 1261.64,1209.98 1262.23,1209.98 1262.81,1209.98 1263.4,1209.98 1263.98,1209.98 1264.57,1209.98 1265.16,1209.98 1265.74,1209.98 1266.33,1209.98 1266.92,1209.98 1267.5,1209.98 1268.09,1209.98 1268.68,1209.98 1269.26,1209.98 1269.85,1209.98 1270.44,1209.98 1271.02,1209.98 1271.61,1209.98 1272.19,1209.98 1272.78,1209.98 1273.37,1209.98 1273.95,1209.98 1274.54,1209.98 1275.13,1209.98 1275.71,1209.98 1276.3,1209.98 1276.89,1209.98 1277.47,1209.98 1278.06,1209.98 1278.65,1209.98 1279.23,1209.98 1279.82,1209.98 1280.4,1209.98 1280.99,1209.98 1281.58,1209.98 1282.16,1209.98 1282.75,1209.98 1283.34,1209.98 1283.92,1209.98 1284.51,1209.98 1285.1,1209.98 1285.68,1209.98 1286.27,1209.98 1286.86,1209.98 1287.44,1209.98 1288.03,1209.98 1288.61,1209.98 1289.2,1209.98 1289.79,1209.98 1290.37,1209.98 1290.96,1209.98 1291.55,1209.98 1292.13,1209.98 1292.72,1209.98 1293.31,1209.98 1293.89,1209.98 1294.48,1209.98 1295.06,1209.98 1295.65,1209.98 1296.24,1209.98 1296.82,1209.98 1297.41,1209.98 1298,1209.98 1298.58,1209.98 1299.17,1209.98 1299.76,1209.98 1300.34,1209.98 1300.93,1209.98 1301.52,1209.98 1302.1,1209.98 1302.69,1209.98 1303.27,1209.98 1303.86,1209.98 1304.45,1209.98 1305.03,1209.98 1305.62,1209.98 1306.21,1209.98 1306.79,1209.98 1307.38,1209.98 1307.97,1209.98 1308.55,1209.98 1309.14,1209.98 1309.73,1209.98 1310.31,1209.98 1310.9,1209.98 1311.48,1209.98 1312.07,1209.98 1312.66,1209.98 1313.24,1209.98 1313.83,1209.98 1314.42,1209.98 1315,1209.98 1315.59,1209.98 1316.18,1209.98 1316.76,1209.98 1317.35,1209.98 1317.93,1209.98 1318.52,1209.98 1319.11,1209.98 1319.69,1209.98 1320.28,1209.98 1320.87,1209.98 1321.45,1209.98 1322.04,1209.98 1322.63,1209.98 1323.21,1209.98 1323.8,1209.98 1324.39,1209.98 1324.97,1209.98 1325.56,1209.98 1326.14,1209.98 1326.73,1209.98 1327.32,1209.98 1327.9,1209.98 1328.49,1209.98 1329.08,1209.98 1329.66,1209.98 1330.25,1209.98 1330.84,1209.98 1331.42,1209.98 1332.01,1209.98 1332.6,1209.98 1333.18,1209.98 1333.77,1209.98 1334.35,1209.98 1334.94,1209.98 1335.53,1209.98 1336.11,1209.98 1336.7,1209.98 1337.29,1209.98 1337.87,1209.98 1338.46,1209.98 1339.05,1209.98 1339.63,1209.98 1340.22,1209.98 1340.8,1209.98 1341.39,1209.98 1341.98,1209.98 1342.56,1209.98 1343.15,1209.98 1343.74,1209.98 1344.32,1209.98 1344.91,1209.98 1345.5,1209.98 1346.08,1209.98 1346.67,1209.98 1347.26,1209.98 1347.84,1209.98 1348.43,1209.98 1349.01,1209.98 1349.6,1209.98 1350.19,1209.98 1350.77,1209.98 1351.36,1209.98 1351.95,1209.98 1352.53,1209.98 1353.12,1209.98 1353.71,1209.98 1354.29,1209.98 1354.88,1209.98 1355.47,1209.98 1356.05,1209.98 1356.64,1209.98 1357.22,1209.98 1357.81,1209.98 1358.4,1209.98 1358.98,1209.98 1359.57,1209.98 1360.16,1209.98 1360.74,1209.98 1361.33,1209.98 1361.92,1209.98 1362.5,1209.98 1363.09,1209.98 1363.68,1209.98 1364.26,1209.98 1364.85,1209.98 1365.43,1209.98 1366.02,1209.98 1366.61,1209.98 1367.19,1209.98 1367.78,1209.98 1368.37,1209.98 1368.95,1209.98 1369.54,1209.98 1370.13,1209.98 1370.71,1209.98 1371.3,1209.98 1371.88,1209.98 1372.47,1209.98 1373.06,1209.98 1373.64,1209.98 1374.23,1209.98 1374.82,1209.98 1375.4,1209.98 1375.99,1209.98 1376.58,1209.98 1377.16,1209.98 1377.75,1209.98 1378.34,1209.98 1378.92,1209.98 1379.51,1209.98 1380.09,1209.98 1380.68,1209.98 1381.27,1209.98 1381.85,1209.98 1382.44,1209.98 1383.03,1209.98 1383.61,1209.98 1384.2,1209.98 1384.79,1209.98 1385.37,1209.98 1385.96,1209.98 1386.55,1209.98 1387.13,1209.98 1387.72,1209.98 1388.3,1209.98 1388.89,1209.98 1389.48,1209.98 1390.06,1209.98 1390.65,1209.98 1391.24,1209.98 1391.82,1209.98 1392.41,1209.98 1393,1209.98 1393.58,1209.98 1394.17,1209.98 1394.75,1209.98 1395.34,1209.98 1395.93,1209.98 1396.51,1209.98 1397.1,1209.98 1397.69,1209.98 1398.27,1209.98 1398.86,1209.98 1399.45,1209.98 1400.03,1209.98 1400.62,1209.98 1401.21,1209.98 1401.79,1209.98 1402.38,1209.98 1402.96,1209.98 1403.55,1209.98 1404.14,1209.98 1404.72,1209.98 1405.31,1209.98 1405.9,1209.98 1406.48,1209.98 1407.07,1209.98 1407.66,1209.98 1408.24,1209.98 1408.83,1209.98 1409.42,1209.98 1410,1209.98 1410.59,1209.98 1411.17,1209.98 1411.76,1209.98 1412.35,1209.98 1412.93,1209.98 1413.52,1209.98 1414.11,1209.98 1414.69,1209.98 1415.28,1209.98 1415.87,1209.98 1416.45,1209.98 1417.04,1209.98 1417.63,1209.98 1418.21,1209.98 1418.8,1209.98 1419.38,1209.98 1419.97,1209.98 1420.56,1209.98 1421.14,1209.98 1421.73,1209.98 1422.32,1209.98 1422.9,1209.98 1423.49,1209.98 1424.08,1209.98 1424.66,1209.98 1425.25,1209.98 1425.83,1209.98 1426.42,1209.98 1427.01,1209.98 1427.59,1209.98 1428.18,1209.98 1428.77,1209.98 1429.35,1209.98 1429.94,1209.98 1430.53,1209.98 1431.11,1209.98 1431.7,1209.98 1432.29,1209.98 1432.87,1209.98 1433.46,1209.98 1434.04,1209.98 1434.63,1209.98 1435.22,1209.98 1435.8,1209.98 1436.39,1209.98 1436.98,1209.98 1437.56,1209.98 1438.15,1209.98 1438.74,1209.98 1439.32,1209.98 1439.91,1209.98 1440.5,1209.98 1441.08,1209.98 1441.67,1209.98 1442.25,1209.98 1442.84,1209.98 1443.43,1209.98 1444.01,1209.98 1444.6,1209.98 1445.19,1209.98 1445.77,1209.98 1446.36,1209.98 1446.95,1209.98 1447.53,1209.98 1448.12,1209.98 1448.7,1209.98 1449.29,1209.98 1449.88,1209.98 1450.46,1209.98 1451.05,1209.98 1451.64,1209.98 1452.22,1209.98 1452.81,1209.98 1453.4,1209.98 1453.98,1209.98 1454.57,1209.98 1455.16,1209.98 1455.74,1209.98 1456.33,1209.98 1456.91,1209.98 1457.5,1209.98 1458.09,1209.98 1458.67,1209.98 1459.26,1209.98 1459.85,1209.98 1460.43,1209.98 1461.02,1209.98 1461.61,1209.98 1462.19,1209.98 1462.78,1209.98 1463.37,1209.98 1463.95,1209.98 1464.54,1209.98 1465.12,1209.98 1465.71,1209.98 1466.3,1209.98 1466.88,1209.98 1467.47,1209.98 1468.06,1209.98 1468.64,1209.98 1469.23,1209.98 1469.82,1209.98 1470.4,1209.98 1470.99,1209.98 1471.57,1209.98 1472.16,1209.98 1472.75,1209.98 1473.33,1209.98 1473.92,1209.98 1474.51,1209.98 1475.09,1209.98 1475.68,1209.98 1476.27,1209.98 1476.85,1209.98 1477.44,1209.98 1478.03,1209.98 1478.61,1209.98 1479.2,1209.98 1479.78,1209.98 1480.37,1209.98 1480.96,1209.98 1481.54,1209.98 1482.13,1209.98 1482.72,1209.98 1483.3,1209.98 1483.89,1209.98 1484.48,1209.98 1485.06,1209.98 1485.65,1209.98 1486.24,1209.98 1486.82,1209.98 1487.41,1209.98 1487.99,1209.98 1488.58,1209.98 1489.17,1209.98 1489.75,1209.98 1490.34,1209.98 1490.93,1209.98 1491.51,1209.98 1492.1,1209.98 1492.69,1209.98 1493.27,1209.98 1493.86,1209.98 1494.45,1209.98 1495.03,1209.98 1495.62,1209.98 1496.2,1209.98 1496.79,1209.98 1497.38,1209.98 1497.96,1209.98 1498.55,1209.98 1499.14,1209.98 1499.72,1209.98 1500.31,1209.98 1500.9,1209.98 1501.48,1209.98 1502.07,1209.98 1502.65,1209.98 1503.24,1209.98 1503.83,1209.98 1504.41,1209.98 1505,1209.98 1505.59,1209.98 1506.17,1209.98 1506.76,1209.98 1507.35,1209.98 1507.93,1209.98 1508.52,1209.98 1509.11,1209.98 1509.69,1209.98 1510.28,1209.98 1510.86,1209.98 1511.45,1209.98 1512.04,1209.98 1512.62,1209.98 1513.21,1209.98 1513.8,1209.98 1514.38,1209.98 1514.97,1209.98 1515.56,1209.98 1516.14,1209.98 1516.73,1209.98 1517.32,1209.98 1517.9,1209.98 1518.49,1209.98 1519.07,1209.98 1519.66,1209.98 1520.25,1209.98 1520.83,1209.98 1521.42,1209.98 1522.01,1209.98 1522.59,1209.98 1523.18,1209.98 1523.77,1209.98 1524.35,1209.98 1524.94,1209.98 1525.52,1209.98 1526.11,1209.98 1526.7,1209.98 1527.28,1209.98 1527.87,1209.98 1528.46,1209.98 1529.04,1209.98 1529.63,1209.98 1530.22,1209.98 1530.8,1209.98 1531.39,1209.98 1531.98,1209.98 1532.56,1209.98 1533.15,1209.98 1533.73,1209.98 1534.32,1209.98 1534.91,1209.98 1535.49,1209.98 1536.08,1209.98 1536.67,1209.98 1537.25,1209.98 1537.84,1209.98 1538.43,1209.98 1539.01,1209.98 1539.6,1209.98 1540.19,1209.98 1540.77,1209.98 1541.36,1209.98 1541.94,1209.98 1542.53,1209.98 1543.12,1209.98 1543.7,1209.98 1544.29,1209.98 1544.88,1209.98 1545.46,1209.98 1546.05,1209.98 1546.64,1209.98 1547.22,1209.98 1547.81,1209.98 1548.4,1209.98 1548.98,1209.98 1549.57,1209.98 1550.15,1209.98 1550.74,1209.98 1551.33,1209.98 1551.91,1209.98 1552.5,1209.98 1553.09,1209.98 1553.67,1209.98 1554.26,1209.98 1554.85,1209.98 1555.43,1209.98 1556.02,1209.98 1556.6,1209.98 1557.19,1209.98 1557.78,1209.98 1558.36,1209.98 1558.95,1209.98 1559.54,1209.98 1560.12,1209.98 1560.71,1209.98 1561.3,1209.98 1561.88,1209.98 1562.47,1209.98 1563.06,1209.98 1563.64,1209.98 1564.23,1209.98 1564.81,1209.98 1565.4,1209.98 1565.99,1209.98 1566.57,1209.98 1567.16,1209.98 1567.75,1209.98 1568.33,1209.98 1568.92,1209.98 1569.51,1209.98 1570.09,1209.98 1570.68,1209.98 1571.27,1209.98 1571.85,1209.98 1572.44,1209.98 1573.02,1209.98 1573.61,1209.98 1574.2,1209.98 1574.78,1209.98 1575.37,1209.98 1575.96,1209.98 1576.54,1209.98 1577.13,1209.98 1577.72,1209.98 1578.3,1209.98 1578.89,1209.98 1579.47,1209.98 1580.06,1209.98 1580.65,1209.98 1581.23,1209.98 1581.82,1209.98 1582.41,1209.98 1582.99,1209.98 1583.58,1209.98 1584.17,1209.98 1584.75,1209.98 1585.34,1209.98 1585.93,1209.98 1586.51,1209.98 1587.1,1209.98 1587.68,1209.98 1588.27,1209.98 1588.86,1209.98 1589.44,1209.98 1590.03,1209.98 1590.62,1209.98 1591.2,1209.98 1591.79,1209.98 1592.38,1209.98 1592.96,1209.98 1593.55,1209.98 1594.14,1209.98 1594.72,1209.98 1595.31,1209.98 1595.89,1209.98 1596.48,1209.98 1597.07,1209.98 1597.65,1209.98 1598.24,1209.98 1598.83,1209.98 1599.41,1209.98 1600,1209.98 1600.59,1209.98 1601.17,1209.98 1601.76,1209.98 1602.34,1209.98 1602.93,1209.98 1603.52,1209.98 1604.1,1209.98 1604.69,1209.98 1605.28,1209.98 1605.86,1209.98 1606.45,1209.98 1607.04,1209.98 1607.62,1209.98 1608.21,1209.98 1608.8,1209.98 1609.38,1209.98 1609.97,1209.98 1610.55,1209.98 1611.14,1209.98 1611.73,1209.98 1612.31,1209.98 1612.9,1209.98 1613.49,1209.98 1614.07,1209.98 1614.66,1209.98 1615.25,1209.98 1615.83,1209.98 1616.42,1209.98 1617.01,1209.98 1617.59,1209.98 1618.18,1209.98 1618.76,1209.98 1619.35,1209.98 1619.94,1209.98 1620.52,1209.98 1621.11,1209.98 1621.7,1209.98 1622.28,1209.98 1622.87,1209.98 1623.46,1209.98 1624.04,1209.98 1624.63,1209.98 1625.22,1209.98 1625.8,1209.98 1626.39,1209.98 1626.97,1209.98 1627.56,1209.98 1628.15,1209.98 1628.73,1209.98 1629.32,1209.98 1629.91,1209.98 1630.49,1209.98 1631.08,1209.98 1631.67,1209.98 1632.25,1209.98 1632.84,1209.98 1633.42,1209.98 1634.01,1209.98 1634.6,1209.98 1635.18,1209.98 1635.77,1209.98 1636.36,1209.98 1636.94,1209.98 1637.53,1209.98 1638.12,1209.98 1638.7,1209.98 1639.29,1209.98 1639.88,1209.98 1640.46,1209.98 1641.05,1209.98 1641.63,1209.98 1642.22,1209.98 1642.81,1209.98 1643.39,1209.98 1643.98,1209.98 1644.57,1209.98 1645.15,1209.98 1645.74,1209.98 1646.33,1209.98 1646.91,1209.98 1647.5,1209.98 1648.09,1209.98 1648.67,1209.98 1649.26,1209.98 1649.84,1209.98 1650.43,1209.98 1651.02,1209.98 1651.6,1209.98 1652.19,1209.98 1652.78,1209.98 1653.36,1209.98 1653.95,1209.98 1654.54,1209.98 1655.12,1209.98 1655.71,1209.98 1656.29,1209.98 1656.88,1209.98 1657.47,1209.98 1658.05,1209.98 1658.64,1209.98 1659.23,1209.98 1659.81,1209.98 1660.4,1209.98 1660.99,1209.98 1661.57,1209.98 1662.16,1209.98 1662.75,1209.98 1663.33,1209.98 1663.92,1209.98 1664.5,1209.98 1665.09,1209.98 1665.68,1209.98 1666.26,1209.98 1666.85,1209.98 1667.44,1209.98 1668.02,1209.98 1668.61,1209.98 1669.2,1209.98 1669.78,1209.98 1670.37,1209.98 1670.96,1209.98 1671.54,1209.98 1672.13,1209.98 1672.71,1209.98 1673.3,1209.98 1673.89,1209.98 1674.47,1209.98 1675.06,1209.98 1675.65,1209.98 1676.23,1209.98 1676.82,1209.98 1677.41,1209.98 1677.99,1209.98 1678.58,1209.98 1679.17,1209.98 1679.75,1209.98 1680.34,1209.98 1680.92,1209.98 1681.51,1209.98 1682.1,1209.98 1682.68,1209.98 1683.27,1209.98 1683.86,1209.98 1684.44,1209.98 1685.03,1209.98 1685.62,1209.98 1686.2,1209.98 1686.79,1209.98 1687.37,1209.98 1687.96,1209.98 1688.55,1209.98 1689.13,1209.98 1689.72,1209.98 1690.31,1209.98 1690.89,1209.98 1691.48,1209.98 1692.07,1209.98 1692.65,1209.98 1693.24,1209.98 1693.83,1209.98 1694.41,1209.98 1695,1209.98 1695.58,1209.98 1696.17,1209.98 1696.76,1209.98 1697.34,1209.98 1697.93,1209.98 1698.52,1209.98 1699.1,1209.98 1699.69,1209.98 1700.28,1209.98 1700.86,1209.98 1701.45,1209.98 1702.04,1209.98 1702.62,1209.98 1703.21,1209.98 1703.79,1209.98 1704.38,1209.98 1704.97,1209.98 1705.55,1209.98 1706.14,1209.98 1706.73,1209.98 1707.31,1209.98 1707.9,1209.98 1708.49,1209.98 1709.07,1209.98 1709.66,1209.98 1710.24,1209.98 1710.83,1209.98 1711.42,1209.98 1712,1209.98 1712.59,1209.98 1713.18,1209.98 1713.76,1209.98 1714.35,1209.98 1714.94,1209.98 1715.52,1209.98 1716.11,1209.98 1716.7,1209.98 1717.28,1209.98 1717.87,1209.98 1718.45,1209.98 1719.04,1209.98 1719.63,1209.98 1720.21,1209.98 1720.8,1209.98 1721.39,1209.98 1721.97,1209.98 1722.56,1209.98 1723.15,1209.98 1723.73,1209.98 1724.32,1209.98 1724.91,1209.98 1725.49,1209.98 1726.08,1209.98 1726.66,1209.98 1727.25,1209.98 1727.84,1209.98 1728.42,1209.98 1729.01,1209.98 1729.6,1209.98 1730.18,1209.98 1730.77,1209.98 1731.36,1209.98 1731.94,1209.98 1732.53,1209.98 1733.11,1209.98 1733.7,1209.98 1734.29,1209.98 1734.87,1209.98 1735.46,1209.98 1736.05,1209.98 1736.63,1209.98 1737.22,1209.98 1737.81,1209.98 1738.39,1209.98 1738.98,1209.98 1739.57,1209.98 1740.15,1209.98 1740.74,1209.98 1741.32,1209.98 1741.91,1209.98 1742.5,1209.98 1743.08,1209.98 1743.67,1209.98 1744.26,1209.98 1744.84,1209.98 1745.43,1209.98 1746.02,1209.98 1746.6,1209.98 1747.19,1209.98 1747.78,1209.98 1748.36,1209.98 1748.95,1209.98 1749.53,1209.98 1750.12,1209.98 1750.71,1209.98 1751.29,1209.98 1751.88,1209.98 1752.47,1209.98 1753.05,1209.98 1753.64,1209.98 1754.23,1209.98 1754.81,1209.98 1755.4,1209.98 1755.99,1209.98 1756.57,1209.98 1757.16,1209.98 1757.74,1209.98 1758.33,1209.98 1758.92,1209.98 1759.5,1209.98 1760.09,1209.98 1760.68,1209.98 1761.26,1209.98 1761.85,1209.98 1762.44,1209.98 1763.02,1209.98 1763.61,1209.98 1764.19,1209.98 1764.78,1209.98 1765.37,1209.98 1765.95,1209.98 1766.54,1209.98 1767.13,1209.98 1767.71,1209.98 1768.3,1209.98 1768.89,1209.98 1769.47,1209.98 1770.06,1209.98 1770.65,1209.98 1771.23,1209.98 1771.82,1209.98 1772.4,1209.98 1772.99,1209.98 1773.58,1209.98 1774.16,1209.98 1774.75,1209.98 1775.34,1209.98 1775.92,1209.98 1776.51,1209.98 1777.1,1209.98 1777.68,1209.98 1778.27,1209.98 1778.86,1209.98 1779.44,1209.98 1780.03,1209.98 1780.61,1209.98 1781.2,1209.98 1781.79,1209.98 1782.37,1209.98 1782.96,1209.98 1783.55,1209.98 1784.13,1209.98 1784.72,1209.98 1785.31,1209.98 1785.89,1209.98 1786.48,1209.98 1787.06,1209.98 1787.65,1209.98 1788.24,1209.98 1788.82,1209.98 1789.41,1209.98 1790,1209.98 1790.58,1209.98 1791.17,1209.98 1791.76,1209.98 1792.34,1209.98 1792.93,1209.98 1793.52,1209.98 1794.1,1209.98 1794.69,1209.98 1795.27,1209.98 1795.86,1209.98 1796.45,1209.98 1797.03,1209.98 1797.62,1209.98 1798.21,1209.98 1798.79,1209.98 1799.38,1209.98 1799.97,1209.98 1800.55,1209.98 1801.14,1209.98 1801.73,1209.98 1802.31,1209.98 1802.9,1209.98 1803.48,1209.98 1804.07,1209.98 1804.66,1209.98 1805.24,1209.98 1805.83,1209.98 1806.42,1209.98 1807,1209.98 1807.59,1209.98 1808.18,1209.98 1808.76,1209.98 1809.35,1209.98 1809.94,1209.98 1810.52,1209.98 1811.11,1209.98 1811.69,1209.98 1812.28,1209.98 1812.87,1209.98 1813.45,1209.98 1814.04,1209.98 1814.63,1209.98 1815.21,1209.98 1815.8,1209.98 1816.39,1209.98 1816.97,1209.98 1817.56,1209.98 1818.14,1209.98 1818.73,1209.98 1819.32,1209.98 1819.9,1209.98 1820.49,1209.98 1821.08,1209.98 1821.66,1209.98 1822.25,1209.98 1822.84,1209.98 1823.42,1209.98 1824.01,1209.98 1824.6,1209.98 1825.18,1209.98 1825.77,1209.98 1826.35,1209.98 1826.94,1209.98 1827.53,1209.98 1828.11,1209.98 1828.7,1209.98 1829.29,1209.98 1829.87,1209.98 1830.46,1209.98 1831.05,1209.98 1831.63,1209.98 1832.22,1209.98 1832.81,1209.98 1833.39,1209.98 1833.98,1209.98 1834.56,1209.98 1835.15,1209.98 1835.74,1209.98 1836.32,1209.98 1836.91,1209.98 1837.5,1209.98 1838.08,1209.98 1838.67,1209.98 1839.26,1209.98 1839.84,1209.98 1840.43,1209.98 1841.01,1209.98 1841.6,1209.98 1842.19,1209.98 1842.77,1209.98 1843.36,1209.98 1843.95,1209.98 1844.53,1209.98 1845.12,1209.98 1845.71,1209.98 1846.29,1209.98 1846.88,1209.98 1847.47,1209.98 1848.05,1209.98 1848.64,1209.98 1849.22,1209.98 1849.81,1209.98 1850.4,1209.98 1850.98,1209.98 1851.57,1209.98 1852.16,1209.98 1852.74,1209.98 1853.33,1209.98 1853.92,1209.98 1854.5,1209.98 1855.09,1209.98 1855.68,1209.98 1856.26,1209.98 1856.85,1209.98 1857.43,1209.98 1858.02,1209.98 1858.61,1209.98 1859.19,1209.98 1859.78,1209.98 1860.37,1209.98 1860.95,1209.98 1861.54,1209.98 1862.13,1209.98 1862.71,1209.98 1863.3,1209.98 1863.88,1209.98 1864.47,1209.98 1865.06,1209.98 1865.64,1209.98 1866.23,1209.98 1866.82,1209.98 1867.4,1209.98 1867.99,1209.98 1868.58,1209.98 1869.16,1209.98 1869.75,1209.98 1870.34,1209.98 1870.92,1209.98 1871.51,1209.98 1872.09,1209.98 1872.68,1209.98 1873.27,1209.98 1873.85,1209.98 1874.44,1209.98 1875.03,1209.98 1875.61,1209.98 1876.2,1209.98 1876.79,1209.98 1877.37,1209.98 1877.96,1209.98 1878.55,1209.98 1879.13,1209.98 1879.72,1209.98 1880.3,1209.98 1880.89,1209.98 1881.48,1209.98 1882.06,1209.98 1882.65,1209.98 1883.24,1209.98 1883.82,1209.98 1884.41,1209.98 1885,1209.98 1885.58,1209.98 1886.17,1209.98 1886.76,1209.98 1887.34,1209.98 1887.93,1209.98 1888.51,1209.98 1889.1,1209.98 1889.69,1209.98 1890.27,1209.98 1890.86,1209.98 1891.45,1209.98 1892.03,1209.98 1892.62,1209.98 1893.21,1209.98 1893.79,1209.98 1894.38,1209.98 1894.96,1209.98 1895.55,1209.98 1896.14,1209.98 1896.72,1209.98 1897.31,1209.98 1897.9,1209.98 1898.48,1209.98 1899.07,1209.98 1899.66,1209.98 1900.24,1209.98 1900.83,1209.98 1901.42,1209.98 1902,1209.98 1902.59,1209.98 1903.17,1209.98 1903.76,1209.98 1904.35,1209.98 1904.93,1209.98 1905.52,1209.98 1906.11,1209.98 1906.69,1209.98 1907.28,1209.98 1907.87,1209.98 1908.45,1209.98 1909.04,1209.98 1909.63,1209.98 1910.21,1209.98 1910.8,1209.98 1911.38,1209.98 1911.97,1209.98 1912.56,1209.98 1913.14,1209.98 1913.73,1209.98 1914.32,1209.98 1914.9,1209.98 1915.49,1209.98 1916.08,1209.98 1916.66,1209.98 1917.25,1209.98 1917.83,1209.98 1918.42,1209.98 1919.01,1209.98 1919.59,1209.98 1920.18,1209.98 1920.77,1209.98 1921.35,1209.98 1921.94,1209.98 1922.53,1209.98 1923.11,1209.98 1923.7,1209.98 1924.29,1209.98 1924.87,1209.98 1925.46,1209.98 1926.04,1209.98 1926.63,1209.98 1927.22,1209.98 1927.8,1209.98 1928.39,1209.98 1928.98,1209.98 1929.56,1209.98 1930.15,1209.98 1930.74,1209.98 1931.32,1209.98 1931.91,1209.98 1932.5,1209.98 1933.08,1209.98 1933.67,1209.98 1934.25,1209.98 1934.84,1209.98 1935.43,1209.98 1936.01,1209.98 1936.6,1209.98 1937.19,1209.98 1937.77,1209.98 1938.36,1209.98 1938.95,1209.98 1939.53,1209.98 1940.12,1209.98 1940.71,1209.98 1941.29,1209.98 1941.88,1209.98 1942.46,1209.98 1943.05,1209.98 1943.64,1209.98 1944.22,1209.98 1944.81,1209.98 1945.4,1209.98 1945.98,1209.98 1946.57,1209.98 1947.16,1209.98 1947.74,1209.98 1948.33,1209.98 1948.91,1209.98 1949.5,1209.98 1950.09,1209.98 1950.67,1209.98 1951.26,1209.98 1951.85,1209.98 1952.43,1209.98 1953.02,1209.98 1953.61,1209.98 1954.19,1209.98 1954.78,1209.98 1955.37,1209.98 1955.95,1209.98 1956.54,1209.98 1957.12,1209.98 1957.71,1209.98 1958.3,1209.98 1958.88,1209.98 1959.47,1209.98 1960.06,1209.98 1960.64,1209.98 1961.23,1209.98 1961.82,1209.98 1962.4,1209.98 1962.99,1209.98 1963.58,1209.98 1964.16,1209.98 1964.75,1209.98 1965.33,1209.98 1965.92,1209.98 1966.51,1209.98 1967.09,1209.98 1967.68,1209.98 1968.27,1209.98 1968.85,1209.98 1969.44,1209.98 1970.03,1209.98 1970.61,1209.98 1971.2,1209.98 1971.78,1209.98 1972.37,1209.98 1972.96,1209.98 1973.54,1209.98 1974.13,1209.98 1974.72,1209.98 1975.3,1209.98 1975.89,1209.98 1976.48,1209.98 1977.06,1209.98 1977.65,1209.98 1978.24,1209.98 1978.82,1209.98 1979.41,1209.98 1979.99,1209.98 1980.58,1209.98 1981.17,1209.98 1981.75,1209.98 1982.34,1209.98 1982.93,1209.98 1983.51,1209.98 1984.1,1209.98 1984.69,1209.98 1985.27,1209.98 1985.86,1209.98 1986.45,1209.98 1987.03,1209.98 1987.62,1209.98 1988.2,1209.98 1988.79,1209.98 1989.38,1209.98 1989.96,1209.98 1990.55,1209.98 1991.14,1209.98 1991.72,1209.98 1992.31,1209.98 1992.9,1209.98 1993.48,1209.98 1994.07,1209.98 1994.65,1209.98 1995.24,1209.98 1995.83,1209.98 1996.41,1209.98 1997,1209.98 1997.59,1209.98 1998.17,1209.98 1998.76,1209.98 1999.35,1209.98 1999.93,1209.98 2000.52,1209.98 2001.11,1209.98 2001.69,1209.98 2002.28,1209.98 2002.86,1209.98 2003.45,1209.98 2004.04,1209.98 2004.62,1209.98 2005.21,1209.98 2005.8,1209.98 2006.38,1209.98 2006.97,1209.98 2007.56,1209.98 2008.14,1209.98 2008.73,1209.98 2009.32,1209.98 2009.9,1209.98 2010.49,1209.98 2011.07,1209.98 2011.66,1209.98 2012.25,1209.98 2012.83,1209.98 2013.42,1209.98 2014.01,1209.98 2014.59,1209.98 2015.18,1209.98 2015.77,1209.98 2016.35,1209.98 2016.94,1209.98 2017.53,1209.98 2018.11,1209.98 2018.7,1209.98 2019.28,1209.98 2019.87,1209.98 2020.46,1209.98 2021.04,1209.98 2021.63,1209.98 2022.22,1209.98 2022.8,1209.98 2023.39,1209.98 2023.98,1209.98 2024.56,1209.98 2025.15,1209.98 2025.73,1209.98 2026.32,1209.98 2026.91,1209.98 2027.49,1209.98 2028.08,1209.98 2028.67,1209.98 2029.25,1209.98 2029.84,1209.98 2030.43,1209.98 2031.01,1209.98 2031.6,1209.98 2032.19,1209.98 2032.77,1209.98 2033.36,1209.98 2033.94,1209.98 2034.53,1209.98 2035.12,1209.98 2035.7,1209.98 2036.29,1209.98 2036.88,1209.98 2037.46,1209.98 2038.05,1209.98 2038.64,1209.98 2039.22,1209.98 2039.81,1209.98 2040.4,1209.98 2040.98,1209.98 2041.57,1209.98 2042.15,1209.98 2042.74,1209.98 2043.33,1209.98 2043.91,1209.98 2044.5,1209.98 2045.09,1209.98 2045.67,1209.98 2046.26,1209.98 2046.85,1209.98 2047.43,1209.98 2048.02,1209.98 2048.6,1209.98 2049.19,1209.98 2049.78,1209.98 2050.36,1209.98 2050.95,1209.98 2051.54,1209.98 2052.12,1209.98 2052.71,1209.98 2053.3,1209.98 2053.88,1209.98 2054.47,1209.98 2055.06,1209.98 2055.64,1209.98 2056.23,1209.98 2056.81,1209.98 2057.4,1209.98 2057.99,1209.98 2058.57,1209.98 2059.16,1209.98 2059.75,1209.98 2060.33,1209.98 2060.92,1209.98 2061.51,1209.98 2062.09,1209.98 2062.68,1209.98 2063.27,1209.98 2063.85,1209.98 2064.44,1209.98 2065.02,1209.98 2065.61,1209.98 2066.2,1209.98 2066.78,1209.98 2067.37,1209.98 2067.96,1209.98 2068.54,1209.98 2069.13,1209.98 2069.72,1209.98 2070.3,1209.98 2070.89,1209.98 2071.48,1209.98 2072.06,1209.98 2072.65,1209.98 2073.23,1209.98 2073.82,1209.98 2074.41,1209.98 2074.99,1209.98 2075.58,1209.98 2076.17,1209.98 2076.75,1209.98 2077.34,1209.98 2077.93,1209.98 2078.51,1209.98 2079.1,1209.98 2079.68,1209.98 2080.27,1209.98 2080.86,1209.98 2081.44,1209.98 2082.03,1209.98 2082.62,1209.98 2083.2,1209.98 2083.79,1209.98 2084.38,1209.98 2084.96,1209.98 2085.55,1209.98 2086.14,1209.98 2086.72,1209.98 2087.31,1209.98 2087.89,1209.98 2088.48,1209.98 2089.07,1209.98 2089.65,1209.98 2090.24,1209.98 2090.83,1209.98 2091.41,1209.98 2092,1209.98 2092.59,1209.98 2093.17,1209.98 2093.76,1209.98 2094.35,1209.98 2094.93,1209.98 2095.52,1209.98 2096.1,1209.98 2096.69,1209.98 2097.28,1209.98 2097.86,1209.98 2098.45,1209.98 2099.04,1209.98 2099.62,1209.98 2100.21,1209.98 2100.8,1209.98 2101.38,1209.98 2101.97,1209.98 2102.55,1209.98 2103.14,1209.98 2103.73,1209.98 2104.31,1209.98 2104.9,1209.98 2105.49,1209.98 2106.07,1209.98 2106.66,1209.98 2107.25,1209.98 2107.83,1209.98 2108.42,1209.98 2109.01,1209.98 2109.59,1209.98 2110.18,1209.98 2110.76,1209.98 2111.35,1209.98 2111.94,1209.98 2112.52,1209.98 2113.11,1209.98 2113.7,1209.98 2114.28,1209.98 2114.87,1209.98 2115.46,1209.98 2116.04,1209.98 2116.63,1209.98 2117.22,1209.98 2117.8,1209.98 2118.39,1209.98 2118.97,1209.98 2119.56,1209.98 2120.15,1209.98 2120.73,1209.98 2121.32,1209.98 2121.91,1209.98 2122.49,1209.98 2123.08,1209.98 2123.67,1209.98 2124.25,1209.98 2124.84,1209.98 2125.42,1209.98 2126.01,1209.98 2126.6,1209.98 2127.18,1209.98 2127.77,1209.98 2128.36,1209.98 2128.94,1209.98 2129.53,1209.98 2130.12,1209.98 2130.7,1209.98 2131.29,1209.98 2131.88,1209.98 2132.46,1209.98 2133.05,1209.98 2133.63,1209.98 2134.22,1209.98 2134.81,1209.98 2135.39,1209.98 2135.98,1209.98 2136.57,1209.98 2137.15,1209.98 2137.74,1209.98 2138.33,1209.98 2138.91,1209.98 2139.5,1209.98 2140.09,1209.98 2140.67,1209.98 2141.26,1209.98 2141.84,1209.98 2142.43,1209.98 2143.02,1209.98 2143.6,1209.98 2144.19,1209.98 2144.78,1209.98 2145.36,1209.98 2145.95,1209.98 2146.54,1209.98 2147.12,1209.98 2147.71,1209.98 2148.3,1209.98 2148.88,1209.98 2149.47,1209.98 2150.05,1209.98 2150.64,1209.98 2151.23,1209.98 2151.81,1209.98 2152.4,1209.98 2152.99,1209.98 2153.57,1209.98 2154.16,1209.98 2154.75,1209.98 2155.33,1209.98 2155.92,1209.98 2156.5,1209.98 2157.09,1209.98 2157.68,1209.98 2158.26,1209.98 \"/>\n<path clip-path=\"url(#clip312)\" d=\"M986.025 1209.92 L986.612 1209.92 L987.198 1209.92 L987.785 1209.92 L988.371 1209.92 L988.957 1209.92 L989.544 1209.92 L990.13 1209.92 L990.717 1209.92 L991.303 1209.92 L991.889 1209.92 L992.476 1209.92 L993.062 1209.92 L993.649 1209.92 L994.235 1209.92 L994.822 1209.92 L995.408 1209.92 L995.994 1209.92 L996.581 1209.92 L997.167 1209.92 L997.754 1209.92 L998.34 1209.92 L998.926 1209.92 L999.513 1209.92 L1000.1 1209.92 L1000.69 1209.92 L1001.27 1209.92 L1001.86 1209.92 L1002.44 1209.92 L1003.03 1209.92 L1003.62 1209.92 L1004.2 1209.92 L1004.79 1209.92 L1005.38 1209.92 L1005.96 1209.92 L1006.55 1209.92 L1007.14 1209.92 L1007.72 1209.92 L1008.31 1209.92 L1008.9 1209.92 L1009.48 1209.92 L1010.07 1209.92 L1010.65 1209.92 L1011.24 1209.92 L1011.83 1209.92 L1012.41 1209.92 L1013 1209.92 L1013.59 1209.92 L1014.17 1209.92 L1014.76 1209.92 L1015.35 1209.92 L1015.93 1209.92 L1016.52 1209.92 L1017.11 1209.92 L1017.69 1209.92 L1018.28 1209.92 L1018.86 1209.92 L1019.45 1209.92 L1020.04 1209.92 L1020.62 1209.92 L1021.21 1209.92 L1021.8 1209.92 L1022.38 1209.92 L1022.97 1209.92 L1023.56 1209.92 L1024.14 1209.92 L1024.73 1209.92 L1025.32 1209.92 L1025.9 1209.92 L1026.49 1209.92 L1027.07 1209.92 L1027.66 1209.92 L1028.25 1209.92 L1028.83 1209.92 L1029.42 1209.92 L1030.01 1209.92 L1030.59 1209.92 L1031.18 1209.92 L1031.77 1209.92 L1032.35 1209.92 L1032.94 1209.92 L1033.52 1209.92 L1034.11 1209.92 L1034.7 1209.92 L1035.28 1209.92 L1035.87 1209.92 L1036.46 1209.92 L1037.04 1209.92 L1037.63 1209.92 L1038.22 1209.92 L1038.8 1209.92 L1039.39 1209.92 L1039.98 1209.92 L1040.56 1209.92 L1041.15 1209.92 L1041.73 1209.92 L1042.32 1209.92 L1042.91 1209.92 L1043.49 1209.92 L1044.08 1209.92 L1044.67 1209.92 L1045.25 1209.92 L1045.84 1209.92 L1046.43 1209.92 L1047.01 1209.92 L1047.6 1209.92 L1048.19 1209.92 L1048.77 1209.92 L1049.36 1209.92 L1049.94 1209.92 L1050.53 1209.92 L1051.12 1209.92 L1051.7 1209.92 L1052.29 1209.92 L1052.88 1209.92 L1053.46 1209.92 L1054.05 1209.92 L1054.64 1209.92 L1055.22 1209.92 L1055.81 1209.92 L1056.39 1209.92 L1056.98 1209.92 L1057.57 1209.92 L1058.15 1209.92 L1058.74 1209.92 L1059.33 1209.92 L1059.91 1209.92 L1060.5 1209.92 L1061.09 1209.92 L1061.67 1209.92 L1062.26 1209.92 L1062.85 1209.92 L1063.43 1209.92 L1064.02 1209.92 L1064.6 1209.92 L1065.19 1209.92 L1065.78 1209.92 L1066.36 1209.92 L1066.95 1209.92 L1067.54 1209.92 L1068.12 1209.92 L1068.71 1209.92 L1069.3 1209.92 L1069.88 1209.92 L1070.47 1209.92 L1071.06 1209.92 L1071.64 1209.92 L1072.23 1209.92 L1072.81 1209.92 L1073.4 1209.92 L1073.99 1209.92 L1074.57 1209.92 L1075.16 1209.92 L1075.75 1209.92 L1076.33 1209.92 L1076.92 1209.92 L1077.51 1209.92 L1078.09 1209.92 L1078.68 1209.92 L1079.26 1209.92 L1079.85 1209.92 L1080.44 1209.92 L1081.02 1209.92 L1081.61 1209.92 L1082.2 1209.92 L1082.78 1209.92 L1083.37 1209.92 L1083.96 1209.92 L1084.54 1209.92 L1085.13 1209.92 L1085.72 1209.92 L1086.3 1209.92 L1086.89 1209.92 L1087.47 1209.92 L1088.06 1209.92 L1088.65 1209.92 L1089.23 1209.92 L1089.82 1209.92 L1090.41 1209.92 L1090.99 1209.92 L1091.58 1209.92 L1092.17 1209.92 L1092.75 1209.92 L1093.34 1209.92 L1093.93 1209.92 L1094.51 1209.92 L1095.1 1209.92 L1095.68 1209.92 L1096.27 1209.92 L1096.86 1209.92 L1097.44 1209.92 L1098.03 1209.92 L1098.62 1209.92 L1099.2 1209.92 L1099.79 1209.92 L1100.38 1209.92 L1100.96 1209.92 L1101.55 1209.92 L1102.14 1209.92 L1102.72 1209.92 L1103.31 1209.92 L1103.89 1209.92 L1104.48 1209.92 L1105.07 1209.92 L1105.65 1209.92 L1106.24 1209.92 L1106.83 1209.92 L1107.41 1209.92 L1108 1209.92 L1108.59 1209.92 L1109.17 1209.92 L1109.76 1209.92 L1110.34 1209.92 L1110.93 1209.92 L1111.52 1209.92 L1112.1 1209.92 L1112.69 1209.92 L1113.28 1209.92 L1113.86 1209.92 L1114.45 1209.92 L1115.04 1209.92 L1115.62 1209.92 L1116.21 1209.92 L1116.8 1209.92 L1117.38 1209.92 L1117.97 1209.92 L1118.55 1209.92 L1119.14 1209.92 L1119.73 1209.92 L1120.31 1209.92 L1120.9 1209.92 L1121.49 1209.92 L1122.07 1209.92 L1122.66 1209.92 L1123.25 1209.92 L1123.83 1209.92 L1124.42 1209.92 L1125.01 1209.92 L1125.59 1209.92 L1126.18 1209.92 L1126.76 1209.92 L1127.35 1209.92 L1127.94 1209.92 L1128.52 1209.92 L1129.11 1209.92 L1129.7 1209.92 L1130.28 1209.92 L1130.87 1209.92 L1131.46 1209.92 L1132.04 1209.92 L1132.63 1209.92 L1133.21 1209.92 L1133.8 1209.92 L1134.39 1209.92 L1134.97 1209.92 L1135.56 1209.92 L1136.15 1209.92 L1136.73 1209.92 L1137.32 1209.92 L1137.91 1209.92 L1138.49 1209.92 L1139.08 1209.92 L1139.67 1209.92 L1140.25 1209.92 L1140.84 1209.92 L1141.42 1209.92 L1142.01 1209.92 L1142.6 1209.92 L1143.18 1209.92 L1143.77 1209.92 L1144.36 1209.92 L1144.94 1209.92 L1145.53 1209.92 L1146.12 1209.92 L1146.7 1209.92 L1147.29 1209.92 L1147.88 1209.92 L1148.46 1209.92 L1149.05 1209.92 L1149.63 1209.92 L1150.22 1209.92 L1150.81 1209.92 L1151.39 1209.92 L1151.98 1209.92 L1152.57 1209.92 L1153.15 1209.92 L1153.74 1209.92 L1154.33 1209.92 L1154.91 1209.92 L1155.5 1209.92 L1156.09 1209.92 L1156.67 1209.92 L1157.26 1209.92 L1157.84 1209.92 L1158.43 1209.92 L1159.02 1209.92 L1159.6 1209.92 L1160.19 1209.92 L1160.78 1209.92 L1161.36 1209.92 L1161.95 1209.92 L1162.54 1209.92 L1163.12 1209.92 L1163.71 1209.92 L1164.29 1209.92 L1164.88 1209.92 L1165.47 1209.92 L1166.05 1209.92 L1166.64 1209.92 L1167.23 1209.92 L1167.81 1209.92 L1168.4 1209.92 L1168.99 1209.92 L1169.57 1209.92 L1170.16 1209.92 L1170.75 1209.92 L1171.33 1209.92 L1171.92 1209.92 L1172.5 1209.92 L1173.09 1209.92 L1173.68 1209.92 L1174.26 1209.92 L1174.85 1209.92 L1175.44 1209.92 L1176.02 1209.92 L1176.61 1209.92 L1177.2 1209.92 L1177.78 1209.92 L1178.37 1209.92 L1178.96 1209.92 L1179.54 1209.92 L1180.13 1209.92 L1180.71 1209.92 L1181.3 1209.92 L1181.89 1209.92 L1182.47 1209.92 L1183.06 1209.92 L1183.65 1209.92 L1184.23 1209.92 L1184.82 1209.92 L1185.41 1209.92 L1185.99 1209.92 L1186.58 1209.92 L1187.16 1209.92 L1187.75 1209.92 L1188.34 1209.92 L1188.92 1209.92 L1189.51 1209.92 L1190.1 1209.92 L1190.68 1209.92 L1191.27 1209.92 L1191.86 1209.92 L1192.44 1209.92 L1193.03 1209.92 L1193.62 1209.92 L1194.2 1209.92 L1194.79 1209.92 L1195.37 1209.92 L1195.96 1209.92 L1196.55 1209.92 L1197.13 1209.92 L1197.72 1209.92 L1198.31 1209.92 L1198.89 1209.92 L1199.48 1209.92 L1200.07 1209.92 L1200.65 1209.92 L1201.24 1209.92 L1201.83 1209.92 L1202.41 1209.92 L1203 1209.92 L1203.58 1209.92 L1204.17 1209.92 L1204.76 1209.92 L1205.34 1209.92 L1205.93 1209.92 L1206.52 1209.92 L1207.1 1209.92 L1207.69 1209.92 L1208.28 1209.92 L1208.86 1209.92 L1209.45 1209.92 L1210.03 1209.92 L1210.62 1209.92 L1211.21 1209.92 L1211.79 1209.92 L1212.38 1209.92 L1212.97 1209.92 L1213.55 1209.92 L1214.14 1209.92 L1214.73 1209.92 L1215.31 1209.92 L1215.9 1209.92 L1216.49 1209.92 L1217.07 1209.92 L1217.66 1209.92 L1218.24 1209.92 L1218.83 1209.92 L1219.42 1209.92 L1220 1209.92 L1220.59 1209.92 L1221.18 1209.92 L1221.76 1209.92 L1222.35 1209.92 L1222.94 1209.92 L1223.52 1209.92 L1224.11 1209.92 L1224.7 1209.92 L1225.28 1209.92 L1225.87 1209.92 L1226.45 1209.92 L1227.04 1209.92 L1227.63 1209.92 L1228.21 1209.92 L1228.8 1209.92 L1229.39 1209.92 L1229.97 1209.92 L1230.56 1209.92 L1231.15 1209.92 L1231.73 1209.92 L1232.32 1209.92 L1232.91 1209.92 L1233.49 1209.92 L1234.08 1209.92 L1234.66 1209.92 L1235.25 1209.92 L1235.84 1209.92 L1236.42 1209.92 L1237.01 1209.92 L1237.6 1209.92 L1238.18 1209.92 L1238.77 1209.92 L1239.36 1209.92 L1239.94 1209.92 L1240.53 1209.92 L1241.11 1209.92 L1241.7 1209.92 L1242.29 1209.92 L1242.87 1209.92 L1243.46 1209.92 L1244.05 1209.92 L1244.63 1209.92 L1245.22 1209.92 L1245.81 1209.92 L1246.39 1209.92 L1246.98 1209.92 L1247.57 1209.92 L1248.15 1209.92 L1248.74 1209.92 L1249.32 1209.92 L1249.91 1209.92 L1250.5 1209.92 L1251.08 1209.92 L1251.67 1209.92 L1252.26 1209.92 L1252.84 1209.92 L1253.43 1209.92 L1254.02 1209.92 L1254.6 1209.92 L1255.19 1209.92 L1255.78 1209.92 L1256.36 1209.92 L1256.95 1209.92 L1257.53 1209.92 L1258.12 1209.92 L1258.71 1209.92 L1259.29 1209.92 L1259.88 1209.92 L1260.47 1209.92 L1261.05 1209.92 L1261.64 1209.92 L1262.23 1209.92 L1262.81 1209.92 L1263.4 1209.92 L1263.98 1209.92 L1264.57 1209.92 L1265.16 1209.92 L1265.74 1209.92 L1266.33 1209.92 L1266.92 1209.92 L1267.5 1209.92 L1268.09 1209.92 L1268.68 1209.92 L1269.26 1209.92 L1269.85 1209.92 L1270.44 1209.92 L1271.02 1209.92 L1271.61 1209.92 L1272.19 1209.92 L1272.78 1209.92 L1273.37 1209.92 L1273.95 1209.92 L1274.54 1209.92 L1275.13 1209.92 L1275.71 1209.92 L1276.3 1209.92 L1276.89 1209.92 L1277.47 1209.92 L1278.06 1209.92 L1278.65 1209.92 L1279.23 1209.92 L1279.82 1209.92 L1280.4 1209.92 L1280.99 1209.92 L1281.58 1209.92 L1282.16 1209.92 L1282.75 1209.92 L1283.34 1209.92 L1283.92 1209.92 L1284.51 1209.92 L1285.1 1209.92 L1285.68 1209.92 L1286.27 1209.92 L1286.86 1209.92 L1287.44 1209.92 L1288.03 1209.92 L1288.61 1209.92 L1289.2 1209.92 L1289.79 1209.92 L1290.37 1209.92 L1290.96 1209.92 L1291.55 1209.92 L1292.13 1209.92 L1292.72 1209.92 L1293.31 1209.92 L1293.89 1209.92 L1294.48 1209.92 L1295.06 1209.92 L1295.65 1209.92 L1296.24 1209.92 L1296.82 1209.92 L1297.41 1209.92 L1298 1209.92 L1298.58 1209.92 L1299.17 1209.92 L1299.76 1209.92 L1300.34 1209.92 L1300.93 1209.92 L1301.52 1209.92 L1302.1 1209.92 L1302.69 1209.92 L1303.27 1209.92 L1303.86 1209.92 L1304.45 1209.92 L1305.03 1209.92 L1305.62 1209.92 L1306.21 1209.92 L1306.79 1209.92 L1307.38 1209.92 L1307.97 1209.92 L1308.55 1209.92 L1309.14 1209.92 L1309.73 1209.92 L1310.31 1209.92 L1310.9 1209.92 L1311.48 1209.92 L1312.07 1209.92 L1312.66 1209.92 L1313.24 1209.92 L1313.83 1209.92 L1314.42 1209.92 L1315 1209.92 L1315.59 1209.92 L1316.18 1209.92 L1316.76 1209.92 L1317.35 1209.92 L1317.93 1209.92 L1318.52 1209.92 L1319.11 1209.92 L1319.69 1209.92 L1320.28 1209.92 L1320.87 1209.92 L1321.45 1209.92 L1322.04 1209.92 L1322.63 1209.92 L1323.21 1209.92 L1323.8 1209.92 L1324.39 1209.92 L1324.97 1209.92 L1325.56 1209.92 L1326.14 1209.92 L1326.73 1209.92 L1327.32 1209.92 L1327.9 1209.92 L1328.49 1209.92 L1329.08 1209.92 L1329.66 1209.92 L1330.25 1209.92 L1330.84 1209.92 L1331.42 1209.92 L1332.01 1209.92 L1332.6 1209.92 L1333.18 1209.92 L1333.77 1209.92 L1334.35 1209.92 L1334.94 1209.92 L1335.53 1209.92 L1336.11 1209.92 L1336.7 1209.92 L1337.29 1209.92 L1337.87 1209.92 L1338.46 1209.92 L1339.05 1209.92 L1339.63 1209.92 L1340.22 1209.92 L1340.8 1209.92 L1341.39 1209.92 L1341.98 1209.92 L1342.56 1209.92 L1343.15 1209.92 L1343.74 1209.92 L1344.32 1209.92 L1344.91 1209.92 L1345.5 1209.92 L1346.08 1209.92 L1346.67 1209.92 L1347.26 1209.92 L1347.84 1209.92 L1348.43 1209.92 L1349.01 1209.92 L1349.6 1209.92 L1350.19 1209.92 L1350.77 1209.92 L1351.36 1209.92 L1351.95 1209.92 L1352.53 1209.92 L1353.12 1209.92 L1353.71 1209.92 L1354.29 1209.92 L1354.88 1209.92 L1355.47 1209.92 L1356.05 1209.92 L1356.64 1209.92 L1357.22 1209.92 L1357.81 1209.92 L1358.4 1209.92 L1358.98 1209.92 L1359.57 1209.92 L1360.16 1209.92 L1360.74 1209.92 L1361.33 1209.92 L1361.92 1209.92 L1362.5 1209.92 L1363.09 1209.92 L1363.68 1209.92 L1364.26 1209.92 L1364.85 1209.92 L1365.43 1209.92 L1366.02 1209.92 L1366.61 1209.92 L1367.19 1209.92 L1367.78 1209.92 L1368.37 1209.92 L1368.95 1209.92 L1369.54 1209.92 L1370.13 1209.92 L1370.71 1209.92 L1371.3 1209.92 L1371.88 1209.92 L1372.47 1209.92 L1373.06 1209.92 L1373.64 1209.92 L1374.23 1209.92 L1374.82 1209.92 L1375.4 1209.92 L1375.99 1209.92 L1376.58 1209.92 L1377.16 1209.92 L1377.75 1209.92 L1378.34 1209.92 L1378.92 1209.92 L1379.51 1209.92 L1380.09 1209.92 L1380.68 1209.92 L1381.27 1209.92 L1381.85 1209.92 L1382.44 1209.92 L1383.03 1209.92 L1383.61 1209.92 L1384.2 1209.92 L1384.79 1209.92 L1385.37 1209.92 L1385.96 1209.92 L1386.55 1209.92 L1387.13 1209.92 L1387.72 1209.92 L1388.3 1209.92 L1388.89 1209.92 L1389.48 1209.92 L1390.06 1209.92 L1390.65 1209.92 L1391.24 1209.92 L1391.82 1209.92 L1392.41 1209.92 L1393 1209.92 L1393.58 1209.92 L1394.17 1209.92 L1394.75 1209.92 L1395.34 1209.92 L1395.93 1209.92 L1396.51 1209.92 L1397.1 1209.92 L1397.69 1209.92 L1398.27 1209.92 L1398.86 1209.92 L1399.45 1209.92 L1400.03 1209.92 L1400.62 1209.92 L1401.21 1209.92 L1401.79 1209.92 L1402.38 1209.92 L1402.96 1209.92 L1403.55 1209.92 L1404.14 1209.92 L1404.72 1209.92 L1405.31 1209.92 L1405.9 1209.92 L1406.48 1209.92 L1407.07 1209.92 L1407.66 1209.92 L1408.24 1209.92 L1408.83 1209.92 L1409.42 1209.92 L1410 1209.92 L1410.59 1209.92 L1411.17 1209.92 L1411.76 1209.92 L1412.35 1209.92 L1412.93 1209.92 L1413.52 1209.92 L1414.11 1209.92 L1414.69 1209.92 L1415.28 1209.92 L1415.87 1209.92 L1416.45 1209.92 L1417.04 1209.92 L1417.63 1209.92 L1418.21 1209.92 L1418.8 1209.92 L1419.38 1209.92 L1419.97 1209.92 L1420.56 1209.92 L1421.14 1209.92 L1421.73 1209.92 L1422.32 1209.92 L1422.9 1209.92 L1423.49 1209.92 L1424.08 1209.92 L1424.66 1209.92 L1425.25 1209.92 L1425.83 1209.92 L1426.42 1209.92 L1427.01 1209.92 L1427.59 1209.92 L1428.18 1209.92 L1428.77 1209.92 L1429.35 1209.92 L1429.94 1209.92 L1430.53 1209.92 L1431.11 1209.92 L1431.7 1209.92 L1432.29 1209.92 L1432.87 1209.92 L1433.46 1209.92 L1434.04 1209.92 L1434.63 1209.92 L1435.22 1209.92 L1435.8 1209.92 L1436.39 1209.92 L1436.98 1209.92 L1437.56 1209.92 L1438.15 1209.92 L1438.74 1209.92 L1439.32 1209.92 L1439.91 1209.92 L1440.5 1209.92 L1441.08 1209.92 L1441.67 1209.92 L1442.25 1209.92 L1442.84 1209.92 L1443.43 1209.92 L1444.01 1209.92 L1444.6 1209.92 L1445.19 1209.92 L1445.77 1209.92 L1446.36 1209.92 L1446.95 1209.92 L1447.53 1209.92 L1448.12 1209.92 L1448.7 1209.92 L1449.29 1209.92 L1449.88 1209.92 L1450.46 1209.92 L1451.05 1209.92 L1451.64 1209.92 L1452.22 1209.92 L1452.81 1209.92 L1453.4 1209.92 L1453.98 1209.92 L1454.57 1209.92 L1455.16 1209.92 L1455.74 1209.92 L1456.33 1209.92 L1456.91 1209.92 L1457.5 1209.92 L1458.09 1209.92 L1458.67 1209.92 L1459.26 1209.92 L1459.85 1209.92 L1460.43 1209.92 L1461.02 1209.92 L1461.61 1209.92 L1462.19 1209.92 L1462.78 1209.92 L1463.37 1209.92 L1463.95 1209.92 L1464.54 1209.92 L1465.12 1209.92 L1465.71 1209.92 L1466.3 1209.92 L1466.88 1209.92 L1467.47 1209.92 L1468.06 1209.92 L1468.64 1209.92 L1469.23 1209.92 L1469.82 1209.92 L1470.4 1209.92 L1470.99 1209.92 L1471.57 1209.92 L1472.16 1209.92 L1472.75 1209.92 L1473.33 1209.92 L1473.92 1209.92 L1474.51 1209.92 L1475.09 1209.92 L1475.68 1209.92 L1476.27 1209.92 L1476.85 1209.92 L1477.44 1209.92 L1478.03 1209.92 L1478.61 1209.92 L1479.2 1209.92 L1479.78 1209.92 L1480.37 1209.92 L1480.96 1209.92 L1481.54 1209.92 L1482.13 1209.92 L1482.72 1209.92 L1483.3 1209.92 L1483.89 1209.92 L1484.48 1209.92 L1485.06 1209.92 L1485.65 1209.92 L1486.24 1209.92 L1486.82 1209.92 L1487.41 1209.92 L1487.99 1209.92 L1488.58 1209.92 L1489.17 1209.92 L1489.75 1209.92 L1490.34 1209.92 L1490.93 1209.92 L1491.51 1209.92 L1492.1 1209.92 L1492.69 1209.92 L1493.27 1209.92 L1493.86 1209.92 L1494.45 1209.92 L1495.03 1209.92 L1495.62 1209.92 L1496.2 1209.92 L1496.79 1209.92 L1497.38 1209.92 L1497.96 1209.92 L1498.55 1209.92 L1499.14 1209.92 L1499.72 1209.92 L1500.31 1209.92 L1500.9 1209.92 L1501.48 1209.92 L1502.07 1209.92 L1502.65 1209.92 L1503.24 1209.92 L1503.83 1209.92 L1504.41 1209.92 L1505 1209.92 L1505.59 1209.92 L1506.17 1209.92 L1506.76 1209.92 L1507.35 1209.92 L1507.93 1209.92 L1508.52 1209.92 L1509.11 1209.92 L1509.69 1209.92 L1510.28 1209.92 L1510.86 1209.92 L1511.45 1209.92 L1512.04 1209.92 L1512.62 1209.92 L1513.21 1209.92 L1513.8 1209.92 L1514.38 1209.92 L1514.97 1209.92 L1515.56 1209.92 L1516.14 1209.92 L1516.73 1209.92 L1517.32 1209.92 L1517.9 1209.92 L1518.49 1209.92 L1519.07 1209.92 L1519.66 1209.92 L1520.25 1209.92 L1520.83 1209.92 L1521.42 1209.92 L1522.01 1209.92 L1522.59 1209.92 L1523.18 1209.92 L1523.77 1209.92 L1524.35 1209.92 L1524.94 1209.92 L1525.52 1209.92 L1526.11 1209.92 L1526.7 1209.92 L1527.28 1209.92 L1527.87 1209.92 L1528.46 1209.92 L1529.04 1209.92 L1529.63 1209.92 L1530.22 1209.92 L1530.8 1209.92 L1531.39 1209.92 L1531.98 1209.92 L1532.56 1209.92 L1533.15 1209.92 L1533.73 1209.92 L1534.32 1209.92 L1534.91 1209.92 L1535.49 1209.92 L1536.08 1209.92 L1536.67 1209.92 L1537.25 1209.92 L1537.84 1209.92 L1538.43 1209.92 L1539.01 1209.92 L1539.6 1209.92 L1540.19 1209.92 L1540.77 1209.92 L1541.36 1209.92 L1541.94 1209.92 L1542.53 1209.92 L1543.12 1209.92 L1543.7 1209.92 L1544.29 1209.92 L1544.88 1209.92 L1545.46 1209.92 L1546.05 1209.92 L1546.64 1209.92 L1547.22 1209.92 L1547.81 1209.92 L1548.4 1209.92 L1548.98 1209.92 L1549.57 1209.92 L1550.15 1209.92 L1550.74 1209.92 L1551.33 1209.92 L1551.91 1209.92 L1552.5 1209.92 L1553.09 1209.92 L1553.67 1209.92 L1554.26 1209.92 L1554.85 1209.92 L1555.43 1209.92 L1556.02 1209.92 L1556.6 1209.92 L1557.19 1209.92 L1557.78 1209.92 L1558.36 1209.92 L1558.95 1209.92 L1559.54 1209.92 L1560.12 1209.92 L1560.71 1209.92 L1561.3 1209.92 L1561.88 1209.92 L1562.47 1209.92 L1563.06 1209.92 L1563.64 1209.92 L1564.23 1209.92 L1564.81 1209.92 L1565.4 1209.92 L1565.99 1209.92 L1566.57 1209.92 L1567.16 1209.92 L1567.75 1209.92 L1568.33 1209.92 L1568.92 1209.92 L1569.51 1209.92 L1570.09 1209.92 L1570.68 1209.92 L1571.27 1209.92 L1571.85 1209.92 L1572.44 1209.92 L1573.02 1209.92 L1573.61 1209.92 L1574.2 1209.92 L1574.78 1209.92 L1575.37 1209.92 L1575.96 1209.92 L1576.54 1209.92 L1577.13 1209.92 L1577.72 1209.92 L1578.3 1209.92 L1578.89 1209.92 L1579.47 1209.92 L1580.06 1209.92 L1580.65 1209.92 L1581.23 1209.92 L1581.82 1209.92 L1582.41 1209.92 L1582.99 1209.92 L1583.58 1209.92 L1584.17 1209.92 L1584.75 1209.92 L1585.34 1209.92 L1585.93 1209.92 L1586.51 1209.92 L1587.1 1209.92 L1587.68 1209.92 L1588.27 1209.92 L1588.86 1209.92 L1589.44 1209.92 L1590.03 1209.92 L1590.62 1209.92 L1591.2 1209.92 L1591.79 1209.92 L1592.38 1209.92 L1592.96 1209.92 L1593.55 1209.92 L1594.14 1209.92 L1594.72 1209.92 L1595.31 1209.92 L1595.89 1209.92 L1596.48 1209.92 L1597.07 1209.92 L1597.65 1209.92 L1598.24 1209.92 L1598.83 1209.92 L1599.41 1209.92 L1600 1209.92 L1600.59 1209.92 L1601.17 1209.92 L1601.76 1209.92 L1602.34 1209.92 L1602.93 1209.92 L1603.52 1209.92 L1604.1 1209.92 L1604.69 1209.92 L1605.28 1209.92 L1605.86 1209.92 L1606.45 1209.92 L1607.04 1209.92 L1607.62 1209.92 L1608.21 1209.92 L1608.8 1209.92 L1609.38 1209.92 L1609.97 1209.92 L1610.55 1209.92 L1611.14 1209.92 L1611.73 1209.92 L1612.31 1209.92 L1612.9 1209.92 L1613.49 1209.92 L1614.07 1209.92 L1614.66 1209.92 L1615.25 1209.92 L1615.83 1209.92 L1616.42 1209.92 L1617.01 1209.92 L1617.59 1209.92 L1618.18 1209.92 L1618.76 1209.92 L1619.35 1209.92 L1619.94 1209.92 L1620.52 1209.92 L1621.11 1209.92 L1621.7 1209.92 L1622.28 1209.92 L1622.87 1209.92 L1623.46 1209.92 L1624.04 1209.92 L1624.63 1209.92 L1625.22 1209.92 L1625.8 1209.92 L1626.39 1209.92 L1626.97 1209.92 L1627.56 1209.92 L1628.15 1209.92 L1628.73 1209.92 L1629.32 1209.92 L1629.91 1209.92 L1630.49 1209.92 L1631.08 1209.92 L1631.67 1209.92 L1632.25 1209.92 L1632.84 1209.92 L1633.42 1209.92 L1634.01 1209.92 L1634.6 1209.92 L1635.18 1209.92 L1635.77 1209.92 L1636.36 1209.92 L1636.94 1209.92 L1637.53 1209.92 L1638.12 1209.92 L1638.7 1209.92 L1639.29 1209.92 L1639.88 1209.92 L1640.46 1209.92 L1641.05 1209.92 L1641.63 1209.92 L1642.22 1209.92 L1642.81 1209.92 L1643.39 1209.92 L1643.98 1209.92 L1644.57 1209.92 L1645.15 1209.92 L1645.74 1209.92 L1646.33 1209.92 L1646.91 1209.92 L1647.5 1209.92 L1648.09 1209.92 L1648.67 1209.92 L1649.26 1209.92 L1649.84 1209.92 L1650.43 1209.92 L1651.02 1209.92 L1651.6 1209.92 L1652.19 1209.92 L1652.78 1209.92 L1653.36 1209.92 L1653.95 1209.92 L1654.54 1209.92 L1655.12 1209.92 L1655.71 1209.92 L1656.29 1209.92 L1656.88 1209.92 L1657.47 1209.92 L1658.05 1209.92 L1658.64 1209.92 L1659.23 1209.92 L1659.81 1209.92 L1660.4 1209.92 L1660.99 1209.92 L1661.57 1209.92 L1662.16 1209.92 L1662.75 1209.92 L1663.33 1209.92 L1663.92 1209.92 L1664.5 1209.92 L1665.09 1209.92 L1665.68 1209.92 L1666.26 1209.92 L1666.85 1209.92 L1667.44 1209.92 L1668.02 1209.92 L1668.61 1209.92 L1669.2 1209.92 L1669.78 1209.92 L1670.37 1209.92 L1670.96 1209.92 L1671.54 1209.92 L1672.13 1209.92 L1672.71 1209.92 L1673.3 1209.92 L1673.89 1209.92 L1674.47 1209.92 L1675.06 1209.92 L1675.65 1209.92 L1676.23 1209.92 L1676.82 1209.92 L1677.41 1209.92 L1677.99 1209.92 L1678.58 1209.92 L1679.17 1209.92 L1679.75 1209.92 L1680.34 1209.92 L1680.92 1209.92 L1681.51 1209.92 L1682.1 1209.92 L1682.68 1209.92 L1683.27 1209.92 L1683.86 1209.92 L1684.44 1209.92 L1685.03 1209.92 L1685.62 1209.92 L1686.2 1209.92 L1686.79 1209.92 L1687.37 1209.92 L1687.96 1209.92 L1688.55 1209.92 L1689.13 1209.92 L1689.72 1209.92 L1690.31 1209.92 L1690.89 1209.92 L1691.48 1209.92 L1692.07 1209.92 L1692.65 1209.92 L1693.24 1209.92 L1693.83 1209.92 L1694.41 1209.92 L1695 1209.92 L1695.58 1209.92 L1696.17 1209.92 L1696.76 1209.92 L1697.34 1209.92 L1697.93 1209.92 L1698.52 1209.92 L1699.1 1209.92 L1699.69 1209.92 L1700.28 1209.92 L1700.86 1209.92 L1701.45 1209.92 L1702.04 1209.92 L1702.62 1209.92 L1703.21 1209.92 L1703.79 1209.92 L1704.38 1209.92 L1704.97 1209.92 L1705.55 1209.92 L1706.14 1209.92 L1706.73 1209.92 L1707.31 1209.92 L1707.9 1209.92 L1708.49 1209.92 L1709.07 1209.92 L1709.66 1209.92 L1710.24 1209.92 L1710.83 1209.92 L1711.42 1209.92 L1712 1209.92 L1712.59 1209.92 L1713.18 1209.92 L1713.76 1209.92 L1714.35 1209.92 L1714.94 1209.92 L1715.52 1209.92 L1716.11 1209.92 L1716.7 1209.92 L1717.28 1209.92 L1717.87 1209.92 L1718.45 1209.92 L1719.04 1209.92 L1719.63 1209.92 L1720.21 1209.92 L1720.8 1209.92 L1721.39 1209.92 L1721.97 1209.92 L1722.56 1209.92 L1723.15 1209.92 L1723.73 1209.92 L1724.32 1209.92 L1724.91 1209.92 L1725.49 1209.92 L1726.08 1209.92 L1726.66 1209.92 L1727.25 1209.92 L1727.84 1209.92 L1728.42 1209.92 L1729.01 1209.92 L1729.6 1209.92 L1730.18 1209.92 L1730.77 1209.92 L1731.36 1209.92 L1731.94 1209.92 L1732.53 1209.92 L1733.11 1209.92 L1733.7 1209.92 L1734.29 1209.92 L1734.87 1209.92 L1735.46 1209.92 L1736.05 1209.92 L1736.63 1209.92 L1737.22 1209.92 L1737.81 1209.92 L1738.39 1209.92 L1738.98 1209.92 L1739.57 1209.92 L1740.15 1209.92 L1740.74 1209.92 L1741.32 1209.92 L1741.91 1209.92 L1742.5 1209.92 L1743.08 1209.92 L1743.67 1209.92 L1744.26 1209.92 L1744.84 1209.92 L1745.43 1209.92 L1746.02 1209.92 L1746.6 1209.92 L1747.19 1209.92 L1747.78 1209.92 L1748.36 1209.92 L1748.95 1209.92 L1749.53 1209.92 L1750.12 1209.92 L1750.71 1209.92 L1751.29 1209.92 L1751.88 1209.92 L1752.47 1209.92 L1753.05 1209.92 L1753.64 1209.92 L1754.23 1209.92 L1754.81 1209.92 L1755.4 1209.92 L1755.99 1209.92 L1756.57 1209.92 L1757.16 1209.92 L1757.74 1209.92 L1758.33 1209.92 L1758.92 1209.92 L1759.5 1209.92 L1760.09 1209.92 L1760.68 1209.92 L1761.26 1209.92 L1761.85 1209.92 L1762.44 1209.92 L1763.02 1209.92 L1763.61 1209.92 L1764.19 1209.92 L1764.78 1209.92 L1765.37 1209.92 L1765.95 1209.92 L1766.54 1209.92 L1767.13 1209.92 L1767.71 1209.92 L1768.3 1209.92 L1768.89 1209.92 L1769.47 1209.92 L1770.06 1209.92 L1770.65 1209.92 L1771.23 1209.92 L1771.82 1209.92 L1772.4 1209.92 L1772.99 1209.92 L1773.58 1209.92 L1774.16 1209.92 L1774.75 1209.92 L1775.34 1209.92 L1775.92 1209.92 L1776.51 1209.92 L1777.1 1209.92 L1777.68 1209.92 L1778.27 1209.92 L1778.86 1209.92 L1779.44 1209.92 L1780.03 1209.92 L1780.61 1209.92 L1781.2 1209.92 L1781.79 1209.92 L1782.37 1209.92 L1782.96 1209.92 L1783.55 1209.92 L1784.13 1209.92 L1784.72 1209.92 L1785.31 1209.92 L1785.89 1209.92 L1786.48 1209.92 L1787.06 1209.92 L1787.65 1209.92 L1788.24 1209.92 L1788.82 1209.92 L1789.41 1209.92 L1790 1209.92 L1790.58 1209.92 L1791.17 1209.92 L1791.76 1209.92 L1792.34 1209.92 L1792.93 1209.92 L1793.52 1209.92 L1794.1 1209.92 L1794.69 1209.92 L1795.27 1209.92 L1795.86 1209.92 L1796.45 1209.92 L1797.03 1209.92 L1797.62 1209.92 L1798.21 1209.92 L1798.79 1209.92 L1799.38 1209.92 L1799.97 1209.92 L1800.55 1209.92 L1801.14 1209.92 L1801.73 1209.92 L1802.31 1209.92 L1802.9 1209.92 L1803.48 1209.92 L1804.07 1209.92 L1804.66 1209.92 L1805.24 1209.92 L1805.83 1209.92 L1806.42 1209.92 L1807 1209.92 L1807.59 1209.92 L1808.18 1209.92 L1808.76 1209.92 L1809.35 1209.92 L1809.94 1209.92 L1810.52 1209.92 L1811.11 1209.92 L1811.69 1209.92 L1812.28 1209.92 L1812.87 1209.92 L1813.45 1209.92 L1814.04 1209.92 L1814.63 1209.92 L1815.21 1209.92 L1815.8 1209.92 L1816.39 1209.92 L1816.97 1209.92 L1817.56 1209.92 L1818.14 1209.92 L1818.73 1209.92 L1819.32 1209.92 L1819.9 1209.92 L1820.49 1209.92 L1821.08 1209.92 L1821.66 1209.92 L1822.25 1209.92 L1822.84 1209.92 L1823.42 1209.92 L1824.01 1209.92 L1824.6 1209.92 L1825.18 1209.92 L1825.77 1209.92 L1826.35 1209.92 L1826.94 1209.92 L1827.53 1209.92 L1828.11 1209.92 L1828.7 1209.92 L1829.29 1209.92 L1829.87 1209.92 L1830.46 1209.92 L1831.05 1209.92 L1831.63 1209.92 L1832.22 1209.92 L1832.81 1209.92 L1833.39 1209.92 L1833.98 1209.92 L1834.56 1209.92 L1835.15 1209.92 L1835.74 1209.92 L1836.32 1209.92 L1836.91 1209.92 L1837.5 1209.92 L1838.08 1209.92 L1838.67 1209.92 L1839.26 1209.92 L1839.84 1209.92 L1840.43 1209.92 L1841.01 1209.92 L1841.6 1209.92 L1842.19 1209.92 L1842.77 1209.92 L1843.36 1209.92 L1843.95 1209.92 L1844.53 1209.92 L1845.12 1209.92 L1845.71 1209.92 L1846.29 1209.92 L1846.88 1209.92 L1847.47 1209.92 L1848.05 1209.92 L1848.64 1209.92 L1849.22 1209.92 L1849.81 1209.92 L1850.4 1209.92 L1850.98 1209.92 L1851.57 1209.92 L1852.16 1209.92 L1852.74 1209.92 L1853.33 1209.92 L1853.92 1209.92 L1854.5 1209.92 L1855.09 1209.92 L1855.68 1209.92 L1856.26 1209.92 L1856.85 1209.92 L1857.43 1209.92 L1858.02 1209.92 L1858.61 1209.92 L1859.19 1209.92 L1859.78 1209.92 L1860.37 1209.92 L1860.95 1209.92 L1861.54 1209.92 L1862.13 1209.92 L1862.71 1209.92 L1863.3 1209.92 L1863.88 1209.92 L1864.47 1209.92 L1865.06 1209.92 L1865.64 1209.92 L1866.23 1209.92 L1866.82 1209.92 L1867.4 1209.92 L1867.99 1209.92 L1868.58 1209.92 L1869.16 1209.92 L1869.75 1209.92 L1870.34 1209.92 L1870.92 1209.92 L1871.51 1209.92 L1872.09 1209.92 L1872.68 1209.92 L1873.27 1209.92 L1873.85 1209.92 L1874.44 1209.92 L1875.03 1209.92 L1875.61 1209.92 L1876.2 1209.92 L1876.79 1209.92 L1877.37 1209.92 L1877.96 1209.92 L1878.55 1209.92 L1879.13 1209.92 L1879.72 1209.92 L1880.3 1209.92 L1880.89 1209.92 L1881.48 1209.92 L1882.06 1209.92 L1882.65 1209.92 L1883.24 1209.92 L1883.82 1209.92 L1884.41 1209.92 L1885 1209.92 L1885.58 1209.92 L1886.17 1209.92 L1886.76 1209.92 L1887.34 1209.92 L1887.93 1209.92 L1888.51 1209.92 L1889.1 1209.92 L1889.69 1209.92 L1890.27 1209.92 L1890.86 1209.92 L1891.45 1209.92 L1892.03 1209.92 L1892.62 1209.92 L1893.21 1209.92 L1893.79 1209.92 L1894.38 1209.92 L1894.96 1209.92 L1895.55 1209.92 L1896.14 1209.92 L1896.72 1209.92 L1897.31 1209.92 L1897.9 1209.92 L1898.48 1209.92 L1899.07 1209.92 L1899.66 1209.92 L1900.24 1209.92 L1900.83 1209.92 L1901.42 1209.92 L1902 1209.92 L1902.59 1209.92 L1903.17 1209.92 L1903.76 1209.92 L1904.35 1209.92 L1904.93 1209.92 L1905.52 1209.92 L1906.11 1209.92 L1906.69 1209.92 L1907.28 1209.92 L1907.87 1209.92 L1908.45 1209.92 L1909.04 1209.92 L1909.63 1209.92 L1910.21 1209.92 L1910.8 1209.92 L1911.38 1209.92 L1911.97 1209.92 L1912.56 1209.92 L1913.14 1209.92 L1913.73 1209.92 L1914.32 1209.92 L1914.9 1209.92 L1915.49 1209.92 L1916.08 1209.92 L1916.66 1209.92 L1917.25 1209.92 L1917.83 1209.92 L1918.42 1209.92 L1919.01 1209.92 L1919.59 1209.92 L1920.18 1209.92 L1920.77 1209.92 L1921.35 1209.92 L1921.94 1209.92 L1922.53 1209.92 L1923.11 1209.92 L1923.7 1209.92 L1924.29 1209.92 L1924.87 1209.92 L1925.46 1209.92 L1926.04 1209.92 L1926.63 1209.92 L1927.22 1209.92 L1927.8 1209.92 L1928.39 1209.92 L1928.98 1209.92 L1929.56 1209.92 L1930.15 1209.92 L1930.74 1209.92 L1931.32 1209.92 L1931.91 1209.92 L1932.5 1209.92 L1933.08 1209.92 L1933.67 1209.92 L1934.25 1209.92 L1934.84 1209.92 L1935.43 1209.92 L1936.01 1209.92 L1936.6 1209.92 L1937.19 1209.92 L1937.77 1209.92 L1938.36 1209.92 L1938.95 1209.92 L1939.53 1209.92 L1940.12 1209.92 L1940.71 1209.92 L1941.29 1209.92 L1941.88 1209.92 L1942.46 1209.92 L1943.05 1209.92 L1943.64 1209.92 L1944.22 1209.92 L1944.81 1209.92 L1945.4 1209.92 L1945.98 1209.92 L1946.57 1209.92 L1947.16 1209.92 L1947.74 1209.92 L1948.33 1209.92 L1948.91 1209.92 L1949.5 1209.92 L1950.09 1209.92 L1950.67 1209.92 L1951.26 1209.92 L1951.85 1209.92 L1952.43 1209.92 L1953.02 1209.92 L1953.61 1209.92 L1954.19 1209.92 L1954.78 1209.92 L1955.37 1209.92 L1955.95 1209.92 L1956.54 1209.92 L1957.12 1209.92 L1957.71 1209.92 L1958.3 1209.92 L1958.88 1209.92 L1959.47 1209.92 L1960.06 1209.92 L1960.64 1209.92 L1961.23 1209.92 L1961.82 1209.92 L1962.4 1209.92 L1962.99 1209.92 L1963.58 1209.92 L1964.16 1209.92 L1964.75 1209.92 L1965.33 1209.92 L1965.92 1209.92 L1966.51 1209.92 L1967.09 1209.92 L1967.68 1209.92 L1968.27 1209.92 L1968.85 1209.92 L1969.44 1209.92 L1970.03 1209.92 L1970.61 1209.92 L1971.2 1209.92 L1971.78 1209.92 L1972.37 1209.92 L1972.96 1209.92 L1973.54 1209.92 L1974.13 1209.92 L1974.72 1209.92 L1975.3 1209.92 L1975.89 1209.92 L1976.48 1209.92 L1977.06 1209.92 L1977.65 1209.92 L1978.24 1209.92 L1978.82 1209.92 L1979.41 1209.92 L1979.99 1209.92 L1980.58 1209.92 L1981.17 1209.92 L1981.75 1209.92 L1982.34 1209.92 L1982.93 1209.92 L1983.51 1209.92 L1984.1 1209.92 L1984.69 1209.92 L1985.27 1209.92 L1985.86 1209.92 L1986.45 1209.92 L1987.03 1209.92 L1987.62 1209.92 L1988.2 1209.92 L1988.79 1209.92 L1989.38 1209.92 L1989.96 1209.92 L1990.55 1209.92 L1991.14 1209.92 L1991.72 1209.92 L1992.31 1209.92 L1992.9 1209.92 L1993.48 1209.92 L1994.07 1209.92 L1994.65 1209.92 L1995.24 1209.92 L1995.83 1209.92 L1996.41 1209.92 L1997 1209.92 L1997.59 1209.92 L1998.17 1209.92 L1998.76 1209.92 L1999.35 1209.92 L1999.93 1209.92 L2000.52 1209.92 L2001.11 1209.92 L2001.69 1209.92 L2002.28 1209.92 L2002.86 1209.92 L2003.45 1209.92 L2004.04 1209.92 L2004.62 1209.92 L2005.21 1209.92 L2005.8 1209.92 L2006.38 1209.92 L2006.97 1209.92 L2007.56 1209.92 L2008.14 1209.92 L2008.73 1209.92 L2009.32 1209.92 L2009.9 1209.92 L2010.49 1209.92 L2011.07 1209.92 L2011.66 1209.92 L2012.25 1209.92 L2012.83 1209.92 L2013.42 1209.92 L2014.01 1209.92 L2014.59 1209.92 L2015.18 1209.92 L2015.77 1209.92 L2016.35 1209.92 L2016.94 1209.92 L2017.53 1209.92 L2018.11 1209.92 L2018.7 1209.92 L2019.28 1209.92 L2019.87 1209.92 L2020.46 1209.92 L2021.04 1209.92 L2021.63 1209.92 L2022.22 1209.92 L2022.8 1209.92 L2023.39 1209.92 L2023.98 1209.92 L2024.56 1209.92 L2025.15 1209.92 L2025.73 1209.92 L2026.32 1209.92 L2026.91 1209.92 L2027.49 1209.92 L2028.08 1209.92 L2028.67 1209.92 L2029.25 1209.92 L2029.84 1209.92 L2030.43 1209.92 L2031.01 1209.92 L2031.6 1209.92 L2032.19 1209.92 L2032.77 1209.92 L2033.36 1209.92 L2033.94 1209.92 L2034.53 1209.92 L2035.12 1209.92 L2035.7 1209.92 L2036.29 1209.92 L2036.88 1209.92 L2037.46 1209.92 L2038.05 1209.92 L2038.64 1209.92 L2039.22 1209.92 L2039.81 1209.92 L2040.4 1209.92 L2040.98 1209.92 L2041.57 1209.92 L2042.15 1209.92 L2042.74 1209.92 L2043.33 1209.92 L2043.91 1209.92 L2044.5 1209.92 L2045.09 1209.92 L2045.67 1209.92 L2046.26 1209.92 L2046.85 1209.92 L2047.43 1209.92 L2048.02 1209.92 L2048.6 1209.92 L2049.19 1209.92 L2049.78 1209.92 L2050.36 1209.92 L2050.95 1209.92 L2051.54 1209.92 L2052.12 1209.92 L2052.71 1209.92 L2053.3 1209.92 L2053.88 1209.92 L2054.47 1209.92 L2055.06 1209.92 L2055.64 1209.92 L2056.23 1209.92 L2056.81 1209.92 L2057.4 1209.92 L2057.99 1209.92 L2058.57 1209.92 L2059.16 1209.92 L2059.75 1209.92 L2060.33 1209.92 L2060.92 1209.92 L2061.51 1209.92 L2062.09 1209.92 L2062.68 1209.92 L2063.27 1209.92 L2063.85 1209.92 L2064.44 1209.92 L2065.02 1209.92 L2065.61 1209.92 L2066.2 1209.92 L2066.78 1209.92 L2067.37 1209.92 L2067.96 1209.92 L2068.54 1209.92 L2069.13 1209.92 L2069.72 1209.92 L2070.3 1209.92 L2070.89 1209.92 L2071.48 1209.92 L2072.06 1209.92 L2072.65 1209.92 L2073.23 1209.92 L2073.82 1209.92 L2074.41 1209.92 L2074.99 1209.92 L2075.58 1209.92 L2076.17 1209.92 L2076.75 1209.92 L2077.34 1209.92 L2077.93 1209.92 L2078.51 1209.92 L2079.1 1209.92 L2079.68 1209.92 L2080.27 1209.92 L2080.86 1209.92 L2081.44 1209.92 L2082.03 1209.92 L2082.62 1209.92 L2083.2 1209.92 L2083.79 1209.92 L2084.38 1209.92 L2084.96 1209.92 L2085.55 1209.92 L2086.14 1209.92 L2086.72 1209.92 L2087.31 1209.92 L2087.89 1209.92 L2088.48 1209.92 L2089.07 1209.92 L2089.65 1209.92 L2090.24 1209.92 L2090.83 1209.92 L2091.41 1209.92 L2092 1209.92 L2092.59 1209.92 L2093.17 1209.92 L2093.76 1209.92 L2094.35 1209.92 L2094.93 1209.92 L2095.52 1209.92 L2096.1 1209.92 L2096.69 1209.92 L2097.28 1209.92 L2097.86 1209.92 L2098.45 1209.92 L2099.04 1209.92 L2099.62 1209.92 L2100.21 1209.92 L2100.8 1209.92 L2101.38 1209.92 L2101.97 1209.92 L2102.55 1209.92 L2103.14 1209.92 L2103.73 1209.92 L2104.31 1209.92 L2104.9 1209.92 L2105.49 1209.92 L2106.07 1209.92 L2106.66 1209.92 L2107.25 1209.92 L2107.83 1209.92 L2108.42 1209.92 L2109.01 1209.92 L2109.59 1209.92 L2110.18 1209.92 L2110.76 1209.92 L2111.35 1209.92 L2111.94 1209.92 L2112.52 1209.92 L2113.11 1209.92 L2113.7 1209.92 L2114.28 1209.92 L2114.87 1209.92 L2115.46 1209.92 L2116.04 1209.92 L2116.63 1209.92 L2117.22 1209.92 L2117.8 1209.92 L2118.39 1209.92 L2118.97 1209.92 L2119.56 1209.92 L2120.15 1209.92 L2120.73 1209.92 L2121.32 1209.92 L2121.91 1209.92 L2122.49 1209.92 L2123.08 1209.92 L2123.67 1209.92 L2124.25 1209.92 L2124.84 1209.92 L2125.42 1209.92 L2126.01 1209.92 L2126.6 1209.92 L2127.18 1209.92 L2127.77 1209.92 L2128.36 1209.92 L2128.94 1209.92 L2129.53 1209.92 L2130.12 1209.92 L2130.7 1209.92 L2131.29 1209.92 L2131.88 1209.92 L2132.46 1209.92 L2133.05 1209.92 L2133.63 1209.92 L2134.22 1209.92 L2134.81 1209.92 L2135.39 1209.92 L2135.98 1209.92 L2136.57 1209.92 L2137.15 1209.92 L2137.74 1209.92 L2138.33 1209.92 L2138.91 1209.92 L2139.5 1209.92 L2140.09 1209.92 L2140.67 1209.92 L2141.26 1209.92 L2141.84 1209.92 L2142.43 1209.92 L2143.02 1209.92 L2143.6 1209.92 L2144.19 1209.92 L2144.78 1209.92 L2145.36 1209.92 L2145.95 1209.92 L2146.54 1209.92 L2147.12 1209.92 L2147.71 1209.92 L2148.3 1209.92 L2148.88 1209.92 L2149.47 1209.92 L2150.05 1209.92 L2150.64 1209.92 L2151.23 1209.92 L2151.81 1209.92 L2152.4 1209.92 L2152.99 1209.92 L2153.57 1209.92 L2154.16 1209.92 L2154.75 1209.92 L2155.33 1209.92 L2155.92 1209.92 L2156.5 1209.92 L2157.09 1209.92 L2157.68 1209.92 L2158.26 1209.92 L2158.26 1209.69 L2157.68 1209.69 L2157.09 1209.69 L2156.5 1209.69 L2155.92 1209.69 L2155.33 1209.69 L2154.75 1209.69 L2154.16 1209.69 L2153.57 1209.69 L2152.99 1209.69 L2152.4 1209.69 L2151.81 1209.69 L2151.23 1209.69 L2150.64 1209.69 L2150.05 1209.69 L2149.47 1209.69 L2148.88 1209.69 L2148.3 1209.69 L2147.71 1209.69 L2147.12 1209.69 L2146.54 1209.69 L2145.95 1209.69 L2145.36 1209.69 L2144.78 1209.69 L2144.19 1209.69 L2143.6 1209.69 L2143.02 1209.69 L2142.43 1209.69 L2141.84 1209.69 L2141.26 1209.69 L2140.67 1209.69 L2140.09 1209.69 L2139.5 1209.69 L2138.91 1209.69 L2138.33 1209.69 L2137.74 1209.69 L2137.15 1209.69 L2136.57 1209.69 L2135.98 1209.69 L2135.39 1209.69 L2134.81 1209.69 L2134.22 1209.69 L2133.63 1209.69 L2133.05 1209.69 L2132.46 1209.69 L2131.88 1209.69 L2131.29 1209.69 L2130.7 1209.69 L2130.12 1209.69 L2129.53 1209.69 L2128.94 1209.69 L2128.36 1209.69 L2127.77 1209.69 L2127.18 1209.69 L2126.6 1209.69 L2126.01 1209.69 L2125.42 1209.69 L2124.84 1209.69 L2124.25 1209.69 L2123.67 1209.69 L2123.08 1209.69 L2122.49 1209.69 L2121.91 1209.69 L2121.32 1209.69 L2120.73 1209.69 L2120.15 1209.69 L2119.56 1209.69 L2118.97 1209.69 L2118.39 1209.69 L2117.8 1209.69 L2117.22 1209.69 L2116.63 1209.69 L2116.04 1209.69 L2115.46 1209.69 L2114.87 1209.69 L2114.28 1209.69 L2113.7 1209.69 L2113.11 1209.69 L2112.52 1209.69 L2111.94 1209.69 L2111.35 1209.69 L2110.76 1209.69 L2110.18 1209.69 L2109.59 1209.69 L2109.01 1209.69 L2108.42 1209.69 L2107.83 1209.69 L2107.25 1209.69 L2106.66 1209.69 L2106.07 1209.69 L2105.49 1209.69 L2104.9 1209.69 L2104.31 1209.69 L2103.73 1209.69 L2103.14 1209.69 L2102.55 1209.69 L2101.97 1209.69 L2101.38 1209.69 L2100.8 1209.69 L2100.21 1209.69 L2099.62 1209.69 L2099.04 1209.69 L2098.45 1209.69 L2097.86 1209.69 L2097.28 1209.69 L2096.69 1209.69 L2096.1 1209.69 L2095.52 1209.69 L2094.93 1209.69 L2094.35 1209.69 L2093.76 1209.69 L2093.17 1209.69 L2092.59 1209.69 L2092 1209.69 L2091.41 1209.69 L2090.83 1209.69 L2090.24 1209.69 L2089.65 1209.69 L2089.07 1209.69 L2088.48 1209.69 L2087.89 1209.69 L2087.31 1209.69 L2086.72 1209.69 L2086.14 1209.69 L2085.55 1209.69 L2084.96 1209.69 L2084.38 1209.69 L2083.79 1209.69 L2083.2 1209.69 L2082.62 1209.69 L2082.03 1209.69 L2081.44 1209.69 L2080.86 1209.69 L2080.27 1209.69 L2079.68 1209.69 L2079.1 1209.69 L2078.51 1209.69 L2077.93 1209.69 L2077.34 1209.69 L2076.75 1209.69 L2076.17 1209.69 L2075.58 1209.69 L2074.99 1209.69 L2074.41 1209.69 L2073.82 1209.69 L2073.23 1209.69 L2072.65 1209.69 L2072.06 1209.69 L2071.48 1209.69 L2070.89 1209.69 L2070.3 1209.69 L2069.72 1209.69 L2069.13 1209.69 L2068.54 1209.69 L2067.96 1209.69 L2067.37 1209.69 L2066.78 1209.69 L2066.2 1209.69 L2065.61 1209.69 L2065.02 1209.69 L2064.44 1209.69 L2063.85 1209.69 L2063.27 1209.69 L2062.68 1209.69 L2062.09 1209.69 L2061.51 1209.69 L2060.92 1209.69 L2060.33 1209.69 L2059.75 1209.69 L2059.16 1209.69 L2058.57 1209.69 L2057.99 1209.69 L2057.4 1209.69 L2056.81 1209.69 L2056.23 1209.69 L2055.64 1209.69 L2055.06 1209.69 L2054.47 1209.69 L2053.88 1209.69 L2053.3 1209.69 L2052.71 1209.69 L2052.12 1209.69 L2051.54 1209.69 L2050.95 1209.69 L2050.36 1209.69 L2049.78 1209.69 L2049.19 1209.69 L2048.6 1209.69 L2048.02 1209.69 L2047.43 1209.69 L2046.85 1209.69 L2046.26 1209.69 L2045.67 1209.69 L2045.09 1209.69 L2044.5 1209.69 L2043.91 1209.69 L2043.33 1209.69 L2042.74 1209.69 L2042.15 1209.69 L2041.57 1209.69 L2040.98 1209.69 L2040.4 1209.69 L2039.81 1209.69 L2039.22 1209.69 L2038.64 1209.69 L2038.05 1209.69 L2037.46 1209.69 L2036.88 1209.69 L2036.29 1209.69 L2035.7 1209.69 L2035.12 1209.69 L2034.53 1209.69 L2033.94 1209.69 L2033.36 1209.69 L2032.77 1209.69 L2032.19 1209.69 L2031.6 1209.69 L2031.01 1209.69 L2030.43 1209.69 L2029.84 1209.69 L2029.25 1209.69 L2028.67 1209.69 L2028.08 1209.69 L2027.49 1209.69 L2026.91 1209.69 L2026.32 1209.69 L2025.73 1209.69 L2025.15 1209.69 L2024.56 1209.69 L2023.98 1209.69 L2023.39 1209.69 L2022.8 1209.69 L2022.22 1209.69 L2021.63 1209.69 L2021.04 1209.69 L2020.46 1209.69 L2019.87 1209.69 L2019.28 1209.69 L2018.7 1209.69 L2018.11 1209.69 L2017.53 1209.69 L2016.94 1209.69 L2016.35 1209.69 L2015.77 1209.69 L2015.18 1209.69 L2014.59 1209.69 L2014.01 1209.69 L2013.42 1209.69 L2012.83 1209.69 L2012.25 1209.69 L2011.66 1209.69 L2011.07 1209.69 L2010.49 1209.69 L2009.9 1209.69 L2009.32 1209.69 L2008.73 1209.69 L2008.14 1209.69 L2007.56 1209.69 L2006.97 1209.69 L2006.38 1209.69 L2005.8 1209.69 L2005.21 1209.69 L2004.62 1209.69 L2004.04 1209.69 L2003.45 1209.69 L2002.86 1209.69 L2002.28 1209.69 L2001.69 1209.69 L2001.11 1209.69 L2000.52 1209.69 L1999.93 1209.69 L1999.35 1209.69 L1998.76 1209.69 L1998.17 1209.69 L1997.59 1209.69 L1997 1209.69 L1996.41 1209.69 L1995.83 1209.69 L1995.24 1209.69 L1994.65 1209.69 L1994.07 1209.69 L1993.48 1209.69 L1992.9 1209.69 L1992.31 1209.69 L1991.72 1209.69 L1991.14 1209.69 L1990.55 1209.69 L1989.96 1209.69 L1989.38 1209.69 L1988.79 1209.69 L1988.2 1209.69 L1987.62 1209.69 L1987.03 1209.69 L1986.45 1209.69 L1985.86 1209.69 L1985.27 1209.69 L1984.69 1209.69 L1984.1 1209.69 L1983.51 1209.69 L1982.93 1209.69 L1982.34 1209.69 L1981.75 1209.69 L1981.17 1209.69 L1980.58 1209.69 L1979.99 1209.69 L1979.41 1209.69 L1978.82 1209.69 L1978.24 1209.69 L1977.65 1209.69 L1977.06 1209.69 L1976.48 1209.69 L1975.89 1209.69 L1975.3 1209.69 L1974.72 1209.69 L1974.13 1209.69 L1973.54 1209.69 L1972.96 1209.69 L1972.37 1209.69 L1971.78 1209.69 L1971.2 1209.69 L1970.61 1209.69 L1970.03 1209.69 L1969.44 1209.69 L1968.85 1209.69 L1968.27 1209.69 L1967.68 1209.69 L1967.09 1209.69 L1966.51 1209.69 L1965.92 1209.69 L1965.33 1209.69 L1964.75 1209.69 L1964.16 1209.69 L1963.58 1209.69 L1962.99 1209.69 L1962.4 1209.69 L1961.82 1209.69 L1961.23 1209.69 L1960.64 1209.69 L1960.06 1209.69 L1959.47 1209.69 L1958.88 1209.69 L1958.3 1209.69 L1957.71 1209.69 L1957.12 1209.69 L1956.54 1209.69 L1955.95 1209.69 L1955.37 1209.69 L1954.78 1209.69 L1954.19 1209.69 L1953.61 1209.69 L1953.02 1209.69 L1952.43 1209.69 L1951.85 1209.69 L1951.26 1209.69 L1950.67 1209.69 L1950.09 1209.69 L1949.5 1209.69 L1948.91 1209.69 L1948.33 1209.69 L1947.74 1209.69 L1947.16 1209.69 L1946.57 1209.69 L1945.98 1209.69 L1945.4 1209.69 L1944.81 1209.69 L1944.22 1209.69 L1943.64 1209.69 L1943.05 1209.69 L1942.46 1209.69 L1941.88 1209.69 L1941.29 1209.69 L1940.71 1209.69 L1940.12 1209.69 L1939.53 1209.69 L1938.95 1209.69 L1938.36 1209.69 L1937.77 1209.69 L1937.19 1209.69 L1936.6 1209.69 L1936.01 1209.69 L1935.43 1209.69 L1934.84 1209.69 L1934.25 1209.69 L1933.67 1209.69 L1933.08 1209.69 L1932.5 1209.69 L1931.91 1209.69 L1931.32 1209.69 L1930.74 1209.69 L1930.15 1209.69 L1929.56 1209.69 L1928.98 1209.69 L1928.39 1209.69 L1927.8 1209.69 L1927.22 1209.69 L1926.63 1209.69 L1926.04 1209.69 L1925.46 1209.69 L1924.87 1209.69 L1924.29 1209.69 L1923.7 1209.69 L1923.11 1209.69 L1922.53 1209.69 L1921.94 1209.69 L1921.35 1209.69 L1920.77 1209.69 L1920.18 1209.69 L1919.59 1209.69 L1919.01 1209.69 L1918.42 1209.69 L1917.83 1209.69 L1917.25 1209.69 L1916.66 1209.69 L1916.08 1209.69 L1915.49 1209.69 L1914.9 1209.69 L1914.32 1209.69 L1913.73 1209.69 L1913.14 1209.69 L1912.56 1209.69 L1911.97 1209.69 L1911.38 1209.69 L1910.8 1209.69 L1910.21 1209.69 L1909.63 1209.69 L1909.04 1209.69 L1908.45 1209.69 L1907.87 1209.69 L1907.28 1209.69 L1906.69 1209.69 L1906.11 1209.69 L1905.52 1209.69 L1904.93 1209.69 L1904.35 1209.69 L1903.76 1209.69 L1903.17 1209.69 L1902.59 1209.69 L1902 1209.69 L1901.42 1209.69 L1900.83 1209.69 L1900.24 1209.69 L1899.66 1209.69 L1899.07 1209.69 L1898.48 1209.69 L1897.9 1209.69 L1897.31 1209.69 L1896.72 1209.69 L1896.14 1209.69 L1895.55 1209.69 L1894.96 1209.69 L1894.38 1209.69 L1893.79 1209.69 L1893.21 1209.69 L1892.62 1209.69 L1892.03 1209.69 L1891.45 1209.69 L1890.86 1209.69 L1890.27 1209.69 L1889.69 1209.69 L1889.1 1209.69 L1888.51 1209.69 L1887.93 1209.69 L1887.34 1209.69 L1886.76 1209.69 L1886.17 1209.69 L1885.58 1209.69 L1885 1209.69 L1884.41 1209.69 L1883.82 1209.69 L1883.24 1209.69 L1882.65 1209.69 L1882.06 1209.69 L1881.48 1209.69 L1880.89 1209.69 L1880.3 1209.69 L1879.72 1209.69 L1879.13 1209.69 L1878.55 1209.69 L1877.96 1209.69 L1877.37 1209.69 L1876.79 1209.69 L1876.2 1209.69 L1875.61 1209.69 L1875.03 1209.69 L1874.44 1209.69 L1873.85 1209.69 L1873.27 1209.69 L1872.68 1209.69 L1872.09 1209.69 L1871.51 1209.69 L1870.92 1209.69 L1870.34 1209.69 L1869.75 1209.69 L1869.16 1209.69 L1868.58 1209.69 L1867.99 1209.69 L1867.4 1209.69 L1866.82 1209.69 L1866.23 1209.69 L1865.64 1209.69 L1865.06 1209.69 L1864.47 1209.69 L1863.88 1209.69 L1863.3 1209.69 L1862.71 1209.69 L1862.13 1209.69 L1861.54 1209.69 L1860.95 1209.69 L1860.37 1209.69 L1859.78 1209.69 L1859.19 1209.69 L1858.61 1209.69 L1858.02 1209.69 L1857.43 1209.69 L1856.85 1209.69 L1856.26 1209.69 L1855.68 1209.69 L1855.09 1209.69 L1854.5 1209.69 L1853.92 1209.69 L1853.33 1209.69 L1852.74 1209.69 L1852.16 1209.69 L1851.57 1209.69 L1850.98 1209.69 L1850.4 1209.69 L1849.81 1209.69 L1849.22 1209.69 L1848.64 1209.69 L1848.05 1209.69 L1847.47 1209.69 L1846.88 1209.69 L1846.29 1209.69 L1845.71 1209.69 L1845.12 1209.69 L1844.53 1209.69 L1843.95 1209.69 L1843.36 1209.69 L1842.77 1209.69 L1842.19 1209.69 L1841.6 1209.69 L1841.01 1209.69 L1840.43 1209.69 L1839.84 1209.69 L1839.26 1209.69 L1838.67 1209.69 L1838.08 1209.69 L1837.5 1209.69 L1836.91 1209.69 L1836.32 1209.69 L1835.74 1209.69 L1835.15 1209.69 L1834.56 1209.69 L1833.98 1209.69 L1833.39 1209.69 L1832.81 1209.69 L1832.22 1209.69 L1831.63 1209.69 L1831.05 1209.69 L1830.46 1209.69 L1829.87 1209.69 L1829.29 1209.69 L1828.7 1209.69 L1828.11 1209.69 L1827.53 1209.69 L1826.94 1209.69 L1826.35 1209.69 L1825.77 1209.69 L1825.18 1209.69 L1824.6 1209.69 L1824.01 1209.69 L1823.42 1209.69 L1822.84 1209.69 L1822.25 1209.69 L1821.66 1209.69 L1821.08 1209.69 L1820.49 1209.69 L1819.9 1209.69 L1819.32 1209.69 L1818.73 1209.69 L1818.14 1209.69 L1817.56 1209.69 L1816.97 1209.69 L1816.39 1209.69 L1815.8 1209.69 L1815.21 1209.69 L1814.63 1209.69 L1814.04 1209.69 L1813.45 1209.69 L1812.87 1209.69 L1812.28 1209.69 L1811.69 1209.69 L1811.11 1209.69 L1810.52 1209.69 L1809.94 1209.69 L1809.35 1209.69 L1808.76 1209.69 L1808.18 1209.69 L1807.59 1209.69 L1807 1209.69 L1806.42 1209.69 L1805.83 1209.69 L1805.24 1209.69 L1804.66 1209.69 L1804.07 1209.69 L1803.48 1209.69 L1802.9 1209.69 L1802.31 1209.69 L1801.73 1209.69 L1801.14 1209.69 L1800.55 1209.69 L1799.97 1209.69 L1799.38 1209.69 L1798.79 1209.69 L1798.21 1209.69 L1797.62 1209.69 L1797.03 1209.69 L1796.45 1209.69 L1795.86 1209.69 L1795.27 1209.69 L1794.69 1209.69 L1794.1 1209.69 L1793.52 1209.69 L1792.93 1209.69 L1792.34 1209.69 L1791.76 1209.69 L1791.17 1209.69 L1790.58 1209.69 L1790 1209.69 L1789.41 1209.69 L1788.82 1209.69 L1788.24 1209.69 L1787.65 1209.69 L1787.06 1209.69 L1786.48 1209.69 L1785.89 1209.69 L1785.31 1209.69 L1784.72 1209.69 L1784.13 1209.69 L1783.55 1209.69 L1782.96 1209.69 L1782.37 1209.69 L1781.79 1209.69 L1781.2 1209.69 L1780.61 1209.69 L1780.03 1209.69 L1779.44 1209.69 L1778.86 1209.69 L1778.27 1209.69 L1777.68 1209.69 L1777.1 1209.69 L1776.51 1209.69 L1775.92 1209.69 L1775.34 1209.69 L1774.75 1209.69 L1774.16 1209.69 L1773.58 1209.69 L1772.99 1209.69 L1772.4 1209.69 L1771.82 1209.69 L1771.23 1209.69 L1770.65 1209.69 L1770.06 1209.69 L1769.47 1209.69 L1768.89 1209.69 L1768.3 1209.69 L1767.71 1209.69 L1767.13 1209.69 L1766.54 1209.69 L1765.95 1209.69 L1765.37 1209.69 L1764.78 1209.69 L1764.19 1209.69 L1763.61 1209.69 L1763.02 1209.69 L1762.44 1209.69 L1761.85 1209.69 L1761.26 1209.69 L1760.68 1209.69 L1760.09 1209.69 L1759.5 1209.69 L1758.92 1209.69 L1758.33 1209.69 L1757.74 1209.69 L1757.16 1209.69 L1756.57 1209.69 L1755.99 1209.69 L1755.4 1209.69 L1754.81 1209.69 L1754.23 1209.69 L1753.64 1209.69 L1753.05 1209.69 L1752.47 1209.69 L1751.88 1209.69 L1751.29 1209.69 L1750.71 1209.69 L1750.12 1209.69 L1749.53 1209.69 L1748.95 1209.69 L1748.36 1209.69 L1747.78 1209.69 L1747.19 1209.69 L1746.6 1209.69 L1746.02 1209.69 L1745.43 1209.69 L1744.84 1209.69 L1744.26 1209.69 L1743.67 1209.69 L1743.08 1209.69 L1742.5 1209.69 L1741.91 1209.69 L1741.32 1209.69 L1740.74 1209.69 L1740.15 1209.69 L1739.57 1209.69 L1738.98 1209.69 L1738.39 1209.69 L1737.81 1209.69 L1737.22 1209.69 L1736.63 1209.69 L1736.05 1209.69 L1735.46 1209.69 L1734.87 1209.69 L1734.29 1209.69 L1733.7 1209.69 L1733.11 1209.69 L1732.53 1209.69 L1731.94 1209.69 L1731.36 1209.69 L1730.77 1209.69 L1730.18 1209.69 L1729.6 1209.69 L1729.01 1209.69 L1728.42 1209.69 L1727.84 1209.69 L1727.25 1209.69 L1726.66 1209.69 L1726.08 1209.69 L1725.49 1209.69 L1724.91 1209.69 L1724.32 1209.69 L1723.73 1209.69 L1723.15 1209.69 L1722.56 1209.69 L1721.97 1209.69 L1721.39 1209.69 L1720.8 1209.69 L1720.21 1209.69 L1719.63 1209.69 L1719.04 1209.69 L1718.45 1209.69 L1717.87 1209.69 L1717.28 1209.69 L1716.7 1209.69 L1716.11 1209.69 L1715.52 1209.69 L1714.94 1209.69 L1714.35 1209.69 L1713.76 1209.69 L1713.18 1209.69 L1712.59 1209.69 L1712 1209.69 L1711.42 1209.69 L1710.83 1209.69 L1710.24 1209.69 L1709.66 1209.69 L1709.07 1209.69 L1708.49 1209.69 L1707.9 1209.69 L1707.31 1209.69 L1706.73 1209.69 L1706.14 1209.69 L1705.55 1209.69 L1704.97 1209.69 L1704.38 1209.69 L1703.79 1209.69 L1703.21 1209.69 L1702.62 1209.69 L1702.04 1209.69 L1701.45 1209.69 L1700.86 1209.69 L1700.28 1209.69 L1699.69 1209.69 L1699.1 1209.69 L1698.52 1209.69 L1697.93 1209.69 L1697.34 1209.69 L1696.76 1209.69 L1696.17 1209.69 L1695.58 1209.69 L1695 1209.69 L1694.41 1209.69 L1693.83 1209.69 L1693.24 1209.69 L1692.65 1209.69 L1692.07 1209.69 L1691.48 1209.69 L1690.89 1209.69 L1690.31 1209.69 L1689.72 1209.69 L1689.13 1209.69 L1688.55 1209.69 L1687.96 1209.69 L1687.37 1209.69 L1686.79 1209.69 L1686.2 1209.69 L1685.62 1209.69 L1685.03 1209.69 L1684.44 1209.69 L1683.86 1209.69 L1683.27 1209.69 L1682.68 1209.69 L1682.1 1209.69 L1681.51 1209.69 L1680.92 1209.69 L1680.34 1209.69 L1679.75 1209.69 L1679.17 1209.69 L1678.58 1209.69 L1677.99 1209.69 L1677.41 1209.69 L1676.82 1209.69 L1676.23 1209.69 L1675.65 1209.69 L1675.06 1209.69 L1674.47 1209.69 L1673.89 1209.69 L1673.3 1209.69 L1672.71 1209.69 L1672.13 1209.69 L1671.54 1209.69 L1670.96 1209.69 L1670.37 1209.69 L1669.78 1209.69 L1669.2 1209.69 L1668.61 1209.69 L1668.02 1209.69 L1667.44 1209.69 L1666.85 1209.69 L1666.26 1209.69 L1665.68 1209.69 L1665.09 1209.69 L1664.5 1209.69 L1663.92 1209.69 L1663.33 1209.69 L1662.75 1209.69 L1662.16 1209.69 L1661.57 1209.69 L1660.99 1209.69 L1660.4 1209.69 L1659.81 1209.69 L1659.23 1209.69 L1658.64 1209.69 L1658.05 1209.69 L1657.47 1209.69 L1656.88 1209.69 L1656.29 1209.69 L1655.71 1209.69 L1655.12 1209.69 L1654.54 1209.69 L1653.95 1209.69 L1653.36 1209.69 L1652.78 1209.69 L1652.19 1209.69 L1651.6 1209.69 L1651.02 1209.69 L1650.43 1209.69 L1649.84 1209.69 L1649.26 1209.69 L1648.67 1209.69 L1648.09 1209.69 L1647.5 1209.69 L1646.91 1209.69 L1646.33 1209.69 L1645.74 1209.69 L1645.15 1209.69 L1644.57 1209.69 L1643.98 1209.69 L1643.39 1209.69 L1642.81 1209.69 L1642.22 1209.69 L1641.63 1209.69 L1641.05 1209.69 L1640.46 1209.69 L1639.88 1209.69 L1639.29 1209.69 L1638.7 1209.69 L1638.12 1209.69 L1637.53 1209.69 L1636.94 1209.69 L1636.36 1209.69 L1635.77 1209.69 L1635.18 1209.69 L1634.6 1209.69 L1634.01 1209.69 L1633.42 1209.69 L1632.84 1209.69 L1632.25 1209.69 L1631.67 1209.69 L1631.08 1209.69 L1630.49 1209.69 L1629.91 1209.69 L1629.32 1209.69 L1628.73 1209.69 L1628.15 1209.69 L1627.56 1209.69 L1626.97 1209.69 L1626.39 1209.69 L1625.8 1209.69 L1625.22 1209.69 L1624.63 1209.69 L1624.04 1209.69 L1623.46 1209.69 L1622.87 1209.69 L1622.28 1209.69 L1621.7 1209.69 L1621.11 1209.69 L1620.52 1209.69 L1619.94 1209.69 L1619.35 1209.69 L1618.76 1209.69 L1618.18 1209.69 L1617.59 1209.69 L1617.01 1209.69 L1616.42 1209.69 L1615.83 1209.69 L1615.25 1209.69 L1614.66 1209.69 L1614.07 1209.69 L1613.49 1209.69 L1612.9 1209.69 L1612.31 1209.69 L1611.73 1209.69 L1611.14 1209.69 L1610.55 1209.69 L1609.97 1209.69 L1609.38 1209.69 L1608.8 1209.69 L1608.21 1209.69 L1607.62 1209.69 L1607.04 1209.69 L1606.45 1209.69 L1605.86 1209.69 L1605.28 1209.69 L1604.69 1209.69 L1604.1 1209.69 L1603.52 1209.69 L1602.93 1209.69 L1602.34 1209.69 L1601.76 1209.69 L1601.17 1209.69 L1600.59 1209.69 L1600 1209.69 L1599.41 1209.69 L1598.83 1209.69 L1598.24 1209.69 L1597.65 1209.69 L1597.07 1209.69 L1596.48 1209.69 L1595.89 1209.69 L1595.31 1209.69 L1594.72 1209.69 L1594.14 1209.69 L1593.55 1209.69 L1592.96 1209.69 L1592.38 1209.69 L1591.79 1209.69 L1591.2 1209.69 L1590.62 1209.69 L1590.03 1209.69 L1589.44 1209.69 L1588.86 1209.69 L1588.27 1209.69 L1587.68 1209.69 L1587.1 1209.69 L1586.51 1209.69 L1585.93 1209.69 L1585.34 1209.69 L1584.75 1209.69 L1584.17 1209.69 L1583.58 1209.69 L1582.99 1209.69 L1582.41 1209.69 L1581.82 1209.69 L1581.23 1209.69 L1580.65 1209.69 L1580.06 1209.69 L1579.47 1209.69 L1578.89 1209.69 L1578.3 1209.69 L1577.72 1209.69 L1577.13 1209.69 L1576.54 1209.69 L1575.96 1209.69 L1575.37 1209.69 L1574.78 1209.69 L1574.2 1209.69 L1573.61 1209.69 L1573.02 1209.69 L1572.44 1209.69 L1571.85 1209.69 L1571.27 1209.69 L1570.68 1209.69 L1570.09 1209.69 L1569.51 1209.69 L1568.92 1209.69 L1568.33 1209.69 L1567.75 1209.69 L1567.16 1209.69 L1566.57 1209.69 L1565.99 1209.69 L1565.4 1209.69 L1564.81 1209.69 L1564.23 1209.69 L1563.64 1209.69 L1563.06 1209.69 L1562.47 1209.69 L1561.88 1209.69 L1561.3 1209.69 L1560.71 1209.69 L1560.12 1209.69 L1559.54 1209.69 L1558.95 1209.69 L1558.36 1209.69 L1557.78 1209.69 L1557.19 1209.69 L1556.6 1209.69 L1556.02 1209.69 L1555.43 1209.69 L1554.85 1209.69 L1554.26 1209.69 L1553.67 1209.69 L1553.09 1209.69 L1552.5 1209.69 L1551.91 1209.69 L1551.33 1209.69 L1550.74 1209.69 L1550.15 1209.69 L1549.57 1209.69 L1548.98 1209.69 L1548.4 1209.69 L1547.81 1209.69 L1547.22 1209.69 L1546.64 1209.69 L1546.05 1209.69 L1545.46 1209.69 L1544.88 1209.69 L1544.29 1209.69 L1543.7 1209.69 L1543.12 1209.69 L1542.53 1209.69 L1541.94 1209.69 L1541.36 1209.69 L1540.77 1209.69 L1540.19 1209.69 L1539.6 1209.69 L1539.01 1209.69 L1538.43 1209.69 L1537.84 1209.69 L1537.25 1209.69 L1536.67 1209.69 L1536.08 1209.69 L1535.49 1209.69 L1534.91 1209.69 L1534.32 1209.69 L1533.73 1209.69 L1533.15 1209.69 L1532.56 1209.69 L1531.98 1209.69 L1531.39 1209.69 L1530.8 1209.69 L1530.22 1209.69 L1529.63 1209.69 L1529.04 1209.69 L1528.46 1209.69 L1527.87 1209.69 L1527.28 1209.69 L1526.7 1209.69 L1526.11 1209.69 L1525.52 1209.69 L1524.94 1209.69 L1524.35 1209.69 L1523.77 1209.69 L1523.18 1209.69 L1522.59 1209.69 L1522.01 1209.69 L1521.42 1209.69 L1520.83 1209.69 L1520.25 1209.69 L1519.66 1209.69 L1519.07 1209.69 L1518.49 1209.69 L1517.9 1209.69 L1517.32 1209.69 L1516.73 1209.69 L1516.14 1209.69 L1515.56 1209.69 L1514.97 1209.69 L1514.38 1209.69 L1513.8 1209.69 L1513.21 1209.69 L1512.62 1209.69 L1512.04 1209.69 L1511.45 1209.69 L1510.86 1209.69 L1510.28 1209.69 L1509.69 1209.69 L1509.11 1209.69 L1508.52 1209.69 L1507.93 1209.69 L1507.35 1209.69 L1506.76 1209.69 L1506.17 1209.69 L1505.59 1209.69 L1505 1209.69 L1504.41 1209.69 L1503.83 1209.69 L1503.24 1209.69 L1502.65 1209.69 L1502.07 1209.69 L1501.48 1209.69 L1500.9 1209.69 L1500.31 1209.69 L1499.72 1209.69 L1499.14 1209.69 L1498.55 1209.69 L1497.96 1209.69 L1497.38 1209.69 L1496.79 1209.69 L1496.2 1209.69 L1495.62 1209.69 L1495.03 1209.69 L1494.45 1209.69 L1493.86 1209.69 L1493.27 1209.69 L1492.69 1209.69 L1492.1 1209.69 L1491.51 1209.69 L1490.93 1209.69 L1490.34 1209.69 L1489.75 1209.69 L1489.17 1209.69 L1488.58 1209.69 L1487.99 1209.69 L1487.41 1209.69 L1486.82 1209.69 L1486.24 1209.69 L1485.65 1209.69 L1485.06 1209.69 L1484.48 1209.69 L1483.89 1209.69 L1483.3 1209.69 L1482.72 1209.69 L1482.13 1209.69 L1481.54 1209.69 L1480.96 1209.69 L1480.37 1209.69 L1479.78 1209.69 L1479.2 1209.69 L1478.61 1209.69 L1478.03 1209.69 L1477.44 1209.69 L1476.85 1209.69 L1476.27 1209.69 L1475.68 1209.69 L1475.09 1209.69 L1474.51 1209.69 L1473.92 1209.69 L1473.33 1209.69 L1472.75 1209.69 L1472.16 1209.69 L1471.57 1209.69 L1470.99 1209.69 L1470.4 1209.69 L1469.82 1209.69 L1469.23 1209.69 L1468.64 1209.69 L1468.06 1209.69 L1467.47 1209.69 L1466.88 1209.69 L1466.3 1209.69 L1465.71 1209.69 L1465.12 1209.69 L1464.54 1209.69 L1463.95 1209.69 L1463.37 1209.69 L1462.78 1209.69 L1462.19 1209.69 L1461.61 1209.69 L1461.02 1209.69 L1460.43 1209.69 L1459.85 1209.69 L1459.26 1209.69 L1458.67 1209.69 L1458.09 1209.69 L1457.5 1209.69 L1456.91 1209.69 L1456.33 1209.69 L1455.74 1209.69 L1455.16 1209.69 L1454.57 1209.69 L1453.98 1209.69 L1453.4 1209.69 L1452.81 1209.69 L1452.22 1209.69 L1451.64 1209.69 L1451.05 1209.69 L1450.46 1209.69 L1449.88 1209.69 L1449.29 1209.69 L1448.7 1209.69 L1448.12 1209.69 L1447.53 1209.69 L1446.95 1209.69 L1446.36 1209.69 L1445.77 1209.69 L1445.19 1209.69 L1444.6 1209.69 L1444.01 1209.69 L1443.43 1209.69 L1442.84 1209.69 L1442.25 1209.69 L1441.67 1209.69 L1441.08 1209.69 L1440.5 1209.69 L1439.91 1209.69 L1439.32 1209.69 L1438.74 1209.69 L1438.15 1209.69 L1437.56 1209.69 L1436.98 1209.69 L1436.39 1209.69 L1435.8 1209.69 L1435.22 1209.69 L1434.63 1209.69 L1434.04 1209.69 L1433.46 1209.69 L1432.87 1209.69 L1432.29 1209.69 L1431.7 1209.69 L1431.11 1209.69 L1430.53 1209.69 L1429.94 1209.69 L1429.35 1209.69 L1428.77 1209.69 L1428.18 1209.69 L1427.59 1209.69 L1427.01 1209.69 L1426.42 1209.69 L1425.83 1209.69 L1425.25 1209.69 L1424.66 1209.69 L1424.08 1209.69 L1423.49 1209.69 L1422.9 1209.69 L1422.32 1209.69 L1421.73 1209.69 L1421.14 1209.69 L1420.56 1209.69 L1419.97 1209.69 L1419.38 1209.69 L1418.8 1209.69 L1418.21 1209.69 L1417.63 1209.69 L1417.04 1209.69 L1416.45 1209.69 L1415.87 1209.69 L1415.28 1209.69 L1414.69 1209.69 L1414.11 1209.69 L1413.52 1209.69 L1412.93 1209.69 L1412.35 1209.69 L1411.76 1209.69 L1411.17 1209.69 L1410.59 1209.69 L1410 1209.69 L1409.42 1209.69 L1408.83 1209.69 L1408.24 1209.69 L1407.66 1209.69 L1407.07 1209.69 L1406.48 1209.69 L1405.9 1209.69 L1405.31 1209.69 L1404.72 1209.69 L1404.14 1209.69 L1403.55 1209.69 L1402.96 1209.69 L1402.38 1209.69 L1401.79 1209.69 L1401.21 1209.69 L1400.62 1209.69 L1400.03 1209.69 L1399.45 1209.69 L1398.86 1209.69 L1398.27 1209.69 L1397.69 1209.69 L1397.1 1209.69 L1396.51 1209.69 L1395.93 1209.69 L1395.34 1209.69 L1394.75 1209.69 L1394.17 1209.69 L1393.58 1209.69 L1393 1209.69 L1392.41 1209.69 L1391.82 1209.69 L1391.24 1209.69 L1390.65 1209.69 L1390.06 1209.69 L1389.48 1209.69 L1388.89 1209.69 L1388.3 1209.69 L1387.72 1209.69 L1387.13 1209.69 L1386.55 1209.69 L1385.96 1209.69 L1385.37 1209.69 L1384.79 1209.69 L1384.2 1209.69 L1383.61 1209.69 L1383.03 1209.69 L1382.44 1209.69 L1381.85 1209.69 L1381.27 1209.69 L1380.68 1209.69 L1380.09 1209.69 L1379.51 1209.69 L1378.92 1209.69 L1378.34 1209.69 L1377.75 1209.69 L1377.16 1209.69 L1376.58 1209.69 L1375.99 1209.69 L1375.4 1209.69 L1374.82 1209.69 L1374.23 1209.69 L1373.64 1209.69 L1373.06 1209.69 L1372.47 1209.69 L1371.88 1209.69 L1371.3 1209.69 L1370.71 1209.69 L1370.13 1209.69 L1369.54 1209.69 L1368.95 1209.69 L1368.37 1209.69 L1367.78 1209.69 L1367.19 1209.69 L1366.61 1209.69 L1366.02 1209.69 L1365.43 1209.69 L1364.85 1209.69 L1364.26 1209.69 L1363.68 1209.69 L1363.09 1209.69 L1362.5 1209.69 L1361.92 1209.69 L1361.33 1209.69 L1360.74 1209.69 L1360.16 1209.69 L1359.57 1209.69 L1358.98 1209.69 L1358.4 1209.69 L1357.81 1209.69 L1357.22 1209.69 L1356.64 1209.69 L1356.05 1209.69 L1355.47 1209.69 L1354.88 1209.69 L1354.29 1209.69 L1353.71 1209.69 L1353.12 1209.69 L1352.53 1209.69 L1351.95 1209.69 L1351.36 1209.69 L1350.77 1209.69 L1350.19 1209.69 L1349.6 1209.69 L1349.01 1209.69 L1348.43 1209.69 L1347.84 1209.69 L1347.26 1209.69 L1346.67 1209.69 L1346.08 1209.69 L1345.5 1209.69 L1344.91 1209.69 L1344.32 1209.69 L1343.74 1209.69 L1343.15 1209.69 L1342.56 1209.69 L1341.98 1209.69 L1341.39 1209.69 L1340.8 1209.69 L1340.22 1209.69 L1339.63 1209.69 L1339.05 1209.69 L1338.46 1209.69 L1337.87 1209.69 L1337.29 1209.69 L1336.7 1209.69 L1336.11 1209.69 L1335.53 1209.69 L1334.94 1209.69 L1334.35 1209.69 L1333.77 1209.69 L1333.18 1209.69 L1332.6 1209.69 L1332.01 1209.69 L1331.42 1209.69 L1330.84 1209.69 L1330.25 1209.69 L1329.66 1209.69 L1329.08 1209.69 L1328.49 1209.69 L1327.9 1209.69 L1327.32 1209.69 L1326.73 1209.69 L1326.14 1209.69 L1325.56 1209.69 L1324.97 1209.69 L1324.39 1209.69 L1323.8 1209.69 L1323.21 1209.69 L1322.63 1209.69 L1322.04 1209.69 L1321.45 1209.69 L1320.87 1209.69 L1320.28 1209.69 L1319.69 1209.69 L1319.11 1209.69 L1318.52 1209.69 L1317.93 1209.69 L1317.35 1209.69 L1316.76 1209.69 L1316.18 1209.69 L1315.59 1209.69 L1315 1209.69 L1314.42 1209.69 L1313.83 1209.69 L1313.24 1209.69 L1312.66 1209.69 L1312.07 1209.69 L1311.48 1209.69 L1310.9 1209.69 L1310.31 1209.69 L1309.73 1209.69 L1309.14 1209.69 L1308.55 1209.69 L1307.97 1209.69 L1307.38 1209.69 L1306.79 1209.69 L1306.21 1209.69 L1305.62 1209.69 L1305.03 1209.69 L1304.45 1209.69 L1303.86 1209.69 L1303.27 1209.69 L1302.69 1209.69 L1302.1 1209.69 L1301.52 1209.69 L1300.93 1209.69 L1300.34 1209.69 L1299.76 1209.69 L1299.17 1209.69 L1298.58 1209.69 L1298 1209.69 L1297.41 1209.69 L1296.82 1209.69 L1296.24 1209.69 L1295.65 1209.69 L1295.06 1209.69 L1294.48 1209.69 L1293.89 1209.69 L1293.31 1209.69 L1292.72 1209.69 L1292.13 1209.69 L1291.55 1209.69 L1290.96 1209.69 L1290.37 1209.69 L1289.79 1209.69 L1289.2 1209.69 L1288.61 1209.69 L1288.03 1209.69 L1287.44 1209.69 L1286.86 1209.69 L1286.27 1209.69 L1285.68 1209.69 L1285.1 1209.69 L1284.51 1209.69 L1283.92 1209.69 L1283.34 1209.69 L1282.75 1209.69 L1282.16 1209.69 L1281.58 1209.69 L1280.99 1209.69 L1280.4 1209.69 L1279.82 1209.69 L1279.23 1209.69 L1278.65 1209.69 L1278.06 1209.69 L1277.47 1209.69 L1276.89 1209.69 L1276.3 1209.69 L1275.71 1209.69 L1275.13 1209.69 L1274.54 1209.69 L1273.95 1209.69 L1273.37 1209.69 L1272.78 1209.69 L1272.19 1209.69 L1271.61 1209.69 L1271.02 1209.69 L1270.44 1209.69 L1269.85 1209.69 L1269.26 1209.69 L1268.68 1209.69 L1268.09 1209.69 L1267.5 1209.69 L1266.92 1209.69 L1266.33 1209.69 L1265.74 1209.69 L1265.16 1209.69 L1264.57 1209.69 L1263.98 1209.69 L1263.4 1209.69 L1262.81 1209.69 L1262.23 1209.69 L1261.64 1209.69 L1261.05 1209.69 L1260.47 1209.69 L1259.88 1209.69 L1259.29 1209.69 L1258.71 1209.69 L1258.12 1209.69 L1257.53 1209.69 L1256.95 1209.69 L1256.36 1209.69 L1255.78 1209.69 L1255.19 1209.69 L1254.6 1209.69 L1254.02 1209.69 L1253.43 1209.69 L1252.84 1209.69 L1252.26 1209.69 L1251.67 1209.69 L1251.08 1209.69 L1250.5 1209.69 L1249.91 1209.69 L1249.32 1209.69 L1248.74 1209.69 L1248.15 1209.69 L1247.57 1209.69 L1246.98 1209.69 L1246.39 1209.69 L1245.81 1209.69 L1245.22 1209.69 L1244.63 1209.69 L1244.05 1209.69 L1243.46 1209.69 L1242.87 1209.69 L1242.29 1209.69 L1241.7 1209.69 L1241.11 1209.69 L1240.53 1209.69 L1239.94 1209.69 L1239.36 1209.69 L1238.77 1209.69 L1238.18 1209.69 L1237.6 1209.69 L1237.01 1209.69 L1236.42 1209.69 L1235.84 1209.69 L1235.25 1209.69 L1234.66 1209.69 L1234.08 1209.69 L1233.49 1209.69 L1232.91 1209.69 L1232.32 1209.69 L1231.73 1209.69 L1231.15 1209.69 L1230.56 1209.69 L1229.97 1209.69 L1229.39 1209.69 L1228.8 1209.69 L1228.21 1209.69 L1227.63 1209.69 L1227.04 1209.69 L1226.45 1209.69 L1225.87 1209.69 L1225.28 1209.69 L1224.7 1209.69 L1224.11 1209.69 L1223.52 1209.69 L1222.94 1209.69 L1222.35 1209.69 L1221.76 1209.69 L1221.18 1209.69 L1220.59 1209.69 L1220 1209.69 L1219.42 1209.69 L1218.83 1209.69 L1218.24 1209.69 L1217.66 1209.69 L1217.07 1209.69 L1216.49 1209.69 L1215.9 1209.69 L1215.31 1209.69 L1214.73 1209.69 L1214.14 1209.69 L1213.55 1209.69 L1212.97 1209.69 L1212.38 1209.69 L1211.79 1209.69 L1211.21 1209.69 L1210.62 1209.69 L1210.03 1209.69 L1209.45 1209.69 L1208.86 1209.69 L1208.28 1209.69 L1207.69 1209.69 L1207.1 1209.69 L1206.52 1209.69 L1205.93 1209.69 L1205.34 1209.69 L1204.76 1209.69 L1204.17 1209.69 L1203.58 1209.69 L1203 1209.69 L1202.41 1209.69 L1201.83 1209.69 L1201.24 1209.69 L1200.65 1209.69 L1200.07 1209.69 L1199.48 1209.69 L1198.89 1209.69 L1198.31 1209.69 L1197.72 1209.69 L1197.13 1209.69 L1196.55 1209.69 L1195.96 1209.69 L1195.37 1209.69 L1194.79 1209.69 L1194.2 1209.69 L1193.62 1209.69 L1193.03 1209.69 L1192.44 1209.69 L1191.86 1209.69 L1191.27 1209.69 L1190.68 1209.69 L1190.1 1209.69 L1189.51 1209.69 L1188.92 1209.69 L1188.34 1209.69 L1187.75 1209.69 L1187.16 1209.69 L1186.58 1209.69 L1185.99 1209.69 L1185.41 1209.69 L1184.82 1209.69 L1184.23 1209.69 L1183.65 1209.69 L1183.06 1209.69 L1182.47 1209.69 L1181.89 1209.69 L1181.3 1209.69 L1180.71 1209.69 L1180.13 1209.69 L1179.54 1209.69 L1178.96 1209.69 L1178.37 1209.69 L1177.78 1209.69 L1177.2 1209.69 L1176.61 1209.69 L1176.02 1209.69 L1175.44 1209.69 L1174.85 1209.69 L1174.26 1209.69 L1173.68 1209.69 L1173.09 1209.69 L1172.5 1209.69 L1171.92 1209.69 L1171.33 1209.69 L1170.75 1209.69 L1170.16 1209.69 L1169.57 1209.69 L1168.99 1209.69 L1168.4 1209.69 L1167.81 1209.69 L1167.23 1209.69 L1166.64 1209.69 L1166.05 1209.69 L1165.47 1209.69 L1164.88 1209.69 L1164.29 1209.69 L1163.71 1209.69 L1163.12 1209.69 L1162.54 1209.69 L1161.95 1209.69 L1161.36 1209.69 L1160.78 1209.69 L1160.19 1209.69 L1159.6 1209.69 L1159.02 1209.69 L1158.43 1209.69 L1157.84 1209.69 L1157.26 1209.69 L1156.67 1209.69 L1156.09 1209.69 L1155.5 1209.69 L1154.91 1209.69 L1154.33 1209.69 L1153.74 1209.69 L1153.15 1209.69 L1152.57 1209.69 L1151.98 1209.69 L1151.39 1209.69 L1150.81 1209.69 L1150.22 1209.69 L1149.63 1209.69 L1149.05 1209.69 L1148.46 1209.69 L1147.88 1209.69 L1147.29 1209.69 L1146.7 1209.69 L1146.12 1209.69 L1145.53 1209.69 L1144.94 1209.69 L1144.36 1209.69 L1143.77 1209.69 L1143.18 1209.69 L1142.6 1209.69 L1142.01 1209.69 L1141.42 1209.69 L1140.84 1209.69 L1140.25 1209.69 L1139.67 1209.69 L1139.08 1209.69 L1138.49 1209.69 L1137.91 1209.69 L1137.32 1209.69 L1136.73 1209.69 L1136.15 1209.69 L1135.56 1209.69 L1134.97 1209.69 L1134.39 1209.69 L1133.8 1209.69 L1133.21 1209.69 L1132.63 1209.69 L1132.04 1209.69 L1131.46 1209.69 L1130.87 1209.69 L1130.28 1209.69 L1129.7 1209.69 L1129.11 1209.69 L1128.52 1209.69 L1127.94 1209.69 L1127.35 1209.69 L1126.76 1209.69 L1126.18 1209.69 L1125.59 1209.69 L1125.01 1209.69 L1124.42 1209.69 L1123.83 1209.69 L1123.25 1209.69 L1122.66 1209.69 L1122.07 1209.69 L1121.49 1209.69 L1120.9 1209.69 L1120.31 1209.69 L1119.73 1209.69 L1119.14 1209.69 L1118.55 1209.69 L1117.97 1209.69 L1117.38 1209.69 L1116.8 1209.69 L1116.21 1209.69 L1115.62 1209.69 L1115.04 1209.69 L1114.45 1209.69 L1113.86 1209.69 L1113.28 1209.69 L1112.69 1209.69 L1112.1 1209.69 L1111.52 1209.69 L1110.93 1209.69 L1110.34 1209.69 L1109.76 1209.69 L1109.17 1209.69 L1108.59 1209.69 L1108 1209.69 L1107.41 1209.69 L1106.83 1209.69 L1106.24 1209.69 L1105.65 1209.69 L1105.07 1209.69 L1104.48 1209.69 L1103.89 1209.69 L1103.31 1209.69 L1102.72 1209.69 L1102.14 1209.69 L1101.55 1209.69 L1100.96 1209.69 L1100.38 1209.69 L1099.79 1209.69 L1099.2 1209.69 L1098.62 1209.69 L1098.03 1209.69 L1097.44 1209.69 L1096.86 1209.69 L1096.27 1209.69 L1095.68 1209.69 L1095.1 1209.69 L1094.51 1209.69 L1093.93 1209.69 L1093.34 1209.69 L1092.75 1209.69 L1092.17 1209.69 L1091.58 1209.69 L1090.99 1209.69 L1090.41 1209.69 L1089.82 1209.69 L1089.23 1209.69 L1088.65 1209.69 L1088.06 1209.69 L1087.47 1209.69 L1086.89 1209.69 L1086.3 1209.69 L1085.72 1209.69 L1085.13 1209.69 L1084.54 1209.69 L1083.96 1209.69 L1083.37 1209.69 L1082.78 1209.69 L1082.2 1209.69 L1081.61 1209.69 L1081.02 1209.69 L1080.44 1209.69 L1079.85 1209.69 L1079.26 1209.69 L1078.68 1209.69 L1078.09 1209.69 L1077.51 1209.69 L1076.92 1209.69 L1076.33 1209.69 L1075.75 1209.69 L1075.16 1209.69 L1074.57 1209.69 L1073.99 1209.69 L1073.4 1209.69 L1072.81 1209.69 L1072.23 1209.69 L1071.64 1209.69 L1071.06 1209.69 L1070.47 1209.69 L1069.88 1209.69 L1069.3 1209.69 L1068.71 1209.69 L1068.12 1209.69 L1067.54 1209.69 L1066.95 1209.69 L1066.36 1209.69 L1065.78 1209.69 L1065.19 1209.69 L1064.6 1209.69 L1064.02 1209.69 L1063.43 1209.69 L1062.85 1209.69 L1062.26 1209.69 L1061.67 1209.69 L1061.09 1209.69 L1060.5 1209.69 L1059.91 1209.69 L1059.33 1209.69 L1058.74 1209.69 L1058.15 1209.69 L1057.57 1209.69 L1056.98 1209.69 L1056.39 1209.69 L1055.81 1209.69 L1055.22 1209.69 L1054.64 1209.69 L1054.05 1209.69 L1053.46 1209.69 L1052.88 1209.69 L1052.29 1209.69 L1051.7 1209.69 L1051.12 1209.69 L1050.53 1209.69 L1049.94 1209.69 L1049.36 1209.69 L1048.77 1209.69 L1048.19 1209.69 L1047.6 1209.69 L1047.01 1209.69 L1046.43 1209.69 L1045.84 1209.69 L1045.25 1209.69 L1044.67 1209.69 L1044.08 1209.69 L1043.49 1209.69 L1042.91 1209.69 L1042.32 1209.69 L1041.73 1209.69 L1041.15 1209.69 L1040.56 1209.69 L1039.98 1209.69 L1039.39 1209.69 L1038.8 1209.69 L1038.22 1209.69 L1037.63 1209.69 L1037.04 1209.69 L1036.46 1209.69 L1035.87 1209.69 L1035.28 1209.69 L1034.7 1209.69 L1034.11 1209.69 L1033.52 1209.69 L1032.94 1209.69 L1032.35 1209.69 L1031.77 1209.69 L1031.18 1209.69 L1030.59 1209.69 L1030.01 1209.69 L1029.42 1209.69 L1028.83 1209.69 L1028.25 1209.69 L1027.66 1209.69 L1027.07 1209.69 L1026.49 1209.69 L1025.9 1209.69 L1025.32 1209.69 L1024.73 1209.69 L1024.14 1209.69 L1023.56 1209.69 L1022.97 1209.69 L1022.38 1209.69 L1021.8 1209.69 L1021.21 1209.69 L1020.62 1209.69 L1020.04 1209.69 L1019.45 1209.69 L1018.86 1209.69 L1018.28 1209.69 L1017.69 1209.69 L1017.11 1209.69 L1016.52 1209.69 L1015.93 1209.69 L1015.35 1209.69 L1014.76 1209.69 L1014.17 1209.69 L1013.59 1209.69 L1013 1209.69 L1012.41 1209.69 L1011.83 1209.69 L1011.24 1209.69 L1010.65 1209.69 L1010.07 1209.69 L1009.48 1209.69 L1008.9 1209.69 L1008.31 1209.69 L1007.72 1209.69 L1007.14 1209.69 L1006.55 1209.69 L1005.96 1209.69 L1005.38 1209.69 L1004.79 1209.69 L1004.2 1209.69 L1003.62 1209.69 L1003.03 1209.69 L1002.44 1209.69 L1001.86 1209.69 L1001.27 1209.69 L1000.69 1209.69 L1000.1 1209.69 L999.513 1209.69 L998.926 1209.69 L998.34 1209.69 L997.754 1209.69 L997.167 1209.69 L996.581 1209.69 L995.994 1209.69 L995.408 1209.69 L994.822 1209.69 L994.235 1209.69 L993.649 1209.69 L993.062 1209.69 L992.476 1209.69 L991.889 1209.69 L991.303 1209.69 L990.717 1209.69 L990.13 1209.69 L989.544 1209.69 L988.957 1209.69 L988.371 1209.69 L987.785 1209.69 L987.198 1209.69 L986.612 1209.69 L986.025 1209.69  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1209.8 986.612,1209.8 987.198,1209.8 987.785,1209.8 988.371,1209.8 988.957,1209.8 989.544,1209.8 990.13,1209.8 990.717,1209.8 991.303,1209.8 991.889,1209.8 992.476,1209.8 993.062,1209.8 993.649,1209.8 994.235,1209.8 994.822,1209.8 995.408,1209.8 995.994,1209.8 996.581,1209.8 997.167,1209.8 997.754,1209.8 998.34,1209.8 998.926,1209.8 999.513,1209.8 1000.1,1209.8 1000.69,1209.8 1001.27,1209.8 1001.86,1209.8 1002.44,1209.8 1003.03,1209.8 1003.62,1209.8 1004.2,1209.8 1004.79,1209.8 1005.38,1209.8 1005.96,1209.8 1006.55,1209.8 1007.14,1209.8 1007.72,1209.8 1008.31,1209.8 1008.9,1209.8 1009.48,1209.8 1010.07,1209.8 1010.65,1209.8 1011.24,1209.8 1011.83,1209.8 1012.41,1209.8 1013,1209.8 1013.59,1209.8 1014.17,1209.8 1014.76,1209.8 1015.35,1209.8 1015.93,1209.8 1016.52,1209.8 1017.11,1209.8 1017.69,1209.8 1018.28,1209.8 1018.86,1209.8 1019.45,1209.8 1020.04,1209.8 1020.62,1209.8 1021.21,1209.8 1021.8,1209.8 1022.38,1209.8 1022.97,1209.8 1023.56,1209.8 1024.14,1209.8 1024.73,1209.8 1025.32,1209.8 1025.9,1209.8 1026.49,1209.8 1027.07,1209.8 1027.66,1209.8 1028.25,1209.8 1028.83,1209.8 1029.42,1209.8 1030.01,1209.8 1030.59,1209.8 1031.18,1209.8 1031.77,1209.8 1032.35,1209.8 1032.94,1209.8 1033.52,1209.8 1034.11,1209.8 1034.7,1209.8 1035.28,1209.8 1035.87,1209.8 1036.46,1209.8 1037.04,1209.8 1037.63,1209.8 1038.22,1209.8 1038.8,1209.8 1039.39,1209.8 1039.98,1209.8 1040.56,1209.8 1041.15,1209.8 1041.73,1209.8 1042.32,1209.8 1042.91,1209.8 1043.49,1209.8 1044.08,1209.8 1044.67,1209.8 1045.25,1209.8 1045.84,1209.8 1046.43,1209.8 1047.01,1209.8 1047.6,1209.8 1048.19,1209.8 1048.77,1209.8 1049.36,1209.8 1049.94,1209.8 1050.53,1209.8 1051.12,1209.8 1051.7,1209.8 1052.29,1209.8 1052.88,1209.8 1053.46,1209.8 1054.05,1209.8 1054.64,1209.8 1055.22,1209.8 1055.81,1209.8 1056.39,1209.8 1056.98,1209.8 1057.57,1209.8 1058.15,1209.8 1058.74,1209.8 1059.33,1209.8 1059.91,1209.8 1060.5,1209.8 1061.09,1209.8 1061.67,1209.8 1062.26,1209.8 1062.85,1209.8 1063.43,1209.8 1064.02,1209.8 1064.6,1209.8 1065.19,1209.8 1065.78,1209.8 1066.36,1209.8 1066.95,1209.8 1067.54,1209.8 1068.12,1209.8 1068.71,1209.8 1069.3,1209.8 1069.88,1209.8 1070.47,1209.8 1071.06,1209.8 1071.64,1209.8 1072.23,1209.8 1072.81,1209.8 1073.4,1209.8 1073.99,1209.8 1074.57,1209.8 1075.16,1209.8 1075.75,1209.8 1076.33,1209.8 1076.92,1209.8 1077.51,1209.8 1078.09,1209.8 1078.68,1209.8 1079.26,1209.8 1079.85,1209.8 1080.44,1209.8 1081.02,1209.8 1081.61,1209.8 1082.2,1209.8 1082.78,1209.8 1083.37,1209.8 1083.96,1209.8 1084.54,1209.8 1085.13,1209.8 1085.72,1209.8 1086.3,1209.8 1086.89,1209.8 1087.47,1209.8 1088.06,1209.8 1088.65,1209.8 1089.23,1209.8 1089.82,1209.8 1090.41,1209.8 1090.99,1209.8 1091.58,1209.8 1092.17,1209.8 1092.75,1209.8 1093.34,1209.8 1093.93,1209.8 1094.51,1209.8 1095.1,1209.8 1095.68,1209.8 1096.27,1209.8 1096.86,1209.8 1097.44,1209.8 1098.03,1209.8 1098.62,1209.8 1099.2,1209.8 1099.79,1209.8 1100.38,1209.8 1100.96,1209.8 1101.55,1209.8 1102.14,1209.8 1102.72,1209.8 1103.31,1209.8 1103.89,1209.8 1104.48,1209.8 1105.07,1209.8 1105.65,1209.8 1106.24,1209.8 1106.83,1209.8 1107.41,1209.8 1108,1209.8 1108.59,1209.8 1109.17,1209.8 1109.76,1209.8 1110.34,1209.8 1110.93,1209.8 1111.52,1209.8 1112.1,1209.8 1112.69,1209.8 1113.28,1209.8 1113.86,1209.8 1114.45,1209.8 1115.04,1209.8 1115.62,1209.8 1116.21,1209.8 1116.8,1209.8 1117.38,1209.8 1117.97,1209.8 1118.55,1209.8 1119.14,1209.8 1119.73,1209.8 1120.31,1209.8 1120.9,1209.8 1121.49,1209.8 1122.07,1209.8 1122.66,1209.8 1123.25,1209.8 1123.83,1209.8 1124.42,1209.8 1125.01,1209.8 1125.59,1209.8 1126.18,1209.8 1126.76,1209.8 1127.35,1209.8 1127.94,1209.8 1128.52,1209.8 1129.11,1209.8 1129.7,1209.8 1130.28,1209.8 1130.87,1209.8 1131.46,1209.8 1132.04,1209.8 1132.63,1209.8 1133.21,1209.8 1133.8,1209.8 1134.39,1209.8 1134.97,1209.8 1135.56,1209.8 1136.15,1209.8 1136.73,1209.8 1137.32,1209.8 1137.91,1209.8 1138.49,1209.8 1139.08,1209.8 1139.67,1209.8 1140.25,1209.8 1140.84,1209.8 1141.42,1209.8 1142.01,1209.8 1142.6,1209.8 1143.18,1209.8 1143.77,1209.8 1144.36,1209.8 1144.94,1209.8 1145.53,1209.8 1146.12,1209.8 1146.7,1209.8 1147.29,1209.8 1147.88,1209.8 1148.46,1209.8 1149.05,1209.8 1149.63,1209.8 1150.22,1209.8 1150.81,1209.8 1151.39,1209.8 1151.98,1209.8 1152.57,1209.8 1153.15,1209.8 1153.74,1209.8 1154.33,1209.8 1154.91,1209.8 1155.5,1209.8 1156.09,1209.8 1156.67,1209.8 1157.26,1209.8 1157.84,1209.8 1158.43,1209.8 1159.02,1209.8 1159.6,1209.8 1160.19,1209.8 1160.78,1209.8 1161.36,1209.8 1161.95,1209.8 1162.54,1209.8 1163.12,1209.8 1163.71,1209.8 1164.29,1209.8 1164.88,1209.8 1165.47,1209.8 1166.05,1209.8 1166.64,1209.8 1167.23,1209.8 1167.81,1209.8 1168.4,1209.8 1168.99,1209.8 1169.57,1209.8 1170.16,1209.8 1170.75,1209.8 1171.33,1209.8 1171.92,1209.8 1172.5,1209.8 1173.09,1209.8 1173.68,1209.8 1174.26,1209.8 1174.85,1209.8 1175.44,1209.8 1176.02,1209.8 1176.61,1209.8 1177.2,1209.8 1177.78,1209.8 1178.37,1209.8 1178.96,1209.8 1179.54,1209.8 1180.13,1209.8 1180.71,1209.8 1181.3,1209.8 1181.89,1209.8 1182.47,1209.8 1183.06,1209.8 1183.65,1209.8 1184.23,1209.8 1184.82,1209.8 1185.41,1209.8 1185.99,1209.8 1186.58,1209.8 1187.16,1209.8 1187.75,1209.8 1188.34,1209.8 1188.92,1209.8 1189.51,1209.8 1190.1,1209.8 1190.68,1209.8 1191.27,1209.8 1191.86,1209.8 1192.44,1209.8 1193.03,1209.8 1193.62,1209.8 1194.2,1209.8 1194.79,1209.8 1195.37,1209.8 1195.96,1209.8 1196.55,1209.8 1197.13,1209.8 1197.72,1209.8 1198.31,1209.8 1198.89,1209.8 1199.48,1209.8 1200.07,1209.8 1200.65,1209.8 1201.24,1209.8 1201.83,1209.8 1202.41,1209.8 1203,1209.8 1203.58,1209.8 1204.17,1209.8 1204.76,1209.8 1205.34,1209.8 1205.93,1209.8 1206.52,1209.8 1207.1,1209.8 1207.69,1209.8 1208.28,1209.8 1208.86,1209.8 1209.45,1209.8 1210.03,1209.8 1210.62,1209.8 1211.21,1209.8 1211.79,1209.8 1212.38,1209.8 1212.97,1209.8 1213.55,1209.8 1214.14,1209.8 1214.73,1209.8 1215.31,1209.8 1215.9,1209.8 1216.49,1209.8 1217.07,1209.8 1217.66,1209.8 1218.24,1209.8 1218.83,1209.8 1219.42,1209.8 1220,1209.8 1220.59,1209.8 1221.18,1209.8 1221.76,1209.8 1222.35,1209.8 1222.94,1209.8 1223.52,1209.8 1224.11,1209.8 1224.7,1209.8 1225.28,1209.8 1225.87,1209.8 1226.45,1209.8 1227.04,1209.8 1227.63,1209.8 1228.21,1209.8 1228.8,1209.8 1229.39,1209.8 1229.97,1209.8 1230.56,1209.8 1231.15,1209.8 1231.73,1209.8 1232.32,1209.8 1232.91,1209.8 1233.49,1209.8 1234.08,1209.8 1234.66,1209.8 1235.25,1209.8 1235.84,1209.8 1236.42,1209.8 1237.01,1209.8 1237.6,1209.8 1238.18,1209.8 1238.77,1209.8 1239.36,1209.8 1239.94,1209.8 1240.53,1209.8 1241.11,1209.8 1241.7,1209.8 1242.29,1209.8 1242.87,1209.8 1243.46,1209.8 1244.05,1209.8 1244.63,1209.8 1245.22,1209.8 1245.81,1209.8 1246.39,1209.8 1246.98,1209.8 1247.57,1209.8 1248.15,1209.8 1248.74,1209.8 1249.32,1209.8 1249.91,1209.8 1250.5,1209.8 1251.08,1209.8 1251.67,1209.8 1252.26,1209.8 1252.84,1209.8 1253.43,1209.8 1254.02,1209.8 1254.6,1209.8 1255.19,1209.8 1255.78,1209.8 1256.36,1209.8 1256.95,1209.8 1257.53,1209.8 1258.12,1209.8 1258.71,1209.8 1259.29,1209.8 1259.88,1209.8 1260.47,1209.8 1261.05,1209.8 1261.64,1209.8 1262.23,1209.8 1262.81,1209.8 1263.4,1209.8 1263.98,1209.8 1264.57,1209.8 1265.16,1209.8 1265.74,1209.8 1266.33,1209.8 1266.92,1209.8 1267.5,1209.8 1268.09,1209.8 1268.68,1209.8 1269.26,1209.8 1269.85,1209.8 1270.44,1209.8 1271.02,1209.8 1271.61,1209.8 1272.19,1209.8 1272.78,1209.8 1273.37,1209.8 1273.95,1209.8 1274.54,1209.8 1275.13,1209.8 1275.71,1209.8 1276.3,1209.8 1276.89,1209.8 1277.47,1209.8 1278.06,1209.8 1278.65,1209.8 1279.23,1209.8 1279.82,1209.8 1280.4,1209.8 1280.99,1209.8 1281.58,1209.8 1282.16,1209.8 1282.75,1209.8 1283.34,1209.8 1283.92,1209.8 1284.51,1209.8 1285.1,1209.8 1285.68,1209.8 1286.27,1209.8 1286.86,1209.8 1287.44,1209.8 1288.03,1209.8 1288.61,1209.8 1289.2,1209.8 1289.79,1209.8 1290.37,1209.8 1290.96,1209.8 1291.55,1209.8 1292.13,1209.8 1292.72,1209.8 1293.31,1209.8 1293.89,1209.8 1294.48,1209.8 1295.06,1209.8 1295.65,1209.8 1296.24,1209.8 1296.82,1209.8 1297.41,1209.8 1298,1209.8 1298.58,1209.8 1299.17,1209.8 1299.76,1209.8 1300.34,1209.8 1300.93,1209.8 1301.52,1209.8 1302.1,1209.8 1302.69,1209.8 1303.27,1209.8 1303.86,1209.8 1304.45,1209.8 1305.03,1209.8 1305.62,1209.8 1306.21,1209.8 1306.79,1209.8 1307.38,1209.8 1307.97,1209.8 1308.55,1209.8 1309.14,1209.8 1309.73,1209.8 1310.31,1209.8 1310.9,1209.8 1311.48,1209.8 1312.07,1209.8 1312.66,1209.8 1313.24,1209.8 1313.83,1209.8 1314.42,1209.8 1315,1209.8 1315.59,1209.8 1316.18,1209.8 1316.76,1209.8 1317.35,1209.8 1317.93,1209.8 1318.52,1209.8 1319.11,1209.8 1319.69,1209.8 1320.28,1209.8 1320.87,1209.8 1321.45,1209.8 1322.04,1209.8 1322.63,1209.8 1323.21,1209.8 1323.8,1209.8 1324.39,1209.8 1324.97,1209.8 1325.56,1209.8 1326.14,1209.8 1326.73,1209.8 1327.32,1209.8 1327.9,1209.8 1328.49,1209.8 1329.08,1209.8 1329.66,1209.8 1330.25,1209.8 1330.84,1209.8 1331.42,1209.8 1332.01,1209.8 1332.6,1209.8 1333.18,1209.8 1333.77,1209.8 1334.35,1209.8 1334.94,1209.8 1335.53,1209.8 1336.11,1209.8 1336.7,1209.8 1337.29,1209.8 1337.87,1209.8 1338.46,1209.8 1339.05,1209.8 1339.63,1209.8 1340.22,1209.8 1340.8,1209.8 1341.39,1209.8 1341.98,1209.8 1342.56,1209.8 1343.15,1209.8 1343.74,1209.8 1344.32,1209.8 1344.91,1209.8 1345.5,1209.8 1346.08,1209.8 1346.67,1209.8 1347.26,1209.8 1347.84,1209.8 1348.43,1209.8 1349.01,1209.8 1349.6,1209.8 1350.19,1209.8 1350.77,1209.8 1351.36,1209.8 1351.95,1209.8 1352.53,1209.8 1353.12,1209.8 1353.71,1209.8 1354.29,1209.8 1354.88,1209.8 1355.47,1209.8 1356.05,1209.8 1356.64,1209.8 1357.22,1209.8 1357.81,1209.8 1358.4,1209.8 1358.98,1209.8 1359.57,1209.8 1360.16,1209.8 1360.74,1209.8 1361.33,1209.8 1361.92,1209.8 1362.5,1209.8 1363.09,1209.8 1363.68,1209.8 1364.26,1209.8 1364.85,1209.8 1365.43,1209.8 1366.02,1209.8 1366.61,1209.8 1367.19,1209.8 1367.78,1209.8 1368.37,1209.8 1368.95,1209.8 1369.54,1209.8 1370.13,1209.8 1370.71,1209.8 1371.3,1209.8 1371.88,1209.8 1372.47,1209.8 1373.06,1209.8 1373.64,1209.8 1374.23,1209.8 1374.82,1209.8 1375.4,1209.8 1375.99,1209.8 1376.58,1209.8 1377.16,1209.8 1377.75,1209.8 1378.34,1209.8 1378.92,1209.8 1379.51,1209.8 1380.09,1209.8 1380.68,1209.8 1381.27,1209.8 1381.85,1209.8 1382.44,1209.8 1383.03,1209.8 1383.61,1209.8 1384.2,1209.8 1384.79,1209.8 1385.37,1209.8 1385.96,1209.8 1386.55,1209.8 1387.13,1209.8 1387.72,1209.8 1388.3,1209.8 1388.89,1209.8 1389.48,1209.8 1390.06,1209.8 1390.65,1209.8 1391.24,1209.8 1391.82,1209.8 1392.41,1209.8 1393,1209.8 1393.58,1209.8 1394.17,1209.8 1394.75,1209.8 1395.34,1209.8 1395.93,1209.8 1396.51,1209.8 1397.1,1209.8 1397.69,1209.8 1398.27,1209.8 1398.86,1209.8 1399.45,1209.8 1400.03,1209.8 1400.62,1209.8 1401.21,1209.8 1401.79,1209.8 1402.38,1209.8 1402.96,1209.8 1403.55,1209.8 1404.14,1209.8 1404.72,1209.8 1405.31,1209.8 1405.9,1209.8 1406.48,1209.8 1407.07,1209.8 1407.66,1209.8 1408.24,1209.8 1408.83,1209.8 1409.42,1209.8 1410,1209.8 1410.59,1209.8 1411.17,1209.8 1411.76,1209.8 1412.35,1209.8 1412.93,1209.8 1413.52,1209.8 1414.11,1209.8 1414.69,1209.8 1415.28,1209.8 1415.87,1209.8 1416.45,1209.8 1417.04,1209.8 1417.63,1209.8 1418.21,1209.8 1418.8,1209.8 1419.38,1209.8 1419.97,1209.8 1420.56,1209.8 1421.14,1209.8 1421.73,1209.8 1422.32,1209.8 1422.9,1209.8 1423.49,1209.8 1424.08,1209.8 1424.66,1209.8 1425.25,1209.8 1425.83,1209.8 1426.42,1209.8 1427.01,1209.8 1427.59,1209.8 1428.18,1209.8 1428.77,1209.8 1429.35,1209.8 1429.94,1209.8 1430.53,1209.8 1431.11,1209.8 1431.7,1209.8 1432.29,1209.8 1432.87,1209.8 1433.46,1209.8 1434.04,1209.8 1434.63,1209.8 1435.22,1209.8 1435.8,1209.8 1436.39,1209.8 1436.98,1209.8 1437.56,1209.8 1438.15,1209.8 1438.74,1209.8 1439.32,1209.8 1439.91,1209.8 1440.5,1209.8 1441.08,1209.8 1441.67,1209.8 1442.25,1209.8 1442.84,1209.8 1443.43,1209.8 1444.01,1209.8 1444.6,1209.8 1445.19,1209.8 1445.77,1209.8 1446.36,1209.8 1446.95,1209.8 1447.53,1209.8 1448.12,1209.8 1448.7,1209.8 1449.29,1209.8 1449.88,1209.8 1450.46,1209.8 1451.05,1209.8 1451.64,1209.8 1452.22,1209.8 1452.81,1209.8 1453.4,1209.8 1453.98,1209.8 1454.57,1209.8 1455.16,1209.8 1455.74,1209.8 1456.33,1209.8 1456.91,1209.8 1457.5,1209.8 1458.09,1209.8 1458.67,1209.8 1459.26,1209.8 1459.85,1209.8 1460.43,1209.8 1461.02,1209.8 1461.61,1209.8 1462.19,1209.8 1462.78,1209.8 1463.37,1209.8 1463.95,1209.8 1464.54,1209.8 1465.12,1209.8 1465.71,1209.8 1466.3,1209.8 1466.88,1209.8 1467.47,1209.8 1468.06,1209.8 1468.64,1209.8 1469.23,1209.8 1469.82,1209.8 1470.4,1209.8 1470.99,1209.8 1471.57,1209.8 1472.16,1209.8 1472.75,1209.8 1473.33,1209.8 1473.92,1209.8 1474.51,1209.8 1475.09,1209.8 1475.68,1209.8 1476.27,1209.8 1476.85,1209.8 1477.44,1209.8 1478.03,1209.8 1478.61,1209.8 1479.2,1209.8 1479.78,1209.8 1480.37,1209.8 1480.96,1209.8 1481.54,1209.8 1482.13,1209.8 1482.72,1209.8 1483.3,1209.8 1483.89,1209.8 1484.48,1209.8 1485.06,1209.8 1485.65,1209.8 1486.24,1209.8 1486.82,1209.8 1487.41,1209.8 1487.99,1209.8 1488.58,1209.8 1489.17,1209.8 1489.75,1209.8 1490.34,1209.8 1490.93,1209.8 1491.51,1209.8 1492.1,1209.8 1492.69,1209.8 1493.27,1209.8 1493.86,1209.8 1494.45,1209.8 1495.03,1209.8 1495.62,1209.8 1496.2,1209.8 1496.79,1209.8 1497.38,1209.8 1497.96,1209.8 1498.55,1209.8 1499.14,1209.8 1499.72,1209.8 1500.31,1209.8 1500.9,1209.8 1501.48,1209.8 1502.07,1209.8 1502.65,1209.8 1503.24,1209.8 1503.83,1209.8 1504.41,1209.8 1505,1209.8 1505.59,1209.8 1506.17,1209.8 1506.76,1209.8 1507.35,1209.8 1507.93,1209.8 1508.52,1209.8 1509.11,1209.8 1509.69,1209.8 1510.28,1209.8 1510.86,1209.8 1511.45,1209.8 1512.04,1209.8 1512.62,1209.8 1513.21,1209.8 1513.8,1209.8 1514.38,1209.8 1514.97,1209.8 1515.56,1209.8 1516.14,1209.8 1516.73,1209.8 1517.32,1209.8 1517.9,1209.8 1518.49,1209.8 1519.07,1209.8 1519.66,1209.8 1520.25,1209.8 1520.83,1209.8 1521.42,1209.8 1522.01,1209.8 1522.59,1209.8 1523.18,1209.8 1523.77,1209.8 1524.35,1209.8 1524.94,1209.8 1525.52,1209.8 1526.11,1209.8 1526.7,1209.8 1527.28,1209.8 1527.87,1209.8 1528.46,1209.8 1529.04,1209.8 1529.63,1209.8 1530.22,1209.8 1530.8,1209.8 1531.39,1209.8 1531.98,1209.8 1532.56,1209.8 1533.15,1209.8 1533.73,1209.8 1534.32,1209.8 1534.91,1209.8 1535.49,1209.8 1536.08,1209.8 1536.67,1209.8 1537.25,1209.8 1537.84,1209.8 1538.43,1209.8 1539.01,1209.8 1539.6,1209.8 1540.19,1209.8 1540.77,1209.8 1541.36,1209.8 1541.94,1209.8 1542.53,1209.8 1543.12,1209.8 1543.7,1209.8 1544.29,1209.8 1544.88,1209.8 1545.46,1209.8 1546.05,1209.8 1546.64,1209.8 1547.22,1209.8 1547.81,1209.8 1548.4,1209.8 1548.98,1209.8 1549.57,1209.8 1550.15,1209.8 1550.74,1209.8 1551.33,1209.8 1551.91,1209.8 1552.5,1209.8 1553.09,1209.8 1553.67,1209.8 1554.26,1209.8 1554.85,1209.8 1555.43,1209.8 1556.02,1209.8 1556.6,1209.8 1557.19,1209.8 1557.78,1209.8 1558.36,1209.8 1558.95,1209.8 1559.54,1209.8 1560.12,1209.8 1560.71,1209.8 1561.3,1209.8 1561.88,1209.8 1562.47,1209.8 1563.06,1209.8 1563.64,1209.8 1564.23,1209.8 1564.81,1209.8 1565.4,1209.8 1565.99,1209.8 1566.57,1209.8 1567.16,1209.8 1567.75,1209.8 1568.33,1209.8 1568.92,1209.8 1569.51,1209.8 1570.09,1209.8 1570.68,1209.8 1571.27,1209.8 1571.85,1209.8 1572.44,1209.8 1573.02,1209.8 1573.61,1209.8 1574.2,1209.8 1574.78,1209.8 1575.37,1209.8 1575.96,1209.8 1576.54,1209.8 1577.13,1209.8 1577.72,1209.8 1578.3,1209.8 1578.89,1209.8 1579.47,1209.8 1580.06,1209.8 1580.65,1209.8 1581.23,1209.8 1581.82,1209.8 1582.41,1209.8 1582.99,1209.8 1583.58,1209.8 1584.17,1209.8 1584.75,1209.8 1585.34,1209.8 1585.93,1209.8 1586.51,1209.8 1587.1,1209.8 1587.68,1209.8 1588.27,1209.8 1588.86,1209.8 1589.44,1209.8 1590.03,1209.8 1590.62,1209.8 1591.2,1209.8 1591.79,1209.8 1592.38,1209.8 1592.96,1209.8 1593.55,1209.8 1594.14,1209.8 1594.72,1209.8 1595.31,1209.8 1595.89,1209.8 1596.48,1209.8 1597.07,1209.8 1597.65,1209.8 1598.24,1209.8 1598.83,1209.8 1599.41,1209.8 1600,1209.8 1600.59,1209.8 1601.17,1209.8 1601.76,1209.8 1602.34,1209.8 1602.93,1209.8 1603.52,1209.8 1604.1,1209.8 1604.69,1209.8 1605.28,1209.8 1605.86,1209.8 1606.45,1209.8 1607.04,1209.8 1607.62,1209.8 1608.21,1209.8 1608.8,1209.8 1609.38,1209.8 1609.97,1209.8 1610.55,1209.8 1611.14,1209.8 1611.73,1209.8 1612.31,1209.8 1612.9,1209.8 1613.49,1209.8 1614.07,1209.8 1614.66,1209.8 1615.25,1209.8 1615.83,1209.8 1616.42,1209.8 1617.01,1209.8 1617.59,1209.8 1618.18,1209.8 1618.76,1209.8 1619.35,1209.8 1619.94,1209.8 1620.52,1209.8 1621.11,1209.8 1621.7,1209.8 1622.28,1209.8 1622.87,1209.8 1623.46,1209.8 1624.04,1209.8 1624.63,1209.8 1625.22,1209.8 1625.8,1209.8 1626.39,1209.8 1626.97,1209.8 1627.56,1209.8 1628.15,1209.8 1628.73,1209.8 1629.32,1209.8 1629.91,1209.8 1630.49,1209.8 1631.08,1209.8 1631.67,1209.8 1632.25,1209.8 1632.84,1209.8 1633.42,1209.8 1634.01,1209.8 1634.6,1209.8 1635.18,1209.8 1635.77,1209.8 1636.36,1209.8 1636.94,1209.8 1637.53,1209.8 1638.12,1209.8 1638.7,1209.8 1639.29,1209.8 1639.88,1209.8 1640.46,1209.8 1641.05,1209.8 1641.63,1209.8 1642.22,1209.8 1642.81,1209.8 1643.39,1209.8 1643.98,1209.8 1644.57,1209.8 1645.15,1209.8 1645.74,1209.8 1646.33,1209.8 1646.91,1209.8 1647.5,1209.8 1648.09,1209.8 1648.67,1209.8 1649.26,1209.8 1649.84,1209.8 1650.43,1209.8 1651.02,1209.8 1651.6,1209.8 1652.19,1209.8 1652.78,1209.8 1653.36,1209.8 1653.95,1209.8 1654.54,1209.8 1655.12,1209.8 1655.71,1209.8 1656.29,1209.8 1656.88,1209.8 1657.47,1209.8 1658.05,1209.8 1658.64,1209.8 1659.23,1209.8 1659.81,1209.8 1660.4,1209.8 1660.99,1209.8 1661.57,1209.8 1662.16,1209.8 1662.75,1209.8 1663.33,1209.8 1663.92,1209.8 1664.5,1209.8 1665.09,1209.8 1665.68,1209.8 1666.26,1209.8 1666.85,1209.8 1667.44,1209.8 1668.02,1209.8 1668.61,1209.8 1669.2,1209.8 1669.78,1209.8 1670.37,1209.8 1670.96,1209.8 1671.54,1209.8 1672.13,1209.8 1672.71,1209.8 1673.3,1209.8 1673.89,1209.8 1674.47,1209.8 1675.06,1209.8 1675.65,1209.8 1676.23,1209.8 1676.82,1209.8 1677.41,1209.8 1677.99,1209.8 1678.58,1209.8 1679.17,1209.8 1679.75,1209.8 1680.34,1209.8 1680.92,1209.8 1681.51,1209.8 1682.1,1209.8 1682.68,1209.8 1683.27,1209.8 1683.86,1209.8 1684.44,1209.8 1685.03,1209.8 1685.62,1209.8 1686.2,1209.8 1686.79,1209.8 1687.37,1209.8 1687.96,1209.8 1688.55,1209.8 1689.13,1209.8 1689.72,1209.8 1690.31,1209.8 1690.89,1209.8 1691.48,1209.8 1692.07,1209.8 1692.65,1209.8 1693.24,1209.8 1693.83,1209.8 1694.41,1209.8 1695,1209.8 1695.58,1209.8 1696.17,1209.8 1696.76,1209.8 1697.34,1209.8 1697.93,1209.8 1698.52,1209.8 1699.1,1209.8 1699.69,1209.8 1700.28,1209.8 1700.86,1209.8 1701.45,1209.8 1702.04,1209.8 1702.62,1209.8 1703.21,1209.8 1703.79,1209.8 1704.38,1209.8 1704.97,1209.8 1705.55,1209.8 1706.14,1209.8 1706.73,1209.8 1707.31,1209.8 1707.9,1209.8 1708.49,1209.8 1709.07,1209.8 1709.66,1209.8 1710.24,1209.8 1710.83,1209.8 1711.42,1209.8 1712,1209.8 1712.59,1209.8 1713.18,1209.8 1713.76,1209.8 1714.35,1209.8 1714.94,1209.8 1715.52,1209.8 1716.11,1209.8 1716.7,1209.8 1717.28,1209.8 1717.87,1209.8 1718.45,1209.8 1719.04,1209.8 1719.63,1209.8 1720.21,1209.8 1720.8,1209.8 1721.39,1209.8 1721.97,1209.8 1722.56,1209.8 1723.15,1209.8 1723.73,1209.8 1724.32,1209.8 1724.91,1209.8 1725.49,1209.8 1726.08,1209.8 1726.66,1209.8 1727.25,1209.8 1727.84,1209.8 1728.42,1209.8 1729.01,1209.8 1729.6,1209.8 1730.18,1209.8 1730.77,1209.8 1731.36,1209.8 1731.94,1209.8 1732.53,1209.8 1733.11,1209.8 1733.7,1209.8 1734.29,1209.8 1734.87,1209.8 1735.46,1209.8 1736.05,1209.8 1736.63,1209.8 1737.22,1209.8 1737.81,1209.8 1738.39,1209.8 1738.98,1209.8 1739.57,1209.8 1740.15,1209.8 1740.74,1209.8 1741.32,1209.8 1741.91,1209.8 1742.5,1209.8 1743.08,1209.8 1743.67,1209.8 1744.26,1209.8 1744.84,1209.8 1745.43,1209.8 1746.02,1209.8 1746.6,1209.8 1747.19,1209.8 1747.78,1209.8 1748.36,1209.8 1748.95,1209.8 1749.53,1209.8 1750.12,1209.8 1750.71,1209.8 1751.29,1209.8 1751.88,1209.8 1752.47,1209.8 1753.05,1209.8 1753.64,1209.8 1754.23,1209.8 1754.81,1209.8 1755.4,1209.8 1755.99,1209.8 1756.57,1209.8 1757.16,1209.8 1757.74,1209.8 1758.33,1209.8 1758.92,1209.8 1759.5,1209.8 1760.09,1209.8 1760.68,1209.8 1761.26,1209.8 1761.85,1209.8 1762.44,1209.8 1763.02,1209.8 1763.61,1209.8 1764.19,1209.8 1764.78,1209.8 1765.37,1209.8 1765.95,1209.8 1766.54,1209.8 1767.13,1209.8 1767.71,1209.8 1768.3,1209.8 1768.89,1209.8 1769.47,1209.8 1770.06,1209.8 1770.65,1209.8 1771.23,1209.8 1771.82,1209.8 1772.4,1209.8 1772.99,1209.8 1773.58,1209.8 1774.16,1209.8 1774.75,1209.8 1775.34,1209.8 1775.92,1209.8 1776.51,1209.8 1777.1,1209.8 1777.68,1209.8 1778.27,1209.8 1778.86,1209.8 1779.44,1209.8 1780.03,1209.8 1780.61,1209.8 1781.2,1209.8 1781.79,1209.8 1782.37,1209.8 1782.96,1209.8 1783.55,1209.8 1784.13,1209.8 1784.72,1209.8 1785.31,1209.8 1785.89,1209.8 1786.48,1209.8 1787.06,1209.8 1787.65,1209.8 1788.24,1209.8 1788.82,1209.8 1789.41,1209.8 1790,1209.8 1790.58,1209.8 1791.17,1209.8 1791.76,1209.8 1792.34,1209.8 1792.93,1209.8 1793.52,1209.8 1794.1,1209.8 1794.69,1209.8 1795.27,1209.8 1795.86,1209.8 1796.45,1209.8 1797.03,1209.8 1797.62,1209.8 1798.21,1209.8 1798.79,1209.8 1799.38,1209.8 1799.97,1209.8 1800.55,1209.8 1801.14,1209.8 1801.73,1209.8 1802.31,1209.8 1802.9,1209.8 1803.48,1209.8 1804.07,1209.8 1804.66,1209.8 1805.24,1209.8 1805.83,1209.8 1806.42,1209.8 1807,1209.8 1807.59,1209.8 1808.18,1209.8 1808.76,1209.8 1809.35,1209.8 1809.94,1209.8 1810.52,1209.8 1811.11,1209.8 1811.69,1209.8 1812.28,1209.8 1812.87,1209.8 1813.45,1209.8 1814.04,1209.8 1814.63,1209.8 1815.21,1209.8 1815.8,1209.8 1816.39,1209.8 1816.97,1209.8 1817.56,1209.8 1818.14,1209.8 1818.73,1209.8 1819.32,1209.8 1819.9,1209.8 1820.49,1209.8 1821.08,1209.8 1821.66,1209.8 1822.25,1209.8 1822.84,1209.8 1823.42,1209.8 1824.01,1209.8 1824.6,1209.8 1825.18,1209.8 1825.77,1209.8 1826.35,1209.8 1826.94,1209.8 1827.53,1209.8 1828.11,1209.8 1828.7,1209.8 1829.29,1209.8 1829.87,1209.8 1830.46,1209.8 1831.05,1209.8 1831.63,1209.8 1832.22,1209.8 1832.81,1209.8 1833.39,1209.8 1833.98,1209.8 1834.56,1209.8 1835.15,1209.8 1835.74,1209.8 1836.32,1209.8 1836.91,1209.8 1837.5,1209.8 1838.08,1209.8 1838.67,1209.8 1839.26,1209.8 1839.84,1209.8 1840.43,1209.8 1841.01,1209.8 1841.6,1209.8 1842.19,1209.8 1842.77,1209.8 1843.36,1209.8 1843.95,1209.8 1844.53,1209.8 1845.12,1209.8 1845.71,1209.8 1846.29,1209.8 1846.88,1209.8 1847.47,1209.8 1848.05,1209.8 1848.64,1209.8 1849.22,1209.8 1849.81,1209.8 1850.4,1209.8 1850.98,1209.8 1851.57,1209.8 1852.16,1209.8 1852.74,1209.8 1853.33,1209.8 1853.92,1209.8 1854.5,1209.8 1855.09,1209.8 1855.68,1209.8 1856.26,1209.8 1856.85,1209.8 1857.43,1209.8 1858.02,1209.8 1858.61,1209.8 1859.19,1209.8 1859.78,1209.8 1860.37,1209.8 1860.95,1209.8 1861.54,1209.8 1862.13,1209.8 1862.71,1209.8 1863.3,1209.8 1863.88,1209.8 1864.47,1209.8 1865.06,1209.8 1865.64,1209.8 1866.23,1209.8 1866.82,1209.8 1867.4,1209.8 1867.99,1209.8 1868.58,1209.8 1869.16,1209.8 1869.75,1209.8 1870.34,1209.8 1870.92,1209.8 1871.51,1209.8 1872.09,1209.8 1872.68,1209.8 1873.27,1209.8 1873.85,1209.8 1874.44,1209.8 1875.03,1209.8 1875.61,1209.8 1876.2,1209.8 1876.79,1209.8 1877.37,1209.8 1877.96,1209.8 1878.55,1209.8 1879.13,1209.8 1879.72,1209.8 1880.3,1209.8 1880.89,1209.8 1881.48,1209.8 1882.06,1209.8 1882.65,1209.8 1883.24,1209.8 1883.82,1209.8 1884.41,1209.8 1885,1209.8 1885.58,1209.8 1886.17,1209.8 1886.76,1209.8 1887.34,1209.8 1887.93,1209.8 1888.51,1209.8 1889.1,1209.8 1889.69,1209.8 1890.27,1209.8 1890.86,1209.8 1891.45,1209.8 1892.03,1209.8 1892.62,1209.8 1893.21,1209.8 1893.79,1209.8 1894.38,1209.8 1894.96,1209.8 1895.55,1209.8 1896.14,1209.8 1896.72,1209.8 1897.31,1209.8 1897.9,1209.8 1898.48,1209.8 1899.07,1209.8 1899.66,1209.8 1900.24,1209.8 1900.83,1209.8 1901.42,1209.8 1902,1209.8 1902.59,1209.8 1903.17,1209.8 1903.76,1209.8 1904.35,1209.8 1904.93,1209.8 1905.52,1209.8 1906.11,1209.8 1906.69,1209.8 1907.28,1209.8 1907.87,1209.8 1908.45,1209.8 1909.04,1209.8 1909.63,1209.8 1910.21,1209.8 1910.8,1209.8 1911.38,1209.8 1911.97,1209.8 1912.56,1209.8 1913.14,1209.8 1913.73,1209.8 1914.32,1209.8 1914.9,1209.8 1915.49,1209.8 1916.08,1209.8 1916.66,1209.8 1917.25,1209.8 1917.83,1209.8 1918.42,1209.8 1919.01,1209.8 1919.59,1209.8 1920.18,1209.8 1920.77,1209.8 1921.35,1209.8 1921.94,1209.8 1922.53,1209.8 1923.11,1209.8 1923.7,1209.8 1924.29,1209.8 1924.87,1209.8 1925.46,1209.8 1926.04,1209.8 1926.63,1209.8 1927.22,1209.8 1927.8,1209.8 1928.39,1209.8 1928.98,1209.8 1929.56,1209.8 1930.15,1209.8 1930.74,1209.8 1931.32,1209.8 1931.91,1209.8 1932.5,1209.8 1933.08,1209.8 1933.67,1209.8 1934.25,1209.8 1934.84,1209.8 1935.43,1209.8 1936.01,1209.8 1936.6,1209.8 1937.19,1209.8 1937.77,1209.8 1938.36,1209.8 1938.95,1209.8 1939.53,1209.8 1940.12,1209.8 1940.71,1209.8 1941.29,1209.8 1941.88,1209.8 1942.46,1209.8 1943.05,1209.8 1943.64,1209.8 1944.22,1209.8 1944.81,1209.8 1945.4,1209.8 1945.98,1209.8 1946.57,1209.8 1947.16,1209.8 1947.74,1209.8 1948.33,1209.8 1948.91,1209.8 1949.5,1209.8 1950.09,1209.8 1950.67,1209.8 1951.26,1209.8 1951.85,1209.8 1952.43,1209.8 1953.02,1209.8 1953.61,1209.8 1954.19,1209.8 1954.78,1209.8 1955.37,1209.8 1955.95,1209.8 1956.54,1209.8 1957.12,1209.8 1957.71,1209.8 1958.3,1209.8 1958.88,1209.8 1959.47,1209.8 1960.06,1209.8 1960.64,1209.8 1961.23,1209.8 1961.82,1209.8 1962.4,1209.8 1962.99,1209.8 1963.58,1209.8 1964.16,1209.8 1964.75,1209.8 1965.33,1209.8 1965.92,1209.8 1966.51,1209.8 1967.09,1209.8 1967.68,1209.8 1968.27,1209.8 1968.85,1209.8 1969.44,1209.8 1970.03,1209.8 1970.61,1209.8 1971.2,1209.8 1971.78,1209.8 1972.37,1209.8 1972.96,1209.8 1973.54,1209.8 1974.13,1209.8 1974.72,1209.8 1975.3,1209.8 1975.89,1209.8 1976.48,1209.8 1977.06,1209.8 1977.65,1209.8 1978.24,1209.8 1978.82,1209.8 1979.41,1209.8 1979.99,1209.8 1980.58,1209.8 1981.17,1209.8 1981.75,1209.8 1982.34,1209.8 1982.93,1209.8 1983.51,1209.8 1984.1,1209.8 1984.69,1209.8 1985.27,1209.8 1985.86,1209.8 1986.45,1209.8 1987.03,1209.8 1987.62,1209.8 1988.2,1209.8 1988.79,1209.8 1989.38,1209.8 1989.96,1209.8 1990.55,1209.8 1991.14,1209.8 1991.72,1209.8 1992.31,1209.8 1992.9,1209.8 1993.48,1209.8 1994.07,1209.8 1994.65,1209.8 1995.24,1209.8 1995.83,1209.8 1996.41,1209.8 1997,1209.8 1997.59,1209.8 1998.17,1209.8 1998.76,1209.8 1999.35,1209.8 1999.93,1209.8 2000.52,1209.8 2001.11,1209.8 2001.69,1209.8 2002.28,1209.8 2002.86,1209.8 2003.45,1209.8 2004.04,1209.8 2004.62,1209.8 2005.21,1209.8 2005.8,1209.8 2006.38,1209.8 2006.97,1209.8 2007.56,1209.8 2008.14,1209.8 2008.73,1209.8 2009.32,1209.8 2009.9,1209.8 2010.49,1209.8 2011.07,1209.8 2011.66,1209.8 2012.25,1209.8 2012.83,1209.8 2013.42,1209.8 2014.01,1209.8 2014.59,1209.8 2015.18,1209.8 2015.77,1209.8 2016.35,1209.8 2016.94,1209.8 2017.53,1209.8 2018.11,1209.8 2018.7,1209.8 2019.28,1209.8 2019.87,1209.8 2020.46,1209.8 2021.04,1209.8 2021.63,1209.8 2022.22,1209.8 2022.8,1209.8 2023.39,1209.8 2023.98,1209.8 2024.56,1209.8 2025.15,1209.8 2025.73,1209.8 2026.32,1209.8 2026.91,1209.8 2027.49,1209.8 2028.08,1209.8 2028.67,1209.8 2029.25,1209.8 2029.84,1209.8 2030.43,1209.8 2031.01,1209.8 2031.6,1209.8 2032.19,1209.8 2032.77,1209.8 2033.36,1209.8 2033.94,1209.8 2034.53,1209.8 2035.12,1209.8 2035.7,1209.8 2036.29,1209.8 2036.88,1209.8 2037.46,1209.8 2038.05,1209.8 2038.64,1209.8 2039.22,1209.8 2039.81,1209.8 2040.4,1209.8 2040.98,1209.8 2041.57,1209.8 2042.15,1209.8 2042.74,1209.8 2043.33,1209.8 2043.91,1209.8 2044.5,1209.8 2045.09,1209.8 2045.67,1209.8 2046.26,1209.8 2046.85,1209.8 2047.43,1209.8 2048.02,1209.8 2048.6,1209.8 2049.19,1209.8 2049.78,1209.8 2050.36,1209.8 2050.95,1209.8 2051.54,1209.8 2052.12,1209.8 2052.71,1209.8 2053.3,1209.8 2053.88,1209.8 2054.47,1209.8 2055.06,1209.8 2055.64,1209.8 2056.23,1209.8 2056.81,1209.8 2057.4,1209.8 2057.99,1209.8 2058.57,1209.8 2059.16,1209.8 2059.75,1209.8 2060.33,1209.8 2060.92,1209.8 2061.51,1209.8 2062.09,1209.8 2062.68,1209.8 2063.27,1209.8 2063.85,1209.8 2064.44,1209.8 2065.02,1209.8 2065.61,1209.8 2066.2,1209.8 2066.78,1209.8 2067.37,1209.8 2067.96,1209.8 2068.54,1209.8 2069.13,1209.8 2069.72,1209.8 2070.3,1209.8 2070.89,1209.8 2071.48,1209.8 2072.06,1209.8 2072.65,1209.8 2073.23,1209.8 2073.82,1209.8 2074.41,1209.8 2074.99,1209.8 2075.58,1209.8 2076.17,1209.8 2076.75,1209.8 2077.34,1209.8 2077.93,1209.8 2078.51,1209.8 2079.1,1209.8 2079.68,1209.8 2080.27,1209.8 2080.86,1209.8 2081.44,1209.8 2082.03,1209.8 2082.62,1209.8 2083.2,1209.8 2083.79,1209.8 2084.38,1209.8 2084.96,1209.8 2085.55,1209.8 2086.14,1209.8 2086.72,1209.8 2087.31,1209.8 2087.89,1209.8 2088.48,1209.8 2089.07,1209.8 2089.65,1209.8 2090.24,1209.8 2090.83,1209.8 2091.41,1209.8 2092,1209.8 2092.59,1209.8 2093.17,1209.8 2093.76,1209.8 2094.35,1209.8 2094.93,1209.8 2095.52,1209.8 2096.1,1209.8 2096.69,1209.8 2097.28,1209.8 2097.86,1209.8 2098.45,1209.8 2099.04,1209.8 2099.62,1209.8 2100.21,1209.8 2100.8,1209.8 2101.38,1209.8 2101.97,1209.8 2102.55,1209.8 2103.14,1209.8 2103.73,1209.8 2104.31,1209.8 2104.9,1209.8 2105.49,1209.8 2106.07,1209.8 2106.66,1209.8 2107.25,1209.8 2107.83,1209.8 2108.42,1209.8 2109.01,1209.8 2109.59,1209.8 2110.18,1209.8 2110.76,1209.8 2111.35,1209.8 2111.94,1209.8 2112.52,1209.8 2113.11,1209.8 2113.7,1209.8 2114.28,1209.8 2114.87,1209.8 2115.46,1209.8 2116.04,1209.8 2116.63,1209.8 2117.22,1209.8 2117.8,1209.8 2118.39,1209.8 2118.97,1209.8 2119.56,1209.8 2120.15,1209.8 2120.73,1209.8 2121.32,1209.8 2121.91,1209.8 2122.49,1209.8 2123.08,1209.8 2123.67,1209.8 2124.25,1209.8 2124.84,1209.8 2125.42,1209.8 2126.01,1209.8 2126.6,1209.8 2127.18,1209.8 2127.77,1209.8 2128.36,1209.8 2128.94,1209.8 2129.53,1209.8 2130.12,1209.8 2130.7,1209.8 2131.29,1209.8 2131.88,1209.8 2132.46,1209.8 2133.05,1209.8 2133.63,1209.8 2134.22,1209.8 2134.81,1209.8 2135.39,1209.8 2135.98,1209.8 2136.57,1209.8 2137.15,1209.8 2137.74,1209.8 2138.33,1209.8 2138.91,1209.8 2139.5,1209.8 2140.09,1209.8 2140.67,1209.8 2141.26,1209.8 2141.84,1209.8 2142.43,1209.8 2143.02,1209.8 2143.6,1209.8 2144.19,1209.8 2144.78,1209.8 2145.36,1209.8 2145.95,1209.8 2146.54,1209.8 2147.12,1209.8 2147.71,1209.8 2148.3,1209.8 2148.88,1209.8 2149.47,1209.8 2150.05,1209.8 2150.64,1209.8 2151.23,1209.8 2151.81,1209.8 2152.4,1209.8 2152.99,1209.8 2153.57,1209.8 2154.16,1209.8 2154.75,1209.8 2155.33,1209.8 2155.92,1209.8 2156.5,1209.8 2157.09,1209.8 2157.68,1209.8 2158.26,1209.8 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1563.02,1193.57 1399.93,899.083 \"/>\n<polyline clip-path=\"url(#clip312)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1225.49 985.439,1193.57 2158.26,1193.57 2158.26,1225.49 985.439,1225.49 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip310)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip310)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip313\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip310)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip310)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip310)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip313)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-8122.62 164.91,-7593.95 165.469,-8362.8 166.029,-9061.26 166.588,-9692.02 167.147,-10259.5 167.706,-10767.7 168.266,-11220.6 168.825,-11621.7 169.384,-11974.4 169.943,-12281.9 170.503,-12547.1 171.062,-12075.7 171.621,-12290.1 172.18,-12459.8 172.74,-12597.4 173.299,-12704.7 173.858,-12792.9 174.417,-12836.3 174.977,-12855 175.536,-12871 176.095,-12865.8 176.655,-12840.8 177.214,-12797.7 177.773,-12733.1 178.332,-12350.7 178.892,-11713.5 179.451,-11380.7 180.01,-11277.6 180.569,-11167.8 181.129,-10636.9 181.688,-10331.4 182.247,-10029.4 182.806,-9906.48 183.366,-9772.29 183.925,-9477.62 184.484,-9181.73 185.043,-9036.42 185.603,-8763.03 186.162,-8467.62 186.721,-8305.22 187.28,-7922.51 187.84,-7754.1 188.399,-7486.96 188.958,-7233.05 189.517,-6990.35 190.077,-6754.6 190.636,-6511.86 191.195,-6198.36 191.754,-5983.31 192.314,-5768.77 192.873,-5629.45 193.432,-5495.54 193.991,-5299.54 194.551,-5050.76 195.11,-4809.61 195.669,-4578.08 196.228,-4258.92 196.788,-4158.5 197.347,-4061.07 197.906,-3915.33 198.465,-3771.42 199.025,-3536.74 199.584,-3443.64 200.143,-3356.3 200.702,-3222.93 201.262,-3055.19 201.821,-2855.39 202.38,-2631.82 202.939,-2529.17 203.499,-2393.61 204.058,-2332.03 204.617,-2200.56 205.176,-2068.37 205.736,-1977.69 206.295,-1860.86 206.854,-1708.93 207.413,-1600.33 207.973,-1555.47 208.532,-1511.23 209.091,-1350.42 209.65,-1281.77 210.21,-1156.48 210.769,-1119.99 211.328,-1081.38 211.887,-1011.25 212.447,-974.344 213.006,-912.913 213.565,-850.708 214.124,-794.432 214.684,-713.234 215.243,-655.5 215.802,-621.623 216.361,-566.567 216.921,-507.081 217.48,-474.107 218.039,-421.528 218.598,-346.782 219.158,-273.9 219.717,-249.64 220.276,-180.221 220.835,-151.427 221.395,-101.191 221.954,-8.14367 222.513,13.5415 223.072,29.2114 223.632,93.01 224.191,175.498 224.75,253.282 225.309,266.686 225.869,318.732 226.428,328.279 226.987,421.049 227.546,427.982 228.106,453.551 228.665,459.286 229.224,487.201 229.783,535.105 230.343,561.436 230.902,605.544 231.461,610.486 232.02,653.606 232.58,692.081 233.139,747.901 233.698,745.809 234.257,785.781 234.817,786.904 235.376,766.774 235.935,766.969 236.494,785.718 237.054,801.182 237.613,857.369 238.172,911.642 238.731,924.368 239.291,975.922 239.85,970.999 240.409,988.029 240.968,1002.5 241.528,1013.24 242.087,1022.64 242.646,1016.13 243.205,974.367 243.765,1002.62 244.324,979.348 244.883,993.451 245.442,1008.78 246.002,1041.69 246.561,1052.79 247.12,1044.58 247.679,1058.7 248.239,1053.11 248.798,1048.41 249.357,1043.42 249.916,1037.5 250.476,1033.66 251.035,1029.94 251.594,1026.06 252.153,1024.08 252.713,1038.94 253.272,1105.02 253.831,1113.46 254.39,1124.21 254.95,1099.09 255.509,1092.69 256.068,1122 256.627,1083.21 257.187,1060.63 257.746,1037.08 258.305,1055 258.864,1054.31 259.424,1069.1 259.983,1098.24 260.542,1125.65 261.101,1149.25 261.661,1142.3 262.22,1164.12 262.779,1188.75 263.338,1193.94 263.898,1214.48 264.457,1234.95 265.016,1242.02 265.575,1224.69 266.135,1209.91 266.694,1199.26 267.253,1202.17 267.812,1189.49 268.372,1181.85 268.931,1168.72 269.49,1174.07 270.049,1182.35 270.609,1120.91 271.168,1113.57 271.727,1090.45 272.286,1116.08 272.846,1111.63 273.405,1118.81 273.964,1143.05 274.523,1114.77 275.083,1107.61 275.642,1116.45 276.201,1138.85 276.76,1110.52 277.32,1121.03 277.879,1148.64 278.438,1122.37 278.997,1151.16 279.557,1174.13 280.116,1181.39 280.675,1172.88 281.234,1192.36 281.794,1178.61 282.353,1166.91 282.912,1157.53 283.471,1164.38 284.031,1154.5 284.59,1162.53 285.149,1184.58 285.708,1170.91 286.268,1192.9 286.827,1164.14 287.386,1153.31 287.945,1142.53 288.505,1166.61 289.064,1139.58 289.623,1146.48 290.182,1183.56 290.742,1170.27 291.301,1142.05 291.86,1133.45 292.419,1106.23 292.979,1161.73 293.538,1148.01 294.097,1135.27 294.656,1143.22 295.216,1118.79 295.775,1093.71 296.334,1083.19 296.893,1089.02 297.453,1065.45 298.012,1055.79 298.571,1050.06 299.13,1006.4 299.69,1037.55 300.249,1015.76 300.808,1063.42 301.368,1007.54 301.927,1017.79 302.486,1092.67 303.045,1065.04 303.605,1125.18 304.164,1133.75 304.723,1172.96 305.282,1143.27 305.842,1160.74 306.401,1130.32 306.96,1150.65 307.519,1141.34 308.079,1112.74 308.638,1114.72 309.197,1136.28 309.756,1113.57 310.316,1118.98 310.875,1073.18 311.434,1062.13 311.993,1056.69 312.553,1016.87 313.112,1024.35 313.671,1017.35 314.23,1009.33 314.79,985.097 315.349,998.463 315.908,1010.87 316.467,1018.47 317.027,979.66 317.586,957.467 318.145,923.537 318.704,939.583 319.264,937.275 319.823,915.276 320.382,927.166 320.941,921.716 321.501,953.306 322.06,948.818 322.619,959.977 323.178,954.184 323.738,970.912 324.297,949.482 324.856,945.546 325.415,943.864 325.975,944.225 326.534,923.81 327.093,937.901 327.652,966.643 328.212,976.549 328.771,990.921 329.33,989.043 329.889,997.302 330.449,975.455 331.008,953.388 331.567,966.899 332.126,914.183 332.686,894.104 333.245,894.875 333.804,895.424 334.363,892.583 334.923,860.916 335.482,881.97 336.041,864.935 336.6,868.195 337.16,851.994 337.719,916.336 338.278,928.545 338.837,955.229 339.397,965.681 339.956,995.396 340.515,974.774 341.074,952.596 341.634,963.565 342.193,1007.73 342.752,1001.57 343.311,959.681 343.871,952.369 344.43,930.255 344.989,943.328 345.548,943.183 346.108,941.849 346.667,984.83 347.226,958.29 347.785,984.445 348.345,1022.81 348.904,1015.17 349.463,992.77 350.022,968.807 350.582,948.26 351.141,927.175 351.7,922.004 352.259,917.036 352.819,936.84 353.378,927.805 353.937,906.035 354.496,919.721 355.056,881.288 355.615,895.399 356.174,875.434 356.733,902.144 357.293,896.293 357.852,876.017 358.411,857.069 358.97,873.362 359.53,905.025 360.089,887.391 360.648,863.247 361.207,896.282 361.767,894.079 362.326,875.03 362.885,885.659 363.444,883.483 364.004,863.415 364.563,877.22 365.122,859.085 365.681,892.474 366.241,918.928 366.8,898.445 367.359,907.887 367.918,868.493 368.478,869.441 369.037,867.909 369.596,893.843 370.155,872.837 370.715,884.759 371.274,866.046 371.833,894.405 372.392,895.272 372.952,922.967 373.511,885.983 374.07,884.469 374.629,929.514 375.189,958.046 375.748,948.815 376.307,954.67 376.866,945.719 377.426,905.984 377.985,852.924 378.544,852.631 379.103,833.356 379.663,817.463 380.222,817.678 380.781,784.021 381.34,799.186 381.9,800.431 382.459,798.719 383.018,798.311 383.577,833.52 384.137,797.913 384.696,782.981 385.255,770.195 385.814,789.25 386.374,776.209 386.933,779.467 387.492,779.641 388.051,766.027 388.611,769.041 389.17,768.856 389.729,772.646 390.288,790.568 390.848,775.002 391.407,777.785 391.966,812.957 392.525,831.088 393.085,817.209 393.644,833.743 394.203,850.511 394.762,865.551 395.322,862.099 395.881,858.874 396.44,890.571 396.999,872.546 397.559,884.643 398.118,876.339 398.677,875.171 399.236,891.297 399.796,904.311 400.355,912.826 400.914,906.715 401.473,947.821 402.033,920.784 402.592,910.177 403.151,887.291 403.71,864.256 404.27,859.738 404.829,859.167 405.388,902.185 405.947,910.241 406.507,873.916 407.066,869.088 407.625,891.725 408.184,900.771 408.744,908.007 409.303,884.603 409.862,894.662 410.421,906.118 410.981,880.591 411.54,874.819 412.099,853.798 412.658,850.353 413.218,846.993 413.777,860.933 414.336,894.04 414.895,902.303 415.455,880.324 416.014,859.416 416.573,853.579 417.132,819.01 417.692,830.638 418.251,809.136 418.81,797.427 419.369,794.217 419.929,794.11 420.488,825.08 421.047,825.449 421.606,839.904 422.166,852.846 422.725,844.579 423.284,842.844 423.843,875.057 424.403,854.067 424.962,852.636 425.521,879.482 426.08,873.401 426.64,886.094 427.199,879.722 427.758,878.872 428.318,859.489 428.877,840.864 429.436,819.289 429.995,818.799 430.555,832.583 431.114,810.192 431.673,824.774 432.232,818.436 432.792,769.667 433.351,752.297 433.91,753.414 434.469,721.088 435.029,706.58 435.588,694.478 436.147,713.775 436.706,720.142 437.266,724.249 437.825,726.391 438.384,728.081 438.943,744.94 439.503,730.404 440.062,731.804 440.621,718.359 441.18,737.656 441.74,756.886 442.299,772.584 442.858,786.003 443.417,754.269 443.977,759.554 444.536,793.195 445.095,790.477 445.654,802.785 446.214,814.866 446.773,812.432 447.332,811.865 447.891,795.227 448.451,793.928 449.01,774.558 449.569,789.494 450.128,756.883 450.688,773.883 451.247,807.714 451.806,786.288 452.365,785.292 452.925,785.045 453.484,781.71 454.043,780.558 454.602,761.389 455.162,809.995 455.721,824.543 456.28,816.808 456.839,847.715 457.399,888.34 457.958,892.24 458.517,933.983 459.076,924.276 459.636,931.802 460.195,924.482 460.754,897.612 461.313,886.222 461.873,861.568 462.432,870.742 462.991,847.691 463.55,856.9 464.11,817.671 464.669,799.078 465.228,794.452 465.787,792.207 466.347,772.811 466.906,757.611 467.465,741.313 468.024,721.306 468.584,687.854 469.143,676.155 469.702,630.115 470.261,619.808 470.821,670.913 471.38,657.268 471.939,661.187 472.498,665.466 473.058,669.604 473.617,672.431 474.176,677.127 474.735,682.878 475.295,687.58 475.854,738.834 476.413,725.064 476.972,742.16 477.532,725.114 478.091,760.098 478.65,760.272 479.209,744.833 479.769,757.242 480.328,759.522 480.887,720.817 481.446,706.865 482.006,694.91 482.565,697.534 483.124,695.696 483.683,683.602 484.243,717.668 484.802,752.093 485.361,752.177 485.92,735.828 486.48,704.617 487.039,687.714 487.598,658.913 488.157,664.001 488.717,667.932 489.276,670.386 489.835,689.049 490.394,720.845 490.954,721.712 491.513,688.588 492.072,693.054 492.631,697.487 493.191,701.8 493.75,754.082 494.309,741.359 494.868,708.221 495.428,743.693 495.987,746.63 496.546,748.071 497.105,731.689 497.665,733.083 498.224,715.655 498.783,716.199 499.342,721.467 499.902,736.678 500.461,771.723 501.02,789.9 501.579,788.745 502.139,738.646 502.698,739.483 503.257,756.042 503.816,773.844 504.376,821.922 504.935,849.979 505.494,830.44 506.053,822.944 506.613,798.881 507.172,776.567 507.731,761.349 508.29,774.407 508.85,756.821 509.409,757.907 509.968,773.637 510.527,824.218 511.087,819.6 511.646,812.054 512.205,807.656 512.764,785.917 513.324,798.263 513.883,778.552 514.442,774.457 515.001,773.662 515.561,770.185 516.12,768.102 516.679,751.539 517.238,748.292 517.798,746.598 518.357,759.354 518.916,756.577 519.475,690.94 520.035,660.182 520.594,630.063 521.153,668.872 521.712,669.726 522.272,686.152 522.831,671.091 523.39,677.027 523.949,677.471 524.509,676.438 525.068,699.055 525.627,701.42 526.186,738.804 526.746,707.035 527.305,704.365 527.864,718.248 528.423,734.63 528.983,767.401 529.542,761.734 530.101,760.794 530.66,773.803 531.22,771.618 531.779,772.22 532.338,768.382 532.897,751.815 533.457,745.921 534.016,729.687 534.575,712.009 535.134,726.987 535.694,727.471 536.253,709.15 536.812,693.565 537.371,692.319 537.931,694.035 538.49,712.343 539.049,698.434 539.608,682.799 540.168,618.918 540.727,625.816 541.286,630.499 541.845,633.298 542.405,635.809 542.964,639.784 543.523,660.637 544.082,711.312 544.642,710.237 545.201,727.629 545.76,758.812 546.319,755.928 546.879,738.663 547.438,718.851 547.997,700.683 548.556,698.268 549.116,729.982 549.675,726.705 550.234,709.947 550.793,756.502 551.353,755.539 551.912,739.841 552.471,720.964 553.031,718.743 553.59,703.239 554.149,720.421 554.708,718.126 555.268,717.123 555.827,766.45 556.386,763.739 556.945,729.641 557.505,713.336 558.064,744.14 558.623,746.323 559.182,745.285 559.742,711.544 560.301,726.848 560.86,758.725 561.419,739.646 561.979,754.261 562.538,751.997 563.097,765.945 563.656,747.075 564.216,760.16 564.775,760.152 565.334,791.46 565.893,805.84 566.453,818.13 567.012,830.153 567.571,810.8 568.13,787.35 568.69,783.905 569.249,779.005 569.808,794.543 570.367,806.247 570.927,804.385 571.486,797.631 572.045,778.462 572.604,759.036 573.164,724.388 573.723,738.743 574.282,722.193 574.841,736.896 575.401,751.318 575.96,748.022 576.519,726.623 577.078,745.951 577.638,713.467 578.197,727.521 578.756,725.517 579.315,725.552 579.875,690.619 580.434,727.659 580.993,725.855 581.552,740.405 582.112,739.942 582.671,692.302 583.23,673.785 583.789,693.089 584.349,696.137 584.908,693.021 585.467,710.192 586.026,709.852 586.586,675.877 587.145,693.873 587.704,675.307 588.263,664.004 588.823,664.269 589.382,681.41 589.941,682.227 590.5,686.458 591.06,686.916 591.619,673.251 592.178,691.642 592.737,708.209 593.297,706.067 593.856,706.587 594.415,692.507 594.974,709.168 595.534,690.79 596.093,644.381 596.652,647.065 597.211,651.462 597.771,689.645 598.33,707.202 598.889,724.651 599.448,743.297 600.008,710.466 600.567,694.428 601.126,696.691 601.685,694.128 602.245,713.102 602.804,715.956 603.363,698.536 603.922,720.024 604.482,749.718 605.041,764.691 605.6,759.127 606.159,788.647 606.719,753.763 607.278,748.922 607.837,730.867 608.396,744.491 608.956,740.377 609.515,740.489 610.074,772.5 610.633,768.167 611.193,732.549 611.752,760.62 612.311,722.64 612.87,736.969 613.43,721.367 613.989,735.885 614.548,714.37 615.107,729.408 615.667,729.545 616.226,679.364 616.785,677.542 617.344,662.795 617.904,665.441 618.463,650.445 619.022,672.068 619.581,689.34 620.141,690.268 620.7,661.121 621.259,648.188 621.818,651.673 622.378,683.813 622.937,685.86 623.496,722.059 624.055,722.507 624.615,702.542 625.174,704.291 625.733,692.951 626.292,678.841 626.852,679.219 627.411,677.375 627.97,664.693 628.529,636.307 629.089,621.091 629.648,644.139 630.207,630.918 630.766,682.817 631.326,700.024 631.885,735.182 632.444,734.467 633.003,764.894 633.563,742.962 634.122,741.685 634.681,721.239 635.24,721.989 635.8,705.737 636.359,691.566 636.918,707.445 637.477,740.371 638.037,738.402 638.596,751.968 639.155,814.72 639.714,794.87 640.274,739.533 640.833,737.751 641.392,735.686 641.951,749.796 642.511,728.431 643.07,723.974 643.629,738.408 644.188,753.858 644.748,749.287 645.307,729.749 645.866,693.735 646.425,711.479 646.985,695.988 647.544,649.529 648.103,652.129 648.662,636.005 649.222,638.89 649.781,670.817 650.34,674.682 650.899,691.215 651.459,688.631 652.018,689.441 652.577,657.506 653.136,692.382 653.696,676.968 654.255,709.665 654.814,707.172 655.373,691.85 655.933,691.121 656.492,694.231 657.051,690.87 657.61,711.134 658.17,677.627 658.729,693.103 659.288,659.653 659.847,676.774 660.407,692.576 660.966,677.008 661.525,692.81 662.084,695.938 662.644,699.47 663.203,682.179 663.762,698.529 664.321,681.716 664.881,700.011 665.44,686.213 665.999,619.723 666.558,623.956 667.118,660.047 667.677,662.723 668.236,666.42 668.795,667.505 669.355,637.068 669.914,674.191 670.473,662.162 671.032,715.752 671.592,715.557 672.151,718.147 672.71,734.611 673.269,778.519 673.829,772.887 674.388,756.353 674.947,774.07 675.506,769.971 676.066,769.991 676.625,768.792 677.184,748.29 677.743,758.286 678.303,740.754 678.862,737.988 679.421,752.659 679.981,749.777 680.54,748.801 681.099,715.455 681.658,716.608 682.218,683.688 682.777,701.418 683.336,731.634 683.895,711.878 684.455,726.41 685.014,724.962 685.573,739.209 686.132,769.059 686.692,779.655 687.251,792.779 687.81,836.757 688.369,832.277 688.929,777.277 689.488,738.872 690.047,716.731 690.606,700.266 691.166,718.364 691.725,716.061 692.284,730.718 692.843,729.671 693.403,710.23 693.962,728.555 694.521,739.855 695.08,704.855 695.64,720.501 696.199,719.228 696.758,720.848 697.317,719.069 697.877,714.485 698.436,728.148 698.995,726.67 699.554,740.547 700.114,754.326 700.673,732.413 701.232,715.841 701.791,711.354 702.351,690.484 702.91,642.798 703.469,632.712 704.028,652.026 704.588,685.841 705.147,668.753 705.706,656.885 706.265,657.396 706.825,644.233 707.384,644.89 707.943,649.996 708.502,635.284 709.062,638.512 709.621,655.146 710.18,688.998 710.739,705.167 711.299,721.397 711.858,719.881 712.417,737.486 712.976,705.559 713.536,704.807 714.095,718.38 714.654,717.442 715.213,746.683 715.773,712.749 716.332,699.695 716.891,684.724 717.45,702.256 718.01,702.568 718.569,736.506 719.128,720.41 719.687,735.926 720.247,716.393 720.806,716.936 721.365,763.134 721.924,742.659 722.484,738.378 723.043,719.718 723.602,703.311 724.161,705.922 724.721,712.42 725.28,713.294 725.839,713.996 726.398,745.097 726.958,745.265 727.517,709.417 728.076,708.546 728.635,693.322 729.195,664.777 729.754,666.434 730.313,640.24 730.872,644.828 731.432,644.084 731.991,662.415 732.55,664.291 733.109,698.95 733.669,698.707 734.228,683.934 734.787,654.892 735.346,624.11 735.906,623.737 736.465,626.356 737.024,615.062 737.583,605.455 738.143,623.886 738.702,644.218 739.261,661.504 739.82,663.828 740.38,650.379 740.939,655.618 741.498,657.041 742.057,640.069 742.617,640.938 743.176,644.151 743.735,647.421 744.294,636.7 744.854,627.171 745.413,632.976 745.972,639.415 746.531,639.185 747.091,657.677 747.65,658.012 748.209,643.113 748.768,644.392 749.328,646.619 749.887,649.584 750.446,631.917 751.005,667.527 751.565,669.824 752.124,672.439 752.683,655.608 753.242,637.331 753.802,668.896 754.361,653.462 754.92,654.174 755.479,642.021 756.039,662.264 756.598,666.319 757.157,667.443 757.716,669.562 758.276,685.998 758.835,699.671 759.394,702.103 759.953,702.322 760.513,718.652 761.072,717.081 761.631,732.879 762.19,715.562 762.75,733.046 763.309,731.665 763.868,743.828 764.427,746.002 764.987,758.934 765.546,755.357 766.105,705.495 766.664,721.595 767.224,717.607 767.783,764.861 768.342,728.654 768.901,709.185 769.461,704.671 770.02,688.945 770.579,722.976 771.138,734.255 771.698,730.839 772.257,742.208 772.816,738.065 773.375,750.975 773.935,732.191 774.494,732.346 775.053,729.434 775.612,743.008 776.172,725.95 776.731,703.63 777.29,689.336 777.849,689.291 778.409,673.456 778.968,656.987 779.527,676.791 780.086,680.635 780.646,665.692 781.205,717.133 781.764,715.409 782.323,761.418 782.883,804.156 783.442,780.568 784.001,759.771 784.56,738.594 785.12,687.443 785.679,658.514 786.238,661.248 786.797,664.643 787.357,650.403 787.916,655.566 788.475,661.18 789.034,662.248 789.594,648.052 790.153,604.712 790.712,639.477 791.271,642.399 791.831,628.035 792.39,632.986 792.949,651.087 793.508,638.394 794.068,705.667 794.627,736.701 795.186,749.632 795.745,761.896 796.305,776.386 796.864,786.343 797.423,777.353 797.982,737.514 798.542,703.436 799.101,732.266 799.66,775.366 800.219,754.631 800.779,752.729 801.338,798.5 801.897,814.712 802.456,745.768 803.016,675.665 803.575,678.702 804.134,711.407 804.693,711.707 805.253,679.674 805.812,660.991 806.371,616.343 806.931,586.28 807.49,589.618 808.049,590.913 808.608,597.126 809.168,571.437 809.727,577.734 810.286,583.877 810.845,576.771 811.405,581.371 811.964,575.381 812.523,599.53 813.082,651.28 813.642,671.936 814.201,670.277 814.76,653.686 815.319,652.98 815.879,654.241 816.438,637.026 816.997,626.833 817.556,613.865 818.116,656.004 818.675,639.904 819.234,644.467 819.793,649.297 820.353,653.227 820.912,686.66 821.471,735.695 822.03,733.364 822.59,715.976 823.149,745.444 823.708,724.574 824.267,704.62 824.827,738.478 825.386,736.004 825.945,731.787 826.504,710.94 827.064,728.22 827.623,695.145 828.182,713.334 828.741,693.991 829.301,710.31 829.86,745.288 830.419,741.89 830.978,753.301 831.538,749.423 832.097,763.191 832.656,776.532 833.215,805.458 833.775,798.093 834.334,776.356 834.893,789.656 835.452,736.385 836.012,750.558 836.571,712.806 837.13,675.33 837.689,692.185 838.249,695.843 838.808,711.275 839.367,713.004 839.926,712.974 840.486,712.923 841.045,710.886 841.604,710.021 842.163,690.821 842.723,656.346 843.282,674.431 843.841,676.089 844.4,659.041 844.96,642.966 845.519,646.342 846.078,651.306 846.637,655.598 847.197,675.789 847.756,679.501 848.315,664.533 848.874,649.197 849.434,636.221 849.993,657.839 850.552,657.917 851.111,659.125 851.671,677.791 852.23,662.363 852.789,646.148 853.348,613.463 853.908,649.713 854.467,653.985 855.026,654.521 855.585,671.521 856.145,640.972 856.704,641.372 857.263,657.334 857.822,670.501 858.382,673.502 858.941,669.972 859.5,704.476 860.059,671.205 860.619,673.505 861.178,677.434 861.737,677.014 862.296,680.091 862.856,664.154 863.415,652.61 863.974,672.14 864.533,659.017 865.093,662.719 865.652,678.41 866.211,682.952 866.77,700.003 867.33,685.798 867.889,669.897 868.448,670.595 869.007,692.093 869.567,693.41 870.126,675.335 870.685,674.941 871.244,674.728 871.804,677.184 872.363,675.076 872.922,691.643 873.481,673.88 874.041,676.829 874.6,682.319 875.159,680.311 875.718,681.259 876.278,664.528 876.837,681.408 877.396,699.67 877.955,683.757 878.515,651.379 879.074,635.154 879.633,650.369 880.192,670.784 880.752,672.727 881.311,656.146 881.87,656.015 882.429,640.431 882.989,675.978 883.548,679.759 884.107,662.301 884.666,664.071 885.226,663.028 885.785,663.723 886.344,664.995 886.903,663.895 887.463,665.614 888.022,681.818 888.581,667.052 889.14,649.702 889.7,666.97 890.259,648.83 890.818,634.523 891.377,619.373 891.937,636.774 892.496,688.584 893.055,688.065 893.614,672.427 894.174,656.862 894.733,624.643 895.292,629.772 895.851,682.467 896.411,684.754 896.97,714.712 897.529,711.281 898.088,773.392 898.648,781.684 899.207,741.643 899.766,736.41 900.325,765.869 900.885,805.775 901.444,830.437 902.003,853.548 902.562,860.918 903.122,813.179 903.681,840.761 904.24,801.22 904.799,792.575 905.359,769.962 905.918,764.316 906.477,788.583 907.036,785.053 907.596,751.525 908.155,747.249 908.714,747.64 909.273,763.618 909.833,760.353 910.392,776.162 910.951,770.991 911.51,781.868 912.07,773.144 912.629,767.769 913.188,745.545 913.747,772.294 914.307,765.433 914.866,697.65 915.425,696.253 915.984,714.761 916.544,694.107 917.103,709.067 917.662,689.257 918.221,689.102 918.781,718.539 919.34,732.963 919.899,712.122 920.458,677.152 921.018,710.297 921.577,707.258 922.136,722.419 922.695,688.243 923.255,669.354 923.814,668.432 924.373,672.055 924.932,656.61 925.492,642.473 926.051,646.852 926.61,632.337 927.169,583.396 927.729,587.356 928.288,590.359 928.847,595.028 929.406,598.029 929.966,604.595 930.525,589.722 931.084,592.171 931.644,592.959 932.203,602.056 932.762,604.088 933.321,592.859 933.881,629.898 934.44,662.375 934.999,681.399 935.558,617.17 936.118,655.489 936.677,610.384 937.236,645.364 937.795,643.427 938.355,626.83 938.914,610.868 939.473,664.748 940.032,679.03 940.592,710.826 941.151,729.216 941.71,692.747 942.269,692.845 942.829,675.169 943.388,676.326 943.947,660.532 944.506,644.01 945.066,628.01 945.625,598.013 946.184,582.162 946.743,618.033 947.303,604.977 947.862,605.423 948.421,607.144 948.98,625.615 949.54,642.922 950.099,660.795 950.658,646.974 951.217,647.392 951.777,649.665 952.336,698.872 952.895,748.177 953.454,747.461 954.014,749.343 954.573,744.627 955.132,742.277 955.691,758.1 956.251,752.495 956.81,732.487 957.369,778.007 957.928,738.194 958.488,723.142 959.047,722.299 959.606,735.306 960.165,777.626 960.725,792.214 961.284,773.177 961.843,772.299 962.402,800.982 962.962,813.615 963.521,838.907 964.08,830.582 964.639,850.229 965.199,822.253 965.758,798.746 966.317,811.196 966.876,803.609 967.436,795.394 967.995,775.77 968.554,775.137 969.113,775.342 969.673,820.017 970.232,831.455 970.791,822.775 971.35,814.743 971.91,808.204 972.469,831.474 973.028,836.34 973.587,813.279 974.147,806.918 974.706,801.507 975.265,812.85 975.824,794.481 976.384,792.487 976.943,806.065 977.502,781.375 978.061,792.529 978.621,819.821 979.18,793.989 979.739,803.342 980.298,810.029 980.858,816.796 981.417,781.679 981.976,761.047 982.535,755.533 983.095,751.151 983.654,714.371 984.213,726.785 984.772,673.241 985.332,673.509 985.891,673.696 986.45,704.611 987.009,722.358 987.569,732.553 988.128,745.159 988.687,772.802 989.246,766.602 989.806,745.847 990.365,742.318 990.924,737.341 991.483,715.734 992.043,713.519 992.602,715.349 993.161,714.914 993.72,714.948 994.28,698.954 994.839,715.966 995.398,664.408 995.957,712.013 996.517,660.788 997.076,659.996 997.635,659.815 998.194,626.55 998.754,580.976 999.313,586.648 999.872,574.757 1000.43,578.165 1000.99,566.035 1001.55,572.953 1002.11,577.302 1002.67,584.028 1003.23,572.29 1003.79,627.714 1004.35,650.437 1004.91,669.474 1005.46,671.303 1006.02,687.029 1006.58,667.456 1007.14,670.38 1007.7,642.432 1008.26,661.878 1008.82,647.876 1009.38,632.955 1009.94,618.449 1010.5,638.016 1011.06,626.737 1011.62,657.22 1012.18,661.095 1012.73,680.11 1013.29,665.926 1013.85,686.186 1014.41,684.909 1014.97,686.14 1015.53,669.54 1016.09,637.583 1016.65,592.361 1017.21,564.638 1017.77,555.751 1018.33,581.072 1018.89,585.05 1019.45,591.189 1020.01,633.38 1020.56,639.363 1021.12,638.852 1021.68,647.773 1022.24,666.787 1022.8,650.038 1023.36,681.977 1023.92,683.255 1024.48,668.785 1025.04,670.52 1025.6,721.949 1026.16,706.864 1026.72,704.154 1027.28,701.171 1027.83,699.855 1028.39,713.643 1028.95,694.163 1029.51,689.911 1030.07,690.981 1030.63,692.029 1031.19,692.357 1031.75,692.384 1032.31,690.687 1032.87,707.74 1033.43,688.402 1033.99,703.812 1034.55,717.835 1035.1,704.442 1035.66,702.428 1036.22,704.254 1036.78,720.177 1037.34,737.636 1037.9,754.019 1038.46,736.645 1039.02,716.542 1039.58,697.103 1040.14,663.374 1040.7,614.882 1041.26,586.826 1041.82,561.111 1042.38,566.916 1042.93,586.77 1043.49,638.944 1044.05,608.78 1044.61,614.486 1045.17,650.043 1045.73,641.176 1046.29,674.259 1046.85,661.572 1047.41,665.461 1047.97,649.54 1048.53,683.877 1049.09,682.55 1049.65,731.585 1050.2,729.122 1050.76,712.916 1051.32,697.259 1051.88,695.024 1052.44,678.262 1053,682.769 1053.56,680.773 1054.12,664.236 1054.68,682.86 1055.24,667.307 1055.8,653.871 1056.36,624.37 1056.92,629.794 1057.48,647.878 1058.03,649.972 1058.59,655.537 1059.15,656.043 1059.71,675.325 1060.27,691.646 1060.83,703.266 1061.39,721.59 1061.95,707.174 1062.51,705.507 1063.07,721.177 1063.63,719.597 1064.19,718.408 1064.75,652.826 1065.3,673.313 1065.86,621.792 1066.42,625.377 1066.98,645.699 1067.54,633.647 1068.1,651.173 1068.66,638.614 1069.22,706.395 1069.78,719.074 1070.34,729.739 1070.9,742.882 1071.46,739.409 1072.02,702.823 1072.57,703.252 1073.13,670.914 1073.69,670.112 1074.25,670.885 1074.81,692.007 1075.37,658.884 1075.93,662.319 1076.49,647.348 1077.05,666.952 1077.61,667.733 1078.17,668.822 1078.73,653.22 1079.29,657.736 1079.85,597.696 1080.4,584.094 1080.96,605.913 1081.52,592.176 1082.08,563.033 1082.64,572.491 1083.2,576.167 1083.76,602.105 1084.32,625.691 1084.88,647.793 1085.44,653.994 1086,669.656 1086.56,672.084 1087.12,672.6 1087.67,689.437 1088.23,707.987 1088.79,723.755 1089.35,723.991 1089.91,669.02 1090.47,668.79 1091.03,670.099 1091.59,670.812 1092.15,672.254 1092.71,705.422 1093.27,765.622 1093.83,775.334 1094.39,771.121 1094.94,766.714 1095.5,776.43 1096.06,770.401 1096.62,733.322 1097.18,745.949 1097.74,761.008 1098.3,771.236 1098.86,781.508 1099.42,760.024 1099.98,756.553 1100.54,754.326 1101.1,749.403 1101.66,714.602 1102.22,681.122 1102.77,666.436 1103.33,664.987 1103.89,646.972 1104.45,666.451 1105.01,681.766 1105.57,665.91 1106.13,666.319 1106.69,650.134 1107.25,632.258 1107.81,621.03 1108.37,609.699 1108.93,582.097 1109.49,587.087 1110.04,608.695 1110.6,612.28 1111.16,617.853 1111.72,626.167 1112.28,629.479 1112.84,632.892 1113.4,650.795 1113.96,655.615 1114.52,670.917 1115.08,672.537 1115.64,671.087 1116.2,639.967 1116.76,591.525 1117.31,614.917 1117.87,650.877 1118.43,640.59 1118.99,674.344 1119.55,674.254 1120.11,641.958 1120.67,643.605 1121.23,677.196 1121.79,695.824 1122.35,696.142 1122.91,681.683 1123.47,647.029 1124.03,680.354 1124.59,674.877 1125.14,675.746 1125.7,675.395 1126.26,642.35 1126.82,628.451 1127.38,630.956 1127.94,603.941 1128.5,628.364 1129.06,613.169 1129.62,619.054 1130.18,623.572 1130.74,628.661 1131.3,650.569 1131.86,652.178 1132.41,622.833 1132.97,627.738 1133.53,679.033 1134.09,728.766 1134.65,708.522 1135.21,738.013 1135.77,720.742 1136.33,720.585 1136.89,715.975 1137.45,703.791 1138.01,686.343 1138.57,736.293 1139.13,749.979 1139.68,729.655 1140.24,712.384 1140.8,710.422 1141.36,726.153 1141.92,756.92 1142.48,738.511 1143.04,750.264 1143.6,764.082 1144.16,774.422 1144.72,770.749 1145.28,733.616 1145.84,712.173 1146.4,729.016 1146.96,709.211 1147.51,708.622 1148.07,711.324 1148.63,758.55 1149.19,741.879 1149.75,738.822 1150.31,734.602 1150.87,766.334 1151.43,730.105 1151.99,743.103 1152.55,771.62 1153.11,733.771 1153.67,715.335 1154.23,730.833 1154.78,727.693 1155.34,773.49 1155.9,733.883 1156.46,749.542 1157.02,779.927 1157.58,775.268 1158.14,801.592 1158.7,778.156 1159.26,754.941 1159.82,752.048 1160.38,763.032 1160.94,759.303 1161.5,756.826 1162.05,752.936 1162.61,749.143 1163.17,744.084 1163.73,756.816 1164.29,716.696 1164.85,699.739 1165.41,730.952 1165.97,712.924 1166.53,678.529 1167.09,650.958 1167.65,648.414 1168.21,670.41 1168.77,671.341 1169.33,722.177 1169.88,739.376 1170.44,737.424 1171,752.746 1171.56,713.975 1172.12,712.065 1172.68,680.759 1173.24,646.422 1173.8,664.736 1174.36,652.137 1174.92,668.649 1175.48,686.721 1176.04,686.951 1176.6,687.287 1177.15,657.347 1177.71,658.313 1178.27,659.598 1178.83,644.016 1179.39,644.391 1179.95,677.884 1180.51,661.338 1181.07,712.348 1181.63,680.878 1182.19,651.657 1182.75,653.58 1183.31,637.044 1183.87,639.379 1184.43,626.85 1184.98,632.715 1185.54,649.804 1186.1,667.743 1186.66,670.082 1187.22,638.59 1187.78,624.545 1188.34,645.342 1188.9,676.851 1189.46,679.969 1190.02,648.677 1190.58,650.039 1191.14,634.608 1191.7,621.768 1192.25,655.33 1192.81,669.544 1193.37,671.209 1193.93,674.261 1194.49,676.644 1195.05,624.488 1195.61,625.035 1196.17,631.663 1196.73,634.2 1197.29,619.3 1197.85,606.552 1198.41,625.669 1198.97,628.295 1199.52,597.023 1200.08,587.42 1200.64,628.179 1201.2,633.855 1201.76,619.518 1202.32,623.726 1202.88,657.779 1203.44,643.845 1204,631.571 1204.56,632.309 1205.12,685.431 1205.68,670.673 1206.24,671.719 1206.8,644.85 1207.35,629.383 1207.91,629.434 1208.47,649.716 1209.03,649.123 1209.59,668.522 1210.15,701.435 1210.71,686.468 1211.27,655.575 1211.83,659.426 1212.39,679.217 1212.95,683.362 1213.51,664.393 1214.07,682.157 1214.62,683.645 1215.18,671.365 1215.74,656.326 1216.3,644.694 1216.86,630.077 1217.42,603.102 1217.98,611.17 1218.54,646.702 1219.1,680.927 1219.66,667.802 1220.22,607.756 1220.78,644.159 1221.34,665.285 1221.89,650.901 1222.45,657.087 1223.01,642.863 1223.57,613.207 1224.13,652.274 1224.69,621.797 1225.25,640.367 1225.81,690.291 1226.37,674.413 1226.93,713.923 1227.49,694.41 1228.05,676.891 1228.61,679.604 1229.17,673.899 1229.72,687.966 1230.28,673.512 1230.84,690.659 1231.4,692.393 1231.96,722.719 1232.52,719.952 1233.08,734.21 1233.64,714.473 1234.2,730.918 1234.76,731.518 1235.32,729.267 1235.88,726.713 1236.44,737.889 1236.99,749.884 1237.55,746.244 1238.11,756.929 1238.67,685.965 1239.23,684.027 1239.79,700.489 1240.35,704.507 1240.91,689.773 1241.47,704.387 1242.03,737.49 1242.59,670.067 1243.15,657.739 1243.71,676.406 1244.26,726.227 1244.82,722.646 1245.38,756.161 1245.94,752.905 1246.5,764.996 1247.06,760.491 1247.62,802.865 1248.18,812.659 1248.74,789.486 1249.3,798.879 1249.86,794.014 1250.42,806.356 1250.98,800.359 1251.54,809.946 1252.09,800.944 1252.65,793.695 1253.21,788.041 1253.77,784.692 1254.33,795.796 1254.89,807.195 1255.45,834.122 1256.01,840.087 1256.57,817.276 1257.13,809.149 1257.69,817.456 1258.25,842.982 1258.81,834.113 1259.36,875.095 1259.92,865.491 1260.48,872.325 1261.04,857.462 1261.6,835.343 1262.16,826.916 1262.72,804.679 1263.28,814.424 1263.84,755.627 1264.4,732.964 1264.96,713.805 1265.52,692.686 1266.08,691.248 1266.63,655.527 1267.19,638.803 1267.75,658.89 1268.31,643.019 1268.87,628.636 1269.43,665.731 1269.99,668.361 1270.55,668.055 1271.11,666.747 1271.67,665.649 1272.23,699.092 1272.79,697.513 1273.35,678.678 1273.91,693.991 1274.46,690.041 1275.02,690.17 1275.58,686.013 1276.14,668.334 1276.7,698.443 1277.26,664.937 1277.82,663.511 1278.38,696.899 1278.94,711.053 1279.5,713.218 1280.06,695.479 1280.62,726.839 1281.18,739.87 1281.73,737.536 1282.29,715.068 1282.85,730.716 1283.41,725.952 1283.97,754.627 1284.53,717.751 1285.09,698.397 1285.65,667.011 1286.21,668.128 1286.77,671.419 1287.33,657.944 1287.89,659.51 1288.45,657.859 1289,679.353 1289.56,679.458 1290.12,681.686 1290.68,714.014 1291.24,730.451 1291.8,712.171 1292.36,691.035 1292.92,723.295 1293.48,688.503 1294.04,702.832 1294.6,705.068 1295.16,719.084 1295.72,699.563 1296.28,693.939 1296.83,726.664 1297.39,741.316 1297.95,721.537 1298.51,704.384 1299.07,703.818 1299.63,669.41 1300.19,671.938 1300.75,690.892 1301.31,693.504 1301.87,660.89 1302.43,643.34 1302.99,665.071 1303.55,635.514 1304.1,654.154 1304.66,670.768 1305.22,654.317 1305.78,653.681 1306.34,625.486 1306.9,613.262 1307.46,615.678 1308.02,603.913 1308.58,590.207 1309.14,595.825 1309.7,602.402 1310.26,587.609 1310.82,559.846 1311.38,563.178 1311.93,599.587 1312.49,650.317 1313.05,618.299 1313.61,639.924 1314.17,637.981 1314.73,657.509 1315.29,658.66 1315.85,660.905 1316.41,694.875 1316.97,689.451 1317.53,688.893 1318.09,707.824 1318.65,687.966 1319.2,703.705 1319.76,701.239 1320.32,716.08 1320.88,715.248 1321.44,728.882 1322,740.45 1322.56,705.155 1323.12,704.372 1323.68,698.807 1324.24,729.952 1324.8,727.043 1325.36,726.977 1325.92,710.022 1326.47,708.305 1327.03,691.873 1327.59,686.768 1328.15,684.702 1328.71,746.192 1329.27,742.566 1329.83,722.594 1330.39,751.1 1330.95,729.205 1331.51,740.205 1332.07,719.242 1332.63,702.89 1333.19,686.448 1333.75,674.016 1334.3,658.256 1334.86,620.89 1335.42,627.064 1335.98,649.577 1336.54,682.434 1337.1,666.315 1337.66,682.525 1338.22,681.627 1338.78,631.668 1339.34,620.731 1339.9,637.685 1340.46,624.436 1341.02,594.188 1341.57,601.791 1342.13,557.882 1342.69,579.784 1343.25,550.722 1343.81,555.889 1344.37,595.933 1344.93,579.743 1345.49,584.925 1346.05,590.177 1346.61,573.529 1347.17,580.122 1347.73,588.926 1348.29,625.445 1348.84,628.421 1349.4,642.946 1349.96,646.282 1350.52,664.727 1351.08,666.88 1351.64,670.103 1352.2,643.196 1352.76,626.643 1353.32,629.926 1353.88,630.257 1354.44,632.826 1355,654.014 1355.56,671.679 1356.12,653.271 1356.67,656.69 1357.23,626.791 1357.79,646.484 1358.35,681.248 1358.91,699.366 1359.47,668.275 1360.03,685.289 1360.59,684.795 1361.15,686.781 1361.71,671.734 1362.27,724.515 1362.83,720.254 1363.39,688.021 1363.94,688.833 1364.5,624.94 1365.06,611.799 1365.62,630.384 1366.18,620.105 1366.74,638.785 1367.3,607.844 1367.86,593.829 1368.42,583.471 1368.98,573.191 1369.54,561.725 1370.1,571.821 1370.66,577.148 1371.21,582.325 1371.77,588.203 1372.33,561.414 1372.89,599.061 1373.45,586.714 1374.01,626.533 1374.57,627.525 1375.13,613.528 1375.69,635.035 1376.25,620.287 1376.81,639.167 1377.37,655.381 1377.93,655.642 1378.49,642.817 1379.04,625.503 1379.6,627.838 1380.16,651.312 1380.72,689.475 1381.28,706.976 1381.84,707.561 1382.4,708.592 1382.96,691.621 1383.52,740.059 1384.08,719.13 1384.64,732.59 1385.2,766.252 1385.76,730.013 1386.31,730.044 1386.87,741.519 1387.43,755.664 1387.99,735.56 1388.55,700.391 1389.11,699.968 1389.67,685.419 1390.23,701.603 1390.79,684.954 1391.35,686.847 1391.91,671.524 1392.47,688.977 1393.03,676.581 1393.58,661.742 1394.14,678.214 1394.7,693.847 1395.26,676.731 1395.82,677.768 1396.38,612.556 1396.94,632.588 1397.5,637.572 1398.06,658.387 1398.62,678.511 1399.18,679.255 1399.74,679.507 1400.3,694.779 1400.86,709.26 1401.41,723.604 1401.97,706.302 1402.53,704.652 1403.09,706.596 1403.65,705.345 1404.21,739.655 1404.77,704.228 1405.33,702.802 1405.89,704.084 1406.45,721.164 1407.01,721.197 1407.57,747.308 1408.13,728.308 1408.68,714.022 1409.24,711.704 1409.8,727.62 1410.36,743.016 1410.92,703.293 1411.48,703.236 1412.04,716.141 1412.6,699.109 1413.16,698.202 1413.72,697.802 1414.28,698.381 1414.84,699.007 1415.4,679.442 1415.95,675.846 1416.51,719.31 1417.07,715.104 1417.63,697.653 1418.19,710.934 1418.75,706.847 1419.31,704.751 1419.87,718.92 1420.43,715.499 1420.99,695.701 1421.55,712.969 1422.11,694.247 1422.67,675.272 1423.23,673.778 1423.78,656.826 1424.34,639.713 1424.9,672.879 1425.46,642.857 1426.02,681.494 1426.58,684.607 1427.14,718.585 1427.7,701.587 1428.26,729.7 1428.82,697.655 1429.38,698.995 1429.94,712.796 1430.5,698.319 1431.05,682.511 1431.61,650.382 1432.17,666.734 1432.73,649.735 1433.29,684.23 1433.85,639.484 1434.41,656.407 1434.97,687.223 1435.53,704.53 1436.09,706.037 1436.65,706.8 1437.21,722.312 1437.77,721.207 1438.33,700.019 1438.88,716.297 1439.44,714.424 1440,729.627 1440.56,743.138 1441.12,771.966 1441.68,769.576 1442.24,751.461 1442.8,765.277 1443.36,742.851 1443.92,756.345 1444.48,734.951 1445.04,766.343 1445.6,776.321 1446.15,789.549 1446.71,770.348 1447.27,748.16 1447.83,729.67 1448.39,728.638 1448.95,759.527 1449.51,737.466 1450.07,722.852 1450.63,700.931 1451.19,719.092 1451.75,764.595 1452.31,743.258 1452.87,736.088 1453.42,731.501 1453.98,729.728 1454.54,741.518 1455.1,738.291 1455.66,718.699 1456.22,715.317 1456.78,729.254 1457.34,760.51 1457.9,770.865 1458.46,749.039 1459.02,746.445 1459.58,756.993 1460.14,766.831 1460.7,761.52 1461.25,759.167 1461.81,774.018 1462.37,769.711 1462.93,830.079 1463.49,821.403 1464.05,796.451 1464.61,761.304 1465.17,756.001 1465.73,717.831 1466.29,700.896 1466.85,684.952 1467.41,684.04 1467.97,701.207 1468.52,665.478 1469.08,698.821 1469.64,665.46 1470.2,668.654 1470.76,668.272 1471.32,651.947 1471.88,633.836 1472.44,603.411 1473,607.039 1473.56,628.42 1474.12,630.124 1474.68,662.961 1475.24,680.22 1475.79,682.046 1476.35,667.591 1476.91,650.496 1477.47,639.629 1478.03,610.431 1478.59,597.958 1479.15,573.499 1479.71,593.799 1480.27,578.512 1480.83,582.843 1481.39,602.191 1481.95,604.466 1482.51,608.325 1483.07,628.014 1483.62,618.363 1484.18,635.992 1484.74,637.987 1485.3,640.751 1485.86,645.269 1486.42,661.856 1486.98,681.949 1487.54,662.977 1488.1,676.535 1488.66,708.974 1489.22,674.658 1489.78,661.456 1490.34,682.789 1490.89,684.548 1491.45,669.185 1492.01,641.714 1492.57,642.593 1493.13,672.853 1493.69,673.848 1494.25,689.939 1494.81,660.232 1495.37,643.219 1495.93,676.296 1496.49,678.288 1497.05,710.15 1497.61,741.027 1498.16,721.485 1498.72,706.03 1499.28,706.242 1499.84,690.871 1500.4,676.699 1500.96,676.55 1501.52,676.47 1502.08,663.06 1502.64,649.93 1503.2,635.096 1503.76,622.38 1504.32,643.188 1504.88,646.351 1505.44,675.821 1505.99,674.523 1506.55,673.735 1507.11,705.52 1507.67,705.528 1508.23,670.84 1508.79,671.799 1509.35,669.568 1509.91,654.796 1510.47,675.82 1511.03,659.346 1511.59,646.954 1512.15,645.645 1512.71,646.117 1513.26,650.836 1513.82,688.058 1514.38,705.744 1514.94,700.782 1515.5,668.515 1516.06,700.862 1516.62,701.495 1517.18,700.567 1517.74,682.05 1518.3,699.566 1518.86,702.067 1519.42,703.278 1519.98,702.312 1520.53,705.075 1521.09,735.282 1521.65,732.866 1522.21,760.576 1522.77,738.734 1523.33,753.237 1523.89,749.042 1524.45,747.354 1525.01,743.505 1525.57,738.287 1526.13,721.135 1526.69,751.134 1527.25,729.821 1527.81,712.725 1528.36,758.062 1528.92,768.856 1529.48,768.241 1530.04,795.226 1530.6,772.608 1531.16,756.513 1531.72,705.084 1532.28,669.381 1532.84,656.059 1533.4,640.214 1533.96,609.746 1534.52,614.835 1535.08,621.182 1535.63,639.509 1536.19,658.277 1536.75,659.877 1537.31,660.845 1537.87,663.326 1538.43,612.993 1538.99,587.527 1539.55,591.498 1540.11,598.154 1540.67,588.089 1541.23,561.437 1541.79,584.489 1542.35,590.115 1542.9,595.581 1543.46,580.978 1544.02,589.079 1544.58,578.168 1545.14,602.492 1545.7,588.341 1546.26,627.504 1546.82,599.28 1547.38,588.71 1547.94,613.195 1548.5,603.671 1549.06,592.124 1549.62,596.271 1550.18,600.098 1550.73,616.189 1551.29,649.561 1551.85,650.208 1552.41,621.097 1552.97,670.789 1553.53,715.183 1554.09,697.123 1554.65,685.754 1555.21,671.842 1555.77,658.367 1556.33,644.351 1556.89,661.848 1557.45,698.34 1558,730.202 1558.56,743.439 1559.12,740.291 1559.68,735.116 1560.24,733.685 1560.8,748.02 1561.36,761.831 1561.92,745.692 1562.48,728.896 1563.04,777.725 1563.6,777.58 1564.16,758.225 1564.72,737.632 1565.28,751.62 1565.83,729.476 1566.39,729.147 1566.95,711.726 1567.51,709.983 1568.07,695.974 1568.63,728.016 1569.19,674.235 1569.75,676.361 1570.31,674.626 1570.87,659.974 1571.43,661.517 1571.99,679.319 1572.55,663.456 1573.1,665.599 1573.66,668.374 1574.22,652.061 1574.78,688.11 1575.34,682.711 1575.9,697.659 1576.46,676.869 1577.02,677.397 1577.58,698.298 1578.14,695.627 1578.7,694.628 1579.26,698.343 1579.82,631.388 1580.37,640.043 1580.93,623.246 1581.49,626.907 1582.05,630.204 1582.61,653.36 1583.17,672.554 1583.73,675.063 1584.29,692.18 1584.85,677.449 1585.41,694.217 1585.97,711.568 1586.53,759.363 1587.09,768.966 1587.65,784.431 1588.2,780.186 1588.76,792.365 1589.32,785.417 1589.88,812.581 1590.44,823.175 1591,816.285 1591.56,845.704 1592.12,838.605 1592.68,798.25 1593.24,794.847 1593.8,759.733 1594.36,752.835 1594.92,731.545 1595.47,729.437 1596.03,693.799 1596.59,723.446 1597.15,720.995 1597.71,720.231 1598.27,731.497 1598.83,730.926 1599.39,666.547 1599.95,635.301 1600.51,624.022 1601.07,627.208 1601.63,697.546 1602.19,694.756 1602.74,695.136 1603.3,678.341 1603.86,663.66 1604.42,693.112 1604.98,707.323 1605.54,710.864 1606.1,724.989 1606.66,736.627 1607.22,731.805 1607.78,744.189 1608.34,756.091 1608.9,766.285 1609.46,714.145 1610.02,712.639 1610.57,675.418 1611.13,625.729 1611.69,631.395 1612.25,652.302 1612.81,642.317 1613.37,676.341 1613.93,692.089 1614.49,674.376 1615.05,703.141 1615.61,652.016 1616.17,652.604 1616.73,672.154 1617.29,673.736 1617.84,685.614 1618.4,671.301 1618.96,654.89 1619.52,656.325 1620.08,642.562 1620.64,647.33 1621.2,652.093 1621.76,683.511 1622.32,714.722 1622.88,680.924 1623.44,667.373 1624,686.973 1624.56,668.16 1625.11,686.956 1625.67,692.34 1626.23,711.818 1626.79,728.601 1627.35,742.905 1627.91,708.431 1628.47,708.506 1629.03,660.287 1629.59,643.965 1630.15,658.531 1630.71,676.154 1631.27,726.658 1631.83,723.491 1632.39,707.036 1632.94,707.036 1633.5,724.765 1634.06,722.143 1634.62,720.793 1635.18,702.115 1635.74,733.923 1636.3,748.28 1636.86,755.698 1637.42,748.817 1637.98,708.868 1638.54,754.233 1639.1,732.648 1639.66,697.312 1640.21,679.514 1640.77,679.35 1641.33,699.63 1641.89,651.208 1642.45,604.333 1643.01,626.617 1643.57,580.199 1644.13,520.921 1644.69,528.558 1645.25,539.8 1645.81,533.806 1646.37,556.238 1646.93,580.982 1647.48,586.184 1648.04,577.647 1648.6,604.905 1649.16,592.786 1649.72,597.654 1650.28,587.613 1650.84,609.502 1651.4,559.461 1651.96,548.765 1652.52,540.73 1653.08,546.487 1653.64,553.543 1654.2,596.858 1654.76,600.322 1655.31,590.653 1655.87,598.946 1656.43,605.129 1656.99,642.163 1657.55,628.146 1658.11,616.06 1658.67,621.15 1659.23,590.6 1659.79,612.313 1660.35,617.848 1660.91,588.718 1661.47,613.233 1662.03,648.227 1662.58,650.24 1663.14,651.167 1663.7,684.256 1664.26,686.037 1664.82,687.611 1665.38,706.346 1665.94,723.716 1666.5,736.904 1667.06,716.034 1667.62,731.489 1668.18,728.669 1668.74,709.051 1669.3,722.104 1669.85,733.362 1670.41,746.745 1670.97,713.851 1671.53,694.676 1672.09,696.058 1672.65,682.192 1673.21,696.139 1673.77,712.5 1674.33,708.023 1674.89,690.374 1675.45,672.378 1676.01,673.418 1676.57,676.071 1677.13,728.865 1677.68,742.675 1678.24,736.037 1678.8,703.336 1679.36,716.488 1679.92,713.958 1680.48,697.939 1681.04,713.792 1681.6,694.577 1682.16,691.424 1682.72,658.54 1683.28,658.003 1683.84,662.694 1684.4,644.98 1684.95,629.935 1685.51,633.492 1686.07,619.722 1686.63,656.211 1687.19,673.432 1687.75,625.03 1688.31,646.502 1688.87,651.784 1689.43,635.322 1689.99,639.173 1690.55,639.527 1691.11,643.247 1691.67,632.414 1692.23,637.018 1692.78,623.994 1693.34,594.877 1693.9,598.249 1694.46,651.053 1695.02,631.838 1695.58,635.116 1696.14,656.109 1696.7,706.223 1697.26,689.906 1697.82,689.858 1698.38,707.211 1698.94,724.311 1699.5,705.222 1700.05,719.456 1700.61,717.29 1701.17,684.582 1701.73,695.987 1702.29,677.555 1702.85,660.024 1703.41,645.859 1703.97,647.843 1704.53,698.539 1705.09,726.737 1705.65,724.577 1706.21,737.825 1706.77,736.344 1707.32,736.798 1707.88,717.268 1708.44,714.611 1709,680.839 1709.56,698.352 1710.12,681.574 1710.68,693.548 1711.24,678.894 1711.8,664.127 1712.36,682.414 1712.92,668.008 1713.48,668.477 1714.04,666.486 1714.6,665.1 1715.15,699.153 1715.71,697.943 1716.27,697.888 1716.83,729.322 1717.39,725.796 1717.95,727.159 1718.51,752.111 1719.07,799.005 1719.63,824.732 1720.19,818.496 1720.75,794.859 1721.31,790.445 1721.87,737.34 1722.42,734.834 1722.98,730.426 1723.54,760.169 1724.1,770.932 1724.66,764.574 1725.22,774.257 1725.78,772.971 1726.34,752.601 1726.9,750.212 1727.46,746.711 1728.02,757.342 1728.58,768.557 1729.14,780.417 1729.69,772.759 1730.25,799.866 1730.81,810.872 1731.37,803.755 1731.93,797.628 1732.49,790.494 1733.05,752.458 1733.61,729.691 1734.17,711.1 1734.73,694.452 1735.29,677.298 1735.85,647.348 1736.41,650.335 1736.97,666.727 1737.52,699.096 1738.08,681.014 1738.64,683.914 1739.2,687.934 1739.76,687.798 1740.32,652.401 1740.88,657.053 1741.44,626.486 1742,645.849 1742.56,635.849 1743.12,642.073 1743.68,593.435 1744.24,596.995 1744.79,599.233 1745.35,584.034 1745.91,599.709 1746.47,576.907 1747.03,583.664 1747.59,589.408 1748.15,597.394 1748.71,589.746 1749.27,594.602 1749.83,584.594 1750.39,592.021 1750.95,629.035 1751.51,698.475 1752.06,728.647 1752.62,746.894 1753.18,777.989 1753.74,807.297 1754.3,785.481 1754.86,781.677 1755.42,778.073 1755.98,757.179 1756.54,752.155 1757.1,730.325 1757.66,693.594 1758.22,709.575 1758.78,672.195 1759.34,671.637 1759.89,689.549 1760.45,699.254 1761.01,698.886 1761.57,683.953 1762.13,701.416 1762.69,682.482 1763.25,680.88 1763.81,660.941 1764.37,678.255 1764.93,678.139 1765.49,674.992 1766.05,640.969 1766.61,675.917 1767.16,679.74 1767.72,700.808 1768.28,702.681 1768.84,714.156 1769.4,725.523 1769.96,725.202 1770.52,725.181 1771.08,694.287 1771.64,678.462 1772.2,693.627 1772.76,692.376 1773.32,709.553 1773.88,744.706 1774.43,698.099 1774.99,729.735 1775.55,730.043 1776.11,727.395 1776.67,692.394 1777.23,706.903 1777.79,719.268 1778.35,717.428 1778.91,746.753 1779.47,711.348 1780.03,695.198 1780.59,709.016 1781.15,702.336 1781.71,719.039 1782.26,701.958 1782.82,719.908 1783.38,733.063 1783.94,727.969 1784.5,708.334 1785.06,740.356 1785.62,739.029 1786.18,738.25 1786.74,720.33 1787.3,673.417 1787.86,673.751 1788.42,673.726 1788.98,657.272 1789.53,677.032 1790.09,646.917 1790.65,617.562 1791.21,641.03 1791.77,658.678 1792.33,644.529 1792.89,646.778 1793.45,694.863 1794.01,690.551 1794.57,690.692 1795.13,688.153 1795.69,689.606 1796.25,688.612 1796.8,668.465 1797.36,669.524 1797.92,671.704 1798.48,622.366 1799.04,594.923 1799.6,595.675 1800.16,593.614 1800.72,630.058 1801.28,601.531 1801.84,623.184 1802.4,608.451 1802.96,625.076 1803.52,594.164 1804.08,582.351 1804.63,576.1 1805.19,615.671 1805.75,598.96 1806.31,619.459 1806.87,608.207 1807.43,689.496 1807.99,671.899 1808.55,654.292 1809.11,652.672 1809.67,636.292 1810.23,624.317 1810.79,626.665 1811.35,631.31 1811.9,630.389 1812.46,614.019 1813.02,632.316 1813.58,651.987 1814.14,656.594 1814.7,645.559 1815.26,636.076 1815.82,621.659 1816.38,641.187 1816.94,641.681 1817.5,645.333 1818.06,643.573 1818.62,659.215 1819.18,660.996 1819.73,678.346 1820.29,696.995 1820.85,712.122 1821.41,710.933 1821.97,712.275 1822.53,681.748 1823.09,730.338 1823.65,692.281 1824.21,659.171 1824.77,694.381 1825.33,699.512 1825.89,696.859 1826.45,697.385 1827,713.855 1827.56,748.387 1828.12,747.126 1828.68,727.404 1829.24,742.641 1829.8,720.757 1830.36,717.859 1830.92,733.758 1831.48,747.231 1832.04,762.308 1832.6,774.17 1833.16,770.575 1833.72,796.704 1834.27,757.624 1834.83,772.735 1835.39,754.678 1835.95,717.926 1836.51,714.727 1837.07,714.012 1837.63,697.09 1838.19,729.197 \"/>\n<path clip-path=\"url(#clip313)\" d=\"M720.247 691.527 L720.806 691.527 L721.365 691.527 L721.924 691.527 L722.484 691.527 L723.043 691.527 L723.602 691.527 L724.161 691.527 L724.721 691.527 L725.28 691.527 L725.839 691.527 L726.398 691.527 L726.958 691.527 L727.517 691.527 L728.076 691.527 L728.635 691.527 L729.195 691.527 L729.754 691.527 L730.313 691.527 L730.872 691.527 L731.432 691.527 L731.991 691.527 L732.55 691.527 L733.109 691.527 L733.669 691.527 L734.228 691.527 L734.787 691.527 L735.346 691.527 L735.906 691.527 L736.465 691.527 L737.024 691.527 L737.583 691.527 L738.143 691.527 L738.702 691.527 L739.261 691.527 L739.82 691.527 L740.38 691.527 L740.939 691.527 L741.498 691.527 L742.057 691.527 L742.617 691.527 L743.176 691.527 L743.735 691.527 L744.294 691.527 L744.854 691.527 L745.413 691.527 L745.972 691.527 L746.531 691.527 L747.091 691.527 L747.65 691.527 L748.209 691.527 L748.768 691.527 L749.328 691.527 L749.887 691.527 L750.446 691.527 L751.005 691.527 L751.565 691.527 L752.124 691.527 L752.683 691.527 L753.242 691.527 L753.802 691.527 L754.361 691.527 L754.92 691.527 L755.479 691.527 L756.039 691.527 L756.598 691.527 L757.157 691.527 L757.716 691.527 L758.276 691.527 L758.835 691.527 L759.394 691.527 L759.953 691.527 L760.513 691.527 L761.072 691.527 L761.631 691.527 L762.19 691.527 L762.75 691.527 L763.309 691.527 L763.868 691.527 L764.427 691.527 L764.987 691.527 L765.546 691.527 L766.105 691.527 L766.664 691.527 L767.224 691.527 L767.783 691.527 L768.342 691.527 L768.901 691.527 L769.461 691.527 L770.02 691.527 L770.579 691.527 L771.138 691.527 L771.698 691.527 L772.257 691.527 L772.816 691.527 L773.375 691.527 L773.935 691.527 L774.494 691.527 L775.053 691.527 L775.612 691.527 L776.172 691.527 L776.731 691.527 L777.29 691.527 L777.849 691.527 L778.409 691.527 L778.968 691.527 L779.527 691.527 L780.086 691.527 L780.646 691.527 L781.205 691.527 L781.764 691.527 L782.323 691.527 L782.883 691.527 L783.442 691.527 L784.001 691.527 L784.56 691.527 L785.12 691.527 L785.679 691.527 L786.238 691.527 L786.797 691.527 L787.357 691.527 L787.916 691.527 L788.475 691.527 L789.034 691.527 L789.594 691.527 L790.153 691.527 L790.712 691.527 L791.271 691.527 L791.831 691.527 L792.39 691.527 L792.949 691.527 L793.508 691.527 L794.068 691.527 L794.627 691.527 L795.186 691.527 L795.745 691.527 L796.305 691.527 L796.864 691.527 L797.423 691.527 L797.982 691.527 L798.542 691.527 L799.101 691.527 L799.66 691.527 L800.219 691.527 L800.779 691.527 L801.338 691.527 L801.897 691.527 L802.456 691.527 L803.016 691.527 L803.575 691.527 L804.134 691.527 L804.693 691.527 L805.253 691.527 L805.812 691.527 L806.371 691.527 L806.931 691.527 L807.49 691.527 L808.049 691.527 L808.608 691.527 L809.168 691.527 L809.727 691.527 L810.286 691.527 L810.845 691.527 L811.405 691.527 L811.964 691.527 L812.523 691.527 L813.082 691.527 L813.642 691.527 L814.201 691.527 L814.76 691.527 L815.319 691.527 L815.879 691.527 L816.438 691.527 L816.997 691.527 L817.556 691.527 L818.116 691.527 L818.675 691.527 L819.234 691.527 L819.793 691.527 L820.353 691.527 L820.912 691.527 L821.471 691.527 L822.03 691.527 L822.59 691.527 L823.149 691.527 L823.708 691.527 L824.267 691.527 L824.827 691.527 L825.386 691.527 L825.945 691.527 L826.504 691.527 L827.064 691.527 L827.623 691.527 L828.182 691.527 L828.741 691.527 L829.301 691.527 L829.86 691.527 L830.419 691.527 L830.978 691.527 L831.538 691.527 L832.097 691.527 L832.656 691.527 L833.215 691.527 L833.775 691.527 L834.334 691.527 L834.893 691.527 L835.452 691.527 L836.012 691.527 L836.571 691.527 L837.13 691.527 L837.689 691.527 L838.249 691.527 L838.808 691.527 L839.367 691.527 L839.926 691.527 L840.486 691.527 L841.045 691.527 L841.604 691.527 L842.163 691.527 L842.723 691.527 L843.282 691.527 L843.841 691.527 L844.4 691.527 L844.96 691.527 L845.519 691.527 L846.078 691.527 L846.637 691.527 L847.197 691.527 L847.756 691.527 L848.315 691.527 L848.874 691.527 L849.434 691.527 L849.993 691.527 L850.552 691.527 L851.111 691.527 L851.671 691.527 L852.23 691.527 L852.789 691.527 L853.348 691.527 L853.908 691.527 L854.467 691.527 L855.026 691.527 L855.585 691.527 L856.145 691.527 L856.704 691.527 L857.263 691.527 L857.822 691.527 L858.382 691.527 L858.941 691.527 L859.5 691.527 L860.059 691.527 L860.619 691.527 L861.178 691.527 L861.737 691.527 L862.296 691.527 L862.856 691.527 L863.415 691.527 L863.974 691.527 L864.533 691.527 L865.093 691.527 L865.652 691.527 L866.211 691.527 L866.77 691.527 L867.33 691.527 L867.889 691.527 L868.448 691.527 L869.007 691.527 L869.567 691.527 L870.126 691.527 L870.685 691.527 L871.244 691.527 L871.804 691.527 L872.363 691.527 L872.922 691.527 L873.481 691.527 L874.041 691.527 L874.6 691.527 L875.159 691.527 L875.718 691.527 L876.278 691.527 L876.837 691.527 L877.396 691.527 L877.955 691.527 L878.515 691.527 L879.074 691.527 L879.633 691.527 L880.192 691.527 L880.752 691.527 L881.311 691.527 L881.87 691.527 L882.429 691.527 L882.989 691.527 L883.548 691.527 L884.107 691.527 L884.666 691.527 L885.226 691.527 L885.785 691.527 L886.344 691.527 L886.903 691.527 L887.463 691.527 L888.022 691.527 L888.581 691.527 L889.14 691.527 L889.7 691.527 L890.259 691.527 L890.818 691.527 L891.377 691.527 L891.937 691.527 L892.496 691.527 L893.055 691.527 L893.614 691.527 L894.174 691.527 L894.733 691.527 L895.292 691.527 L895.851 691.527 L896.411 691.527 L896.97 691.527 L897.529 691.527 L898.088 691.527 L898.648 691.527 L899.207 691.527 L899.766 691.527 L900.325 691.527 L900.885 691.527 L901.444 691.527 L902.003 691.527 L902.562 691.527 L903.122 691.527 L903.681 691.527 L904.24 691.527 L904.799 691.527 L905.359 691.527 L905.918 691.527 L906.477 691.527 L907.036 691.527 L907.596 691.527 L908.155 691.527 L908.714 691.527 L909.273 691.527 L909.833 691.527 L910.392 691.527 L910.951 691.527 L911.51 691.527 L912.07 691.527 L912.629 691.527 L913.188 691.527 L913.747 691.527 L914.307 691.527 L914.866 691.527 L915.425 691.527 L915.984 691.527 L916.544 691.527 L917.103 691.527 L917.662 691.527 L918.221 691.527 L918.781 691.527 L919.34 691.527 L919.899 691.527 L920.458 691.527 L921.018 691.527 L921.577 691.527 L922.136 691.527 L922.695 691.527 L923.255 691.527 L923.814 691.527 L924.373 691.527 L924.932 691.527 L925.492 691.527 L926.051 691.527 L926.61 691.527 L927.169 691.527 L927.729 691.527 L928.288 691.527 L928.847 691.527 L929.406 691.527 L929.966 691.527 L930.525 691.527 L931.084 691.527 L931.644 691.527 L932.203 691.527 L932.762 691.527 L933.321 691.527 L933.881 691.527 L934.44 691.527 L934.999 691.527 L935.558 691.527 L936.118 691.527 L936.677 691.527 L937.236 691.527 L937.795 691.527 L938.355 691.527 L938.914 691.527 L939.473 691.527 L940.032 691.527 L940.592 691.527 L941.151 691.527 L941.71 691.527 L942.269 691.527 L942.829 691.527 L943.388 691.527 L943.947 691.527 L944.506 691.527 L945.066 691.527 L945.625 691.527 L946.184 691.527 L946.743 691.527 L947.303 691.527 L947.862 691.527 L948.421 691.527 L948.98 691.527 L949.54 691.527 L950.099 691.527 L950.658 691.527 L951.217 691.527 L951.777 691.527 L952.336 691.527 L952.895 691.527 L953.454 691.527 L954.014 691.527 L954.573 691.527 L955.132 691.527 L955.691 691.527 L956.251 691.527 L956.81 691.527 L957.369 691.527 L957.928 691.527 L958.488 691.527 L959.047 691.527 L959.606 691.527 L960.165 691.527 L960.725 691.527 L961.284 691.527 L961.843 691.527 L962.402 691.527 L962.962 691.527 L963.521 691.527 L964.08 691.527 L964.639 691.527 L965.199 691.527 L965.758 691.527 L966.317 691.527 L966.876 691.527 L967.436 691.527 L967.995 691.527 L968.554 691.527 L969.113 691.527 L969.673 691.527 L970.232 691.527 L970.791 691.527 L971.35 691.527 L971.91 691.527 L972.469 691.527 L973.028 691.527 L973.587 691.527 L974.147 691.527 L974.706 691.527 L975.265 691.527 L975.824 691.527 L976.384 691.527 L976.943 691.527 L977.502 691.527 L978.061 691.527 L978.621 691.527 L979.18 691.527 L979.739 691.527 L980.298 691.527 L980.858 691.527 L981.417 691.527 L981.976 691.527 L982.535 691.527 L983.095 691.527 L983.654 691.527 L984.213 691.527 L984.772 691.527 L985.332 691.527 L985.891 691.527 L986.45 691.527 L987.009 691.527 L987.569 691.527 L988.128 691.527 L988.687 691.527 L989.246 691.527 L989.806 691.527 L990.365 691.527 L990.924 691.527 L991.483 691.527 L992.043 691.527 L992.602 691.527 L993.161 691.527 L993.72 691.527 L994.28 691.527 L994.839 691.527 L995.398 691.527 L995.957 691.527 L996.517 691.527 L997.076 691.527 L997.635 691.527 L998.194 691.527 L998.754 691.527 L999.313 691.527 L999.872 691.527 L1000.43 691.527 L1000.99 691.527 L1001.55 691.527 L1002.11 691.527 L1002.67 691.527 L1003.23 691.527 L1003.79 691.527 L1004.35 691.527 L1004.91 691.527 L1005.46 691.527 L1006.02 691.527 L1006.58 691.527 L1007.14 691.527 L1007.7 691.527 L1008.26 691.527 L1008.82 691.527 L1009.38 691.527 L1009.94 691.527 L1010.5 691.527 L1011.06 691.527 L1011.62 691.527 L1012.18 691.527 L1012.73 691.527 L1013.29 691.527 L1013.85 691.527 L1014.41 691.527 L1014.97 691.527 L1015.53 691.527 L1016.09 691.527 L1016.65 691.527 L1017.21 691.527 L1017.77 691.527 L1018.33 691.527 L1018.89 691.527 L1019.45 691.527 L1020.01 691.527 L1020.56 691.527 L1021.12 691.527 L1021.68 691.527 L1022.24 691.527 L1022.8 691.527 L1023.36 691.527 L1023.92 691.527 L1024.48 691.527 L1025.04 691.527 L1025.6 691.527 L1026.16 691.527 L1026.72 691.527 L1027.28 691.527 L1027.83 691.527 L1028.39 691.527 L1028.95 691.527 L1029.51 691.527 L1030.07 691.527 L1030.63 691.527 L1031.19 691.527 L1031.75 691.527 L1032.31 691.527 L1032.87 691.527 L1033.43 691.527 L1033.99 691.527 L1034.55 691.527 L1035.1 691.527 L1035.66 691.527 L1036.22 691.527 L1036.78 691.527 L1037.34 691.527 L1037.9 691.527 L1038.46 691.527 L1039.02 691.527 L1039.58 691.527 L1040.14 691.527 L1040.7 691.527 L1041.26 691.527 L1041.82 691.527 L1042.38 691.527 L1042.93 691.527 L1043.49 691.527 L1044.05 691.527 L1044.61 691.527 L1045.17 691.527 L1045.73 691.527 L1046.29 691.527 L1046.85 691.527 L1047.41 691.527 L1047.97 691.527 L1048.53 691.527 L1049.09 691.527 L1049.65 691.527 L1050.2 691.527 L1050.76 691.527 L1051.32 691.527 L1051.88 691.527 L1052.44 691.527 L1053 691.527 L1053.56 691.527 L1054.12 691.527 L1054.68 691.527 L1055.24 691.527 L1055.8 691.527 L1056.36 691.527 L1056.92 691.527 L1057.48 691.527 L1058.03 691.527 L1058.59 691.527 L1059.15 691.527 L1059.71 691.527 L1060.27 691.527 L1060.83 691.527 L1061.39 691.527 L1061.95 691.527 L1062.51 691.527 L1063.07 691.527 L1063.63 691.527 L1064.19 691.527 L1064.75 691.527 L1065.3 691.527 L1065.86 691.527 L1066.42 691.527 L1066.98 691.527 L1067.54 691.527 L1068.1 691.527 L1068.66 691.527 L1069.22 691.527 L1069.78 691.527 L1070.34 691.527 L1070.9 691.527 L1071.46 691.527 L1072.02 691.527 L1072.57 691.527 L1073.13 691.527 L1073.69 691.527 L1074.25 691.527 L1074.81 691.527 L1075.37 691.527 L1075.93 691.527 L1076.49 691.527 L1077.05 691.527 L1077.61 691.527 L1078.17 691.527 L1078.73 691.527 L1079.29 691.527 L1079.85 691.527 L1080.4 691.527 L1080.96 691.527 L1081.52 691.527 L1082.08 691.527 L1082.64 691.527 L1083.2 691.527 L1083.76 691.527 L1084.32 691.527 L1084.88 691.527 L1085.44 691.527 L1086 691.527 L1086.56 691.527 L1087.12 691.527 L1087.67 691.527 L1088.23 691.527 L1088.79 691.527 L1089.35 691.527 L1089.91 691.527 L1090.47 691.527 L1091.03 691.527 L1091.59 691.527 L1092.15 691.527 L1092.71 691.527 L1093.27 691.527 L1093.83 691.527 L1094.39 691.527 L1094.94 691.527 L1095.5 691.527 L1096.06 691.527 L1096.62 691.527 L1097.18 691.527 L1097.74 691.527 L1098.3 691.527 L1098.86 691.527 L1099.42 691.527 L1099.98 691.527 L1100.54 691.527 L1101.1 691.527 L1101.66 691.527 L1102.22 691.527 L1102.77 691.527 L1103.33 691.527 L1103.89 691.527 L1104.45 691.527 L1105.01 691.527 L1105.57 691.527 L1106.13 691.527 L1106.69 691.527 L1107.25 691.527 L1107.81 691.527 L1108.37 691.527 L1108.93 691.527 L1109.49 691.527 L1110.04 691.527 L1110.6 691.527 L1111.16 691.527 L1111.72 691.527 L1112.28 691.527 L1112.84 691.527 L1113.4 691.527 L1113.96 691.527 L1114.52 691.527 L1115.08 691.527 L1115.64 691.527 L1116.2 691.527 L1116.76 691.527 L1117.31 691.527 L1117.87 691.527 L1118.43 691.527 L1118.99 691.527 L1119.55 691.527 L1120.11 691.527 L1120.67 691.527 L1121.23 691.527 L1121.79 691.527 L1122.35 691.527 L1122.91 691.527 L1123.47 691.527 L1124.03 691.527 L1124.59 691.527 L1125.14 691.527 L1125.7 691.527 L1126.26 691.527 L1126.82 691.527 L1127.38 691.527 L1127.94 691.527 L1128.5 691.527 L1129.06 691.527 L1129.62 691.527 L1130.18 691.527 L1130.74 691.527 L1131.3 691.527 L1131.86 691.527 L1132.41 691.527 L1132.97 691.527 L1133.53 691.527 L1134.09 691.527 L1134.65 691.527 L1135.21 691.527 L1135.77 691.527 L1136.33 691.527 L1136.89 691.527 L1137.45 691.527 L1138.01 691.527 L1138.57 691.527 L1139.13 691.527 L1139.68 691.527 L1140.24 691.527 L1140.8 691.527 L1141.36 691.527 L1141.92 691.527 L1142.48 691.527 L1143.04 691.527 L1143.6 691.527 L1144.16 691.527 L1144.72 691.527 L1145.28 691.527 L1145.84 691.527 L1146.4 691.527 L1146.96 691.527 L1147.51 691.527 L1148.07 691.527 L1148.63 691.527 L1149.19 691.527 L1149.75 691.527 L1150.31 691.527 L1150.87 691.527 L1151.43 691.527 L1151.99 691.527 L1152.55 691.527 L1153.11 691.527 L1153.67 691.527 L1154.23 691.527 L1154.78 691.527 L1155.34 691.527 L1155.9 691.527 L1156.46 691.527 L1157.02 691.527 L1157.58 691.527 L1158.14 691.527 L1158.7 691.527 L1159.26 691.527 L1159.82 691.527 L1160.38 691.527 L1160.94 691.527 L1161.5 691.527 L1162.05 691.527 L1162.61 691.527 L1163.17 691.527 L1163.73 691.527 L1164.29 691.527 L1164.85 691.527 L1165.41 691.527 L1165.97 691.527 L1166.53 691.527 L1167.09 691.527 L1167.65 691.527 L1168.21 691.527 L1168.77 691.527 L1169.33 691.527 L1169.88 691.527 L1170.44 691.527 L1171 691.527 L1171.56 691.527 L1172.12 691.527 L1172.68 691.527 L1173.24 691.527 L1173.8 691.527 L1174.36 691.527 L1174.92 691.527 L1175.48 691.527 L1176.04 691.527 L1176.6 691.527 L1177.15 691.527 L1177.71 691.527 L1178.27 691.527 L1178.83 691.527 L1179.39 691.527 L1179.95 691.527 L1180.51 691.527 L1181.07 691.527 L1181.63 691.527 L1182.19 691.527 L1182.75 691.527 L1183.31 691.527 L1183.87 691.527 L1184.43 691.527 L1184.98 691.527 L1185.54 691.527 L1186.1 691.527 L1186.66 691.527 L1187.22 691.527 L1187.78 691.527 L1188.34 691.527 L1188.9 691.527 L1189.46 691.527 L1190.02 691.527 L1190.58 691.527 L1191.14 691.527 L1191.7 691.527 L1192.25 691.527 L1192.81 691.527 L1193.37 691.527 L1193.93 691.527 L1194.49 691.527 L1195.05 691.527 L1195.61 691.527 L1196.17 691.527 L1196.73 691.527 L1197.29 691.527 L1197.85 691.527 L1198.41 691.527 L1198.97 691.527 L1199.52 691.527 L1200.08 691.527 L1200.64 691.527 L1201.2 691.527 L1201.76 691.527 L1202.32 691.527 L1202.88 691.527 L1203.44 691.527 L1204 691.527 L1204.56 691.527 L1205.12 691.527 L1205.68 691.527 L1206.24 691.527 L1206.8 691.527 L1207.35 691.527 L1207.91 691.527 L1208.47 691.527 L1209.03 691.527 L1209.59 691.527 L1210.15 691.527 L1210.71 691.527 L1211.27 691.527 L1211.83 691.527 L1212.39 691.527 L1212.95 691.527 L1213.51 691.527 L1214.07 691.527 L1214.62 691.527 L1215.18 691.527 L1215.74 691.527 L1216.3 691.527 L1216.86 691.527 L1217.42 691.527 L1217.98 691.527 L1218.54 691.527 L1219.1 691.527 L1219.66 691.527 L1220.22 691.527 L1220.78 691.527 L1221.34 691.527 L1221.89 691.527 L1222.45 691.527 L1223.01 691.527 L1223.57 691.527 L1224.13 691.527 L1224.69 691.527 L1225.25 691.527 L1225.81 691.527 L1226.37 691.527 L1226.93 691.527 L1227.49 691.527 L1228.05 691.527 L1228.61 691.527 L1229.17 691.527 L1229.72 691.527 L1230.28 691.527 L1230.84 691.527 L1231.4 691.527 L1231.96 691.527 L1232.52 691.527 L1233.08 691.527 L1233.64 691.527 L1234.2 691.527 L1234.76 691.527 L1235.32 691.527 L1235.88 691.527 L1236.44 691.527 L1236.99 691.527 L1237.55 691.527 L1238.11 691.527 L1238.67 691.527 L1239.23 691.527 L1239.79 691.527 L1240.35 691.527 L1240.91 691.527 L1241.47 691.527 L1242.03 691.527 L1242.59 691.527 L1243.15 691.527 L1243.71 691.527 L1244.26 691.527 L1244.82 691.527 L1245.38 691.527 L1245.94 691.527 L1246.5 691.527 L1247.06 691.527 L1247.62 691.527 L1248.18 691.527 L1248.74 691.527 L1249.3 691.527 L1249.86 691.527 L1250.42 691.527 L1250.98 691.527 L1251.54 691.527 L1252.09 691.527 L1252.65 691.527 L1253.21 691.527 L1253.77 691.527 L1254.33 691.527 L1254.89 691.527 L1255.45 691.527 L1256.01 691.527 L1256.57 691.527 L1257.13 691.527 L1257.69 691.527 L1258.25 691.527 L1258.81 691.527 L1259.36 691.527 L1259.92 691.527 L1260.48 691.527 L1261.04 691.527 L1261.6 691.527 L1262.16 691.527 L1262.72 691.527 L1263.28 691.527 L1263.84 691.527 L1264.4 691.527 L1264.96 691.527 L1265.52 691.527 L1266.08 691.527 L1266.63 691.527 L1267.19 691.527 L1267.75 691.527 L1268.31 691.527 L1268.87 691.527 L1269.43 691.527 L1269.99 691.527 L1270.55 691.527 L1271.11 691.527 L1271.67 691.527 L1272.23 691.527 L1272.79 691.527 L1273.35 691.527 L1273.91 691.527 L1274.46 691.527 L1275.02 691.527 L1275.58 691.527 L1276.14 691.527 L1276.7 691.527 L1277.26 691.527 L1277.82 691.527 L1278.38 691.527 L1278.94 691.527 L1279.5 691.527 L1280.06 691.527 L1280.62 691.527 L1281.18 691.527 L1281.73 691.527 L1282.29 691.527 L1282.85 691.527 L1283.41 691.527 L1283.97 691.527 L1284.53 691.527 L1285.09 691.527 L1285.65 691.527 L1286.21 691.527 L1286.77 691.527 L1287.33 691.527 L1287.89 691.527 L1288.45 691.527 L1289 691.527 L1289.56 691.527 L1290.12 691.527 L1290.68 691.527 L1291.24 691.527 L1291.8 691.527 L1292.36 691.527 L1292.92 691.527 L1293.48 691.527 L1294.04 691.527 L1294.6 691.527 L1295.16 691.527 L1295.72 691.527 L1296.28 691.527 L1296.83 691.527 L1297.39 691.527 L1297.95 691.527 L1298.51 691.527 L1299.07 691.527 L1299.63 691.527 L1300.19 691.527 L1300.75 691.527 L1301.31 691.527 L1301.87 691.527 L1302.43 691.527 L1302.99 691.527 L1303.55 691.527 L1304.1 691.527 L1304.66 691.527 L1305.22 691.527 L1305.78 691.527 L1306.34 691.527 L1306.9 691.527 L1307.46 691.527 L1308.02 691.527 L1308.58 691.527 L1309.14 691.527 L1309.7 691.527 L1310.26 691.527 L1310.82 691.527 L1311.38 691.527 L1311.93 691.527 L1312.49 691.527 L1313.05 691.527 L1313.61 691.527 L1314.17 691.527 L1314.73 691.527 L1315.29 691.527 L1315.85 691.527 L1316.41 691.527 L1316.97 691.527 L1317.53 691.527 L1318.09 691.527 L1318.65 691.527 L1319.2 691.527 L1319.76 691.527 L1320.32 691.527 L1320.88 691.527 L1321.44 691.527 L1322 691.527 L1322.56 691.527 L1323.12 691.527 L1323.68 691.527 L1324.24 691.527 L1324.8 691.527 L1325.36 691.527 L1325.92 691.527 L1326.47 691.527 L1327.03 691.527 L1327.59 691.527 L1328.15 691.527 L1328.71 691.527 L1329.27 691.527 L1329.83 691.527 L1330.39 691.527 L1330.95 691.527 L1331.51 691.527 L1332.07 691.527 L1332.63 691.527 L1333.19 691.527 L1333.75 691.527 L1334.3 691.527 L1334.86 691.527 L1335.42 691.527 L1335.98 691.527 L1336.54 691.527 L1337.1 691.527 L1337.66 691.527 L1338.22 691.527 L1338.78 691.527 L1339.34 691.527 L1339.9 691.527 L1340.46 691.527 L1341.02 691.527 L1341.57 691.527 L1342.13 691.527 L1342.69 691.527 L1343.25 691.527 L1343.81 691.527 L1344.37 691.527 L1344.93 691.527 L1345.49 691.527 L1346.05 691.527 L1346.61 691.527 L1347.17 691.527 L1347.73 691.527 L1348.29 691.527 L1348.84 691.527 L1349.4 691.527 L1349.96 691.527 L1350.52 691.527 L1351.08 691.527 L1351.64 691.527 L1352.2 691.527 L1352.76 691.527 L1353.32 691.527 L1353.88 691.527 L1354.44 691.527 L1355 691.527 L1355.56 691.527 L1356.12 691.527 L1356.67 691.527 L1357.23 691.527 L1357.79 691.527 L1358.35 691.527 L1358.91 691.527 L1359.47 691.527 L1360.03 691.527 L1360.59 691.527 L1361.15 691.527 L1361.71 691.527 L1362.27 691.527 L1362.83 691.527 L1363.39 691.527 L1363.94 691.527 L1364.5 691.527 L1365.06 691.527 L1365.62 691.527 L1366.18 691.527 L1366.74 691.527 L1367.3 691.527 L1367.86 691.527 L1368.42 691.527 L1368.98 691.527 L1369.54 691.527 L1370.1 691.527 L1370.66 691.527 L1371.21 691.527 L1371.77 691.527 L1372.33 691.527 L1372.89 691.527 L1373.45 691.527 L1374.01 691.527 L1374.57 691.527 L1375.13 691.527 L1375.69 691.527 L1376.25 691.527 L1376.81 691.527 L1377.37 691.527 L1377.93 691.527 L1378.49 691.527 L1379.04 691.527 L1379.6 691.527 L1380.16 691.527 L1380.72 691.527 L1381.28 691.527 L1381.84 691.527 L1382.4 691.527 L1382.96 691.527 L1383.52 691.527 L1384.08 691.527 L1384.64 691.527 L1385.2 691.527 L1385.76 691.527 L1386.31 691.527 L1386.87 691.527 L1387.43 691.527 L1387.99 691.527 L1388.55 691.527 L1389.11 691.527 L1389.67 691.527 L1390.23 691.527 L1390.79 691.527 L1391.35 691.527 L1391.91 691.527 L1392.47 691.527 L1393.03 691.527 L1393.58 691.527 L1394.14 691.527 L1394.7 691.527 L1395.26 691.527 L1395.82 691.527 L1396.38 691.527 L1396.94 691.527 L1397.5 691.527 L1398.06 691.527 L1398.62 691.527 L1399.18 691.527 L1399.74 691.527 L1400.3 691.527 L1400.86 691.527 L1401.41 691.527 L1401.97 691.527 L1402.53 691.527 L1403.09 691.527 L1403.65 691.527 L1404.21 691.527 L1404.77 691.527 L1405.33 691.527 L1405.89 691.527 L1406.45 691.527 L1407.01 691.527 L1407.57 691.527 L1408.13 691.527 L1408.68 691.527 L1409.24 691.527 L1409.8 691.527 L1410.36 691.527 L1410.92 691.527 L1411.48 691.527 L1412.04 691.527 L1412.6 691.527 L1413.16 691.527 L1413.72 691.527 L1414.28 691.527 L1414.84 691.527 L1415.4 691.527 L1415.95 691.527 L1416.51 691.527 L1417.07 691.527 L1417.63 691.527 L1418.19 691.527 L1418.75 691.527 L1419.31 691.527 L1419.87 691.527 L1420.43 691.527 L1420.99 691.527 L1421.55 691.527 L1422.11 691.527 L1422.67 691.527 L1423.23 691.527 L1423.78 691.527 L1424.34 691.527 L1424.9 691.527 L1425.46 691.527 L1426.02 691.527 L1426.58 691.527 L1427.14 691.527 L1427.7 691.527 L1428.26 691.527 L1428.82 691.527 L1429.38 691.527 L1429.94 691.527 L1430.5 691.527 L1431.05 691.527 L1431.61 691.527 L1432.17 691.527 L1432.73 691.527 L1433.29 691.527 L1433.85 691.527 L1434.41 691.527 L1434.97 691.527 L1435.53 691.527 L1436.09 691.527 L1436.65 691.527 L1437.21 691.527 L1437.77 691.527 L1438.33 691.527 L1438.88 691.527 L1439.44 691.527 L1440 691.527 L1440.56 691.527 L1441.12 691.527 L1441.68 691.527 L1442.24 691.527 L1442.8 691.527 L1443.36 691.527 L1443.92 691.527 L1444.48 691.527 L1445.04 691.527 L1445.6 691.527 L1446.15 691.527 L1446.71 691.527 L1447.27 691.527 L1447.83 691.527 L1448.39 691.527 L1448.95 691.527 L1449.51 691.527 L1450.07 691.527 L1450.63 691.527 L1451.19 691.527 L1451.75 691.527 L1452.31 691.527 L1452.87 691.527 L1453.42 691.527 L1453.98 691.527 L1454.54 691.527 L1455.1 691.527 L1455.66 691.527 L1456.22 691.527 L1456.78 691.527 L1457.34 691.527 L1457.9 691.527 L1458.46 691.527 L1459.02 691.527 L1459.58 691.527 L1460.14 691.527 L1460.7 691.527 L1461.25 691.527 L1461.81 691.527 L1462.37 691.527 L1462.93 691.527 L1463.49 691.527 L1464.05 691.527 L1464.61 691.527 L1465.17 691.527 L1465.73 691.527 L1466.29 691.527 L1466.85 691.527 L1467.41 691.527 L1467.97 691.527 L1468.52 691.527 L1469.08 691.527 L1469.64 691.527 L1470.2 691.527 L1470.76 691.527 L1471.32 691.527 L1471.88 691.527 L1472.44 691.527 L1473 691.527 L1473.56 691.527 L1474.12 691.527 L1474.68 691.527 L1475.24 691.527 L1475.79 691.527 L1476.35 691.527 L1476.91 691.527 L1477.47 691.527 L1478.03 691.527 L1478.59 691.527 L1479.15 691.527 L1479.71 691.527 L1480.27 691.527 L1480.83 691.527 L1481.39 691.527 L1481.95 691.527 L1482.51 691.527 L1483.07 691.527 L1483.62 691.527 L1484.18 691.527 L1484.74 691.527 L1485.3 691.527 L1485.86 691.527 L1486.42 691.527 L1486.98 691.527 L1487.54 691.527 L1488.1 691.527 L1488.66 691.527 L1489.22 691.527 L1489.78 691.527 L1490.34 691.527 L1490.89 691.527 L1491.45 691.527 L1492.01 691.527 L1492.57 691.527 L1493.13 691.527 L1493.69 691.527 L1494.25 691.527 L1494.81 691.527 L1495.37 691.527 L1495.93 691.527 L1496.49 691.527 L1497.05 691.527 L1497.61 691.527 L1498.16 691.527 L1498.72 691.527 L1499.28 691.527 L1499.84 691.527 L1500.4 691.527 L1500.96 691.527 L1501.52 691.527 L1502.08 691.527 L1502.64 691.527 L1503.2 691.527 L1503.76 691.527 L1504.32 691.527 L1504.88 691.527 L1505.44 691.527 L1505.99 691.527 L1506.55 691.527 L1507.11 691.527 L1507.67 691.527 L1508.23 691.527 L1508.79 691.527 L1509.35 691.527 L1509.91 691.527 L1510.47 691.527 L1511.03 691.527 L1511.59 691.527 L1512.15 691.527 L1512.71 691.527 L1513.26 691.527 L1513.82 691.527 L1514.38 691.527 L1514.94 691.527 L1515.5 691.527 L1516.06 691.527 L1516.62 691.527 L1517.18 691.527 L1517.74 691.527 L1518.3 691.527 L1518.86 691.527 L1519.42 691.527 L1519.98 691.527 L1520.53 691.527 L1521.09 691.527 L1521.65 691.527 L1522.21 691.527 L1522.77 691.527 L1523.33 691.527 L1523.89 691.527 L1524.45 691.527 L1525.01 691.527 L1525.57 691.527 L1526.13 691.527 L1526.69 691.527 L1527.25 691.527 L1527.81 691.527 L1528.36 691.527 L1528.92 691.527 L1529.48 691.527 L1530.04 691.527 L1530.6 691.527 L1531.16 691.527 L1531.72 691.527 L1532.28 691.527 L1532.84 691.527 L1533.4 691.527 L1533.96 691.527 L1534.52 691.527 L1535.08 691.527 L1535.63 691.527 L1536.19 691.527 L1536.75 691.527 L1537.31 691.527 L1537.87 691.527 L1538.43 691.527 L1538.99 691.527 L1539.55 691.527 L1540.11 691.527 L1540.67 691.527 L1541.23 691.527 L1541.79 691.527 L1542.35 691.527 L1542.9 691.527 L1543.46 691.527 L1544.02 691.527 L1544.58 691.527 L1545.14 691.527 L1545.7 691.527 L1546.26 691.527 L1546.82 691.527 L1547.38 691.527 L1547.94 691.527 L1548.5 691.527 L1549.06 691.527 L1549.62 691.527 L1550.18 691.527 L1550.73 691.527 L1551.29 691.527 L1551.85 691.527 L1552.41 691.527 L1552.97 691.527 L1553.53 691.527 L1554.09 691.527 L1554.65 691.527 L1555.21 691.527 L1555.77 691.527 L1556.33 691.527 L1556.89 691.527 L1557.45 691.527 L1558 691.527 L1558.56 691.527 L1559.12 691.527 L1559.68 691.527 L1560.24 691.527 L1560.8 691.527 L1561.36 691.527 L1561.92 691.527 L1562.48 691.527 L1563.04 691.527 L1563.6 691.527 L1564.16 691.527 L1564.72 691.527 L1565.28 691.527 L1565.83 691.527 L1566.39 691.527 L1566.95 691.527 L1567.51 691.527 L1568.07 691.527 L1568.63 691.527 L1569.19 691.527 L1569.75 691.527 L1570.31 691.527 L1570.87 691.527 L1571.43 691.527 L1571.99 691.527 L1572.55 691.527 L1573.1 691.527 L1573.66 691.527 L1574.22 691.527 L1574.78 691.527 L1575.34 691.527 L1575.9 691.527 L1576.46 691.527 L1577.02 691.527 L1577.58 691.527 L1578.14 691.527 L1578.7 691.527 L1579.26 691.527 L1579.82 691.527 L1580.37 691.527 L1580.93 691.527 L1581.49 691.527 L1582.05 691.527 L1582.61 691.527 L1583.17 691.527 L1583.73 691.527 L1584.29 691.527 L1584.85 691.527 L1585.41 691.527 L1585.97 691.527 L1586.53 691.527 L1587.09 691.527 L1587.65 691.527 L1588.2 691.527 L1588.76 691.527 L1589.32 691.527 L1589.88 691.527 L1590.44 691.527 L1591 691.527 L1591.56 691.527 L1592.12 691.527 L1592.68 691.527 L1593.24 691.527 L1593.8 691.527 L1594.36 691.527 L1594.92 691.527 L1595.47 691.527 L1596.03 691.527 L1596.59 691.527 L1597.15 691.527 L1597.71 691.527 L1598.27 691.527 L1598.83 691.527 L1599.39 691.527 L1599.95 691.527 L1600.51 691.527 L1601.07 691.527 L1601.63 691.527 L1602.19 691.527 L1602.74 691.527 L1603.3 691.527 L1603.86 691.527 L1604.42 691.527 L1604.98 691.527 L1605.54 691.527 L1606.1 691.527 L1606.66 691.527 L1607.22 691.527 L1607.78 691.527 L1608.34 691.527 L1608.9 691.527 L1609.46 691.527 L1610.02 691.527 L1610.57 691.527 L1611.13 691.527 L1611.69 691.527 L1612.25 691.527 L1612.81 691.527 L1613.37 691.527 L1613.93 691.527 L1614.49 691.527 L1615.05 691.527 L1615.61 691.527 L1616.17 691.527 L1616.73 691.527 L1617.29 691.527 L1617.84 691.527 L1618.4 691.527 L1618.96 691.527 L1619.52 691.527 L1620.08 691.527 L1620.64 691.527 L1621.2 691.527 L1621.76 691.527 L1622.32 691.527 L1622.88 691.527 L1623.44 691.527 L1624 691.527 L1624.56 691.527 L1625.11 691.527 L1625.67 691.527 L1626.23 691.527 L1626.79 691.527 L1627.35 691.527 L1627.91 691.527 L1628.47 691.527 L1629.03 691.527 L1629.59 691.527 L1630.15 691.527 L1630.71 691.527 L1631.27 691.527 L1631.83 691.527 L1632.39 691.527 L1632.94 691.527 L1633.5 691.527 L1634.06 691.527 L1634.62 691.527 L1635.18 691.527 L1635.74 691.527 L1636.3 691.527 L1636.86 691.527 L1637.42 691.527 L1637.98 691.527 L1638.54 691.527 L1639.1 691.527 L1639.66 691.527 L1640.21 691.527 L1640.77 691.527 L1641.33 691.527 L1641.89 691.527 L1642.45 691.527 L1643.01 691.527 L1643.57 691.527 L1644.13 691.527 L1644.69 691.527 L1645.25 691.527 L1645.81 691.527 L1646.37 691.527 L1646.93 691.527 L1647.48 691.527 L1648.04 691.527 L1648.6 691.527 L1649.16 691.527 L1649.72 691.527 L1650.28 691.527 L1650.84 691.527 L1651.4 691.527 L1651.96 691.527 L1652.52 691.527 L1653.08 691.527 L1653.64 691.527 L1654.2 691.527 L1654.76 691.527 L1655.31 691.527 L1655.87 691.527 L1656.43 691.527 L1656.99 691.527 L1657.55 691.527 L1658.11 691.527 L1658.67 691.527 L1659.23 691.527 L1659.79 691.527 L1660.35 691.527 L1660.91 691.527 L1661.47 691.527 L1662.03 691.527 L1662.58 691.527 L1663.14 691.527 L1663.7 691.527 L1664.26 691.527 L1664.82 691.527 L1665.38 691.527 L1665.94 691.527 L1666.5 691.527 L1667.06 691.527 L1667.62 691.527 L1668.18 691.527 L1668.74 691.527 L1669.3 691.527 L1669.85 691.527 L1670.41 691.527 L1670.97 691.527 L1671.53 691.527 L1672.09 691.527 L1672.65 691.527 L1673.21 691.527 L1673.77 691.527 L1674.33 691.527 L1674.89 691.527 L1675.45 691.527 L1676.01 691.527 L1676.57 691.527 L1677.13 691.527 L1677.68 691.527 L1678.24 691.527 L1678.8 691.527 L1679.36 691.527 L1679.92 691.527 L1680.48 691.527 L1681.04 691.527 L1681.6 691.527 L1682.16 691.527 L1682.72 691.527 L1683.28 691.527 L1683.84 691.527 L1684.4 691.527 L1684.95 691.527 L1685.51 691.527 L1686.07 691.527 L1686.63 691.527 L1687.19 691.527 L1687.75 691.527 L1688.31 691.527 L1688.87 691.527 L1689.43 691.527 L1689.99 691.527 L1690.55 691.527 L1691.11 691.527 L1691.67 691.527 L1692.23 691.527 L1692.78 691.527 L1693.34 691.527 L1693.9 691.527 L1694.46 691.527 L1695.02 691.527 L1695.58 691.527 L1696.14 691.527 L1696.7 691.527 L1697.26 691.527 L1697.82 691.527 L1698.38 691.527 L1698.94 691.527 L1699.5 691.527 L1700.05 691.527 L1700.61 691.527 L1701.17 691.527 L1701.73 691.527 L1702.29 691.527 L1702.85 691.527 L1703.41 691.527 L1703.97 691.527 L1704.53 691.527 L1705.09 691.527 L1705.65 691.527 L1706.21 691.527 L1706.77 691.527 L1707.32 691.527 L1707.88 691.527 L1708.44 691.527 L1709 691.527 L1709.56 691.527 L1710.12 691.527 L1710.68 691.527 L1711.24 691.527 L1711.8 691.527 L1712.36 691.527 L1712.92 691.527 L1713.48 691.527 L1714.04 691.527 L1714.6 691.527 L1715.15 691.527 L1715.71 691.527 L1716.27 691.527 L1716.83 691.527 L1717.39 691.527 L1717.95 691.527 L1718.51 691.527 L1719.07 691.527 L1719.63 691.527 L1720.19 691.527 L1720.75 691.527 L1721.31 691.527 L1721.87 691.527 L1722.42 691.527 L1722.98 691.527 L1723.54 691.527 L1724.1 691.527 L1724.66 691.527 L1725.22 691.527 L1725.78 691.527 L1726.34 691.527 L1726.9 691.527 L1727.46 691.527 L1728.02 691.527 L1728.58 691.527 L1729.14 691.527 L1729.69 691.527 L1730.25 691.527 L1730.81 691.527 L1731.37 691.527 L1731.93 691.527 L1732.49 691.527 L1733.05 691.527 L1733.61 691.527 L1734.17 691.527 L1734.73 691.527 L1735.29 691.527 L1735.85 691.527 L1736.41 691.527 L1736.97 691.527 L1737.52 691.527 L1738.08 691.527 L1738.64 691.527 L1739.2 691.527 L1739.76 691.527 L1740.32 691.527 L1740.88 691.527 L1741.44 691.527 L1742 691.527 L1742.56 691.527 L1743.12 691.527 L1743.68 691.527 L1744.24 691.527 L1744.79 691.527 L1745.35 691.527 L1745.91 691.527 L1746.47 691.527 L1747.03 691.527 L1747.59 691.527 L1748.15 691.527 L1748.71 691.527 L1749.27 691.527 L1749.83 691.527 L1750.39 691.527 L1750.95 691.527 L1751.51 691.527 L1752.06 691.527 L1752.62 691.527 L1753.18 691.527 L1753.74 691.527 L1754.3 691.527 L1754.86 691.527 L1755.42 691.527 L1755.98 691.527 L1756.54 691.527 L1757.1 691.527 L1757.66 691.527 L1758.22 691.527 L1758.78 691.527 L1759.34 691.527 L1759.89 691.527 L1760.45 691.527 L1761.01 691.527 L1761.57 691.527 L1762.13 691.527 L1762.69 691.527 L1763.25 691.527 L1763.81 691.527 L1764.37 691.527 L1764.93 691.527 L1765.49 691.527 L1766.05 691.527 L1766.61 691.527 L1767.16 691.527 L1767.72 691.527 L1768.28 691.527 L1768.84 691.527 L1769.4 691.527 L1769.96 691.527 L1770.52 691.527 L1771.08 691.527 L1771.64 691.527 L1772.2 691.527 L1772.76 691.527 L1773.32 691.527 L1773.88 691.527 L1774.43 691.527 L1774.99 691.527 L1775.55 691.527 L1776.11 691.527 L1776.67 691.527 L1777.23 691.527 L1777.79 691.527 L1778.35 691.527 L1778.91 691.527 L1779.47 691.527 L1780.03 691.527 L1780.59 691.527 L1781.15 691.527 L1781.71 691.527 L1782.26 691.527 L1782.82 691.527 L1783.38 691.527 L1783.94 691.527 L1784.5 691.527 L1785.06 691.527 L1785.62 691.527 L1786.18 691.527 L1786.74 691.527 L1787.3 691.527 L1787.86 691.527 L1788.42 691.527 L1788.98 691.527 L1789.53 691.527 L1790.09 691.527 L1790.65 691.527 L1791.21 691.527 L1791.77 691.527 L1792.33 691.527 L1792.89 691.527 L1793.45 691.527 L1794.01 691.527 L1794.57 691.527 L1795.13 691.527 L1795.69 691.527 L1796.25 691.527 L1796.8 691.527 L1797.36 691.527 L1797.92 691.527 L1798.48 691.527 L1799.04 691.527 L1799.6 691.527 L1800.16 691.527 L1800.72 691.527 L1801.28 691.527 L1801.84 691.527 L1802.4 691.527 L1802.96 691.527 L1803.52 691.527 L1804.08 691.527 L1804.63 691.527 L1805.19 691.527 L1805.75 691.527 L1806.31 691.527 L1806.87 691.527 L1807.43 691.527 L1807.99 691.527 L1808.55 691.527 L1809.11 691.527 L1809.67 691.527 L1810.23 691.527 L1810.79 691.527 L1811.35 691.527 L1811.9 691.527 L1812.46 691.527 L1813.02 691.527 L1813.58 691.527 L1814.14 691.527 L1814.7 691.527 L1815.26 691.527 L1815.82 691.527 L1816.38 691.527 L1816.94 691.527 L1817.5 691.527 L1818.06 691.527 L1818.62 691.527 L1819.18 691.527 L1819.73 691.527 L1820.29 691.527 L1820.85 691.527 L1821.41 691.527 L1821.97 691.527 L1822.53 691.527 L1823.09 691.527 L1823.65 691.527 L1824.21 691.527 L1824.77 691.527 L1825.33 691.527 L1825.89 691.527 L1826.45 691.527 L1827 691.527 L1827.56 691.527 L1828.12 691.527 L1828.68 691.527 L1829.24 691.527 L1829.8 691.527 L1830.36 691.527 L1830.92 691.527 L1831.48 691.527 L1832.04 691.527 L1832.6 691.527 L1833.16 691.527 L1833.72 691.527 L1834.27 691.527 L1834.83 691.527 L1835.39 691.527 L1835.95 691.527 L1836.51 691.527 L1837.07 691.527 L1837.63 691.527 L1838.19 691.527 L1838.19 682.069 L1837.63 682.069 L1837.07 682.069 L1836.51 682.069 L1835.95 682.069 L1835.39 682.069 L1834.83 682.069 L1834.27 682.069 L1833.72 682.069 L1833.16 682.069 L1832.6 682.069 L1832.04 682.069 L1831.48 682.069 L1830.92 682.069 L1830.36 682.069 L1829.8 682.069 L1829.24 682.069 L1828.68 682.069 L1828.12 682.069 L1827.56 682.069 L1827 682.069 L1826.45 682.069 L1825.89 682.069 L1825.33 682.069 L1824.77 682.069 L1824.21 682.069 L1823.65 682.069 L1823.09 682.069 L1822.53 682.069 L1821.97 682.069 L1821.41 682.069 L1820.85 682.069 L1820.29 682.069 L1819.73 682.069 L1819.18 682.069 L1818.62 682.069 L1818.06 682.069 L1817.5 682.069 L1816.94 682.069 L1816.38 682.069 L1815.82 682.069 L1815.26 682.069 L1814.7 682.069 L1814.14 682.069 L1813.58 682.069 L1813.02 682.069 L1812.46 682.069 L1811.9 682.069 L1811.35 682.069 L1810.79 682.069 L1810.23 682.069 L1809.67 682.069 L1809.11 682.069 L1808.55 682.069 L1807.99 682.069 L1807.43 682.069 L1806.87 682.069 L1806.31 682.069 L1805.75 682.069 L1805.19 682.069 L1804.63 682.069 L1804.08 682.069 L1803.52 682.069 L1802.96 682.069 L1802.4 682.069 L1801.84 682.069 L1801.28 682.069 L1800.72 682.069 L1800.16 682.069 L1799.6 682.069 L1799.04 682.069 L1798.48 682.069 L1797.92 682.069 L1797.36 682.069 L1796.8 682.069 L1796.25 682.069 L1795.69 682.069 L1795.13 682.069 L1794.57 682.069 L1794.01 682.069 L1793.45 682.069 L1792.89 682.069 L1792.33 682.069 L1791.77 682.069 L1791.21 682.069 L1790.65 682.069 L1790.09 682.069 L1789.53 682.069 L1788.98 682.069 L1788.42 682.069 L1787.86 682.069 L1787.3 682.069 L1786.74 682.069 L1786.18 682.069 L1785.62 682.069 L1785.06 682.069 L1784.5 682.069 L1783.94 682.069 L1783.38 682.069 L1782.82 682.069 L1782.26 682.069 L1781.71 682.069 L1781.15 682.069 L1780.59 682.069 L1780.03 682.069 L1779.47 682.069 L1778.91 682.069 L1778.35 682.069 L1777.79 682.069 L1777.23 682.069 L1776.67 682.069 L1776.11 682.069 L1775.55 682.069 L1774.99 682.069 L1774.43 682.069 L1773.88 682.069 L1773.32 682.069 L1772.76 682.069 L1772.2 682.069 L1771.64 682.069 L1771.08 682.069 L1770.52 682.069 L1769.96 682.069 L1769.4 682.069 L1768.84 682.069 L1768.28 682.069 L1767.72 682.069 L1767.16 682.069 L1766.61 682.069 L1766.05 682.069 L1765.49 682.069 L1764.93 682.069 L1764.37 682.069 L1763.81 682.069 L1763.25 682.069 L1762.69 682.069 L1762.13 682.069 L1761.57 682.069 L1761.01 682.069 L1760.45 682.069 L1759.89 682.069 L1759.34 682.069 L1758.78 682.069 L1758.22 682.069 L1757.66 682.069 L1757.1 682.069 L1756.54 682.069 L1755.98 682.069 L1755.42 682.069 L1754.86 682.069 L1754.3 682.069 L1753.74 682.069 L1753.18 682.069 L1752.62 682.069 L1752.06 682.069 L1751.51 682.069 L1750.95 682.069 L1750.39 682.069 L1749.83 682.069 L1749.27 682.069 L1748.71 682.069 L1748.15 682.069 L1747.59 682.069 L1747.03 682.069 L1746.47 682.069 L1745.91 682.069 L1745.35 682.069 L1744.79 682.069 L1744.24 682.069 L1743.68 682.069 L1743.12 682.069 L1742.56 682.069 L1742 682.069 L1741.44 682.069 L1740.88 682.069 L1740.32 682.069 L1739.76 682.069 L1739.2 682.069 L1738.64 682.069 L1738.08 682.069 L1737.52 682.069 L1736.97 682.069 L1736.41 682.069 L1735.85 682.069 L1735.29 682.069 L1734.73 682.069 L1734.17 682.069 L1733.61 682.069 L1733.05 682.069 L1732.49 682.069 L1731.93 682.069 L1731.37 682.069 L1730.81 682.069 L1730.25 682.069 L1729.69 682.069 L1729.14 682.069 L1728.58 682.069 L1728.02 682.069 L1727.46 682.069 L1726.9 682.069 L1726.34 682.069 L1725.78 682.069 L1725.22 682.069 L1724.66 682.069 L1724.1 682.069 L1723.54 682.069 L1722.98 682.069 L1722.42 682.069 L1721.87 682.069 L1721.31 682.069 L1720.75 682.069 L1720.19 682.069 L1719.63 682.069 L1719.07 682.069 L1718.51 682.069 L1717.95 682.069 L1717.39 682.069 L1716.83 682.069 L1716.27 682.069 L1715.71 682.069 L1715.15 682.069 L1714.6 682.069 L1714.04 682.069 L1713.48 682.069 L1712.92 682.069 L1712.36 682.069 L1711.8 682.069 L1711.24 682.069 L1710.68 682.069 L1710.12 682.069 L1709.56 682.069 L1709 682.069 L1708.44 682.069 L1707.88 682.069 L1707.32 682.069 L1706.77 682.069 L1706.21 682.069 L1705.65 682.069 L1705.09 682.069 L1704.53 682.069 L1703.97 682.069 L1703.41 682.069 L1702.85 682.069 L1702.29 682.069 L1701.73 682.069 L1701.17 682.069 L1700.61 682.069 L1700.05 682.069 L1699.5 682.069 L1698.94 682.069 L1698.38 682.069 L1697.82 682.069 L1697.26 682.069 L1696.7 682.069 L1696.14 682.069 L1695.58 682.069 L1695.02 682.069 L1694.46 682.069 L1693.9 682.069 L1693.34 682.069 L1692.78 682.069 L1692.23 682.069 L1691.67 682.069 L1691.11 682.069 L1690.55 682.069 L1689.99 682.069 L1689.43 682.069 L1688.87 682.069 L1688.31 682.069 L1687.75 682.069 L1687.19 682.069 L1686.63 682.069 L1686.07 682.069 L1685.51 682.069 L1684.95 682.069 L1684.4 682.069 L1683.84 682.069 L1683.28 682.069 L1682.72 682.069 L1682.16 682.069 L1681.6 682.069 L1681.04 682.069 L1680.48 682.069 L1679.92 682.069 L1679.36 682.069 L1678.8 682.069 L1678.24 682.069 L1677.68 682.069 L1677.13 682.069 L1676.57 682.069 L1676.01 682.069 L1675.45 682.069 L1674.89 682.069 L1674.33 682.069 L1673.77 682.069 L1673.21 682.069 L1672.65 682.069 L1672.09 682.069 L1671.53 682.069 L1670.97 682.069 L1670.41 682.069 L1669.85 682.069 L1669.3 682.069 L1668.74 682.069 L1668.18 682.069 L1667.62 682.069 L1667.06 682.069 L1666.5 682.069 L1665.94 682.069 L1665.38 682.069 L1664.82 682.069 L1664.26 682.069 L1663.7 682.069 L1663.14 682.069 L1662.58 682.069 L1662.03 682.069 L1661.47 682.069 L1660.91 682.069 L1660.35 682.069 L1659.79 682.069 L1659.23 682.069 L1658.67 682.069 L1658.11 682.069 L1657.55 682.069 L1656.99 682.069 L1656.43 682.069 L1655.87 682.069 L1655.31 682.069 L1654.76 682.069 L1654.2 682.069 L1653.64 682.069 L1653.08 682.069 L1652.52 682.069 L1651.96 682.069 L1651.4 682.069 L1650.84 682.069 L1650.28 682.069 L1649.72 682.069 L1649.16 682.069 L1648.6 682.069 L1648.04 682.069 L1647.48 682.069 L1646.93 682.069 L1646.37 682.069 L1645.81 682.069 L1645.25 682.069 L1644.69 682.069 L1644.13 682.069 L1643.57 682.069 L1643.01 682.069 L1642.45 682.069 L1641.89 682.069 L1641.33 682.069 L1640.77 682.069 L1640.21 682.069 L1639.66 682.069 L1639.1 682.069 L1638.54 682.069 L1637.98 682.069 L1637.42 682.069 L1636.86 682.069 L1636.3 682.069 L1635.74 682.069 L1635.18 682.069 L1634.62 682.069 L1634.06 682.069 L1633.5 682.069 L1632.94 682.069 L1632.39 682.069 L1631.83 682.069 L1631.27 682.069 L1630.71 682.069 L1630.15 682.069 L1629.59 682.069 L1629.03 682.069 L1628.47 682.069 L1627.91 682.069 L1627.35 682.069 L1626.79 682.069 L1626.23 682.069 L1625.67 682.069 L1625.11 682.069 L1624.56 682.069 L1624 682.069 L1623.44 682.069 L1622.88 682.069 L1622.32 682.069 L1621.76 682.069 L1621.2 682.069 L1620.64 682.069 L1620.08 682.069 L1619.52 682.069 L1618.96 682.069 L1618.4 682.069 L1617.84 682.069 L1617.29 682.069 L1616.73 682.069 L1616.17 682.069 L1615.61 682.069 L1615.05 682.069 L1614.49 682.069 L1613.93 682.069 L1613.37 682.069 L1612.81 682.069 L1612.25 682.069 L1611.69 682.069 L1611.13 682.069 L1610.57 682.069 L1610.02 682.069 L1609.46 682.069 L1608.9 682.069 L1608.34 682.069 L1607.78 682.069 L1607.22 682.069 L1606.66 682.069 L1606.1 682.069 L1605.54 682.069 L1604.98 682.069 L1604.42 682.069 L1603.86 682.069 L1603.3 682.069 L1602.74 682.069 L1602.19 682.069 L1601.63 682.069 L1601.07 682.069 L1600.51 682.069 L1599.95 682.069 L1599.39 682.069 L1598.83 682.069 L1598.27 682.069 L1597.71 682.069 L1597.15 682.069 L1596.59 682.069 L1596.03 682.069 L1595.47 682.069 L1594.92 682.069 L1594.36 682.069 L1593.8 682.069 L1593.24 682.069 L1592.68 682.069 L1592.12 682.069 L1591.56 682.069 L1591 682.069 L1590.44 682.069 L1589.88 682.069 L1589.32 682.069 L1588.76 682.069 L1588.2 682.069 L1587.65 682.069 L1587.09 682.069 L1586.53 682.069 L1585.97 682.069 L1585.41 682.069 L1584.85 682.069 L1584.29 682.069 L1583.73 682.069 L1583.17 682.069 L1582.61 682.069 L1582.05 682.069 L1581.49 682.069 L1580.93 682.069 L1580.37 682.069 L1579.82 682.069 L1579.26 682.069 L1578.7 682.069 L1578.14 682.069 L1577.58 682.069 L1577.02 682.069 L1576.46 682.069 L1575.9 682.069 L1575.34 682.069 L1574.78 682.069 L1574.22 682.069 L1573.66 682.069 L1573.1 682.069 L1572.55 682.069 L1571.99 682.069 L1571.43 682.069 L1570.87 682.069 L1570.31 682.069 L1569.75 682.069 L1569.19 682.069 L1568.63 682.069 L1568.07 682.069 L1567.51 682.069 L1566.95 682.069 L1566.39 682.069 L1565.83 682.069 L1565.28 682.069 L1564.72 682.069 L1564.16 682.069 L1563.6 682.069 L1563.04 682.069 L1562.48 682.069 L1561.92 682.069 L1561.36 682.069 L1560.8 682.069 L1560.24 682.069 L1559.68 682.069 L1559.12 682.069 L1558.56 682.069 L1558 682.069 L1557.45 682.069 L1556.89 682.069 L1556.33 682.069 L1555.77 682.069 L1555.21 682.069 L1554.65 682.069 L1554.09 682.069 L1553.53 682.069 L1552.97 682.069 L1552.41 682.069 L1551.85 682.069 L1551.29 682.069 L1550.73 682.069 L1550.18 682.069 L1549.62 682.069 L1549.06 682.069 L1548.5 682.069 L1547.94 682.069 L1547.38 682.069 L1546.82 682.069 L1546.26 682.069 L1545.7 682.069 L1545.14 682.069 L1544.58 682.069 L1544.02 682.069 L1543.46 682.069 L1542.9 682.069 L1542.35 682.069 L1541.79 682.069 L1541.23 682.069 L1540.67 682.069 L1540.11 682.069 L1539.55 682.069 L1538.99 682.069 L1538.43 682.069 L1537.87 682.069 L1537.31 682.069 L1536.75 682.069 L1536.19 682.069 L1535.63 682.069 L1535.08 682.069 L1534.52 682.069 L1533.96 682.069 L1533.4 682.069 L1532.84 682.069 L1532.28 682.069 L1531.72 682.069 L1531.16 682.069 L1530.6 682.069 L1530.04 682.069 L1529.48 682.069 L1528.92 682.069 L1528.36 682.069 L1527.81 682.069 L1527.25 682.069 L1526.69 682.069 L1526.13 682.069 L1525.57 682.069 L1525.01 682.069 L1524.45 682.069 L1523.89 682.069 L1523.33 682.069 L1522.77 682.069 L1522.21 682.069 L1521.65 682.069 L1521.09 682.069 L1520.53 682.069 L1519.98 682.069 L1519.42 682.069 L1518.86 682.069 L1518.3 682.069 L1517.74 682.069 L1517.18 682.069 L1516.62 682.069 L1516.06 682.069 L1515.5 682.069 L1514.94 682.069 L1514.38 682.069 L1513.82 682.069 L1513.26 682.069 L1512.71 682.069 L1512.15 682.069 L1511.59 682.069 L1511.03 682.069 L1510.47 682.069 L1509.91 682.069 L1509.35 682.069 L1508.79 682.069 L1508.23 682.069 L1507.67 682.069 L1507.11 682.069 L1506.55 682.069 L1505.99 682.069 L1505.44 682.069 L1504.88 682.069 L1504.32 682.069 L1503.76 682.069 L1503.2 682.069 L1502.64 682.069 L1502.08 682.069 L1501.52 682.069 L1500.96 682.069 L1500.4 682.069 L1499.84 682.069 L1499.28 682.069 L1498.72 682.069 L1498.16 682.069 L1497.61 682.069 L1497.05 682.069 L1496.49 682.069 L1495.93 682.069 L1495.37 682.069 L1494.81 682.069 L1494.25 682.069 L1493.69 682.069 L1493.13 682.069 L1492.57 682.069 L1492.01 682.069 L1491.45 682.069 L1490.89 682.069 L1490.34 682.069 L1489.78 682.069 L1489.22 682.069 L1488.66 682.069 L1488.1 682.069 L1487.54 682.069 L1486.98 682.069 L1486.42 682.069 L1485.86 682.069 L1485.3 682.069 L1484.74 682.069 L1484.18 682.069 L1483.62 682.069 L1483.07 682.069 L1482.51 682.069 L1481.95 682.069 L1481.39 682.069 L1480.83 682.069 L1480.27 682.069 L1479.71 682.069 L1479.15 682.069 L1478.59 682.069 L1478.03 682.069 L1477.47 682.069 L1476.91 682.069 L1476.35 682.069 L1475.79 682.069 L1475.24 682.069 L1474.68 682.069 L1474.12 682.069 L1473.56 682.069 L1473 682.069 L1472.44 682.069 L1471.88 682.069 L1471.32 682.069 L1470.76 682.069 L1470.2 682.069 L1469.64 682.069 L1469.08 682.069 L1468.52 682.069 L1467.97 682.069 L1467.41 682.069 L1466.85 682.069 L1466.29 682.069 L1465.73 682.069 L1465.17 682.069 L1464.61 682.069 L1464.05 682.069 L1463.49 682.069 L1462.93 682.069 L1462.37 682.069 L1461.81 682.069 L1461.25 682.069 L1460.7 682.069 L1460.14 682.069 L1459.58 682.069 L1459.02 682.069 L1458.46 682.069 L1457.9 682.069 L1457.34 682.069 L1456.78 682.069 L1456.22 682.069 L1455.66 682.069 L1455.1 682.069 L1454.54 682.069 L1453.98 682.069 L1453.42 682.069 L1452.87 682.069 L1452.31 682.069 L1451.75 682.069 L1451.19 682.069 L1450.63 682.069 L1450.07 682.069 L1449.51 682.069 L1448.95 682.069 L1448.39 682.069 L1447.83 682.069 L1447.27 682.069 L1446.71 682.069 L1446.15 682.069 L1445.6 682.069 L1445.04 682.069 L1444.48 682.069 L1443.92 682.069 L1443.36 682.069 L1442.8 682.069 L1442.24 682.069 L1441.68 682.069 L1441.12 682.069 L1440.56 682.069 L1440 682.069 L1439.44 682.069 L1438.88 682.069 L1438.33 682.069 L1437.77 682.069 L1437.21 682.069 L1436.65 682.069 L1436.09 682.069 L1435.53 682.069 L1434.97 682.069 L1434.41 682.069 L1433.85 682.069 L1433.29 682.069 L1432.73 682.069 L1432.17 682.069 L1431.61 682.069 L1431.05 682.069 L1430.5 682.069 L1429.94 682.069 L1429.38 682.069 L1428.82 682.069 L1428.26 682.069 L1427.7 682.069 L1427.14 682.069 L1426.58 682.069 L1426.02 682.069 L1425.46 682.069 L1424.9 682.069 L1424.34 682.069 L1423.78 682.069 L1423.23 682.069 L1422.67 682.069 L1422.11 682.069 L1421.55 682.069 L1420.99 682.069 L1420.43 682.069 L1419.87 682.069 L1419.31 682.069 L1418.75 682.069 L1418.19 682.069 L1417.63 682.069 L1417.07 682.069 L1416.51 682.069 L1415.95 682.069 L1415.4 682.069 L1414.84 682.069 L1414.28 682.069 L1413.72 682.069 L1413.16 682.069 L1412.6 682.069 L1412.04 682.069 L1411.48 682.069 L1410.92 682.069 L1410.36 682.069 L1409.8 682.069 L1409.24 682.069 L1408.68 682.069 L1408.13 682.069 L1407.57 682.069 L1407.01 682.069 L1406.45 682.069 L1405.89 682.069 L1405.33 682.069 L1404.77 682.069 L1404.21 682.069 L1403.65 682.069 L1403.09 682.069 L1402.53 682.069 L1401.97 682.069 L1401.41 682.069 L1400.86 682.069 L1400.3 682.069 L1399.74 682.069 L1399.18 682.069 L1398.62 682.069 L1398.06 682.069 L1397.5 682.069 L1396.94 682.069 L1396.38 682.069 L1395.82 682.069 L1395.26 682.069 L1394.7 682.069 L1394.14 682.069 L1393.58 682.069 L1393.03 682.069 L1392.47 682.069 L1391.91 682.069 L1391.35 682.069 L1390.79 682.069 L1390.23 682.069 L1389.67 682.069 L1389.11 682.069 L1388.55 682.069 L1387.99 682.069 L1387.43 682.069 L1386.87 682.069 L1386.31 682.069 L1385.76 682.069 L1385.2 682.069 L1384.64 682.069 L1384.08 682.069 L1383.52 682.069 L1382.96 682.069 L1382.4 682.069 L1381.84 682.069 L1381.28 682.069 L1380.72 682.069 L1380.16 682.069 L1379.6 682.069 L1379.04 682.069 L1378.49 682.069 L1377.93 682.069 L1377.37 682.069 L1376.81 682.069 L1376.25 682.069 L1375.69 682.069 L1375.13 682.069 L1374.57 682.069 L1374.01 682.069 L1373.45 682.069 L1372.89 682.069 L1372.33 682.069 L1371.77 682.069 L1371.21 682.069 L1370.66 682.069 L1370.1 682.069 L1369.54 682.069 L1368.98 682.069 L1368.42 682.069 L1367.86 682.069 L1367.3 682.069 L1366.74 682.069 L1366.18 682.069 L1365.62 682.069 L1365.06 682.069 L1364.5 682.069 L1363.94 682.069 L1363.39 682.069 L1362.83 682.069 L1362.27 682.069 L1361.71 682.069 L1361.15 682.069 L1360.59 682.069 L1360.03 682.069 L1359.47 682.069 L1358.91 682.069 L1358.35 682.069 L1357.79 682.069 L1357.23 682.069 L1356.67 682.069 L1356.12 682.069 L1355.56 682.069 L1355 682.069 L1354.44 682.069 L1353.88 682.069 L1353.32 682.069 L1352.76 682.069 L1352.2 682.069 L1351.64 682.069 L1351.08 682.069 L1350.52 682.069 L1349.96 682.069 L1349.4 682.069 L1348.84 682.069 L1348.29 682.069 L1347.73 682.069 L1347.17 682.069 L1346.61 682.069 L1346.05 682.069 L1345.49 682.069 L1344.93 682.069 L1344.37 682.069 L1343.81 682.069 L1343.25 682.069 L1342.69 682.069 L1342.13 682.069 L1341.57 682.069 L1341.02 682.069 L1340.46 682.069 L1339.9 682.069 L1339.34 682.069 L1338.78 682.069 L1338.22 682.069 L1337.66 682.069 L1337.1 682.069 L1336.54 682.069 L1335.98 682.069 L1335.42 682.069 L1334.86 682.069 L1334.3 682.069 L1333.75 682.069 L1333.19 682.069 L1332.63 682.069 L1332.07 682.069 L1331.51 682.069 L1330.95 682.069 L1330.39 682.069 L1329.83 682.069 L1329.27 682.069 L1328.71 682.069 L1328.15 682.069 L1327.59 682.069 L1327.03 682.069 L1326.47 682.069 L1325.92 682.069 L1325.36 682.069 L1324.8 682.069 L1324.24 682.069 L1323.68 682.069 L1323.12 682.069 L1322.56 682.069 L1322 682.069 L1321.44 682.069 L1320.88 682.069 L1320.32 682.069 L1319.76 682.069 L1319.2 682.069 L1318.65 682.069 L1318.09 682.069 L1317.53 682.069 L1316.97 682.069 L1316.41 682.069 L1315.85 682.069 L1315.29 682.069 L1314.73 682.069 L1314.17 682.069 L1313.61 682.069 L1313.05 682.069 L1312.49 682.069 L1311.93 682.069 L1311.38 682.069 L1310.82 682.069 L1310.26 682.069 L1309.7 682.069 L1309.14 682.069 L1308.58 682.069 L1308.02 682.069 L1307.46 682.069 L1306.9 682.069 L1306.34 682.069 L1305.78 682.069 L1305.22 682.069 L1304.66 682.069 L1304.1 682.069 L1303.55 682.069 L1302.99 682.069 L1302.43 682.069 L1301.87 682.069 L1301.31 682.069 L1300.75 682.069 L1300.19 682.069 L1299.63 682.069 L1299.07 682.069 L1298.51 682.069 L1297.95 682.069 L1297.39 682.069 L1296.83 682.069 L1296.28 682.069 L1295.72 682.069 L1295.16 682.069 L1294.6 682.069 L1294.04 682.069 L1293.48 682.069 L1292.92 682.069 L1292.36 682.069 L1291.8 682.069 L1291.24 682.069 L1290.68 682.069 L1290.12 682.069 L1289.56 682.069 L1289 682.069 L1288.45 682.069 L1287.89 682.069 L1287.33 682.069 L1286.77 682.069 L1286.21 682.069 L1285.65 682.069 L1285.09 682.069 L1284.53 682.069 L1283.97 682.069 L1283.41 682.069 L1282.85 682.069 L1282.29 682.069 L1281.73 682.069 L1281.18 682.069 L1280.62 682.069 L1280.06 682.069 L1279.5 682.069 L1278.94 682.069 L1278.38 682.069 L1277.82 682.069 L1277.26 682.069 L1276.7 682.069 L1276.14 682.069 L1275.58 682.069 L1275.02 682.069 L1274.46 682.069 L1273.91 682.069 L1273.35 682.069 L1272.79 682.069 L1272.23 682.069 L1271.67 682.069 L1271.11 682.069 L1270.55 682.069 L1269.99 682.069 L1269.43 682.069 L1268.87 682.069 L1268.31 682.069 L1267.75 682.069 L1267.19 682.069 L1266.63 682.069 L1266.08 682.069 L1265.52 682.069 L1264.96 682.069 L1264.4 682.069 L1263.84 682.069 L1263.28 682.069 L1262.72 682.069 L1262.16 682.069 L1261.6 682.069 L1261.04 682.069 L1260.48 682.069 L1259.92 682.069 L1259.36 682.069 L1258.81 682.069 L1258.25 682.069 L1257.69 682.069 L1257.13 682.069 L1256.57 682.069 L1256.01 682.069 L1255.45 682.069 L1254.89 682.069 L1254.33 682.069 L1253.77 682.069 L1253.21 682.069 L1252.65 682.069 L1252.09 682.069 L1251.54 682.069 L1250.98 682.069 L1250.42 682.069 L1249.86 682.069 L1249.3 682.069 L1248.74 682.069 L1248.18 682.069 L1247.62 682.069 L1247.06 682.069 L1246.5 682.069 L1245.94 682.069 L1245.38 682.069 L1244.82 682.069 L1244.26 682.069 L1243.71 682.069 L1243.15 682.069 L1242.59 682.069 L1242.03 682.069 L1241.47 682.069 L1240.91 682.069 L1240.35 682.069 L1239.79 682.069 L1239.23 682.069 L1238.67 682.069 L1238.11 682.069 L1237.55 682.069 L1236.99 682.069 L1236.44 682.069 L1235.88 682.069 L1235.32 682.069 L1234.76 682.069 L1234.2 682.069 L1233.64 682.069 L1233.08 682.069 L1232.52 682.069 L1231.96 682.069 L1231.4 682.069 L1230.84 682.069 L1230.28 682.069 L1229.72 682.069 L1229.17 682.069 L1228.61 682.069 L1228.05 682.069 L1227.49 682.069 L1226.93 682.069 L1226.37 682.069 L1225.81 682.069 L1225.25 682.069 L1224.69 682.069 L1224.13 682.069 L1223.57 682.069 L1223.01 682.069 L1222.45 682.069 L1221.89 682.069 L1221.34 682.069 L1220.78 682.069 L1220.22 682.069 L1219.66 682.069 L1219.1 682.069 L1218.54 682.069 L1217.98 682.069 L1217.42 682.069 L1216.86 682.069 L1216.3 682.069 L1215.74 682.069 L1215.18 682.069 L1214.62 682.069 L1214.07 682.069 L1213.51 682.069 L1212.95 682.069 L1212.39 682.069 L1211.83 682.069 L1211.27 682.069 L1210.71 682.069 L1210.15 682.069 L1209.59 682.069 L1209.03 682.069 L1208.47 682.069 L1207.91 682.069 L1207.35 682.069 L1206.8 682.069 L1206.24 682.069 L1205.68 682.069 L1205.12 682.069 L1204.56 682.069 L1204 682.069 L1203.44 682.069 L1202.88 682.069 L1202.32 682.069 L1201.76 682.069 L1201.2 682.069 L1200.64 682.069 L1200.08 682.069 L1199.52 682.069 L1198.97 682.069 L1198.41 682.069 L1197.85 682.069 L1197.29 682.069 L1196.73 682.069 L1196.17 682.069 L1195.61 682.069 L1195.05 682.069 L1194.49 682.069 L1193.93 682.069 L1193.37 682.069 L1192.81 682.069 L1192.25 682.069 L1191.7 682.069 L1191.14 682.069 L1190.58 682.069 L1190.02 682.069 L1189.46 682.069 L1188.9 682.069 L1188.34 682.069 L1187.78 682.069 L1187.22 682.069 L1186.66 682.069 L1186.1 682.069 L1185.54 682.069 L1184.98 682.069 L1184.43 682.069 L1183.87 682.069 L1183.31 682.069 L1182.75 682.069 L1182.19 682.069 L1181.63 682.069 L1181.07 682.069 L1180.51 682.069 L1179.95 682.069 L1179.39 682.069 L1178.83 682.069 L1178.27 682.069 L1177.71 682.069 L1177.15 682.069 L1176.6 682.069 L1176.04 682.069 L1175.48 682.069 L1174.92 682.069 L1174.36 682.069 L1173.8 682.069 L1173.24 682.069 L1172.68 682.069 L1172.12 682.069 L1171.56 682.069 L1171 682.069 L1170.44 682.069 L1169.88 682.069 L1169.33 682.069 L1168.77 682.069 L1168.21 682.069 L1167.65 682.069 L1167.09 682.069 L1166.53 682.069 L1165.97 682.069 L1165.41 682.069 L1164.85 682.069 L1164.29 682.069 L1163.73 682.069 L1163.17 682.069 L1162.61 682.069 L1162.05 682.069 L1161.5 682.069 L1160.94 682.069 L1160.38 682.069 L1159.82 682.069 L1159.26 682.069 L1158.7 682.069 L1158.14 682.069 L1157.58 682.069 L1157.02 682.069 L1156.46 682.069 L1155.9 682.069 L1155.34 682.069 L1154.78 682.069 L1154.23 682.069 L1153.67 682.069 L1153.11 682.069 L1152.55 682.069 L1151.99 682.069 L1151.43 682.069 L1150.87 682.069 L1150.31 682.069 L1149.75 682.069 L1149.19 682.069 L1148.63 682.069 L1148.07 682.069 L1147.51 682.069 L1146.96 682.069 L1146.4 682.069 L1145.84 682.069 L1145.28 682.069 L1144.72 682.069 L1144.16 682.069 L1143.6 682.069 L1143.04 682.069 L1142.48 682.069 L1141.92 682.069 L1141.36 682.069 L1140.8 682.069 L1140.24 682.069 L1139.68 682.069 L1139.13 682.069 L1138.57 682.069 L1138.01 682.069 L1137.45 682.069 L1136.89 682.069 L1136.33 682.069 L1135.77 682.069 L1135.21 682.069 L1134.65 682.069 L1134.09 682.069 L1133.53 682.069 L1132.97 682.069 L1132.41 682.069 L1131.86 682.069 L1131.3 682.069 L1130.74 682.069 L1130.18 682.069 L1129.62 682.069 L1129.06 682.069 L1128.5 682.069 L1127.94 682.069 L1127.38 682.069 L1126.82 682.069 L1126.26 682.069 L1125.7 682.069 L1125.14 682.069 L1124.59 682.069 L1124.03 682.069 L1123.47 682.069 L1122.91 682.069 L1122.35 682.069 L1121.79 682.069 L1121.23 682.069 L1120.67 682.069 L1120.11 682.069 L1119.55 682.069 L1118.99 682.069 L1118.43 682.069 L1117.87 682.069 L1117.31 682.069 L1116.76 682.069 L1116.2 682.069 L1115.64 682.069 L1115.08 682.069 L1114.52 682.069 L1113.96 682.069 L1113.4 682.069 L1112.84 682.069 L1112.28 682.069 L1111.72 682.069 L1111.16 682.069 L1110.6 682.069 L1110.04 682.069 L1109.49 682.069 L1108.93 682.069 L1108.37 682.069 L1107.81 682.069 L1107.25 682.069 L1106.69 682.069 L1106.13 682.069 L1105.57 682.069 L1105.01 682.069 L1104.45 682.069 L1103.89 682.069 L1103.33 682.069 L1102.77 682.069 L1102.22 682.069 L1101.66 682.069 L1101.1 682.069 L1100.54 682.069 L1099.98 682.069 L1099.42 682.069 L1098.86 682.069 L1098.3 682.069 L1097.74 682.069 L1097.18 682.069 L1096.62 682.069 L1096.06 682.069 L1095.5 682.069 L1094.94 682.069 L1094.39 682.069 L1093.83 682.069 L1093.27 682.069 L1092.71 682.069 L1092.15 682.069 L1091.59 682.069 L1091.03 682.069 L1090.47 682.069 L1089.91 682.069 L1089.35 682.069 L1088.79 682.069 L1088.23 682.069 L1087.67 682.069 L1087.12 682.069 L1086.56 682.069 L1086 682.069 L1085.44 682.069 L1084.88 682.069 L1084.32 682.069 L1083.76 682.069 L1083.2 682.069 L1082.64 682.069 L1082.08 682.069 L1081.52 682.069 L1080.96 682.069 L1080.4 682.069 L1079.85 682.069 L1079.29 682.069 L1078.73 682.069 L1078.17 682.069 L1077.61 682.069 L1077.05 682.069 L1076.49 682.069 L1075.93 682.069 L1075.37 682.069 L1074.81 682.069 L1074.25 682.069 L1073.69 682.069 L1073.13 682.069 L1072.57 682.069 L1072.02 682.069 L1071.46 682.069 L1070.9 682.069 L1070.34 682.069 L1069.78 682.069 L1069.22 682.069 L1068.66 682.069 L1068.1 682.069 L1067.54 682.069 L1066.98 682.069 L1066.42 682.069 L1065.86 682.069 L1065.3 682.069 L1064.75 682.069 L1064.19 682.069 L1063.63 682.069 L1063.07 682.069 L1062.51 682.069 L1061.95 682.069 L1061.39 682.069 L1060.83 682.069 L1060.27 682.069 L1059.71 682.069 L1059.15 682.069 L1058.59 682.069 L1058.03 682.069 L1057.48 682.069 L1056.92 682.069 L1056.36 682.069 L1055.8 682.069 L1055.24 682.069 L1054.68 682.069 L1054.12 682.069 L1053.56 682.069 L1053 682.069 L1052.44 682.069 L1051.88 682.069 L1051.32 682.069 L1050.76 682.069 L1050.2 682.069 L1049.65 682.069 L1049.09 682.069 L1048.53 682.069 L1047.97 682.069 L1047.41 682.069 L1046.85 682.069 L1046.29 682.069 L1045.73 682.069 L1045.17 682.069 L1044.61 682.069 L1044.05 682.069 L1043.49 682.069 L1042.93 682.069 L1042.38 682.069 L1041.82 682.069 L1041.26 682.069 L1040.7 682.069 L1040.14 682.069 L1039.58 682.069 L1039.02 682.069 L1038.46 682.069 L1037.9 682.069 L1037.34 682.069 L1036.78 682.069 L1036.22 682.069 L1035.66 682.069 L1035.1 682.069 L1034.55 682.069 L1033.99 682.069 L1033.43 682.069 L1032.87 682.069 L1032.31 682.069 L1031.75 682.069 L1031.19 682.069 L1030.63 682.069 L1030.07 682.069 L1029.51 682.069 L1028.95 682.069 L1028.39 682.069 L1027.83 682.069 L1027.28 682.069 L1026.72 682.069 L1026.16 682.069 L1025.6 682.069 L1025.04 682.069 L1024.48 682.069 L1023.92 682.069 L1023.36 682.069 L1022.8 682.069 L1022.24 682.069 L1021.68 682.069 L1021.12 682.069 L1020.56 682.069 L1020.01 682.069 L1019.45 682.069 L1018.89 682.069 L1018.33 682.069 L1017.77 682.069 L1017.21 682.069 L1016.65 682.069 L1016.09 682.069 L1015.53 682.069 L1014.97 682.069 L1014.41 682.069 L1013.85 682.069 L1013.29 682.069 L1012.73 682.069 L1012.18 682.069 L1011.62 682.069 L1011.06 682.069 L1010.5 682.069 L1009.94 682.069 L1009.38 682.069 L1008.82 682.069 L1008.26 682.069 L1007.7 682.069 L1007.14 682.069 L1006.58 682.069 L1006.02 682.069 L1005.46 682.069 L1004.91 682.069 L1004.35 682.069 L1003.79 682.069 L1003.23 682.069 L1002.67 682.069 L1002.11 682.069 L1001.55 682.069 L1000.99 682.069 L1000.43 682.069 L999.872 682.069 L999.313 682.069 L998.754 682.069 L998.194 682.069 L997.635 682.069 L997.076 682.069 L996.517 682.069 L995.957 682.069 L995.398 682.069 L994.839 682.069 L994.28 682.069 L993.72 682.069 L993.161 682.069 L992.602 682.069 L992.043 682.069 L991.483 682.069 L990.924 682.069 L990.365 682.069 L989.806 682.069 L989.246 682.069 L988.687 682.069 L988.128 682.069 L987.569 682.069 L987.009 682.069 L986.45 682.069 L985.891 682.069 L985.332 682.069 L984.772 682.069 L984.213 682.069 L983.654 682.069 L983.095 682.069 L982.535 682.069 L981.976 682.069 L981.417 682.069 L980.858 682.069 L980.298 682.069 L979.739 682.069 L979.18 682.069 L978.621 682.069 L978.061 682.069 L977.502 682.069 L976.943 682.069 L976.384 682.069 L975.824 682.069 L975.265 682.069 L974.706 682.069 L974.147 682.069 L973.587 682.069 L973.028 682.069 L972.469 682.069 L971.91 682.069 L971.35 682.069 L970.791 682.069 L970.232 682.069 L969.673 682.069 L969.113 682.069 L968.554 682.069 L967.995 682.069 L967.436 682.069 L966.876 682.069 L966.317 682.069 L965.758 682.069 L965.199 682.069 L964.639 682.069 L964.08 682.069 L963.521 682.069 L962.962 682.069 L962.402 682.069 L961.843 682.069 L961.284 682.069 L960.725 682.069 L960.165 682.069 L959.606 682.069 L959.047 682.069 L958.488 682.069 L957.928 682.069 L957.369 682.069 L956.81 682.069 L956.251 682.069 L955.691 682.069 L955.132 682.069 L954.573 682.069 L954.014 682.069 L953.454 682.069 L952.895 682.069 L952.336 682.069 L951.777 682.069 L951.217 682.069 L950.658 682.069 L950.099 682.069 L949.54 682.069 L948.98 682.069 L948.421 682.069 L947.862 682.069 L947.303 682.069 L946.743 682.069 L946.184 682.069 L945.625 682.069 L945.066 682.069 L944.506 682.069 L943.947 682.069 L943.388 682.069 L942.829 682.069 L942.269 682.069 L941.71 682.069 L941.151 682.069 L940.592 682.069 L940.032 682.069 L939.473 682.069 L938.914 682.069 L938.355 682.069 L937.795 682.069 L937.236 682.069 L936.677 682.069 L936.118 682.069 L935.558 682.069 L934.999 682.069 L934.44 682.069 L933.881 682.069 L933.321 682.069 L932.762 682.069 L932.203 682.069 L931.644 682.069 L931.084 682.069 L930.525 682.069 L929.966 682.069 L929.406 682.069 L928.847 682.069 L928.288 682.069 L927.729 682.069 L927.169 682.069 L926.61 682.069 L926.051 682.069 L925.492 682.069 L924.932 682.069 L924.373 682.069 L923.814 682.069 L923.255 682.069 L922.695 682.069 L922.136 682.069 L921.577 682.069 L921.018 682.069 L920.458 682.069 L919.899 682.069 L919.34 682.069 L918.781 682.069 L918.221 682.069 L917.662 682.069 L917.103 682.069 L916.544 682.069 L915.984 682.069 L915.425 682.069 L914.866 682.069 L914.307 682.069 L913.747 682.069 L913.188 682.069 L912.629 682.069 L912.07 682.069 L911.51 682.069 L910.951 682.069 L910.392 682.069 L909.833 682.069 L909.273 682.069 L908.714 682.069 L908.155 682.069 L907.596 682.069 L907.036 682.069 L906.477 682.069 L905.918 682.069 L905.359 682.069 L904.799 682.069 L904.24 682.069 L903.681 682.069 L903.122 682.069 L902.562 682.069 L902.003 682.069 L901.444 682.069 L900.885 682.069 L900.325 682.069 L899.766 682.069 L899.207 682.069 L898.648 682.069 L898.088 682.069 L897.529 682.069 L896.97 682.069 L896.411 682.069 L895.851 682.069 L895.292 682.069 L894.733 682.069 L894.174 682.069 L893.614 682.069 L893.055 682.069 L892.496 682.069 L891.937 682.069 L891.377 682.069 L890.818 682.069 L890.259 682.069 L889.7 682.069 L889.14 682.069 L888.581 682.069 L888.022 682.069 L887.463 682.069 L886.903 682.069 L886.344 682.069 L885.785 682.069 L885.226 682.069 L884.666 682.069 L884.107 682.069 L883.548 682.069 L882.989 682.069 L882.429 682.069 L881.87 682.069 L881.311 682.069 L880.752 682.069 L880.192 682.069 L879.633 682.069 L879.074 682.069 L878.515 682.069 L877.955 682.069 L877.396 682.069 L876.837 682.069 L876.278 682.069 L875.718 682.069 L875.159 682.069 L874.6 682.069 L874.041 682.069 L873.481 682.069 L872.922 682.069 L872.363 682.069 L871.804 682.069 L871.244 682.069 L870.685 682.069 L870.126 682.069 L869.567 682.069 L869.007 682.069 L868.448 682.069 L867.889 682.069 L867.33 682.069 L866.77 682.069 L866.211 682.069 L865.652 682.069 L865.093 682.069 L864.533 682.069 L863.974 682.069 L863.415 682.069 L862.856 682.069 L862.296 682.069 L861.737 682.069 L861.178 682.069 L860.619 682.069 L860.059 682.069 L859.5 682.069 L858.941 682.069 L858.382 682.069 L857.822 682.069 L857.263 682.069 L856.704 682.069 L856.145 682.069 L855.585 682.069 L855.026 682.069 L854.467 682.069 L853.908 682.069 L853.348 682.069 L852.789 682.069 L852.23 682.069 L851.671 682.069 L851.111 682.069 L850.552 682.069 L849.993 682.069 L849.434 682.069 L848.874 682.069 L848.315 682.069 L847.756 682.069 L847.197 682.069 L846.637 682.069 L846.078 682.069 L845.519 682.069 L844.96 682.069 L844.4 682.069 L843.841 682.069 L843.282 682.069 L842.723 682.069 L842.163 682.069 L841.604 682.069 L841.045 682.069 L840.486 682.069 L839.926 682.069 L839.367 682.069 L838.808 682.069 L838.249 682.069 L837.689 682.069 L837.13 682.069 L836.571 682.069 L836.012 682.069 L835.452 682.069 L834.893 682.069 L834.334 682.069 L833.775 682.069 L833.215 682.069 L832.656 682.069 L832.097 682.069 L831.538 682.069 L830.978 682.069 L830.419 682.069 L829.86 682.069 L829.301 682.069 L828.741 682.069 L828.182 682.069 L827.623 682.069 L827.064 682.069 L826.504 682.069 L825.945 682.069 L825.386 682.069 L824.827 682.069 L824.267 682.069 L823.708 682.069 L823.149 682.069 L822.59 682.069 L822.03 682.069 L821.471 682.069 L820.912 682.069 L820.353 682.069 L819.793 682.069 L819.234 682.069 L818.675 682.069 L818.116 682.069 L817.556 682.069 L816.997 682.069 L816.438 682.069 L815.879 682.069 L815.319 682.069 L814.76 682.069 L814.201 682.069 L813.642 682.069 L813.082 682.069 L812.523 682.069 L811.964 682.069 L811.405 682.069 L810.845 682.069 L810.286 682.069 L809.727 682.069 L809.168 682.069 L808.608 682.069 L808.049 682.069 L807.49 682.069 L806.931 682.069 L806.371 682.069 L805.812 682.069 L805.253 682.069 L804.693 682.069 L804.134 682.069 L803.575 682.069 L803.016 682.069 L802.456 682.069 L801.897 682.069 L801.338 682.069 L800.779 682.069 L800.219 682.069 L799.66 682.069 L799.101 682.069 L798.542 682.069 L797.982 682.069 L797.423 682.069 L796.864 682.069 L796.305 682.069 L795.745 682.069 L795.186 682.069 L794.627 682.069 L794.068 682.069 L793.508 682.069 L792.949 682.069 L792.39 682.069 L791.831 682.069 L791.271 682.069 L790.712 682.069 L790.153 682.069 L789.594 682.069 L789.034 682.069 L788.475 682.069 L787.916 682.069 L787.357 682.069 L786.797 682.069 L786.238 682.069 L785.679 682.069 L785.12 682.069 L784.56 682.069 L784.001 682.069 L783.442 682.069 L782.883 682.069 L782.323 682.069 L781.764 682.069 L781.205 682.069 L780.646 682.069 L780.086 682.069 L779.527 682.069 L778.968 682.069 L778.409 682.069 L777.849 682.069 L777.29 682.069 L776.731 682.069 L776.172 682.069 L775.612 682.069 L775.053 682.069 L774.494 682.069 L773.935 682.069 L773.375 682.069 L772.816 682.069 L772.257 682.069 L771.698 682.069 L771.138 682.069 L770.579 682.069 L770.02 682.069 L769.461 682.069 L768.901 682.069 L768.342 682.069 L767.783 682.069 L767.224 682.069 L766.664 682.069 L766.105 682.069 L765.546 682.069 L764.987 682.069 L764.427 682.069 L763.868 682.069 L763.309 682.069 L762.75 682.069 L762.19 682.069 L761.631 682.069 L761.072 682.069 L760.513 682.069 L759.953 682.069 L759.394 682.069 L758.835 682.069 L758.276 682.069 L757.716 682.069 L757.157 682.069 L756.598 682.069 L756.039 682.069 L755.479 682.069 L754.92 682.069 L754.361 682.069 L753.802 682.069 L753.242 682.069 L752.683 682.069 L752.124 682.069 L751.565 682.069 L751.005 682.069 L750.446 682.069 L749.887 682.069 L749.328 682.069 L748.768 682.069 L748.209 682.069 L747.65 682.069 L747.091 682.069 L746.531 682.069 L745.972 682.069 L745.413 682.069 L744.854 682.069 L744.294 682.069 L743.735 682.069 L743.176 682.069 L742.617 682.069 L742.057 682.069 L741.498 682.069 L740.939 682.069 L740.38 682.069 L739.82 682.069 L739.261 682.069 L738.702 682.069 L738.143 682.069 L737.583 682.069 L737.024 682.069 L736.465 682.069 L735.906 682.069 L735.346 682.069 L734.787 682.069 L734.228 682.069 L733.669 682.069 L733.109 682.069 L732.55 682.069 L731.991 682.069 L731.432 682.069 L730.872 682.069 L730.313 682.069 L729.754 682.069 L729.195 682.069 L728.635 682.069 L728.076 682.069 L727.517 682.069 L726.958 682.069 L726.398 682.069 L725.839 682.069 L725.28 682.069 L724.721 682.069 L724.161 682.069 L723.602 682.069 L723.043 682.069 L722.484 682.069 L721.924 682.069 L721.365 682.069 L720.806 682.069 L720.247 682.069  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,686.798 720.806,686.798 721.365,686.798 721.924,686.798 722.484,686.798 723.043,686.798 723.602,686.798 724.161,686.798 724.721,686.798 725.28,686.798 725.839,686.798 726.398,686.798 726.958,686.798 727.517,686.798 728.076,686.798 728.635,686.798 729.195,686.798 729.754,686.798 730.313,686.798 730.872,686.798 731.432,686.798 731.991,686.798 732.55,686.798 733.109,686.798 733.669,686.798 734.228,686.798 734.787,686.798 735.346,686.798 735.906,686.798 736.465,686.798 737.024,686.798 737.583,686.798 738.143,686.798 738.702,686.798 739.261,686.798 739.82,686.798 740.38,686.798 740.939,686.798 741.498,686.798 742.057,686.798 742.617,686.798 743.176,686.798 743.735,686.798 744.294,686.798 744.854,686.798 745.413,686.798 745.972,686.798 746.531,686.798 747.091,686.798 747.65,686.798 748.209,686.798 748.768,686.798 749.328,686.798 749.887,686.798 750.446,686.798 751.005,686.798 751.565,686.798 752.124,686.798 752.683,686.798 753.242,686.798 753.802,686.798 754.361,686.798 754.92,686.798 755.479,686.798 756.039,686.798 756.598,686.798 757.157,686.798 757.716,686.798 758.276,686.798 758.835,686.798 759.394,686.798 759.953,686.798 760.513,686.798 761.072,686.798 761.631,686.798 762.19,686.798 762.75,686.798 763.309,686.798 763.868,686.798 764.427,686.798 764.987,686.798 765.546,686.798 766.105,686.798 766.664,686.798 767.224,686.798 767.783,686.798 768.342,686.798 768.901,686.798 769.461,686.798 770.02,686.798 770.579,686.798 771.138,686.798 771.698,686.798 772.257,686.798 772.816,686.798 773.375,686.798 773.935,686.798 774.494,686.798 775.053,686.798 775.612,686.798 776.172,686.798 776.731,686.798 777.29,686.798 777.849,686.798 778.409,686.798 778.968,686.798 779.527,686.798 780.086,686.798 780.646,686.798 781.205,686.798 781.764,686.798 782.323,686.798 782.883,686.798 783.442,686.798 784.001,686.798 784.56,686.798 785.12,686.798 785.679,686.798 786.238,686.798 786.797,686.798 787.357,686.798 787.916,686.798 788.475,686.798 789.034,686.798 789.594,686.798 790.153,686.798 790.712,686.798 791.271,686.798 791.831,686.798 792.39,686.798 792.949,686.798 793.508,686.798 794.068,686.798 794.627,686.798 795.186,686.798 795.745,686.798 796.305,686.798 796.864,686.798 797.423,686.798 797.982,686.798 798.542,686.798 799.101,686.798 799.66,686.798 800.219,686.798 800.779,686.798 801.338,686.798 801.897,686.798 802.456,686.798 803.016,686.798 803.575,686.798 804.134,686.798 804.693,686.798 805.253,686.798 805.812,686.798 806.371,686.798 806.931,686.798 807.49,686.798 808.049,686.798 808.608,686.798 809.168,686.798 809.727,686.798 810.286,686.798 810.845,686.798 811.405,686.798 811.964,686.798 812.523,686.798 813.082,686.798 813.642,686.798 814.201,686.798 814.76,686.798 815.319,686.798 815.879,686.798 816.438,686.798 816.997,686.798 817.556,686.798 818.116,686.798 818.675,686.798 819.234,686.798 819.793,686.798 820.353,686.798 820.912,686.798 821.471,686.798 822.03,686.798 822.59,686.798 823.149,686.798 823.708,686.798 824.267,686.798 824.827,686.798 825.386,686.798 825.945,686.798 826.504,686.798 827.064,686.798 827.623,686.798 828.182,686.798 828.741,686.798 829.301,686.798 829.86,686.798 830.419,686.798 830.978,686.798 831.538,686.798 832.097,686.798 832.656,686.798 833.215,686.798 833.775,686.798 834.334,686.798 834.893,686.798 835.452,686.798 836.012,686.798 836.571,686.798 837.13,686.798 837.689,686.798 838.249,686.798 838.808,686.798 839.367,686.798 839.926,686.798 840.486,686.798 841.045,686.798 841.604,686.798 842.163,686.798 842.723,686.798 843.282,686.798 843.841,686.798 844.4,686.798 844.96,686.798 845.519,686.798 846.078,686.798 846.637,686.798 847.197,686.798 847.756,686.798 848.315,686.798 848.874,686.798 849.434,686.798 849.993,686.798 850.552,686.798 851.111,686.798 851.671,686.798 852.23,686.798 852.789,686.798 853.348,686.798 853.908,686.798 854.467,686.798 855.026,686.798 855.585,686.798 856.145,686.798 856.704,686.798 857.263,686.798 857.822,686.798 858.382,686.798 858.941,686.798 859.5,686.798 860.059,686.798 860.619,686.798 861.178,686.798 861.737,686.798 862.296,686.798 862.856,686.798 863.415,686.798 863.974,686.798 864.533,686.798 865.093,686.798 865.652,686.798 866.211,686.798 866.77,686.798 867.33,686.798 867.889,686.798 868.448,686.798 869.007,686.798 869.567,686.798 870.126,686.798 870.685,686.798 871.244,686.798 871.804,686.798 872.363,686.798 872.922,686.798 873.481,686.798 874.041,686.798 874.6,686.798 875.159,686.798 875.718,686.798 876.278,686.798 876.837,686.798 877.396,686.798 877.955,686.798 878.515,686.798 879.074,686.798 879.633,686.798 880.192,686.798 880.752,686.798 881.311,686.798 881.87,686.798 882.429,686.798 882.989,686.798 883.548,686.798 884.107,686.798 884.666,686.798 885.226,686.798 885.785,686.798 886.344,686.798 886.903,686.798 887.463,686.798 888.022,686.798 888.581,686.798 889.14,686.798 889.7,686.798 890.259,686.798 890.818,686.798 891.377,686.798 891.937,686.798 892.496,686.798 893.055,686.798 893.614,686.798 894.174,686.798 894.733,686.798 895.292,686.798 895.851,686.798 896.411,686.798 896.97,686.798 897.529,686.798 898.088,686.798 898.648,686.798 899.207,686.798 899.766,686.798 900.325,686.798 900.885,686.798 901.444,686.798 902.003,686.798 902.562,686.798 903.122,686.798 903.681,686.798 904.24,686.798 904.799,686.798 905.359,686.798 905.918,686.798 906.477,686.798 907.036,686.798 907.596,686.798 908.155,686.798 908.714,686.798 909.273,686.798 909.833,686.798 910.392,686.798 910.951,686.798 911.51,686.798 912.07,686.798 912.629,686.798 913.188,686.798 913.747,686.798 914.307,686.798 914.866,686.798 915.425,686.798 915.984,686.798 916.544,686.798 917.103,686.798 917.662,686.798 918.221,686.798 918.781,686.798 919.34,686.798 919.899,686.798 920.458,686.798 921.018,686.798 921.577,686.798 922.136,686.798 922.695,686.798 923.255,686.798 923.814,686.798 924.373,686.798 924.932,686.798 925.492,686.798 926.051,686.798 926.61,686.798 927.169,686.798 927.729,686.798 928.288,686.798 928.847,686.798 929.406,686.798 929.966,686.798 930.525,686.798 931.084,686.798 931.644,686.798 932.203,686.798 932.762,686.798 933.321,686.798 933.881,686.798 934.44,686.798 934.999,686.798 935.558,686.798 936.118,686.798 936.677,686.798 937.236,686.798 937.795,686.798 938.355,686.798 938.914,686.798 939.473,686.798 940.032,686.798 940.592,686.798 941.151,686.798 941.71,686.798 942.269,686.798 942.829,686.798 943.388,686.798 943.947,686.798 944.506,686.798 945.066,686.798 945.625,686.798 946.184,686.798 946.743,686.798 947.303,686.798 947.862,686.798 948.421,686.798 948.98,686.798 949.54,686.798 950.099,686.798 950.658,686.798 951.217,686.798 951.777,686.798 952.336,686.798 952.895,686.798 953.454,686.798 954.014,686.798 954.573,686.798 955.132,686.798 955.691,686.798 956.251,686.798 956.81,686.798 957.369,686.798 957.928,686.798 958.488,686.798 959.047,686.798 959.606,686.798 960.165,686.798 960.725,686.798 961.284,686.798 961.843,686.798 962.402,686.798 962.962,686.798 963.521,686.798 964.08,686.798 964.639,686.798 965.199,686.798 965.758,686.798 966.317,686.798 966.876,686.798 967.436,686.798 967.995,686.798 968.554,686.798 969.113,686.798 969.673,686.798 970.232,686.798 970.791,686.798 971.35,686.798 971.91,686.798 972.469,686.798 973.028,686.798 973.587,686.798 974.147,686.798 974.706,686.798 975.265,686.798 975.824,686.798 976.384,686.798 976.943,686.798 977.502,686.798 978.061,686.798 978.621,686.798 979.18,686.798 979.739,686.798 980.298,686.798 980.858,686.798 981.417,686.798 981.976,686.798 982.535,686.798 983.095,686.798 983.654,686.798 984.213,686.798 984.772,686.798 985.332,686.798 985.891,686.798 986.45,686.798 987.009,686.798 987.569,686.798 988.128,686.798 988.687,686.798 989.246,686.798 989.806,686.798 990.365,686.798 990.924,686.798 991.483,686.798 992.043,686.798 992.602,686.798 993.161,686.798 993.72,686.798 994.28,686.798 994.839,686.798 995.398,686.798 995.957,686.798 996.517,686.798 997.076,686.798 997.635,686.798 998.194,686.798 998.754,686.798 999.313,686.798 999.872,686.798 1000.43,686.798 1000.99,686.798 1001.55,686.798 1002.11,686.798 1002.67,686.798 1003.23,686.798 1003.79,686.798 1004.35,686.798 1004.91,686.798 1005.46,686.798 1006.02,686.798 1006.58,686.798 1007.14,686.798 1007.7,686.798 1008.26,686.798 1008.82,686.798 1009.38,686.798 1009.94,686.798 1010.5,686.798 1011.06,686.798 1011.62,686.798 1012.18,686.798 1012.73,686.798 1013.29,686.798 1013.85,686.798 1014.41,686.798 1014.97,686.798 1015.53,686.798 1016.09,686.798 1016.65,686.798 1017.21,686.798 1017.77,686.798 1018.33,686.798 1018.89,686.798 1019.45,686.798 1020.01,686.798 1020.56,686.798 1021.12,686.798 1021.68,686.798 1022.24,686.798 1022.8,686.798 1023.36,686.798 1023.92,686.798 1024.48,686.798 1025.04,686.798 1025.6,686.798 1026.16,686.798 1026.72,686.798 1027.28,686.798 1027.83,686.798 1028.39,686.798 1028.95,686.798 1029.51,686.798 1030.07,686.798 1030.63,686.798 1031.19,686.798 1031.75,686.798 1032.31,686.798 1032.87,686.798 1033.43,686.798 1033.99,686.798 1034.55,686.798 1035.1,686.798 1035.66,686.798 1036.22,686.798 1036.78,686.798 1037.34,686.798 1037.9,686.798 1038.46,686.798 1039.02,686.798 1039.58,686.798 1040.14,686.798 1040.7,686.798 1041.26,686.798 1041.82,686.798 1042.38,686.798 1042.93,686.798 1043.49,686.798 1044.05,686.798 1044.61,686.798 1045.17,686.798 1045.73,686.798 1046.29,686.798 1046.85,686.798 1047.41,686.798 1047.97,686.798 1048.53,686.798 1049.09,686.798 1049.65,686.798 1050.2,686.798 1050.76,686.798 1051.32,686.798 1051.88,686.798 1052.44,686.798 1053,686.798 1053.56,686.798 1054.12,686.798 1054.68,686.798 1055.24,686.798 1055.8,686.798 1056.36,686.798 1056.92,686.798 1057.48,686.798 1058.03,686.798 1058.59,686.798 1059.15,686.798 1059.71,686.798 1060.27,686.798 1060.83,686.798 1061.39,686.798 1061.95,686.798 1062.51,686.798 1063.07,686.798 1063.63,686.798 1064.19,686.798 1064.75,686.798 1065.3,686.798 1065.86,686.798 1066.42,686.798 1066.98,686.798 1067.54,686.798 1068.1,686.798 1068.66,686.798 1069.22,686.798 1069.78,686.798 1070.34,686.798 1070.9,686.798 1071.46,686.798 1072.02,686.798 1072.57,686.798 1073.13,686.798 1073.69,686.798 1074.25,686.798 1074.81,686.798 1075.37,686.798 1075.93,686.798 1076.49,686.798 1077.05,686.798 1077.61,686.798 1078.17,686.798 1078.73,686.798 1079.29,686.798 1079.85,686.798 1080.4,686.798 1080.96,686.798 1081.52,686.798 1082.08,686.798 1082.64,686.798 1083.2,686.798 1083.76,686.798 1084.32,686.798 1084.88,686.798 1085.44,686.798 1086,686.798 1086.56,686.798 1087.12,686.798 1087.67,686.798 1088.23,686.798 1088.79,686.798 1089.35,686.798 1089.91,686.798 1090.47,686.798 1091.03,686.798 1091.59,686.798 1092.15,686.798 1092.71,686.798 1093.27,686.798 1093.83,686.798 1094.39,686.798 1094.94,686.798 1095.5,686.798 1096.06,686.798 1096.62,686.798 1097.18,686.798 1097.74,686.798 1098.3,686.798 1098.86,686.798 1099.42,686.798 1099.98,686.798 1100.54,686.798 1101.1,686.798 1101.66,686.798 1102.22,686.798 1102.77,686.798 1103.33,686.798 1103.89,686.798 1104.45,686.798 1105.01,686.798 1105.57,686.798 1106.13,686.798 1106.69,686.798 1107.25,686.798 1107.81,686.798 1108.37,686.798 1108.93,686.798 1109.49,686.798 1110.04,686.798 1110.6,686.798 1111.16,686.798 1111.72,686.798 1112.28,686.798 1112.84,686.798 1113.4,686.798 1113.96,686.798 1114.52,686.798 1115.08,686.798 1115.64,686.798 1116.2,686.798 1116.76,686.798 1117.31,686.798 1117.87,686.798 1118.43,686.798 1118.99,686.798 1119.55,686.798 1120.11,686.798 1120.67,686.798 1121.23,686.798 1121.79,686.798 1122.35,686.798 1122.91,686.798 1123.47,686.798 1124.03,686.798 1124.59,686.798 1125.14,686.798 1125.7,686.798 1126.26,686.798 1126.82,686.798 1127.38,686.798 1127.94,686.798 1128.5,686.798 1129.06,686.798 1129.62,686.798 1130.18,686.798 1130.74,686.798 1131.3,686.798 1131.86,686.798 1132.41,686.798 1132.97,686.798 1133.53,686.798 1134.09,686.798 1134.65,686.798 1135.21,686.798 1135.77,686.798 1136.33,686.798 1136.89,686.798 1137.45,686.798 1138.01,686.798 1138.57,686.798 1139.13,686.798 1139.68,686.798 1140.24,686.798 1140.8,686.798 1141.36,686.798 1141.92,686.798 1142.48,686.798 1143.04,686.798 1143.6,686.798 1144.16,686.798 1144.72,686.798 1145.28,686.798 1145.84,686.798 1146.4,686.798 1146.96,686.798 1147.51,686.798 1148.07,686.798 1148.63,686.798 1149.19,686.798 1149.75,686.798 1150.31,686.798 1150.87,686.798 1151.43,686.798 1151.99,686.798 1152.55,686.798 1153.11,686.798 1153.67,686.798 1154.23,686.798 1154.78,686.798 1155.34,686.798 1155.9,686.798 1156.46,686.798 1157.02,686.798 1157.58,686.798 1158.14,686.798 1158.7,686.798 1159.26,686.798 1159.82,686.798 1160.38,686.798 1160.94,686.798 1161.5,686.798 1162.05,686.798 1162.61,686.798 1163.17,686.798 1163.73,686.798 1164.29,686.798 1164.85,686.798 1165.41,686.798 1165.97,686.798 1166.53,686.798 1167.09,686.798 1167.65,686.798 1168.21,686.798 1168.77,686.798 1169.33,686.798 1169.88,686.798 1170.44,686.798 1171,686.798 1171.56,686.798 1172.12,686.798 1172.68,686.798 1173.24,686.798 1173.8,686.798 1174.36,686.798 1174.92,686.798 1175.48,686.798 1176.04,686.798 1176.6,686.798 1177.15,686.798 1177.71,686.798 1178.27,686.798 1178.83,686.798 1179.39,686.798 1179.95,686.798 1180.51,686.798 1181.07,686.798 1181.63,686.798 1182.19,686.798 1182.75,686.798 1183.31,686.798 1183.87,686.798 1184.43,686.798 1184.98,686.798 1185.54,686.798 1186.1,686.798 1186.66,686.798 1187.22,686.798 1187.78,686.798 1188.34,686.798 1188.9,686.798 1189.46,686.798 1190.02,686.798 1190.58,686.798 1191.14,686.798 1191.7,686.798 1192.25,686.798 1192.81,686.798 1193.37,686.798 1193.93,686.798 1194.49,686.798 1195.05,686.798 1195.61,686.798 1196.17,686.798 1196.73,686.798 1197.29,686.798 1197.85,686.798 1198.41,686.798 1198.97,686.798 1199.52,686.798 1200.08,686.798 1200.64,686.798 1201.2,686.798 1201.76,686.798 1202.32,686.798 1202.88,686.798 1203.44,686.798 1204,686.798 1204.56,686.798 1205.12,686.798 1205.68,686.798 1206.24,686.798 1206.8,686.798 1207.35,686.798 1207.91,686.798 1208.47,686.798 1209.03,686.798 1209.59,686.798 1210.15,686.798 1210.71,686.798 1211.27,686.798 1211.83,686.798 1212.39,686.798 1212.95,686.798 1213.51,686.798 1214.07,686.798 1214.62,686.798 1215.18,686.798 1215.74,686.798 1216.3,686.798 1216.86,686.798 1217.42,686.798 1217.98,686.798 1218.54,686.798 1219.1,686.798 1219.66,686.798 1220.22,686.798 1220.78,686.798 1221.34,686.798 1221.89,686.798 1222.45,686.798 1223.01,686.798 1223.57,686.798 1224.13,686.798 1224.69,686.798 1225.25,686.798 1225.81,686.798 1226.37,686.798 1226.93,686.798 1227.49,686.798 1228.05,686.798 1228.61,686.798 1229.17,686.798 1229.72,686.798 1230.28,686.798 1230.84,686.798 1231.4,686.798 1231.96,686.798 1232.52,686.798 1233.08,686.798 1233.64,686.798 1234.2,686.798 1234.76,686.798 1235.32,686.798 1235.88,686.798 1236.44,686.798 1236.99,686.798 1237.55,686.798 1238.11,686.798 1238.67,686.798 1239.23,686.798 1239.79,686.798 1240.35,686.798 1240.91,686.798 1241.47,686.798 1242.03,686.798 1242.59,686.798 1243.15,686.798 1243.71,686.798 1244.26,686.798 1244.82,686.798 1245.38,686.798 1245.94,686.798 1246.5,686.798 1247.06,686.798 1247.62,686.798 1248.18,686.798 1248.74,686.798 1249.3,686.798 1249.86,686.798 1250.42,686.798 1250.98,686.798 1251.54,686.798 1252.09,686.798 1252.65,686.798 1253.21,686.798 1253.77,686.798 1254.33,686.798 1254.89,686.798 1255.45,686.798 1256.01,686.798 1256.57,686.798 1257.13,686.798 1257.69,686.798 1258.25,686.798 1258.81,686.798 1259.36,686.798 1259.92,686.798 1260.48,686.798 1261.04,686.798 1261.6,686.798 1262.16,686.798 1262.72,686.798 1263.28,686.798 1263.84,686.798 1264.4,686.798 1264.96,686.798 1265.52,686.798 1266.08,686.798 1266.63,686.798 1267.19,686.798 1267.75,686.798 1268.31,686.798 1268.87,686.798 1269.43,686.798 1269.99,686.798 1270.55,686.798 1271.11,686.798 1271.67,686.798 1272.23,686.798 1272.79,686.798 1273.35,686.798 1273.91,686.798 1274.46,686.798 1275.02,686.798 1275.58,686.798 1276.14,686.798 1276.7,686.798 1277.26,686.798 1277.82,686.798 1278.38,686.798 1278.94,686.798 1279.5,686.798 1280.06,686.798 1280.62,686.798 1281.18,686.798 1281.73,686.798 1282.29,686.798 1282.85,686.798 1283.41,686.798 1283.97,686.798 1284.53,686.798 1285.09,686.798 1285.65,686.798 1286.21,686.798 1286.77,686.798 1287.33,686.798 1287.89,686.798 1288.45,686.798 1289,686.798 1289.56,686.798 1290.12,686.798 1290.68,686.798 1291.24,686.798 1291.8,686.798 1292.36,686.798 1292.92,686.798 1293.48,686.798 1294.04,686.798 1294.6,686.798 1295.16,686.798 1295.72,686.798 1296.28,686.798 1296.83,686.798 1297.39,686.798 1297.95,686.798 1298.51,686.798 1299.07,686.798 1299.63,686.798 1300.19,686.798 1300.75,686.798 1301.31,686.798 1301.87,686.798 1302.43,686.798 1302.99,686.798 1303.55,686.798 1304.1,686.798 1304.66,686.798 1305.22,686.798 1305.78,686.798 1306.34,686.798 1306.9,686.798 1307.46,686.798 1308.02,686.798 1308.58,686.798 1309.14,686.798 1309.7,686.798 1310.26,686.798 1310.82,686.798 1311.38,686.798 1311.93,686.798 1312.49,686.798 1313.05,686.798 1313.61,686.798 1314.17,686.798 1314.73,686.798 1315.29,686.798 1315.85,686.798 1316.41,686.798 1316.97,686.798 1317.53,686.798 1318.09,686.798 1318.65,686.798 1319.2,686.798 1319.76,686.798 1320.32,686.798 1320.88,686.798 1321.44,686.798 1322,686.798 1322.56,686.798 1323.12,686.798 1323.68,686.798 1324.24,686.798 1324.8,686.798 1325.36,686.798 1325.92,686.798 1326.47,686.798 1327.03,686.798 1327.59,686.798 1328.15,686.798 1328.71,686.798 1329.27,686.798 1329.83,686.798 1330.39,686.798 1330.95,686.798 1331.51,686.798 1332.07,686.798 1332.63,686.798 1333.19,686.798 1333.75,686.798 1334.3,686.798 1334.86,686.798 1335.42,686.798 1335.98,686.798 1336.54,686.798 1337.1,686.798 1337.66,686.798 1338.22,686.798 1338.78,686.798 1339.34,686.798 1339.9,686.798 1340.46,686.798 1341.02,686.798 1341.57,686.798 1342.13,686.798 1342.69,686.798 1343.25,686.798 1343.81,686.798 1344.37,686.798 1344.93,686.798 1345.49,686.798 1346.05,686.798 1346.61,686.798 1347.17,686.798 1347.73,686.798 1348.29,686.798 1348.84,686.798 1349.4,686.798 1349.96,686.798 1350.52,686.798 1351.08,686.798 1351.64,686.798 1352.2,686.798 1352.76,686.798 1353.32,686.798 1353.88,686.798 1354.44,686.798 1355,686.798 1355.56,686.798 1356.12,686.798 1356.67,686.798 1357.23,686.798 1357.79,686.798 1358.35,686.798 1358.91,686.798 1359.47,686.798 1360.03,686.798 1360.59,686.798 1361.15,686.798 1361.71,686.798 1362.27,686.798 1362.83,686.798 1363.39,686.798 1363.94,686.798 1364.5,686.798 1365.06,686.798 1365.62,686.798 1366.18,686.798 1366.74,686.798 1367.3,686.798 1367.86,686.798 1368.42,686.798 1368.98,686.798 1369.54,686.798 1370.1,686.798 1370.66,686.798 1371.21,686.798 1371.77,686.798 1372.33,686.798 1372.89,686.798 1373.45,686.798 1374.01,686.798 1374.57,686.798 1375.13,686.798 1375.69,686.798 1376.25,686.798 1376.81,686.798 1377.37,686.798 1377.93,686.798 1378.49,686.798 1379.04,686.798 1379.6,686.798 1380.16,686.798 1380.72,686.798 1381.28,686.798 1381.84,686.798 1382.4,686.798 1382.96,686.798 1383.52,686.798 1384.08,686.798 1384.64,686.798 1385.2,686.798 1385.76,686.798 1386.31,686.798 1386.87,686.798 1387.43,686.798 1387.99,686.798 1388.55,686.798 1389.11,686.798 1389.67,686.798 1390.23,686.798 1390.79,686.798 1391.35,686.798 1391.91,686.798 1392.47,686.798 1393.03,686.798 1393.58,686.798 1394.14,686.798 1394.7,686.798 1395.26,686.798 1395.82,686.798 1396.38,686.798 1396.94,686.798 1397.5,686.798 1398.06,686.798 1398.62,686.798 1399.18,686.798 1399.74,686.798 1400.3,686.798 1400.86,686.798 1401.41,686.798 1401.97,686.798 1402.53,686.798 1403.09,686.798 1403.65,686.798 1404.21,686.798 1404.77,686.798 1405.33,686.798 1405.89,686.798 1406.45,686.798 1407.01,686.798 1407.57,686.798 1408.13,686.798 1408.68,686.798 1409.24,686.798 1409.8,686.798 1410.36,686.798 1410.92,686.798 1411.48,686.798 1412.04,686.798 1412.6,686.798 1413.16,686.798 1413.72,686.798 1414.28,686.798 1414.84,686.798 1415.4,686.798 1415.95,686.798 1416.51,686.798 1417.07,686.798 1417.63,686.798 1418.19,686.798 1418.75,686.798 1419.31,686.798 1419.87,686.798 1420.43,686.798 1420.99,686.798 1421.55,686.798 1422.11,686.798 1422.67,686.798 1423.23,686.798 1423.78,686.798 1424.34,686.798 1424.9,686.798 1425.46,686.798 1426.02,686.798 1426.58,686.798 1427.14,686.798 1427.7,686.798 1428.26,686.798 1428.82,686.798 1429.38,686.798 1429.94,686.798 1430.5,686.798 1431.05,686.798 1431.61,686.798 1432.17,686.798 1432.73,686.798 1433.29,686.798 1433.85,686.798 1434.41,686.798 1434.97,686.798 1435.53,686.798 1436.09,686.798 1436.65,686.798 1437.21,686.798 1437.77,686.798 1438.33,686.798 1438.88,686.798 1439.44,686.798 1440,686.798 1440.56,686.798 1441.12,686.798 1441.68,686.798 1442.24,686.798 1442.8,686.798 1443.36,686.798 1443.92,686.798 1444.48,686.798 1445.04,686.798 1445.6,686.798 1446.15,686.798 1446.71,686.798 1447.27,686.798 1447.83,686.798 1448.39,686.798 1448.95,686.798 1449.51,686.798 1450.07,686.798 1450.63,686.798 1451.19,686.798 1451.75,686.798 1452.31,686.798 1452.87,686.798 1453.42,686.798 1453.98,686.798 1454.54,686.798 1455.1,686.798 1455.66,686.798 1456.22,686.798 1456.78,686.798 1457.34,686.798 1457.9,686.798 1458.46,686.798 1459.02,686.798 1459.58,686.798 1460.14,686.798 1460.7,686.798 1461.25,686.798 1461.81,686.798 1462.37,686.798 1462.93,686.798 1463.49,686.798 1464.05,686.798 1464.61,686.798 1465.17,686.798 1465.73,686.798 1466.29,686.798 1466.85,686.798 1467.41,686.798 1467.97,686.798 1468.52,686.798 1469.08,686.798 1469.64,686.798 1470.2,686.798 1470.76,686.798 1471.32,686.798 1471.88,686.798 1472.44,686.798 1473,686.798 1473.56,686.798 1474.12,686.798 1474.68,686.798 1475.24,686.798 1475.79,686.798 1476.35,686.798 1476.91,686.798 1477.47,686.798 1478.03,686.798 1478.59,686.798 1479.15,686.798 1479.71,686.798 1480.27,686.798 1480.83,686.798 1481.39,686.798 1481.95,686.798 1482.51,686.798 1483.07,686.798 1483.62,686.798 1484.18,686.798 1484.74,686.798 1485.3,686.798 1485.86,686.798 1486.42,686.798 1486.98,686.798 1487.54,686.798 1488.1,686.798 1488.66,686.798 1489.22,686.798 1489.78,686.798 1490.34,686.798 1490.89,686.798 1491.45,686.798 1492.01,686.798 1492.57,686.798 1493.13,686.798 1493.69,686.798 1494.25,686.798 1494.81,686.798 1495.37,686.798 1495.93,686.798 1496.49,686.798 1497.05,686.798 1497.61,686.798 1498.16,686.798 1498.72,686.798 1499.28,686.798 1499.84,686.798 1500.4,686.798 1500.96,686.798 1501.52,686.798 1502.08,686.798 1502.64,686.798 1503.2,686.798 1503.76,686.798 1504.32,686.798 1504.88,686.798 1505.44,686.798 1505.99,686.798 1506.55,686.798 1507.11,686.798 1507.67,686.798 1508.23,686.798 1508.79,686.798 1509.35,686.798 1509.91,686.798 1510.47,686.798 1511.03,686.798 1511.59,686.798 1512.15,686.798 1512.71,686.798 1513.26,686.798 1513.82,686.798 1514.38,686.798 1514.94,686.798 1515.5,686.798 1516.06,686.798 1516.62,686.798 1517.18,686.798 1517.74,686.798 1518.3,686.798 1518.86,686.798 1519.42,686.798 1519.98,686.798 1520.53,686.798 1521.09,686.798 1521.65,686.798 1522.21,686.798 1522.77,686.798 1523.33,686.798 1523.89,686.798 1524.45,686.798 1525.01,686.798 1525.57,686.798 1526.13,686.798 1526.69,686.798 1527.25,686.798 1527.81,686.798 1528.36,686.798 1528.92,686.798 1529.48,686.798 1530.04,686.798 1530.6,686.798 1531.16,686.798 1531.72,686.798 1532.28,686.798 1532.84,686.798 1533.4,686.798 1533.96,686.798 1534.52,686.798 1535.08,686.798 1535.63,686.798 1536.19,686.798 1536.75,686.798 1537.31,686.798 1537.87,686.798 1538.43,686.798 1538.99,686.798 1539.55,686.798 1540.11,686.798 1540.67,686.798 1541.23,686.798 1541.79,686.798 1542.35,686.798 1542.9,686.798 1543.46,686.798 1544.02,686.798 1544.58,686.798 1545.14,686.798 1545.7,686.798 1546.26,686.798 1546.82,686.798 1547.38,686.798 1547.94,686.798 1548.5,686.798 1549.06,686.798 1549.62,686.798 1550.18,686.798 1550.73,686.798 1551.29,686.798 1551.85,686.798 1552.41,686.798 1552.97,686.798 1553.53,686.798 1554.09,686.798 1554.65,686.798 1555.21,686.798 1555.77,686.798 1556.33,686.798 1556.89,686.798 1557.45,686.798 1558,686.798 1558.56,686.798 1559.12,686.798 1559.68,686.798 1560.24,686.798 1560.8,686.798 1561.36,686.798 1561.92,686.798 1562.48,686.798 1563.04,686.798 1563.6,686.798 1564.16,686.798 1564.72,686.798 1565.28,686.798 1565.83,686.798 1566.39,686.798 1566.95,686.798 1567.51,686.798 1568.07,686.798 1568.63,686.798 1569.19,686.798 1569.75,686.798 1570.31,686.798 1570.87,686.798 1571.43,686.798 1571.99,686.798 1572.55,686.798 1573.1,686.798 1573.66,686.798 1574.22,686.798 1574.78,686.798 1575.34,686.798 1575.9,686.798 1576.46,686.798 1577.02,686.798 1577.58,686.798 1578.14,686.798 1578.7,686.798 1579.26,686.798 1579.82,686.798 1580.37,686.798 1580.93,686.798 1581.49,686.798 1582.05,686.798 1582.61,686.798 1583.17,686.798 1583.73,686.798 1584.29,686.798 1584.85,686.798 1585.41,686.798 1585.97,686.798 1586.53,686.798 1587.09,686.798 1587.65,686.798 1588.2,686.798 1588.76,686.798 1589.32,686.798 1589.88,686.798 1590.44,686.798 1591,686.798 1591.56,686.798 1592.12,686.798 1592.68,686.798 1593.24,686.798 1593.8,686.798 1594.36,686.798 1594.92,686.798 1595.47,686.798 1596.03,686.798 1596.59,686.798 1597.15,686.798 1597.71,686.798 1598.27,686.798 1598.83,686.798 1599.39,686.798 1599.95,686.798 1600.51,686.798 1601.07,686.798 1601.63,686.798 1602.19,686.798 1602.74,686.798 1603.3,686.798 1603.86,686.798 1604.42,686.798 1604.98,686.798 1605.54,686.798 1606.1,686.798 1606.66,686.798 1607.22,686.798 1607.78,686.798 1608.34,686.798 1608.9,686.798 1609.46,686.798 1610.02,686.798 1610.57,686.798 1611.13,686.798 1611.69,686.798 1612.25,686.798 1612.81,686.798 1613.37,686.798 1613.93,686.798 1614.49,686.798 1615.05,686.798 1615.61,686.798 1616.17,686.798 1616.73,686.798 1617.29,686.798 1617.84,686.798 1618.4,686.798 1618.96,686.798 1619.52,686.798 1620.08,686.798 1620.64,686.798 1621.2,686.798 1621.76,686.798 1622.32,686.798 1622.88,686.798 1623.44,686.798 1624,686.798 1624.56,686.798 1625.11,686.798 1625.67,686.798 1626.23,686.798 1626.79,686.798 1627.35,686.798 1627.91,686.798 1628.47,686.798 1629.03,686.798 1629.59,686.798 1630.15,686.798 1630.71,686.798 1631.27,686.798 1631.83,686.798 1632.39,686.798 1632.94,686.798 1633.5,686.798 1634.06,686.798 1634.62,686.798 1635.18,686.798 1635.74,686.798 1636.3,686.798 1636.86,686.798 1637.42,686.798 1637.98,686.798 1638.54,686.798 1639.1,686.798 1639.66,686.798 1640.21,686.798 1640.77,686.798 1641.33,686.798 1641.89,686.798 1642.45,686.798 1643.01,686.798 1643.57,686.798 1644.13,686.798 1644.69,686.798 1645.25,686.798 1645.81,686.798 1646.37,686.798 1646.93,686.798 1647.48,686.798 1648.04,686.798 1648.6,686.798 1649.16,686.798 1649.72,686.798 1650.28,686.798 1650.84,686.798 1651.4,686.798 1651.96,686.798 1652.52,686.798 1653.08,686.798 1653.64,686.798 1654.2,686.798 1654.76,686.798 1655.31,686.798 1655.87,686.798 1656.43,686.798 1656.99,686.798 1657.55,686.798 1658.11,686.798 1658.67,686.798 1659.23,686.798 1659.79,686.798 1660.35,686.798 1660.91,686.798 1661.47,686.798 1662.03,686.798 1662.58,686.798 1663.14,686.798 1663.7,686.798 1664.26,686.798 1664.82,686.798 1665.38,686.798 1665.94,686.798 1666.5,686.798 1667.06,686.798 1667.62,686.798 1668.18,686.798 1668.74,686.798 1669.3,686.798 1669.85,686.798 1670.41,686.798 1670.97,686.798 1671.53,686.798 1672.09,686.798 1672.65,686.798 1673.21,686.798 1673.77,686.798 1674.33,686.798 1674.89,686.798 1675.45,686.798 1676.01,686.798 1676.57,686.798 1677.13,686.798 1677.68,686.798 1678.24,686.798 1678.8,686.798 1679.36,686.798 1679.92,686.798 1680.48,686.798 1681.04,686.798 1681.6,686.798 1682.16,686.798 1682.72,686.798 1683.28,686.798 1683.84,686.798 1684.4,686.798 1684.95,686.798 1685.51,686.798 1686.07,686.798 1686.63,686.798 1687.19,686.798 1687.75,686.798 1688.31,686.798 1688.87,686.798 1689.43,686.798 1689.99,686.798 1690.55,686.798 1691.11,686.798 1691.67,686.798 1692.23,686.798 1692.78,686.798 1693.34,686.798 1693.9,686.798 1694.46,686.798 1695.02,686.798 1695.58,686.798 1696.14,686.798 1696.7,686.798 1697.26,686.798 1697.82,686.798 1698.38,686.798 1698.94,686.798 1699.5,686.798 1700.05,686.798 1700.61,686.798 1701.17,686.798 1701.73,686.798 1702.29,686.798 1702.85,686.798 1703.41,686.798 1703.97,686.798 1704.53,686.798 1705.09,686.798 1705.65,686.798 1706.21,686.798 1706.77,686.798 1707.32,686.798 1707.88,686.798 1708.44,686.798 1709,686.798 1709.56,686.798 1710.12,686.798 1710.68,686.798 1711.24,686.798 1711.8,686.798 1712.36,686.798 1712.92,686.798 1713.48,686.798 1714.04,686.798 1714.6,686.798 1715.15,686.798 1715.71,686.798 1716.27,686.798 1716.83,686.798 1717.39,686.798 1717.95,686.798 1718.51,686.798 1719.07,686.798 1719.63,686.798 1720.19,686.798 1720.75,686.798 1721.31,686.798 1721.87,686.798 1722.42,686.798 1722.98,686.798 1723.54,686.798 1724.1,686.798 1724.66,686.798 1725.22,686.798 1725.78,686.798 1726.34,686.798 1726.9,686.798 1727.46,686.798 1728.02,686.798 1728.58,686.798 1729.14,686.798 1729.69,686.798 1730.25,686.798 1730.81,686.798 1731.37,686.798 1731.93,686.798 1732.49,686.798 1733.05,686.798 1733.61,686.798 1734.17,686.798 1734.73,686.798 1735.29,686.798 1735.85,686.798 1736.41,686.798 1736.97,686.798 1737.52,686.798 1738.08,686.798 1738.64,686.798 1739.2,686.798 1739.76,686.798 1740.32,686.798 1740.88,686.798 1741.44,686.798 1742,686.798 1742.56,686.798 1743.12,686.798 1743.68,686.798 1744.24,686.798 1744.79,686.798 1745.35,686.798 1745.91,686.798 1746.47,686.798 1747.03,686.798 1747.59,686.798 1748.15,686.798 1748.71,686.798 1749.27,686.798 1749.83,686.798 1750.39,686.798 1750.95,686.798 1751.51,686.798 1752.06,686.798 1752.62,686.798 1753.18,686.798 1753.74,686.798 1754.3,686.798 1754.86,686.798 1755.42,686.798 1755.98,686.798 1756.54,686.798 1757.1,686.798 1757.66,686.798 1758.22,686.798 1758.78,686.798 1759.34,686.798 1759.89,686.798 1760.45,686.798 1761.01,686.798 1761.57,686.798 1762.13,686.798 1762.69,686.798 1763.25,686.798 1763.81,686.798 1764.37,686.798 1764.93,686.798 1765.49,686.798 1766.05,686.798 1766.61,686.798 1767.16,686.798 1767.72,686.798 1768.28,686.798 1768.84,686.798 1769.4,686.798 1769.96,686.798 1770.52,686.798 1771.08,686.798 1771.64,686.798 1772.2,686.798 1772.76,686.798 1773.32,686.798 1773.88,686.798 1774.43,686.798 1774.99,686.798 1775.55,686.798 1776.11,686.798 1776.67,686.798 1777.23,686.798 1777.79,686.798 1778.35,686.798 1778.91,686.798 1779.47,686.798 1780.03,686.798 1780.59,686.798 1781.15,686.798 1781.71,686.798 1782.26,686.798 1782.82,686.798 1783.38,686.798 1783.94,686.798 1784.5,686.798 1785.06,686.798 1785.62,686.798 1786.18,686.798 1786.74,686.798 1787.3,686.798 1787.86,686.798 1788.42,686.798 1788.98,686.798 1789.53,686.798 1790.09,686.798 1790.65,686.798 1791.21,686.798 1791.77,686.798 1792.33,686.798 1792.89,686.798 1793.45,686.798 1794.01,686.798 1794.57,686.798 1795.13,686.798 1795.69,686.798 1796.25,686.798 1796.8,686.798 1797.36,686.798 1797.92,686.798 1798.48,686.798 1799.04,686.798 1799.6,686.798 1800.16,686.798 1800.72,686.798 1801.28,686.798 1801.84,686.798 1802.4,686.798 1802.96,686.798 1803.52,686.798 1804.08,686.798 1804.63,686.798 1805.19,686.798 1805.75,686.798 1806.31,686.798 1806.87,686.798 1807.43,686.798 1807.99,686.798 1808.55,686.798 1809.11,686.798 1809.67,686.798 1810.23,686.798 1810.79,686.798 1811.35,686.798 1811.9,686.798 1812.46,686.798 1813.02,686.798 1813.58,686.798 1814.14,686.798 1814.7,686.798 1815.26,686.798 1815.82,686.798 1816.38,686.798 1816.94,686.798 1817.5,686.798 1818.06,686.798 1818.62,686.798 1819.18,686.798 1819.73,686.798 1820.29,686.798 1820.85,686.798 1821.41,686.798 1821.97,686.798 1822.53,686.798 1823.09,686.798 1823.65,686.798 1824.21,686.798 1824.77,686.798 1825.33,686.798 1825.89,686.798 1826.45,686.798 1827,686.798 1827.56,686.798 1828.12,686.798 1828.68,686.798 1829.24,686.798 1829.8,686.798 1830.36,686.798 1830.92,686.798 1831.48,686.798 1832.04,686.798 1832.6,686.798 1833.16,686.798 1833.72,686.798 1834.27,686.798 1834.83,686.798 1835.39,686.798 1835.95,686.798 1836.51,686.798 1837.07,686.798 1837.63,686.798 1838.19,686.798 \"/>\n<path clip-path=\"url(#clip313)\" d=\"M720.247 685.911 L720.806 685.911 L721.365 685.911 L721.924 685.911 L722.484 685.911 L723.043 685.911 L723.602 685.911 L724.161 685.911 L724.721 685.911 L725.28 685.911 L725.839 685.911 L726.398 685.911 L726.958 685.911 L727.517 685.911 L728.076 685.911 L728.635 685.911 L729.195 685.911 L729.754 685.911 L730.313 685.911 L730.872 685.911 L731.432 685.911 L731.991 685.911 L732.55 685.911 L733.109 685.911 L733.669 685.911 L734.228 685.911 L734.787 685.911 L735.346 685.911 L735.906 685.911 L736.465 685.911 L737.024 685.911 L737.583 685.911 L738.143 685.911 L738.702 685.911 L739.261 685.911 L739.82 685.911 L740.38 685.911 L740.939 685.911 L741.498 685.911 L742.057 685.911 L742.617 685.911 L743.176 685.911 L743.735 685.911 L744.294 685.911 L744.854 685.911 L745.413 685.911 L745.972 685.911 L746.531 685.911 L747.091 685.911 L747.65 685.911 L748.209 685.911 L748.768 685.911 L749.328 685.911 L749.887 685.911 L750.446 685.911 L751.005 685.911 L751.565 685.911 L752.124 685.911 L752.683 685.911 L753.242 685.911 L753.802 685.911 L754.361 685.911 L754.92 685.911 L755.479 685.911 L756.039 685.911 L756.598 685.911 L757.157 685.911 L757.716 685.911 L758.276 685.911 L758.835 685.911 L759.394 685.911 L759.953 685.911 L760.513 685.911 L761.072 685.911 L761.631 685.911 L762.19 685.911 L762.75 685.911 L763.309 685.911 L763.868 685.911 L764.427 685.911 L764.987 685.911 L765.546 685.911 L766.105 685.911 L766.664 685.911 L767.224 685.911 L767.783 685.911 L768.342 685.911 L768.901 685.911 L769.461 685.911 L770.02 685.911 L770.579 685.911 L771.138 685.911 L771.698 685.911 L772.257 685.911 L772.816 685.911 L773.375 685.911 L773.935 685.911 L774.494 685.911 L775.053 685.911 L775.612 685.911 L776.172 685.911 L776.731 685.911 L777.29 685.911 L777.849 685.911 L778.409 685.911 L778.968 685.911 L779.527 685.911 L780.086 685.911 L780.646 685.911 L781.205 685.911 L781.764 685.911 L782.323 685.911 L782.883 685.911 L783.442 685.911 L784.001 685.911 L784.56 685.911 L785.12 685.911 L785.679 685.911 L786.238 685.911 L786.797 685.911 L787.357 685.911 L787.916 685.911 L788.475 685.911 L789.034 685.911 L789.594 685.911 L790.153 685.911 L790.712 685.911 L791.271 685.911 L791.831 685.911 L792.39 685.911 L792.949 685.911 L793.508 685.911 L794.068 685.911 L794.627 685.911 L795.186 685.911 L795.745 685.911 L796.305 685.911 L796.864 685.911 L797.423 685.911 L797.982 685.911 L798.542 685.911 L799.101 685.911 L799.66 685.911 L800.219 685.911 L800.779 685.911 L801.338 685.911 L801.897 685.911 L802.456 685.911 L803.016 685.911 L803.575 685.911 L804.134 685.911 L804.693 685.911 L805.253 685.911 L805.812 685.911 L806.371 685.911 L806.931 685.911 L807.49 685.911 L808.049 685.911 L808.608 685.911 L809.168 685.911 L809.727 685.911 L810.286 685.911 L810.845 685.911 L811.405 685.911 L811.964 685.911 L812.523 685.911 L813.082 685.911 L813.642 685.911 L814.201 685.911 L814.76 685.911 L815.319 685.911 L815.879 685.911 L816.438 685.911 L816.997 685.911 L817.556 685.911 L818.116 685.911 L818.675 685.911 L819.234 685.911 L819.793 685.911 L820.353 685.911 L820.912 685.911 L821.471 685.911 L822.03 685.911 L822.59 685.911 L823.149 685.911 L823.708 685.911 L824.267 685.911 L824.827 685.911 L825.386 685.911 L825.945 685.911 L826.504 685.911 L827.064 685.911 L827.623 685.911 L828.182 685.911 L828.741 685.911 L829.301 685.911 L829.86 685.911 L830.419 685.911 L830.978 685.911 L831.538 685.911 L832.097 685.911 L832.656 685.911 L833.215 685.911 L833.775 685.911 L834.334 685.911 L834.893 685.911 L835.452 685.911 L836.012 685.911 L836.571 685.911 L837.13 685.911 L837.689 685.911 L838.249 685.911 L838.808 685.911 L839.367 685.911 L839.926 685.911 L840.486 685.911 L841.045 685.911 L841.604 685.911 L842.163 685.911 L842.723 685.911 L843.282 685.911 L843.841 685.911 L844.4 685.911 L844.96 685.911 L845.519 685.911 L846.078 685.911 L846.637 685.911 L847.197 685.911 L847.756 685.911 L848.315 685.911 L848.874 685.911 L849.434 685.911 L849.993 685.911 L850.552 685.911 L851.111 685.911 L851.671 685.911 L852.23 685.911 L852.789 685.911 L853.348 685.911 L853.908 685.911 L854.467 685.911 L855.026 685.911 L855.585 685.911 L856.145 685.911 L856.704 685.911 L857.263 685.911 L857.822 685.911 L858.382 685.911 L858.941 685.911 L859.5 685.911 L860.059 685.911 L860.619 685.911 L861.178 685.911 L861.737 685.911 L862.296 685.911 L862.856 685.911 L863.415 685.911 L863.974 685.911 L864.533 685.911 L865.093 685.911 L865.652 685.911 L866.211 685.911 L866.77 685.911 L867.33 685.911 L867.889 685.911 L868.448 685.911 L869.007 685.911 L869.567 685.911 L870.126 685.911 L870.685 685.911 L871.244 685.911 L871.804 685.911 L872.363 685.911 L872.922 685.911 L873.481 685.911 L874.041 685.911 L874.6 685.911 L875.159 685.911 L875.718 685.911 L876.278 685.911 L876.837 685.911 L877.396 685.911 L877.955 685.911 L878.515 685.911 L879.074 685.911 L879.633 685.911 L880.192 685.911 L880.752 685.911 L881.311 685.911 L881.87 685.911 L882.429 685.911 L882.989 685.911 L883.548 685.911 L884.107 685.911 L884.666 685.911 L885.226 685.911 L885.785 685.911 L886.344 685.911 L886.903 685.911 L887.463 685.911 L888.022 685.911 L888.581 685.911 L889.14 685.911 L889.7 685.911 L890.259 685.911 L890.818 685.911 L891.377 685.911 L891.937 685.911 L892.496 685.911 L893.055 685.911 L893.614 685.911 L894.174 685.911 L894.733 685.911 L895.292 685.911 L895.851 685.911 L896.411 685.911 L896.97 685.911 L897.529 685.911 L898.088 685.911 L898.648 685.911 L899.207 685.911 L899.766 685.911 L900.325 685.911 L900.885 685.911 L901.444 685.911 L902.003 685.911 L902.562 685.911 L903.122 685.911 L903.681 685.911 L904.24 685.911 L904.799 685.911 L905.359 685.911 L905.918 685.911 L906.477 685.911 L907.036 685.911 L907.596 685.911 L908.155 685.911 L908.714 685.911 L909.273 685.911 L909.833 685.911 L910.392 685.911 L910.951 685.911 L911.51 685.911 L912.07 685.911 L912.629 685.911 L913.188 685.911 L913.747 685.911 L914.307 685.911 L914.866 685.911 L915.425 685.911 L915.984 685.911 L916.544 685.911 L917.103 685.911 L917.662 685.911 L918.221 685.911 L918.781 685.911 L919.34 685.911 L919.899 685.911 L920.458 685.911 L921.018 685.911 L921.577 685.911 L922.136 685.911 L922.695 685.911 L923.255 685.911 L923.814 685.911 L924.373 685.911 L924.932 685.911 L925.492 685.911 L926.051 685.911 L926.61 685.911 L927.169 685.911 L927.729 685.911 L928.288 685.911 L928.847 685.911 L929.406 685.911 L929.966 685.911 L930.525 685.911 L931.084 685.911 L931.644 685.911 L932.203 685.911 L932.762 685.911 L933.321 685.911 L933.881 685.911 L934.44 685.911 L934.999 685.911 L935.558 685.911 L936.118 685.911 L936.677 685.911 L937.236 685.911 L937.795 685.911 L938.355 685.911 L938.914 685.911 L939.473 685.911 L940.032 685.911 L940.592 685.911 L941.151 685.911 L941.71 685.911 L942.269 685.911 L942.829 685.911 L943.388 685.911 L943.947 685.911 L944.506 685.911 L945.066 685.911 L945.625 685.911 L946.184 685.911 L946.743 685.911 L947.303 685.911 L947.862 685.911 L948.421 685.911 L948.98 685.911 L949.54 685.911 L950.099 685.911 L950.658 685.911 L951.217 685.911 L951.777 685.911 L952.336 685.911 L952.895 685.911 L953.454 685.911 L954.014 685.911 L954.573 685.911 L955.132 685.911 L955.691 685.911 L956.251 685.911 L956.81 685.911 L957.369 685.911 L957.928 685.911 L958.488 685.911 L959.047 685.911 L959.606 685.911 L960.165 685.911 L960.725 685.911 L961.284 685.911 L961.843 685.911 L962.402 685.911 L962.962 685.911 L963.521 685.911 L964.08 685.911 L964.639 685.911 L965.199 685.911 L965.758 685.911 L966.317 685.911 L966.876 685.911 L967.436 685.911 L967.995 685.911 L968.554 685.911 L969.113 685.911 L969.673 685.911 L970.232 685.911 L970.791 685.911 L971.35 685.911 L971.91 685.911 L972.469 685.911 L973.028 685.911 L973.587 685.911 L974.147 685.911 L974.706 685.911 L975.265 685.911 L975.824 685.911 L976.384 685.911 L976.943 685.911 L977.502 685.911 L978.061 685.911 L978.621 685.911 L979.18 685.911 L979.739 685.911 L980.298 685.911 L980.858 685.911 L981.417 685.911 L981.976 685.911 L982.535 685.911 L983.095 685.911 L983.654 685.911 L984.213 685.911 L984.772 685.911 L985.332 685.911 L985.891 685.911 L986.45 685.911 L987.009 685.911 L987.569 685.911 L988.128 685.911 L988.687 685.911 L989.246 685.911 L989.806 685.911 L990.365 685.911 L990.924 685.911 L991.483 685.911 L992.043 685.911 L992.602 685.911 L993.161 685.911 L993.72 685.911 L994.28 685.911 L994.839 685.911 L995.398 685.911 L995.957 685.911 L996.517 685.911 L997.076 685.911 L997.635 685.911 L998.194 685.911 L998.754 685.911 L999.313 685.911 L999.872 685.911 L1000.43 685.911 L1000.99 685.911 L1001.55 685.911 L1002.11 685.911 L1002.67 685.911 L1003.23 685.911 L1003.79 685.911 L1004.35 685.911 L1004.91 685.911 L1005.46 685.911 L1006.02 685.911 L1006.58 685.911 L1007.14 685.911 L1007.7 685.911 L1008.26 685.911 L1008.82 685.911 L1009.38 685.911 L1009.94 685.911 L1010.5 685.911 L1011.06 685.911 L1011.62 685.911 L1012.18 685.911 L1012.73 685.911 L1013.29 685.911 L1013.85 685.911 L1014.41 685.911 L1014.97 685.911 L1015.53 685.911 L1016.09 685.911 L1016.65 685.911 L1017.21 685.911 L1017.77 685.911 L1018.33 685.911 L1018.89 685.911 L1019.45 685.911 L1020.01 685.911 L1020.56 685.911 L1021.12 685.911 L1021.68 685.911 L1022.24 685.911 L1022.8 685.911 L1023.36 685.911 L1023.92 685.911 L1024.48 685.911 L1025.04 685.911 L1025.6 685.911 L1026.16 685.911 L1026.72 685.911 L1027.28 685.911 L1027.83 685.911 L1028.39 685.911 L1028.95 685.911 L1029.51 685.911 L1030.07 685.911 L1030.63 685.911 L1031.19 685.911 L1031.75 685.911 L1032.31 685.911 L1032.87 685.911 L1033.43 685.911 L1033.99 685.911 L1034.55 685.911 L1035.1 685.911 L1035.66 685.911 L1036.22 685.911 L1036.78 685.911 L1037.34 685.911 L1037.9 685.911 L1038.46 685.911 L1039.02 685.911 L1039.58 685.911 L1040.14 685.911 L1040.7 685.911 L1041.26 685.911 L1041.82 685.911 L1042.38 685.911 L1042.93 685.911 L1043.49 685.911 L1044.05 685.911 L1044.61 685.911 L1045.17 685.911 L1045.73 685.911 L1046.29 685.911 L1046.85 685.911 L1047.41 685.911 L1047.97 685.911 L1048.53 685.911 L1049.09 685.911 L1049.65 685.911 L1050.2 685.911 L1050.76 685.911 L1051.32 685.911 L1051.88 685.911 L1052.44 685.911 L1053 685.911 L1053.56 685.911 L1054.12 685.911 L1054.68 685.911 L1055.24 685.911 L1055.8 685.911 L1056.36 685.911 L1056.92 685.911 L1057.48 685.911 L1058.03 685.911 L1058.59 685.911 L1059.15 685.911 L1059.71 685.911 L1060.27 685.911 L1060.83 685.911 L1061.39 685.911 L1061.95 685.911 L1062.51 685.911 L1063.07 685.911 L1063.63 685.911 L1064.19 685.911 L1064.75 685.911 L1065.3 685.911 L1065.86 685.911 L1066.42 685.911 L1066.98 685.911 L1067.54 685.911 L1068.1 685.911 L1068.66 685.911 L1069.22 685.911 L1069.78 685.911 L1070.34 685.911 L1070.9 685.911 L1071.46 685.911 L1072.02 685.911 L1072.57 685.911 L1073.13 685.911 L1073.69 685.911 L1074.25 685.911 L1074.81 685.911 L1075.37 685.911 L1075.93 685.911 L1076.49 685.911 L1077.05 685.911 L1077.61 685.911 L1078.17 685.911 L1078.73 685.911 L1079.29 685.911 L1079.85 685.911 L1080.4 685.911 L1080.96 685.911 L1081.52 685.911 L1082.08 685.911 L1082.64 685.911 L1083.2 685.911 L1083.76 685.911 L1084.32 685.911 L1084.88 685.911 L1085.44 685.911 L1086 685.911 L1086.56 685.911 L1087.12 685.911 L1087.67 685.911 L1088.23 685.911 L1088.79 685.911 L1089.35 685.911 L1089.91 685.911 L1090.47 685.911 L1091.03 685.911 L1091.59 685.911 L1092.15 685.911 L1092.71 685.911 L1093.27 685.911 L1093.83 685.911 L1094.39 685.911 L1094.94 685.911 L1095.5 685.911 L1096.06 685.911 L1096.62 685.911 L1097.18 685.911 L1097.74 685.911 L1098.3 685.911 L1098.86 685.911 L1099.42 685.911 L1099.98 685.911 L1100.54 685.911 L1101.1 685.911 L1101.66 685.911 L1102.22 685.911 L1102.77 685.911 L1103.33 685.911 L1103.89 685.911 L1104.45 685.911 L1105.01 685.911 L1105.57 685.911 L1106.13 685.911 L1106.69 685.911 L1107.25 685.911 L1107.81 685.911 L1108.37 685.911 L1108.93 685.911 L1109.49 685.911 L1110.04 685.911 L1110.6 685.911 L1111.16 685.911 L1111.72 685.911 L1112.28 685.911 L1112.84 685.911 L1113.4 685.911 L1113.96 685.911 L1114.52 685.911 L1115.08 685.911 L1115.64 685.911 L1116.2 685.911 L1116.76 685.911 L1117.31 685.911 L1117.87 685.911 L1118.43 685.911 L1118.99 685.911 L1119.55 685.911 L1120.11 685.911 L1120.67 685.911 L1121.23 685.911 L1121.79 685.911 L1122.35 685.911 L1122.91 685.911 L1123.47 685.911 L1124.03 685.911 L1124.59 685.911 L1125.14 685.911 L1125.7 685.911 L1126.26 685.911 L1126.82 685.911 L1127.38 685.911 L1127.94 685.911 L1128.5 685.911 L1129.06 685.911 L1129.62 685.911 L1130.18 685.911 L1130.74 685.911 L1131.3 685.911 L1131.86 685.911 L1132.41 685.911 L1132.97 685.911 L1133.53 685.911 L1134.09 685.911 L1134.65 685.911 L1135.21 685.911 L1135.77 685.911 L1136.33 685.911 L1136.89 685.911 L1137.45 685.911 L1138.01 685.911 L1138.57 685.911 L1139.13 685.911 L1139.68 685.911 L1140.24 685.911 L1140.8 685.911 L1141.36 685.911 L1141.92 685.911 L1142.48 685.911 L1143.04 685.911 L1143.6 685.911 L1144.16 685.911 L1144.72 685.911 L1145.28 685.911 L1145.84 685.911 L1146.4 685.911 L1146.96 685.911 L1147.51 685.911 L1148.07 685.911 L1148.63 685.911 L1149.19 685.911 L1149.75 685.911 L1150.31 685.911 L1150.87 685.911 L1151.43 685.911 L1151.99 685.911 L1152.55 685.911 L1153.11 685.911 L1153.67 685.911 L1154.23 685.911 L1154.78 685.911 L1155.34 685.911 L1155.9 685.911 L1156.46 685.911 L1157.02 685.911 L1157.58 685.911 L1158.14 685.911 L1158.7 685.911 L1159.26 685.911 L1159.82 685.911 L1160.38 685.911 L1160.94 685.911 L1161.5 685.911 L1162.05 685.911 L1162.61 685.911 L1163.17 685.911 L1163.73 685.911 L1164.29 685.911 L1164.85 685.911 L1165.41 685.911 L1165.97 685.911 L1166.53 685.911 L1167.09 685.911 L1167.65 685.911 L1168.21 685.911 L1168.77 685.911 L1169.33 685.911 L1169.88 685.911 L1170.44 685.911 L1171 685.911 L1171.56 685.911 L1172.12 685.911 L1172.68 685.911 L1173.24 685.911 L1173.8 685.911 L1174.36 685.911 L1174.92 685.911 L1175.48 685.911 L1176.04 685.911 L1176.6 685.911 L1177.15 685.911 L1177.71 685.911 L1178.27 685.911 L1178.83 685.911 L1179.39 685.911 L1179.95 685.911 L1180.51 685.911 L1181.07 685.911 L1181.63 685.911 L1182.19 685.911 L1182.75 685.911 L1183.31 685.911 L1183.87 685.911 L1184.43 685.911 L1184.98 685.911 L1185.54 685.911 L1186.1 685.911 L1186.66 685.911 L1187.22 685.911 L1187.78 685.911 L1188.34 685.911 L1188.9 685.911 L1189.46 685.911 L1190.02 685.911 L1190.58 685.911 L1191.14 685.911 L1191.7 685.911 L1192.25 685.911 L1192.81 685.911 L1193.37 685.911 L1193.93 685.911 L1194.49 685.911 L1195.05 685.911 L1195.61 685.911 L1196.17 685.911 L1196.73 685.911 L1197.29 685.911 L1197.85 685.911 L1198.41 685.911 L1198.97 685.911 L1199.52 685.911 L1200.08 685.911 L1200.64 685.911 L1201.2 685.911 L1201.76 685.911 L1202.32 685.911 L1202.88 685.911 L1203.44 685.911 L1204 685.911 L1204.56 685.911 L1205.12 685.911 L1205.68 685.911 L1206.24 685.911 L1206.8 685.911 L1207.35 685.911 L1207.91 685.911 L1208.47 685.911 L1209.03 685.911 L1209.59 685.911 L1210.15 685.911 L1210.71 685.911 L1211.27 685.911 L1211.83 685.911 L1212.39 685.911 L1212.95 685.911 L1213.51 685.911 L1214.07 685.911 L1214.62 685.911 L1215.18 685.911 L1215.74 685.911 L1216.3 685.911 L1216.86 685.911 L1217.42 685.911 L1217.98 685.911 L1218.54 685.911 L1219.1 685.911 L1219.66 685.911 L1220.22 685.911 L1220.78 685.911 L1221.34 685.911 L1221.89 685.911 L1222.45 685.911 L1223.01 685.911 L1223.57 685.911 L1224.13 685.911 L1224.69 685.911 L1225.25 685.911 L1225.81 685.911 L1226.37 685.911 L1226.93 685.911 L1227.49 685.911 L1228.05 685.911 L1228.61 685.911 L1229.17 685.911 L1229.72 685.911 L1230.28 685.911 L1230.84 685.911 L1231.4 685.911 L1231.96 685.911 L1232.52 685.911 L1233.08 685.911 L1233.64 685.911 L1234.2 685.911 L1234.76 685.911 L1235.32 685.911 L1235.88 685.911 L1236.44 685.911 L1236.99 685.911 L1237.55 685.911 L1238.11 685.911 L1238.67 685.911 L1239.23 685.911 L1239.79 685.911 L1240.35 685.911 L1240.91 685.911 L1241.47 685.911 L1242.03 685.911 L1242.59 685.911 L1243.15 685.911 L1243.71 685.911 L1244.26 685.911 L1244.82 685.911 L1245.38 685.911 L1245.94 685.911 L1246.5 685.911 L1247.06 685.911 L1247.62 685.911 L1248.18 685.911 L1248.74 685.911 L1249.3 685.911 L1249.86 685.911 L1250.42 685.911 L1250.98 685.911 L1251.54 685.911 L1252.09 685.911 L1252.65 685.911 L1253.21 685.911 L1253.77 685.911 L1254.33 685.911 L1254.89 685.911 L1255.45 685.911 L1256.01 685.911 L1256.57 685.911 L1257.13 685.911 L1257.69 685.911 L1258.25 685.911 L1258.81 685.911 L1259.36 685.911 L1259.92 685.911 L1260.48 685.911 L1261.04 685.911 L1261.6 685.911 L1262.16 685.911 L1262.72 685.911 L1263.28 685.911 L1263.84 685.911 L1264.4 685.911 L1264.96 685.911 L1265.52 685.911 L1266.08 685.911 L1266.63 685.911 L1267.19 685.911 L1267.75 685.911 L1268.31 685.911 L1268.87 685.911 L1269.43 685.911 L1269.99 685.911 L1270.55 685.911 L1271.11 685.911 L1271.67 685.911 L1272.23 685.911 L1272.79 685.911 L1273.35 685.911 L1273.91 685.911 L1274.46 685.911 L1275.02 685.911 L1275.58 685.911 L1276.14 685.911 L1276.7 685.911 L1277.26 685.911 L1277.82 685.911 L1278.38 685.911 L1278.94 685.911 L1279.5 685.911 L1280.06 685.911 L1280.62 685.911 L1281.18 685.911 L1281.73 685.911 L1282.29 685.911 L1282.85 685.911 L1283.41 685.911 L1283.97 685.911 L1284.53 685.911 L1285.09 685.911 L1285.65 685.911 L1286.21 685.911 L1286.77 685.911 L1287.33 685.911 L1287.89 685.911 L1288.45 685.911 L1289 685.911 L1289.56 685.911 L1290.12 685.911 L1290.68 685.911 L1291.24 685.911 L1291.8 685.911 L1292.36 685.911 L1292.92 685.911 L1293.48 685.911 L1294.04 685.911 L1294.6 685.911 L1295.16 685.911 L1295.72 685.911 L1296.28 685.911 L1296.83 685.911 L1297.39 685.911 L1297.95 685.911 L1298.51 685.911 L1299.07 685.911 L1299.63 685.911 L1300.19 685.911 L1300.75 685.911 L1301.31 685.911 L1301.87 685.911 L1302.43 685.911 L1302.99 685.911 L1303.55 685.911 L1304.1 685.911 L1304.66 685.911 L1305.22 685.911 L1305.78 685.911 L1306.34 685.911 L1306.9 685.911 L1307.46 685.911 L1308.02 685.911 L1308.58 685.911 L1309.14 685.911 L1309.7 685.911 L1310.26 685.911 L1310.82 685.911 L1311.38 685.911 L1311.93 685.911 L1312.49 685.911 L1313.05 685.911 L1313.61 685.911 L1314.17 685.911 L1314.73 685.911 L1315.29 685.911 L1315.85 685.911 L1316.41 685.911 L1316.97 685.911 L1317.53 685.911 L1318.09 685.911 L1318.65 685.911 L1319.2 685.911 L1319.76 685.911 L1320.32 685.911 L1320.88 685.911 L1321.44 685.911 L1322 685.911 L1322.56 685.911 L1323.12 685.911 L1323.68 685.911 L1324.24 685.911 L1324.8 685.911 L1325.36 685.911 L1325.92 685.911 L1326.47 685.911 L1327.03 685.911 L1327.59 685.911 L1328.15 685.911 L1328.71 685.911 L1329.27 685.911 L1329.83 685.911 L1330.39 685.911 L1330.95 685.911 L1331.51 685.911 L1332.07 685.911 L1332.63 685.911 L1333.19 685.911 L1333.75 685.911 L1334.3 685.911 L1334.86 685.911 L1335.42 685.911 L1335.98 685.911 L1336.54 685.911 L1337.1 685.911 L1337.66 685.911 L1338.22 685.911 L1338.78 685.911 L1339.34 685.911 L1339.9 685.911 L1340.46 685.911 L1341.02 685.911 L1341.57 685.911 L1342.13 685.911 L1342.69 685.911 L1343.25 685.911 L1343.81 685.911 L1344.37 685.911 L1344.93 685.911 L1345.49 685.911 L1346.05 685.911 L1346.61 685.911 L1347.17 685.911 L1347.73 685.911 L1348.29 685.911 L1348.84 685.911 L1349.4 685.911 L1349.96 685.911 L1350.52 685.911 L1351.08 685.911 L1351.64 685.911 L1352.2 685.911 L1352.76 685.911 L1353.32 685.911 L1353.88 685.911 L1354.44 685.911 L1355 685.911 L1355.56 685.911 L1356.12 685.911 L1356.67 685.911 L1357.23 685.911 L1357.79 685.911 L1358.35 685.911 L1358.91 685.911 L1359.47 685.911 L1360.03 685.911 L1360.59 685.911 L1361.15 685.911 L1361.71 685.911 L1362.27 685.911 L1362.83 685.911 L1363.39 685.911 L1363.94 685.911 L1364.5 685.911 L1365.06 685.911 L1365.62 685.911 L1366.18 685.911 L1366.74 685.911 L1367.3 685.911 L1367.86 685.911 L1368.42 685.911 L1368.98 685.911 L1369.54 685.911 L1370.1 685.911 L1370.66 685.911 L1371.21 685.911 L1371.77 685.911 L1372.33 685.911 L1372.89 685.911 L1373.45 685.911 L1374.01 685.911 L1374.57 685.911 L1375.13 685.911 L1375.69 685.911 L1376.25 685.911 L1376.81 685.911 L1377.37 685.911 L1377.93 685.911 L1378.49 685.911 L1379.04 685.911 L1379.6 685.911 L1380.16 685.911 L1380.72 685.911 L1381.28 685.911 L1381.84 685.911 L1382.4 685.911 L1382.96 685.911 L1383.52 685.911 L1384.08 685.911 L1384.64 685.911 L1385.2 685.911 L1385.76 685.911 L1386.31 685.911 L1386.87 685.911 L1387.43 685.911 L1387.99 685.911 L1388.55 685.911 L1389.11 685.911 L1389.67 685.911 L1390.23 685.911 L1390.79 685.911 L1391.35 685.911 L1391.91 685.911 L1392.47 685.911 L1393.03 685.911 L1393.58 685.911 L1394.14 685.911 L1394.7 685.911 L1395.26 685.911 L1395.82 685.911 L1396.38 685.911 L1396.94 685.911 L1397.5 685.911 L1398.06 685.911 L1398.62 685.911 L1399.18 685.911 L1399.74 685.911 L1400.3 685.911 L1400.86 685.911 L1401.41 685.911 L1401.97 685.911 L1402.53 685.911 L1403.09 685.911 L1403.65 685.911 L1404.21 685.911 L1404.77 685.911 L1405.33 685.911 L1405.89 685.911 L1406.45 685.911 L1407.01 685.911 L1407.57 685.911 L1408.13 685.911 L1408.68 685.911 L1409.24 685.911 L1409.8 685.911 L1410.36 685.911 L1410.92 685.911 L1411.48 685.911 L1412.04 685.911 L1412.6 685.911 L1413.16 685.911 L1413.72 685.911 L1414.28 685.911 L1414.84 685.911 L1415.4 685.911 L1415.95 685.911 L1416.51 685.911 L1417.07 685.911 L1417.63 685.911 L1418.19 685.911 L1418.75 685.911 L1419.31 685.911 L1419.87 685.911 L1420.43 685.911 L1420.99 685.911 L1421.55 685.911 L1422.11 685.911 L1422.67 685.911 L1423.23 685.911 L1423.78 685.911 L1424.34 685.911 L1424.9 685.911 L1425.46 685.911 L1426.02 685.911 L1426.58 685.911 L1427.14 685.911 L1427.7 685.911 L1428.26 685.911 L1428.82 685.911 L1429.38 685.911 L1429.94 685.911 L1430.5 685.911 L1431.05 685.911 L1431.61 685.911 L1432.17 685.911 L1432.73 685.911 L1433.29 685.911 L1433.85 685.911 L1434.41 685.911 L1434.97 685.911 L1435.53 685.911 L1436.09 685.911 L1436.65 685.911 L1437.21 685.911 L1437.77 685.911 L1438.33 685.911 L1438.88 685.911 L1439.44 685.911 L1440 685.911 L1440.56 685.911 L1441.12 685.911 L1441.68 685.911 L1442.24 685.911 L1442.8 685.911 L1443.36 685.911 L1443.92 685.911 L1444.48 685.911 L1445.04 685.911 L1445.6 685.911 L1446.15 685.911 L1446.71 685.911 L1447.27 685.911 L1447.83 685.911 L1448.39 685.911 L1448.95 685.911 L1449.51 685.911 L1450.07 685.911 L1450.63 685.911 L1451.19 685.911 L1451.75 685.911 L1452.31 685.911 L1452.87 685.911 L1453.42 685.911 L1453.98 685.911 L1454.54 685.911 L1455.1 685.911 L1455.66 685.911 L1456.22 685.911 L1456.78 685.911 L1457.34 685.911 L1457.9 685.911 L1458.46 685.911 L1459.02 685.911 L1459.58 685.911 L1460.14 685.911 L1460.7 685.911 L1461.25 685.911 L1461.81 685.911 L1462.37 685.911 L1462.93 685.911 L1463.49 685.911 L1464.05 685.911 L1464.61 685.911 L1465.17 685.911 L1465.73 685.911 L1466.29 685.911 L1466.85 685.911 L1467.41 685.911 L1467.97 685.911 L1468.52 685.911 L1469.08 685.911 L1469.64 685.911 L1470.2 685.911 L1470.76 685.911 L1471.32 685.911 L1471.88 685.911 L1472.44 685.911 L1473 685.911 L1473.56 685.911 L1474.12 685.911 L1474.68 685.911 L1475.24 685.911 L1475.79 685.911 L1476.35 685.911 L1476.91 685.911 L1477.47 685.911 L1478.03 685.911 L1478.59 685.911 L1479.15 685.911 L1479.71 685.911 L1480.27 685.911 L1480.83 685.911 L1481.39 685.911 L1481.95 685.911 L1482.51 685.911 L1483.07 685.911 L1483.62 685.911 L1484.18 685.911 L1484.74 685.911 L1485.3 685.911 L1485.86 685.911 L1486.42 685.911 L1486.98 685.911 L1487.54 685.911 L1488.1 685.911 L1488.66 685.911 L1489.22 685.911 L1489.78 685.911 L1490.34 685.911 L1490.89 685.911 L1491.45 685.911 L1492.01 685.911 L1492.57 685.911 L1493.13 685.911 L1493.69 685.911 L1494.25 685.911 L1494.81 685.911 L1495.37 685.911 L1495.93 685.911 L1496.49 685.911 L1497.05 685.911 L1497.61 685.911 L1498.16 685.911 L1498.72 685.911 L1499.28 685.911 L1499.84 685.911 L1500.4 685.911 L1500.96 685.911 L1501.52 685.911 L1502.08 685.911 L1502.64 685.911 L1503.2 685.911 L1503.76 685.911 L1504.32 685.911 L1504.88 685.911 L1505.44 685.911 L1505.99 685.911 L1506.55 685.911 L1507.11 685.911 L1507.67 685.911 L1508.23 685.911 L1508.79 685.911 L1509.35 685.911 L1509.91 685.911 L1510.47 685.911 L1511.03 685.911 L1511.59 685.911 L1512.15 685.911 L1512.71 685.911 L1513.26 685.911 L1513.82 685.911 L1514.38 685.911 L1514.94 685.911 L1515.5 685.911 L1516.06 685.911 L1516.62 685.911 L1517.18 685.911 L1517.74 685.911 L1518.3 685.911 L1518.86 685.911 L1519.42 685.911 L1519.98 685.911 L1520.53 685.911 L1521.09 685.911 L1521.65 685.911 L1522.21 685.911 L1522.77 685.911 L1523.33 685.911 L1523.89 685.911 L1524.45 685.911 L1525.01 685.911 L1525.57 685.911 L1526.13 685.911 L1526.69 685.911 L1527.25 685.911 L1527.81 685.911 L1528.36 685.911 L1528.92 685.911 L1529.48 685.911 L1530.04 685.911 L1530.6 685.911 L1531.16 685.911 L1531.72 685.911 L1532.28 685.911 L1532.84 685.911 L1533.4 685.911 L1533.96 685.911 L1534.52 685.911 L1535.08 685.911 L1535.63 685.911 L1536.19 685.911 L1536.75 685.911 L1537.31 685.911 L1537.87 685.911 L1538.43 685.911 L1538.99 685.911 L1539.55 685.911 L1540.11 685.911 L1540.67 685.911 L1541.23 685.911 L1541.79 685.911 L1542.35 685.911 L1542.9 685.911 L1543.46 685.911 L1544.02 685.911 L1544.58 685.911 L1545.14 685.911 L1545.7 685.911 L1546.26 685.911 L1546.82 685.911 L1547.38 685.911 L1547.94 685.911 L1548.5 685.911 L1549.06 685.911 L1549.62 685.911 L1550.18 685.911 L1550.73 685.911 L1551.29 685.911 L1551.85 685.911 L1552.41 685.911 L1552.97 685.911 L1553.53 685.911 L1554.09 685.911 L1554.65 685.911 L1555.21 685.911 L1555.77 685.911 L1556.33 685.911 L1556.89 685.911 L1557.45 685.911 L1558 685.911 L1558.56 685.911 L1559.12 685.911 L1559.68 685.911 L1560.24 685.911 L1560.8 685.911 L1561.36 685.911 L1561.92 685.911 L1562.48 685.911 L1563.04 685.911 L1563.6 685.911 L1564.16 685.911 L1564.72 685.911 L1565.28 685.911 L1565.83 685.911 L1566.39 685.911 L1566.95 685.911 L1567.51 685.911 L1568.07 685.911 L1568.63 685.911 L1569.19 685.911 L1569.75 685.911 L1570.31 685.911 L1570.87 685.911 L1571.43 685.911 L1571.99 685.911 L1572.55 685.911 L1573.1 685.911 L1573.66 685.911 L1574.22 685.911 L1574.78 685.911 L1575.34 685.911 L1575.9 685.911 L1576.46 685.911 L1577.02 685.911 L1577.58 685.911 L1578.14 685.911 L1578.7 685.911 L1579.26 685.911 L1579.82 685.911 L1580.37 685.911 L1580.93 685.911 L1581.49 685.911 L1582.05 685.911 L1582.61 685.911 L1583.17 685.911 L1583.73 685.911 L1584.29 685.911 L1584.85 685.911 L1585.41 685.911 L1585.97 685.911 L1586.53 685.911 L1587.09 685.911 L1587.65 685.911 L1588.2 685.911 L1588.76 685.911 L1589.32 685.911 L1589.88 685.911 L1590.44 685.911 L1591 685.911 L1591.56 685.911 L1592.12 685.911 L1592.68 685.911 L1593.24 685.911 L1593.8 685.911 L1594.36 685.911 L1594.92 685.911 L1595.47 685.911 L1596.03 685.911 L1596.59 685.911 L1597.15 685.911 L1597.71 685.911 L1598.27 685.911 L1598.83 685.911 L1599.39 685.911 L1599.95 685.911 L1600.51 685.911 L1601.07 685.911 L1601.63 685.911 L1602.19 685.911 L1602.74 685.911 L1603.3 685.911 L1603.86 685.911 L1604.42 685.911 L1604.98 685.911 L1605.54 685.911 L1606.1 685.911 L1606.66 685.911 L1607.22 685.911 L1607.78 685.911 L1608.34 685.911 L1608.9 685.911 L1609.46 685.911 L1610.02 685.911 L1610.57 685.911 L1611.13 685.911 L1611.69 685.911 L1612.25 685.911 L1612.81 685.911 L1613.37 685.911 L1613.93 685.911 L1614.49 685.911 L1615.05 685.911 L1615.61 685.911 L1616.17 685.911 L1616.73 685.911 L1617.29 685.911 L1617.84 685.911 L1618.4 685.911 L1618.96 685.911 L1619.52 685.911 L1620.08 685.911 L1620.64 685.911 L1621.2 685.911 L1621.76 685.911 L1622.32 685.911 L1622.88 685.911 L1623.44 685.911 L1624 685.911 L1624.56 685.911 L1625.11 685.911 L1625.67 685.911 L1626.23 685.911 L1626.79 685.911 L1627.35 685.911 L1627.91 685.911 L1628.47 685.911 L1629.03 685.911 L1629.59 685.911 L1630.15 685.911 L1630.71 685.911 L1631.27 685.911 L1631.83 685.911 L1632.39 685.911 L1632.94 685.911 L1633.5 685.911 L1634.06 685.911 L1634.62 685.911 L1635.18 685.911 L1635.74 685.911 L1636.3 685.911 L1636.86 685.911 L1637.42 685.911 L1637.98 685.911 L1638.54 685.911 L1639.1 685.911 L1639.66 685.911 L1640.21 685.911 L1640.77 685.911 L1641.33 685.911 L1641.89 685.911 L1642.45 685.911 L1643.01 685.911 L1643.57 685.911 L1644.13 685.911 L1644.69 685.911 L1645.25 685.911 L1645.81 685.911 L1646.37 685.911 L1646.93 685.911 L1647.48 685.911 L1648.04 685.911 L1648.6 685.911 L1649.16 685.911 L1649.72 685.911 L1650.28 685.911 L1650.84 685.911 L1651.4 685.911 L1651.96 685.911 L1652.52 685.911 L1653.08 685.911 L1653.64 685.911 L1654.2 685.911 L1654.76 685.911 L1655.31 685.911 L1655.87 685.911 L1656.43 685.911 L1656.99 685.911 L1657.55 685.911 L1658.11 685.911 L1658.67 685.911 L1659.23 685.911 L1659.79 685.911 L1660.35 685.911 L1660.91 685.911 L1661.47 685.911 L1662.03 685.911 L1662.58 685.911 L1663.14 685.911 L1663.7 685.911 L1664.26 685.911 L1664.82 685.911 L1665.38 685.911 L1665.94 685.911 L1666.5 685.911 L1667.06 685.911 L1667.62 685.911 L1668.18 685.911 L1668.74 685.911 L1669.3 685.911 L1669.85 685.911 L1670.41 685.911 L1670.97 685.911 L1671.53 685.911 L1672.09 685.911 L1672.65 685.911 L1673.21 685.911 L1673.77 685.911 L1674.33 685.911 L1674.89 685.911 L1675.45 685.911 L1676.01 685.911 L1676.57 685.911 L1677.13 685.911 L1677.68 685.911 L1678.24 685.911 L1678.8 685.911 L1679.36 685.911 L1679.92 685.911 L1680.48 685.911 L1681.04 685.911 L1681.6 685.911 L1682.16 685.911 L1682.72 685.911 L1683.28 685.911 L1683.84 685.911 L1684.4 685.911 L1684.95 685.911 L1685.51 685.911 L1686.07 685.911 L1686.63 685.911 L1687.19 685.911 L1687.75 685.911 L1688.31 685.911 L1688.87 685.911 L1689.43 685.911 L1689.99 685.911 L1690.55 685.911 L1691.11 685.911 L1691.67 685.911 L1692.23 685.911 L1692.78 685.911 L1693.34 685.911 L1693.9 685.911 L1694.46 685.911 L1695.02 685.911 L1695.58 685.911 L1696.14 685.911 L1696.7 685.911 L1697.26 685.911 L1697.82 685.911 L1698.38 685.911 L1698.94 685.911 L1699.5 685.911 L1700.05 685.911 L1700.61 685.911 L1701.17 685.911 L1701.73 685.911 L1702.29 685.911 L1702.85 685.911 L1703.41 685.911 L1703.97 685.911 L1704.53 685.911 L1705.09 685.911 L1705.65 685.911 L1706.21 685.911 L1706.77 685.911 L1707.32 685.911 L1707.88 685.911 L1708.44 685.911 L1709 685.911 L1709.56 685.911 L1710.12 685.911 L1710.68 685.911 L1711.24 685.911 L1711.8 685.911 L1712.36 685.911 L1712.92 685.911 L1713.48 685.911 L1714.04 685.911 L1714.6 685.911 L1715.15 685.911 L1715.71 685.911 L1716.27 685.911 L1716.83 685.911 L1717.39 685.911 L1717.95 685.911 L1718.51 685.911 L1719.07 685.911 L1719.63 685.911 L1720.19 685.911 L1720.75 685.911 L1721.31 685.911 L1721.87 685.911 L1722.42 685.911 L1722.98 685.911 L1723.54 685.911 L1724.1 685.911 L1724.66 685.911 L1725.22 685.911 L1725.78 685.911 L1726.34 685.911 L1726.9 685.911 L1727.46 685.911 L1728.02 685.911 L1728.58 685.911 L1729.14 685.911 L1729.69 685.911 L1730.25 685.911 L1730.81 685.911 L1731.37 685.911 L1731.93 685.911 L1732.49 685.911 L1733.05 685.911 L1733.61 685.911 L1734.17 685.911 L1734.73 685.911 L1735.29 685.911 L1735.85 685.911 L1736.41 685.911 L1736.97 685.911 L1737.52 685.911 L1738.08 685.911 L1738.64 685.911 L1739.2 685.911 L1739.76 685.911 L1740.32 685.911 L1740.88 685.911 L1741.44 685.911 L1742 685.911 L1742.56 685.911 L1743.12 685.911 L1743.68 685.911 L1744.24 685.911 L1744.79 685.911 L1745.35 685.911 L1745.91 685.911 L1746.47 685.911 L1747.03 685.911 L1747.59 685.911 L1748.15 685.911 L1748.71 685.911 L1749.27 685.911 L1749.83 685.911 L1750.39 685.911 L1750.95 685.911 L1751.51 685.911 L1752.06 685.911 L1752.62 685.911 L1753.18 685.911 L1753.74 685.911 L1754.3 685.911 L1754.86 685.911 L1755.42 685.911 L1755.98 685.911 L1756.54 685.911 L1757.1 685.911 L1757.66 685.911 L1758.22 685.911 L1758.78 685.911 L1759.34 685.911 L1759.89 685.911 L1760.45 685.911 L1761.01 685.911 L1761.57 685.911 L1762.13 685.911 L1762.69 685.911 L1763.25 685.911 L1763.81 685.911 L1764.37 685.911 L1764.93 685.911 L1765.49 685.911 L1766.05 685.911 L1766.61 685.911 L1767.16 685.911 L1767.72 685.911 L1768.28 685.911 L1768.84 685.911 L1769.4 685.911 L1769.96 685.911 L1770.52 685.911 L1771.08 685.911 L1771.64 685.911 L1772.2 685.911 L1772.76 685.911 L1773.32 685.911 L1773.88 685.911 L1774.43 685.911 L1774.99 685.911 L1775.55 685.911 L1776.11 685.911 L1776.67 685.911 L1777.23 685.911 L1777.79 685.911 L1778.35 685.911 L1778.91 685.911 L1779.47 685.911 L1780.03 685.911 L1780.59 685.911 L1781.15 685.911 L1781.71 685.911 L1782.26 685.911 L1782.82 685.911 L1783.38 685.911 L1783.94 685.911 L1784.5 685.911 L1785.06 685.911 L1785.62 685.911 L1786.18 685.911 L1786.74 685.911 L1787.3 685.911 L1787.86 685.911 L1788.42 685.911 L1788.98 685.911 L1789.53 685.911 L1790.09 685.911 L1790.65 685.911 L1791.21 685.911 L1791.77 685.911 L1792.33 685.911 L1792.89 685.911 L1793.45 685.911 L1794.01 685.911 L1794.57 685.911 L1795.13 685.911 L1795.69 685.911 L1796.25 685.911 L1796.8 685.911 L1797.36 685.911 L1797.92 685.911 L1798.48 685.911 L1799.04 685.911 L1799.6 685.911 L1800.16 685.911 L1800.72 685.911 L1801.28 685.911 L1801.84 685.911 L1802.4 685.911 L1802.96 685.911 L1803.52 685.911 L1804.08 685.911 L1804.63 685.911 L1805.19 685.911 L1805.75 685.911 L1806.31 685.911 L1806.87 685.911 L1807.43 685.911 L1807.99 685.911 L1808.55 685.911 L1809.11 685.911 L1809.67 685.911 L1810.23 685.911 L1810.79 685.911 L1811.35 685.911 L1811.9 685.911 L1812.46 685.911 L1813.02 685.911 L1813.58 685.911 L1814.14 685.911 L1814.7 685.911 L1815.26 685.911 L1815.82 685.911 L1816.38 685.911 L1816.94 685.911 L1817.5 685.911 L1818.06 685.911 L1818.62 685.911 L1819.18 685.911 L1819.73 685.911 L1820.29 685.911 L1820.85 685.911 L1821.41 685.911 L1821.97 685.911 L1822.53 685.911 L1823.09 685.911 L1823.65 685.911 L1824.21 685.911 L1824.77 685.911 L1825.33 685.911 L1825.89 685.911 L1826.45 685.911 L1827 685.911 L1827.56 685.911 L1828.12 685.911 L1828.68 685.911 L1829.24 685.911 L1829.8 685.911 L1830.36 685.911 L1830.92 685.911 L1831.48 685.911 L1832.04 685.911 L1832.6 685.911 L1833.16 685.911 L1833.72 685.911 L1834.27 685.911 L1834.83 685.911 L1835.39 685.911 L1835.95 685.911 L1836.51 685.911 L1837.07 685.911 L1837.63 685.911 L1838.19 685.911 L1838.19 682.743 L1837.63 682.743 L1837.07 682.743 L1836.51 682.743 L1835.95 682.743 L1835.39 682.743 L1834.83 682.743 L1834.27 682.743 L1833.72 682.743 L1833.16 682.743 L1832.6 682.743 L1832.04 682.743 L1831.48 682.743 L1830.92 682.743 L1830.36 682.743 L1829.8 682.743 L1829.24 682.743 L1828.68 682.743 L1828.12 682.743 L1827.56 682.743 L1827 682.743 L1826.45 682.743 L1825.89 682.743 L1825.33 682.743 L1824.77 682.743 L1824.21 682.743 L1823.65 682.743 L1823.09 682.743 L1822.53 682.743 L1821.97 682.743 L1821.41 682.743 L1820.85 682.743 L1820.29 682.743 L1819.73 682.743 L1819.18 682.743 L1818.62 682.743 L1818.06 682.743 L1817.5 682.743 L1816.94 682.743 L1816.38 682.743 L1815.82 682.743 L1815.26 682.743 L1814.7 682.743 L1814.14 682.743 L1813.58 682.743 L1813.02 682.743 L1812.46 682.743 L1811.9 682.743 L1811.35 682.743 L1810.79 682.743 L1810.23 682.743 L1809.67 682.743 L1809.11 682.743 L1808.55 682.743 L1807.99 682.743 L1807.43 682.743 L1806.87 682.743 L1806.31 682.743 L1805.75 682.743 L1805.19 682.743 L1804.63 682.743 L1804.08 682.743 L1803.52 682.743 L1802.96 682.743 L1802.4 682.743 L1801.84 682.743 L1801.28 682.743 L1800.72 682.743 L1800.16 682.743 L1799.6 682.743 L1799.04 682.743 L1798.48 682.743 L1797.92 682.743 L1797.36 682.743 L1796.8 682.743 L1796.25 682.743 L1795.69 682.743 L1795.13 682.743 L1794.57 682.743 L1794.01 682.743 L1793.45 682.743 L1792.89 682.743 L1792.33 682.743 L1791.77 682.743 L1791.21 682.743 L1790.65 682.743 L1790.09 682.743 L1789.53 682.743 L1788.98 682.743 L1788.42 682.743 L1787.86 682.743 L1787.3 682.743 L1786.74 682.743 L1786.18 682.743 L1785.62 682.743 L1785.06 682.743 L1784.5 682.743 L1783.94 682.743 L1783.38 682.743 L1782.82 682.743 L1782.26 682.743 L1781.71 682.743 L1781.15 682.743 L1780.59 682.743 L1780.03 682.743 L1779.47 682.743 L1778.91 682.743 L1778.35 682.743 L1777.79 682.743 L1777.23 682.743 L1776.67 682.743 L1776.11 682.743 L1775.55 682.743 L1774.99 682.743 L1774.43 682.743 L1773.88 682.743 L1773.32 682.743 L1772.76 682.743 L1772.2 682.743 L1771.64 682.743 L1771.08 682.743 L1770.52 682.743 L1769.96 682.743 L1769.4 682.743 L1768.84 682.743 L1768.28 682.743 L1767.72 682.743 L1767.16 682.743 L1766.61 682.743 L1766.05 682.743 L1765.49 682.743 L1764.93 682.743 L1764.37 682.743 L1763.81 682.743 L1763.25 682.743 L1762.69 682.743 L1762.13 682.743 L1761.57 682.743 L1761.01 682.743 L1760.45 682.743 L1759.89 682.743 L1759.34 682.743 L1758.78 682.743 L1758.22 682.743 L1757.66 682.743 L1757.1 682.743 L1756.54 682.743 L1755.98 682.743 L1755.42 682.743 L1754.86 682.743 L1754.3 682.743 L1753.74 682.743 L1753.18 682.743 L1752.62 682.743 L1752.06 682.743 L1751.51 682.743 L1750.95 682.743 L1750.39 682.743 L1749.83 682.743 L1749.27 682.743 L1748.71 682.743 L1748.15 682.743 L1747.59 682.743 L1747.03 682.743 L1746.47 682.743 L1745.91 682.743 L1745.35 682.743 L1744.79 682.743 L1744.24 682.743 L1743.68 682.743 L1743.12 682.743 L1742.56 682.743 L1742 682.743 L1741.44 682.743 L1740.88 682.743 L1740.32 682.743 L1739.76 682.743 L1739.2 682.743 L1738.64 682.743 L1738.08 682.743 L1737.52 682.743 L1736.97 682.743 L1736.41 682.743 L1735.85 682.743 L1735.29 682.743 L1734.73 682.743 L1734.17 682.743 L1733.61 682.743 L1733.05 682.743 L1732.49 682.743 L1731.93 682.743 L1731.37 682.743 L1730.81 682.743 L1730.25 682.743 L1729.69 682.743 L1729.14 682.743 L1728.58 682.743 L1728.02 682.743 L1727.46 682.743 L1726.9 682.743 L1726.34 682.743 L1725.78 682.743 L1725.22 682.743 L1724.66 682.743 L1724.1 682.743 L1723.54 682.743 L1722.98 682.743 L1722.42 682.743 L1721.87 682.743 L1721.31 682.743 L1720.75 682.743 L1720.19 682.743 L1719.63 682.743 L1719.07 682.743 L1718.51 682.743 L1717.95 682.743 L1717.39 682.743 L1716.83 682.743 L1716.27 682.743 L1715.71 682.743 L1715.15 682.743 L1714.6 682.743 L1714.04 682.743 L1713.48 682.743 L1712.92 682.743 L1712.36 682.743 L1711.8 682.743 L1711.24 682.743 L1710.68 682.743 L1710.12 682.743 L1709.56 682.743 L1709 682.743 L1708.44 682.743 L1707.88 682.743 L1707.32 682.743 L1706.77 682.743 L1706.21 682.743 L1705.65 682.743 L1705.09 682.743 L1704.53 682.743 L1703.97 682.743 L1703.41 682.743 L1702.85 682.743 L1702.29 682.743 L1701.73 682.743 L1701.17 682.743 L1700.61 682.743 L1700.05 682.743 L1699.5 682.743 L1698.94 682.743 L1698.38 682.743 L1697.82 682.743 L1697.26 682.743 L1696.7 682.743 L1696.14 682.743 L1695.58 682.743 L1695.02 682.743 L1694.46 682.743 L1693.9 682.743 L1693.34 682.743 L1692.78 682.743 L1692.23 682.743 L1691.67 682.743 L1691.11 682.743 L1690.55 682.743 L1689.99 682.743 L1689.43 682.743 L1688.87 682.743 L1688.31 682.743 L1687.75 682.743 L1687.19 682.743 L1686.63 682.743 L1686.07 682.743 L1685.51 682.743 L1684.95 682.743 L1684.4 682.743 L1683.84 682.743 L1683.28 682.743 L1682.72 682.743 L1682.16 682.743 L1681.6 682.743 L1681.04 682.743 L1680.48 682.743 L1679.92 682.743 L1679.36 682.743 L1678.8 682.743 L1678.24 682.743 L1677.68 682.743 L1677.13 682.743 L1676.57 682.743 L1676.01 682.743 L1675.45 682.743 L1674.89 682.743 L1674.33 682.743 L1673.77 682.743 L1673.21 682.743 L1672.65 682.743 L1672.09 682.743 L1671.53 682.743 L1670.97 682.743 L1670.41 682.743 L1669.85 682.743 L1669.3 682.743 L1668.74 682.743 L1668.18 682.743 L1667.62 682.743 L1667.06 682.743 L1666.5 682.743 L1665.94 682.743 L1665.38 682.743 L1664.82 682.743 L1664.26 682.743 L1663.7 682.743 L1663.14 682.743 L1662.58 682.743 L1662.03 682.743 L1661.47 682.743 L1660.91 682.743 L1660.35 682.743 L1659.79 682.743 L1659.23 682.743 L1658.67 682.743 L1658.11 682.743 L1657.55 682.743 L1656.99 682.743 L1656.43 682.743 L1655.87 682.743 L1655.31 682.743 L1654.76 682.743 L1654.2 682.743 L1653.64 682.743 L1653.08 682.743 L1652.52 682.743 L1651.96 682.743 L1651.4 682.743 L1650.84 682.743 L1650.28 682.743 L1649.72 682.743 L1649.16 682.743 L1648.6 682.743 L1648.04 682.743 L1647.48 682.743 L1646.93 682.743 L1646.37 682.743 L1645.81 682.743 L1645.25 682.743 L1644.69 682.743 L1644.13 682.743 L1643.57 682.743 L1643.01 682.743 L1642.45 682.743 L1641.89 682.743 L1641.33 682.743 L1640.77 682.743 L1640.21 682.743 L1639.66 682.743 L1639.1 682.743 L1638.54 682.743 L1637.98 682.743 L1637.42 682.743 L1636.86 682.743 L1636.3 682.743 L1635.74 682.743 L1635.18 682.743 L1634.62 682.743 L1634.06 682.743 L1633.5 682.743 L1632.94 682.743 L1632.39 682.743 L1631.83 682.743 L1631.27 682.743 L1630.71 682.743 L1630.15 682.743 L1629.59 682.743 L1629.03 682.743 L1628.47 682.743 L1627.91 682.743 L1627.35 682.743 L1626.79 682.743 L1626.23 682.743 L1625.67 682.743 L1625.11 682.743 L1624.56 682.743 L1624 682.743 L1623.44 682.743 L1622.88 682.743 L1622.32 682.743 L1621.76 682.743 L1621.2 682.743 L1620.64 682.743 L1620.08 682.743 L1619.52 682.743 L1618.96 682.743 L1618.4 682.743 L1617.84 682.743 L1617.29 682.743 L1616.73 682.743 L1616.17 682.743 L1615.61 682.743 L1615.05 682.743 L1614.49 682.743 L1613.93 682.743 L1613.37 682.743 L1612.81 682.743 L1612.25 682.743 L1611.69 682.743 L1611.13 682.743 L1610.57 682.743 L1610.02 682.743 L1609.46 682.743 L1608.9 682.743 L1608.34 682.743 L1607.78 682.743 L1607.22 682.743 L1606.66 682.743 L1606.1 682.743 L1605.54 682.743 L1604.98 682.743 L1604.42 682.743 L1603.86 682.743 L1603.3 682.743 L1602.74 682.743 L1602.19 682.743 L1601.63 682.743 L1601.07 682.743 L1600.51 682.743 L1599.95 682.743 L1599.39 682.743 L1598.83 682.743 L1598.27 682.743 L1597.71 682.743 L1597.15 682.743 L1596.59 682.743 L1596.03 682.743 L1595.47 682.743 L1594.92 682.743 L1594.36 682.743 L1593.8 682.743 L1593.24 682.743 L1592.68 682.743 L1592.12 682.743 L1591.56 682.743 L1591 682.743 L1590.44 682.743 L1589.88 682.743 L1589.32 682.743 L1588.76 682.743 L1588.2 682.743 L1587.65 682.743 L1587.09 682.743 L1586.53 682.743 L1585.97 682.743 L1585.41 682.743 L1584.85 682.743 L1584.29 682.743 L1583.73 682.743 L1583.17 682.743 L1582.61 682.743 L1582.05 682.743 L1581.49 682.743 L1580.93 682.743 L1580.37 682.743 L1579.82 682.743 L1579.26 682.743 L1578.7 682.743 L1578.14 682.743 L1577.58 682.743 L1577.02 682.743 L1576.46 682.743 L1575.9 682.743 L1575.34 682.743 L1574.78 682.743 L1574.22 682.743 L1573.66 682.743 L1573.1 682.743 L1572.55 682.743 L1571.99 682.743 L1571.43 682.743 L1570.87 682.743 L1570.31 682.743 L1569.75 682.743 L1569.19 682.743 L1568.63 682.743 L1568.07 682.743 L1567.51 682.743 L1566.95 682.743 L1566.39 682.743 L1565.83 682.743 L1565.28 682.743 L1564.72 682.743 L1564.16 682.743 L1563.6 682.743 L1563.04 682.743 L1562.48 682.743 L1561.92 682.743 L1561.36 682.743 L1560.8 682.743 L1560.24 682.743 L1559.68 682.743 L1559.12 682.743 L1558.56 682.743 L1558 682.743 L1557.45 682.743 L1556.89 682.743 L1556.33 682.743 L1555.77 682.743 L1555.21 682.743 L1554.65 682.743 L1554.09 682.743 L1553.53 682.743 L1552.97 682.743 L1552.41 682.743 L1551.85 682.743 L1551.29 682.743 L1550.73 682.743 L1550.18 682.743 L1549.62 682.743 L1549.06 682.743 L1548.5 682.743 L1547.94 682.743 L1547.38 682.743 L1546.82 682.743 L1546.26 682.743 L1545.7 682.743 L1545.14 682.743 L1544.58 682.743 L1544.02 682.743 L1543.46 682.743 L1542.9 682.743 L1542.35 682.743 L1541.79 682.743 L1541.23 682.743 L1540.67 682.743 L1540.11 682.743 L1539.55 682.743 L1538.99 682.743 L1538.43 682.743 L1537.87 682.743 L1537.31 682.743 L1536.75 682.743 L1536.19 682.743 L1535.63 682.743 L1535.08 682.743 L1534.52 682.743 L1533.96 682.743 L1533.4 682.743 L1532.84 682.743 L1532.28 682.743 L1531.72 682.743 L1531.16 682.743 L1530.6 682.743 L1530.04 682.743 L1529.48 682.743 L1528.92 682.743 L1528.36 682.743 L1527.81 682.743 L1527.25 682.743 L1526.69 682.743 L1526.13 682.743 L1525.57 682.743 L1525.01 682.743 L1524.45 682.743 L1523.89 682.743 L1523.33 682.743 L1522.77 682.743 L1522.21 682.743 L1521.65 682.743 L1521.09 682.743 L1520.53 682.743 L1519.98 682.743 L1519.42 682.743 L1518.86 682.743 L1518.3 682.743 L1517.74 682.743 L1517.18 682.743 L1516.62 682.743 L1516.06 682.743 L1515.5 682.743 L1514.94 682.743 L1514.38 682.743 L1513.82 682.743 L1513.26 682.743 L1512.71 682.743 L1512.15 682.743 L1511.59 682.743 L1511.03 682.743 L1510.47 682.743 L1509.91 682.743 L1509.35 682.743 L1508.79 682.743 L1508.23 682.743 L1507.67 682.743 L1507.11 682.743 L1506.55 682.743 L1505.99 682.743 L1505.44 682.743 L1504.88 682.743 L1504.32 682.743 L1503.76 682.743 L1503.2 682.743 L1502.64 682.743 L1502.08 682.743 L1501.52 682.743 L1500.96 682.743 L1500.4 682.743 L1499.84 682.743 L1499.28 682.743 L1498.72 682.743 L1498.16 682.743 L1497.61 682.743 L1497.05 682.743 L1496.49 682.743 L1495.93 682.743 L1495.37 682.743 L1494.81 682.743 L1494.25 682.743 L1493.69 682.743 L1493.13 682.743 L1492.57 682.743 L1492.01 682.743 L1491.45 682.743 L1490.89 682.743 L1490.34 682.743 L1489.78 682.743 L1489.22 682.743 L1488.66 682.743 L1488.1 682.743 L1487.54 682.743 L1486.98 682.743 L1486.42 682.743 L1485.86 682.743 L1485.3 682.743 L1484.74 682.743 L1484.18 682.743 L1483.62 682.743 L1483.07 682.743 L1482.51 682.743 L1481.95 682.743 L1481.39 682.743 L1480.83 682.743 L1480.27 682.743 L1479.71 682.743 L1479.15 682.743 L1478.59 682.743 L1478.03 682.743 L1477.47 682.743 L1476.91 682.743 L1476.35 682.743 L1475.79 682.743 L1475.24 682.743 L1474.68 682.743 L1474.12 682.743 L1473.56 682.743 L1473 682.743 L1472.44 682.743 L1471.88 682.743 L1471.32 682.743 L1470.76 682.743 L1470.2 682.743 L1469.64 682.743 L1469.08 682.743 L1468.52 682.743 L1467.97 682.743 L1467.41 682.743 L1466.85 682.743 L1466.29 682.743 L1465.73 682.743 L1465.17 682.743 L1464.61 682.743 L1464.05 682.743 L1463.49 682.743 L1462.93 682.743 L1462.37 682.743 L1461.81 682.743 L1461.25 682.743 L1460.7 682.743 L1460.14 682.743 L1459.58 682.743 L1459.02 682.743 L1458.46 682.743 L1457.9 682.743 L1457.34 682.743 L1456.78 682.743 L1456.22 682.743 L1455.66 682.743 L1455.1 682.743 L1454.54 682.743 L1453.98 682.743 L1453.42 682.743 L1452.87 682.743 L1452.31 682.743 L1451.75 682.743 L1451.19 682.743 L1450.63 682.743 L1450.07 682.743 L1449.51 682.743 L1448.95 682.743 L1448.39 682.743 L1447.83 682.743 L1447.27 682.743 L1446.71 682.743 L1446.15 682.743 L1445.6 682.743 L1445.04 682.743 L1444.48 682.743 L1443.92 682.743 L1443.36 682.743 L1442.8 682.743 L1442.24 682.743 L1441.68 682.743 L1441.12 682.743 L1440.56 682.743 L1440 682.743 L1439.44 682.743 L1438.88 682.743 L1438.33 682.743 L1437.77 682.743 L1437.21 682.743 L1436.65 682.743 L1436.09 682.743 L1435.53 682.743 L1434.97 682.743 L1434.41 682.743 L1433.85 682.743 L1433.29 682.743 L1432.73 682.743 L1432.17 682.743 L1431.61 682.743 L1431.05 682.743 L1430.5 682.743 L1429.94 682.743 L1429.38 682.743 L1428.82 682.743 L1428.26 682.743 L1427.7 682.743 L1427.14 682.743 L1426.58 682.743 L1426.02 682.743 L1425.46 682.743 L1424.9 682.743 L1424.34 682.743 L1423.78 682.743 L1423.23 682.743 L1422.67 682.743 L1422.11 682.743 L1421.55 682.743 L1420.99 682.743 L1420.43 682.743 L1419.87 682.743 L1419.31 682.743 L1418.75 682.743 L1418.19 682.743 L1417.63 682.743 L1417.07 682.743 L1416.51 682.743 L1415.95 682.743 L1415.4 682.743 L1414.84 682.743 L1414.28 682.743 L1413.72 682.743 L1413.16 682.743 L1412.6 682.743 L1412.04 682.743 L1411.48 682.743 L1410.92 682.743 L1410.36 682.743 L1409.8 682.743 L1409.24 682.743 L1408.68 682.743 L1408.13 682.743 L1407.57 682.743 L1407.01 682.743 L1406.45 682.743 L1405.89 682.743 L1405.33 682.743 L1404.77 682.743 L1404.21 682.743 L1403.65 682.743 L1403.09 682.743 L1402.53 682.743 L1401.97 682.743 L1401.41 682.743 L1400.86 682.743 L1400.3 682.743 L1399.74 682.743 L1399.18 682.743 L1398.62 682.743 L1398.06 682.743 L1397.5 682.743 L1396.94 682.743 L1396.38 682.743 L1395.82 682.743 L1395.26 682.743 L1394.7 682.743 L1394.14 682.743 L1393.58 682.743 L1393.03 682.743 L1392.47 682.743 L1391.91 682.743 L1391.35 682.743 L1390.79 682.743 L1390.23 682.743 L1389.67 682.743 L1389.11 682.743 L1388.55 682.743 L1387.99 682.743 L1387.43 682.743 L1386.87 682.743 L1386.31 682.743 L1385.76 682.743 L1385.2 682.743 L1384.64 682.743 L1384.08 682.743 L1383.52 682.743 L1382.96 682.743 L1382.4 682.743 L1381.84 682.743 L1381.28 682.743 L1380.72 682.743 L1380.16 682.743 L1379.6 682.743 L1379.04 682.743 L1378.49 682.743 L1377.93 682.743 L1377.37 682.743 L1376.81 682.743 L1376.25 682.743 L1375.69 682.743 L1375.13 682.743 L1374.57 682.743 L1374.01 682.743 L1373.45 682.743 L1372.89 682.743 L1372.33 682.743 L1371.77 682.743 L1371.21 682.743 L1370.66 682.743 L1370.1 682.743 L1369.54 682.743 L1368.98 682.743 L1368.42 682.743 L1367.86 682.743 L1367.3 682.743 L1366.74 682.743 L1366.18 682.743 L1365.62 682.743 L1365.06 682.743 L1364.5 682.743 L1363.94 682.743 L1363.39 682.743 L1362.83 682.743 L1362.27 682.743 L1361.71 682.743 L1361.15 682.743 L1360.59 682.743 L1360.03 682.743 L1359.47 682.743 L1358.91 682.743 L1358.35 682.743 L1357.79 682.743 L1357.23 682.743 L1356.67 682.743 L1356.12 682.743 L1355.56 682.743 L1355 682.743 L1354.44 682.743 L1353.88 682.743 L1353.32 682.743 L1352.76 682.743 L1352.2 682.743 L1351.64 682.743 L1351.08 682.743 L1350.52 682.743 L1349.96 682.743 L1349.4 682.743 L1348.84 682.743 L1348.29 682.743 L1347.73 682.743 L1347.17 682.743 L1346.61 682.743 L1346.05 682.743 L1345.49 682.743 L1344.93 682.743 L1344.37 682.743 L1343.81 682.743 L1343.25 682.743 L1342.69 682.743 L1342.13 682.743 L1341.57 682.743 L1341.02 682.743 L1340.46 682.743 L1339.9 682.743 L1339.34 682.743 L1338.78 682.743 L1338.22 682.743 L1337.66 682.743 L1337.1 682.743 L1336.54 682.743 L1335.98 682.743 L1335.42 682.743 L1334.86 682.743 L1334.3 682.743 L1333.75 682.743 L1333.19 682.743 L1332.63 682.743 L1332.07 682.743 L1331.51 682.743 L1330.95 682.743 L1330.39 682.743 L1329.83 682.743 L1329.27 682.743 L1328.71 682.743 L1328.15 682.743 L1327.59 682.743 L1327.03 682.743 L1326.47 682.743 L1325.92 682.743 L1325.36 682.743 L1324.8 682.743 L1324.24 682.743 L1323.68 682.743 L1323.12 682.743 L1322.56 682.743 L1322 682.743 L1321.44 682.743 L1320.88 682.743 L1320.32 682.743 L1319.76 682.743 L1319.2 682.743 L1318.65 682.743 L1318.09 682.743 L1317.53 682.743 L1316.97 682.743 L1316.41 682.743 L1315.85 682.743 L1315.29 682.743 L1314.73 682.743 L1314.17 682.743 L1313.61 682.743 L1313.05 682.743 L1312.49 682.743 L1311.93 682.743 L1311.38 682.743 L1310.82 682.743 L1310.26 682.743 L1309.7 682.743 L1309.14 682.743 L1308.58 682.743 L1308.02 682.743 L1307.46 682.743 L1306.9 682.743 L1306.34 682.743 L1305.78 682.743 L1305.22 682.743 L1304.66 682.743 L1304.1 682.743 L1303.55 682.743 L1302.99 682.743 L1302.43 682.743 L1301.87 682.743 L1301.31 682.743 L1300.75 682.743 L1300.19 682.743 L1299.63 682.743 L1299.07 682.743 L1298.51 682.743 L1297.95 682.743 L1297.39 682.743 L1296.83 682.743 L1296.28 682.743 L1295.72 682.743 L1295.16 682.743 L1294.6 682.743 L1294.04 682.743 L1293.48 682.743 L1292.92 682.743 L1292.36 682.743 L1291.8 682.743 L1291.24 682.743 L1290.68 682.743 L1290.12 682.743 L1289.56 682.743 L1289 682.743 L1288.45 682.743 L1287.89 682.743 L1287.33 682.743 L1286.77 682.743 L1286.21 682.743 L1285.65 682.743 L1285.09 682.743 L1284.53 682.743 L1283.97 682.743 L1283.41 682.743 L1282.85 682.743 L1282.29 682.743 L1281.73 682.743 L1281.18 682.743 L1280.62 682.743 L1280.06 682.743 L1279.5 682.743 L1278.94 682.743 L1278.38 682.743 L1277.82 682.743 L1277.26 682.743 L1276.7 682.743 L1276.14 682.743 L1275.58 682.743 L1275.02 682.743 L1274.46 682.743 L1273.91 682.743 L1273.35 682.743 L1272.79 682.743 L1272.23 682.743 L1271.67 682.743 L1271.11 682.743 L1270.55 682.743 L1269.99 682.743 L1269.43 682.743 L1268.87 682.743 L1268.31 682.743 L1267.75 682.743 L1267.19 682.743 L1266.63 682.743 L1266.08 682.743 L1265.52 682.743 L1264.96 682.743 L1264.4 682.743 L1263.84 682.743 L1263.28 682.743 L1262.72 682.743 L1262.16 682.743 L1261.6 682.743 L1261.04 682.743 L1260.48 682.743 L1259.92 682.743 L1259.36 682.743 L1258.81 682.743 L1258.25 682.743 L1257.69 682.743 L1257.13 682.743 L1256.57 682.743 L1256.01 682.743 L1255.45 682.743 L1254.89 682.743 L1254.33 682.743 L1253.77 682.743 L1253.21 682.743 L1252.65 682.743 L1252.09 682.743 L1251.54 682.743 L1250.98 682.743 L1250.42 682.743 L1249.86 682.743 L1249.3 682.743 L1248.74 682.743 L1248.18 682.743 L1247.62 682.743 L1247.06 682.743 L1246.5 682.743 L1245.94 682.743 L1245.38 682.743 L1244.82 682.743 L1244.26 682.743 L1243.71 682.743 L1243.15 682.743 L1242.59 682.743 L1242.03 682.743 L1241.47 682.743 L1240.91 682.743 L1240.35 682.743 L1239.79 682.743 L1239.23 682.743 L1238.67 682.743 L1238.11 682.743 L1237.55 682.743 L1236.99 682.743 L1236.44 682.743 L1235.88 682.743 L1235.32 682.743 L1234.76 682.743 L1234.2 682.743 L1233.64 682.743 L1233.08 682.743 L1232.52 682.743 L1231.96 682.743 L1231.4 682.743 L1230.84 682.743 L1230.28 682.743 L1229.72 682.743 L1229.17 682.743 L1228.61 682.743 L1228.05 682.743 L1227.49 682.743 L1226.93 682.743 L1226.37 682.743 L1225.81 682.743 L1225.25 682.743 L1224.69 682.743 L1224.13 682.743 L1223.57 682.743 L1223.01 682.743 L1222.45 682.743 L1221.89 682.743 L1221.34 682.743 L1220.78 682.743 L1220.22 682.743 L1219.66 682.743 L1219.1 682.743 L1218.54 682.743 L1217.98 682.743 L1217.42 682.743 L1216.86 682.743 L1216.3 682.743 L1215.74 682.743 L1215.18 682.743 L1214.62 682.743 L1214.07 682.743 L1213.51 682.743 L1212.95 682.743 L1212.39 682.743 L1211.83 682.743 L1211.27 682.743 L1210.71 682.743 L1210.15 682.743 L1209.59 682.743 L1209.03 682.743 L1208.47 682.743 L1207.91 682.743 L1207.35 682.743 L1206.8 682.743 L1206.24 682.743 L1205.68 682.743 L1205.12 682.743 L1204.56 682.743 L1204 682.743 L1203.44 682.743 L1202.88 682.743 L1202.32 682.743 L1201.76 682.743 L1201.2 682.743 L1200.64 682.743 L1200.08 682.743 L1199.52 682.743 L1198.97 682.743 L1198.41 682.743 L1197.85 682.743 L1197.29 682.743 L1196.73 682.743 L1196.17 682.743 L1195.61 682.743 L1195.05 682.743 L1194.49 682.743 L1193.93 682.743 L1193.37 682.743 L1192.81 682.743 L1192.25 682.743 L1191.7 682.743 L1191.14 682.743 L1190.58 682.743 L1190.02 682.743 L1189.46 682.743 L1188.9 682.743 L1188.34 682.743 L1187.78 682.743 L1187.22 682.743 L1186.66 682.743 L1186.1 682.743 L1185.54 682.743 L1184.98 682.743 L1184.43 682.743 L1183.87 682.743 L1183.31 682.743 L1182.75 682.743 L1182.19 682.743 L1181.63 682.743 L1181.07 682.743 L1180.51 682.743 L1179.95 682.743 L1179.39 682.743 L1178.83 682.743 L1178.27 682.743 L1177.71 682.743 L1177.15 682.743 L1176.6 682.743 L1176.04 682.743 L1175.48 682.743 L1174.92 682.743 L1174.36 682.743 L1173.8 682.743 L1173.24 682.743 L1172.68 682.743 L1172.12 682.743 L1171.56 682.743 L1171 682.743 L1170.44 682.743 L1169.88 682.743 L1169.33 682.743 L1168.77 682.743 L1168.21 682.743 L1167.65 682.743 L1167.09 682.743 L1166.53 682.743 L1165.97 682.743 L1165.41 682.743 L1164.85 682.743 L1164.29 682.743 L1163.73 682.743 L1163.17 682.743 L1162.61 682.743 L1162.05 682.743 L1161.5 682.743 L1160.94 682.743 L1160.38 682.743 L1159.82 682.743 L1159.26 682.743 L1158.7 682.743 L1158.14 682.743 L1157.58 682.743 L1157.02 682.743 L1156.46 682.743 L1155.9 682.743 L1155.34 682.743 L1154.78 682.743 L1154.23 682.743 L1153.67 682.743 L1153.11 682.743 L1152.55 682.743 L1151.99 682.743 L1151.43 682.743 L1150.87 682.743 L1150.31 682.743 L1149.75 682.743 L1149.19 682.743 L1148.63 682.743 L1148.07 682.743 L1147.51 682.743 L1146.96 682.743 L1146.4 682.743 L1145.84 682.743 L1145.28 682.743 L1144.72 682.743 L1144.16 682.743 L1143.6 682.743 L1143.04 682.743 L1142.48 682.743 L1141.92 682.743 L1141.36 682.743 L1140.8 682.743 L1140.24 682.743 L1139.68 682.743 L1139.13 682.743 L1138.57 682.743 L1138.01 682.743 L1137.45 682.743 L1136.89 682.743 L1136.33 682.743 L1135.77 682.743 L1135.21 682.743 L1134.65 682.743 L1134.09 682.743 L1133.53 682.743 L1132.97 682.743 L1132.41 682.743 L1131.86 682.743 L1131.3 682.743 L1130.74 682.743 L1130.18 682.743 L1129.62 682.743 L1129.06 682.743 L1128.5 682.743 L1127.94 682.743 L1127.38 682.743 L1126.82 682.743 L1126.26 682.743 L1125.7 682.743 L1125.14 682.743 L1124.59 682.743 L1124.03 682.743 L1123.47 682.743 L1122.91 682.743 L1122.35 682.743 L1121.79 682.743 L1121.23 682.743 L1120.67 682.743 L1120.11 682.743 L1119.55 682.743 L1118.99 682.743 L1118.43 682.743 L1117.87 682.743 L1117.31 682.743 L1116.76 682.743 L1116.2 682.743 L1115.64 682.743 L1115.08 682.743 L1114.52 682.743 L1113.96 682.743 L1113.4 682.743 L1112.84 682.743 L1112.28 682.743 L1111.72 682.743 L1111.16 682.743 L1110.6 682.743 L1110.04 682.743 L1109.49 682.743 L1108.93 682.743 L1108.37 682.743 L1107.81 682.743 L1107.25 682.743 L1106.69 682.743 L1106.13 682.743 L1105.57 682.743 L1105.01 682.743 L1104.45 682.743 L1103.89 682.743 L1103.33 682.743 L1102.77 682.743 L1102.22 682.743 L1101.66 682.743 L1101.1 682.743 L1100.54 682.743 L1099.98 682.743 L1099.42 682.743 L1098.86 682.743 L1098.3 682.743 L1097.74 682.743 L1097.18 682.743 L1096.62 682.743 L1096.06 682.743 L1095.5 682.743 L1094.94 682.743 L1094.39 682.743 L1093.83 682.743 L1093.27 682.743 L1092.71 682.743 L1092.15 682.743 L1091.59 682.743 L1091.03 682.743 L1090.47 682.743 L1089.91 682.743 L1089.35 682.743 L1088.79 682.743 L1088.23 682.743 L1087.67 682.743 L1087.12 682.743 L1086.56 682.743 L1086 682.743 L1085.44 682.743 L1084.88 682.743 L1084.32 682.743 L1083.76 682.743 L1083.2 682.743 L1082.64 682.743 L1082.08 682.743 L1081.52 682.743 L1080.96 682.743 L1080.4 682.743 L1079.85 682.743 L1079.29 682.743 L1078.73 682.743 L1078.17 682.743 L1077.61 682.743 L1077.05 682.743 L1076.49 682.743 L1075.93 682.743 L1075.37 682.743 L1074.81 682.743 L1074.25 682.743 L1073.69 682.743 L1073.13 682.743 L1072.57 682.743 L1072.02 682.743 L1071.46 682.743 L1070.9 682.743 L1070.34 682.743 L1069.78 682.743 L1069.22 682.743 L1068.66 682.743 L1068.1 682.743 L1067.54 682.743 L1066.98 682.743 L1066.42 682.743 L1065.86 682.743 L1065.3 682.743 L1064.75 682.743 L1064.19 682.743 L1063.63 682.743 L1063.07 682.743 L1062.51 682.743 L1061.95 682.743 L1061.39 682.743 L1060.83 682.743 L1060.27 682.743 L1059.71 682.743 L1059.15 682.743 L1058.59 682.743 L1058.03 682.743 L1057.48 682.743 L1056.92 682.743 L1056.36 682.743 L1055.8 682.743 L1055.24 682.743 L1054.68 682.743 L1054.12 682.743 L1053.56 682.743 L1053 682.743 L1052.44 682.743 L1051.88 682.743 L1051.32 682.743 L1050.76 682.743 L1050.2 682.743 L1049.65 682.743 L1049.09 682.743 L1048.53 682.743 L1047.97 682.743 L1047.41 682.743 L1046.85 682.743 L1046.29 682.743 L1045.73 682.743 L1045.17 682.743 L1044.61 682.743 L1044.05 682.743 L1043.49 682.743 L1042.93 682.743 L1042.38 682.743 L1041.82 682.743 L1041.26 682.743 L1040.7 682.743 L1040.14 682.743 L1039.58 682.743 L1039.02 682.743 L1038.46 682.743 L1037.9 682.743 L1037.34 682.743 L1036.78 682.743 L1036.22 682.743 L1035.66 682.743 L1035.1 682.743 L1034.55 682.743 L1033.99 682.743 L1033.43 682.743 L1032.87 682.743 L1032.31 682.743 L1031.75 682.743 L1031.19 682.743 L1030.63 682.743 L1030.07 682.743 L1029.51 682.743 L1028.95 682.743 L1028.39 682.743 L1027.83 682.743 L1027.28 682.743 L1026.72 682.743 L1026.16 682.743 L1025.6 682.743 L1025.04 682.743 L1024.48 682.743 L1023.92 682.743 L1023.36 682.743 L1022.8 682.743 L1022.24 682.743 L1021.68 682.743 L1021.12 682.743 L1020.56 682.743 L1020.01 682.743 L1019.45 682.743 L1018.89 682.743 L1018.33 682.743 L1017.77 682.743 L1017.21 682.743 L1016.65 682.743 L1016.09 682.743 L1015.53 682.743 L1014.97 682.743 L1014.41 682.743 L1013.85 682.743 L1013.29 682.743 L1012.73 682.743 L1012.18 682.743 L1011.62 682.743 L1011.06 682.743 L1010.5 682.743 L1009.94 682.743 L1009.38 682.743 L1008.82 682.743 L1008.26 682.743 L1007.7 682.743 L1007.14 682.743 L1006.58 682.743 L1006.02 682.743 L1005.46 682.743 L1004.91 682.743 L1004.35 682.743 L1003.79 682.743 L1003.23 682.743 L1002.67 682.743 L1002.11 682.743 L1001.55 682.743 L1000.99 682.743 L1000.43 682.743 L999.872 682.743 L999.313 682.743 L998.754 682.743 L998.194 682.743 L997.635 682.743 L997.076 682.743 L996.517 682.743 L995.957 682.743 L995.398 682.743 L994.839 682.743 L994.28 682.743 L993.72 682.743 L993.161 682.743 L992.602 682.743 L992.043 682.743 L991.483 682.743 L990.924 682.743 L990.365 682.743 L989.806 682.743 L989.246 682.743 L988.687 682.743 L988.128 682.743 L987.569 682.743 L987.009 682.743 L986.45 682.743 L985.891 682.743 L985.332 682.743 L984.772 682.743 L984.213 682.743 L983.654 682.743 L983.095 682.743 L982.535 682.743 L981.976 682.743 L981.417 682.743 L980.858 682.743 L980.298 682.743 L979.739 682.743 L979.18 682.743 L978.621 682.743 L978.061 682.743 L977.502 682.743 L976.943 682.743 L976.384 682.743 L975.824 682.743 L975.265 682.743 L974.706 682.743 L974.147 682.743 L973.587 682.743 L973.028 682.743 L972.469 682.743 L971.91 682.743 L971.35 682.743 L970.791 682.743 L970.232 682.743 L969.673 682.743 L969.113 682.743 L968.554 682.743 L967.995 682.743 L967.436 682.743 L966.876 682.743 L966.317 682.743 L965.758 682.743 L965.199 682.743 L964.639 682.743 L964.08 682.743 L963.521 682.743 L962.962 682.743 L962.402 682.743 L961.843 682.743 L961.284 682.743 L960.725 682.743 L960.165 682.743 L959.606 682.743 L959.047 682.743 L958.488 682.743 L957.928 682.743 L957.369 682.743 L956.81 682.743 L956.251 682.743 L955.691 682.743 L955.132 682.743 L954.573 682.743 L954.014 682.743 L953.454 682.743 L952.895 682.743 L952.336 682.743 L951.777 682.743 L951.217 682.743 L950.658 682.743 L950.099 682.743 L949.54 682.743 L948.98 682.743 L948.421 682.743 L947.862 682.743 L947.303 682.743 L946.743 682.743 L946.184 682.743 L945.625 682.743 L945.066 682.743 L944.506 682.743 L943.947 682.743 L943.388 682.743 L942.829 682.743 L942.269 682.743 L941.71 682.743 L941.151 682.743 L940.592 682.743 L940.032 682.743 L939.473 682.743 L938.914 682.743 L938.355 682.743 L937.795 682.743 L937.236 682.743 L936.677 682.743 L936.118 682.743 L935.558 682.743 L934.999 682.743 L934.44 682.743 L933.881 682.743 L933.321 682.743 L932.762 682.743 L932.203 682.743 L931.644 682.743 L931.084 682.743 L930.525 682.743 L929.966 682.743 L929.406 682.743 L928.847 682.743 L928.288 682.743 L927.729 682.743 L927.169 682.743 L926.61 682.743 L926.051 682.743 L925.492 682.743 L924.932 682.743 L924.373 682.743 L923.814 682.743 L923.255 682.743 L922.695 682.743 L922.136 682.743 L921.577 682.743 L921.018 682.743 L920.458 682.743 L919.899 682.743 L919.34 682.743 L918.781 682.743 L918.221 682.743 L917.662 682.743 L917.103 682.743 L916.544 682.743 L915.984 682.743 L915.425 682.743 L914.866 682.743 L914.307 682.743 L913.747 682.743 L913.188 682.743 L912.629 682.743 L912.07 682.743 L911.51 682.743 L910.951 682.743 L910.392 682.743 L909.833 682.743 L909.273 682.743 L908.714 682.743 L908.155 682.743 L907.596 682.743 L907.036 682.743 L906.477 682.743 L905.918 682.743 L905.359 682.743 L904.799 682.743 L904.24 682.743 L903.681 682.743 L903.122 682.743 L902.562 682.743 L902.003 682.743 L901.444 682.743 L900.885 682.743 L900.325 682.743 L899.766 682.743 L899.207 682.743 L898.648 682.743 L898.088 682.743 L897.529 682.743 L896.97 682.743 L896.411 682.743 L895.851 682.743 L895.292 682.743 L894.733 682.743 L894.174 682.743 L893.614 682.743 L893.055 682.743 L892.496 682.743 L891.937 682.743 L891.377 682.743 L890.818 682.743 L890.259 682.743 L889.7 682.743 L889.14 682.743 L888.581 682.743 L888.022 682.743 L887.463 682.743 L886.903 682.743 L886.344 682.743 L885.785 682.743 L885.226 682.743 L884.666 682.743 L884.107 682.743 L883.548 682.743 L882.989 682.743 L882.429 682.743 L881.87 682.743 L881.311 682.743 L880.752 682.743 L880.192 682.743 L879.633 682.743 L879.074 682.743 L878.515 682.743 L877.955 682.743 L877.396 682.743 L876.837 682.743 L876.278 682.743 L875.718 682.743 L875.159 682.743 L874.6 682.743 L874.041 682.743 L873.481 682.743 L872.922 682.743 L872.363 682.743 L871.804 682.743 L871.244 682.743 L870.685 682.743 L870.126 682.743 L869.567 682.743 L869.007 682.743 L868.448 682.743 L867.889 682.743 L867.33 682.743 L866.77 682.743 L866.211 682.743 L865.652 682.743 L865.093 682.743 L864.533 682.743 L863.974 682.743 L863.415 682.743 L862.856 682.743 L862.296 682.743 L861.737 682.743 L861.178 682.743 L860.619 682.743 L860.059 682.743 L859.5 682.743 L858.941 682.743 L858.382 682.743 L857.822 682.743 L857.263 682.743 L856.704 682.743 L856.145 682.743 L855.585 682.743 L855.026 682.743 L854.467 682.743 L853.908 682.743 L853.348 682.743 L852.789 682.743 L852.23 682.743 L851.671 682.743 L851.111 682.743 L850.552 682.743 L849.993 682.743 L849.434 682.743 L848.874 682.743 L848.315 682.743 L847.756 682.743 L847.197 682.743 L846.637 682.743 L846.078 682.743 L845.519 682.743 L844.96 682.743 L844.4 682.743 L843.841 682.743 L843.282 682.743 L842.723 682.743 L842.163 682.743 L841.604 682.743 L841.045 682.743 L840.486 682.743 L839.926 682.743 L839.367 682.743 L838.808 682.743 L838.249 682.743 L837.689 682.743 L837.13 682.743 L836.571 682.743 L836.012 682.743 L835.452 682.743 L834.893 682.743 L834.334 682.743 L833.775 682.743 L833.215 682.743 L832.656 682.743 L832.097 682.743 L831.538 682.743 L830.978 682.743 L830.419 682.743 L829.86 682.743 L829.301 682.743 L828.741 682.743 L828.182 682.743 L827.623 682.743 L827.064 682.743 L826.504 682.743 L825.945 682.743 L825.386 682.743 L824.827 682.743 L824.267 682.743 L823.708 682.743 L823.149 682.743 L822.59 682.743 L822.03 682.743 L821.471 682.743 L820.912 682.743 L820.353 682.743 L819.793 682.743 L819.234 682.743 L818.675 682.743 L818.116 682.743 L817.556 682.743 L816.997 682.743 L816.438 682.743 L815.879 682.743 L815.319 682.743 L814.76 682.743 L814.201 682.743 L813.642 682.743 L813.082 682.743 L812.523 682.743 L811.964 682.743 L811.405 682.743 L810.845 682.743 L810.286 682.743 L809.727 682.743 L809.168 682.743 L808.608 682.743 L808.049 682.743 L807.49 682.743 L806.931 682.743 L806.371 682.743 L805.812 682.743 L805.253 682.743 L804.693 682.743 L804.134 682.743 L803.575 682.743 L803.016 682.743 L802.456 682.743 L801.897 682.743 L801.338 682.743 L800.779 682.743 L800.219 682.743 L799.66 682.743 L799.101 682.743 L798.542 682.743 L797.982 682.743 L797.423 682.743 L796.864 682.743 L796.305 682.743 L795.745 682.743 L795.186 682.743 L794.627 682.743 L794.068 682.743 L793.508 682.743 L792.949 682.743 L792.39 682.743 L791.831 682.743 L791.271 682.743 L790.712 682.743 L790.153 682.743 L789.594 682.743 L789.034 682.743 L788.475 682.743 L787.916 682.743 L787.357 682.743 L786.797 682.743 L786.238 682.743 L785.679 682.743 L785.12 682.743 L784.56 682.743 L784.001 682.743 L783.442 682.743 L782.883 682.743 L782.323 682.743 L781.764 682.743 L781.205 682.743 L780.646 682.743 L780.086 682.743 L779.527 682.743 L778.968 682.743 L778.409 682.743 L777.849 682.743 L777.29 682.743 L776.731 682.743 L776.172 682.743 L775.612 682.743 L775.053 682.743 L774.494 682.743 L773.935 682.743 L773.375 682.743 L772.816 682.743 L772.257 682.743 L771.698 682.743 L771.138 682.743 L770.579 682.743 L770.02 682.743 L769.461 682.743 L768.901 682.743 L768.342 682.743 L767.783 682.743 L767.224 682.743 L766.664 682.743 L766.105 682.743 L765.546 682.743 L764.987 682.743 L764.427 682.743 L763.868 682.743 L763.309 682.743 L762.75 682.743 L762.19 682.743 L761.631 682.743 L761.072 682.743 L760.513 682.743 L759.953 682.743 L759.394 682.743 L758.835 682.743 L758.276 682.743 L757.716 682.743 L757.157 682.743 L756.598 682.743 L756.039 682.743 L755.479 682.743 L754.92 682.743 L754.361 682.743 L753.802 682.743 L753.242 682.743 L752.683 682.743 L752.124 682.743 L751.565 682.743 L751.005 682.743 L750.446 682.743 L749.887 682.743 L749.328 682.743 L748.768 682.743 L748.209 682.743 L747.65 682.743 L747.091 682.743 L746.531 682.743 L745.972 682.743 L745.413 682.743 L744.854 682.743 L744.294 682.743 L743.735 682.743 L743.176 682.743 L742.617 682.743 L742.057 682.743 L741.498 682.743 L740.939 682.743 L740.38 682.743 L739.82 682.743 L739.261 682.743 L738.702 682.743 L738.143 682.743 L737.583 682.743 L737.024 682.743 L736.465 682.743 L735.906 682.743 L735.346 682.743 L734.787 682.743 L734.228 682.743 L733.669 682.743 L733.109 682.743 L732.55 682.743 L731.991 682.743 L731.432 682.743 L730.872 682.743 L730.313 682.743 L729.754 682.743 L729.195 682.743 L728.635 682.743 L728.076 682.743 L727.517 682.743 L726.958 682.743 L726.398 682.743 L725.839 682.743 L725.28 682.743 L724.721 682.743 L724.161 682.743 L723.602 682.743 L723.043 682.743 L722.484 682.743 L721.924 682.743 L721.365 682.743 L720.806 682.743 L720.247 682.743  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip313)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,684.295 720.806,684.295 721.365,684.295 721.924,684.295 722.484,684.295 723.043,684.295 723.602,684.295 724.161,684.295 724.721,684.295 725.28,684.295 725.839,684.295 726.398,684.295 726.958,684.295 727.517,684.295 728.076,684.295 728.635,684.295 729.195,684.295 729.754,684.295 730.313,684.295 730.872,684.295 731.432,684.295 731.991,684.295 732.55,684.295 733.109,684.295 733.669,684.295 734.228,684.295 734.787,684.295 735.346,684.295 735.906,684.295 736.465,684.295 737.024,684.295 737.583,684.295 738.143,684.295 738.702,684.295 739.261,684.295 739.82,684.295 740.38,684.295 740.939,684.295 741.498,684.295 742.057,684.295 742.617,684.295 743.176,684.295 743.735,684.295 744.294,684.295 744.854,684.295 745.413,684.295 745.972,684.295 746.531,684.295 747.091,684.295 747.65,684.295 748.209,684.295 748.768,684.295 749.328,684.295 749.887,684.295 750.446,684.295 751.005,684.295 751.565,684.295 752.124,684.295 752.683,684.295 753.242,684.295 753.802,684.295 754.361,684.295 754.92,684.295 755.479,684.295 756.039,684.295 756.598,684.295 757.157,684.295 757.716,684.295 758.276,684.295 758.835,684.295 759.394,684.295 759.953,684.295 760.513,684.295 761.072,684.295 761.631,684.295 762.19,684.295 762.75,684.295 763.309,684.295 763.868,684.295 764.427,684.295 764.987,684.295 765.546,684.295 766.105,684.295 766.664,684.295 767.224,684.295 767.783,684.295 768.342,684.295 768.901,684.295 769.461,684.295 770.02,684.295 770.579,684.295 771.138,684.295 771.698,684.295 772.257,684.295 772.816,684.295 773.375,684.295 773.935,684.295 774.494,684.295 775.053,684.295 775.612,684.295 776.172,684.295 776.731,684.295 777.29,684.295 777.849,684.295 778.409,684.295 778.968,684.295 779.527,684.295 780.086,684.295 780.646,684.295 781.205,684.295 781.764,684.295 782.323,684.295 782.883,684.295 783.442,684.295 784.001,684.295 784.56,684.295 785.12,684.295 785.679,684.295 786.238,684.295 786.797,684.295 787.357,684.295 787.916,684.295 788.475,684.295 789.034,684.295 789.594,684.295 790.153,684.295 790.712,684.295 791.271,684.295 791.831,684.295 792.39,684.295 792.949,684.295 793.508,684.295 794.068,684.295 794.627,684.295 795.186,684.295 795.745,684.295 796.305,684.295 796.864,684.295 797.423,684.295 797.982,684.295 798.542,684.295 799.101,684.295 799.66,684.295 800.219,684.295 800.779,684.295 801.338,684.295 801.897,684.295 802.456,684.295 803.016,684.295 803.575,684.295 804.134,684.295 804.693,684.295 805.253,684.295 805.812,684.295 806.371,684.295 806.931,684.295 807.49,684.295 808.049,684.295 808.608,684.295 809.168,684.295 809.727,684.295 810.286,684.295 810.845,684.295 811.405,684.295 811.964,684.295 812.523,684.295 813.082,684.295 813.642,684.295 814.201,684.295 814.76,684.295 815.319,684.295 815.879,684.295 816.438,684.295 816.997,684.295 817.556,684.295 818.116,684.295 818.675,684.295 819.234,684.295 819.793,684.295 820.353,684.295 820.912,684.295 821.471,684.295 822.03,684.295 822.59,684.295 823.149,684.295 823.708,684.295 824.267,684.295 824.827,684.295 825.386,684.295 825.945,684.295 826.504,684.295 827.064,684.295 827.623,684.295 828.182,684.295 828.741,684.295 829.301,684.295 829.86,684.295 830.419,684.295 830.978,684.295 831.538,684.295 832.097,684.295 832.656,684.295 833.215,684.295 833.775,684.295 834.334,684.295 834.893,684.295 835.452,684.295 836.012,684.295 836.571,684.295 837.13,684.295 837.689,684.295 838.249,684.295 838.808,684.295 839.367,684.295 839.926,684.295 840.486,684.295 841.045,684.295 841.604,684.295 842.163,684.295 842.723,684.295 843.282,684.295 843.841,684.295 844.4,684.295 844.96,684.295 845.519,684.295 846.078,684.295 846.637,684.295 847.197,684.295 847.756,684.295 848.315,684.295 848.874,684.295 849.434,684.295 849.993,684.295 850.552,684.295 851.111,684.295 851.671,684.295 852.23,684.295 852.789,684.295 853.348,684.295 853.908,684.295 854.467,684.295 855.026,684.295 855.585,684.295 856.145,684.295 856.704,684.295 857.263,684.295 857.822,684.295 858.382,684.295 858.941,684.295 859.5,684.295 860.059,684.295 860.619,684.295 861.178,684.295 861.737,684.295 862.296,684.295 862.856,684.295 863.415,684.295 863.974,684.295 864.533,684.295 865.093,684.295 865.652,684.295 866.211,684.295 866.77,684.295 867.33,684.295 867.889,684.295 868.448,684.295 869.007,684.295 869.567,684.295 870.126,684.295 870.685,684.295 871.244,684.295 871.804,684.295 872.363,684.295 872.922,684.295 873.481,684.295 874.041,684.295 874.6,684.295 875.159,684.295 875.718,684.295 876.278,684.295 876.837,684.295 877.396,684.295 877.955,684.295 878.515,684.295 879.074,684.295 879.633,684.295 880.192,684.295 880.752,684.295 881.311,684.295 881.87,684.295 882.429,684.295 882.989,684.295 883.548,684.295 884.107,684.295 884.666,684.295 885.226,684.295 885.785,684.295 886.344,684.295 886.903,684.295 887.463,684.295 888.022,684.295 888.581,684.295 889.14,684.295 889.7,684.295 890.259,684.295 890.818,684.295 891.377,684.295 891.937,684.295 892.496,684.295 893.055,684.295 893.614,684.295 894.174,684.295 894.733,684.295 895.292,684.295 895.851,684.295 896.411,684.295 896.97,684.295 897.529,684.295 898.088,684.295 898.648,684.295 899.207,684.295 899.766,684.295 900.325,684.295 900.885,684.295 901.444,684.295 902.003,684.295 902.562,684.295 903.122,684.295 903.681,684.295 904.24,684.295 904.799,684.295 905.359,684.295 905.918,684.295 906.477,684.295 907.036,684.295 907.596,684.295 908.155,684.295 908.714,684.295 909.273,684.295 909.833,684.295 910.392,684.295 910.951,684.295 911.51,684.295 912.07,684.295 912.629,684.295 913.188,684.295 913.747,684.295 914.307,684.295 914.866,684.295 915.425,684.295 915.984,684.295 916.544,684.295 917.103,684.295 917.662,684.295 918.221,684.295 918.781,684.295 919.34,684.295 919.899,684.295 920.458,684.295 921.018,684.295 921.577,684.295 922.136,684.295 922.695,684.295 923.255,684.295 923.814,684.295 924.373,684.295 924.932,684.295 925.492,684.295 926.051,684.295 926.61,684.295 927.169,684.295 927.729,684.295 928.288,684.295 928.847,684.295 929.406,684.295 929.966,684.295 930.525,684.295 931.084,684.295 931.644,684.295 932.203,684.295 932.762,684.295 933.321,684.295 933.881,684.295 934.44,684.295 934.999,684.295 935.558,684.295 936.118,684.295 936.677,684.295 937.236,684.295 937.795,684.295 938.355,684.295 938.914,684.295 939.473,684.295 940.032,684.295 940.592,684.295 941.151,684.295 941.71,684.295 942.269,684.295 942.829,684.295 943.388,684.295 943.947,684.295 944.506,684.295 945.066,684.295 945.625,684.295 946.184,684.295 946.743,684.295 947.303,684.295 947.862,684.295 948.421,684.295 948.98,684.295 949.54,684.295 950.099,684.295 950.658,684.295 951.217,684.295 951.777,684.295 952.336,684.295 952.895,684.295 953.454,684.295 954.014,684.295 954.573,684.295 955.132,684.295 955.691,684.295 956.251,684.295 956.81,684.295 957.369,684.295 957.928,684.295 958.488,684.295 959.047,684.295 959.606,684.295 960.165,684.295 960.725,684.295 961.284,684.295 961.843,684.295 962.402,684.295 962.962,684.295 963.521,684.295 964.08,684.295 964.639,684.295 965.199,684.295 965.758,684.295 966.317,684.295 966.876,684.295 967.436,684.295 967.995,684.295 968.554,684.295 969.113,684.295 969.673,684.295 970.232,684.295 970.791,684.295 971.35,684.295 971.91,684.295 972.469,684.295 973.028,684.295 973.587,684.295 974.147,684.295 974.706,684.295 975.265,684.295 975.824,684.295 976.384,684.295 976.943,684.295 977.502,684.295 978.061,684.295 978.621,684.295 979.18,684.295 979.739,684.295 980.298,684.295 980.858,684.295 981.417,684.295 981.976,684.295 982.535,684.295 983.095,684.295 983.654,684.295 984.213,684.295 984.772,684.295 985.332,684.295 985.891,684.295 986.45,684.295 987.009,684.295 987.569,684.295 988.128,684.295 988.687,684.295 989.246,684.295 989.806,684.295 990.365,684.295 990.924,684.295 991.483,684.295 992.043,684.295 992.602,684.295 993.161,684.295 993.72,684.295 994.28,684.295 994.839,684.295 995.398,684.295 995.957,684.295 996.517,684.295 997.076,684.295 997.635,684.295 998.194,684.295 998.754,684.295 999.313,684.295 999.872,684.295 1000.43,684.295 1000.99,684.295 1001.55,684.295 1002.11,684.295 1002.67,684.295 1003.23,684.295 1003.79,684.295 1004.35,684.295 1004.91,684.295 1005.46,684.295 1006.02,684.295 1006.58,684.295 1007.14,684.295 1007.7,684.295 1008.26,684.295 1008.82,684.295 1009.38,684.295 1009.94,684.295 1010.5,684.295 1011.06,684.295 1011.62,684.295 1012.18,684.295 1012.73,684.295 1013.29,684.295 1013.85,684.295 1014.41,684.295 1014.97,684.295 1015.53,684.295 1016.09,684.295 1016.65,684.295 1017.21,684.295 1017.77,684.295 1018.33,684.295 1018.89,684.295 1019.45,684.295 1020.01,684.295 1020.56,684.295 1021.12,684.295 1021.68,684.295 1022.24,684.295 1022.8,684.295 1023.36,684.295 1023.92,684.295 1024.48,684.295 1025.04,684.295 1025.6,684.295 1026.16,684.295 1026.72,684.295 1027.28,684.295 1027.83,684.295 1028.39,684.295 1028.95,684.295 1029.51,684.295 1030.07,684.295 1030.63,684.295 1031.19,684.295 1031.75,684.295 1032.31,684.295 1032.87,684.295 1033.43,684.295 1033.99,684.295 1034.55,684.295 1035.1,684.295 1035.66,684.295 1036.22,684.295 1036.78,684.295 1037.34,684.295 1037.9,684.295 1038.46,684.295 1039.02,684.295 1039.58,684.295 1040.14,684.295 1040.7,684.295 1041.26,684.295 1041.82,684.295 1042.38,684.295 1042.93,684.295 1043.49,684.295 1044.05,684.295 1044.61,684.295 1045.17,684.295 1045.73,684.295 1046.29,684.295 1046.85,684.295 1047.41,684.295 1047.97,684.295 1048.53,684.295 1049.09,684.295 1049.65,684.295 1050.2,684.295 1050.76,684.295 1051.32,684.295 1051.88,684.295 1052.44,684.295 1053,684.295 1053.56,684.295 1054.12,684.295 1054.68,684.295 1055.24,684.295 1055.8,684.295 1056.36,684.295 1056.92,684.295 1057.48,684.295 1058.03,684.295 1058.59,684.295 1059.15,684.295 1059.71,684.295 1060.27,684.295 1060.83,684.295 1061.39,684.295 1061.95,684.295 1062.51,684.295 1063.07,684.295 1063.63,684.295 1064.19,684.295 1064.75,684.295 1065.3,684.295 1065.86,684.295 1066.42,684.295 1066.98,684.295 1067.54,684.295 1068.1,684.295 1068.66,684.295 1069.22,684.295 1069.78,684.295 1070.34,684.295 1070.9,684.295 1071.46,684.295 1072.02,684.295 1072.57,684.295 1073.13,684.295 1073.69,684.295 1074.25,684.295 1074.81,684.295 1075.37,684.295 1075.93,684.295 1076.49,684.295 1077.05,684.295 1077.61,684.295 1078.17,684.295 1078.73,684.295 1079.29,684.295 1079.85,684.295 1080.4,684.295 1080.96,684.295 1081.52,684.295 1082.08,684.295 1082.64,684.295 1083.2,684.295 1083.76,684.295 1084.32,684.295 1084.88,684.295 1085.44,684.295 1086,684.295 1086.56,684.295 1087.12,684.295 1087.67,684.295 1088.23,684.295 1088.79,684.295 1089.35,684.295 1089.91,684.295 1090.47,684.295 1091.03,684.295 1091.59,684.295 1092.15,684.295 1092.71,684.295 1093.27,684.295 1093.83,684.295 1094.39,684.295 1094.94,684.295 1095.5,684.295 1096.06,684.295 1096.62,684.295 1097.18,684.295 1097.74,684.295 1098.3,684.295 1098.86,684.295 1099.42,684.295 1099.98,684.295 1100.54,684.295 1101.1,684.295 1101.66,684.295 1102.22,684.295 1102.77,684.295 1103.33,684.295 1103.89,684.295 1104.45,684.295 1105.01,684.295 1105.57,684.295 1106.13,684.295 1106.69,684.295 1107.25,684.295 1107.81,684.295 1108.37,684.295 1108.93,684.295 1109.49,684.295 1110.04,684.295 1110.6,684.295 1111.16,684.295 1111.72,684.295 1112.28,684.295 1112.84,684.295 1113.4,684.295 1113.96,684.295 1114.52,684.295 1115.08,684.295 1115.64,684.295 1116.2,684.295 1116.76,684.295 1117.31,684.295 1117.87,684.295 1118.43,684.295 1118.99,684.295 1119.55,684.295 1120.11,684.295 1120.67,684.295 1121.23,684.295 1121.79,684.295 1122.35,684.295 1122.91,684.295 1123.47,684.295 1124.03,684.295 1124.59,684.295 1125.14,684.295 1125.7,684.295 1126.26,684.295 1126.82,684.295 1127.38,684.295 1127.94,684.295 1128.5,684.295 1129.06,684.295 1129.62,684.295 1130.18,684.295 1130.74,684.295 1131.3,684.295 1131.86,684.295 1132.41,684.295 1132.97,684.295 1133.53,684.295 1134.09,684.295 1134.65,684.295 1135.21,684.295 1135.77,684.295 1136.33,684.295 1136.89,684.295 1137.45,684.295 1138.01,684.295 1138.57,684.295 1139.13,684.295 1139.68,684.295 1140.24,684.295 1140.8,684.295 1141.36,684.295 1141.92,684.295 1142.48,684.295 1143.04,684.295 1143.6,684.295 1144.16,684.295 1144.72,684.295 1145.28,684.295 1145.84,684.295 1146.4,684.295 1146.96,684.295 1147.51,684.295 1148.07,684.295 1148.63,684.295 1149.19,684.295 1149.75,684.295 1150.31,684.295 1150.87,684.295 1151.43,684.295 1151.99,684.295 1152.55,684.295 1153.11,684.295 1153.67,684.295 1154.23,684.295 1154.78,684.295 1155.34,684.295 1155.9,684.295 1156.46,684.295 1157.02,684.295 1157.58,684.295 1158.14,684.295 1158.7,684.295 1159.26,684.295 1159.82,684.295 1160.38,684.295 1160.94,684.295 1161.5,684.295 1162.05,684.295 1162.61,684.295 1163.17,684.295 1163.73,684.295 1164.29,684.295 1164.85,684.295 1165.41,684.295 1165.97,684.295 1166.53,684.295 1167.09,684.295 1167.65,684.295 1168.21,684.295 1168.77,684.295 1169.33,684.295 1169.88,684.295 1170.44,684.295 1171,684.295 1171.56,684.295 1172.12,684.295 1172.68,684.295 1173.24,684.295 1173.8,684.295 1174.36,684.295 1174.92,684.295 1175.48,684.295 1176.04,684.295 1176.6,684.295 1177.15,684.295 1177.71,684.295 1178.27,684.295 1178.83,684.295 1179.39,684.295 1179.95,684.295 1180.51,684.295 1181.07,684.295 1181.63,684.295 1182.19,684.295 1182.75,684.295 1183.31,684.295 1183.87,684.295 1184.43,684.295 1184.98,684.295 1185.54,684.295 1186.1,684.295 1186.66,684.295 1187.22,684.295 1187.78,684.295 1188.34,684.295 1188.9,684.295 1189.46,684.295 1190.02,684.295 1190.58,684.295 1191.14,684.295 1191.7,684.295 1192.25,684.295 1192.81,684.295 1193.37,684.295 1193.93,684.295 1194.49,684.295 1195.05,684.295 1195.61,684.295 1196.17,684.295 1196.73,684.295 1197.29,684.295 1197.85,684.295 1198.41,684.295 1198.97,684.295 1199.52,684.295 1200.08,684.295 1200.64,684.295 1201.2,684.295 1201.76,684.295 1202.32,684.295 1202.88,684.295 1203.44,684.295 1204,684.295 1204.56,684.295 1205.12,684.295 1205.68,684.295 1206.24,684.295 1206.8,684.295 1207.35,684.295 1207.91,684.295 1208.47,684.295 1209.03,684.295 1209.59,684.295 1210.15,684.295 1210.71,684.295 1211.27,684.295 1211.83,684.295 1212.39,684.295 1212.95,684.295 1213.51,684.295 1214.07,684.295 1214.62,684.295 1215.18,684.295 1215.74,684.295 1216.3,684.295 1216.86,684.295 1217.42,684.295 1217.98,684.295 1218.54,684.295 1219.1,684.295 1219.66,684.295 1220.22,684.295 1220.78,684.295 1221.34,684.295 1221.89,684.295 1222.45,684.295 1223.01,684.295 1223.57,684.295 1224.13,684.295 1224.69,684.295 1225.25,684.295 1225.81,684.295 1226.37,684.295 1226.93,684.295 1227.49,684.295 1228.05,684.295 1228.61,684.295 1229.17,684.295 1229.72,684.295 1230.28,684.295 1230.84,684.295 1231.4,684.295 1231.96,684.295 1232.52,684.295 1233.08,684.295 1233.64,684.295 1234.2,684.295 1234.76,684.295 1235.32,684.295 1235.88,684.295 1236.44,684.295 1236.99,684.295 1237.55,684.295 1238.11,684.295 1238.67,684.295 1239.23,684.295 1239.79,684.295 1240.35,684.295 1240.91,684.295 1241.47,684.295 1242.03,684.295 1242.59,684.295 1243.15,684.295 1243.71,684.295 1244.26,684.295 1244.82,684.295 1245.38,684.295 1245.94,684.295 1246.5,684.295 1247.06,684.295 1247.62,684.295 1248.18,684.295 1248.74,684.295 1249.3,684.295 1249.86,684.295 1250.42,684.295 1250.98,684.295 1251.54,684.295 1252.09,684.295 1252.65,684.295 1253.21,684.295 1253.77,684.295 1254.33,684.295 1254.89,684.295 1255.45,684.295 1256.01,684.295 1256.57,684.295 1257.13,684.295 1257.69,684.295 1258.25,684.295 1258.81,684.295 1259.36,684.295 1259.92,684.295 1260.48,684.295 1261.04,684.295 1261.6,684.295 1262.16,684.295 1262.72,684.295 1263.28,684.295 1263.84,684.295 1264.4,684.295 1264.96,684.295 1265.52,684.295 1266.08,684.295 1266.63,684.295 1267.19,684.295 1267.75,684.295 1268.31,684.295 1268.87,684.295 1269.43,684.295 1269.99,684.295 1270.55,684.295 1271.11,684.295 1271.67,684.295 1272.23,684.295 1272.79,684.295 1273.35,684.295 1273.91,684.295 1274.46,684.295 1275.02,684.295 1275.58,684.295 1276.14,684.295 1276.7,684.295 1277.26,684.295 1277.82,684.295 1278.38,684.295 1278.94,684.295 1279.5,684.295 1280.06,684.295 1280.62,684.295 1281.18,684.295 1281.73,684.295 1282.29,684.295 1282.85,684.295 1283.41,684.295 1283.97,684.295 1284.53,684.295 1285.09,684.295 1285.65,684.295 1286.21,684.295 1286.77,684.295 1287.33,684.295 1287.89,684.295 1288.45,684.295 1289,684.295 1289.56,684.295 1290.12,684.295 1290.68,684.295 1291.24,684.295 1291.8,684.295 1292.36,684.295 1292.92,684.295 1293.48,684.295 1294.04,684.295 1294.6,684.295 1295.16,684.295 1295.72,684.295 1296.28,684.295 1296.83,684.295 1297.39,684.295 1297.95,684.295 1298.51,684.295 1299.07,684.295 1299.63,684.295 1300.19,684.295 1300.75,684.295 1301.31,684.295 1301.87,684.295 1302.43,684.295 1302.99,684.295 1303.55,684.295 1304.1,684.295 1304.66,684.295 1305.22,684.295 1305.78,684.295 1306.34,684.295 1306.9,684.295 1307.46,684.295 1308.02,684.295 1308.58,684.295 1309.14,684.295 1309.7,684.295 1310.26,684.295 1310.82,684.295 1311.38,684.295 1311.93,684.295 1312.49,684.295 1313.05,684.295 1313.61,684.295 1314.17,684.295 1314.73,684.295 1315.29,684.295 1315.85,684.295 1316.41,684.295 1316.97,684.295 1317.53,684.295 1318.09,684.295 1318.65,684.295 1319.2,684.295 1319.76,684.295 1320.32,684.295 1320.88,684.295 1321.44,684.295 1322,684.295 1322.56,684.295 1323.12,684.295 1323.68,684.295 1324.24,684.295 1324.8,684.295 1325.36,684.295 1325.92,684.295 1326.47,684.295 1327.03,684.295 1327.59,684.295 1328.15,684.295 1328.71,684.295 1329.27,684.295 1329.83,684.295 1330.39,684.295 1330.95,684.295 1331.51,684.295 1332.07,684.295 1332.63,684.295 1333.19,684.295 1333.75,684.295 1334.3,684.295 1334.86,684.295 1335.42,684.295 1335.98,684.295 1336.54,684.295 1337.1,684.295 1337.66,684.295 1338.22,684.295 1338.78,684.295 1339.34,684.295 1339.9,684.295 1340.46,684.295 1341.02,684.295 1341.57,684.295 1342.13,684.295 1342.69,684.295 1343.25,684.295 1343.81,684.295 1344.37,684.295 1344.93,684.295 1345.49,684.295 1346.05,684.295 1346.61,684.295 1347.17,684.295 1347.73,684.295 1348.29,684.295 1348.84,684.295 1349.4,684.295 1349.96,684.295 1350.52,684.295 1351.08,684.295 1351.64,684.295 1352.2,684.295 1352.76,684.295 1353.32,684.295 1353.88,684.295 1354.44,684.295 1355,684.295 1355.56,684.295 1356.12,684.295 1356.67,684.295 1357.23,684.295 1357.79,684.295 1358.35,684.295 1358.91,684.295 1359.47,684.295 1360.03,684.295 1360.59,684.295 1361.15,684.295 1361.71,684.295 1362.27,684.295 1362.83,684.295 1363.39,684.295 1363.94,684.295 1364.5,684.295 1365.06,684.295 1365.62,684.295 1366.18,684.295 1366.74,684.295 1367.3,684.295 1367.86,684.295 1368.42,684.295 1368.98,684.295 1369.54,684.295 1370.1,684.295 1370.66,684.295 1371.21,684.295 1371.77,684.295 1372.33,684.295 1372.89,684.295 1373.45,684.295 1374.01,684.295 1374.57,684.295 1375.13,684.295 1375.69,684.295 1376.25,684.295 1376.81,684.295 1377.37,684.295 1377.93,684.295 1378.49,684.295 1379.04,684.295 1379.6,684.295 1380.16,684.295 1380.72,684.295 1381.28,684.295 1381.84,684.295 1382.4,684.295 1382.96,684.295 1383.52,684.295 1384.08,684.295 1384.64,684.295 1385.2,684.295 1385.76,684.295 1386.31,684.295 1386.87,684.295 1387.43,684.295 1387.99,684.295 1388.55,684.295 1389.11,684.295 1389.67,684.295 1390.23,684.295 1390.79,684.295 1391.35,684.295 1391.91,684.295 1392.47,684.295 1393.03,684.295 1393.58,684.295 1394.14,684.295 1394.7,684.295 1395.26,684.295 1395.82,684.295 1396.38,684.295 1396.94,684.295 1397.5,684.295 1398.06,684.295 1398.62,684.295 1399.18,684.295 1399.74,684.295 1400.3,684.295 1400.86,684.295 1401.41,684.295 1401.97,684.295 1402.53,684.295 1403.09,684.295 1403.65,684.295 1404.21,684.295 1404.77,684.295 1405.33,684.295 1405.89,684.295 1406.45,684.295 1407.01,684.295 1407.57,684.295 1408.13,684.295 1408.68,684.295 1409.24,684.295 1409.8,684.295 1410.36,684.295 1410.92,684.295 1411.48,684.295 1412.04,684.295 1412.6,684.295 1413.16,684.295 1413.72,684.295 1414.28,684.295 1414.84,684.295 1415.4,684.295 1415.95,684.295 1416.51,684.295 1417.07,684.295 1417.63,684.295 1418.19,684.295 1418.75,684.295 1419.31,684.295 1419.87,684.295 1420.43,684.295 1420.99,684.295 1421.55,684.295 1422.11,684.295 1422.67,684.295 1423.23,684.295 1423.78,684.295 1424.34,684.295 1424.9,684.295 1425.46,684.295 1426.02,684.295 1426.58,684.295 1427.14,684.295 1427.7,684.295 1428.26,684.295 1428.82,684.295 1429.38,684.295 1429.94,684.295 1430.5,684.295 1431.05,684.295 1431.61,684.295 1432.17,684.295 1432.73,684.295 1433.29,684.295 1433.85,684.295 1434.41,684.295 1434.97,684.295 1435.53,684.295 1436.09,684.295 1436.65,684.295 1437.21,684.295 1437.77,684.295 1438.33,684.295 1438.88,684.295 1439.44,684.295 1440,684.295 1440.56,684.295 1441.12,684.295 1441.68,684.295 1442.24,684.295 1442.8,684.295 1443.36,684.295 1443.92,684.295 1444.48,684.295 1445.04,684.295 1445.6,684.295 1446.15,684.295 1446.71,684.295 1447.27,684.295 1447.83,684.295 1448.39,684.295 1448.95,684.295 1449.51,684.295 1450.07,684.295 1450.63,684.295 1451.19,684.295 1451.75,684.295 1452.31,684.295 1452.87,684.295 1453.42,684.295 1453.98,684.295 1454.54,684.295 1455.1,684.295 1455.66,684.295 1456.22,684.295 1456.78,684.295 1457.34,684.295 1457.9,684.295 1458.46,684.295 1459.02,684.295 1459.58,684.295 1460.14,684.295 1460.7,684.295 1461.25,684.295 1461.81,684.295 1462.37,684.295 1462.93,684.295 1463.49,684.295 1464.05,684.295 1464.61,684.295 1465.17,684.295 1465.73,684.295 1466.29,684.295 1466.85,684.295 1467.41,684.295 1467.97,684.295 1468.52,684.295 1469.08,684.295 1469.64,684.295 1470.2,684.295 1470.76,684.295 1471.32,684.295 1471.88,684.295 1472.44,684.295 1473,684.295 1473.56,684.295 1474.12,684.295 1474.68,684.295 1475.24,684.295 1475.79,684.295 1476.35,684.295 1476.91,684.295 1477.47,684.295 1478.03,684.295 1478.59,684.295 1479.15,684.295 1479.71,684.295 1480.27,684.295 1480.83,684.295 1481.39,684.295 1481.95,684.295 1482.51,684.295 1483.07,684.295 1483.62,684.295 1484.18,684.295 1484.74,684.295 1485.3,684.295 1485.86,684.295 1486.42,684.295 1486.98,684.295 1487.54,684.295 1488.1,684.295 1488.66,684.295 1489.22,684.295 1489.78,684.295 1490.34,684.295 1490.89,684.295 1491.45,684.295 1492.01,684.295 1492.57,684.295 1493.13,684.295 1493.69,684.295 1494.25,684.295 1494.81,684.295 1495.37,684.295 1495.93,684.295 1496.49,684.295 1497.05,684.295 1497.61,684.295 1498.16,684.295 1498.72,684.295 1499.28,684.295 1499.84,684.295 1500.4,684.295 1500.96,684.295 1501.52,684.295 1502.08,684.295 1502.64,684.295 1503.2,684.295 1503.76,684.295 1504.32,684.295 1504.88,684.295 1505.44,684.295 1505.99,684.295 1506.55,684.295 1507.11,684.295 1507.67,684.295 1508.23,684.295 1508.79,684.295 1509.35,684.295 1509.91,684.295 1510.47,684.295 1511.03,684.295 1511.59,684.295 1512.15,684.295 1512.71,684.295 1513.26,684.295 1513.82,684.295 1514.38,684.295 1514.94,684.295 1515.5,684.295 1516.06,684.295 1516.62,684.295 1517.18,684.295 1517.74,684.295 1518.3,684.295 1518.86,684.295 1519.42,684.295 1519.98,684.295 1520.53,684.295 1521.09,684.295 1521.65,684.295 1522.21,684.295 1522.77,684.295 1523.33,684.295 1523.89,684.295 1524.45,684.295 1525.01,684.295 1525.57,684.295 1526.13,684.295 1526.69,684.295 1527.25,684.295 1527.81,684.295 1528.36,684.295 1528.92,684.295 1529.48,684.295 1530.04,684.295 1530.6,684.295 1531.16,684.295 1531.72,684.295 1532.28,684.295 1532.84,684.295 1533.4,684.295 1533.96,684.295 1534.52,684.295 1535.08,684.295 1535.63,684.295 1536.19,684.295 1536.75,684.295 1537.31,684.295 1537.87,684.295 1538.43,684.295 1538.99,684.295 1539.55,684.295 1540.11,684.295 1540.67,684.295 1541.23,684.295 1541.79,684.295 1542.35,684.295 1542.9,684.295 1543.46,684.295 1544.02,684.295 1544.58,684.295 1545.14,684.295 1545.7,684.295 1546.26,684.295 1546.82,684.295 1547.38,684.295 1547.94,684.295 1548.5,684.295 1549.06,684.295 1549.62,684.295 1550.18,684.295 1550.73,684.295 1551.29,684.295 1551.85,684.295 1552.41,684.295 1552.97,684.295 1553.53,684.295 1554.09,684.295 1554.65,684.295 1555.21,684.295 1555.77,684.295 1556.33,684.295 1556.89,684.295 1557.45,684.295 1558,684.295 1558.56,684.295 1559.12,684.295 1559.68,684.295 1560.24,684.295 1560.8,684.295 1561.36,684.295 1561.92,684.295 1562.48,684.295 1563.04,684.295 1563.6,684.295 1564.16,684.295 1564.72,684.295 1565.28,684.295 1565.83,684.295 1566.39,684.295 1566.95,684.295 1567.51,684.295 1568.07,684.295 1568.63,684.295 1569.19,684.295 1569.75,684.295 1570.31,684.295 1570.87,684.295 1571.43,684.295 1571.99,684.295 1572.55,684.295 1573.1,684.295 1573.66,684.295 1574.22,684.295 1574.78,684.295 1575.34,684.295 1575.9,684.295 1576.46,684.295 1577.02,684.295 1577.58,684.295 1578.14,684.295 1578.7,684.295 1579.26,684.295 1579.82,684.295 1580.37,684.295 1580.93,684.295 1581.49,684.295 1582.05,684.295 1582.61,684.295 1583.17,684.295 1583.73,684.295 1584.29,684.295 1584.85,684.295 1585.41,684.295 1585.97,684.295 1586.53,684.295 1587.09,684.295 1587.65,684.295 1588.2,684.295 1588.76,684.295 1589.32,684.295 1589.88,684.295 1590.44,684.295 1591,684.295 1591.56,684.295 1592.12,684.295 1592.68,684.295 1593.24,684.295 1593.8,684.295 1594.36,684.295 1594.92,684.295 1595.47,684.295 1596.03,684.295 1596.59,684.295 1597.15,684.295 1597.71,684.295 1598.27,684.295 1598.83,684.295 1599.39,684.295 1599.95,684.295 1600.51,684.295 1601.07,684.295 1601.63,684.295 1602.19,684.295 1602.74,684.295 1603.3,684.295 1603.86,684.295 1604.42,684.295 1604.98,684.295 1605.54,684.295 1606.1,684.295 1606.66,684.295 1607.22,684.295 1607.78,684.295 1608.34,684.295 1608.9,684.295 1609.46,684.295 1610.02,684.295 1610.57,684.295 1611.13,684.295 1611.69,684.295 1612.25,684.295 1612.81,684.295 1613.37,684.295 1613.93,684.295 1614.49,684.295 1615.05,684.295 1615.61,684.295 1616.17,684.295 1616.73,684.295 1617.29,684.295 1617.84,684.295 1618.4,684.295 1618.96,684.295 1619.52,684.295 1620.08,684.295 1620.64,684.295 1621.2,684.295 1621.76,684.295 1622.32,684.295 1622.88,684.295 1623.44,684.295 1624,684.295 1624.56,684.295 1625.11,684.295 1625.67,684.295 1626.23,684.295 1626.79,684.295 1627.35,684.295 1627.91,684.295 1628.47,684.295 1629.03,684.295 1629.59,684.295 1630.15,684.295 1630.71,684.295 1631.27,684.295 1631.83,684.295 1632.39,684.295 1632.94,684.295 1633.5,684.295 1634.06,684.295 1634.62,684.295 1635.18,684.295 1635.74,684.295 1636.3,684.295 1636.86,684.295 1637.42,684.295 1637.98,684.295 1638.54,684.295 1639.1,684.295 1639.66,684.295 1640.21,684.295 1640.77,684.295 1641.33,684.295 1641.89,684.295 1642.45,684.295 1643.01,684.295 1643.57,684.295 1644.13,684.295 1644.69,684.295 1645.25,684.295 1645.81,684.295 1646.37,684.295 1646.93,684.295 1647.48,684.295 1648.04,684.295 1648.6,684.295 1649.16,684.295 1649.72,684.295 1650.28,684.295 1650.84,684.295 1651.4,684.295 1651.96,684.295 1652.52,684.295 1653.08,684.295 1653.64,684.295 1654.2,684.295 1654.76,684.295 1655.31,684.295 1655.87,684.295 1656.43,684.295 1656.99,684.295 1657.55,684.295 1658.11,684.295 1658.67,684.295 1659.23,684.295 1659.79,684.295 1660.35,684.295 1660.91,684.295 1661.47,684.295 1662.03,684.295 1662.58,684.295 1663.14,684.295 1663.7,684.295 1664.26,684.295 1664.82,684.295 1665.38,684.295 1665.94,684.295 1666.5,684.295 1667.06,684.295 1667.62,684.295 1668.18,684.295 1668.74,684.295 1669.3,684.295 1669.85,684.295 1670.41,684.295 1670.97,684.295 1671.53,684.295 1672.09,684.295 1672.65,684.295 1673.21,684.295 1673.77,684.295 1674.33,684.295 1674.89,684.295 1675.45,684.295 1676.01,684.295 1676.57,684.295 1677.13,684.295 1677.68,684.295 1678.24,684.295 1678.8,684.295 1679.36,684.295 1679.92,684.295 1680.48,684.295 1681.04,684.295 1681.6,684.295 1682.16,684.295 1682.72,684.295 1683.28,684.295 1683.84,684.295 1684.4,684.295 1684.95,684.295 1685.51,684.295 1686.07,684.295 1686.63,684.295 1687.19,684.295 1687.75,684.295 1688.31,684.295 1688.87,684.295 1689.43,684.295 1689.99,684.295 1690.55,684.295 1691.11,684.295 1691.67,684.295 1692.23,684.295 1692.78,684.295 1693.34,684.295 1693.9,684.295 1694.46,684.295 1695.02,684.295 1695.58,684.295 1696.14,684.295 1696.7,684.295 1697.26,684.295 1697.82,684.295 1698.38,684.295 1698.94,684.295 1699.5,684.295 1700.05,684.295 1700.61,684.295 1701.17,684.295 1701.73,684.295 1702.29,684.295 1702.85,684.295 1703.41,684.295 1703.97,684.295 1704.53,684.295 1705.09,684.295 1705.65,684.295 1706.21,684.295 1706.77,684.295 1707.32,684.295 1707.88,684.295 1708.44,684.295 1709,684.295 1709.56,684.295 1710.12,684.295 1710.68,684.295 1711.24,684.295 1711.8,684.295 1712.36,684.295 1712.92,684.295 1713.48,684.295 1714.04,684.295 1714.6,684.295 1715.15,684.295 1715.71,684.295 1716.27,684.295 1716.83,684.295 1717.39,684.295 1717.95,684.295 1718.51,684.295 1719.07,684.295 1719.63,684.295 1720.19,684.295 1720.75,684.295 1721.31,684.295 1721.87,684.295 1722.42,684.295 1722.98,684.295 1723.54,684.295 1724.1,684.295 1724.66,684.295 1725.22,684.295 1725.78,684.295 1726.34,684.295 1726.9,684.295 1727.46,684.295 1728.02,684.295 1728.58,684.295 1729.14,684.295 1729.69,684.295 1730.25,684.295 1730.81,684.295 1731.37,684.295 1731.93,684.295 1732.49,684.295 1733.05,684.295 1733.61,684.295 1734.17,684.295 1734.73,684.295 1735.29,684.295 1735.85,684.295 1736.41,684.295 1736.97,684.295 1737.52,684.295 1738.08,684.295 1738.64,684.295 1739.2,684.295 1739.76,684.295 1740.32,684.295 1740.88,684.295 1741.44,684.295 1742,684.295 1742.56,684.295 1743.12,684.295 1743.68,684.295 1744.24,684.295 1744.79,684.295 1745.35,684.295 1745.91,684.295 1746.47,684.295 1747.03,684.295 1747.59,684.295 1748.15,684.295 1748.71,684.295 1749.27,684.295 1749.83,684.295 1750.39,684.295 1750.95,684.295 1751.51,684.295 1752.06,684.295 1752.62,684.295 1753.18,684.295 1753.74,684.295 1754.3,684.295 1754.86,684.295 1755.42,684.295 1755.98,684.295 1756.54,684.295 1757.1,684.295 1757.66,684.295 1758.22,684.295 1758.78,684.295 1759.34,684.295 1759.89,684.295 1760.45,684.295 1761.01,684.295 1761.57,684.295 1762.13,684.295 1762.69,684.295 1763.25,684.295 1763.81,684.295 1764.37,684.295 1764.93,684.295 1765.49,684.295 1766.05,684.295 1766.61,684.295 1767.16,684.295 1767.72,684.295 1768.28,684.295 1768.84,684.295 1769.4,684.295 1769.96,684.295 1770.52,684.295 1771.08,684.295 1771.64,684.295 1772.2,684.295 1772.76,684.295 1773.32,684.295 1773.88,684.295 1774.43,684.295 1774.99,684.295 1775.55,684.295 1776.11,684.295 1776.67,684.295 1777.23,684.295 1777.79,684.295 1778.35,684.295 1778.91,684.295 1779.47,684.295 1780.03,684.295 1780.59,684.295 1781.15,684.295 1781.71,684.295 1782.26,684.295 1782.82,684.295 1783.38,684.295 1783.94,684.295 1784.5,684.295 1785.06,684.295 1785.62,684.295 1786.18,684.295 1786.74,684.295 1787.3,684.295 1787.86,684.295 1788.42,684.295 1788.98,684.295 1789.53,684.295 1790.09,684.295 1790.65,684.295 1791.21,684.295 1791.77,684.295 1792.33,684.295 1792.89,684.295 1793.45,684.295 1794.01,684.295 1794.57,684.295 1795.13,684.295 1795.69,684.295 1796.25,684.295 1796.8,684.295 1797.36,684.295 1797.92,684.295 1798.48,684.295 1799.04,684.295 1799.6,684.295 1800.16,684.295 1800.72,684.295 1801.28,684.295 1801.84,684.295 1802.4,684.295 1802.96,684.295 1803.52,684.295 1804.08,684.295 1804.63,684.295 1805.19,684.295 1805.75,684.295 1806.31,684.295 1806.87,684.295 1807.43,684.295 1807.99,684.295 1808.55,684.295 1809.11,684.295 1809.67,684.295 1810.23,684.295 1810.79,684.295 1811.35,684.295 1811.9,684.295 1812.46,684.295 1813.02,684.295 1813.58,684.295 1814.14,684.295 1814.7,684.295 1815.26,684.295 1815.82,684.295 1816.38,684.295 1816.94,684.295 1817.5,684.295 1818.06,684.295 1818.62,684.295 1819.18,684.295 1819.73,684.295 1820.29,684.295 1820.85,684.295 1821.41,684.295 1821.97,684.295 1822.53,684.295 1823.09,684.295 1823.65,684.295 1824.21,684.295 1824.77,684.295 1825.33,684.295 1825.89,684.295 1826.45,684.295 1827,684.295 1827.56,684.295 1828.12,684.295 1828.68,684.295 1829.24,684.295 1829.8,684.295 1830.36,684.295 1830.92,684.295 1831.48,684.295 1832.04,684.295 1832.6,684.295 1833.16,684.295 1833.72,684.295 1834.27,684.295 1834.83,684.295 1835.39,684.295 1835.95,684.295 1836.51,684.295 1837.07,684.295 1837.63,684.295 1838.19,684.295 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.031263473245437 ± 0.023808424261436735\nProjected Energy: -4.018662201962396 ± (0.008134813936076846, 0.007816055549670686)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.465158</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.4297e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.2363e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">1.0109e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.303e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.655e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.236e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0, boundary_condition=:periodic)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\nboundary_condition : the boundary condition to apply. Can be one of :periodic, :twisted, or :hard_wall\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen, [Val(boundary_condition)])\n\nCompute the new address of a hopping event for the Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes multiplied by a term consistent with boundary condition.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions can be periodic, pi-twisted and hard-wall.\n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(:twisted))\n(BoseFS{2,3}(2, 0, 0), -1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(:hard_wall))\n(BoseFS{2,3}(2, 0, 0), 0.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
