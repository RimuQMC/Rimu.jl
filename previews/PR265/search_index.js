var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip030\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip030)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip031\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip030)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip032\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip030)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.83 2211.02,1260.83 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.32 2211.02,1003.32 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.802 2211.02,745.802 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.289 2211.02,488.289 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,230.776 2211.02,230.776 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.83 423.181,1260.83 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.32 423.181,1003.32 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.802 423.181,745.802 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.289 423.181,488.289 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,230.776 423.181,230.776 \"/>\n<path clip-path=\"url(#clip030)\" d=\"M356.339 1246.63 Q352.728 1246.63 350.899 1250.19 Q349.094 1253.73 349.094 1260.86 Q349.094 1267.97 350.899 1271.54 Q352.728 1275.08 356.339 1275.08 Q359.973 1275.08 361.779 1271.54 Q363.608 1267.97 363.608 1260.86 Q363.608 1253.73 361.779 1250.19 Q359.973 1246.63 356.339 1246.63 M356.339 1242.92 Q362.149 1242.92 365.205 1247.53 Q368.284 1252.11 368.284 1260.86 Q368.284 1269.59 365.205 1274.2 Q362.149 1278.78 356.339 1278.78 Q350.529 1278.78 347.45 1274.2 Q344.395 1269.59 344.395 1260.86 Q344.395 1252.11 347.45 1247.53 Q350.529 1242.92 356.339 1242.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M290.043 1016.66 L306.363 1016.66 L306.363 1020.6 L284.418 1020.6 L284.418 1016.66 Q287.08 1013.91 291.664 1009.28 Q296.27 1004.62 297.451 1003.28 Q299.696 1000.76 300.576 999.022 Q301.478 997.263 301.478 995.573 Q301.478 992.818 299.534 991.082 Q297.613 989.346 294.511 989.346 Q292.312 989.346 289.858 990.11 Q287.427 990.874 284.65 992.425 L284.65 987.702 Q287.474 986.568 289.927 985.989 Q292.381 985.411 294.418 985.411 Q299.789 985.411 302.983 988.096 Q306.177 990.781 306.177 995.272 Q306.177 997.401 305.367 999.323 Q304.58 1001.22 302.474 1003.81 Q301.895 1004.48 298.793 1007.7 Q295.691 1010.9 290.043 1016.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M316.224 986.036 L334.58 986.036 L334.58 989.971 L320.506 989.971 L320.506 998.443 Q321.524 998.096 322.543 997.934 Q323.562 997.749 324.58 997.749 Q330.367 997.749 333.747 1000.92 Q337.126 1004.09 337.126 1009.51 Q337.126 1015.09 333.654 1018.19 Q330.182 1021.27 323.862 1021.27 Q321.687 1021.27 319.418 1020.9 Q317.173 1020.53 314.765 1019.79 L314.765 1015.09 Q316.849 1016.22 319.071 1016.78 Q321.293 1017.33 323.77 1017.33 Q327.774 1017.33 330.112 1015.23 Q332.45 1013.12 332.45 1009.51 Q332.45 1005.9 330.112 1003.79 Q327.774 1001.68 323.77 1001.68 Q321.895 1001.68 320.02 1002.1 Q318.168 1002.52 316.224 1003.4 L316.224 986.036 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M356.339 989.114 Q352.728 989.114 350.899 992.679 Q349.094 996.221 349.094 1003.35 Q349.094 1010.46 350.899 1014.02 Q352.728 1017.56 356.339 1017.56 Q359.973 1017.56 361.779 1014.02 Q363.608 1010.46 363.608 1003.35 Q363.608 996.221 361.779 992.679 Q359.973 989.114 356.339 989.114 M356.339 985.411 Q362.149 985.411 365.205 990.017 Q368.284 994.6 368.284 1003.35 Q368.284 1012.08 365.205 1016.68 Q362.149 1021.27 356.339 1021.27 Q350.529 1021.27 347.45 1016.68 Q344.395 1012.08 344.395 1003.35 Q344.395 994.6 347.45 990.017 Q350.529 985.411 356.339 985.411 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M286.062 728.522 L304.418 728.522 L304.418 732.458 L290.344 732.458 L290.344 740.93 Q291.363 740.582 292.381 740.42 Q293.4 740.235 294.418 740.235 Q300.205 740.235 303.585 743.407 Q306.964 746.578 306.964 751.994 Q306.964 757.573 303.492 760.675 Q300.02 763.754 293.701 763.754 Q291.525 763.754 289.256 763.383 Q287.011 763.013 284.603 762.272 L284.603 757.573 Q286.687 758.707 288.909 759.263 Q291.131 759.818 293.608 759.818 Q297.613 759.818 299.951 757.712 Q302.288 755.606 302.288 751.994 Q302.288 748.383 299.951 746.277 Q297.613 744.17 293.608 744.17 Q291.733 744.17 289.858 744.587 Q288.006 745.004 286.062 745.883 L286.062 728.522 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M326.177 731.601 Q322.566 731.601 320.737 735.166 Q318.932 738.707 318.932 745.837 Q318.932 752.944 320.737 756.508 Q322.566 760.05 326.177 760.05 Q329.811 760.05 331.617 756.508 Q333.446 752.944 333.446 745.837 Q333.446 738.707 331.617 735.166 Q329.811 731.601 326.177 731.601 M326.177 727.897 Q331.987 727.897 335.043 732.504 Q338.122 737.087 338.122 745.837 Q338.122 754.564 335.043 759.17 Q331.987 763.754 326.177 763.754 Q320.367 763.754 317.288 759.17 Q314.233 754.564 314.233 745.837 Q314.233 737.087 317.288 732.504 Q320.367 727.897 326.177 727.897 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M356.339 731.601 Q352.728 731.601 350.899 735.166 Q349.094 738.707 349.094 745.837 Q349.094 752.944 350.899 756.508 Q352.728 760.05 356.339 760.05 Q359.973 760.05 361.779 756.508 Q363.608 752.944 363.608 745.837 Q363.608 738.707 361.779 735.166 Q359.973 731.601 356.339 731.601 M356.339 727.897 Q362.149 727.897 365.205 732.504 Q368.284 737.087 368.284 745.837 Q368.284 754.564 365.205 759.17 Q362.149 763.754 356.339 763.754 Q350.529 763.754 347.45 759.17 Q344.395 754.564 344.395 745.837 Q344.395 737.087 347.45 732.504 Q350.529 727.897 356.339 727.897 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M284.835 471.009 L307.057 471.009 L307.057 473 L294.511 505.569 L289.627 505.569 L301.432 474.944 L284.835 474.944 L284.835 471.009 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M316.224 471.009 L334.58 471.009 L334.58 474.944 L320.506 474.944 L320.506 483.416 Q321.524 483.069 322.543 482.907 Q323.562 482.722 324.58 482.722 Q330.367 482.722 333.747 485.893 Q337.126 489.064 337.126 494.481 Q337.126 500.06 333.654 503.162 Q330.182 506.24 323.862 506.24 Q321.687 506.24 319.418 505.87 Q317.173 505.5 314.765 504.759 L314.765 500.06 Q316.849 501.194 319.071 501.75 Q321.293 502.305 323.77 502.305 Q327.774 502.305 330.112 500.199 Q332.45 498.092 332.45 494.481 Q332.45 490.87 330.112 488.763 Q327.774 486.657 323.77 486.657 Q321.895 486.657 320.02 487.074 Q318.168 487.49 316.224 488.37 L316.224 471.009 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M356.339 474.088 Q352.728 474.088 350.899 477.652 Q349.094 481.194 349.094 488.324 Q349.094 495.43 350.899 498.995 Q352.728 502.537 356.339 502.537 Q359.973 502.537 361.779 498.995 Q363.608 495.43 363.608 488.324 Q363.608 481.194 361.779 477.652 Q359.973 474.088 356.339 474.088 M356.339 470.384 Q362.149 470.384 365.205 474.99 Q368.284 479.574 368.284 488.324 Q368.284 497.05 365.205 501.657 Q362.149 506.24 356.339 506.24 Q350.529 506.24 347.45 501.657 Q344.395 497.05 344.395 488.324 Q344.395 479.574 347.45 474.99 Q350.529 470.384 356.339 470.384 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M256.664 244.12 L264.303 244.12 L264.303 217.755 L255.992 219.421 L255.992 215.162 L264.256 213.496 L268.932 213.496 L268.932 244.12 L276.571 244.12 L276.571 248.056 L256.664 248.056 L256.664 244.12 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M296.015 216.574 Q292.404 216.574 290.576 220.139 Q288.77 223.681 288.77 230.81 Q288.77 237.917 290.576 241.482 Q292.404 245.023 296.015 245.023 Q299.65 245.023 301.455 241.482 Q303.284 237.917 303.284 230.81 Q303.284 223.681 301.455 220.139 Q299.65 216.574 296.015 216.574 M296.015 212.871 Q301.826 212.871 304.881 217.477 Q307.96 222.06 307.96 230.81 Q307.96 239.537 304.881 244.144 Q301.826 248.727 296.015 248.727 Q290.205 248.727 287.127 244.144 Q284.071 239.537 284.071 230.81 Q284.071 222.06 287.127 217.477 Q290.205 212.871 296.015 212.871 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M326.177 216.574 Q322.566 216.574 320.737 220.139 Q318.932 223.681 318.932 230.81 Q318.932 237.917 320.737 241.482 Q322.566 245.023 326.177 245.023 Q329.811 245.023 331.617 241.482 Q333.446 237.917 333.446 230.81 Q333.446 223.681 331.617 220.139 Q329.811 216.574 326.177 216.574 M326.177 212.871 Q331.987 212.871 335.043 217.477 Q338.122 222.06 338.122 230.81 Q338.122 239.537 335.043 244.144 Q331.987 248.727 326.177 248.727 Q320.367 248.727 317.288 244.144 Q314.233 239.537 314.233 230.81 Q314.233 222.06 317.288 217.477 Q320.367 212.871 326.177 212.871 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M356.339 216.574 Q352.728 216.574 350.899 220.139 Q349.094 223.681 349.094 230.81 Q349.094 237.917 350.899 241.482 Q352.728 245.023 356.339 245.023 Q359.973 245.023 361.779 241.482 Q363.608 237.917 363.608 230.81 Q363.608 223.681 361.779 220.139 Q359.973 216.574 356.339 216.574 M356.339 212.871 Q362.149 212.871 365.205 217.477 Q368.284 222.06 368.284 230.81 Q368.284 239.537 365.205 244.144 Q362.149 248.727 356.339 248.727 Q350.529 248.727 347.45 244.144 Q344.395 239.537 344.395 230.81 Q344.395 222.06 347.45 217.477 Q350.529 212.871 356.339 212.871 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip032)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,230.776 4017.76,230.776 \"/>\n<polyline clip-path=\"url(#clip032)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1248.03 459.396,1247.57 459.964,1247.04 460.533,1246.46 461.101,1245.8 461.669,1245.07 462.238,1244.25 462.806,1243.35 463.375,1242.36 463.943,1241.28 464.511,1240.1 465.08,1238.81 465.648,1237.42 466.216,1235.9 466.785,1232.21 467.353,1229.41 467.921,1227.52 468.49,1225.51 469.058,1221.27 469.626,1218.91 470.195,1215.37 470.763,1210.63 471.331,1206.78 471.9,1202.71 472.468,1199.53 473.036,1196.12 473.605,1192.5 474.173,1188.68 474.741,1183.64 475.31,1178.37 475.878,1173.92 476.446,1169.26 477.015,1164.35 477.583,1159.3 478.152,1154.02 478.72,1146.48 479.288,1140.73 479.857,1134.81 480.425,1126.51 480.993,1119.21 481.562,1111.65 482.13,1101.87 482.698,1091.88 483.267,1084.86 483.835,1077.65 484.403,1070.29 484.972,1062.62 485.54,1053.91 486.108,1044.94 486.677,1036.78 487.245,1028.55 487.813,1018.09 488.382,1009.61 488.95,999.884 489.518,990.115 490.087,977.178 490.655,968.31 491.224,958.45 491.792,949.428 492.36,939.302 492.929,927.079 493.497,917.847 494.065,905.503 494.634,895.242 495.202,882.964 495.77,869.717 496.339,858.584 496.907,845.482 497.475,834.533 498.044,823.696 498.612,813.872 499.18,799.939 499.749,790.332 500.317,779.566 500.885,770.982 501.454,762.357 502.022,752.832 502.59,744.332 503.159,735.654 503.727,723.953 504.295,713.321 504.864,702.843 505.432,692.61 506.001,684.602 506.569,674.391 507.137,664.537 507.706,653.54 508.274,643.811 508.842,634.256 509.411,625.915 509.979,617.818 510.547,610.769 511.116,601.76 511.684,594.752 512.252,586.707 512.821,579.971 513.389,571.235 513.957,562.535 514.526,555.122 515.094,548.875 515.662,541.392 516.231,534.042 516.799,528.952 517.367,521.724 517.936,514.907 518.504,507.106 519.072,499.676 519.641,494.187 520.209,489.896 520.778,483.313 521.346,475.894 521.914,469.592 522.483,463.816 523.051,458.886 523.619,451.973 524.188,445.371 524.756,440.145 525.324,435.938 525.893,431.607 526.461,428.497 527.029,422.43 527.598,417.133 528.166,414.315 528.734,410.445 529.303,406.721 529.871,403.044 530.439,400.476 531.008,396.905 531.576,391.171 532.144,385.521 532.713,379.36 533.281,373.452 533.85,367.676 534.418,364.174 534.986,362.736 535.555,358.264 536.123,356.165 536.691,353.599 537.26,350.394 537.828,345.095 538.396,341.977 538.965,340.113 539.533,336.305 540.101,334.547 540.67,331.722 541.238,329.99 541.806,327.346 542.375,325.554 542.943,322.027 543.511,320.616 544.08,318.94 544.648,317.323 545.216,316.052 545.785,314.604 546.353,312.096 546.921,309.903 547.49,306.662 548.058,304.524 548.627,300.356 549.195,297.697 549.763,294.651 550.332,294.97 550.9,292.323 551.468,288.585 552.037,288.329 552.605,289.124 553.173,287.542 553.742,288.29 554.31,287.732 554.878,284.16 555.447,282.731 556.015,283.367 556.583,282.947 557.152,284.258 557.72,283.543 558.288,281.913 558.857,280.165 559.425,279.743 559.993,278.017 560.562,277.34 561.13,277.875 561.698,276.163 562.267,275.484 562.835,274.18 563.404,273.696 563.972,273.124 564.54,269.344 565.109,266.911 565.677,267.856 566.245,265.521 566.814,265.393 567.382,265.296 567.95,265.296 568.519,265.094 569.087,264.965 569.655,262.692 570.224,262.756 570.792,261.647 571.36,260.683 571.929,260.6 572.497,259.613 573.065,259.517 573.634,259.333 574.202,259.165 574.77,257.069 575.339,256.055 575.907,256.046 576.476,253.146 577.044,254.278 577.612,254.522 578.181,255.711 578.749,254.731 579.317,251.54 579.886,250.68 580.454,252.929 581.022,252.163 581.591,252.327 582.159,251.315 582.727,250.527 583.296,250.845 583.864,247.026 584.432,247.433 585.001,249.693 585.569,249.946 586.137,249.846 586.706,248.886 587.274,249.02 587.842,249.201 588.411,248.369 588.979,247.526 589.547,247.743 590.116,250.817 590.684,250.687 591.253,251.816 591.821,249.722 592.389,249.591 592.958,246.615 593.526,244.878 594.094,245.132 594.663,245.526 595.231,246.815 595.799,245.809 596.368,243.922 596.936,240.168 597.504,240.715 598.073,243.453 598.641,242.671 599.209,242.016 599.778,242.273 600.346,244.679 600.914,244.193 601.483,243.283 602.051,243.675 602.619,244.06 603.188,245.232 603.756,245.305 604.325,243.165 604.893,244.284 605.461,243.154 606.03,241.514 606.598,241.796 607.166,243.152 607.735,243.558 608.303,245.678 608.871,245.744 609.44,243.724 610.008,243.734 610.576,245.763 611.145,246.756 611.713,246.69 612.281,242.517 612.85,242.747 613.418,242.795 613.986,244.078 614.555,245.285 615.123,247.105 615.691,247.654 616.26,248.414 616.828,248.163 617.396,246.672 617.965,244.208 618.533,244.327 619.102,244.077 619.67,241.839 620.238,240.614 620.807,239.706 621.375,239.789 621.943,241.812 622.512,240.893 623.08,241.03 623.648,240.092 624.217,241.237 624.785,240.28 625.353,239.214 625.922,238.124 626.49,240.452 627.058,238.144 627.627,236.433 628.195,236.902 628.763,236.171 629.332,234.563 629.9,235.123 630.468,235.306 631.037,235.552 631.605,235.824 632.173,236.115 632.742,236.363 633.31,236.705 633.879,236.129 634.447,237.309 635.015,238.796 635.584,239.708 636.152,236.655 636.72,234.93 637.289,235.139 637.857,234.57 638.425,235.706 638.994,238.044 639.562,238.511 640.13,238.671 640.699,238.859 641.267,238.874 641.835,241.104 642.404,239.737 642.972,238.815 643.54,238.864 644.109,237.605 644.677,235.596 645.245,235.895 645.814,236.316 646.382,237.578 646.951,236.468 647.519,234.655 648.087,232.926 648.656,233.308 649.224,234.607 649.792,232.862 650.361,233.138 650.929,231.819 651.497,232.222 652.066,231.651 652.634,232.06 653.202,232.687 653.771,231.887 654.339,232.489 654.907,234.163 655.476,232.543 656.044,234.008 656.612,233.428 657.181,234.594 657.749,236.938 658.317,236.86 658.886,235.031 659.454,235.216 660.022,231.454 660.591,231.684 661.159,233.093 661.728,235.551 662.296,234.669 662.864,237.028 663.433,237.06 664.001,236.086 664.569,235.196 665.138,235.43 665.706,234.642 666.274,232.909 666.843,233.405 667.411,233.935 667.979,231.201 668.548,231.815 669.116,234.196 669.684,235.492 670.253,236.639 670.821,235.678 671.389,233.892 671.958,235.256 672.526,232.343 673.094,232.586 673.663,235.182 674.231,238.579 674.799,237.099 675.368,237.38 675.936,239.276 676.505,237.136 677.073,236.059 677.641,237.248 678.21,237.309 678.778,237.295 679.346,237.165 679.915,238.217 680.483,237.037 681.051,237.988 681.62,237.972 682.188,238.727 682.756,238.547 683.325,238.302 683.893,240.379 684.461,241.019 685.03,241.622 685.598,242.199 686.166,241.791 686.735,241.394 687.303,240.897 687.871,241.754 688.44,241.373 689.008,238.928 689.577,238.658 690.145,238.412 690.713,239.319 691.282,239.188 691.85,238.976 692.418,239.686 692.987,239.413 693.555,239.882 694.123,238.298 694.692,239.301 695.26,238.925 695.828,239.74 696.397,238.241 696.965,237.726 697.533,238.536 698.102,238.174 698.67,234.888 699.238,233.835 699.807,233.813 700.375,232.65 700.943,231.822 701.512,232.906 702.08,232.9 702.648,232.858 703.217,232.828 703.785,231.094 704.354,227.12 704.922,225.512 705.49,227.121 706.059,228.734 706.627,229.167 707.195,229.392 707.764,229.519 708.332,230.905 708.9,231.084 709.469,230.289 710.037,228.464 710.605,228.814 711.174,231.304 711.742,230.333 712.31,229.419 712.879,228.779 713.447,228.149 714.015,228.546 714.584,227.979 715.152,226.472 715.72,226.717 716.289,229.43 716.857,227.767 717.425,228.301 717.994,229.624 718.562,231.068 719.131,232.411 719.699,233.574 720.267,231.662 720.836,232.012 721.404,232.215 721.972,231.533 722.541,231.881 723.109,231.162 723.677,232.587 724.246,233.699 724.814,233.843 725.382,233.024 725.951,235.32 726.519,236.412 727.087,236.492 727.656,236.374 728.224,236.384 728.792,235.233 729.361,236.155 729.929,234.973 730.497,236.002 731.066,234.702 731.634,233.82 732.203,233.987 732.771,233.033 733.339,231.976 733.908,234.203 734.476,233.153 735.044,232.305 735.613,233.351 736.181,233.47 736.749,234.418 737.318,232.4 737.886,232.296 738.454,232.41 739.023,232.741 739.591,231.567 740.159,229.656 740.728,233.938 741.296,233.054 741.864,233.233 742.433,234.349 743.001,234.02 743.569,233.18 744.138,232.241 744.706,229.213 745.274,230.448 745.843,231.512 746.411,231.508 746.98,229.669 747.548,230.929 748.116,229.017 748.685,230.341 749.253,232.394 749.821,230.377 750.39,229.451 750.958,234.875 751.526,234.656 752.095,233.806 752.663,233.636 753.231,237.912 753.8,238.699 754.368,238.471 754.936,234.875 755.505,234.955 756.073,235.818 756.641,234.514 757.21,233.606 757.778,233.545 758.346,233.53 758.915,235.449 759.483,236.069 760.052,235.826 760.62,234.646 761.188,234.443 761.757,234.479 762.325,230.16 762.893,233.604 763.462,233.726 764.03,233.413 764.598,233.428 765.167,231.209 765.735,231.23 766.303,231.311 766.872,230.503 767.44,230.777 768.008,230.933 768.577,231.957 769.145,229.74 769.713,231.035 770.282,231.229 770.85,231.239 771.418,231.546 771.987,230.536 772.555,236.003 773.123,236.94 773.692,236.766 774.26,235.603 774.829,235.405 775.397,237.376 775.965,239.139 776.534,240.419 777.102,239.729 777.67,237.196 778.239,239.057 778.807,238.579 779.375,239.045 779.944,238.688 780.512,237.012 781.08,235.506 781.649,233.978 782.217,235.82 782.785,235.27 783.354,235.766 783.922,235.324 784.49,233.658 785.059,234.424 785.627,233.081 786.195,233.041 786.764,232.714 787.332,233.699 787.9,233.476 788.469,233.209 789.037,233.142 789.606,232.843 790.174,230.796 790.742,229.652 791.311,228.787 791.879,226.918 792.447,228.168 793.016,229.385 793.584,230.491 794.152,229.431 794.721,229.502 795.289,230.727 795.857,229.545 796.426,229.306 796.994,228.458 797.562,229.55 798.131,230.709 798.699,228.712 799.267,231.099 799.836,230.027 800.404,232.267 800.972,231.196 801.541,231.041 802.109,230.016 802.678,229.886 803.246,227.779 803.814,229.258 804.383,230.161 804.951,230.33 805.519,233.505 806.088,232.34 806.656,233.335 807.224,232.097 807.793,230.972 808.361,230.997 808.929,229.794 809.498,225.73 810.066,226.971 810.634,225.361 811.203,222.705 811.771,221.153 812.339,223.038 812.908,223.508 813.476,224.18 814.044,222.656 814.613,223.43 815.181,224.031 815.749,224.587 816.318,224.154 816.886,223.636 817.455,224.091 818.023,225 818.591,225.54 819.16,226.235 819.728,226.378 820.296,225.704 820.865,226.131 821.433,227.607 822.001,225.907 822.57,227.466 823.138,227.959 823.706,229.325 824.275,230.501 824.843,230.672 825.411,230.889 825.98,233.188 826.548,233.251 827.116,232.244 827.685,234.328 828.253,233.026 828.821,233.153 829.39,231.029 829.958,228.034 830.526,227.412 831.095,227.822 831.663,226.975 832.232,228.567 832.8,231.031 833.368,230.043 833.937,232.447 834.505,232.78 835.073,231.928 835.642,231.239 836.21,230.315 836.778,231.618 837.347,231.937 837.915,231.983 838.483,231.243 839.052,230.439 839.62,232.761 840.188,232.884 840.757,234.222 841.325,234.221 841.893,234.21 842.462,235.535 843.03,237.516 843.598,234.17 844.167,234.166 844.735,234.018 845.304,233.819 845.872,233.988 846.44,233.832 847.009,235.849 847.577,235.913 848.145,238.875 848.714,238.585 849.282,238.177 849.85,236.626 850.419,237.292 850.987,236.902 851.555,236.788 852.124,235.592 852.692,234.125 853.26,232.044 853.829,234.293 854.397,234.353 854.965,235.178 855.534,235.977 856.102,234.593 856.67,235.548 857.239,233.256 857.807,232.152 858.375,231.24 858.944,232.265 859.512,234.395 860.081,234.145 860.649,231.819 861.217,232.928 861.786,229.737 862.354,230.962 862.922,232.003 863.491,232.056 864.059,231.846 864.627,232.833 865.196,233.691 865.764,233.64 866.332,235.702 866.901,235.346 867.469,235.103 868.037,237.982 868.606,237.603 869.174,236.052 869.742,234.601 870.311,234.35 870.879,234.402 871.447,231.236 872.016,234.306 872.584,232.879 873.152,232.825 873.721,232.765 874.289,230.558 874.858,230.576 875.426,230.471 875.994,230.468 876.563,228.5 877.131,227.614 877.699,227.844 878.268,231.036 878.836,232.156 879.404,232.008 879.973,233.809 880.541,234.766 881.109,233.201 881.678,233.023 882.246,233.757 882.814,233.283 883.383,231.151 883.951,230.041 884.519,227.789 885.088,227.995 885.656,227.273 886.224,227.483 886.793,225.476 887.361,225.9 887.93,224.089 888.498,223.562 889.066,222.872 889.635,224.64 890.203,224.153 890.771,224.808 891.34,225.308 891.908,225.718 892.476,226.273 893.045,223.61 893.613,224.287 894.181,226.774 894.75,227.051 895.318,228.33 895.886,227.561 896.455,229.021 897.023,228.273 897.591,228.741 898.16,227.124 898.728,231.338 899.296,231.599 899.865,232.703 900.433,232.657 901.001,233.679 901.57,232.518 902.138,231.524 902.707,230.4 903.275,230.568 903.843,229.932 904.412,230.188 904.98,230.31 905.548,231.532 906.117,232.532 906.685,231.086 907.253,232.089 907.822,235.257 908.39,235.029 908.958,234.838 909.527,234.436 910.095,234.28 910.663,232.995 911.232,234.21 911.8,235.061 912.368,234.784 912.937,235.611 913.505,235.335 914.073,235.096 914.642,235.973 915.21,235.673 915.779,236.483 916.347,234.271 916.915,235.159 917.484,232.701 918.052,233.531 918.62,233.615 919.189,234.556 919.757,235.49 920.325,231.183 920.894,230.225 921.462,232.358 922.03,234.201 922.599,234.247 923.167,235.098 923.735,236.812 924.304,236.504 924.872,237.102 925.44,235.607 926.009,235.236 926.577,234.763 927.145,233.734 927.714,229.508 928.282,226.589 928.85,226.947 929.419,228.29 929.987,228.6 930.556,228.718 931.124,229.934 931.692,227.993 932.261,228.348 932.829,229.519 933.397,228.593 933.966,228.751 934.534,228.686 935.102,227.945 935.671,229.03 936.239,228.186 936.807,228.311 937.376,225.196 937.944,224.612 938.512,225.137 939.081,225.699 939.649,227.565 940.217,228.883 940.786,230.175 941.354,232.392 941.922,233.529 942.491,232.29 943.059,232.043 943.627,233.07 944.196,232.829 944.764,232.9 945.333,233.771 945.901,233.522 946.469,233.319 947.038,232.095 947.606,229.002 948.174,229.389 948.743,229.525 949.311,228.642 949.879,228.997 950.448,228.042 951.016,228.167 951.584,227.159 952.153,229.687 952.721,230.938 953.289,230.928 953.858,230.031 954.426,229.237 954.994,234.647 955.563,234.536 956.131,233.457 956.699,232.186 957.268,235.025 957.836,232.771 958.405,232.572 958.973,232.162 959.541,231.018 960.11,236.137 960.678,235.777 961.246,235.378 961.815,237.247 962.383,235.85 962.951,235.649 963.52,235.252 964.088,235.893 964.656,235.549 965.225,235.406 965.793,236.513 966.361,238.231 966.93,237.706 967.498,238.268 968.066,237.715 968.635,237.264 969.203,236.583 969.771,237.148 970.34,236.765 970.908,237.244 971.476,235.914 972.045,233.183 972.613,232.818 973.182,231.618 973.75,231.628 974.318,230.417 974.887,230.454 975.455,229.253 976.023,228.291 976.592,228.421 977.16,228.543 977.728,229.625 978.297,230.426 978.865,229.237 979.433,227.187 980.002,228.495 980.57,228.629 981.138,227.827 981.707,226.94 982.275,227.097 982.843,227.515 983.412,225.66 983.98,226.004 984.548,225.391 985.117,227.797 985.685,227.966 986.253,227.139 986.822,226.452 987.39,227.882 987.959,228.049 988.527,228.432 989.095,229.746 989.664,228.823 990.232,228.851 990.8,229.045 991.369,229.202 991.937,230.416 992.505,229.37 993.074,228.147 993.642,229.175 994.21,228.339 994.779,228.448 995.347,229.584 995.915,227.864 996.484,225.119 997.052,223.461 997.62,219.895 998.189,222.83 998.757,225.552 999.325,227.208 999.894,228.515 1000.46,230.83 1001.03,230.806 1001.6,231.846 1002.17,234.084 1002.74,229.872 1003.3,230.925 1003.87,231.199 1004.44,231.046 1005.01,230.117 1005.58,230.211 1006.15,231.312 1006.71,234.667 1007.28,235.555 1007.85,235.172 1008.42,233.093 1008.99,231.812 1009.56,231.007 1010.12,227.927 1010.69,229.479 1011.26,231.661 1011.83,231.855 1012.4,229.796 1012.97,230.94 1013.53,232.054 1014.1,235.061 1014.67,233.94 1015.24,231.731 1015.81,231.838 1016.38,231.962 1016.94,232.977 1017.51,235.916 1018.08,235.518 1018.65,237.153 1019.22,236.651 1019.79,237.235 1020.35,237.95 1020.92,238.53 1021.49,237.976 1022.06,237.629 1022.63,239.176 1023.2,237.666 1023.76,238.174 1024.33,238.813 1024.9,237.168 1025.47,235.641 1026.04,235.286 1026.61,237.038 1027.17,236.504 1027.74,231.887 1028.31,233.682 1028.88,234.428 1029.45,234.125 1030.02,234.91 1030.58,234.169 1031.15,234.808 1031.72,237.268 1032.29,236.636 1032.86,234.075 1033.43,233.805 1033.99,234.566 1034.56,234.237 1035.13,231.762 1035.7,229.538 1036.27,229.451 1036.84,226.48 1037.4,226.655 1037.97,226.594 1038.54,226.756 1039.11,226.784 1039.68,228.062 1040.25,223.207 1040.81,222.861 1041.38,225.379 1041.95,222.602 1042.52,222.139 1043.09,224.95 1043.66,226.23 1044.22,227.518 1044.79,229.766 1045.36,228.945 1045.93,229.051 1046.5,228.17 1047.07,227.337 1047.63,227.502 1048.2,228.625 1048.77,224.458 1049.34,225.773 1049.91,223.968 1050.48,225.386 1051.05,224.615 1051.61,226.078 1052.18,226.44 1052.75,228.847 1053.32,228.855 1053.89,226.918 1054.46,227.361 1055.02,225.726 1055.59,228.508 1056.16,227.755 1056.73,228.939 1057.3,230.257 1057.87,228.355 1058.43,229.654 1059,228.764 1059.57,228.82 1060.14,228.972 1060.71,229.314 1061.28,228.556 1061.84,228.886 1062.41,228.928 1062.98,231.438 1063.55,231.44 1064.12,231.388 1064.69,230.292 1065.25,230.265 1065.82,229.191 1066.39,231.302 1066.96,230.105 1067.53,230.272 1068.1,231.406 1068.66,232.533 1069.23,233.34 1069.8,232.084 1070.37,231.889 1070.94,233.015 1071.51,233.888 1072.07,235.776 1072.64,235.689 1073.21,236.226 1073.78,236.897 1074.35,234.51 1074.92,233.144 1075.48,229.749 1076.05,229.975 1076.62,230.267 1077.19,230.352 1077.76,231.201 1078.33,231.311 1078.89,232.445 1079.46,231.16 1080.03,231.305 1080.6,233.27 1081.17,232.004 1081.74,231.786 1082.3,232.711 1082.87,234.52 1083.44,234.297 1084.01,232.96 1084.58,232.624 1085.15,232.626 1085.71,232.539 1086.28,232.51 1086.85,234.372 1087.42,233.063 1087.99,232.109 1088.56,233 1089.12,232.756 1089.69,231.519 1090.26,233.535 1090.83,234.343 1091.4,228.925 1091.97,229.046 1092.53,230.235 1093.1,230.272 1093.67,231.39 1094.24,231.354 1094.81,232.342 1095.38,233.381 1095.94,234.331 1096.51,234.046 1097.08,233.888 1097.65,232.402 1098.22,233.144 1098.79,234.94 1099.35,234.622 1099.92,235.434 1100.49,233.295 1101.06,233.154 1101.63,229.91 1102.2,228.886 1102.76,228.94 1103.33,227.2 1103.9,228.49 1104.47,227.529 1105.04,228.854 1105.61,228.003 1106.17,228.298 1106.74,227.373 1107.31,228.69 1107.88,227.744 1108.45,227.883 1109.02,229.241 1109.58,229.164 1110.15,228.245 1110.72,228.995 1111.29,228.945 1111.86,226.824 1112.43,225.957 1112.99,224.284 1113.56,223.899 1114.13,224.464 1114.7,224.996 1115.27,225.391 1115.84,228.82 1116.4,228.892 1116.97,231.134 1117.54,232.343 1118.11,231.495 1118.68,231.564 1119.25,229.601 1119.81,230.762 1120.38,230.931 1120.95,229.896 1121.52,228.975 1122.09,230.072 1122.66,229.974 1123.23,230.975 1123.79,230.95 1124.36,229.849 1124.93,230.918 1125.5,229.817 1126.07,228.904 1126.64,228.99 1127.2,229.194 1127.77,228.385 1128.34,228.625 1128.91,226.679 1129.48,227.986 1130.05,228.308 1130.61,229.664 1131.18,229.661 1131.75,230.785 1132.32,229.796 1132.89,230.042 1133.46,228.076 1134.02,228.512 1134.59,231.919 1135.16,230.795 1135.73,231.875 1136.3,229.893 1136.87,229.151 1137.43,230.483 1138,230.543 1138.57,229.687 1139.14,230.048 1139.71,233.239 1140.28,231.234 1140.84,231.337 1141.41,230.288 1141.98,229.52 1142.55,229.731 1143.12,229.057 1143.69,229.323 1144.25,230.615 1144.82,231.783 1145.39,230.796 1145.96,230.807 1146.53,230.785 1147.1,229.94 1147.66,229.097 1148.23,231.581 1148.8,231.77 1149.37,231.613 1149.94,232.686 1150.51,231.721 1151.07,231.719 1151.64,231.601 1152.21,232.731 1152.78,232.775 1153.35,233.031 1153.92,230.573 1154.48,227.468 1155.05,227.865 1155.62,227.26 1156.19,228.648 1156.76,229.034 1157.33,230.428 1157.89,232.804 1158.46,230.742 1159.03,232.724 1159.6,230.662 1160.17,231.667 1160.74,231.624 1161.3,232.941 1161.87,235.057 1162.44,235.748 1163.01,238.308 1163.58,237.954 1164.15,237.569 1164.71,237.134 1165.28,235.672 1165.85,235.143 1166.42,234.909 1166.99,234.888 1167.56,237.605 1168.12,236.926 1168.69,237.659 1169.26,238.168 1169.83,237.482 1170.4,237.892 1170.97,236.307 1171.53,236.063 1172.1,236.631 1172.67,238.054 1173.24,237.525 1173.81,238.088 1174.38,237.362 1174.94,238.019 1175.51,236.562 1176.08,238.011 1176.65,237.321 1177.22,234.597 1177.79,234.269 1178.35,234.673 1178.92,234.162 1179.49,232.859 1180.06,231.527 1180.63,230.606 1181.2,230.474 1181.76,229.597 1182.33,229.741 1182.9,230.495 1183.47,231.35 1184.04,229.194 1184.61,230.232 1185.17,228.081 1185.74,228.322 1186.31,228.413 1186.88,231.533 1187.45,231.179 1188.02,230.191 1188.58,231.016 1189.15,232.756 1189.72,232.484 1190.29,231.205 1190.86,231.048 1191.43,228.873 1192,229.142 1192.56,230.001 1193.13,228.809 1193.7,228.883 1194.27,228.816 1194.84,226.804 1195.41,226.867 1195.97,225.951 1196.54,227.289 1197.11,228.289 1197.68,228.358 1198.25,227.327 1198.82,226.484 1199.38,227.937 1199.95,228.096 1200.52,227.004 1201.09,226.219 1201.66,227.429 1202.23,228.544 1202.79,230.706 1203.36,229.549 1203.93,230.758 1204.5,230.519 1205.07,230.621 1205.64,231.54 1206.2,231.31 1206.77,231.11 1207.34,235.27 1207.91,236.988 1208.48,236.73 1209.05,236.474 1209.61,238.819 1210.18,239.133 1210.75,238.496 1211.32,238.617 1211.89,238.089 1212.46,238.542 1213.02,236.712 1213.59,236.09 1214.16,234.422 1214.73,233.957 1215.3,231.397 1215.87,231.418 1216.43,231.465 1217,231.282 1217.57,232.241 1218.14,233.288 1218.71,232.982 1219.28,232.701 1219.84,232.265 1220.41,229.745 1220.98,229.785 1221.55,230.844 1222.12,231.731 1222.69,232.689 1223.25,229.318 1223.82,230.39 1224.39,230.203 1224.96,230.977 1225.53,227.73 1226.1,227.657 1226.66,228.679 1227.23,227.846 1227.8,226.707 1228.37,225.894 1228.94,223.968 1229.51,223.379 1230.07,221.526 1230.64,223.18 1231.21,224.626 1231.78,223.297 1232.35,220.623 1232.92,223.558 1233.48,224.269 1234.05,225.737 1234.62,225.103 1235.19,225.615 1235.76,226.034 1236.33,225.336 1236.89,226.477 1237.46,225.842 1238.03,225.285 1238.6,225.641 1239.17,224.925 1239.74,226.404 1240.3,226.709 1240.87,227.857 1241.44,226.008 1242.01,228.373 1242.58,227.432 1243.15,224.622 1243.71,226.149 1244.28,226.631 1244.85,227.18 1245.42,228.554 1245.99,228.627 1246.56,229.897 1247.12,230.928 1247.69,232.103 1248.26,233.155 1248.83,233.109 1249.4,231.807 1249.97,229.631 1250.53,228.677 1251.1,228.929 1251.67,227.024 1252.24,225.233 1252.81,225.798 1253.38,226.459 1253.94,224.094 1254.51,223.613 1255.08,223.281 1255.65,225.101 1256.22,225.758 1256.79,226.246 1257.35,229.795 1257.92,231.095 1258.49,229.215 1259.06,228.342 1259.63,228.779 1260.2,228.089 1260.76,227.699 1261.33,226.989 1261.9,228.324 1262.47,228.75 1263.04,227.834 1263.61,227.292 1264.18,226.594 1264.74,225.105 1265.31,225.555 1265.88,225.884 1266.45,226.467 1267.02,226.985 1267.59,225.478 1268.15,225.398 1268.72,226.118 1269.29,228.646 1269.86,230.994 1270.43,230.267 1271,230.727 1271.56,227.966 1272.13,228.148 1272.7,230.536 1273.27,232.793 1273.84,232.942 1274.41,232.132 1274.97,236.634 1275.54,236.266 1276.11,237.147 1276.68,234.777 1277.25,235.616 1277.82,235.391 1278.38,234.368 1278.95,234.237 1279.52,233.048 1280.09,234.257 1280.66,233.344 1281.23,232.104 1281.79,234.322 1282.36,234.307 1282.93,234.038 1283.5,233.064 1284.07,233.017 1284.64,234.133 1285.2,234.238 1285.77,235.275 1286.34,235.959 1286.91,235.525 1287.48,235.385 1288.05,235.11 1288.61,236.173 1289.18,236.746 1289.75,238.267 1290.32,236.812 1290.89,236.628 1291.46,236.277 1292.02,238.099 1292.59,237.874 1293.16,238.499 1293.73,237.71 1294.3,235.098 1294.87,234.833 1295.43,230.505 1296,232.842 1296.57,234.621 1297.14,233.343 1297.71,231.302 1298.28,229.266 1298.84,227.347 1299.41,227.51 1299.98,228.941 1300.55,231.148 1301.12,233.372 1301.69,233.439 1302.25,233.422 1302.82,234.388 1303.39,234.256 1303.96,233.957 1304.53,233.789 1305.1,232.66 1305.66,232.786 1306.23,232.378 1306.8,233.31 1307.37,233.251 1307.94,233.988 1308.51,233.729 1309.07,233.555 1309.64,232.444 1310.21,233.218 1310.78,233.123 1311.35,236.03 1311.92,237.627 1312.48,237.277 1313.05,237.804 1313.62,236.108 1314.19,236.829 1314.76,236.209 1315.33,235.8 1315.89,235.214 1316.46,234.753 1317.03,235.289 1317.6,236.145 1318.17,236.637 1318.74,236.173 1319.3,235.787 1319.87,235.568 1320.44,235.303 1321.01,235.635 1321.58,236.075 1322.15,238.509 1322.71,237.806 1323.28,237.093 1323.85,237.486 1324.42,236.934 1324.99,238.278 1325.56,235.348 1326.12,235.833 1326.69,233.187 1327.26,235.795 1327.83,234.107 1328.4,231.593 1328.97,231.358 1329.53,228.851 1330.1,230.889 1330.67,230.58 1331.24,230.172 1331.81,228.986 1332.38,228.883 1332.94,227.834 1333.51,229.899 1334.08,226.608 1334.65,225.394 1335.22,225.522 1335.79,227.748 1336.36,228.985 1336.92,230.038 1337.49,230.805 1338.06,230.424 1338.63,231.163 1339.2,229.87 1339.77,229.751 1340.33,229.731 1340.9,229.546 1341.47,229.556 1342.04,227.565 1342.61,227.701 1343.18,227.828 1343.74,226.862 1344.31,226.868 1344.88,229.993 1345.45,227.672 1346.02,226.612 1346.59,224.779 1347.15,224.068 1347.72,224.581 1348.29,223.833 1348.86,224.274 1349.43,226.706 1350,226.972 1350.56,227.025 1351.13,229.316 1351.7,230.482 1352.27,229.399 1352.84,229.256 1353.41,229.068 1353.97,229.891 1354.54,227.588 1355.11,227.764 1355.68,227.777 1356.25,227.23 1356.82,226.274 1357.38,225.613 1357.95,224.998 1358.52,227.195 1359.09,227.305 1359.66,228.743 1360.23,228.04 1360.79,226.984 1361.36,226.116 1361.93,226.411 1362.5,225.627 1363.07,225.016 1363.64,225.331 1364.2,226.693 1364.77,228.119 1365.34,227.283 1365.91,224.769 1366.48,225.281 1367.05,225.719 1367.61,226.004 1368.18,226.501 1368.75,226.528 1369.32,225.667 1369.89,226.022 1370.46,227.486 1371.02,227.738 1371.59,226.146 1372.16,227.578 1372.73,231.171 1373.3,228.173 1373.87,229.629 1374.43,231.821 1375,231.758 1375.57,234.01 1376.14,234.94 1376.71,238.059 1377.28,236.555 1377.84,236.297 1378.41,234.973 1378.98,235.862 1379.55,236.493 1380.12,236.022 1380.69,234.674 1381.25,232.237 1381.82,234.075 1382.39,236.915 1382.96,236.324 1383.53,234.919 1384.1,233.642 1384.66,232.671 1385.23,230.455 1385.8,227.528 1386.37,227.741 1386.94,227.082 1387.51,228.388 1388.07,227.519 1388.64,229.096 1389.21,228.032 1389.78,230.41 1390.35,232.587 1390.92,231.413 1391.48,229.396 1392.05,231.551 1392.62,232.552 1393.19,232.536 1393.76,232.403 1394.33,232.242 1394.89,235.27 1395.46,235.014 1396.03,234.68 1396.6,234.544 1397.17,236.114 1397.74,236.744 1398.3,235.218 1398.87,235.818 1399.44,237.404 1400.01,235.676 1400.58,235.052 1401.15,235.76 1401.71,235.143 1402.28,233.725 1402.85,235.354 1403.42,231.874 1403.99,232.543 1404.56,232.237 1405.13,231.905 1405.69,231.485 1406.26,230.053 1406.83,229.876 1407.4,230.92 1407.97,233.127 1408.54,232.796 1409.1,233.708 1409.67,235.364 1410.24,234.823 1410.81,234.542 1411.38,234.434 1411.95,231.001 1412.51,230.87 1413.08,233.026 1413.65,232.988 1414.22,232.812 1414.79,233.476 1415.36,234.038 1415.92,234.727 1416.49,234.3 1417.06,232.83 1417.63,232.544 1418.2,232.329 1418.77,230.171 1419.33,229.825 1419.9,228.785 1420.47,226.563 1421.04,226.598 1421.61,226.8 1422.18,225.98 1422.74,225.925 1423.31,227.3 1423.88,229.457 1424.45,227.337 1425.02,227.125 1425.59,226.368 1426.15,225.44 1426.72,225.741 1427.29,226.02 1427.86,226.308 1428.43,226.552 1429,227.715 1429.56,228.031 1430.13,227.296 1430.7,228.494 1431.27,229.698 1431.84,228.504 1432.41,228.597 1432.97,229.655 1433.54,228.641 1434.11,229.82 1434.68,229.875 1435.25,228.586 1435.82,227.615 1436.38,225.652 1436.95,225.948 1437.52,227.427 1438.09,226.479 1438.66,227.747 1439.23,228.084 1439.79,228.297 1440.36,229.495 1440.93,231.64 1441.5,230.561 1442.07,228.572 1442.64,228.607 1443.2,225.64 1443.77,224.868 1444.34,224.32 1444.91,224.952 1445.48,224.364 1446.05,222.906 1446.61,224.479 1447.18,223.944 1447.75,223.411 1448.32,222.07 1448.89,223.781 1449.46,224.183 1450.02,223.767 1450.59,224.55 1451.16,225.005 1451.73,226.539 1452.3,225.925 1452.87,228.488 1453.43,227.668 1454,228.021 1454.57,228.509 1455.14,230.831 1455.71,235.174 1456.28,236.245 1456.84,237.051 1457.41,238.571 1457.98,236.011 1458.55,237.643 1459.12,238.263 1459.69,236.624 1460.25,234.135 1460.82,235.126 1461.39,233.958 1461.96,232.691 1462.53,232.715 1463.1,234.49 1463.66,234.271 1464.23,232.934 1464.8,232.795 1465.37,231.808 1465.94,231.615 1466.51,229.687 1467.07,229.789 1467.64,230.829 1468.21,231.111 1468.78,231.028 1469.35,230.064 1469.92,231.273 1470.48,233.446 1471.05,232.325 1471.62,234.325 1472.19,237.379 1472.76,236.956 1473.33,235.391 1473.89,237.038 1474.46,237.592 1475.03,237.125 1475.6,237.662 1476.17,239.285 1476.74,236.723 1477.31,234.272 1477.87,232.741 1478.44,230.608 1479.01,229.646 1479.58,230.695 1480.15,229.782 1480.72,230.828 1481.28,228.405 1481.85,228.517 1482.42,228.663 1482.99,228.596 1483.56,229.677 1484.13,228.497 1484.69,227.741 1485.26,229.048 1485.83,226.16 1486.4,227.457 1486.97,229.705 1487.54,229.793 1488.1,227.72 1488.67,228.646 1489.24,225.612 1489.81,227.117 1490.38,229.389 1490.95,228.553 1491.51,229.605 1492.08,230.741 1492.65,228.787 1493.22,229.898 1493.79,230.891 1494.36,229.851 1494.92,229.798 1495.49,230.011 1496.06,227.889 1496.63,227.078 1497.2,227.242 1497.77,226.41 1498.33,229.849 1498.9,230.194 1499.47,229.31 1500.04,225.478 1500.61,225.955 1501.18,225.326 1501.74,225.774 1502.31,226.242 1502.88,227.714 1503.45,226.984 1504.02,228.327 1504.59,228.553 1505.15,225.877 1505.72,226.235 1506.29,229.791 1506.86,229.022 1507.43,229.276 1508,229.558 1508.56,228.697 1509.13,227.895 1509.7,228.082 1510.27,228.146 1510.84,228.491 1511.41,229.824 1511.97,231.054 1512.54,230.171 1513.11,230.106 1513.68,232.469 1514.25,234.501 1514.82,235.593 1515.38,235.321 1515.95,237.159 1516.52,236.79 1517.09,239.657 1517.66,238.093 1518.23,237.594 1518.79,237.254 1519.36,237.971 1519.93,234.154 1520.5,233.727 1521.07,232.493 1521.64,230.302 1522.2,231.307 1522.77,231.123 1523.34,231.326 1523.91,233.504 1524.48,233.318 1525.05,233.291 1525.61,235.32 1526.18,235.093 1526.75,234.718 1527.32,232.386 1527.89,233.475 1528.46,232.538 1529.02,232.456 1529.59,232.408 1530.16,231.237 1530.73,229.2 1531.3,230.555 1531.87,229.412 1532.43,230.497 1533,232.454 1533.57,233.408 1534.14,230.094 1534.71,231.309 1535.28,231.235 1535.84,232.25 1536.41,234.237 1536.98,234.972 1537.55,235.644 1538.12,234.192 1538.69,232.696 1539.25,233.51 1539.82,234.44 1540.39,234.035 1540.96,232.841 1541.53,231.522 1542.1,231.454 1542.66,232.336 1543.23,231.231 1543.8,230.282 1544.37,229.267 1544.94,228.23 1545.51,230.36 1546.08,230.511 1546.64,230.385 1547.21,231.338 1547.78,230.304 1548.35,231.195 1548.92,230.921 1549.49,230.819 1550.05,230.826 1550.62,233.765 1551.19,232.356 1551.76,232.008 1552.33,230.689 1552.9,230.746 1553.46,227.442 1554.03,227.783 1554.6,230.994 1555.17,230.026 1555.74,229.977 1556.31,230.962 1556.87,231.063 1557.44,230.073 1558.01,227.948 1558.58,229.058 1559.15,228.308 1559.72,228.348 1560.28,227.49 1560.85,226.597 1561.42,227.979 1561.99,228.997 1562.56,229.096 1563.13,229.26 1563.69,229.19 1564.26,228.26 1564.83,227.494 1565.4,228.904 1565.97,227.939 1566.54,229.102 1567.1,228.455 1567.67,227.312 1568.24,229.65 1568.81,232.812 1569.38,233.529 1569.95,233.452 1570.51,231.185 1571.08,233.139 1571.65,234.334 1572.22,237.409 1572.79,234.795 1573.36,234.473 1573.92,235.094 1574.49,234.636 1575.06,233.067 1575.63,234.122 1576.2,236.994 1576.77,235.425 1577.33,233.834 1577.9,232.553 1578.47,231.439 1579.04,231.306 1579.61,228.169 1580.18,229.371 1580.74,229.318 1581.31,230.615 1581.88,230.592 1582.45,227.608 1583.02,226.677 1583.59,221.802 1584.15,222.334 1584.72,224.138 1585.29,223.756 1585.86,225.47 1586.43,227.948 1587,227.24 1587.56,231.691 1588.13,232.808 1588.7,231.842 1589.27,230.046 1589.84,230.168 1590.41,232.367 1590.97,233.329 1591.54,232.298 1592.11,233.313 1592.68,231.069 1593.25,231.112 1593.82,229.922 1594.38,230.883 1594.95,230.811 1595.52,231.088 1596.09,230.779 1596.66,229.838 1597.23,227.896 1597.79,228.099 1598.36,227.348 1598.93,229.648 1599.5,228.742 1600.07,231.862 1600.64,230.834 1601.2,230.669 1601.77,226.653 1602.34,225.271 1602.91,226.824 1603.48,230.271 1604.05,231.421 1604.61,232.339 1605.18,233.246 1605.75,233.068 1606.32,230.753 1606.89,232.709 1607.46,229.412 1608.02,228.551 1608.59,230.727 1609.16,230.59 1609.73,227.775 1610.3,226.693 1610.87,226.014 1611.43,227.335 1612,226.61 1612.57,229.096 1613.14,230.142 1613.71,232.105 1614.28,232.181 1614.84,233.007 1615.41,231.668 1615.98,232.509 1616.55,232.352 1617.12,229.297 1617.69,227.666 1618.26,226.729 1618.82,227.844 1619.39,227.012 1619.96,228.299 1620.53,227.748 1621.1,229.166 1621.67,229.53 1622.23,230.655 1622.8,231.862 1623.37,231.925 1623.94,230.911 1624.51,233.083 1625.08,231.895 1625.64,232.058 1626.21,235.192 1626.78,235.099 1627.35,234.803 1627.92,233.465 1628.49,231.068 1629.05,230.899 1629.62,229.884 1630.19,230.033 1630.76,229.013 1631.33,228.086 1631.9,230.333 1632.46,229.387 1633.03,229.464 1633.6,230.647 1634.17,231.993 1634.74,230.764 1635.31,229.895 1635.87,232.068 1636.44,233.027 1637.01,232.566 1637.58,230.265 1638.15,231.349 1638.72,232.528 1639.28,232.577 1639.85,233.572 1640.42,232.174 1640.99,232.158 1641.56,233.13 1642.13,233.027 1642.69,233.914 1643.26,236.839 1643.83,234.509 1644.4,234.159 1644.97,231.977 1645.54,235.162 1646.1,236.802 1646.67,237.417 1647.24,236.802 1647.81,235.427 1648.38,230.882 1648.95,231.799 1649.51,230.687 1650.08,230.493 1650.65,231.499 1651.22,232.514 1651.79,233.361 1652.36,232.923 1652.92,232.742 1653.49,231.678 1654.06,230.577 1654.63,231.408 1655.2,232.286 1655.77,231.174 1656.33,231.238 1656.9,231.209 1657.47,227.002 1658.04,227.231 1658.61,228.294 1659.18,229.331 1659.74,229.299 1660.31,230.229 1660.88,229.215 1661.45,229.291 1662.02,231.44 1662.59,231.335 1663.15,231.257 1663.72,231.206 1664.29,231.116 1664.86,232.94 1665.43,234.711 1666,234.45 1666.56,234.168 1667.13,233.89 1667.7,231.541 1668.27,232.385 1668.84,231.038 1669.41,231.983 1669.97,230.68 1670.54,230.513 1671.11,230.355 1671.68,228.971 1672.25,230.127 1672.82,231.044 1673.38,229.896 1673.95,229.745 1674.52,228.641 1675.09,229.621 1675.66,229.725 1676.23,230.801 1676.79,230.757 1677.36,230.633 1677.93,231.795 1678.5,230.526 1679.07,228.388 1679.64,228.648 1680.2,228.743 1680.77,230.075 1681.34,229.917 1681.91,230.197 1682.48,229.93 1683.05,228.738 1683.61,225.734 1684.18,226.937 1684.75,228.978 1685.32,229.073 1685.89,229.361 1686.46,231.471 1687.02,229.439 1687.59,229.708 1688.16,226.766 1688.73,230.157 1689.3,228.019 1689.87,227.002 1690.44,225.071 1691,224.573 1691.57,225.966 1692.14,225.496 1692.71,225.875 1693.28,225.113 1693.85,227.59 1694.41,228.003 1694.98,227.289 1695.55,223.222 1696.12,221.723 1696.69,222.508 1697.26,225.266 1697.82,228.776 1698.39,224.827 1698.96,224.213 1699.53,226.124 1700.1,225.473 1700.67,227.904 1701.23,230.101 1701.8,231.259 1702.37,232.59 1702.94,232.781 1703.51,233.708 1704.08,236.656 1704.64,236.361 1705.21,238.018 1705.78,237.44 1706.35,236.986 1706.92,234.499 1707.49,233.348 1708.05,232.441 1708.62,234.729 1709.19,234.407 1709.76,236.48 1710.33,237.19 1710.9,237.84 1711.46,238.596 1712.03,235.952 1712.6,237.664 1713.17,237.303 1713.74,238.118 1714.31,236.569 1714.87,236.006 1715.44,236.773 1716.01,235.175 1716.58,234.84 1717.15,233.401 1717.72,232.315 1718.28,231.123 1718.85,233.059 1719.42,233.982 1719.99,233.706 1720.56,231.513 1721.13,230.363 1721.69,228.416 1722.26,228.621 1722.83,228.856 1723.4,227.025 1723.97,227.363 1724.54,228.802 1725.1,231.022 1725.67,227.063 1726.24,227.23 1726.81,227.318 1727.38,228.56 1727.95,229.715 1728.51,230.811 1729.08,228.551 1729.65,229.67 1730.22,228.68 1730.79,228.704 1731.36,228.721 1731.92,228.759 1732.49,227.96 1733.06,230.138 1733.63,230.257 1734.2,231.433 1734.77,232.616 1735.33,231.423 1735.9,230.595 1736.47,230.546 1737.04,230.546 1737.61,231.72 1738.18,233.704 1738.74,234.505 1739.31,232.472 1739.88,233.387 1740.45,235.564 1741.02,236.191 1741.59,235.972 1742.15,235.536 1742.72,235.188 1743.29,235.107 1743.86,233.882 1744.43,233.464 1745,233.383 1745.56,234.175 1746.13,233.84 1746.7,234.438 1747.27,235.42 1747.84,235.083 1748.41,234.657 1748.97,234.193 1749.54,232.801 1750.11,230.474 1750.68,231.358 1751.25,233.429 1751.82,233.222 1752.38,231.834 1752.95,232.601 1753.52,232.463 1754.09,232.188 1754.66,231.881 1755.23,232.631 1755.79,229.234 1756.36,226.958 1756.93,225.014 1757.5,226.259 1758.07,227.658 1758.64,228.754 1759.21,229.757 1759.77,230.766 1760.34,231.551 1760.91,230.544 1761.48,230.249 1762.05,231.373 1762.62,230.157 1763.18,229.087 1763.75,227.908 1764.32,224.963 1764.89,227.402 1765.46,228.473 1766.03,228.469 1766.59,228.755 1767.16,227.875 1767.73,225.863 1768.3,227.274 1768.87,225.317 1769.44,226.7 1770,225.083 1770.57,225.397 1771.14,223.858 1771.71,223.325 1772.28,224.953 1772.85,224.396 1773.41,223.85 1773.98,223.396 1774.55,221.725 1775.12,223.376 1775.69,221.138 1776.26,222.898 1776.82,225.408 1777.39,224.92 1777.96,224.448 1778.53,227.935 1779.1,230.152 1779.67,229.281 1780.23,230.359 1780.8,231.523 1781.37,230.468 1781.94,231.365 1782.51,231.418 1783.08,234.679 1783.64,236.539 1784.21,233.241 1784.78,234.206 1785.35,234.21 1785.92,235.138 1786.49,235.027 1787.05,236.91 1787.62,236.741 1788.19,235.328 1788.76,235.333 1789.33,235.068 1789.9,234.804 1790.46,234.662 1791.03,234.369 1791.6,234.088 1792.17,233.941 1792.74,235.931 1793.31,234.323 1793.87,233.08 1794.44,232.743 1795.01,230.71 1795.58,230.7 1796.15,230.714 1796.72,230.607 1797.28,227.641 1797.85,227.738 1798.42,228.011 1798.99,227.216 1799.56,229.566 1800.13,228.727 1800.69,228.775 1801.26,229.944 1801.83,230.022 1802.4,230.08 1802.97,231.102 1803.54,228.004 1804.1,229.385 1804.67,229.517 1805.24,229.633 1805.81,228.952 1806.38,231.362 1806.95,231.387 1807.51,231.529 1808.08,229.549 1808.65,228.609 1809.22,230.776 1809.79,231.909 1810.36,231.962 1810.92,232.79 1811.49,231.623 1812.06,230.517 1812.63,227.526 1813.2,226.675 1813.77,229.045 1814.33,228.214 1814.9,227.633 1815.47,230.882 1816.04,230.813 1816.61,229.734 1817.18,228.922 1817.74,227.837 1818.31,228.121 1818.88,229.142 1819.45,230.481 1820.02,229.491 1820.59,229.522 1821.15,228.639 1821.72,227.72 1822.29,226.971 1822.86,227.171 1823.43,226.647 1824,226.048 1824.56,226.672 1825.13,229.391 1825.7,231.539 1826.27,234.684 1826.84,233.252 1827.41,233.078 1827.97,230.83 1828.54,230.891 1829.11,229.758 1829.68,228.933 1830.25,229.168 1830.82,233.166 1831.39,233.975 1831.95,232.937 1832.52,231.791 1833.09,233.654 1833.66,231.407 1834.23,234.685 1834.8,235.579 1835.36,234.496 1835.93,234.468 1836.5,233.288 1837.07,233.337 1837.64,232.154 1838.21,229.932 1838.77,229.123 1839.34,230.222 1839.91,231.356 1840.48,228.087 1841.05,230.187 1841.62,229.165 1842.18,227.281 1842.75,226.507 1843.32,225.721 1843.89,226.237 1844.46,226.599 1845.03,227.061 1845.59,227.394 1846.16,228.776 1846.73,230.002 1847.3,230.099 1847.87,228.076 1848.44,229.344 1849,228.592 1849.57,225.643 1850.14,227.121 1850.71,228.413 1851.28,230.949 1851.85,231.049 1852.41,232.955 1852.98,233.306 1853.55,234.358 1854.12,234.108 1854.69,233.879 1855.26,231.826 1855.82,231.113 1856.39,231.149 1856.96,231.242 1857.53,230.242 1858.1,229.391 1858.67,229.491 1859.23,231.772 1859.8,233.725 1860.37,233.615 1860.94,233.711 1861.51,233.61 1862.08,234.487 1862.64,234.347 1863.21,233.306 1863.78,233.161 1864.35,234.123 1864.92,235.219 1865.49,235.041 1866.05,236.785 1866.62,237.417 1867.19,237.03 1867.76,240.733 1868.33,241.19 1868.9,241.614 1869.46,239.747 1870.03,239.91 1870.6,238.111 1871.17,236.519 1871.74,232.987 1872.31,231.951 1872.87,232.968 1873.44,232.869 1874.01,235.586 1874.58,234.28 1875.15,233.156 1875.72,228.873 1876.28,229.016 1876.85,231.193 1877.42,232.235 1877.99,231.127 1878.56,232.046 1879.13,233.875 1879.69,234.535 1880.26,233.305 1880.83,231.035 1881.4,230.89 1881.97,230.824 1882.54,232.759 1883.1,232.504 1883.67,230.959 1884.24,229.763 1884.81,230.846 1885.38,229.767 1885.95,231.086 1886.51,227.97 1887.08,227.01 1887.65,228.412 1888.22,228.579 1888.79,227.756 1889.36,227.951 1889.92,226.217 1890.49,227.559 1891.06,226.679 1891.63,226.856 1892.2,230.339 1892.77,229.336 1893.33,226.515 1893.9,225.941 1894.47,226.31 1895.04,226.633 1895.61,225.914 1896.18,225.263 1896.74,224.871 1897.31,225.086 1897.88,226.507 1898.45,227.761 1899.02,225.949 1899.59,227.327 1900.16,227.719 1900.72,228.94 1901.29,230.015 1901.86,230.085 1902.43,229.274 1903,231.481 1903.57,229.573 1904.13,230.728 1904.7,230.799 1905.27,230.862 1905.84,230.847 1906.41,229.816 1906.98,228.762 1907.54,227.975 1908.11,228.181 1908.68,227.202 1909.25,227.715 1909.82,229.074 1910.39,232.209 1910.95,233.334 1911.52,231.053 1912.09,234.05 1912.66,232.757 1913.23,233.859 1913.8,231.448 1914.36,231.461 1914.93,232.306 1915.5,234.289 1916.07,232.217 1916.64,232.167 1917.21,233.256 1917.77,232.154 1918.34,229.945 1918.91,227.971 1919.48,230.337 1920.05,231.302 1920.62,230.174 1921.18,228.272 1921.75,230.491 1922.32,230.571 1922.89,231.644 1923.46,232.59 1924.03,231.32 1924.59,230.372 1925.16,231.404 1925.73,230.554 1926.3,230.651 1926.87,229.811 1927.44,227.856 1928,229.215 1928.57,228.53 1929.14,227.949 1929.71,229.257 1930.28,231.586 1930.85,232.473 1931.41,232.272 1931.98,234.373 1932.55,234.154 1933.12,233.05 1933.69,232.992 1934.26,232.989 1934.82,234.943 1935.39,236.814 1935.96,236.216 1936.53,235.714 1937.1,236.257 1937.67,233.764 1938.23,234.56 1938.8,233.161 1939.37,232.047 1939.94,232.813 1940.51,233.406 1941.08,234.137 1941.64,232.809 1942.21,235.629 1942.78,236.165 1943.35,235.7 1943.92,237.133 1944.49,235.379 1945.05,235.094 1945.62,234.631 1946.19,233.291 1946.76,234.1 1947.33,234.89 1947.9,235.576 1948.46,237.166 1949.03,236.593 1949.6,234.867 1950.17,235.481 1950.74,234.985 1951.31,235.816 1951.87,235.423 1952.44,235.648 1953.01,236.139 1953.58,235.601 1954.15,234.172 1954.72,233.446 1955.28,231.956 1955.85,229.696 1956.42,229.492 1956.99,230.411 1957.56,230.284 1958.13,229.195 1958.69,228.905 1959.26,226.676 1959.83,228.807 1960.4,228.534 1960.97,228.531 1961.54,226.435 1962.1,227.579 1962.67,228.671 1963.24,227.522 1963.81,228.659 1964.38,229.662 1964.95,230.501 1965.51,231.311 1966.08,228.913 1966.65,227.795 1967.22,226.938 1967.79,227.129 1968.36,224.172 1968.92,224.418 1969.49,225.809 1970.06,225.027 1970.63,226.23 1971.2,226.355 1971.77,227.571 1972.34,226.527 1972.9,226.748 1973.47,228.275 1974.04,228.373 1974.61,228.344 1975.18,228.359 1975.75,231.606 1976.31,232.581 1976.88,231.355 1977.45,232.28 1978.02,233.204 1978.59,233.008 1979.16,231.622 1979.72,233.526 1980.29,232.239 1980.86,231.271 1981.43,231.338 1982,230.008 1982.57,228.001 1983.13,228.999 1983.7,228.958 1984.27,228.997 1984.84,227.056 1985.41,227.366 1985.98,231.621 1986.54,230.482 1987.11,230.39 1987.68,230.429 1988.25,229.57 1988.82,228.828 1989.39,229.055 1989.95,230.201 1990.52,229.13 1991.09,229.223 1991.66,227.205 1992.23,228.637 1992.8,227.595 1993.36,226.154 1993.93,227.657 1994.5,229.305 1995.07,229.545 1995.64,231.559 1996.21,232.516 1996.77,233.401 1997.34,233.212 1997.91,233.937 1998.48,231.588 1999.05,229.65 1999.62,227.329 2000.18,229.548 2000.75,225.54 2001.32,223.828 2001.89,221.182 2002.46,222.92 2003.03,222.437 2003.59,222.091 2004.16,222.808 2004.73,225.525 2005.3,226.006 2005.87,229.539 2006.44,228.498 2007,229.727 2007.57,228.833 2008.14,234.196 2008.71,234.174 2009.28,236.221 2009.85,233.889 2010.41,234.739 2010.98,231.421 2011.55,232.487 2012.12,234.06 2012.69,236.108 2013.26,234.777 2013.82,231.395 2014.39,231.478 2014.96,231.711 2015.53,232.672 2016.1,232.548 2016.67,232.314 2017.23,232.385 2017.8,234.426 2018.37,234.323 2018.94,235.165 2019.51,233.939 2020.08,233.6 2020.64,233.102 2021.21,233.045 2021.78,233.787 2022.35,234.551 2022.92,233.245 2023.49,234.77 2024.05,234.385 2024.62,233.758 2025.19,232.547 2025.76,233.453 2026.33,235.175 2026.9,235.993 2027.46,237.493 2028.03,236.947 2028.6,235.587 2029.17,235.102 2029.74,234.665 2030.31,234.28 2030.87,234.044 2031.44,238.012 2032.01,238.587 2032.58,239.025 2033.15,239.073 2033.72,239.284 2034.28,239.637 2034.85,238.944 2035.42,237.202 2035.99,235.554 2036.56,235.007 2037.13,233.539 2037.69,234.423 2038.26,234.182 2038.83,232.704 2039.4,233.284 2039.97,231.909 2040.54,228.711 2041.11,228.646 2041.67,228.493 2042.24,229.537 2042.81,229.218 2043.38,229.092 2043.95,229.038 2044.52,230.064 2045.08,228.061 2045.65,227.279 2046.22,226.413 2046.79,226.671 2047.36,226.993 2047.93,228.161 2048.49,228.083 2049.06,227.004 2049.63,229.12 2050.2,227.103 2050.77,226.231 2051.34,225.153 2051.9,227.683 2052.47,227.785 2053.04,226.777 2053.61,227.96 2054.18,229.137 2054.75,229.212 2055.31,227.973 2055.88,227.927 2056.45,227.011 2057.02,226.895 2057.59,225.782 2058.16,224.049 2058.72,223.314 2059.29,224.002 2059.86,223.578 2060.43,223.926 2061,222.414 2061.57,221.965 2062.13,221.571 2062.7,223.5 2063.27,223.849 2063.84,225.185 2064.41,225.441 2064.98,225.842 2065.54,224.02 2066.11,223.641 2066.68,224.987 2067.25,226.471 2067.82,227.967 2068.39,227.332 2068.95,227.588 2069.52,227.87 2070.09,229.112 2070.66,230.241 2071.23,229.278 2071.8,228.668 2072.36,229.99 2072.93,230.157 2073.5,230.135 2074.07,229.25 2074.64,230.213 2075.21,231.143 2075.77,232.213 2076.34,233.449 2076.91,235.327 2077.48,234.111 2078.05,233.962 2078.62,233.697 2079.18,232.588 2079.75,232.595 2080.32,231.377 2080.89,230.558 2081.46,230.537 2082.03,230.324 2082.59,229.448 2083.16,228.399 2083.73,229.519 2084.3,229.559 2084.87,229.7 2085.44,229.799 2086,230.967 2086.57,232.031 2087.14,231.997 2087.71,232.973 2088.28,231.803 2088.85,235.738 2089.41,234.289 2089.98,235.121 2090.55,235.103 2091.12,234.808 2091.69,233.485 2092.26,233.172 2092.82,232.929 2093.39,232.876 2093.96,232.825 2094.53,233.969 2095.1,233.624 2095.67,231.515 2096.23,233.63 2096.8,233.428 2097.37,232.223 2097.94,234.039 2098.51,235.792 2099.08,235.119 2099.64,235.817 2100.21,236.727 2100.78,235.247 2101.35,233.72 2101.92,232.426 2102.49,232.402 2103.05,230.471 2103.62,230.399 2104.19,231.307 2104.76,230.09 2105.33,233.369 2105.9,232.056 2106.46,232.129 2107.03,233.975 2107.6,234.698 2108.17,234.351 2108.74,231.956 2109.31,231.969 2109.87,227.808 2110.44,227.225 2111.01,227.575 2111.58,226.709 2112.15,227.036 2112.72,225.395 2113.29,224.747 2113.85,225.207 2114.42,225.527 2114.99,226.835 2115.56,227.036 2116.13,227.398 2116.7,228.565 2117.26,227.846 2117.83,226.92 2118.4,229.055 2118.97,228.111 2119.54,230.258 2120.11,230.244 2120.67,230.346 2121.24,229.399 2121.81,228.054 2122.38,227.18 2122.95,228.475 2123.52,228.692 2124.08,226.882 2124.65,226.418 2125.22,228.895 2125.79,228.977 2126.36,230.037 2126.93,231.271 2127.49,231.337 2128.06,228.408 2128.63,229.631 2129.2,230.866 2129.77,228.971 2130.34,230.2 2130.9,231.557 2131.47,231.444 2132.04,231.408 2132.61,231.323 2133.18,231.281 2133.75,230.219 2134.31,230.42 2134.88,230.506 2135.45,229.6 2136.02,228.483 2136.59,229.664 2137.16,229.89 2137.72,232.103 2138.29,231.936 2138.86,229.062 2139.43,230.576 2140,230.362 2140.57,229.215 2141.13,231.206 2141.7,229.089 2142.27,230.295 2142.84,229.325 2143.41,230.378 2143.98,231.496 2144.54,229.505 2145.11,228.715 2145.68,228.813 2146.25,229.088 2146.82,230.341 2147.39,227.239 2147.95,227.598 2148.52,227.086 2149.09,228.505 2149.66,229.673 2150.23,228.01 2150.8,226.19 2151.36,227.515 2151.93,229.004 2152.5,228.353 2153.07,227.718 2153.64,228.958 2154.21,228.16 2154.77,227.444 2155.34,226.853 2155.91,228.219 2156.48,229.424 2157.05,231.784 2157.62,230.69 2158.18,230.751 2158.75,229.702 2159.32,226.868 2159.89,227.282 \"/>\n<path clip-path=\"url(#clip030)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip030)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip030)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip030)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip030)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip030)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.024 ± 0.027\n  with uncertainty of ± 0.002404049141143511\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01025 ± (0.00174438, 0.00172542) (MC)\n  95% confidence interval: [-4.01366, -4.0068]) (MC)\n  linear error propagation: -4.01034 ± 0.00176137\n  |δ_y| = |0.00135924| (≤ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.010245253907723, val_l = 0.0034134154891010127, val_u = 0.0034415665357965253)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip060\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip060)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip061\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip060)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip062\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1158.67 2211.02,1158.67 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1013.38 2211.02,1013.38 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,868.077 2211.02,868.077 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,722.778 2211.02,722.778 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,577.479 2211.02,577.479 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,432.18 2211.02,432.18 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,286.881 2211.02,286.881 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1158.67 365.751,1158.67 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1013.38 365.751,1013.38 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,868.077 365.751,868.077 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,722.778 365.751,722.778 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,577.479 365.751,577.479 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,432.18 365.751,432.18 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,286.881 365.751,286.881 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M298.909 1144.47 Q295.298 1144.47 293.469 1148.04 Q291.664 1151.58 291.664 1158.71 Q291.664 1165.82 293.469 1169.38 Q295.298 1172.92 298.909 1172.92 Q302.543 1172.92 304.349 1169.38 Q306.177 1165.82 306.177 1158.71 Q306.177 1151.58 304.349 1148.04 Q302.543 1144.47 298.909 1144.47 M298.909 1140.77 Q304.719 1140.77 307.775 1145.38 Q310.853 1149.96 310.853 1158.71 Q310.853 1167.44 307.775 1172.04 Q304.719 1176.63 298.909 1176.63 Q293.099 1176.63 290.02 1172.04 Q286.964 1167.44 286.964 1158.71 Q286.964 1149.96 290.02 1145.38 Q293.099 1140.77 298.909 1140.77 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M259.557 1026.72 L267.196 1026.72 L267.196 1000.36 L258.886 1002.02 L258.886 997.763 L267.15 996.096 L271.826 996.096 L271.826 1026.72 L279.465 1026.72 L279.465 1030.66 L259.557 1030.66 L259.557 1026.72 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M298.909 999.175 Q295.298 999.175 293.469 1002.74 Q291.664 1006.28 291.664 1013.41 Q291.664 1020.52 293.469 1024.08 Q295.298 1027.62 298.909 1027.62 Q302.543 1027.62 304.349 1024.08 Q306.177 1020.52 306.177 1013.41 Q306.177 1006.28 304.349 1002.74 Q302.543 999.175 298.909 999.175 M298.909 995.471 Q304.719 995.471 307.775 1000.08 Q310.853 1004.66 310.853 1013.41 Q310.853 1022.14 307.775 1026.74 Q304.719 1031.33 298.909 1031.33 Q293.099 1031.33 290.02 1026.74 Q286.964 1022.14 286.964 1013.41 Q286.964 1004.66 290.02 1000.08 Q293.099 995.471 298.909 995.471 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M262.775 881.422 L279.094 881.422 L279.094 885.357 L257.15 885.357 L257.15 881.422 Q259.812 878.667 264.395 874.038 Q269.002 869.385 270.182 868.042 Q272.428 865.519 273.307 863.783 Q274.21 862.024 274.21 860.334 Q274.21 857.579 272.266 855.843 Q270.344 854.107 267.242 854.107 Q265.043 854.107 262.59 854.871 Q260.159 855.635 257.381 857.186 L257.381 852.464 Q260.205 851.329 262.659 850.751 Q265.113 850.172 267.15 850.172 Q272.52 850.172 275.715 852.857 Q278.909 855.542 278.909 860.033 Q278.909 862.163 278.099 864.084 Q277.312 865.982 275.205 868.575 Q274.627 869.246 271.525 872.464 Q268.423 875.658 262.775 881.422 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M298.909 853.876 Q295.298 853.876 293.469 857.441 Q291.664 860.982 291.664 868.112 Q291.664 875.218 293.469 878.783 Q295.298 882.325 298.909 882.325 Q302.543 882.325 304.349 878.783 Q306.177 875.218 306.177 868.112 Q306.177 860.982 304.349 857.441 Q302.543 853.876 298.909 853.876 M298.909 850.172 Q304.719 850.172 307.775 854.779 Q310.853 859.362 310.853 868.112 Q310.853 876.839 307.775 881.445 Q304.719 886.028 298.909 886.028 Q293.099 886.028 290.02 881.445 Q286.964 876.839 286.964 868.112 Q286.964 859.362 290.02 854.779 Q293.099 850.172 298.909 850.172 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M272.914 721.424 Q276.27 722.142 278.145 724.41 Q280.043 726.679 280.043 730.012 Q280.043 735.128 276.525 737.929 Q273.006 740.729 266.525 740.729 Q264.349 740.729 262.034 740.29 Q259.742 739.873 257.289 739.016 L257.289 734.503 Q259.233 735.637 261.548 736.216 Q263.863 736.794 266.386 736.794 Q270.784 736.794 273.076 735.058 Q275.39 733.322 275.39 730.012 Q275.39 726.956 273.238 725.243 Q271.108 723.507 267.289 723.507 L263.261 723.507 L263.261 719.665 L267.474 719.665 Q270.923 719.665 272.752 718.299 Q274.58 716.91 274.58 714.318 Q274.58 711.656 272.682 710.243 Q270.807 708.808 267.289 708.808 Q265.367 708.808 263.168 709.225 Q260.969 709.642 258.33 710.521 L258.33 706.355 Q260.992 705.614 263.307 705.244 Q265.645 704.873 267.705 704.873 Q273.029 704.873 276.131 707.304 Q279.233 709.711 279.233 713.831 Q279.233 716.702 277.59 718.693 Q275.946 720.66 272.914 721.424 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M298.909 708.577 Q295.298 708.577 293.469 712.142 Q291.664 715.683 291.664 722.813 Q291.664 729.919 293.469 733.484 Q295.298 737.026 298.909 737.026 Q302.543 737.026 304.349 733.484 Q306.177 729.919 306.177 722.813 Q306.177 715.683 304.349 712.142 Q302.543 708.577 298.909 708.577 M298.909 704.873 Q304.719 704.873 307.775 709.48 Q310.853 714.063 310.853 722.813 Q310.853 731.54 307.775 736.146 Q304.719 740.729 298.909 740.729 Q293.099 740.729 290.02 736.146 Q286.964 731.54 286.964 722.813 Q286.964 714.063 290.02 709.48 Q293.099 704.873 298.909 704.873 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M271.594 564.273 L259.789 582.722 L271.594 582.722 L271.594 564.273 M270.367 560.199 L276.247 560.199 L276.247 582.722 L281.177 582.722 L281.177 586.611 L276.247 586.611 L276.247 594.759 L271.594 594.759 L271.594 586.611 L255.992 586.611 L255.992 582.097 L270.367 560.199 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M298.909 563.278 Q295.298 563.278 293.469 566.843 Q291.664 570.384 291.664 577.514 Q291.664 584.62 293.469 588.185 Q295.298 591.727 298.909 591.727 Q302.543 591.727 304.349 588.185 Q306.177 584.62 306.177 577.514 Q306.177 570.384 304.349 566.843 Q302.543 563.278 298.909 563.278 M298.909 559.574 Q304.719 559.574 307.775 564.181 Q310.853 568.764 310.853 577.514 Q310.853 586.241 307.775 590.847 Q304.719 595.431 298.909 595.431 Q293.099 595.431 290.02 590.847 Q286.964 586.241 286.964 577.514 Q286.964 568.764 290.02 564.181 Q293.099 559.574 298.909 559.574 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M258.793 414.9 L277.15 414.9 L277.15 418.836 L263.076 418.836 L263.076 427.308 Q264.094 426.96 265.113 426.798 Q266.131 426.613 267.15 426.613 Q272.937 426.613 276.316 429.785 Q279.696 432.956 279.696 438.372 Q279.696 443.951 276.224 447.053 Q272.752 450.132 266.432 450.132 Q264.256 450.132 261.988 449.761 Q259.742 449.391 257.335 448.65 L257.335 443.951 Q259.418 445.085 261.641 445.641 Q263.863 446.196 266.34 446.196 Q270.344 446.196 272.682 444.09 Q275.02 441.984 275.02 438.372 Q275.02 434.761 272.682 432.655 Q270.344 430.548 266.34 430.548 Q264.465 430.548 262.59 430.965 Q260.738 431.382 258.793 432.261 L258.793 414.9 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M298.909 417.979 Q295.298 417.979 293.469 421.544 Q291.664 425.085 291.664 432.215 Q291.664 439.322 293.469 442.886 Q295.298 446.428 298.909 446.428 Q302.543 446.428 304.349 442.886 Q306.177 439.322 306.177 432.215 Q306.177 425.085 304.349 421.544 Q302.543 417.979 298.909 417.979 M298.909 414.275 Q304.719 414.275 307.775 418.882 Q310.853 423.465 310.853 432.215 Q310.853 440.942 307.775 445.548 Q304.719 450.132 298.909 450.132 Q293.099 450.132 290.02 445.548 Q286.964 440.942 286.964 432.215 Q286.964 423.465 290.02 418.882 Q293.099 414.275 298.909 414.275 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M269.326 285.018 Q266.178 285.018 264.326 287.171 Q262.497 289.324 262.497 293.074 Q262.497 296.8 264.326 298.976 Q266.178 301.129 269.326 301.129 Q272.474 301.129 274.303 298.976 Q276.154 296.8 276.154 293.074 Q276.154 289.324 274.303 287.171 Q272.474 285.018 269.326 285.018 M278.608 270.365 L278.608 274.625 Q276.849 273.791 275.043 273.351 Q273.261 272.912 271.502 272.912 Q266.872 272.912 264.418 276.037 Q261.988 279.162 261.641 285.481 Q263.006 283.467 265.066 282.402 Q267.127 281.314 269.603 281.314 Q274.812 281.314 277.821 284.486 Q280.853 287.634 280.853 293.074 Q280.853 298.398 277.705 301.615 Q274.557 304.833 269.326 304.833 Q263.33 304.833 260.159 300.249 Q256.988 295.643 256.988 286.916 Q256.988 278.722 260.877 273.861 Q264.766 268.976 271.316 268.976 Q273.076 268.976 274.858 269.324 Q276.664 269.671 278.608 270.365 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M298.909 272.68 Q295.298 272.68 293.469 276.245 Q291.664 279.787 291.664 286.916 Q291.664 294.023 293.469 297.587 Q295.298 301.129 298.909 301.129 Q302.543 301.129 304.349 297.587 Q306.177 294.023 306.177 286.916 Q306.177 279.787 304.349 276.245 Q302.543 272.68 298.909 272.68 M298.909 268.976 Q304.719 268.976 307.775 273.583 Q310.853 278.166 310.853 286.916 Q310.853 295.643 307.775 300.249 Q304.719 304.833 298.909 304.833 Q293.099 304.833 290.02 300.249 Q286.964 295.643 286.964 286.916 Q286.964 278.166 290.02 273.583 Q293.099 268.976 298.909 268.976 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip062)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1051.61 400.199,953.259 400.786,863.014 401.372,780.334 401.958,704.717 402.545,635.696 403.131,672.309 403.718,612.035 404.304,557.296 404.891,505.996 405.477,459.659 406.063,417.966 406.65,380.617 407.236,347.329 407.823,317.838 408.409,291.897 408.995,269.274 409.582,249.748 410.168,233.114 410.755,219.895 411.341,297.002 411.927,324.459 412.514,312.463 413.1,302.16 413.687,358.001 414.273,351.091 414.86,372.627 415.446,417.777 416.032,435.064 416.619,452.762 417.205,449.129 417.792,447.56 418.378,447.76 418.964,449.221 419.551,467.543 420.137,485.631 420.724,489.229 421.31,493.631 421.896,499.271 422.483,504.797 423.069,511.005 423.656,539.225 424.242,546.213 424.829,553.348 425.415,580.086 426.001,595.537 426.588,611.066 427.174,641.403 427.761,670.239 428.347,676.458 428.933,683.02 429.52,689.59 430.106,697.108 430.693,709.792 431.279,722.792 431.865,730.477 432.452,737.774 433.038,755.363 433.625,762.49 434.211,774.707 434.798,786.366 435.384,810.647 435.97,817.167 436.557,827.206 437.143,833.571 437.73,843.7 438.316,860.87 438.902,867.02 439.489,883.377 440.075,892.386 440.662,907.469 441.248,925.01 441.835,935.775 442.421,951.919 443.007,961.652 443.594,970.908 444.18,977.332 444.767,994.316 445.353,1000.08 445.939,1008.69 446.526,1011.96 447.112,1015.37 447.699,1020.94 448.285,1024.18 448.871,1027.89 449.458,1038.36 450.044,1046.46 450.631,1054.24 451.217,1061.54 451.804,1064.3 452.39,1071.62 452.976,1078.28 453.563,1087.24 454.149,1093.8 454.736,1100.11 455.322,1104.23 455.908,1108.01 456.495,1109.98 457.081,1115.6 457.668,1117.76 458.254,1121.86 458.84,1123.79 459.427,1129.28 460.013,1134.82 460.6,1138.3 461.186,1139.96 461.773,1143.77 462.359,1147.48 462.945,1147.64 463.532,1151.35 464.118,1154.52 464.705,1159.35 465.291,1163.72 465.877,1165.21 466.464,1164.96 467.05,1168.3 467.637,1173.02 468.223,1176.19 468.809,1178.68 469.396,1180.03 469.982,1184.38 470.569,1188.4 471.155,1190.55 471.742,1191.32 472.328,1192.37 472.914,1191.77 473.501,1195.42 474.087,1198.1 474.674,1197.42 475.26,1198.26 475.846,1198.99 476.433,1199.73 477.019,1199.02 477.606,1199.74 478.192,1203.5 478.778,1207.24 479.365,1211.77 479.951,1216.07 480.538,1220.3 481.124,1221.62 481.711,1220.3 482.297,1223 482.883,1222.68 483.47,1223.02 484.056,1224.25 484.643,1228.26 485.229,1229.56 485.815,1229.3 486.402,1231.59 486.988,1231.33 487.575,1232.47 488.161,1232.28 488.748,1233.29 489.334,1233.27 489.92,1235.49 490.507,1235.12 491.093,1235.11 491.68,1235.06 492.266,1234.62 492.852,1234.42 493.439,1235.59 494.025,1236.41 494.612,1238.59 495.198,1239.46 495.784,1242.89 496.371,1244.55 496.957,1246.73 497.544,1244.85 498.13,1246.6 498.717,1249.73 499.303,1248.7 499.889,1246.39 500.476,1246.97 501.062,1244.74 501.649,1244.08 502.235,1247.1 502.821,1247.6 503.408,1245.63 503.994,1244.92 504.581,1242.12 505.167,1241.75 505.753,1242.5 506.34,1243.43 506.926,1242.8 507.513,1243.75 508.099,1243.48 508.686,1241.75 509.272,1242.73 509.858,1242.5 510.445,1243.04 511.031,1242.62 511.618,1242.31 512.204,1245.87 512.79,1247.89 513.377,1245.93 513.963,1247.86 514.55,1247.22 515.136,1246.54 515.722,1245.74 516.309,1245.19 516.895,1244.56 517.482,1246.48 518.068,1245.67 518.655,1246.25 519.241,1246.69 519.827,1246.1 520.414,1246.59 521,1246.04 521.587,1245.6 522.173,1245.15 522.759,1246.97 523.346,1247.57 523.932,1247 524.519,1249.84 525.105,1248 525.691,1247.18 526.278,1245.23 526.864,1245.82 527.451,1249.02 528.037,1249.56 528.624,1246.46 529.21,1246.86 529.796,1246.18 530.383,1246.88 530.969,1247.33 531.556,1246.51 532.142,1250.53 532.728,1249.68 533.315,1246.66 533.901,1245.93 534.488,1245.61 535.074,1246.3 535.661,1245.73 536.247,1245.1 536.833,1245.66 537.42,1246.24 538.006,1245.61 538.593,1241.62 539.179,1241.32 539.765,1239.54 540.352,1241.51 540.938,1241.24 541.525,1244.29 542.111,1245.96 542.697,1245.34 543.284,1244.56 543.87,1242.72 544.457,1243.53 545.043,1245.39 545.63,1249.46 546.216,1248.61 546.802,1245.2 547.389,1245.82 547.975,1246.31 548.562,1245.76 549.148,1242.69 549.734,1242.94 550.321,1243.7 550.907,1242.96 551.494,1242.22 552.08,1240.55 552.666,1240.13 553.253,1242.3 553.839,1240.71 554.426,1241.72 555.012,1243.35 555.599,1242.78 556.185,1240.95 556.771,1240.2 557.358,1237.43 557.944,1237.02 558.531,1239.03 559.117,1238.73 559.703,1236.07 560.29,1234.57 560.876,1234.28 561.463,1238.79 562.049,1238.25 562.635,1237.93 563.222,1236.16 563.808,1234.45 564.395,1231.99 564.981,1230.98 565.568,1229.7 566.154,1229.59 566.74,1230.94 567.327,1233.46 567.913,1233.01 568.5,1233 569.086,1235.3 569.672,1236.48 570.259,1237.31 570.845,1237.01 571.432,1234.45 572.018,1235.27 572.605,1234.88 573.191,1235.74 573.777,1234.2 574.364,1235.07 574.95,1236.1 575.537,1237.17 576.123,1234.3 576.709,1236.76 577.296,1238.57 577.882,1237.9 578.469,1238.61 579.055,1240.35 579.641,1239.62 580.228,1239.31 580.814,1238.92 581.401,1238.5 581.987,1238.05 582.574,1237.64 583.16,1237.12 583.746,1237.65 584.333,1236.16 584.919,1234.29 585.506,1233.05 586.092,1236.39 586.678,1238.25 587.265,1237.91 587.851,1238.47 588.438,1237.07 589.024,1234.25 589.61,1233.55 590.197,1233.19 590.783,1232.79 591.37,1232.59 591.956,1229.82 592.543,1231.17 593.129,1232.04 593.715,1231.8 594.302,1233.07 594.888,1235.24 595.475,1234.79 596.061,1234.19 596.647,1232.6 597.234,1233.73 597.82,1235.7 598.407,1237.61 598.993,1237.12 599.579,1235.56 600.166,1237.49 600.752,1237.12 601.339,1238.59 601.925,1238.1 602.512,1238.73 603.098,1238.24 603.684,1237.49 604.271,1238.36 604.857,1237.65 605.444,1235.68 606.03,1237.47 606.616,1235.74 607.203,1236.33 607.789,1234.93 608.376,1232.13 608.962,1232.08 609.548,1234.06 610.135,1233.75 610.721,1237.99 611.308,1237.71 611.894,1236.06 612.481,1233.17 613.067,1234.08 613.653,1231.27 614.24,1231.09 614.826,1232.08 615.413,1232.98 615.999,1232.61 616.585,1233.42 617.172,1235.33 617.758,1234.71 618.345,1234.04 618.931,1237.12 619.518,1236.41 620.104,1233.63 620.69,1232.06 621.277,1230.63 621.863,1231.6 622.45,1233.56 623.036,1231.91 623.622,1235.17 624.209,1234.86 624.795,1231.82 625.382,1227.79 625.968,1229.32 626.554,1228.86 627.141,1226.51 627.727,1228.8 628.314,1229.9 628.9,1228.4 629.487,1228.19 630.073,1228.05 630.659,1228.06 631.246,1226.69 631.832,1227.89 632.419,1226.65 633.005,1226.5 633.591,1225.47 634.178,1225.49 634.764,1225.6 635.351,1223.02 635.937,1222.06 636.523,1221.13 637.11,1220.21 637.696,1220.42 638.283,1220.64 638.869,1220.97 639.456,1219.75 640.042,1219.94 640.628,1222.54 641.215,1222.67 641.801,1222.78 642.388,1221.55 642.974,1221.51 643.56,1221.56 644.147,1220.55 644.733,1220.67 645.32,1219.93 645.906,1221.56 646.492,1220.23 647.079,1220.47 647.665,1219.34 648.252,1220.88 648.838,1221.3 649.425,1220.21 650.011,1220.45 650.597,1224.09 651.184,1225.21 651.77,1225.17 652.357,1226.44 652.943,1227.35 653.529,1226.08 654.116,1226.04 654.702,1226.04 655.289,1226.02 655.875,1227.98 656.462,1232.54 657.048,1234.46 657.634,1232.74 658.221,1230.97 658.807,1230.52 659.394,1230.29 659.98,1230.18 660.566,1228.61 661.153,1228.4 661.739,1229.31 662.326,1231.42 662.912,1231.07 663.498,1228.25 664.085,1229.36 664.671,1230.42 665.258,1231.18 665.844,1231.95 666.431,1231.56 667.017,1232.26 667.603,1234.05 668.19,1233.86 668.776,1230.84 669.363,1232.78 669.949,1232.24 670.535,1230.77 671.122,1229.14 671.708,1227.58 672.295,1226.2 672.881,1228.35 673.467,1227.92 674.054,1227.66 674.64,1228.41 675.227,1228 675.813,1228.8 676.4,1227.15 676.986,1225.82 677.572,1225.59 678.159,1226.47 678.745,1223.77 679.332,1222.4 679.918,1222.18 680.504,1222.19 681.091,1222.05 681.677,1223.25 682.264,1222.09 682.85,1223.33 683.436,1222.05 684.023,1223.43 684.609,1224.36 685.196,1224.1 685.782,1225.13 686.369,1226.3 686.955,1223.7 687.541,1224.83 688.128,1225.76 688.714,1224.52 689.301,1224.32 689.887,1223.17 690.473,1225.41 691.06,1225.5 691.646,1225.33 692.233,1224.91 692.819,1226.22 693.405,1228.4 693.992,1223.49 694.578,1224.44 695.165,1224.18 695.751,1222.84 696.338,1223.14 696.924,1224.04 697.51,1225.06 698.097,1228.52 698.683,1227.13 699.27,1225.91 699.856,1225.9 700.442,1228 701.029,1226.58 701.615,1228.77 702.202,1227.29 702.788,1224.93 703.375,1227.22 703.961,1228.3 704.547,1222.07 705.134,1222.23 705.72,1223.13 706.307,1223.25 706.893,1218.24 707.479,1217.17 708.066,1217.26 708.652,1221.24 709.239,1221.06 709.825,1219.97 710.411,1221.36 710.998,1222.32 711.584,1222.33 712.171,1222.29 712.757,1220.01 713.344,1219.18 713.93,1219.34 714.516,1220.59 715.103,1220.74 715.689,1220.62 716.276,1225.51 716.862,1221.56 717.448,1221.35 718.035,1221.65 718.621,1221.57 719.208,1224.07 719.794,1224.03 720.38,1223.93 720.967,1224.85 721.553,1224.54 722.14,1224.36 722.726,1223.18 723.313,1225.7 723.899,1224.24 724.485,1224.01 725.072,1223.99 725.658,1223.62 726.245,1224.77 726.831,1218.46 727.417,1217.26 728.004,1217.32 728.59,1218.53 729.177,1218.65 729.763,1216.27 730.349,1214.07 730.936,1212.4 731.522,1212.98 732.109,1215.71 732.695,1213.41 733.282,1213.78 733.868,1213.06 734.454,1213.29 735.041,1215.05 735.627,1216.65 736.214,1218.31 736.8,1216.11 737.386,1216.63 737.973,1215.96 738.559,1216.36 739.146,1218.18 739.732,1217.23 740.318,1218.69 740.905,1218.69 741.491,1219.01 742.078,1217.83 742.664,1218.03 743.251,1218.27 743.837,1218.29 744.423,1218.59 745.01,1220.9 745.596,1222.21 746.183,1223.23 746.769,1225.42 747.355,1224.08 747.942,1222.74 748.528,1221.5 749.115,1222.72 749.701,1222.67 750.288,1221.29 750.874,1222.65 751.46,1222.95 752.047,1223.96 752.633,1222.76 753.22,1221.45 753.806,1223.75 754.392,1221.05 754.979,1222.28 755.565,1219.72 756.152,1220.92 756.738,1221.09 757.324,1222.26 757.911,1222.43 758.497,1224.87 759.084,1223.24 759.67,1222.23 760.257,1222.05 760.843,1218.4 761.429,1219.68 762.016,1218.5 762.602,1219.87 763.189,1221.14 763.775,1221.1 764.361,1222.48 764.948,1227.17 765.534,1225.86 766.121,1227.79 766.707,1230.95 767.293,1232.9 767.88,1230.97 768.466,1230.6 769.053,1230 769.639,1231.89 770.226,1231.19 770.812,1230.67 771.398,1230.18 771.985,1230.82 772.571,1231.56 773.158,1231.2 773.744,1230.31 774.33,1229.82 774.917,1229.14 775.503,1229.08 776.09,1229.95 776.676,1229.58 777.262,1227.99 777.849,1230.01 778.435,1228.33 779.022,1227.84 779.608,1226.33 780.195,1225.01 780.781,1224.82 781.367,1224.58 781.954,1221.92 782.54,1221.8 783.127,1222.9 783.713,1220.47 784.299,1221.89 784.886,1221.69 785.472,1224.08 786.059,1227.52 786.645,1228.3 787.232,1227.9 787.818,1228.94 788.404,1227.2 788.991,1224.42 789.577,1225.55 790.164,1222.79 790.75,1222.37 791.336,1223.31 791.923,1224.08 792.509,1225.13 793.096,1223.64 793.682,1223.25 794.268,1223.18 794.855,1224 795.441,1224.92 796.028,1222.25 796.614,1222.06 797.201,1220.47 797.787,1220.39 798.373,1220.33 798.96,1218.72 799.546,1216.32 800.133,1220.04 800.719,1219.96 801.305,1220.06 801.892,1220.21 802.478,1219.95 803.065,1220.06 803.651,1217.66 804.237,1217.47 804.824,1213.92 805.41,1214.07 805.997,1214.37 806.583,1216 807.17,1215.1 807.756,1215.4 808.342,1215.39 808.929,1216.64 809.515,1218.23 810.102,1220.55 810.688,1217.93 811.274,1217.78 811.861,1216.75 812.447,1215.72 813.034,1217.21 813.62,1216.02 814.206,1218.55 814.793,1219.77 815.379,1220.79 815.966,1219.6 816.552,1217.11 817.139,1217.32 817.725,1219.92 818.311,1218.62 818.898,1222.25 819.484,1220.86 820.071,1219.66 820.657,1219.57 821.243,1219.78 821.83,1218.62 822.416,1217.58 823.003,1217.58 823.589,1215.13 824.175,1215.43 824.762,1215.61 825.348,1212.18 825.935,1212.45 826.521,1214.09 827.108,1215.65 827.694,1215.86 828.28,1215.71 828.867,1219.28 829.453,1215.73 830.04,1217.3 830.626,1217.31 831.212,1217.34 831.799,1219.84 832.385,1219.82 832.972,1219.95 833.558,1219.96 834.145,1222.23 834.731,1223.29 835.317,1223.1 835.904,1219.5 836.49,1218.2 837.077,1218.34 837.663,1216.24 838.249,1215.06 838.836,1216.78 839.422,1216.93 840.009,1216.03 840.595,1216.51 841.181,1218.91 841.768,1220.18 842.354,1222.78 842.941,1222.62 843.527,1223.51 844.114,1223.34 844.7,1225.72 845.286,1225.35 845.873,1227.54 846.459,1228.29 847.046,1229.24 847.632,1227.4 848.218,1228.09 848.805,1227.49 849.391,1227.05 849.978,1226.71 850.564,1226.18 851.15,1229.33 851.737,1228.72 852.323,1226.02 852.91,1225.79 853.496,1224.41 854.083,1225.34 854.669,1223.74 855.255,1224.64 855.842,1224.16 856.428,1226.06 857.015,1221.3 857.601,1220.99 858.187,1219.7 858.774,1219.7 859.36,1218.48 859.947,1219.76 860.533,1220.86 861.119,1222.14 861.706,1221.96 862.292,1222.69 862.879,1222.42 863.465,1222.29 864.052,1220.89 864.638,1219.72 865.224,1221.35 865.811,1220.19 866.397,1216.5 866.984,1216.66 867.57,1216.79 868.156,1217.16 868.743,1217.26 869.329,1218.66 869.916,1217.21 870.502,1216.15 871.089,1216.37 871.675,1215.32 872.261,1215.53 872.848,1215.71 873.434,1214.6 874.021,1214.82 874.607,1213.78 875.193,1216.21 875.78,1215.1 876.366,1217.84 876.953,1216.84 877.539,1216.68 878.125,1215.53 878.712,1214.36 879.298,1219.23 879.885,1220.32 880.471,1217.88 881.058,1215.71 881.644,1215.58 882.23,1214.52 882.817,1212.44 883.403,1212.66 883.99,1211.84 884.576,1213.43 885.162,1213.75 885.749,1214.19 886.335,1215.29 886.922,1220.09 887.508,1223.47 888.094,1223.15 888.681,1221.7 889.267,1221.4 889.854,1221.31 890.44,1219.96 891.027,1222.21 891.613,1221.87 892.199,1220.57 892.786,1221.67 893.372,1221.54 893.959,1221.66 894.545,1222.55 895.131,1221.37 895.718,1222.38 896.304,1222.3 896.891,1225.92 897.477,1226.72 898.063,1226.25 898.65,1225.74 899.236,1223.71 899.823,1222.27 900.409,1220.83 900.996,1218.29 901.582,1216.94 902.168,1218.31 902.755,1218.56 903.341,1217.35 903.928,1217.57 904.514,1217.44 905.1,1216.39 905.687,1216.61 906.273,1216.78 906.86,1218.14 907.446,1221.67 908.032,1221.26 908.619,1221.14 909.205,1222.18 909.792,1221.82 910.378,1222.96 910.965,1222.87 911.551,1224.09 912.137,1221.27 912.724,1219.85 913.31,1219.86 913.897,1220.89 914.483,1221.82 915.069,1215.62 915.656,1215.66 916.242,1216.82 916.829,1218.23 917.415,1214.92 918.002,1217.42 918.588,1217.61 919.174,1218.04 919.761,1219.33 920.347,1213.41 920.934,1213.71 921.52,1214.06 922.106,1211.79 922.693,1213.26 923.279,1213.38 923.866,1213.73 924.452,1212.89 925.038,1213.17 925.625,1213.22 926.211,1211.84 926.798,1209.72 927.384,1210.16 927.971,1209.35 928.557,1209.82 929.143,1210.19 929.73,1210.83 930.316,1210.04 930.903,1210.34 931.489,1209.65 932.075,1211.04 932.662,1214.08 933.248,1214.45 933.835,1215.79 934.421,1215.76 935.007,1217.13 935.594,1217.1 936.18,1218.49 936.767,1219.62 937.353,1219.53 937.94,1219.44 938.526,1218.25 939.112,1217.36 939.699,1218.73 940.285,1221.12 940.872,1219.7 941.458,1219.6 942.044,1220.57 942.631,1221.65 943.217,1221.56 943.804,1221.16 944.39,1223.36 944.976,1223.08 945.563,1223.89 946.149,1221.25 946.736,1221.13 947.322,1222.14 947.909,1223.01 948.495,1221.47 949.081,1221.34 949.668,1220.96 950.254,1219.5 950.841,1220.59 951.427,1220.6 952.013,1220.42 952.6,1220.28 953.186,1218.92 953.773,1220.13 954.359,1221.57 954.945,1220.45 955.532,1221.44 956.118,1221.37 956.705,1220.12 957.291,1222.12 957.878,1225.33 958.464,1227.36 959.05,1231.59 959.637,1228.49 960.223,1225.55 960.81,1223.77 961.396,1222.35 961.982,1219.74 962.569,1219.77 963.155,1218.57 963.742,1215.96 964.328,1220.74 964.915,1219.55 965.501,1219.23 966.087,1219.4 966.674,1220.46 967.26,1220.37 967.847,1219.11 968.433,1215.23 969.019,1214.12 969.606,1214.45 970.192,1216.75 970.779,1218.18 971.365,1219.08 971.951,1222.62 972.538,1220.9 973.124,1218.42 973.711,1218.17 974.297,1220.52 974.884,1219.23 975.47,1217.94 976.056,1214.44 976.643,1215.64 977.229,1218.11 977.816,1217.97 978.402,1217.8 978.988,1216.6 979.575,1213.16 980.161,1213.5 980.748,1211.5 981.334,1211.94 981.92,1211.13 982.507,1210.16 983.093,1209.32 983.68,1209.79 984.266,1210.03 984.853,1208.08 985.439,1209.64 986.025,1208.89 986.612,1207.99 987.198,1209.71 987.785,1211.33 988.371,1211.63 988.957,1209.5 989.544,1209.98 990.13,1215.18 990.717,1213.09 991.303,1212.16 991.889,1212.43 992.476,1211.45 993.062,1212.21 993.649,1211.39 994.235,1208.46 994.822,1209.04 995.408,1211.87 995.994,1212.11 996.581,1211.16 997.167,1211.45 997.754,1214.23 998.34,1216.77 998.926,1216.9 999.513,1220.34 1000.1,1220.23 1000.69,1220.39 1001.27,1220.3 1001.86,1220.36 1002.44,1218.98 1003.03,1224.61 1003.62,1225.17 1004.2,1222.47 1004.79,1225.77 1005.38,1226.48 1005.96,1223.46 1006.55,1222.13 1007.14,1220.75 1007.72,1218.24 1008.31,1219.21 1008.9,1219.13 1009.48,1220.18 1010.07,1221.19 1010.65,1221.08 1011.24,1219.87 1011.83,1224.69 1012.41,1223.33 1013,1225.51 1013.59,1224.04 1014.17,1225.04 1014.76,1223.51 1015.35,1223.2 1015.93,1220.53 1016.52,1220.57 1017.11,1222.83 1017.69,1222.41 1018.28,1224.36 1018.86,1221.29 1019.45,1222.2 1020.04,1220.91 1020.62,1219.44 1021.21,1221.63 1021.8,1220.2 1022.38,1221.24 1022.97,1221.22 1023.56,1221.09 1024.14,1220.74 1024.73,1221.65 1025.32,1221.32 1025.9,1221.31 1026.49,1218.46 1027.07,1218.45 1027.66,1218.49 1028.25,1219.74 1028.83,1219.78 1029.42,1221.03 1030.01,1218.64 1030.59,1220 1031.18,1219.83 1031.77,1218.53 1032.35,1217.22 1032.94,1216.25 1033.52,1217.64 1034.11,1217.83 1034.7,1216.51 1035.28,1215.45 1035.87,1213.2 1036.46,1213.19 1037.04,1212.45 1037.63,1211.56 1038.22,1214.18 1038.8,1215.67 1039.39,1219.53 1039.98,1219.29 1040.56,1218.97 1041.15,1218.88 1041.73,1217.92 1042.32,1217.78 1042.91,1216.46 1043.49,1217.91 1044.08,1217.73 1044.67,1215.45 1045.25,1216.86 1045.84,1217.08 1046.43,1215.99 1047.01,1213.86 1047.6,1214.03 1048.19,1215.5 1048.77,1215.83 1049.36,1215.79 1049.94,1215.85 1050.53,1215.84 1051.12,1213.65 1051.7,1215.08 1052.29,1216.13 1052.88,1215.07 1053.46,1215.31 1054.05,1216.69 1054.64,1214.34 1055.22,1213.35 1055.81,1219.51 1056.39,1219.41 1056.98,1218.09 1057.57,1218.05 1058.15,1216.78 1058.74,1216.81 1059.33,1215.66 1059.91,1214.42 1060.5,1213.27 1061.09,1213.51 1061.67,1213.62 1062.26,1215.27 1062.85,1214.37 1063.43,1212.25 1064.02,1212.52 1064.6,1211.5 1065.19,1213.86 1065.78,1213.97 1066.36,1217.65 1066.95,1218.85 1067.54,1218.83 1068.12,1220.87 1068.71,1219.47 1069.3,1220.62 1069.88,1219.17 1070.47,1220.19 1071.06,1219.92 1071.64,1221.03 1072.23,1219.6 1072.81,1220.73 1073.4,1220.64 1073.99,1219.15 1074.57,1219.27 1075.16,1220.36 1075.75,1219.56 1076.33,1219.65 1076.92,1222.13 1077.51,1223.21 1078.09,1225.24 1078.68,1225.82 1079.26,1225.33 1079.85,1224.86 1080.44,1224.54 1081.02,1220.73 1081.61,1220.69 1082.2,1218.16 1082.78,1216.75 1083.37,1217.7 1083.96,1217.6 1084.54,1219.84 1085.13,1218.53 1085.72,1218.34 1086.3,1219.53 1086.89,1220.6 1087.47,1219.38 1088.06,1219.51 1088.65,1218.38 1089.23,1218.4 1089.82,1219.67 1090.41,1218.46 1090.99,1219.72 1091.58,1220.79 1092.17,1220.74 1092.75,1220.54 1093.34,1221.51 1093.93,1221.28 1094.51,1223.57 1095.1,1222.16 1095.68,1221.85 1096.27,1220.35 1096.86,1220.38 1097.44,1219.11 1098.03,1220.25 1098.62,1219.99 1099.2,1222.26 1099.79,1221.82 1100.38,1217.95 1100.96,1219.22 1101.55,1217.98 1102.14,1220.24 1102.72,1221.11 1103.31,1219.61 1103.89,1219.55 1104.48,1220.54 1105.07,1220.15 1105.65,1216.49 1106.24,1218.75 1106.83,1218.62 1107.41,1219.81 1108,1220.71 1108.59,1220.49 1109.17,1221.29 1109.76,1221.02 1110.34,1219.57 1110.93,1218.23 1111.52,1219.34 1112.1,1219.33 1112.69,1219.35 1113.28,1220.33 1113.86,1221.31 1114.45,1218.49 1115.04,1218.26 1115.62,1218.42 1116.21,1217.16 1116.8,1218.23 1117.38,1218.21 1117.97,1218.33 1118.55,1217 1119.14,1216.91 1119.73,1216.57 1120.31,1219.35 1120.9,1222.92 1121.49,1222.54 1122.07,1223.3 1122.66,1221.79 1123.25,1221.39 1123.83,1219.83 1124.42,1217.1 1125.01,1219.43 1125.59,1217.15 1126.18,1219.48 1126.76,1218.32 1127.35,1218.35 1127.94,1216.82 1128.52,1214.32 1129.11,1213.43 1129.7,1210.35 1130.28,1210.59 1130.87,1210.87 1131.46,1211.22 1132.04,1212.77 1132.63,1213.27 1133.21,1213.44 1133.8,1213.38 1134.39,1210.14 1134.97,1210.77 1135.56,1209.78 1136.15,1209.04 1136.73,1209.66 1137.32,1209.04 1137.91,1210.71 1138.49,1210.87 1139.08,1210.09 1139.67,1208.31 1140.25,1208.76 1140.84,1207.95 1141.42,1208.63 1142.01,1207.72 1142.6,1209.24 1143.18,1207.43 1143.77,1208.07 1144.36,1211.07 1144.94,1211.36 1145.53,1210.82 1146.12,1211.32 1146.7,1212.75 1147.29,1214.24 1147.88,1215.28 1148.46,1215.43 1149.05,1216.45 1149.63,1216.31 1150.22,1215.47 1150.81,1214.49 1151.39,1216.96 1151.98,1215.8 1152.57,1218.28 1153.15,1218.07 1153.74,1218.02 1154.33,1214.48 1154.91,1214.87 1155.5,1216 1156.09,1215.07 1156.67,1213.05 1157.26,1213.32 1157.84,1214.76 1158.43,1214.93 1159.02,1217.43 1159.6,1217.16 1160.19,1216.21 1160.78,1217.6 1161.36,1217.56 1161.95,1217.67 1162.54,1220.03 1163.12,1220.05 1163.71,1221.18 1164.29,1219.76 1164.88,1218.69 1165.47,1218.67 1166.05,1219.9 1166.64,1220.95 1167.23,1219.38 1167.81,1219.26 1168.4,1220.57 1168.99,1221.56 1169.57,1220.27 1170.16,1219.07 1170.75,1216.63 1171.33,1217.97 1171.92,1216.6 1172.5,1216.88 1173.09,1216.77 1173.68,1215.71 1174.26,1215.96 1174.85,1216.18 1175.44,1211.37 1176.02,1209.28 1176.61,1209.44 1177.2,1209.6 1177.78,1206.75 1178.37,1206.21 1178.96,1206.76 1179.54,1206.44 1180.13,1206.88 1180.71,1206.19 1181.3,1208.13 1181.89,1208.72 1182.47,1210.52 1183.06,1210.98 1183.65,1213.86 1184.23,1213.82 1184.82,1213.75 1185.41,1213.95 1185.99,1212.83 1186.58,1211.59 1187.16,1211.89 1187.75,1212.16 1188.34,1212.62 1188.92,1215.49 1189.51,1215.46 1190.1,1214.27 1190.68,1213.25 1191.27,1212.12 1191.86,1215.96 1192.44,1214.76 1193.03,1214.98 1193.62,1214.1 1194.2,1217.83 1194.79,1217.98 1195.37,1216.88 1195.96,1217.88 1196.55,1219.26 1197.13,1220.28 1197.72,1222.59 1198.31,1223.42 1198.89,1225.7 1199.48,1224.02 1200.07,1222.54 1200.65,1224.2 1201.24,1227.42 1201.83,1224.3 1202.41,1223.65 1203,1222.11 1203.58,1222.95 1204.17,1222.49 1204.76,1222.13 1205.34,1223.04 1205.93,1221.85 1206.52,1222.67 1207.1,1223.42 1207.69,1223.14 1208.28,1224.08 1208.86,1222.51 1209.45,1222.26 1210.03,1221.04 1210.62,1223.22 1211.21,1220.62 1211.79,1221.75 1212.38,1225.05 1212.97,1223.44 1213.55,1222.99 1214.14,1222.45 1214.73,1220.96 1215.31,1220.92 1215.9,1219.51 1216.49,1218.34 1217.07,1216.99 1217.66,1215.74 1218.24,1215.74 1218.83,1217.19 1219.42,1219.67 1220,1220.8 1220.59,1220.55 1221.18,1222.78 1221.76,1224.92 1222.35,1224.4 1222.94,1223.75 1223.52,1226.56 1224.11,1227.26 1224.7,1227.8 1225.28,1225.88 1225.87,1225.26 1226.45,1224.81 1227.04,1220.84 1227.63,1219.37 1228.21,1221.52 1228.8,1222.56 1229.39,1222.11 1229.97,1222.95 1230.56,1223.46 1231.15,1224.34 1231.73,1222.9 1232.32,1222.46 1232.91,1223.56 1233.49,1224.25 1234.08,1225.13 1234.66,1226.93 1235.25,1226.54 1235.84,1226.28 1236.42,1225.72 1237.01,1225.23 1237.6,1227.04 1238.18,1227.25 1238.77,1226.55 1239.36,1223.75 1239.94,1221.1 1240.53,1221.93 1241.11,1221.41 1241.7,1224.59 1242.29,1224.44 1242.87,1221.76 1243.46,1219.16 1244.05,1218.94 1244.63,1219.83 1245.22,1214.6 1245.81,1214.89 1246.39,1213.75 1246.98,1216.34 1247.57,1215.28 1248.15,1215.43 1248.74,1216.51 1249.32,1216.58 1249.91,1217.88 1250.5,1216.43 1251.08,1217.4 1251.67,1218.78 1252.26,1216.19 1252.84,1216.12 1253.43,1216.35 1254.02,1217.4 1254.6,1217.41 1255.19,1216.07 1255.78,1215.87 1256.36,1214.59 1256.95,1213.7 1257.53,1214.09 1258.12,1214.14 1258.71,1214.36 1259.29,1213.03 1259.88,1212.24 1260.47,1210.34 1261.05,1211.86 1261.64,1211.94 1262.23,1212.21 1262.81,1209.98 1263.4,1210.07 1263.98,1209.19 1264.57,1209.93 1265.16,1212.79 1265.74,1213 1266.33,1217.9 1266.92,1215.21 1267.5,1213.11 1268.09,1214.5 1268.68,1216.8 1269.26,1219.13 1269.85,1221.36 1270.44,1221.25 1271.02,1219.69 1271.61,1217.19 1272.19,1214.62 1272.78,1214.48 1273.37,1214.44 1273.95,1213.26 1274.54,1213.34 1275.13,1213.6 1275.71,1213.72 1276.3,1214.96 1276.89,1214.77 1277.47,1215.2 1278.06,1214.08 1278.65,1214.1 1279.23,1213.19 1279.82,1213.41 1280.4,1213.55 1280.99,1214.77 1281.58,1213.84 1282.16,1213.89 1282.75,1210.48 1283.34,1208.51 1283.92,1208.76 1284.51,1208 1285.1,1209.81 1285.68,1208.85 1286.27,1209.43 1286.86,1209.79 1287.44,1210.35 1288.03,1210.78 1288.61,1210.07 1289.2,1208.98 1289.79,1208.29 1290.37,1208.69 1290.96,1209.02 1291.55,1209.16 1292.13,1209.36 1292.72,1208.87 1293.31,1208.25 1293.89,1205.31 1294.48,1205.95 1295.06,1206.62 1295.65,1206.02 1296.24,1206.51 1296.82,1204.81 1297.41,1208.03 1298,1207.37 1298.58,1210.31 1299.17,1207.24 1299.76,1209.08 1300.34,1211.9 1300.93,1212.16 1301.52,1215.03 1302.1,1212.73 1302.69,1213.08 1303.27,1213.56 1303.86,1214.93 1304.45,1215.09 1305.03,1216.34 1305.62,1214.03 1306.21,1217.83 1306.79,1219.32 1307.38,1219.29 1307.97,1216.86 1308.55,1215.5 1309.14,1214.33 1309.73,1213.47 1310.31,1213.91 1310.9,1213.06 1311.48,1214.54 1312.07,1214.7 1312.66,1214.75 1313.24,1214.98 1313.83,1215 1314.42,1217.31 1315,1217.23 1315.59,1217.15 1316.18,1218.33 1316.76,1218.41 1317.35,1214.91 1317.93,1217.59 1318.52,1218.88 1319.11,1221.07 1319.69,1222.02 1320.28,1221.58 1320.87,1222.58 1321.45,1222.23 1322.04,1219.59 1322.63,1219.38 1323.21,1219.4 1323.8,1216.86 1324.39,1215.55 1324.97,1216.8 1325.56,1217 1326.14,1217.25 1326.73,1216.34 1327.32,1219 1327.9,1218.87 1328.49,1218.93 1329.08,1219.62 1329.66,1220.8 1330.25,1221.66 1330.84,1222.48 1331.42,1220.09 1332.01,1220.04 1332.6,1218.47 1333.18,1219.32 1333.77,1220.6 1334.35,1221.68 1334.94,1221.45 1335.53,1222.44 1336.11,1223.26 1336.7,1223.03 1337.29,1221.59 1337.87,1220.04 1338.46,1221.06 1339.05,1224.02 1339.63,1223.57 1340.22,1223.19 1340.8,1222.98 1341.39,1222.52 1341.98,1222.58 1342.56,1223.67 1343.15,1223.38 1343.74,1221.8 1344.32,1221.59 1344.91,1223.48 1345.5,1221.95 1346.08,1217.89 1346.67,1221.32 1347.26,1219.71 1347.84,1217.21 1348.43,1217.26 1349.01,1214.64 1349.6,1213.5 1350.19,1209.79 1350.77,1211.37 1351.36,1211.54 1351.95,1212.94 1352.53,1211.82 1353.12,1210.97 1353.71,1211.39 1354.29,1212.83 1354.88,1215.55 1355.47,1213.4 1356.05,1210.04 1356.64,1210.59 1357.22,1212.09 1357.81,1213.47 1358.4,1214.52 1358.98,1217.03 1359.57,1220.4 1360.16,1220.23 1360.74,1221.06 1361.33,1219.64 1361.92,1220.69 1362.5,1218.96 1363.09,1220.21 1363.68,1217.54 1364.26,1215.04 1364.85,1216.36 1365.43,1218.66 1366.02,1216.21 1366.61,1215.04 1367.19,1215.02 1367.78,1215.13 1368.37,1215.28 1368.95,1211.75 1369.54,1211.95 1370.13,1212.24 1370.71,1212.31 1371.3,1210.41 1371.88,1209.56 1372.47,1211.19 1373.06,1210.39 1373.64,1208.44 1374.23,1210.29 1374.82,1210.91 1375.4,1209.99 1375.99,1210.59 1376.58,1212.13 1377.16,1210.18 1377.75,1214.09 1378.34,1213.3 1378.92,1213.61 1379.51,1213.96 1380.09,1214.42 1380.68,1216.05 1381.27,1216.27 1381.85,1215.09 1382.44,1212.54 1383.03,1212.87 1383.61,1211.77 1384.2,1209.8 1384.79,1210.32 1385.37,1210.55 1385.96,1210.59 1386.55,1214.47 1387.13,1214.61 1387.72,1212.12 1388.3,1212.12 1388.89,1212.27 1389.48,1211.46 1390.06,1210.75 1390.65,1209.88 1391.24,1210.28 1391.82,1211.9 1392.41,1212.18 1393,1212.39 1393.58,1214.84 1394.17,1215.25 1394.75,1216.47 1395.34,1219.06 1395.93,1219.12 1396.51,1218.98 1397.1,1220.01 1397.69,1220.18 1398.27,1218.72 1398.86,1216.32 1399.45,1218.78 1400.03,1219.1 1400.62,1220.05 1401.21,1221.21 1401.79,1220.99 1402.38,1220.78 1402.96,1220.56 1403.55,1220.38 1404.14,1219.14 1404.72,1218.85 1405.31,1219.75 1405.9,1218.46 1406.48,1217.12 1407.07,1218.52 1407.66,1218.47 1408.24,1217.3 1408.83,1218.49 1409.42,1217.18 1410,1217.14 1410.59,1218.64 1411.17,1219.81 1411.76,1222.13 1412.35,1221.9 1412.93,1220.32 1413.52,1221.48 1414.11,1220.12 1414.69,1219.8 1415.28,1219.62 1415.87,1218.3 1416.45,1215.86 1417.04,1217.08 1417.63,1219.37 1418.21,1219.38 1418.8,1222.84 1419.38,1223.84 1419.97,1224.6 1420.56,1224.02 1421.14,1224.82 1421.73,1226.63 1422.32,1225.01 1422.9,1225.77 1423.49,1226.53 1424.08,1228.23 1424.66,1226.47 1425.25,1226.16 1425.83,1226.79 1426.42,1226.05 1427.01,1225.67 1427.59,1224.04 1428.18,1224.84 1428.77,1222.01 1429.35,1223 1429.94,1222.67 1430.53,1222.17 1431.11,1219.55 1431.7,1214.54 1432.29,1213.2 1432.87,1212.15 1433.46,1210.24 1434.04,1213.03 1434.63,1211.02 1435.22,1210.15 1435.8,1211.88 1436.39,1214.62 1436.98,1213.4 1437.56,1214.65 1438.15,1216.04 1438.74,1215.97 1439.32,1213.88 1439.91,1214.05 1440.5,1215.51 1441.08,1215.62 1441.67,1216.72 1442.25,1216.91 1442.84,1219.11 1443.43,1219.02 1444.01,1217.85 1444.6,1217.52 1445.19,1217.61 1445.77,1218.71 1446.36,1217.34 1446.95,1214.82 1447.53,1216.05 1448.12,1213.71 1448.7,1210.1 1449.29,1210.44 1449.88,1212.11 1450.46,1210.1 1451.05,1209.32 1451.64,1209.7 1452.22,1208.94 1452.81,1206.9 1453.4,1209.68 1453.98,1212.38 1454.57,1214.06 1455.16,1216.48 1455.74,1217.59 1456.33,1216.41 1456.91,1217.46 1457.5,1216.28 1458.09,1219.06 1458.67,1218.99 1459.26,1218.87 1459.85,1218.99 1460.43,1217.8 1461.02,1219.18 1461.61,1220.1 1462.19,1218.67 1462.78,1222.02 1463.37,1220.64 1463.95,1218.13 1464.54,1218.05 1465.12,1220.46 1465.71,1219.46 1466.3,1222.99 1466.88,1221.38 1467.47,1218.86 1468.06,1219.85 1468.64,1218.69 1469.23,1217.41 1469.82,1219.66 1470.4,1218.42 1470.99,1217.3 1471.57,1218.5 1472.16,1218.58 1472.75,1218.36 1473.33,1220.81 1473.92,1221.81 1474.51,1221.7 1475.09,1222.74 1475.68,1218.88 1476.27,1218.51 1476.85,1219.54 1477.44,1223.97 1478.03,1223.54 1478.61,1224.37 1479.2,1223.98 1479.78,1223.56 1480.37,1221.97 1480.96,1222.88 1481.54,1221.42 1482.13,1221.22 1482.72,1224.34 1483.3,1224.04 1483.89,1220.06 1484.48,1220.96 1485.06,1220.71 1485.65,1220.42 1486.24,1221.44 1486.82,1222.4 1487.41,1222.25 1487.99,1222.24 1488.58,1221.91 1489.17,1220.42 1489.75,1219.03 1490.34,1220.04 1490.93,1220.13 1491.51,1217.42 1492.1,1215.04 1492.69,1213.69 1493.27,1213.9 1493.86,1211.67 1494.45,1211.95 1495.03,1208.49 1495.62,1210.1 1496.2,1210.52 1496.79,1210.76 1497.38,1209.78 1497.96,1214.03 1498.55,1214.45 1499.14,1215.81 1499.72,1218.29 1500.31,1217.14 1500.9,1217.34 1501.48,1217.1 1502.07,1214.58 1502.65,1214.73 1503.24,1214.71 1503.83,1212.31 1504.41,1212.47 1505,1212.8 1505.59,1215.4 1506.17,1214.11 1506.76,1215.13 1507.35,1215.19 1507.93,1215.2 1508.52,1216.51 1509.11,1218.85 1509.69,1217.33 1510.28,1218.64 1510.86,1217.43 1511.45,1215.18 1512.04,1214.04 1512.62,1217.8 1513.21,1216.42 1513.8,1216.49 1514.38,1215.31 1514.97,1212.99 1515.56,1212.06 1516.14,1211.19 1516.73,1212.75 1517.32,1214.4 1517.9,1213.42 1518.49,1212.28 1519.07,1212.67 1519.66,1213.97 1520.25,1215.45 1520.83,1215.51 1521.42,1214.48 1522.01,1215.72 1522.59,1216.8 1523.18,1217.98 1523.77,1219.2 1524.35,1216.81 1524.94,1216.65 1525.52,1216.8 1526.11,1215.71 1526.7,1216.89 1527.28,1215.87 1527.87,1216.18 1528.46,1216.29 1529.04,1216.28 1529.63,1212.89 1530.22,1214.45 1530.8,1214.82 1531.39,1216.31 1531.98,1216.24 1532.56,1220.04 1533.15,1219.73 1533.73,1216.1 1534.32,1217.21 1534.91,1217.28 1535.49,1216.17 1536.08,1216.05 1536.67,1217.18 1537.25,1219.64 1537.84,1218.43 1538.43,1219.33 1539.01,1219.34 1539.6,1220.38 1540.19,1221.48 1540.77,1219.98 1541.36,1218.88 1541.94,1218.8 1542.53,1218.65 1543.12,1218.77 1543.7,1219.87 1544.29,1220.81 1544.88,1219.26 1545.46,1220.41 1546.05,1219.14 1546.64,1219.92 1547.22,1221.29 1547.81,1218.68 1548.4,1215.06 1548.98,1214.19 1549.57,1214.22 1550.15,1216.77 1550.74,1214.51 1551.33,1213.08 1551.91,1209.44 1552.5,1212.31 1553.09,1212.59 1553.67,1211.79 1554.26,1212.22 1554.85,1213.95 1555.43,1212.68 1556.02,1209.28 1556.6,1210.96 1557.19,1212.69 1557.78,1214.1 1558.36,1215.34 1558.95,1215.48 1559.54,1219.08 1560.12,1217.75 1560.71,1217.85 1561.3,1216.39 1561.88,1216.42 1562.47,1219.85 1563.06,1220.99 1563.64,1226.66 1564.23,1226.25 1564.81,1224.38 1565.4,1224.97 1565.99,1223.16 1566.57,1220.44 1567.16,1221.32 1567.75,1216.28 1568.33,1214.97 1568.92,1216.04 1569.51,1218.08 1570.09,1217.96 1570.68,1215.44 1571.27,1214.3 1571.85,1215.43 1572.44,1214.22 1573.02,1216.75 1573.61,1216.7 1574.2,1218.06 1574.78,1216.97 1575.37,1217.05 1575.96,1216.73 1576.54,1217.08 1577.13,1218.16 1577.72,1220.42 1578.3,1220.25 1578.89,1221.17 1579.47,1218.61 1580.06,1219.67 1580.65,1216.13 1581.23,1217.29 1581.82,1217.48 1582.41,1222.09 1582.99,1223.77 1583.58,1222.11 1584.17,1218.24 1584.75,1216.93 1585.34,1215.86 1585.93,1214.78 1586.51,1214.93 1587.1,1217.54 1587.68,1215.29 1588.27,1219.04 1588.86,1220.06 1589.44,1217.61 1590.03,1217.77 1590.62,1221.01 1591.2,1222.32 1591.79,1223.19 1592.38,1221.78 1592.96,1222.69 1593.55,1219.93 1594.14,1218.76 1594.72,1216.52 1595.31,1216.4 1595.89,1215.42 1596.48,1216.91 1597.07,1215.92 1597.65,1216.06 1598.24,1219.54 1598.83,1221.45 1599.41,1222.59 1600,1221.41 1600.59,1222.43 1601.17,1221.04 1601.76,1221.72 1602.34,1220.16 1602.93,1219.78 1603.52,1218.51 1604.1,1217.13 1604.69,1217.03 1605.28,1218.17 1605.86,1215.67 1606.45,1216.98 1607.04,1216.77 1607.62,1213.12 1608.21,1213.13 1608.8,1213.38 1609.38,1214.83 1609.97,1217.53 1610.55,1217.72 1611.14,1218.89 1611.73,1218.73 1612.31,1219.92 1612.9,1221.03 1613.49,1218.51 1614.07,1219.6 1614.66,1219.55 1615.25,1218.22 1615.83,1216.67 1616.42,1218.06 1617.01,1219.06 1617.59,1216.57 1618.18,1215.44 1618.76,1215.92 1619.35,1218.53 1619.94,1217.29 1620.52,1215.92 1621.11,1215.83 1621.7,1214.64 1622.28,1216.19 1622.87,1216.17 1623.46,1215.02 1624.04,1215.09 1624.63,1214.01 1625.22,1210.56 1625.8,1213.12 1626.39,1213.44 1626.97,1215.88 1627.56,1212.17 1628.15,1210.18 1628.73,1209.33 1629.32,1209.89 1629.91,1211.35 1630.49,1216.48 1631.08,1215.43 1631.67,1216.68 1632.25,1216.91 1632.84,1215.76 1633.42,1214.57 1634.01,1213.55 1634.6,1214 1635.18,1214.16 1635.77,1215.34 1636.36,1216.59 1636.94,1215.64 1637.53,1214.61 1638.12,1215.86 1638.7,1215.78 1639.29,1215.8 1639.88,1220.62 1640.46,1220.45 1641.05,1219.31 1641.63,1218.17 1642.22,1218.24 1642.81,1217.21 1643.39,1218.38 1643.98,1218.33 1644.57,1215.89 1645.15,1216 1645.74,1216.07 1646.33,1216.12 1646.91,1216.22 1647.5,1214.11 1648.09,1212.01 1648.67,1212.23 1649.26,1212.47 1649.84,1212.71 1650.43,1215.35 1651.02,1214.36 1651.6,1215.88 1652.19,1214.78 1652.78,1216.26 1653.36,1216.45 1653.95,1216.64 1654.54,1218.24 1655.12,1216.95 1655.71,1215.91 1656.29,1217.23 1656.88,1217.42 1657.47,1218.71 1658.05,1217.63 1658.64,1217.54 1659.23,1216.32 1659.81,1216.37 1660.4,1216.52 1660.99,1215.18 1661.57,1216.62 1662.16,1219.08 1662.75,1218.84 1663.33,1218.78 1663.92,1217.29 1664.5,1217.49 1665.09,1217.19 1665.68,1217.51 1666.26,1218.9 1666.85,1222.39 1667.44,1221.12 1668.02,1218.87 1668.61,1218.8 1669.2,1218.51 1669.78,1216.11 1670.37,1218.43 1670.96,1218.15 1671.54,1221.56 1672.13,1217.75 1672.71,1220.22 1673.3,1221.45 1673.89,1223.75 1674.47,1224.45 1675.06,1222.99 1675.65,1223.64 1676.23,1223.32 1676.82,1224.31 1677.41,1221.6 1677.99,1221.19 1678.58,1222.07 1679.17,1226.81 1679.75,1228.69 1680.34,1228 1680.92,1225.03 1681.51,1221.13 1682.1,1225.7 1682.68,1226.54 1683.27,1224.5 1683.86,1225.35 1684.44,1222.68 1685.03,1220.22 1685.62,1218.9 1686.2,1217.36 1686.79,1217.1 1687.37,1215.98 1687.96,1212.51 1688.55,1212.72 1689.13,1210.67 1689.72,1211.18 1690.31,1211.55 1690.89,1214.29 1691.48,1215.53 1692.07,1216.52 1692.65,1213.84 1693.24,1214.13 1693.83,1211.65 1694.41,1210.7 1695,1209.8 1695.58,1208.76 1696.17,1211.65 1696.76,1209.55 1697.34,1209.81 1697.93,1208.72 1698.52,1210.35 1699.1,1210.87 1699.69,1209.86 1700.28,1211.57 1700.86,1211.86 1701.45,1213.43 1702.04,1214.62 1702.62,1215.96 1703.21,1213.72 1703.79,1212.61 1704.38,1212.85 1704.97,1215.31 1705.55,1216.62 1706.14,1218.87 1706.73,1218.69 1707.31,1218.47 1707.9,1220.61 1708.49,1220.31 1709.07,1218.73 1709.66,1216.22 1710.24,1220.77 1710.83,1220.66 1711.42,1220.64 1712,1219.29 1712.59,1218.01 1713.18,1216.78 1713.76,1219.37 1714.35,1218.14 1714.94,1219.3 1715.52,1219.32 1716.11,1219.35 1716.7,1219.35 1717.28,1220.31 1717.87,1217.87 1718.45,1217.75 1719.04,1216.41 1719.63,1215.03 1720.21,1216.36 1720.8,1217.3 1721.39,1217.36 1721.97,1217.37 1722.56,1216.02 1723.15,1213.71 1723.73,1212.72 1724.32,1214.98 1724.91,1213.89 1725.49,1211.32 1726.08,1210.48 1726.66,1210.61 1727.25,1211 1727.84,1211.29 1728.42,1211.29 1729.01,1212.61 1729.6,1213.02 1730.18,1213.05 1730.77,1212.08 1731.36,1212.39 1731.94,1211.63 1732.53,1210.41 1733.11,1210.69 1733.7,1211.09 1734.29,1211.54 1734.87,1213.07 1735.46,1215.7 1736.05,1214.69 1736.63,1212.29 1737.22,1212.47 1737.81,1214.01 1738.39,1213.11 1738.98,1213.22 1739.57,1213.5 1740.15,1213.83 1740.74,1212.94 1741.32,1216.8 1741.91,1219.45 1742.5,1221.76 1743.08,1220.47 1743.67,1218.97 1744.26,1217.78 1744.84,1216.67 1745.43,1215.53 1746.02,1214.63 1746.6,1215.77 1747.19,1216.12 1747.78,1214.83 1748.36,1216.22 1748.95,1217.46 1749.53,1218.86 1750.12,1222.3 1750.71,1219.63 1751.29,1218.48 1751.88,1218.54 1752.47,1218.26 1753.05,1219.32 1753.64,1221.69 1754.23,1220.18 1754.81,1222.5 1755.4,1221.04 1755.99,1222.98 1756.57,1222.75 1757.16,1224.64 1757.74,1225.4 1758.33,1223.71 1758.92,1224.47 1759.5,1225.24 1760.09,1225.92 1760.68,1227.99 1761.26,1226.31 1761.85,1229.03 1762.44,1227.24 1763.02,1224.55 1763.61,1225.22 1764.19,1225.9 1764.78,1222.04 1765.37,1219.56 1765.95,1220.58 1766.54,1219.37 1767.13,1218.04 1767.71,1219.24 1768.3,1218.21 1768.89,1218.14 1769.47,1214.36 1770.06,1212.12 1770.65,1215.8 1771.23,1214.63 1771.82,1214.55 1772.4,1213.4 1772.99,1213.43 1773.58,1211.16 1774.16,1211.21 1774.75,1212.71 1775.34,1212.6 1775.92,1212.81 1776.51,1213.01 1777.1,1213.09 1777.68,1213.34 1778.27,1213.58 1778.86,1213.68 1779.44,1211.3 1780.03,1213.05 1780.61,1214.4 1781.2,1214.74 1781.79,1217.04 1782.37,1217.05 1782.96,1217.03 1783.55,1217.16 1784.13,1220.57 1784.72,1220.53 1785.31,1220.29 1785.89,1221.26 1786.48,1218.64 1787.06,1219.63 1787.65,1219.62 1788.24,1218.32 1788.82,1218.25 1789.41,1218.2 1790,1217.04 1790.58,1220.6 1791.17,1219.08 1791.76,1218.95 1792.34,1218.85 1792.93,1219.66 1793.52,1216.93 1794.1,1216.89 1794.69,1216.71 1795.27,1218.97 1795.86,1220.08 1796.45,1217.63 1797.03,1216.33 1797.62,1216.24 1798.21,1215.26 1798.79,1216.56 1799.38,1217.81 1799.97,1221.26 1800.55,1222.31 1801.14,1219.68 1801.73,1220.67 1802.31,1221.4 1802.9,1217.73 1803.48,1217.81 1804.07,1219.05 1804.66,1220.01 1805.24,1221.3 1805.83,1221.04 1806.42,1219.92 1807,1218.42 1807.59,1219.57 1808.18,1219.56 1808.76,1220.6 1809.35,1221.71 1809.94,1222.63 1810.52,1222.49 1811.11,1223.17 1811.69,1223.95 1812.28,1223.34 1812.87,1220.31 1813.45,1217.87 1814.04,1214.23 1814.63,1215.79 1815.21,1215.94 1815.8,1218.48 1816.39,1218.4 1816.97,1219.71 1817.56,1220.68 1818.14,1220.45 1818.73,1215.88 1819.32,1214.89 1819.9,1216.02 1820.49,1217.29 1821.08,1215.12 1821.66,1217.65 1822.25,1213.85 1822.84,1212.73 1823.42,1213.87 1824.01,1213.82 1824.6,1215.1 1825.18,1214.98 1825.77,1216.29 1826.35,1218.82 1826.94,1219.77 1827.53,1218.54 1828.11,1217.25 1828.7,1220.99 1829.29,1218.64 1829.87,1219.83 1830.46,1222.03 1831.05,1223 1831.63,1223.99 1832.22,1223.51 1832.81,1223.2 1833.39,1222.77 1833.98,1222.47 1834.56,1220.96 1835.15,1219.59 1835.74,1219.5 1836.32,1221.84 1836.91,1220.44 1837.5,1221.34 1838.08,1224.77 1838.67,1223.19 1839.26,1221.79 1839.84,1218.93 1840.43,1218.81 1841.01,1216.61 1841.6,1216.15 1842.19,1214.88 1842.77,1215.09 1843.36,1215.28 1843.95,1217.58 1844.53,1218.37 1845.12,1218.33 1845.71,1218.21 1846.29,1219.35 1846.88,1220.34 1847.47,1220.26 1848.05,1217.66 1848.64,1215.39 1849.22,1215.45 1849.81,1215.27 1850.4,1215.32 1850.98,1214.25 1851.57,1214.32 1852.16,1215.44 1852.74,1215.55 1853.33,1214.39 1853.92,1213.05 1854.5,1213.15 1855.09,1211.04 1855.68,1210.17 1856.26,1210.47 1856.85,1206.03 1857.43,1205.27 1858.02,1204.55 1858.61,1206.47 1859.19,1206.08 1859.78,1207.96 1860.37,1209.63 1860.95,1213.59 1861.54,1214.73 1862.13,1213.53 1862.71,1213.6 1863.3,1210.41 1863.88,1211.81 1864.47,1213.03 1865.06,1217.91 1865.64,1217.78 1866.23,1215.32 1866.82,1214.11 1867.4,1215.35 1867.99,1214.29 1868.58,1212.15 1869.16,1211.32 1869.75,1212.65 1870.34,1215.21 1870.92,1215.37 1871.51,1215.45 1872.09,1213.22 1872.68,1213.46 1873.27,1215.21 1873.85,1216.58 1874.44,1215.35 1875.03,1216.59 1875.61,1215.1 1876.2,1218.67 1876.79,1219.84 1877.37,1218.31 1877.96,1218.18 1878.55,1219.17 1879.13,1219.02 1879.72,1221.07 1880.3,1219.63 1880.89,1220.71 1881.48,1220.6 1882.06,1216.69 1882.65,1217.85 1883.24,1221.12 1883.82,1221.88 1884.41,1221.56 1885,1221.29 1885.58,1222.21 1886.17,1223.07 1886.76,1223.64 1887.34,1223.53 1887.93,1222.03 1888.51,1220.68 1889.1,1222.83 1889.69,1221.36 1890.27,1220.99 1890.86,1219.65 1891.45,1218.46 1892.03,1218.4 1892.62,1219.34 1893.21,1216.84 1893.79,1219.02 1894.38,1217.72 1894.96,1217.64 1895.55,1217.56 1896.14,1217.58 1896.72,1218.76 1897.31,1220 1897.9,1220.95 1898.48,1220.77 1899.07,1221.95 1899.66,1221.45 1900.24,1219.95 1900.83,1216.38 1901.42,1215.05 1902,1217.63 1902.59,1214.16 1903.17,1215.58 1903.76,1214.27 1904.35,1216.98 1904.93,1216.95 1905.52,1215.96 1906.11,1213.63 1906.69,1215.95 1907.28,1215.97 1907.87,1214.68 1908.45,1215.9 1909.04,1218.41 1909.63,1220.7 1910.21,1218.04 1910.8,1216.94 1911.38,1218.23 1911.97,1220.43 1912.56,1217.93 1913.14,1217.85 1913.73,1216.62 1914.32,1215.51 1914.9,1216.93 1915.49,1218.01 1916.08,1216.83 1916.66,1217.79 1917.25,1217.69 1917.83,1218.66 1918.42,1220.92 1919.01,1219.43 1919.59,1220.25 1920.18,1220.97 1920.77,1219.53 1921.35,1216.88 1921.94,1215.84 1922.53,1216.04 1923.11,1213.58 1923.7,1213.75 1924.29,1214.95 1924.87,1214.96 1925.46,1214.92 1926.04,1212.61 1926.63,1210.35 1927.22,1210.91 1927.8,1211.37 1928.39,1210.63 1928.98,1213.38 1929.56,1212.4 1930.15,1213.93 1930.74,1215.16 1931.32,1214.24 1931.91,1213.51 1932.5,1212.61 1933.08,1214.07 1933.67,1210.77 1934.25,1210.04 1934.84,1210.45 1935.43,1208.68 1936.01,1210.57 1936.6,1210.79 1937.19,1211.23 1937.77,1212.69 1938.36,1211.7 1938.95,1210.71 1939.53,1209.83 1940.12,1207.88 1940.71,1208.39 1941.29,1210.26 1941.88,1209.46 1942.46,1209.92 1943.05,1208.87 1943.64,1209.21 1944.22,1208.84 1944.81,1208.17 1945.4,1208.67 1945.98,1210.21 1946.57,1210.97 1947.16,1212.63 1947.74,1215.2 1948.33,1215.46 1948.91,1214.43 1949.5,1214.59 1950.09,1215.85 1950.67,1216.22 1951.26,1218.82 1951.85,1216.47 1952.43,1216.83 1953.02,1216.88 1953.61,1219.33 1954.19,1218.12 1954.78,1216.94 1955.37,1218.31 1955.95,1217.07 1956.54,1215.97 1957.12,1215.03 1957.71,1214.1 1958.3,1216.85 1958.88,1218.17 1959.47,1219.22 1960.06,1219.09 1960.64,1222.56 1961.23,1222.43 1961.82,1220.98 1962.4,1221.99 1962.99,1220.74 1963.58,1220.7 1964.16,1219.4 1964.75,1220.67 1965.33,1220.51 1965.92,1218.85 1966.51,1218.8 1967.09,1218.88 1967.68,1218.92 1968.27,1215.24 1968.85,1214.1 1969.44,1215.47 1970.03,1214.39 1970.61,1213.29 1971.2,1213.46 1971.78,1215.01 1972.37,1212.8 1972.96,1214.22 1973.54,1215.3 1974.13,1215.21 1974.72,1216.73 1975.3,1219.05 1975.89,1217.97 1976.48,1218.06 1977.06,1218.05 1977.65,1220.32 1978.24,1220.05 1978.82,1215.24 1979.41,1216.53 1979.99,1216.64 1980.58,1216.6 1981.17,1217.6 1981.75,1218.48 1982.34,1218.26 1982.93,1216.98 1983.51,1218.23 1984.1,1218.16 1984.69,1220.51 1985.27,1218.95 1985.86,1220.19 1986.45,1221.92 1987.03,1220.3 1987.62,1218.47 1988.2,1218.23 1988.79,1215.94 1989.38,1214.82 1989.96,1213.76 1990.55,1213.92 1991.14,1213.03 1991.72,1215.67 1992.31,1217.88 1992.9,1220.57 1993.48,1218.1 1994.07,1222.72 1994.65,1224.8 1995.24,1227.98 1995.83,1226.21 1996.41,1226.94 1997,1227.52 1997.59,1226.9 1998.17,1223.97 1998.76,1223.54 1999.35,1219.59 1999.93,1220.81 2000.52,1219.45 2001.11,1220.5 2001.69,1214.37 2002.28,1214.32 2002.86,1211.87 2003.45,1214.45 2004.04,1213.39 2004.62,1217.13 2005.21,1215.89 2005.8,1214.04 2006.38,1211.59 2006.97,1213.01 2007.56,1216.82 2008.14,1216.71 2008.73,1216.43 2009.32,1215.3 2009.9,1215.4 2010.49,1215.63 2011.07,1215.52 2011.66,1213.12 2012.25,1213.16 2012.83,1212.11 2013.42,1213.42 2014.01,1213.74 2014.59,1214.25 2015.18,1214.27 2015.77,1213.36 2016.35,1212.41 2016.94,1213.83 2017.53,1212.01 2018.11,1212.37 2018.7,1213.01 2019.28,1214.34 2019.87,1213.26 2020.46,1211.21 2021.04,1210.16 2021.63,1208.31 2022.22,1208.79 2022.8,1210.22 2023.39,1210.67 2023.98,1211.08 2024.56,1211.44 2025.15,1211.63 2025.73,1206.97 2026.32,1206.14 2026.91,1205.45 2027.49,1205.21 2028.08,1204.77 2028.67,1204.17 2029.25,1204.78 2029.84,1206.61 2030.43,1208.37 2031.01,1208.9 2031.6,1210.5 2032.19,1209.41 2032.77,1209.61 2033.36,1211.24 2033.94,1210.52 2034.53,1212.05 2035.12,1215.71 2035.7,1215.83 2036.29,1216.05 2036.88,1214.9 2037.46,1215.3 2038.05,1215.48 2038.64,1215.58 2039.22,1214.44 2039.81,1216.76 2040.4,1217.71 2040.98,1218.79 2041.57,1218.59 2042.15,1218.31 2042.74,1217.06 2043.33,1217.21 2043.91,1218.5 2044.5,1216.16 2045.09,1218.51 2045.67,1219.6 2046.26,1220.93 2046.85,1218.16 2047.43,1218.11 2048.02,1219.34 2048.6,1218.07 2049.19,1216.78 2049.78,1216.73 2050.36,1218.19 2050.95,1218.31 2051.54,1219.42 2052.12,1219.64 2052.71,1221 2053.3,1223.1 2053.88,1224.09 2054.47,1223.47 2055.06,1224.11 2055.64,1223.87 2056.23,1225.75 2056.81,1226.45 2057.4,1227.1 2057.99,1225.11 2058.57,1224.87 2059.16,1223.5 2059.75,1223.33 2060.33,1222.99 2060.92,1225.19 2061.51,1225.77 2062.09,1224.39 2062.68,1222.82 2063.27,1221.21 2063.85,1222 2064.44,1221.78 2065.02,1221.53 2065.61,1220.17 2066.2,1218.91 2066.78,1220.03 2067.37,1220.76 2067.96,1219.29 2068.54,1219.12 2069.13,1219.15 2069.72,1220.19 2070.3,1219.11 2070.89,1218.06 2071.48,1216.81 2072.06,1215.36 2072.65,1213.13 2073.23,1214.43 2073.82,1214.53 2074.41,1214.76 2074.99,1215.97 2075.58,1215.92 2076.17,1217.29 2076.75,1218.22 2077.34,1218.24 2077.93,1218.5 2078.51,1219.51 2079.1,1220.75 2079.68,1219.52 2080.27,1219.5 2080.86,1219.36 2081.44,1219.27 2082.03,1217.95 2082.62,1216.72 2083.2,1216.73 2083.79,1215.58 2084.38,1216.88 2084.96,1212.31 2085.55,1213.87 2086.14,1212.83 2086.72,1212.76 2087.31,1213 2087.89,1214.44 2088.48,1214.74 2089.07,1214.96 2089.65,1214.98 2090.24,1214.99 2090.83,1213.62 2091.41,1213.95 2092,1216.31 2092.59,1213.86 2093.17,1214.03 2093.76,1215.36 2094.35,1213.23 2094.93,1211.13 2095.52,1211.79 2096.1,1210.89 2096.69,1209.72 2097.28,1211.3 2097.86,1212.96 2098.45,1214.39 2099.04,1214.38 2099.62,1216.57 2100.21,1216.66 2100.8,1215.62 2101.38,1217.01 2101.97,1213.25 2102.55,1214.7 2103.14,1214.59 2103.73,1212.43 2104.31,1211.52 2104.9,1211.83 2105.49,1214.51 2106.07,1214.47 2106.66,1219.23 2107.25,1219.97 2107.83,1219.65 2108.42,1220.71 2109.01,1220.43 2109.59,1222.39 2110.18,1223.26 2110.76,1222.87 2111.35,1222.62 2111.94,1221.24 2112.52,1221.1 2113.11,1220.77 2113.7,1219.51 2114.28,1220.38 2114.87,1221.51 2115.46,1219.15 2116.04,1220.27 2116.63,1217.86 2117.22,1217.89 2117.8,1217.78 2118.39,1218.88 2118.97,1220.46 2119.56,1221.52 2120.15,1220.12 2120.73,1219.92 2121.32,1222.05 2121.91,1222.67 2122.49,1219.92 2123.08,1219.87 2123.67,1218.69 2124.25,1217.29 2124.84,1217.2 2125.42,1220.56 2126.01,1219.2 2126.6,1217.81 2127.18,1219.99 2127.77,1218.61 2128.36,1217.06 2128.94,1217.18 2129.53,1217.2 2130.12,1217.29 2130.7,1217.32 2131.29,1218.53 2131.88,1218.32 2132.46,1218.22 2133.05,1219.27 2133.63,1220.58 2134.22,1219.28 2134.81,1219.04 2135.39,1216.52 2135.98,1216.68 2136.57,1219.96 2137.15,1218.26 2137.74,1218.51 2138.33,1219.83 2138.91,1217.58 2139.5,1220 2140.09,1218.66 2140.67,1219.78 2141.26,1218.6 2141.84,1217.33 2142.43,1219.6 2143.02,1220.54 2143.6,1220.47 2144.19,1220.2 2144.78,1218.8 2145.36,1222.37 2145.95,1222.04 2146.54,1222.7 2147.12,1221.15 2147.71,1219.86 2148.3,1221.8 2148.88,1223.95 2149.47,1222.53 2150.05,1220.89 2150.64,1221.68 2151.23,1222.47 2151.81,1221.11 2152.4,1222.07 2152.99,1222.95 2153.57,1223.7 2154.16,1222.22 2154.75,1220.9 2155.33,1218.21 2155.92,1219.45 2156.5,1219.38 2157.09,1220.59 2157.68,1223.86 2158.26,1223.48 \"/>\n<path clip-path=\"url(#clip062)\" d=\"M986.025 1217.53 L986.612 1217.53 L987.198 1217.53 L987.785 1217.53 L988.371 1217.53 L988.957 1217.53 L989.544 1217.53 L990.13 1217.53 L990.717 1217.53 L991.303 1217.53 L991.889 1217.53 L992.476 1217.53 L993.062 1217.53 L993.649 1217.53 L994.235 1217.53 L994.822 1217.53 L995.408 1217.53 L995.994 1217.53 L996.581 1217.53 L997.167 1217.53 L997.754 1217.53 L998.34 1217.53 L998.926 1217.53 L999.513 1217.53 L1000.1 1217.53 L1000.69 1217.53 L1001.27 1217.53 L1001.86 1217.53 L1002.44 1217.53 L1003.03 1217.53 L1003.62 1217.53 L1004.2 1217.53 L1004.79 1217.53 L1005.38 1217.53 L1005.96 1217.53 L1006.55 1217.53 L1007.14 1217.53 L1007.72 1217.53 L1008.31 1217.53 L1008.9 1217.53 L1009.48 1217.53 L1010.07 1217.53 L1010.65 1217.53 L1011.24 1217.53 L1011.83 1217.53 L1012.41 1217.53 L1013 1217.53 L1013.59 1217.53 L1014.17 1217.53 L1014.76 1217.53 L1015.35 1217.53 L1015.93 1217.53 L1016.52 1217.53 L1017.11 1217.53 L1017.69 1217.53 L1018.28 1217.53 L1018.86 1217.53 L1019.45 1217.53 L1020.04 1217.53 L1020.62 1217.53 L1021.21 1217.53 L1021.8 1217.53 L1022.38 1217.53 L1022.97 1217.53 L1023.56 1217.53 L1024.14 1217.53 L1024.73 1217.53 L1025.32 1217.53 L1025.9 1217.53 L1026.49 1217.53 L1027.07 1217.53 L1027.66 1217.53 L1028.25 1217.53 L1028.83 1217.53 L1029.42 1217.53 L1030.01 1217.53 L1030.59 1217.53 L1031.18 1217.53 L1031.77 1217.53 L1032.35 1217.53 L1032.94 1217.53 L1033.52 1217.53 L1034.11 1217.53 L1034.7 1217.53 L1035.28 1217.53 L1035.87 1217.53 L1036.46 1217.53 L1037.04 1217.53 L1037.63 1217.53 L1038.22 1217.53 L1038.8 1217.53 L1039.39 1217.53 L1039.98 1217.53 L1040.56 1217.53 L1041.15 1217.53 L1041.73 1217.53 L1042.32 1217.53 L1042.91 1217.53 L1043.49 1217.53 L1044.08 1217.53 L1044.67 1217.53 L1045.25 1217.53 L1045.84 1217.53 L1046.43 1217.53 L1047.01 1217.53 L1047.6 1217.53 L1048.19 1217.53 L1048.77 1217.53 L1049.36 1217.53 L1049.94 1217.53 L1050.53 1217.53 L1051.12 1217.53 L1051.7 1217.53 L1052.29 1217.53 L1052.88 1217.53 L1053.46 1217.53 L1054.05 1217.53 L1054.64 1217.53 L1055.22 1217.53 L1055.81 1217.53 L1056.39 1217.53 L1056.98 1217.53 L1057.57 1217.53 L1058.15 1217.53 L1058.74 1217.53 L1059.33 1217.53 L1059.91 1217.53 L1060.5 1217.53 L1061.09 1217.53 L1061.67 1217.53 L1062.26 1217.53 L1062.85 1217.53 L1063.43 1217.53 L1064.02 1217.53 L1064.6 1217.53 L1065.19 1217.53 L1065.78 1217.53 L1066.36 1217.53 L1066.95 1217.53 L1067.54 1217.53 L1068.12 1217.53 L1068.71 1217.53 L1069.3 1217.53 L1069.88 1217.53 L1070.47 1217.53 L1071.06 1217.53 L1071.64 1217.53 L1072.23 1217.53 L1072.81 1217.53 L1073.4 1217.53 L1073.99 1217.53 L1074.57 1217.53 L1075.16 1217.53 L1075.75 1217.53 L1076.33 1217.53 L1076.92 1217.53 L1077.51 1217.53 L1078.09 1217.53 L1078.68 1217.53 L1079.26 1217.53 L1079.85 1217.53 L1080.44 1217.53 L1081.02 1217.53 L1081.61 1217.53 L1082.2 1217.53 L1082.78 1217.53 L1083.37 1217.53 L1083.96 1217.53 L1084.54 1217.53 L1085.13 1217.53 L1085.72 1217.53 L1086.3 1217.53 L1086.89 1217.53 L1087.47 1217.53 L1088.06 1217.53 L1088.65 1217.53 L1089.23 1217.53 L1089.82 1217.53 L1090.41 1217.53 L1090.99 1217.53 L1091.58 1217.53 L1092.17 1217.53 L1092.75 1217.53 L1093.34 1217.53 L1093.93 1217.53 L1094.51 1217.53 L1095.1 1217.53 L1095.68 1217.53 L1096.27 1217.53 L1096.86 1217.53 L1097.44 1217.53 L1098.03 1217.53 L1098.62 1217.53 L1099.2 1217.53 L1099.79 1217.53 L1100.38 1217.53 L1100.96 1217.53 L1101.55 1217.53 L1102.14 1217.53 L1102.72 1217.53 L1103.31 1217.53 L1103.89 1217.53 L1104.48 1217.53 L1105.07 1217.53 L1105.65 1217.53 L1106.24 1217.53 L1106.83 1217.53 L1107.41 1217.53 L1108 1217.53 L1108.59 1217.53 L1109.17 1217.53 L1109.76 1217.53 L1110.34 1217.53 L1110.93 1217.53 L1111.52 1217.53 L1112.1 1217.53 L1112.69 1217.53 L1113.28 1217.53 L1113.86 1217.53 L1114.45 1217.53 L1115.04 1217.53 L1115.62 1217.53 L1116.21 1217.53 L1116.8 1217.53 L1117.38 1217.53 L1117.97 1217.53 L1118.55 1217.53 L1119.14 1217.53 L1119.73 1217.53 L1120.31 1217.53 L1120.9 1217.53 L1121.49 1217.53 L1122.07 1217.53 L1122.66 1217.53 L1123.25 1217.53 L1123.83 1217.53 L1124.42 1217.53 L1125.01 1217.53 L1125.59 1217.53 L1126.18 1217.53 L1126.76 1217.53 L1127.35 1217.53 L1127.94 1217.53 L1128.52 1217.53 L1129.11 1217.53 L1129.7 1217.53 L1130.28 1217.53 L1130.87 1217.53 L1131.46 1217.53 L1132.04 1217.53 L1132.63 1217.53 L1133.21 1217.53 L1133.8 1217.53 L1134.39 1217.53 L1134.97 1217.53 L1135.56 1217.53 L1136.15 1217.53 L1136.73 1217.53 L1137.32 1217.53 L1137.91 1217.53 L1138.49 1217.53 L1139.08 1217.53 L1139.67 1217.53 L1140.25 1217.53 L1140.84 1217.53 L1141.42 1217.53 L1142.01 1217.53 L1142.6 1217.53 L1143.18 1217.53 L1143.77 1217.53 L1144.36 1217.53 L1144.94 1217.53 L1145.53 1217.53 L1146.12 1217.53 L1146.7 1217.53 L1147.29 1217.53 L1147.88 1217.53 L1148.46 1217.53 L1149.05 1217.53 L1149.63 1217.53 L1150.22 1217.53 L1150.81 1217.53 L1151.39 1217.53 L1151.98 1217.53 L1152.57 1217.53 L1153.15 1217.53 L1153.74 1217.53 L1154.33 1217.53 L1154.91 1217.53 L1155.5 1217.53 L1156.09 1217.53 L1156.67 1217.53 L1157.26 1217.53 L1157.84 1217.53 L1158.43 1217.53 L1159.02 1217.53 L1159.6 1217.53 L1160.19 1217.53 L1160.78 1217.53 L1161.36 1217.53 L1161.95 1217.53 L1162.54 1217.53 L1163.12 1217.53 L1163.71 1217.53 L1164.29 1217.53 L1164.88 1217.53 L1165.47 1217.53 L1166.05 1217.53 L1166.64 1217.53 L1167.23 1217.53 L1167.81 1217.53 L1168.4 1217.53 L1168.99 1217.53 L1169.57 1217.53 L1170.16 1217.53 L1170.75 1217.53 L1171.33 1217.53 L1171.92 1217.53 L1172.5 1217.53 L1173.09 1217.53 L1173.68 1217.53 L1174.26 1217.53 L1174.85 1217.53 L1175.44 1217.53 L1176.02 1217.53 L1176.61 1217.53 L1177.2 1217.53 L1177.78 1217.53 L1178.37 1217.53 L1178.96 1217.53 L1179.54 1217.53 L1180.13 1217.53 L1180.71 1217.53 L1181.3 1217.53 L1181.89 1217.53 L1182.47 1217.53 L1183.06 1217.53 L1183.65 1217.53 L1184.23 1217.53 L1184.82 1217.53 L1185.41 1217.53 L1185.99 1217.53 L1186.58 1217.53 L1187.16 1217.53 L1187.75 1217.53 L1188.34 1217.53 L1188.92 1217.53 L1189.51 1217.53 L1190.1 1217.53 L1190.68 1217.53 L1191.27 1217.53 L1191.86 1217.53 L1192.44 1217.53 L1193.03 1217.53 L1193.62 1217.53 L1194.2 1217.53 L1194.79 1217.53 L1195.37 1217.53 L1195.96 1217.53 L1196.55 1217.53 L1197.13 1217.53 L1197.72 1217.53 L1198.31 1217.53 L1198.89 1217.53 L1199.48 1217.53 L1200.07 1217.53 L1200.65 1217.53 L1201.24 1217.53 L1201.83 1217.53 L1202.41 1217.53 L1203 1217.53 L1203.58 1217.53 L1204.17 1217.53 L1204.76 1217.53 L1205.34 1217.53 L1205.93 1217.53 L1206.52 1217.53 L1207.1 1217.53 L1207.69 1217.53 L1208.28 1217.53 L1208.86 1217.53 L1209.45 1217.53 L1210.03 1217.53 L1210.62 1217.53 L1211.21 1217.53 L1211.79 1217.53 L1212.38 1217.53 L1212.97 1217.53 L1213.55 1217.53 L1214.14 1217.53 L1214.73 1217.53 L1215.31 1217.53 L1215.9 1217.53 L1216.49 1217.53 L1217.07 1217.53 L1217.66 1217.53 L1218.24 1217.53 L1218.83 1217.53 L1219.42 1217.53 L1220 1217.53 L1220.59 1217.53 L1221.18 1217.53 L1221.76 1217.53 L1222.35 1217.53 L1222.94 1217.53 L1223.52 1217.53 L1224.11 1217.53 L1224.7 1217.53 L1225.28 1217.53 L1225.87 1217.53 L1226.45 1217.53 L1227.04 1217.53 L1227.63 1217.53 L1228.21 1217.53 L1228.8 1217.53 L1229.39 1217.53 L1229.97 1217.53 L1230.56 1217.53 L1231.15 1217.53 L1231.73 1217.53 L1232.32 1217.53 L1232.91 1217.53 L1233.49 1217.53 L1234.08 1217.53 L1234.66 1217.53 L1235.25 1217.53 L1235.84 1217.53 L1236.42 1217.53 L1237.01 1217.53 L1237.6 1217.53 L1238.18 1217.53 L1238.77 1217.53 L1239.36 1217.53 L1239.94 1217.53 L1240.53 1217.53 L1241.11 1217.53 L1241.7 1217.53 L1242.29 1217.53 L1242.87 1217.53 L1243.46 1217.53 L1244.05 1217.53 L1244.63 1217.53 L1245.22 1217.53 L1245.81 1217.53 L1246.39 1217.53 L1246.98 1217.53 L1247.57 1217.53 L1248.15 1217.53 L1248.74 1217.53 L1249.32 1217.53 L1249.91 1217.53 L1250.5 1217.53 L1251.08 1217.53 L1251.67 1217.53 L1252.26 1217.53 L1252.84 1217.53 L1253.43 1217.53 L1254.02 1217.53 L1254.6 1217.53 L1255.19 1217.53 L1255.78 1217.53 L1256.36 1217.53 L1256.95 1217.53 L1257.53 1217.53 L1258.12 1217.53 L1258.71 1217.53 L1259.29 1217.53 L1259.88 1217.53 L1260.47 1217.53 L1261.05 1217.53 L1261.64 1217.53 L1262.23 1217.53 L1262.81 1217.53 L1263.4 1217.53 L1263.98 1217.53 L1264.57 1217.53 L1265.16 1217.53 L1265.74 1217.53 L1266.33 1217.53 L1266.92 1217.53 L1267.5 1217.53 L1268.09 1217.53 L1268.68 1217.53 L1269.26 1217.53 L1269.85 1217.53 L1270.44 1217.53 L1271.02 1217.53 L1271.61 1217.53 L1272.19 1217.53 L1272.78 1217.53 L1273.37 1217.53 L1273.95 1217.53 L1274.54 1217.53 L1275.13 1217.53 L1275.71 1217.53 L1276.3 1217.53 L1276.89 1217.53 L1277.47 1217.53 L1278.06 1217.53 L1278.65 1217.53 L1279.23 1217.53 L1279.82 1217.53 L1280.4 1217.53 L1280.99 1217.53 L1281.58 1217.53 L1282.16 1217.53 L1282.75 1217.53 L1283.34 1217.53 L1283.92 1217.53 L1284.51 1217.53 L1285.1 1217.53 L1285.68 1217.53 L1286.27 1217.53 L1286.86 1217.53 L1287.44 1217.53 L1288.03 1217.53 L1288.61 1217.53 L1289.2 1217.53 L1289.79 1217.53 L1290.37 1217.53 L1290.96 1217.53 L1291.55 1217.53 L1292.13 1217.53 L1292.72 1217.53 L1293.31 1217.53 L1293.89 1217.53 L1294.48 1217.53 L1295.06 1217.53 L1295.65 1217.53 L1296.24 1217.53 L1296.82 1217.53 L1297.41 1217.53 L1298 1217.53 L1298.58 1217.53 L1299.17 1217.53 L1299.76 1217.53 L1300.34 1217.53 L1300.93 1217.53 L1301.52 1217.53 L1302.1 1217.53 L1302.69 1217.53 L1303.27 1217.53 L1303.86 1217.53 L1304.45 1217.53 L1305.03 1217.53 L1305.62 1217.53 L1306.21 1217.53 L1306.79 1217.53 L1307.38 1217.53 L1307.97 1217.53 L1308.55 1217.53 L1309.14 1217.53 L1309.73 1217.53 L1310.31 1217.53 L1310.9 1217.53 L1311.48 1217.53 L1312.07 1217.53 L1312.66 1217.53 L1313.24 1217.53 L1313.83 1217.53 L1314.42 1217.53 L1315 1217.53 L1315.59 1217.53 L1316.18 1217.53 L1316.76 1217.53 L1317.35 1217.53 L1317.93 1217.53 L1318.52 1217.53 L1319.11 1217.53 L1319.69 1217.53 L1320.28 1217.53 L1320.87 1217.53 L1321.45 1217.53 L1322.04 1217.53 L1322.63 1217.53 L1323.21 1217.53 L1323.8 1217.53 L1324.39 1217.53 L1324.97 1217.53 L1325.56 1217.53 L1326.14 1217.53 L1326.73 1217.53 L1327.32 1217.53 L1327.9 1217.53 L1328.49 1217.53 L1329.08 1217.53 L1329.66 1217.53 L1330.25 1217.53 L1330.84 1217.53 L1331.42 1217.53 L1332.01 1217.53 L1332.6 1217.53 L1333.18 1217.53 L1333.77 1217.53 L1334.35 1217.53 L1334.94 1217.53 L1335.53 1217.53 L1336.11 1217.53 L1336.7 1217.53 L1337.29 1217.53 L1337.87 1217.53 L1338.46 1217.53 L1339.05 1217.53 L1339.63 1217.53 L1340.22 1217.53 L1340.8 1217.53 L1341.39 1217.53 L1341.98 1217.53 L1342.56 1217.53 L1343.15 1217.53 L1343.74 1217.53 L1344.32 1217.53 L1344.91 1217.53 L1345.5 1217.53 L1346.08 1217.53 L1346.67 1217.53 L1347.26 1217.53 L1347.84 1217.53 L1348.43 1217.53 L1349.01 1217.53 L1349.6 1217.53 L1350.19 1217.53 L1350.77 1217.53 L1351.36 1217.53 L1351.95 1217.53 L1352.53 1217.53 L1353.12 1217.53 L1353.71 1217.53 L1354.29 1217.53 L1354.88 1217.53 L1355.47 1217.53 L1356.05 1217.53 L1356.64 1217.53 L1357.22 1217.53 L1357.81 1217.53 L1358.4 1217.53 L1358.98 1217.53 L1359.57 1217.53 L1360.16 1217.53 L1360.74 1217.53 L1361.33 1217.53 L1361.92 1217.53 L1362.5 1217.53 L1363.09 1217.53 L1363.68 1217.53 L1364.26 1217.53 L1364.85 1217.53 L1365.43 1217.53 L1366.02 1217.53 L1366.61 1217.53 L1367.19 1217.53 L1367.78 1217.53 L1368.37 1217.53 L1368.95 1217.53 L1369.54 1217.53 L1370.13 1217.53 L1370.71 1217.53 L1371.3 1217.53 L1371.88 1217.53 L1372.47 1217.53 L1373.06 1217.53 L1373.64 1217.53 L1374.23 1217.53 L1374.82 1217.53 L1375.4 1217.53 L1375.99 1217.53 L1376.58 1217.53 L1377.16 1217.53 L1377.75 1217.53 L1378.34 1217.53 L1378.92 1217.53 L1379.51 1217.53 L1380.09 1217.53 L1380.68 1217.53 L1381.27 1217.53 L1381.85 1217.53 L1382.44 1217.53 L1383.03 1217.53 L1383.61 1217.53 L1384.2 1217.53 L1384.79 1217.53 L1385.37 1217.53 L1385.96 1217.53 L1386.55 1217.53 L1387.13 1217.53 L1387.72 1217.53 L1388.3 1217.53 L1388.89 1217.53 L1389.48 1217.53 L1390.06 1217.53 L1390.65 1217.53 L1391.24 1217.53 L1391.82 1217.53 L1392.41 1217.53 L1393 1217.53 L1393.58 1217.53 L1394.17 1217.53 L1394.75 1217.53 L1395.34 1217.53 L1395.93 1217.53 L1396.51 1217.53 L1397.1 1217.53 L1397.69 1217.53 L1398.27 1217.53 L1398.86 1217.53 L1399.45 1217.53 L1400.03 1217.53 L1400.62 1217.53 L1401.21 1217.53 L1401.79 1217.53 L1402.38 1217.53 L1402.96 1217.53 L1403.55 1217.53 L1404.14 1217.53 L1404.72 1217.53 L1405.31 1217.53 L1405.9 1217.53 L1406.48 1217.53 L1407.07 1217.53 L1407.66 1217.53 L1408.24 1217.53 L1408.83 1217.53 L1409.42 1217.53 L1410 1217.53 L1410.59 1217.53 L1411.17 1217.53 L1411.76 1217.53 L1412.35 1217.53 L1412.93 1217.53 L1413.52 1217.53 L1414.11 1217.53 L1414.69 1217.53 L1415.28 1217.53 L1415.87 1217.53 L1416.45 1217.53 L1417.04 1217.53 L1417.63 1217.53 L1418.21 1217.53 L1418.8 1217.53 L1419.38 1217.53 L1419.97 1217.53 L1420.56 1217.53 L1421.14 1217.53 L1421.73 1217.53 L1422.32 1217.53 L1422.9 1217.53 L1423.49 1217.53 L1424.08 1217.53 L1424.66 1217.53 L1425.25 1217.53 L1425.83 1217.53 L1426.42 1217.53 L1427.01 1217.53 L1427.59 1217.53 L1428.18 1217.53 L1428.77 1217.53 L1429.35 1217.53 L1429.94 1217.53 L1430.53 1217.53 L1431.11 1217.53 L1431.7 1217.53 L1432.29 1217.53 L1432.87 1217.53 L1433.46 1217.53 L1434.04 1217.53 L1434.63 1217.53 L1435.22 1217.53 L1435.8 1217.53 L1436.39 1217.53 L1436.98 1217.53 L1437.56 1217.53 L1438.15 1217.53 L1438.74 1217.53 L1439.32 1217.53 L1439.91 1217.53 L1440.5 1217.53 L1441.08 1217.53 L1441.67 1217.53 L1442.25 1217.53 L1442.84 1217.53 L1443.43 1217.53 L1444.01 1217.53 L1444.6 1217.53 L1445.19 1217.53 L1445.77 1217.53 L1446.36 1217.53 L1446.95 1217.53 L1447.53 1217.53 L1448.12 1217.53 L1448.7 1217.53 L1449.29 1217.53 L1449.88 1217.53 L1450.46 1217.53 L1451.05 1217.53 L1451.64 1217.53 L1452.22 1217.53 L1452.81 1217.53 L1453.4 1217.53 L1453.98 1217.53 L1454.57 1217.53 L1455.16 1217.53 L1455.74 1217.53 L1456.33 1217.53 L1456.91 1217.53 L1457.5 1217.53 L1458.09 1217.53 L1458.67 1217.53 L1459.26 1217.53 L1459.85 1217.53 L1460.43 1217.53 L1461.02 1217.53 L1461.61 1217.53 L1462.19 1217.53 L1462.78 1217.53 L1463.37 1217.53 L1463.95 1217.53 L1464.54 1217.53 L1465.12 1217.53 L1465.71 1217.53 L1466.3 1217.53 L1466.88 1217.53 L1467.47 1217.53 L1468.06 1217.53 L1468.64 1217.53 L1469.23 1217.53 L1469.82 1217.53 L1470.4 1217.53 L1470.99 1217.53 L1471.57 1217.53 L1472.16 1217.53 L1472.75 1217.53 L1473.33 1217.53 L1473.92 1217.53 L1474.51 1217.53 L1475.09 1217.53 L1475.68 1217.53 L1476.27 1217.53 L1476.85 1217.53 L1477.44 1217.53 L1478.03 1217.53 L1478.61 1217.53 L1479.2 1217.53 L1479.78 1217.53 L1480.37 1217.53 L1480.96 1217.53 L1481.54 1217.53 L1482.13 1217.53 L1482.72 1217.53 L1483.3 1217.53 L1483.89 1217.53 L1484.48 1217.53 L1485.06 1217.53 L1485.65 1217.53 L1486.24 1217.53 L1486.82 1217.53 L1487.41 1217.53 L1487.99 1217.53 L1488.58 1217.53 L1489.17 1217.53 L1489.75 1217.53 L1490.34 1217.53 L1490.93 1217.53 L1491.51 1217.53 L1492.1 1217.53 L1492.69 1217.53 L1493.27 1217.53 L1493.86 1217.53 L1494.45 1217.53 L1495.03 1217.53 L1495.62 1217.53 L1496.2 1217.53 L1496.79 1217.53 L1497.38 1217.53 L1497.96 1217.53 L1498.55 1217.53 L1499.14 1217.53 L1499.72 1217.53 L1500.31 1217.53 L1500.9 1217.53 L1501.48 1217.53 L1502.07 1217.53 L1502.65 1217.53 L1503.24 1217.53 L1503.83 1217.53 L1504.41 1217.53 L1505 1217.53 L1505.59 1217.53 L1506.17 1217.53 L1506.76 1217.53 L1507.35 1217.53 L1507.93 1217.53 L1508.52 1217.53 L1509.11 1217.53 L1509.69 1217.53 L1510.28 1217.53 L1510.86 1217.53 L1511.45 1217.53 L1512.04 1217.53 L1512.62 1217.53 L1513.21 1217.53 L1513.8 1217.53 L1514.38 1217.53 L1514.97 1217.53 L1515.56 1217.53 L1516.14 1217.53 L1516.73 1217.53 L1517.32 1217.53 L1517.9 1217.53 L1518.49 1217.53 L1519.07 1217.53 L1519.66 1217.53 L1520.25 1217.53 L1520.83 1217.53 L1521.42 1217.53 L1522.01 1217.53 L1522.59 1217.53 L1523.18 1217.53 L1523.77 1217.53 L1524.35 1217.53 L1524.94 1217.53 L1525.52 1217.53 L1526.11 1217.53 L1526.7 1217.53 L1527.28 1217.53 L1527.87 1217.53 L1528.46 1217.53 L1529.04 1217.53 L1529.63 1217.53 L1530.22 1217.53 L1530.8 1217.53 L1531.39 1217.53 L1531.98 1217.53 L1532.56 1217.53 L1533.15 1217.53 L1533.73 1217.53 L1534.32 1217.53 L1534.91 1217.53 L1535.49 1217.53 L1536.08 1217.53 L1536.67 1217.53 L1537.25 1217.53 L1537.84 1217.53 L1538.43 1217.53 L1539.01 1217.53 L1539.6 1217.53 L1540.19 1217.53 L1540.77 1217.53 L1541.36 1217.53 L1541.94 1217.53 L1542.53 1217.53 L1543.12 1217.53 L1543.7 1217.53 L1544.29 1217.53 L1544.88 1217.53 L1545.46 1217.53 L1546.05 1217.53 L1546.64 1217.53 L1547.22 1217.53 L1547.81 1217.53 L1548.4 1217.53 L1548.98 1217.53 L1549.57 1217.53 L1550.15 1217.53 L1550.74 1217.53 L1551.33 1217.53 L1551.91 1217.53 L1552.5 1217.53 L1553.09 1217.53 L1553.67 1217.53 L1554.26 1217.53 L1554.85 1217.53 L1555.43 1217.53 L1556.02 1217.53 L1556.6 1217.53 L1557.19 1217.53 L1557.78 1217.53 L1558.36 1217.53 L1558.95 1217.53 L1559.54 1217.53 L1560.12 1217.53 L1560.71 1217.53 L1561.3 1217.53 L1561.88 1217.53 L1562.47 1217.53 L1563.06 1217.53 L1563.64 1217.53 L1564.23 1217.53 L1564.81 1217.53 L1565.4 1217.53 L1565.99 1217.53 L1566.57 1217.53 L1567.16 1217.53 L1567.75 1217.53 L1568.33 1217.53 L1568.92 1217.53 L1569.51 1217.53 L1570.09 1217.53 L1570.68 1217.53 L1571.27 1217.53 L1571.85 1217.53 L1572.44 1217.53 L1573.02 1217.53 L1573.61 1217.53 L1574.2 1217.53 L1574.78 1217.53 L1575.37 1217.53 L1575.96 1217.53 L1576.54 1217.53 L1577.13 1217.53 L1577.72 1217.53 L1578.3 1217.53 L1578.89 1217.53 L1579.47 1217.53 L1580.06 1217.53 L1580.65 1217.53 L1581.23 1217.53 L1581.82 1217.53 L1582.41 1217.53 L1582.99 1217.53 L1583.58 1217.53 L1584.17 1217.53 L1584.75 1217.53 L1585.34 1217.53 L1585.93 1217.53 L1586.51 1217.53 L1587.1 1217.53 L1587.68 1217.53 L1588.27 1217.53 L1588.86 1217.53 L1589.44 1217.53 L1590.03 1217.53 L1590.62 1217.53 L1591.2 1217.53 L1591.79 1217.53 L1592.38 1217.53 L1592.96 1217.53 L1593.55 1217.53 L1594.14 1217.53 L1594.72 1217.53 L1595.31 1217.53 L1595.89 1217.53 L1596.48 1217.53 L1597.07 1217.53 L1597.65 1217.53 L1598.24 1217.53 L1598.83 1217.53 L1599.41 1217.53 L1600 1217.53 L1600.59 1217.53 L1601.17 1217.53 L1601.76 1217.53 L1602.34 1217.53 L1602.93 1217.53 L1603.52 1217.53 L1604.1 1217.53 L1604.69 1217.53 L1605.28 1217.53 L1605.86 1217.53 L1606.45 1217.53 L1607.04 1217.53 L1607.62 1217.53 L1608.21 1217.53 L1608.8 1217.53 L1609.38 1217.53 L1609.97 1217.53 L1610.55 1217.53 L1611.14 1217.53 L1611.73 1217.53 L1612.31 1217.53 L1612.9 1217.53 L1613.49 1217.53 L1614.07 1217.53 L1614.66 1217.53 L1615.25 1217.53 L1615.83 1217.53 L1616.42 1217.53 L1617.01 1217.53 L1617.59 1217.53 L1618.18 1217.53 L1618.76 1217.53 L1619.35 1217.53 L1619.94 1217.53 L1620.52 1217.53 L1621.11 1217.53 L1621.7 1217.53 L1622.28 1217.53 L1622.87 1217.53 L1623.46 1217.53 L1624.04 1217.53 L1624.63 1217.53 L1625.22 1217.53 L1625.8 1217.53 L1626.39 1217.53 L1626.97 1217.53 L1627.56 1217.53 L1628.15 1217.53 L1628.73 1217.53 L1629.32 1217.53 L1629.91 1217.53 L1630.49 1217.53 L1631.08 1217.53 L1631.67 1217.53 L1632.25 1217.53 L1632.84 1217.53 L1633.42 1217.53 L1634.01 1217.53 L1634.6 1217.53 L1635.18 1217.53 L1635.77 1217.53 L1636.36 1217.53 L1636.94 1217.53 L1637.53 1217.53 L1638.12 1217.53 L1638.7 1217.53 L1639.29 1217.53 L1639.88 1217.53 L1640.46 1217.53 L1641.05 1217.53 L1641.63 1217.53 L1642.22 1217.53 L1642.81 1217.53 L1643.39 1217.53 L1643.98 1217.53 L1644.57 1217.53 L1645.15 1217.53 L1645.74 1217.53 L1646.33 1217.53 L1646.91 1217.53 L1647.5 1217.53 L1648.09 1217.53 L1648.67 1217.53 L1649.26 1217.53 L1649.84 1217.53 L1650.43 1217.53 L1651.02 1217.53 L1651.6 1217.53 L1652.19 1217.53 L1652.78 1217.53 L1653.36 1217.53 L1653.95 1217.53 L1654.54 1217.53 L1655.12 1217.53 L1655.71 1217.53 L1656.29 1217.53 L1656.88 1217.53 L1657.47 1217.53 L1658.05 1217.53 L1658.64 1217.53 L1659.23 1217.53 L1659.81 1217.53 L1660.4 1217.53 L1660.99 1217.53 L1661.57 1217.53 L1662.16 1217.53 L1662.75 1217.53 L1663.33 1217.53 L1663.92 1217.53 L1664.5 1217.53 L1665.09 1217.53 L1665.68 1217.53 L1666.26 1217.53 L1666.85 1217.53 L1667.44 1217.53 L1668.02 1217.53 L1668.61 1217.53 L1669.2 1217.53 L1669.78 1217.53 L1670.37 1217.53 L1670.96 1217.53 L1671.54 1217.53 L1672.13 1217.53 L1672.71 1217.53 L1673.3 1217.53 L1673.89 1217.53 L1674.47 1217.53 L1675.06 1217.53 L1675.65 1217.53 L1676.23 1217.53 L1676.82 1217.53 L1677.41 1217.53 L1677.99 1217.53 L1678.58 1217.53 L1679.17 1217.53 L1679.75 1217.53 L1680.34 1217.53 L1680.92 1217.53 L1681.51 1217.53 L1682.1 1217.53 L1682.68 1217.53 L1683.27 1217.53 L1683.86 1217.53 L1684.44 1217.53 L1685.03 1217.53 L1685.62 1217.53 L1686.2 1217.53 L1686.79 1217.53 L1687.37 1217.53 L1687.96 1217.53 L1688.55 1217.53 L1689.13 1217.53 L1689.72 1217.53 L1690.31 1217.53 L1690.89 1217.53 L1691.48 1217.53 L1692.07 1217.53 L1692.65 1217.53 L1693.24 1217.53 L1693.83 1217.53 L1694.41 1217.53 L1695 1217.53 L1695.58 1217.53 L1696.17 1217.53 L1696.76 1217.53 L1697.34 1217.53 L1697.93 1217.53 L1698.52 1217.53 L1699.1 1217.53 L1699.69 1217.53 L1700.28 1217.53 L1700.86 1217.53 L1701.45 1217.53 L1702.04 1217.53 L1702.62 1217.53 L1703.21 1217.53 L1703.79 1217.53 L1704.38 1217.53 L1704.97 1217.53 L1705.55 1217.53 L1706.14 1217.53 L1706.73 1217.53 L1707.31 1217.53 L1707.9 1217.53 L1708.49 1217.53 L1709.07 1217.53 L1709.66 1217.53 L1710.24 1217.53 L1710.83 1217.53 L1711.42 1217.53 L1712 1217.53 L1712.59 1217.53 L1713.18 1217.53 L1713.76 1217.53 L1714.35 1217.53 L1714.94 1217.53 L1715.52 1217.53 L1716.11 1217.53 L1716.7 1217.53 L1717.28 1217.53 L1717.87 1217.53 L1718.45 1217.53 L1719.04 1217.53 L1719.63 1217.53 L1720.21 1217.53 L1720.8 1217.53 L1721.39 1217.53 L1721.97 1217.53 L1722.56 1217.53 L1723.15 1217.53 L1723.73 1217.53 L1724.32 1217.53 L1724.91 1217.53 L1725.49 1217.53 L1726.08 1217.53 L1726.66 1217.53 L1727.25 1217.53 L1727.84 1217.53 L1728.42 1217.53 L1729.01 1217.53 L1729.6 1217.53 L1730.18 1217.53 L1730.77 1217.53 L1731.36 1217.53 L1731.94 1217.53 L1732.53 1217.53 L1733.11 1217.53 L1733.7 1217.53 L1734.29 1217.53 L1734.87 1217.53 L1735.46 1217.53 L1736.05 1217.53 L1736.63 1217.53 L1737.22 1217.53 L1737.81 1217.53 L1738.39 1217.53 L1738.98 1217.53 L1739.57 1217.53 L1740.15 1217.53 L1740.74 1217.53 L1741.32 1217.53 L1741.91 1217.53 L1742.5 1217.53 L1743.08 1217.53 L1743.67 1217.53 L1744.26 1217.53 L1744.84 1217.53 L1745.43 1217.53 L1746.02 1217.53 L1746.6 1217.53 L1747.19 1217.53 L1747.78 1217.53 L1748.36 1217.53 L1748.95 1217.53 L1749.53 1217.53 L1750.12 1217.53 L1750.71 1217.53 L1751.29 1217.53 L1751.88 1217.53 L1752.47 1217.53 L1753.05 1217.53 L1753.64 1217.53 L1754.23 1217.53 L1754.81 1217.53 L1755.4 1217.53 L1755.99 1217.53 L1756.57 1217.53 L1757.16 1217.53 L1757.74 1217.53 L1758.33 1217.53 L1758.92 1217.53 L1759.5 1217.53 L1760.09 1217.53 L1760.68 1217.53 L1761.26 1217.53 L1761.85 1217.53 L1762.44 1217.53 L1763.02 1217.53 L1763.61 1217.53 L1764.19 1217.53 L1764.78 1217.53 L1765.37 1217.53 L1765.95 1217.53 L1766.54 1217.53 L1767.13 1217.53 L1767.71 1217.53 L1768.3 1217.53 L1768.89 1217.53 L1769.47 1217.53 L1770.06 1217.53 L1770.65 1217.53 L1771.23 1217.53 L1771.82 1217.53 L1772.4 1217.53 L1772.99 1217.53 L1773.58 1217.53 L1774.16 1217.53 L1774.75 1217.53 L1775.34 1217.53 L1775.92 1217.53 L1776.51 1217.53 L1777.1 1217.53 L1777.68 1217.53 L1778.27 1217.53 L1778.86 1217.53 L1779.44 1217.53 L1780.03 1217.53 L1780.61 1217.53 L1781.2 1217.53 L1781.79 1217.53 L1782.37 1217.53 L1782.96 1217.53 L1783.55 1217.53 L1784.13 1217.53 L1784.72 1217.53 L1785.31 1217.53 L1785.89 1217.53 L1786.48 1217.53 L1787.06 1217.53 L1787.65 1217.53 L1788.24 1217.53 L1788.82 1217.53 L1789.41 1217.53 L1790 1217.53 L1790.58 1217.53 L1791.17 1217.53 L1791.76 1217.53 L1792.34 1217.53 L1792.93 1217.53 L1793.52 1217.53 L1794.1 1217.53 L1794.69 1217.53 L1795.27 1217.53 L1795.86 1217.53 L1796.45 1217.53 L1797.03 1217.53 L1797.62 1217.53 L1798.21 1217.53 L1798.79 1217.53 L1799.38 1217.53 L1799.97 1217.53 L1800.55 1217.53 L1801.14 1217.53 L1801.73 1217.53 L1802.31 1217.53 L1802.9 1217.53 L1803.48 1217.53 L1804.07 1217.53 L1804.66 1217.53 L1805.24 1217.53 L1805.83 1217.53 L1806.42 1217.53 L1807 1217.53 L1807.59 1217.53 L1808.18 1217.53 L1808.76 1217.53 L1809.35 1217.53 L1809.94 1217.53 L1810.52 1217.53 L1811.11 1217.53 L1811.69 1217.53 L1812.28 1217.53 L1812.87 1217.53 L1813.45 1217.53 L1814.04 1217.53 L1814.63 1217.53 L1815.21 1217.53 L1815.8 1217.53 L1816.39 1217.53 L1816.97 1217.53 L1817.56 1217.53 L1818.14 1217.53 L1818.73 1217.53 L1819.32 1217.53 L1819.9 1217.53 L1820.49 1217.53 L1821.08 1217.53 L1821.66 1217.53 L1822.25 1217.53 L1822.84 1217.53 L1823.42 1217.53 L1824.01 1217.53 L1824.6 1217.53 L1825.18 1217.53 L1825.77 1217.53 L1826.35 1217.53 L1826.94 1217.53 L1827.53 1217.53 L1828.11 1217.53 L1828.7 1217.53 L1829.29 1217.53 L1829.87 1217.53 L1830.46 1217.53 L1831.05 1217.53 L1831.63 1217.53 L1832.22 1217.53 L1832.81 1217.53 L1833.39 1217.53 L1833.98 1217.53 L1834.56 1217.53 L1835.15 1217.53 L1835.74 1217.53 L1836.32 1217.53 L1836.91 1217.53 L1837.5 1217.53 L1838.08 1217.53 L1838.67 1217.53 L1839.26 1217.53 L1839.84 1217.53 L1840.43 1217.53 L1841.01 1217.53 L1841.6 1217.53 L1842.19 1217.53 L1842.77 1217.53 L1843.36 1217.53 L1843.95 1217.53 L1844.53 1217.53 L1845.12 1217.53 L1845.71 1217.53 L1846.29 1217.53 L1846.88 1217.53 L1847.47 1217.53 L1848.05 1217.53 L1848.64 1217.53 L1849.22 1217.53 L1849.81 1217.53 L1850.4 1217.53 L1850.98 1217.53 L1851.57 1217.53 L1852.16 1217.53 L1852.74 1217.53 L1853.33 1217.53 L1853.92 1217.53 L1854.5 1217.53 L1855.09 1217.53 L1855.68 1217.53 L1856.26 1217.53 L1856.85 1217.53 L1857.43 1217.53 L1858.02 1217.53 L1858.61 1217.53 L1859.19 1217.53 L1859.78 1217.53 L1860.37 1217.53 L1860.95 1217.53 L1861.54 1217.53 L1862.13 1217.53 L1862.71 1217.53 L1863.3 1217.53 L1863.88 1217.53 L1864.47 1217.53 L1865.06 1217.53 L1865.64 1217.53 L1866.23 1217.53 L1866.82 1217.53 L1867.4 1217.53 L1867.99 1217.53 L1868.58 1217.53 L1869.16 1217.53 L1869.75 1217.53 L1870.34 1217.53 L1870.92 1217.53 L1871.51 1217.53 L1872.09 1217.53 L1872.68 1217.53 L1873.27 1217.53 L1873.85 1217.53 L1874.44 1217.53 L1875.03 1217.53 L1875.61 1217.53 L1876.2 1217.53 L1876.79 1217.53 L1877.37 1217.53 L1877.96 1217.53 L1878.55 1217.53 L1879.13 1217.53 L1879.72 1217.53 L1880.3 1217.53 L1880.89 1217.53 L1881.48 1217.53 L1882.06 1217.53 L1882.65 1217.53 L1883.24 1217.53 L1883.82 1217.53 L1884.41 1217.53 L1885 1217.53 L1885.58 1217.53 L1886.17 1217.53 L1886.76 1217.53 L1887.34 1217.53 L1887.93 1217.53 L1888.51 1217.53 L1889.1 1217.53 L1889.69 1217.53 L1890.27 1217.53 L1890.86 1217.53 L1891.45 1217.53 L1892.03 1217.53 L1892.62 1217.53 L1893.21 1217.53 L1893.79 1217.53 L1894.38 1217.53 L1894.96 1217.53 L1895.55 1217.53 L1896.14 1217.53 L1896.72 1217.53 L1897.31 1217.53 L1897.9 1217.53 L1898.48 1217.53 L1899.07 1217.53 L1899.66 1217.53 L1900.24 1217.53 L1900.83 1217.53 L1901.42 1217.53 L1902 1217.53 L1902.59 1217.53 L1903.17 1217.53 L1903.76 1217.53 L1904.35 1217.53 L1904.93 1217.53 L1905.52 1217.53 L1906.11 1217.53 L1906.69 1217.53 L1907.28 1217.53 L1907.87 1217.53 L1908.45 1217.53 L1909.04 1217.53 L1909.63 1217.53 L1910.21 1217.53 L1910.8 1217.53 L1911.38 1217.53 L1911.97 1217.53 L1912.56 1217.53 L1913.14 1217.53 L1913.73 1217.53 L1914.32 1217.53 L1914.9 1217.53 L1915.49 1217.53 L1916.08 1217.53 L1916.66 1217.53 L1917.25 1217.53 L1917.83 1217.53 L1918.42 1217.53 L1919.01 1217.53 L1919.59 1217.53 L1920.18 1217.53 L1920.77 1217.53 L1921.35 1217.53 L1921.94 1217.53 L1922.53 1217.53 L1923.11 1217.53 L1923.7 1217.53 L1924.29 1217.53 L1924.87 1217.53 L1925.46 1217.53 L1926.04 1217.53 L1926.63 1217.53 L1927.22 1217.53 L1927.8 1217.53 L1928.39 1217.53 L1928.98 1217.53 L1929.56 1217.53 L1930.15 1217.53 L1930.74 1217.53 L1931.32 1217.53 L1931.91 1217.53 L1932.5 1217.53 L1933.08 1217.53 L1933.67 1217.53 L1934.25 1217.53 L1934.84 1217.53 L1935.43 1217.53 L1936.01 1217.53 L1936.6 1217.53 L1937.19 1217.53 L1937.77 1217.53 L1938.36 1217.53 L1938.95 1217.53 L1939.53 1217.53 L1940.12 1217.53 L1940.71 1217.53 L1941.29 1217.53 L1941.88 1217.53 L1942.46 1217.53 L1943.05 1217.53 L1943.64 1217.53 L1944.22 1217.53 L1944.81 1217.53 L1945.4 1217.53 L1945.98 1217.53 L1946.57 1217.53 L1947.16 1217.53 L1947.74 1217.53 L1948.33 1217.53 L1948.91 1217.53 L1949.5 1217.53 L1950.09 1217.53 L1950.67 1217.53 L1951.26 1217.53 L1951.85 1217.53 L1952.43 1217.53 L1953.02 1217.53 L1953.61 1217.53 L1954.19 1217.53 L1954.78 1217.53 L1955.37 1217.53 L1955.95 1217.53 L1956.54 1217.53 L1957.12 1217.53 L1957.71 1217.53 L1958.3 1217.53 L1958.88 1217.53 L1959.47 1217.53 L1960.06 1217.53 L1960.64 1217.53 L1961.23 1217.53 L1961.82 1217.53 L1962.4 1217.53 L1962.99 1217.53 L1963.58 1217.53 L1964.16 1217.53 L1964.75 1217.53 L1965.33 1217.53 L1965.92 1217.53 L1966.51 1217.53 L1967.09 1217.53 L1967.68 1217.53 L1968.27 1217.53 L1968.85 1217.53 L1969.44 1217.53 L1970.03 1217.53 L1970.61 1217.53 L1971.2 1217.53 L1971.78 1217.53 L1972.37 1217.53 L1972.96 1217.53 L1973.54 1217.53 L1974.13 1217.53 L1974.72 1217.53 L1975.3 1217.53 L1975.89 1217.53 L1976.48 1217.53 L1977.06 1217.53 L1977.65 1217.53 L1978.24 1217.53 L1978.82 1217.53 L1979.41 1217.53 L1979.99 1217.53 L1980.58 1217.53 L1981.17 1217.53 L1981.75 1217.53 L1982.34 1217.53 L1982.93 1217.53 L1983.51 1217.53 L1984.1 1217.53 L1984.69 1217.53 L1985.27 1217.53 L1985.86 1217.53 L1986.45 1217.53 L1987.03 1217.53 L1987.62 1217.53 L1988.2 1217.53 L1988.79 1217.53 L1989.38 1217.53 L1989.96 1217.53 L1990.55 1217.53 L1991.14 1217.53 L1991.72 1217.53 L1992.31 1217.53 L1992.9 1217.53 L1993.48 1217.53 L1994.07 1217.53 L1994.65 1217.53 L1995.24 1217.53 L1995.83 1217.53 L1996.41 1217.53 L1997 1217.53 L1997.59 1217.53 L1998.17 1217.53 L1998.76 1217.53 L1999.35 1217.53 L1999.93 1217.53 L2000.52 1217.53 L2001.11 1217.53 L2001.69 1217.53 L2002.28 1217.53 L2002.86 1217.53 L2003.45 1217.53 L2004.04 1217.53 L2004.62 1217.53 L2005.21 1217.53 L2005.8 1217.53 L2006.38 1217.53 L2006.97 1217.53 L2007.56 1217.53 L2008.14 1217.53 L2008.73 1217.53 L2009.32 1217.53 L2009.9 1217.53 L2010.49 1217.53 L2011.07 1217.53 L2011.66 1217.53 L2012.25 1217.53 L2012.83 1217.53 L2013.42 1217.53 L2014.01 1217.53 L2014.59 1217.53 L2015.18 1217.53 L2015.77 1217.53 L2016.35 1217.53 L2016.94 1217.53 L2017.53 1217.53 L2018.11 1217.53 L2018.7 1217.53 L2019.28 1217.53 L2019.87 1217.53 L2020.46 1217.53 L2021.04 1217.53 L2021.63 1217.53 L2022.22 1217.53 L2022.8 1217.53 L2023.39 1217.53 L2023.98 1217.53 L2024.56 1217.53 L2025.15 1217.53 L2025.73 1217.53 L2026.32 1217.53 L2026.91 1217.53 L2027.49 1217.53 L2028.08 1217.53 L2028.67 1217.53 L2029.25 1217.53 L2029.84 1217.53 L2030.43 1217.53 L2031.01 1217.53 L2031.6 1217.53 L2032.19 1217.53 L2032.77 1217.53 L2033.36 1217.53 L2033.94 1217.53 L2034.53 1217.53 L2035.12 1217.53 L2035.7 1217.53 L2036.29 1217.53 L2036.88 1217.53 L2037.46 1217.53 L2038.05 1217.53 L2038.64 1217.53 L2039.22 1217.53 L2039.81 1217.53 L2040.4 1217.53 L2040.98 1217.53 L2041.57 1217.53 L2042.15 1217.53 L2042.74 1217.53 L2043.33 1217.53 L2043.91 1217.53 L2044.5 1217.53 L2045.09 1217.53 L2045.67 1217.53 L2046.26 1217.53 L2046.85 1217.53 L2047.43 1217.53 L2048.02 1217.53 L2048.6 1217.53 L2049.19 1217.53 L2049.78 1217.53 L2050.36 1217.53 L2050.95 1217.53 L2051.54 1217.53 L2052.12 1217.53 L2052.71 1217.53 L2053.3 1217.53 L2053.88 1217.53 L2054.47 1217.53 L2055.06 1217.53 L2055.64 1217.53 L2056.23 1217.53 L2056.81 1217.53 L2057.4 1217.53 L2057.99 1217.53 L2058.57 1217.53 L2059.16 1217.53 L2059.75 1217.53 L2060.33 1217.53 L2060.92 1217.53 L2061.51 1217.53 L2062.09 1217.53 L2062.68 1217.53 L2063.27 1217.53 L2063.85 1217.53 L2064.44 1217.53 L2065.02 1217.53 L2065.61 1217.53 L2066.2 1217.53 L2066.78 1217.53 L2067.37 1217.53 L2067.96 1217.53 L2068.54 1217.53 L2069.13 1217.53 L2069.72 1217.53 L2070.3 1217.53 L2070.89 1217.53 L2071.48 1217.53 L2072.06 1217.53 L2072.65 1217.53 L2073.23 1217.53 L2073.82 1217.53 L2074.41 1217.53 L2074.99 1217.53 L2075.58 1217.53 L2076.17 1217.53 L2076.75 1217.53 L2077.34 1217.53 L2077.93 1217.53 L2078.51 1217.53 L2079.1 1217.53 L2079.68 1217.53 L2080.27 1217.53 L2080.86 1217.53 L2081.44 1217.53 L2082.03 1217.53 L2082.62 1217.53 L2083.2 1217.53 L2083.79 1217.53 L2084.38 1217.53 L2084.96 1217.53 L2085.55 1217.53 L2086.14 1217.53 L2086.72 1217.53 L2087.31 1217.53 L2087.89 1217.53 L2088.48 1217.53 L2089.07 1217.53 L2089.65 1217.53 L2090.24 1217.53 L2090.83 1217.53 L2091.41 1217.53 L2092 1217.53 L2092.59 1217.53 L2093.17 1217.53 L2093.76 1217.53 L2094.35 1217.53 L2094.93 1217.53 L2095.52 1217.53 L2096.1 1217.53 L2096.69 1217.53 L2097.28 1217.53 L2097.86 1217.53 L2098.45 1217.53 L2099.04 1217.53 L2099.62 1217.53 L2100.21 1217.53 L2100.8 1217.53 L2101.38 1217.53 L2101.97 1217.53 L2102.55 1217.53 L2103.14 1217.53 L2103.73 1217.53 L2104.31 1217.53 L2104.9 1217.53 L2105.49 1217.53 L2106.07 1217.53 L2106.66 1217.53 L2107.25 1217.53 L2107.83 1217.53 L2108.42 1217.53 L2109.01 1217.53 L2109.59 1217.53 L2110.18 1217.53 L2110.76 1217.53 L2111.35 1217.53 L2111.94 1217.53 L2112.52 1217.53 L2113.11 1217.53 L2113.7 1217.53 L2114.28 1217.53 L2114.87 1217.53 L2115.46 1217.53 L2116.04 1217.53 L2116.63 1217.53 L2117.22 1217.53 L2117.8 1217.53 L2118.39 1217.53 L2118.97 1217.53 L2119.56 1217.53 L2120.15 1217.53 L2120.73 1217.53 L2121.32 1217.53 L2121.91 1217.53 L2122.49 1217.53 L2123.08 1217.53 L2123.67 1217.53 L2124.25 1217.53 L2124.84 1217.53 L2125.42 1217.53 L2126.01 1217.53 L2126.6 1217.53 L2127.18 1217.53 L2127.77 1217.53 L2128.36 1217.53 L2128.94 1217.53 L2129.53 1217.53 L2130.12 1217.53 L2130.7 1217.53 L2131.29 1217.53 L2131.88 1217.53 L2132.46 1217.53 L2133.05 1217.53 L2133.63 1217.53 L2134.22 1217.53 L2134.81 1217.53 L2135.39 1217.53 L2135.98 1217.53 L2136.57 1217.53 L2137.15 1217.53 L2137.74 1217.53 L2138.33 1217.53 L2138.91 1217.53 L2139.5 1217.53 L2140.09 1217.53 L2140.67 1217.53 L2141.26 1217.53 L2141.84 1217.53 L2142.43 1217.53 L2143.02 1217.53 L2143.6 1217.53 L2144.19 1217.53 L2144.78 1217.53 L2145.36 1217.53 L2145.95 1217.53 L2146.54 1217.53 L2147.12 1217.53 L2147.71 1217.53 L2148.3 1217.53 L2148.88 1217.53 L2149.47 1217.53 L2150.05 1217.53 L2150.64 1217.53 L2151.23 1217.53 L2151.81 1217.53 L2152.4 1217.53 L2152.99 1217.53 L2153.57 1217.53 L2154.16 1217.53 L2154.75 1217.53 L2155.33 1217.53 L2155.92 1217.53 L2156.5 1217.53 L2157.09 1217.53 L2157.68 1217.53 L2158.26 1217.53 L2158.26 1216.75 L2157.68 1216.75 L2157.09 1216.75 L2156.5 1216.75 L2155.92 1216.75 L2155.33 1216.75 L2154.75 1216.75 L2154.16 1216.75 L2153.57 1216.75 L2152.99 1216.75 L2152.4 1216.75 L2151.81 1216.75 L2151.23 1216.75 L2150.64 1216.75 L2150.05 1216.75 L2149.47 1216.75 L2148.88 1216.75 L2148.3 1216.75 L2147.71 1216.75 L2147.12 1216.75 L2146.54 1216.75 L2145.95 1216.75 L2145.36 1216.75 L2144.78 1216.75 L2144.19 1216.75 L2143.6 1216.75 L2143.02 1216.75 L2142.43 1216.75 L2141.84 1216.75 L2141.26 1216.75 L2140.67 1216.75 L2140.09 1216.75 L2139.5 1216.75 L2138.91 1216.75 L2138.33 1216.75 L2137.74 1216.75 L2137.15 1216.75 L2136.57 1216.75 L2135.98 1216.75 L2135.39 1216.75 L2134.81 1216.75 L2134.22 1216.75 L2133.63 1216.75 L2133.05 1216.75 L2132.46 1216.75 L2131.88 1216.75 L2131.29 1216.75 L2130.7 1216.75 L2130.12 1216.75 L2129.53 1216.75 L2128.94 1216.75 L2128.36 1216.75 L2127.77 1216.75 L2127.18 1216.75 L2126.6 1216.75 L2126.01 1216.75 L2125.42 1216.75 L2124.84 1216.75 L2124.25 1216.75 L2123.67 1216.75 L2123.08 1216.75 L2122.49 1216.75 L2121.91 1216.75 L2121.32 1216.75 L2120.73 1216.75 L2120.15 1216.75 L2119.56 1216.75 L2118.97 1216.75 L2118.39 1216.75 L2117.8 1216.75 L2117.22 1216.75 L2116.63 1216.75 L2116.04 1216.75 L2115.46 1216.75 L2114.87 1216.75 L2114.28 1216.75 L2113.7 1216.75 L2113.11 1216.75 L2112.52 1216.75 L2111.94 1216.75 L2111.35 1216.75 L2110.76 1216.75 L2110.18 1216.75 L2109.59 1216.75 L2109.01 1216.75 L2108.42 1216.75 L2107.83 1216.75 L2107.25 1216.75 L2106.66 1216.75 L2106.07 1216.75 L2105.49 1216.75 L2104.9 1216.75 L2104.31 1216.75 L2103.73 1216.75 L2103.14 1216.75 L2102.55 1216.75 L2101.97 1216.75 L2101.38 1216.75 L2100.8 1216.75 L2100.21 1216.75 L2099.62 1216.75 L2099.04 1216.75 L2098.45 1216.75 L2097.86 1216.75 L2097.28 1216.75 L2096.69 1216.75 L2096.1 1216.75 L2095.52 1216.75 L2094.93 1216.75 L2094.35 1216.75 L2093.76 1216.75 L2093.17 1216.75 L2092.59 1216.75 L2092 1216.75 L2091.41 1216.75 L2090.83 1216.75 L2090.24 1216.75 L2089.65 1216.75 L2089.07 1216.75 L2088.48 1216.75 L2087.89 1216.75 L2087.31 1216.75 L2086.72 1216.75 L2086.14 1216.75 L2085.55 1216.75 L2084.96 1216.75 L2084.38 1216.75 L2083.79 1216.75 L2083.2 1216.75 L2082.62 1216.75 L2082.03 1216.75 L2081.44 1216.75 L2080.86 1216.75 L2080.27 1216.75 L2079.68 1216.75 L2079.1 1216.75 L2078.51 1216.75 L2077.93 1216.75 L2077.34 1216.75 L2076.75 1216.75 L2076.17 1216.75 L2075.58 1216.75 L2074.99 1216.75 L2074.41 1216.75 L2073.82 1216.75 L2073.23 1216.75 L2072.65 1216.75 L2072.06 1216.75 L2071.48 1216.75 L2070.89 1216.75 L2070.3 1216.75 L2069.72 1216.75 L2069.13 1216.75 L2068.54 1216.75 L2067.96 1216.75 L2067.37 1216.75 L2066.78 1216.75 L2066.2 1216.75 L2065.61 1216.75 L2065.02 1216.75 L2064.44 1216.75 L2063.85 1216.75 L2063.27 1216.75 L2062.68 1216.75 L2062.09 1216.75 L2061.51 1216.75 L2060.92 1216.75 L2060.33 1216.75 L2059.75 1216.75 L2059.16 1216.75 L2058.57 1216.75 L2057.99 1216.75 L2057.4 1216.75 L2056.81 1216.75 L2056.23 1216.75 L2055.64 1216.75 L2055.06 1216.75 L2054.47 1216.75 L2053.88 1216.75 L2053.3 1216.75 L2052.71 1216.75 L2052.12 1216.75 L2051.54 1216.75 L2050.95 1216.75 L2050.36 1216.75 L2049.78 1216.75 L2049.19 1216.75 L2048.6 1216.75 L2048.02 1216.75 L2047.43 1216.75 L2046.85 1216.75 L2046.26 1216.75 L2045.67 1216.75 L2045.09 1216.75 L2044.5 1216.75 L2043.91 1216.75 L2043.33 1216.75 L2042.74 1216.75 L2042.15 1216.75 L2041.57 1216.75 L2040.98 1216.75 L2040.4 1216.75 L2039.81 1216.75 L2039.22 1216.75 L2038.64 1216.75 L2038.05 1216.75 L2037.46 1216.75 L2036.88 1216.75 L2036.29 1216.75 L2035.7 1216.75 L2035.12 1216.75 L2034.53 1216.75 L2033.94 1216.75 L2033.36 1216.75 L2032.77 1216.75 L2032.19 1216.75 L2031.6 1216.75 L2031.01 1216.75 L2030.43 1216.75 L2029.84 1216.75 L2029.25 1216.75 L2028.67 1216.75 L2028.08 1216.75 L2027.49 1216.75 L2026.91 1216.75 L2026.32 1216.75 L2025.73 1216.75 L2025.15 1216.75 L2024.56 1216.75 L2023.98 1216.75 L2023.39 1216.75 L2022.8 1216.75 L2022.22 1216.75 L2021.63 1216.75 L2021.04 1216.75 L2020.46 1216.75 L2019.87 1216.75 L2019.28 1216.75 L2018.7 1216.75 L2018.11 1216.75 L2017.53 1216.75 L2016.94 1216.75 L2016.35 1216.75 L2015.77 1216.75 L2015.18 1216.75 L2014.59 1216.75 L2014.01 1216.75 L2013.42 1216.75 L2012.83 1216.75 L2012.25 1216.75 L2011.66 1216.75 L2011.07 1216.75 L2010.49 1216.75 L2009.9 1216.75 L2009.32 1216.75 L2008.73 1216.75 L2008.14 1216.75 L2007.56 1216.75 L2006.97 1216.75 L2006.38 1216.75 L2005.8 1216.75 L2005.21 1216.75 L2004.62 1216.75 L2004.04 1216.75 L2003.45 1216.75 L2002.86 1216.75 L2002.28 1216.75 L2001.69 1216.75 L2001.11 1216.75 L2000.52 1216.75 L1999.93 1216.75 L1999.35 1216.75 L1998.76 1216.75 L1998.17 1216.75 L1997.59 1216.75 L1997 1216.75 L1996.41 1216.75 L1995.83 1216.75 L1995.24 1216.75 L1994.65 1216.75 L1994.07 1216.75 L1993.48 1216.75 L1992.9 1216.75 L1992.31 1216.75 L1991.72 1216.75 L1991.14 1216.75 L1990.55 1216.75 L1989.96 1216.75 L1989.38 1216.75 L1988.79 1216.75 L1988.2 1216.75 L1987.62 1216.75 L1987.03 1216.75 L1986.45 1216.75 L1985.86 1216.75 L1985.27 1216.75 L1984.69 1216.75 L1984.1 1216.75 L1983.51 1216.75 L1982.93 1216.75 L1982.34 1216.75 L1981.75 1216.75 L1981.17 1216.75 L1980.58 1216.75 L1979.99 1216.75 L1979.41 1216.75 L1978.82 1216.75 L1978.24 1216.75 L1977.65 1216.75 L1977.06 1216.75 L1976.48 1216.75 L1975.89 1216.75 L1975.3 1216.75 L1974.72 1216.75 L1974.13 1216.75 L1973.54 1216.75 L1972.96 1216.75 L1972.37 1216.75 L1971.78 1216.75 L1971.2 1216.75 L1970.61 1216.75 L1970.03 1216.75 L1969.44 1216.75 L1968.85 1216.75 L1968.27 1216.75 L1967.68 1216.75 L1967.09 1216.75 L1966.51 1216.75 L1965.92 1216.75 L1965.33 1216.75 L1964.75 1216.75 L1964.16 1216.75 L1963.58 1216.75 L1962.99 1216.75 L1962.4 1216.75 L1961.82 1216.75 L1961.23 1216.75 L1960.64 1216.75 L1960.06 1216.75 L1959.47 1216.75 L1958.88 1216.75 L1958.3 1216.75 L1957.71 1216.75 L1957.12 1216.75 L1956.54 1216.75 L1955.95 1216.75 L1955.37 1216.75 L1954.78 1216.75 L1954.19 1216.75 L1953.61 1216.75 L1953.02 1216.75 L1952.43 1216.75 L1951.85 1216.75 L1951.26 1216.75 L1950.67 1216.75 L1950.09 1216.75 L1949.5 1216.75 L1948.91 1216.75 L1948.33 1216.75 L1947.74 1216.75 L1947.16 1216.75 L1946.57 1216.75 L1945.98 1216.75 L1945.4 1216.75 L1944.81 1216.75 L1944.22 1216.75 L1943.64 1216.75 L1943.05 1216.75 L1942.46 1216.75 L1941.88 1216.75 L1941.29 1216.75 L1940.71 1216.75 L1940.12 1216.75 L1939.53 1216.75 L1938.95 1216.75 L1938.36 1216.75 L1937.77 1216.75 L1937.19 1216.75 L1936.6 1216.75 L1936.01 1216.75 L1935.43 1216.75 L1934.84 1216.75 L1934.25 1216.75 L1933.67 1216.75 L1933.08 1216.75 L1932.5 1216.75 L1931.91 1216.75 L1931.32 1216.75 L1930.74 1216.75 L1930.15 1216.75 L1929.56 1216.75 L1928.98 1216.75 L1928.39 1216.75 L1927.8 1216.75 L1927.22 1216.75 L1926.63 1216.75 L1926.04 1216.75 L1925.46 1216.75 L1924.87 1216.75 L1924.29 1216.75 L1923.7 1216.75 L1923.11 1216.75 L1922.53 1216.75 L1921.94 1216.75 L1921.35 1216.75 L1920.77 1216.75 L1920.18 1216.75 L1919.59 1216.75 L1919.01 1216.75 L1918.42 1216.75 L1917.83 1216.75 L1917.25 1216.75 L1916.66 1216.75 L1916.08 1216.75 L1915.49 1216.75 L1914.9 1216.75 L1914.32 1216.75 L1913.73 1216.75 L1913.14 1216.75 L1912.56 1216.75 L1911.97 1216.75 L1911.38 1216.75 L1910.8 1216.75 L1910.21 1216.75 L1909.63 1216.75 L1909.04 1216.75 L1908.45 1216.75 L1907.87 1216.75 L1907.28 1216.75 L1906.69 1216.75 L1906.11 1216.75 L1905.52 1216.75 L1904.93 1216.75 L1904.35 1216.75 L1903.76 1216.75 L1903.17 1216.75 L1902.59 1216.75 L1902 1216.75 L1901.42 1216.75 L1900.83 1216.75 L1900.24 1216.75 L1899.66 1216.75 L1899.07 1216.75 L1898.48 1216.75 L1897.9 1216.75 L1897.31 1216.75 L1896.72 1216.75 L1896.14 1216.75 L1895.55 1216.75 L1894.96 1216.75 L1894.38 1216.75 L1893.79 1216.75 L1893.21 1216.75 L1892.62 1216.75 L1892.03 1216.75 L1891.45 1216.75 L1890.86 1216.75 L1890.27 1216.75 L1889.69 1216.75 L1889.1 1216.75 L1888.51 1216.75 L1887.93 1216.75 L1887.34 1216.75 L1886.76 1216.75 L1886.17 1216.75 L1885.58 1216.75 L1885 1216.75 L1884.41 1216.75 L1883.82 1216.75 L1883.24 1216.75 L1882.65 1216.75 L1882.06 1216.75 L1881.48 1216.75 L1880.89 1216.75 L1880.3 1216.75 L1879.72 1216.75 L1879.13 1216.75 L1878.55 1216.75 L1877.96 1216.75 L1877.37 1216.75 L1876.79 1216.75 L1876.2 1216.75 L1875.61 1216.75 L1875.03 1216.75 L1874.44 1216.75 L1873.85 1216.75 L1873.27 1216.75 L1872.68 1216.75 L1872.09 1216.75 L1871.51 1216.75 L1870.92 1216.75 L1870.34 1216.75 L1869.75 1216.75 L1869.16 1216.75 L1868.58 1216.75 L1867.99 1216.75 L1867.4 1216.75 L1866.82 1216.75 L1866.23 1216.75 L1865.64 1216.75 L1865.06 1216.75 L1864.47 1216.75 L1863.88 1216.75 L1863.3 1216.75 L1862.71 1216.75 L1862.13 1216.75 L1861.54 1216.75 L1860.95 1216.75 L1860.37 1216.75 L1859.78 1216.75 L1859.19 1216.75 L1858.61 1216.75 L1858.02 1216.75 L1857.43 1216.75 L1856.85 1216.75 L1856.26 1216.75 L1855.68 1216.75 L1855.09 1216.75 L1854.5 1216.75 L1853.92 1216.75 L1853.33 1216.75 L1852.74 1216.75 L1852.16 1216.75 L1851.57 1216.75 L1850.98 1216.75 L1850.4 1216.75 L1849.81 1216.75 L1849.22 1216.75 L1848.64 1216.75 L1848.05 1216.75 L1847.47 1216.75 L1846.88 1216.75 L1846.29 1216.75 L1845.71 1216.75 L1845.12 1216.75 L1844.53 1216.75 L1843.95 1216.75 L1843.36 1216.75 L1842.77 1216.75 L1842.19 1216.75 L1841.6 1216.75 L1841.01 1216.75 L1840.43 1216.75 L1839.84 1216.75 L1839.26 1216.75 L1838.67 1216.75 L1838.08 1216.75 L1837.5 1216.75 L1836.91 1216.75 L1836.32 1216.75 L1835.74 1216.75 L1835.15 1216.75 L1834.56 1216.75 L1833.98 1216.75 L1833.39 1216.75 L1832.81 1216.75 L1832.22 1216.75 L1831.63 1216.75 L1831.05 1216.75 L1830.46 1216.75 L1829.87 1216.75 L1829.29 1216.75 L1828.7 1216.75 L1828.11 1216.75 L1827.53 1216.75 L1826.94 1216.75 L1826.35 1216.75 L1825.77 1216.75 L1825.18 1216.75 L1824.6 1216.75 L1824.01 1216.75 L1823.42 1216.75 L1822.84 1216.75 L1822.25 1216.75 L1821.66 1216.75 L1821.08 1216.75 L1820.49 1216.75 L1819.9 1216.75 L1819.32 1216.75 L1818.73 1216.75 L1818.14 1216.75 L1817.56 1216.75 L1816.97 1216.75 L1816.39 1216.75 L1815.8 1216.75 L1815.21 1216.75 L1814.63 1216.75 L1814.04 1216.75 L1813.45 1216.75 L1812.87 1216.75 L1812.28 1216.75 L1811.69 1216.75 L1811.11 1216.75 L1810.52 1216.75 L1809.94 1216.75 L1809.35 1216.75 L1808.76 1216.75 L1808.18 1216.75 L1807.59 1216.75 L1807 1216.75 L1806.42 1216.75 L1805.83 1216.75 L1805.24 1216.75 L1804.66 1216.75 L1804.07 1216.75 L1803.48 1216.75 L1802.9 1216.75 L1802.31 1216.75 L1801.73 1216.75 L1801.14 1216.75 L1800.55 1216.75 L1799.97 1216.75 L1799.38 1216.75 L1798.79 1216.75 L1798.21 1216.75 L1797.62 1216.75 L1797.03 1216.75 L1796.45 1216.75 L1795.86 1216.75 L1795.27 1216.75 L1794.69 1216.75 L1794.1 1216.75 L1793.52 1216.75 L1792.93 1216.75 L1792.34 1216.75 L1791.76 1216.75 L1791.17 1216.75 L1790.58 1216.75 L1790 1216.75 L1789.41 1216.75 L1788.82 1216.75 L1788.24 1216.75 L1787.65 1216.75 L1787.06 1216.75 L1786.48 1216.75 L1785.89 1216.75 L1785.31 1216.75 L1784.72 1216.75 L1784.13 1216.75 L1783.55 1216.75 L1782.96 1216.75 L1782.37 1216.75 L1781.79 1216.75 L1781.2 1216.75 L1780.61 1216.75 L1780.03 1216.75 L1779.44 1216.75 L1778.86 1216.75 L1778.27 1216.75 L1777.68 1216.75 L1777.1 1216.75 L1776.51 1216.75 L1775.92 1216.75 L1775.34 1216.75 L1774.75 1216.75 L1774.16 1216.75 L1773.58 1216.75 L1772.99 1216.75 L1772.4 1216.75 L1771.82 1216.75 L1771.23 1216.75 L1770.65 1216.75 L1770.06 1216.75 L1769.47 1216.75 L1768.89 1216.75 L1768.3 1216.75 L1767.71 1216.75 L1767.13 1216.75 L1766.54 1216.75 L1765.95 1216.75 L1765.37 1216.75 L1764.78 1216.75 L1764.19 1216.75 L1763.61 1216.75 L1763.02 1216.75 L1762.44 1216.75 L1761.85 1216.75 L1761.26 1216.75 L1760.68 1216.75 L1760.09 1216.75 L1759.5 1216.75 L1758.92 1216.75 L1758.33 1216.75 L1757.74 1216.75 L1757.16 1216.75 L1756.57 1216.75 L1755.99 1216.75 L1755.4 1216.75 L1754.81 1216.75 L1754.23 1216.75 L1753.64 1216.75 L1753.05 1216.75 L1752.47 1216.75 L1751.88 1216.75 L1751.29 1216.75 L1750.71 1216.75 L1750.12 1216.75 L1749.53 1216.75 L1748.95 1216.75 L1748.36 1216.75 L1747.78 1216.75 L1747.19 1216.75 L1746.6 1216.75 L1746.02 1216.75 L1745.43 1216.75 L1744.84 1216.75 L1744.26 1216.75 L1743.67 1216.75 L1743.08 1216.75 L1742.5 1216.75 L1741.91 1216.75 L1741.32 1216.75 L1740.74 1216.75 L1740.15 1216.75 L1739.57 1216.75 L1738.98 1216.75 L1738.39 1216.75 L1737.81 1216.75 L1737.22 1216.75 L1736.63 1216.75 L1736.05 1216.75 L1735.46 1216.75 L1734.87 1216.75 L1734.29 1216.75 L1733.7 1216.75 L1733.11 1216.75 L1732.53 1216.75 L1731.94 1216.75 L1731.36 1216.75 L1730.77 1216.75 L1730.18 1216.75 L1729.6 1216.75 L1729.01 1216.75 L1728.42 1216.75 L1727.84 1216.75 L1727.25 1216.75 L1726.66 1216.75 L1726.08 1216.75 L1725.49 1216.75 L1724.91 1216.75 L1724.32 1216.75 L1723.73 1216.75 L1723.15 1216.75 L1722.56 1216.75 L1721.97 1216.75 L1721.39 1216.75 L1720.8 1216.75 L1720.21 1216.75 L1719.63 1216.75 L1719.04 1216.75 L1718.45 1216.75 L1717.87 1216.75 L1717.28 1216.75 L1716.7 1216.75 L1716.11 1216.75 L1715.52 1216.75 L1714.94 1216.75 L1714.35 1216.75 L1713.76 1216.75 L1713.18 1216.75 L1712.59 1216.75 L1712 1216.75 L1711.42 1216.75 L1710.83 1216.75 L1710.24 1216.75 L1709.66 1216.75 L1709.07 1216.75 L1708.49 1216.75 L1707.9 1216.75 L1707.31 1216.75 L1706.73 1216.75 L1706.14 1216.75 L1705.55 1216.75 L1704.97 1216.75 L1704.38 1216.75 L1703.79 1216.75 L1703.21 1216.75 L1702.62 1216.75 L1702.04 1216.75 L1701.45 1216.75 L1700.86 1216.75 L1700.28 1216.75 L1699.69 1216.75 L1699.1 1216.75 L1698.52 1216.75 L1697.93 1216.75 L1697.34 1216.75 L1696.76 1216.75 L1696.17 1216.75 L1695.58 1216.75 L1695 1216.75 L1694.41 1216.75 L1693.83 1216.75 L1693.24 1216.75 L1692.65 1216.75 L1692.07 1216.75 L1691.48 1216.75 L1690.89 1216.75 L1690.31 1216.75 L1689.72 1216.75 L1689.13 1216.75 L1688.55 1216.75 L1687.96 1216.75 L1687.37 1216.75 L1686.79 1216.75 L1686.2 1216.75 L1685.62 1216.75 L1685.03 1216.75 L1684.44 1216.75 L1683.86 1216.75 L1683.27 1216.75 L1682.68 1216.75 L1682.1 1216.75 L1681.51 1216.75 L1680.92 1216.75 L1680.34 1216.75 L1679.75 1216.75 L1679.17 1216.75 L1678.58 1216.75 L1677.99 1216.75 L1677.41 1216.75 L1676.82 1216.75 L1676.23 1216.75 L1675.65 1216.75 L1675.06 1216.75 L1674.47 1216.75 L1673.89 1216.75 L1673.3 1216.75 L1672.71 1216.75 L1672.13 1216.75 L1671.54 1216.75 L1670.96 1216.75 L1670.37 1216.75 L1669.78 1216.75 L1669.2 1216.75 L1668.61 1216.75 L1668.02 1216.75 L1667.44 1216.75 L1666.85 1216.75 L1666.26 1216.75 L1665.68 1216.75 L1665.09 1216.75 L1664.5 1216.75 L1663.92 1216.75 L1663.33 1216.75 L1662.75 1216.75 L1662.16 1216.75 L1661.57 1216.75 L1660.99 1216.75 L1660.4 1216.75 L1659.81 1216.75 L1659.23 1216.75 L1658.64 1216.75 L1658.05 1216.75 L1657.47 1216.75 L1656.88 1216.75 L1656.29 1216.75 L1655.71 1216.75 L1655.12 1216.75 L1654.54 1216.75 L1653.95 1216.75 L1653.36 1216.75 L1652.78 1216.75 L1652.19 1216.75 L1651.6 1216.75 L1651.02 1216.75 L1650.43 1216.75 L1649.84 1216.75 L1649.26 1216.75 L1648.67 1216.75 L1648.09 1216.75 L1647.5 1216.75 L1646.91 1216.75 L1646.33 1216.75 L1645.74 1216.75 L1645.15 1216.75 L1644.57 1216.75 L1643.98 1216.75 L1643.39 1216.75 L1642.81 1216.75 L1642.22 1216.75 L1641.63 1216.75 L1641.05 1216.75 L1640.46 1216.75 L1639.88 1216.75 L1639.29 1216.75 L1638.7 1216.75 L1638.12 1216.75 L1637.53 1216.75 L1636.94 1216.75 L1636.36 1216.75 L1635.77 1216.75 L1635.18 1216.75 L1634.6 1216.75 L1634.01 1216.75 L1633.42 1216.75 L1632.84 1216.75 L1632.25 1216.75 L1631.67 1216.75 L1631.08 1216.75 L1630.49 1216.75 L1629.91 1216.75 L1629.32 1216.75 L1628.73 1216.75 L1628.15 1216.75 L1627.56 1216.75 L1626.97 1216.75 L1626.39 1216.75 L1625.8 1216.75 L1625.22 1216.75 L1624.63 1216.75 L1624.04 1216.75 L1623.46 1216.75 L1622.87 1216.75 L1622.28 1216.75 L1621.7 1216.75 L1621.11 1216.75 L1620.52 1216.75 L1619.94 1216.75 L1619.35 1216.75 L1618.76 1216.75 L1618.18 1216.75 L1617.59 1216.75 L1617.01 1216.75 L1616.42 1216.75 L1615.83 1216.75 L1615.25 1216.75 L1614.66 1216.75 L1614.07 1216.75 L1613.49 1216.75 L1612.9 1216.75 L1612.31 1216.75 L1611.73 1216.75 L1611.14 1216.75 L1610.55 1216.75 L1609.97 1216.75 L1609.38 1216.75 L1608.8 1216.75 L1608.21 1216.75 L1607.62 1216.75 L1607.04 1216.75 L1606.45 1216.75 L1605.86 1216.75 L1605.28 1216.75 L1604.69 1216.75 L1604.1 1216.75 L1603.52 1216.75 L1602.93 1216.75 L1602.34 1216.75 L1601.76 1216.75 L1601.17 1216.75 L1600.59 1216.75 L1600 1216.75 L1599.41 1216.75 L1598.83 1216.75 L1598.24 1216.75 L1597.65 1216.75 L1597.07 1216.75 L1596.48 1216.75 L1595.89 1216.75 L1595.31 1216.75 L1594.72 1216.75 L1594.14 1216.75 L1593.55 1216.75 L1592.96 1216.75 L1592.38 1216.75 L1591.79 1216.75 L1591.2 1216.75 L1590.62 1216.75 L1590.03 1216.75 L1589.44 1216.75 L1588.86 1216.75 L1588.27 1216.75 L1587.68 1216.75 L1587.1 1216.75 L1586.51 1216.75 L1585.93 1216.75 L1585.34 1216.75 L1584.75 1216.75 L1584.17 1216.75 L1583.58 1216.75 L1582.99 1216.75 L1582.41 1216.75 L1581.82 1216.75 L1581.23 1216.75 L1580.65 1216.75 L1580.06 1216.75 L1579.47 1216.75 L1578.89 1216.75 L1578.3 1216.75 L1577.72 1216.75 L1577.13 1216.75 L1576.54 1216.75 L1575.96 1216.75 L1575.37 1216.75 L1574.78 1216.75 L1574.2 1216.75 L1573.61 1216.75 L1573.02 1216.75 L1572.44 1216.75 L1571.85 1216.75 L1571.27 1216.75 L1570.68 1216.75 L1570.09 1216.75 L1569.51 1216.75 L1568.92 1216.75 L1568.33 1216.75 L1567.75 1216.75 L1567.16 1216.75 L1566.57 1216.75 L1565.99 1216.75 L1565.4 1216.75 L1564.81 1216.75 L1564.23 1216.75 L1563.64 1216.75 L1563.06 1216.75 L1562.47 1216.75 L1561.88 1216.75 L1561.3 1216.75 L1560.71 1216.75 L1560.12 1216.75 L1559.54 1216.75 L1558.95 1216.75 L1558.36 1216.75 L1557.78 1216.75 L1557.19 1216.75 L1556.6 1216.75 L1556.02 1216.75 L1555.43 1216.75 L1554.85 1216.75 L1554.26 1216.75 L1553.67 1216.75 L1553.09 1216.75 L1552.5 1216.75 L1551.91 1216.75 L1551.33 1216.75 L1550.74 1216.75 L1550.15 1216.75 L1549.57 1216.75 L1548.98 1216.75 L1548.4 1216.75 L1547.81 1216.75 L1547.22 1216.75 L1546.64 1216.75 L1546.05 1216.75 L1545.46 1216.75 L1544.88 1216.75 L1544.29 1216.75 L1543.7 1216.75 L1543.12 1216.75 L1542.53 1216.75 L1541.94 1216.75 L1541.36 1216.75 L1540.77 1216.75 L1540.19 1216.75 L1539.6 1216.75 L1539.01 1216.75 L1538.43 1216.75 L1537.84 1216.75 L1537.25 1216.75 L1536.67 1216.75 L1536.08 1216.75 L1535.49 1216.75 L1534.91 1216.75 L1534.32 1216.75 L1533.73 1216.75 L1533.15 1216.75 L1532.56 1216.75 L1531.98 1216.75 L1531.39 1216.75 L1530.8 1216.75 L1530.22 1216.75 L1529.63 1216.75 L1529.04 1216.75 L1528.46 1216.75 L1527.87 1216.75 L1527.28 1216.75 L1526.7 1216.75 L1526.11 1216.75 L1525.52 1216.75 L1524.94 1216.75 L1524.35 1216.75 L1523.77 1216.75 L1523.18 1216.75 L1522.59 1216.75 L1522.01 1216.75 L1521.42 1216.75 L1520.83 1216.75 L1520.25 1216.75 L1519.66 1216.75 L1519.07 1216.75 L1518.49 1216.75 L1517.9 1216.75 L1517.32 1216.75 L1516.73 1216.75 L1516.14 1216.75 L1515.56 1216.75 L1514.97 1216.75 L1514.38 1216.75 L1513.8 1216.75 L1513.21 1216.75 L1512.62 1216.75 L1512.04 1216.75 L1511.45 1216.75 L1510.86 1216.75 L1510.28 1216.75 L1509.69 1216.75 L1509.11 1216.75 L1508.52 1216.75 L1507.93 1216.75 L1507.35 1216.75 L1506.76 1216.75 L1506.17 1216.75 L1505.59 1216.75 L1505 1216.75 L1504.41 1216.75 L1503.83 1216.75 L1503.24 1216.75 L1502.65 1216.75 L1502.07 1216.75 L1501.48 1216.75 L1500.9 1216.75 L1500.31 1216.75 L1499.72 1216.75 L1499.14 1216.75 L1498.55 1216.75 L1497.96 1216.75 L1497.38 1216.75 L1496.79 1216.75 L1496.2 1216.75 L1495.62 1216.75 L1495.03 1216.75 L1494.45 1216.75 L1493.86 1216.75 L1493.27 1216.75 L1492.69 1216.75 L1492.1 1216.75 L1491.51 1216.75 L1490.93 1216.75 L1490.34 1216.75 L1489.75 1216.75 L1489.17 1216.75 L1488.58 1216.75 L1487.99 1216.75 L1487.41 1216.75 L1486.82 1216.75 L1486.24 1216.75 L1485.65 1216.75 L1485.06 1216.75 L1484.48 1216.75 L1483.89 1216.75 L1483.3 1216.75 L1482.72 1216.75 L1482.13 1216.75 L1481.54 1216.75 L1480.96 1216.75 L1480.37 1216.75 L1479.78 1216.75 L1479.2 1216.75 L1478.61 1216.75 L1478.03 1216.75 L1477.44 1216.75 L1476.85 1216.75 L1476.27 1216.75 L1475.68 1216.75 L1475.09 1216.75 L1474.51 1216.75 L1473.92 1216.75 L1473.33 1216.75 L1472.75 1216.75 L1472.16 1216.75 L1471.57 1216.75 L1470.99 1216.75 L1470.4 1216.75 L1469.82 1216.75 L1469.23 1216.75 L1468.64 1216.75 L1468.06 1216.75 L1467.47 1216.75 L1466.88 1216.75 L1466.3 1216.75 L1465.71 1216.75 L1465.12 1216.75 L1464.54 1216.75 L1463.95 1216.75 L1463.37 1216.75 L1462.78 1216.75 L1462.19 1216.75 L1461.61 1216.75 L1461.02 1216.75 L1460.43 1216.75 L1459.85 1216.75 L1459.26 1216.75 L1458.67 1216.75 L1458.09 1216.75 L1457.5 1216.75 L1456.91 1216.75 L1456.33 1216.75 L1455.74 1216.75 L1455.16 1216.75 L1454.57 1216.75 L1453.98 1216.75 L1453.4 1216.75 L1452.81 1216.75 L1452.22 1216.75 L1451.64 1216.75 L1451.05 1216.75 L1450.46 1216.75 L1449.88 1216.75 L1449.29 1216.75 L1448.7 1216.75 L1448.12 1216.75 L1447.53 1216.75 L1446.95 1216.75 L1446.36 1216.75 L1445.77 1216.75 L1445.19 1216.75 L1444.6 1216.75 L1444.01 1216.75 L1443.43 1216.75 L1442.84 1216.75 L1442.25 1216.75 L1441.67 1216.75 L1441.08 1216.75 L1440.5 1216.75 L1439.91 1216.75 L1439.32 1216.75 L1438.74 1216.75 L1438.15 1216.75 L1437.56 1216.75 L1436.98 1216.75 L1436.39 1216.75 L1435.8 1216.75 L1435.22 1216.75 L1434.63 1216.75 L1434.04 1216.75 L1433.46 1216.75 L1432.87 1216.75 L1432.29 1216.75 L1431.7 1216.75 L1431.11 1216.75 L1430.53 1216.75 L1429.94 1216.75 L1429.35 1216.75 L1428.77 1216.75 L1428.18 1216.75 L1427.59 1216.75 L1427.01 1216.75 L1426.42 1216.75 L1425.83 1216.75 L1425.25 1216.75 L1424.66 1216.75 L1424.08 1216.75 L1423.49 1216.75 L1422.9 1216.75 L1422.32 1216.75 L1421.73 1216.75 L1421.14 1216.75 L1420.56 1216.75 L1419.97 1216.75 L1419.38 1216.75 L1418.8 1216.75 L1418.21 1216.75 L1417.63 1216.75 L1417.04 1216.75 L1416.45 1216.75 L1415.87 1216.75 L1415.28 1216.75 L1414.69 1216.75 L1414.11 1216.75 L1413.52 1216.75 L1412.93 1216.75 L1412.35 1216.75 L1411.76 1216.75 L1411.17 1216.75 L1410.59 1216.75 L1410 1216.75 L1409.42 1216.75 L1408.83 1216.75 L1408.24 1216.75 L1407.66 1216.75 L1407.07 1216.75 L1406.48 1216.75 L1405.9 1216.75 L1405.31 1216.75 L1404.72 1216.75 L1404.14 1216.75 L1403.55 1216.75 L1402.96 1216.75 L1402.38 1216.75 L1401.79 1216.75 L1401.21 1216.75 L1400.62 1216.75 L1400.03 1216.75 L1399.45 1216.75 L1398.86 1216.75 L1398.27 1216.75 L1397.69 1216.75 L1397.1 1216.75 L1396.51 1216.75 L1395.93 1216.75 L1395.34 1216.75 L1394.75 1216.75 L1394.17 1216.75 L1393.58 1216.75 L1393 1216.75 L1392.41 1216.75 L1391.82 1216.75 L1391.24 1216.75 L1390.65 1216.75 L1390.06 1216.75 L1389.48 1216.75 L1388.89 1216.75 L1388.3 1216.75 L1387.72 1216.75 L1387.13 1216.75 L1386.55 1216.75 L1385.96 1216.75 L1385.37 1216.75 L1384.79 1216.75 L1384.2 1216.75 L1383.61 1216.75 L1383.03 1216.75 L1382.44 1216.75 L1381.85 1216.75 L1381.27 1216.75 L1380.68 1216.75 L1380.09 1216.75 L1379.51 1216.75 L1378.92 1216.75 L1378.34 1216.75 L1377.75 1216.75 L1377.16 1216.75 L1376.58 1216.75 L1375.99 1216.75 L1375.4 1216.75 L1374.82 1216.75 L1374.23 1216.75 L1373.64 1216.75 L1373.06 1216.75 L1372.47 1216.75 L1371.88 1216.75 L1371.3 1216.75 L1370.71 1216.75 L1370.13 1216.75 L1369.54 1216.75 L1368.95 1216.75 L1368.37 1216.75 L1367.78 1216.75 L1367.19 1216.75 L1366.61 1216.75 L1366.02 1216.75 L1365.43 1216.75 L1364.85 1216.75 L1364.26 1216.75 L1363.68 1216.75 L1363.09 1216.75 L1362.5 1216.75 L1361.92 1216.75 L1361.33 1216.75 L1360.74 1216.75 L1360.16 1216.75 L1359.57 1216.75 L1358.98 1216.75 L1358.4 1216.75 L1357.81 1216.75 L1357.22 1216.75 L1356.64 1216.75 L1356.05 1216.75 L1355.47 1216.75 L1354.88 1216.75 L1354.29 1216.75 L1353.71 1216.75 L1353.12 1216.75 L1352.53 1216.75 L1351.95 1216.75 L1351.36 1216.75 L1350.77 1216.75 L1350.19 1216.75 L1349.6 1216.75 L1349.01 1216.75 L1348.43 1216.75 L1347.84 1216.75 L1347.26 1216.75 L1346.67 1216.75 L1346.08 1216.75 L1345.5 1216.75 L1344.91 1216.75 L1344.32 1216.75 L1343.74 1216.75 L1343.15 1216.75 L1342.56 1216.75 L1341.98 1216.75 L1341.39 1216.75 L1340.8 1216.75 L1340.22 1216.75 L1339.63 1216.75 L1339.05 1216.75 L1338.46 1216.75 L1337.87 1216.75 L1337.29 1216.75 L1336.7 1216.75 L1336.11 1216.75 L1335.53 1216.75 L1334.94 1216.75 L1334.35 1216.75 L1333.77 1216.75 L1333.18 1216.75 L1332.6 1216.75 L1332.01 1216.75 L1331.42 1216.75 L1330.84 1216.75 L1330.25 1216.75 L1329.66 1216.75 L1329.08 1216.75 L1328.49 1216.75 L1327.9 1216.75 L1327.32 1216.75 L1326.73 1216.75 L1326.14 1216.75 L1325.56 1216.75 L1324.97 1216.75 L1324.39 1216.75 L1323.8 1216.75 L1323.21 1216.75 L1322.63 1216.75 L1322.04 1216.75 L1321.45 1216.75 L1320.87 1216.75 L1320.28 1216.75 L1319.69 1216.75 L1319.11 1216.75 L1318.52 1216.75 L1317.93 1216.75 L1317.35 1216.75 L1316.76 1216.75 L1316.18 1216.75 L1315.59 1216.75 L1315 1216.75 L1314.42 1216.75 L1313.83 1216.75 L1313.24 1216.75 L1312.66 1216.75 L1312.07 1216.75 L1311.48 1216.75 L1310.9 1216.75 L1310.31 1216.75 L1309.73 1216.75 L1309.14 1216.75 L1308.55 1216.75 L1307.97 1216.75 L1307.38 1216.75 L1306.79 1216.75 L1306.21 1216.75 L1305.62 1216.75 L1305.03 1216.75 L1304.45 1216.75 L1303.86 1216.75 L1303.27 1216.75 L1302.69 1216.75 L1302.1 1216.75 L1301.52 1216.75 L1300.93 1216.75 L1300.34 1216.75 L1299.76 1216.75 L1299.17 1216.75 L1298.58 1216.75 L1298 1216.75 L1297.41 1216.75 L1296.82 1216.75 L1296.24 1216.75 L1295.65 1216.75 L1295.06 1216.75 L1294.48 1216.75 L1293.89 1216.75 L1293.31 1216.75 L1292.72 1216.75 L1292.13 1216.75 L1291.55 1216.75 L1290.96 1216.75 L1290.37 1216.75 L1289.79 1216.75 L1289.2 1216.75 L1288.61 1216.75 L1288.03 1216.75 L1287.44 1216.75 L1286.86 1216.75 L1286.27 1216.75 L1285.68 1216.75 L1285.1 1216.75 L1284.51 1216.75 L1283.92 1216.75 L1283.34 1216.75 L1282.75 1216.75 L1282.16 1216.75 L1281.58 1216.75 L1280.99 1216.75 L1280.4 1216.75 L1279.82 1216.75 L1279.23 1216.75 L1278.65 1216.75 L1278.06 1216.75 L1277.47 1216.75 L1276.89 1216.75 L1276.3 1216.75 L1275.71 1216.75 L1275.13 1216.75 L1274.54 1216.75 L1273.95 1216.75 L1273.37 1216.75 L1272.78 1216.75 L1272.19 1216.75 L1271.61 1216.75 L1271.02 1216.75 L1270.44 1216.75 L1269.85 1216.75 L1269.26 1216.75 L1268.68 1216.75 L1268.09 1216.75 L1267.5 1216.75 L1266.92 1216.75 L1266.33 1216.75 L1265.74 1216.75 L1265.16 1216.75 L1264.57 1216.75 L1263.98 1216.75 L1263.4 1216.75 L1262.81 1216.75 L1262.23 1216.75 L1261.64 1216.75 L1261.05 1216.75 L1260.47 1216.75 L1259.88 1216.75 L1259.29 1216.75 L1258.71 1216.75 L1258.12 1216.75 L1257.53 1216.75 L1256.95 1216.75 L1256.36 1216.75 L1255.78 1216.75 L1255.19 1216.75 L1254.6 1216.75 L1254.02 1216.75 L1253.43 1216.75 L1252.84 1216.75 L1252.26 1216.75 L1251.67 1216.75 L1251.08 1216.75 L1250.5 1216.75 L1249.91 1216.75 L1249.32 1216.75 L1248.74 1216.75 L1248.15 1216.75 L1247.57 1216.75 L1246.98 1216.75 L1246.39 1216.75 L1245.81 1216.75 L1245.22 1216.75 L1244.63 1216.75 L1244.05 1216.75 L1243.46 1216.75 L1242.87 1216.75 L1242.29 1216.75 L1241.7 1216.75 L1241.11 1216.75 L1240.53 1216.75 L1239.94 1216.75 L1239.36 1216.75 L1238.77 1216.75 L1238.18 1216.75 L1237.6 1216.75 L1237.01 1216.75 L1236.42 1216.75 L1235.84 1216.75 L1235.25 1216.75 L1234.66 1216.75 L1234.08 1216.75 L1233.49 1216.75 L1232.91 1216.75 L1232.32 1216.75 L1231.73 1216.75 L1231.15 1216.75 L1230.56 1216.75 L1229.97 1216.75 L1229.39 1216.75 L1228.8 1216.75 L1228.21 1216.75 L1227.63 1216.75 L1227.04 1216.75 L1226.45 1216.75 L1225.87 1216.75 L1225.28 1216.75 L1224.7 1216.75 L1224.11 1216.75 L1223.52 1216.75 L1222.94 1216.75 L1222.35 1216.75 L1221.76 1216.75 L1221.18 1216.75 L1220.59 1216.75 L1220 1216.75 L1219.42 1216.75 L1218.83 1216.75 L1218.24 1216.75 L1217.66 1216.75 L1217.07 1216.75 L1216.49 1216.75 L1215.9 1216.75 L1215.31 1216.75 L1214.73 1216.75 L1214.14 1216.75 L1213.55 1216.75 L1212.97 1216.75 L1212.38 1216.75 L1211.79 1216.75 L1211.21 1216.75 L1210.62 1216.75 L1210.03 1216.75 L1209.45 1216.75 L1208.86 1216.75 L1208.28 1216.75 L1207.69 1216.75 L1207.1 1216.75 L1206.52 1216.75 L1205.93 1216.75 L1205.34 1216.75 L1204.76 1216.75 L1204.17 1216.75 L1203.58 1216.75 L1203 1216.75 L1202.41 1216.75 L1201.83 1216.75 L1201.24 1216.75 L1200.65 1216.75 L1200.07 1216.75 L1199.48 1216.75 L1198.89 1216.75 L1198.31 1216.75 L1197.72 1216.75 L1197.13 1216.75 L1196.55 1216.75 L1195.96 1216.75 L1195.37 1216.75 L1194.79 1216.75 L1194.2 1216.75 L1193.62 1216.75 L1193.03 1216.75 L1192.44 1216.75 L1191.86 1216.75 L1191.27 1216.75 L1190.68 1216.75 L1190.1 1216.75 L1189.51 1216.75 L1188.92 1216.75 L1188.34 1216.75 L1187.75 1216.75 L1187.16 1216.75 L1186.58 1216.75 L1185.99 1216.75 L1185.41 1216.75 L1184.82 1216.75 L1184.23 1216.75 L1183.65 1216.75 L1183.06 1216.75 L1182.47 1216.75 L1181.89 1216.75 L1181.3 1216.75 L1180.71 1216.75 L1180.13 1216.75 L1179.54 1216.75 L1178.96 1216.75 L1178.37 1216.75 L1177.78 1216.75 L1177.2 1216.75 L1176.61 1216.75 L1176.02 1216.75 L1175.44 1216.75 L1174.85 1216.75 L1174.26 1216.75 L1173.68 1216.75 L1173.09 1216.75 L1172.5 1216.75 L1171.92 1216.75 L1171.33 1216.75 L1170.75 1216.75 L1170.16 1216.75 L1169.57 1216.75 L1168.99 1216.75 L1168.4 1216.75 L1167.81 1216.75 L1167.23 1216.75 L1166.64 1216.75 L1166.05 1216.75 L1165.47 1216.75 L1164.88 1216.75 L1164.29 1216.75 L1163.71 1216.75 L1163.12 1216.75 L1162.54 1216.75 L1161.95 1216.75 L1161.36 1216.75 L1160.78 1216.75 L1160.19 1216.75 L1159.6 1216.75 L1159.02 1216.75 L1158.43 1216.75 L1157.84 1216.75 L1157.26 1216.75 L1156.67 1216.75 L1156.09 1216.75 L1155.5 1216.75 L1154.91 1216.75 L1154.33 1216.75 L1153.74 1216.75 L1153.15 1216.75 L1152.57 1216.75 L1151.98 1216.75 L1151.39 1216.75 L1150.81 1216.75 L1150.22 1216.75 L1149.63 1216.75 L1149.05 1216.75 L1148.46 1216.75 L1147.88 1216.75 L1147.29 1216.75 L1146.7 1216.75 L1146.12 1216.75 L1145.53 1216.75 L1144.94 1216.75 L1144.36 1216.75 L1143.77 1216.75 L1143.18 1216.75 L1142.6 1216.75 L1142.01 1216.75 L1141.42 1216.75 L1140.84 1216.75 L1140.25 1216.75 L1139.67 1216.75 L1139.08 1216.75 L1138.49 1216.75 L1137.91 1216.75 L1137.32 1216.75 L1136.73 1216.75 L1136.15 1216.75 L1135.56 1216.75 L1134.97 1216.75 L1134.39 1216.75 L1133.8 1216.75 L1133.21 1216.75 L1132.63 1216.75 L1132.04 1216.75 L1131.46 1216.75 L1130.87 1216.75 L1130.28 1216.75 L1129.7 1216.75 L1129.11 1216.75 L1128.52 1216.75 L1127.94 1216.75 L1127.35 1216.75 L1126.76 1216.75 L1126.18 1216.75 L1125.59 1216.75 L1125.01 1216.75 L1124.42 1216.75 L1123.83 1216.75 L1123.25 1216.75 L1122.66 1216.75 L1122.07 1216.75 L1121.49 1216.75 L1120.9 1216.75 L1120.31 1216.75 L1119.73 1216.75 L1119.14 1216.75 L1118.55 1216.75 L1117.97 1216.75 L1117.38 1216.75 L1116.8 1216.75 L1116.21 1216.75 L1115.62 1216.75 L1115.04 1216.75 L1114.45 1216.75 L1113.86 1216.75 L1113.28 1216.75 L1112.69 1216.75 L1112.1 1216.75 L1111.52 1216.75 L1110.93 1216.75 L1110.34 1216.75 L1109.76 1216.75 L1109.17 1216.75 L1108.59 1216.75 L1108 1216.75 L1107.41 1216.75 L1106.83 1216.75 L1106.24 1216.75 L1105.65 1216.75 L1105.07 1216.75 L1104.48 1216.75 L1103.89 1216.75 L1103.31 1216.75 L1102.72 1216.75 L1102.14 1216.75 L1101.55 1216.75 L1100.96 1216.75 L1100.38 1216.75 L1099.79 1216.75 L1099.2 1216.75 L1098.62 1216.75 L1098.03 1216.75 L1097.44 1216.75 L1096.86 1216.75 L1096.27 1216.75 L1095.68 1216.75 L1095.1 1216.75 L1094.51 1216.75 L1093.93 1216.75 L1093.34 1216.75 L1092.75 1216.75 L1092.17 1216.75 L1091.58 1216.75 L1090.99 1216.75 L1090.41 1216.75 L1089.82 1216.75 L1089.23 1216.75 L1088.65 1216.75 L1088.06 1216.75 L1087.47 1216.75 L1086.89 1216.75 L1086.3 1216.75 L1085.72 1216.75 L1085.13 1216.75 L1084.54 1216.75 L1083.96 1216.75 L1083.37 1216.75 L1082.78 1216.75 L1082.2 1216.75 L1081.61 1216.75 L1081.02 1216.75 L1080.44 1216.75 L1079.85 1216.75 L1079.26 1216.75 L1078.68 1216.75 L1078.09 1216.75 L1077.51 1216.75 L1076.92 1216.75 L1076.33 1216.75 L1075.75 1216.75 L1075.16 1216.75 L1074.57 1216.75 L1073.99 1216.75 L1073.4 1216.75 L1072.81 1216.75 L1072.23 1216.75 L1071.64 1216.75 L1071.06 1216.75 L1070.47 1216.75 L1069.88 1216.75 L1069.3 1216.75 L1068.71 1216.75 L1068.12 1216.75 L1067.54 1216.75 L1066.95 1216.75 L1066.36 1216.75 L1065.78 1216.75 L1065.19 1216.75 L1064.6 1216.75 L1064.02 1216.75 L1063.43 1216.75 L1062.85 1216.75 L1062.26 1216.75 L1061.67 1216.75 L1061.09 1216.75 L1060.5 1216.75 L1059.91 1216.75 L1059.33 1216.75 L1058.74 1216.75 L1058.15 1216.75 L1057.57 1216.75 L1056.98 1216.75 L1056.39 1216.75 L1055.81 1216.75 L1055.22 1216.75 L1054.64 1216.75 L1054.05 1216.75 L1053.46 1216.75 L1052.88 1216.75 L1052.29 1216.75 L1051.7 1216.75 L1051.12 1216.75 L1050.53 1216.75 L1049.94 1216.75 L1049.36 1216.75 L1048.77 1216.75 L1048.19 1216.75 L1047.6 1216.75 L1047.01 1216.75 L1046.43 1216.75 L1045.84 1216.75 L1045.25 1216.75 L1044.67 1216.75 L1044.08 1216.75 L1043.49 1216.75 L1042.91 1216.75 L1042.32 1216.75 L1041.73 1216.75 L1041.15 1216.75 L1040.56 1216.75 L1039.98 1216.75 L1039.39 1216.75 L1038.8 1216.75 L1038.22 1216.75 L1037.63 1216.75 L1037.04 1216.75 L1036.46 1216.75 L1035.87 1216.75 L1035.28 1216.75 L1034.7 1216.75 L1034.11 1216.75 L1033.52 1216.75 L1032.94 1216.75 L1032.35 1216.75 L1031.77 1216.75 L1031.18 1216.75 L1030.59 1216.75 L1030.01 1216.75 L1029.42 1216.75 L1028.83 1216.75 L1028.25 1216.75 L1027.66 1216.75 L1027.07 1216.75 L1026.49 1216.75 L1025.9 1216.75 L1025.32 1216.75 L1024.73 1216.75 L1024.14 1216.75 L1023.56 1216.75 L1022.97 1216.75 L1022.38 1216.75 L1021.8 1216.75 L1021.21 1216.75 L1020.62 1216.75 L1020.04 1216.75 L1019.45 1216.75 L1018.86 1216.75 L1018.28 1216.75 L1017.69 1216.75 L1017.11 1216.75 L1016.52 1216.75 L1015.93 1216.75 L1015.35 1216.75 L1014.76 1216.75 L1014.17 1216.75 L1013.59 1216.75 L1013 1216.75 L1012.41 1216.75 L1011.83 1216.75 L1011.24 1216.75 L1010.65 1216.75 L1010.07 1216.75 L1009.48 1216.75 L1008.9 1216.75 L1008.31 1216.75 L1007.72 1216.75 L1007.14 1216.75 L1006.55 1216.75 L1005.96 1216.75 L1005.38 1216.75 L1004.79 1216.75 L1004.2 1216.75 L1003.62 1216.75 L1003.03 1216.75 L1002.44 1216.75 L1001.86 1216.75 L1001.27 1216.75 L1000.69 1216.75 L1000.1 1216.75 L999.513 1216.75 L998.926 1216.75 L998.34 1216.75 L997.754 1216.75 L997.167 1216.75 L996.581 1216.75 L995.994 1216.75 L995.408 1216.75 L994.822 1216.75 L994.235 1216.75 L993.649 1216.75 L993.062 1216.75 L992.476 1216.75 L991.889 1216.75 L991.303 1216.75 L990.717 1216.75 L990.13 1216.75 L989.544 1216.75 L988.957 1216.75 L988.371 1216.75 L987.785 1216.75 L987.198 1216.75 L986.612 1216.75 L986.025 1216.75  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1217.14 986.612,1217.14 987.198,1217.14 987.785,1217.14 988.371,1217.14 988.957,1217.14 989.544,1217.14 990.13,1217.14 990.717,1217.14 991.303,1217.14 991.889,1217.14 992.476,1217.14 993.062,1217.14 993.649,1217.14 994.235,1217.14 994.822,1217.14 995.408,1217.14 995.994,1217.14 996.581,1217.14 997.167,1217.14 997.754,1217.14 998.34,1217.14 998.926,1217.14 999.513,1217.14 1000.1,1217.14 1000.69,1217.14 1001.27,1217.14 1001.86,1217.14 1002.44,1217.14 1003.03,1217.14 1003.62,1217.14 1004.2,1217.14 1004.79,1217.14 1005.38,1217.14 1005.96,1217.14 1006.55,1217.14 1007.14,1217.14 1007.72,1217.14 1008.31,1217.14 1008.9,1217.14 1009.48,1217.14 1010.07,1217.14 1010.65,1217.14 1011.24,1217.14 1011.83,1217.14 1012.41,1217.14 1013,1217.14 1013.59,1217.14 1014.17,1217.14 1014.76,1217.14 1015.35,1217.14 1015.93,1217.14 1016.52,1217.14 1017.11,1217.14 1017.69,1217.14 1018.28,1217.14 1018.86,1217.14 1019.45,1217.14 1020.04,1217.14 1020.62,1217.14 1021.21,1217.14 1021.8,1217.14 1022.38,1217.14 1022.97,1217.14 1023.56,1217.14 1024.14,1217.14 1024.73,1217.14 1025.32,1217.14 1025.9,1217.14 1026.49,1217.14 1027.07,1217.14 1027.66,1217.14 1028.25,1217.14 1028.83,1217.14 1029.42,1217.14 1030.01,1217.14 1030.59,1217.14 1031.18,1217.14 1031.77,1217.14 1032.35,1217.14 1032.94,1217.14 1033.52,1217.14 1034.11,1217.14 1034.7,1217.14 1035.28,1217.14 1035.87,1217.14 1036.46,1217.14 1037.04,1217.14 1037.63,1217.14 1038.22,1217.14 1038.8,1217.14 1039.39,1217.14 1039.98,1217.14 1040.56,1217.14 1041.15,1217.14 1041.73,1217.14 1042.32,1217.14 1042.91,1217.14 1043.49,1217.14 1044.08,1217.14 1044.67,1217.14 1045.25,1217.14 1045.84,1217.14 1046.43,1217.14 1047.01,1217.14 1047.6,1217.14 1048.19,1217.14 1048.77,1217.14 1049.36,1217.14 1049.94,1217.14 1050.53,1217.14 1051.12,1217.14 1051.7,1217.14 1052.29,1217.14 1052.88,1217.14 1053.46,1217.14 1054.05,1217.14 1054.64,1217.14 1055.22,1217.14 1055.81,1217.14 1056.39,1217.14 1056.98,1217.14 1057.57,1217.14 1058.15,1217.14 1058.74,1217.14 1059.33,1217.14 1059.91,1217.14 1060.5,1217.14 1061.09,1217.14 1061.67,1217.14 1062.26,1217.14 1062.85,1217.14 1063.43,1217.14 1064.02,1217.14 1064.6,1217.14 1065.19,1217.14 1065.78,1217.14 1066.36,1217.14 1066.95,1217.14 1067.54,1217.14 1068.12,1217.14 1068.71,1217.14 1069.3,1217.14 1069.88,1217.14 1070.47,1217.14 1071.06,1217.14 1071.64,1217.14 1072.23,1217.14 1072.81,1217.14 1073.4,1217.14 1073.99,1217.14 1074.57,1217.14 1075.16,1217.14 1075.75,1217.14 1076.33,1217.14 1076.92,1217.14 1077.51,1217.14 1078.09,1217.14 1078.68,1217.14 1079.26,1217.14 1079.85,1217.14 1080.44,1217.14 1081.02,1217.14 1081.61,1217.14 1082.2,1217.14 1082.78,1217.14 1083.37,1217.14 1083.96,1217.14 1084.54,1217.14 1085.13,1217.14 1085.72,1217.14 1086.3,1217.14 1086.89,1217.14 1087.47,1217.14 1088.06,1217.14 1088.65,1217.14 1089.23,1217.14 1089.82,1217.14 1090.41,1217.14 1090.99,1217.14 1091.58,1217.14 1092.17,1217.14 1092.75,1217.14 1093.34,1217.14 1093.93,1217.14 1094.51,1217.14 1095.1,1217.14 1095.68,1217.14 1096.27,1217.14 1096.86,1217.14 1097.44,1217.14 1098.03,1217.14 1098.62,1217.14 1099.2,1217.14 1099.79,1217.14 1100.38,1217.14 1100.96,1217.14 1101.55,1217.14 1102.14,1217.14 1102.72,1217.14 1103.31,1217.14 1103.89,1217.14 1104.48,1217.14 1105.07,1217.14 1105.65,1217.14 1106.24,1217.14 1106.83,1217.14 1107.41,1217.14 1108,1217.14 1108.59,1217.14 1109.17,1217.14 1109.76,1217.14 1110.34,1217.14 1110.93,1217.14 1111.52,1217.14 1112.1,1217.14 1112.69,1217.14 1113.28,1217.14 1113.86,1217.14 1114.45,1217.14 1115.04,1217.14 1115.62,1217.14 1116.21,1217.14 1116.8,1217.14 1117.38,1217.14 1117.97,1217.14 1118.55,1217.14 1119.14,1217.14 1119.73,1217.14 1120.31,1217.14 1120.9,1217.14 1121.49,1217.14 1122.07,1217.14 1122.66,1217.14 1123.25,1217.14 1123.83,1217.14 1124.42,1217.14 1125.01,1217.14 1125.59,1217.14 1126.18,1217.14 1126.76,1217.14 1127.35,1217.14 1127.94,1217.14 1128.52,1217.14 1129.11,1217.14 1129.7,1217.14 1130.28,1217.14 1130.87,1217.14 1131.46,1217.14 1132.04,1217.14 1132.63,1217.14 1133.21,1217.14 1133.8,1217.14 1134.39,1217.14 1134.97,1217.14 1135.56,1217.14 1136.15,1217.14 1136.73,1217.14 1137.32,1217.14 1137.91,1217.14 1138.49,1217.14 1139.08,1217.14 1139.67,1217.14 1140.25,1217.14 1140.84,1217.14 1141.42,1217.14 1142.01,1217.14 1142.6,1217.14 1143.18,1217.14 1143.77,1217.14 1144.36,1217.14 1144.94,1217.14 1145.53,1217.14 1146.12,1217.14 1146.7,1217.14 1147.29,1217.14 1147.88,1217.14 1148.46,1217.14 1149.05,1217.14 1149.63,1217.14 1150.22,1217.14 1150.81,1217.14 1151.39,1217.14 1151.98,1217.14 1152.57,1217.14 1153.15,1217.14 1153.74,1217.14 1154.33,1217.14 1154.91,1217.14 1155.5,1217.14 1156.09,1217.14 1156.67,1217.14 1157.26,1217.14 1157.84,1217.14 1158.43,1217.14 1159.02,1217.14 1159.6,1217.14 1160.19,1217.14 1160.78,1217.14 1161.36,1217.14 1161.95,1217.14 1162.54,1217.14 1163.12,1217.14 1163.71,1217.14 1164.29,1217.14 1164.88,1217.14 1165.47,1217.14 1166.05,1217.14 1166.64,1217.14 1167.23,1217.14 1167.81,1217.14 1168.4,1217.14 1168.99,1217.14 1169.57,1217.14 1170.16,1217.14 1170.75,1217.14 1171.33,1217.14 1171.92,1217.14 1172.5,1217.14 1173.09,1217.14 1173.68,1217.14 1174.26,1217.14 1174.85,1217.14 1175.44,1217.14 1176.02,1217.14 1176.61,1217.14 1177.2,1217.14 1177.78,1217.14 1178.37,1217.14 1178.96,1217.14 1179.54,1217.14 1180.13,1217.14 1180.71,1217.14 1181.3,1217.14 1181.89,1217.14 1182.47,1217.14 1183.06,1217.14 1183.65,1217.14 1184.23,1217.14 1184.82,1217.14 1185.41,1217.14 1185.99,1217.14 1186.58,1217.14 1187.16,1217.14 1187.75,1217.14 1188.34,1217.14 1188.92,1217.14 1189.51,1217.14 1190.1,1217.14 1190.68,1217.14 1191.27,1217.14 1191.86,1217.14 1192.44,1217.14 1193.03,1217.14 1193.62,1217.14 1194.2,1217.14 1194.79,1217.14 1195.37,1217.14 1195.96,1217.14 1196.55,1217.14 1197.13,1217.14 1197.72,1217.14 1198.31,1217.14 1198.89,1217.14 1199.48,1217.14 1200.07,1217.14 1200.65,1217.14 1201.24,1217.14 1201.83,1217.14 1202.41,1217.14 1203,1217.14 1203.58,1217.14 1204.17,1217.14 1204.76,1217.14 1205.34,1217.14 1205.93,1217.14 1206.52,1217.14 1207.1,1217.14 1207.69,1217.14 1208.28,1217.14 1208.86,1217.14 1209.45,1217.14 1210.03,1217.14 1210.62,1217.14 1211.21,1217.14 1211.79,1217.14 1212.38,1217.14 1212.97,1217.14 1213.55,1217.14 1214.14,1217.14 1214.73,1217.14 1215.31,1217.14 1215.9,1217.14 1216.49,1217.14 1217.07,1217.14 1217.66,1217.14 1218.24,1217.14 1218.83,1217.14 1219.42,1217.14 1220,1217.14 1220.59,1217.14 1221.18,1217.14 1221.76,1217.14 1222.35,1217.14 1222.94,1217.14 1223.52,1217.14 1224.11,1217.14 1224.7,1217.14 1225.28,1217.14 1225.87,1217.14 1226.45,1217.14 1227.04,1217.14 1227.63,1217.14 1228.21,1217.14 1228.8,1217.14 1229.39,1217.14 1229.97,1217.14 1230.56,1217.14 1231.15,1217.14 1231.73,1217.14 1232.32,1217.14 1232.91,1217.14 1233.49,1217.14 1234.08,1217.14 1234.66,1217.14 1235.25,1217.14 1235.84,1217.14 1236.42,1217.14 1237.01,1217.14 1237.6,1217.14 1238.18,1217.14 1238.77,1217.14 1239.36,1217.14 1239.94,1217.14 1240.53,1217.14 1241.11,1217.14 1241.7,1217.14 1242.29,1217.14 1242.87,1217.14 1243.46,1217.14 1244.05,1217.14 1244.63,1217.14 1245.22,1217.14 1245.81,1217.14 1246.39,1217.14 1246.98,1217.14 1247.57,1217.14 1248.15,1217.14 1248.74,1217.14 1249.32,1217.14 1249.91,1217.14 1250.5,1217.14 1251.08,1217.14 1251.67,1217.14 1252.26,1217.14 1252.84,1217.14 1253.43,1217.14 1254.02,1217.14 1254.6,1217.14 1255.19,1217.14 1255.78,1217.14 1256.36,1217.14 1256.95,1217.14 1257.53,1217.14 1258.12,1217.14 1258.71,1217.14 1259.29,1217.14 1259.88,1217.14 1260.47,1217.14 1261.05,1217.14 1261.64,1217.14 1262.23,1217.14 1262.81,1217.14 1263.4,1217.14 1263.98,1217.14 1264.57,1217.14 1265.16,1217.14 1265.74,1217.14 1266.33,1217.14 1266.92,1217.14 1267.5,1217.14 1268.09,1217.14 1268.68,1217.14 1269.26,1217.14 1269.85,1217.14 1270.44,1217.14 1271.02,1217.14 1271.61,1217.14 1272.19,1217.14 1272.78,1217.14 1273.37,1217.14 1273.95,1217.14 1274.54,1217.14 1275.13,1217.14 1275.71,1217.14 1276.3,1217.14 1276.89,1217.14 1277.47,1217.14 1278.06,1217.14 1278.65,1217.14 1279.23,1217.14 1279.82,1217.14 1280.4,1217.14 1280.99,1217.14 1281.58,1217.14 1282.16,1217.14 1282.75,1217.14 1283.34,1217.14 1283.92,1217.14 1284.51,1217.14 1285.1,1217.14 1285.68,1217.14 1286.27,1217.14 1286.86,1217.14 1287.44,1217.14 1288.03,1217.14 1288.61,1217.14 1289.2,1217.14 1289.79,1217.14 1290.37,1217.14 1290.96,1217.14 1291.55,1217.14 1292.13,1217.14 1292.72,1217.14 1293.31,1217.14 1293.89,1217.14 1294.48,1217.14 1295.06,1217.14 1295.65,1217.14 1296.24,1217.14 1296.82,1217.14 1297.41,1217.14 1298,1217.14 1298.58,1217.14 1299.17,1217.14 1299.76,1217.14 1300.34,1217.14 1300.93,1217.14 1301.52,1217.14 1302.1,1217.14 1302.69,1217.14 1303.27,1217.14 1303.86,1217.14 1304.45,1217.14 1305.03,1217.14 1305.62,1217.14 1306.21,1217.14 1306.79,1217.14 1307.38,1217.14 1307.97,1217.14 1308.55,1217.14 1309.14,1217.14 1309.73,1217.14 1310.31,1217.14 1310.9,1217.14 1311.48,1217.14 1312.07,1217.14 1312.66,1217.14 1313.24,1217.14 1313.83,1217.14 1314.42,1217.14 1315,1217.14 1315.59,1217.14 1316.18,1217.14 1316.76,1217.14 1317.35,1217.14 1317.93,1217.14 1318.52,1217.14 1319.11,1217.14 1319.69,1217.14 1320.28,1217.14 1320.87,1217.14 1321.45,1217.14 1322.04,1217.14 1322.63,1217.14 1323.21,1217.14 1323.8,1217.14 1324.39,1217.14 1324.97,1217.14 1325.56,1217.14 1326.14,1217.14 1326.73,1217.14 1327.32,1217.14 1327.9,1217.14 1328.49,1217.14 1329.08,1217.14 1329.66,1217.14 1330.25,1217.14 1330.84,1217.14 1331.42,1217.14 1332.01,1217.14 1332.6,1217.14 1333.18,1217.14 1333.77,1217.14 1334.35,1217.14 1334.94,1217.14 1335.53,1217.14 1336.11,1217.14 1336.7,1217.14 1337.29,1217.14 1337.87,1217.14 1338.46,1217.14 1339.05,1217.14 1339.63,1217.14 1340.22,1217.14 1340.8,1217.14 1341.39,1217.14 1341.98,1217.14 1342.56,1217.14 1343.15,1217.14 1343.74,1217.14 1344.32,1217.14 1344.91,1217.14 1345.5,1217.14 1346.08,1217.14 1346.67,1217.14 1347.26,1217.14 1347.84,1217.14 1348.43,1217.14 1349.01,1217.14 1349.6,1217.14 1350.19,1217.14 1350.77,1217.14 1351.36,1217.14 1351.95,1217.14 1352.53,1217.14 1353.12,1217.14 1353.71,1217.14 1354.29,1217.14 1354.88,1217.14 1355.47,1217.14 1356.05,1217.14 1356.64,1217.14 1357.22,1217.14 1357.81,1217.14 1358.4,1217.14 1358.98,1217.14 1359.57,1217.14 1360.16,1217.14 1360.74,1217.14 1361.33,1217.14 1361.92,1217.14 1362.5,1217.14 1363.09,1217.14 1363.68,1217.14 1364.26,1217.14 1364.85,1217.14 1365.43,1217.14 1366.02,1217.14 1366.61,1217.14 1367.19,1217.14 1367.78,1217.14 1368.37,1217.14 1368.95,1217.14 1369.54,1217.14 1370.13,1217.14 1370.71,1217.14 1371.3,1217.14 1371.88,1217.14 1372.47,1217.14 1373.06,1217.14 1373.64,1217.14 1374.23,1217.14 1374.82,1217.14 1375.4,1217.14 1375.99,1217.14 1376.58,1217.14 1377.16,1217.14 1377.75,1217.14 1378.34,1217.14 1378.92,1217.14 1379.51,1217.14 1380.09,1217.14 1380.68,1217.14 1381.27,1217.14 1381.85,1217.14 1382.44,1217.14 1383.03,1217.14 1383.61,1217.14 1384.2,1217.14 1384.79,1217.14 1385.37,1217.14 1385.96,1217.14 1386.55,1217.14 1387.13,1217.14 1387.72,1217.14 1388.3,1217.14 1388.89,1217.14 1389.48,1217.14 1390.06,1217.14 1390.65,1217.14 1391.24,1217.14 1391.82,1217.14 1392.41,1217.14 1393,1217.14 1393.58,1217.14 1394.17,1217.14 1394.75,1217.14 1395.34,1217.14 1395.93,1217.14 1396.51,1217.14 1397.1,1217.14 1397.69,1217.14 1398.27,1217.14 1398.86,1217.14 1399.45,1217.14 1400.03,1217.14 1400.62,1217.14 1401.21,1217.14 1401.79,1217.14 1402.38,1217.14 1402.96,1217.14 1403.55,1217.14 1404.14,1217.14 1404.72,1217.14 1405.31,1217.14 1405.9,1217.14 1406.48,1217.14 1407.07,1217.14 1407.66,1217.14 1408.24,1217.14 1408.83,1217.14 1409.42,1217.14 1410,1217.14 1410.59,1217.14 1411.17,1217.14 1411.76,1217.14 1412.35,1217.14 1412.93,1217.14 1413.52,1217.14 1414.11,1217.14 1414.69,1217.14 1415.28,1217.14 1415.87,1217.14 1416.45,1217.14 1417.04,1217.14 1417.63,1217.14 1418.21,1217.14 1418.8,1217.14 1419.38,1217.14 1419.97,1217.14 1420.56,1217.14 1421.14,1217.14 1421.73,1217.14 1422.32,1217.14 1422.9,1217.14 1423.49,1217.14 1424.08,1217.14 1424.66,1217.14 1425.25,1217.14 1425.83,1217.14 1426.42,1217.14 1427.01,1217.14 1427.59,1217.14 1428.18,1217.14 1428.77,1217.14 1429.35,1217.14 1429.94,1217.14 1430.53,1217.14 1431.11,1217.14 1431.7,1217.14 1432.29,1217.14 1432.87,1217.14 1433.46,1217.14 1434.04,1217.14 1434.63,1217.14 1435.22,1217.14 1435.8,1217.14 1436.39,1217.14 1436.98,1217.14 1437.56,1217.14 1438.15,1217.14 1438.74,1217.14 1439.32,1217.14 1439.91,1217.14 1440.5,1217.14 1441.08,1217.14 1441.67,1217.14 1442.25,1217.14 1442.84,1217.14 1443.43,1217.14 1444.01,1217.14 1444.6,1217.14 1445.19,1217.14 1445.77,1217.14 1446.36,1217.14 1446.95,1217.14 1447.53,1217.14 1448.12,1217.14 1448.7,1217.14 1449.29,1217.14 1449.88,1217.14 1450.46,1217.14 1451.05,1217.14 1451.64,1217.14 1452.22,1217.14 1452.81,1217.14 1453.4,1217.14 1453.98,1217.14 1454.57,1217.14 1455.16,1217.14 1455.74,1217.14 1456.33,1217.14 1456.91,1217.14 1457.5,1217.14 1458.09,1217.14 1458.67,1217.14 1459.26,1217.14 1459.85,1217.14 1460.43,1217.14 1461.02,1217.14 1461.61,1217.14 1462.19,1217.14 1462.78,1217.14 1463.37,1217.14 1463.95,1217.14 1464.54,1217.14 1465.12,1217.14 1465.71,1217.14 1466.3,1217.14 1466.88,1217.14 1467.47,1217.14 1468.06,1217.14 1468.64,1217.14 1469.23,1217.14 1469.82,1217.14 1470.4,1217.14 1470.99,1217.14 1471.57,1217.14 1472.16,1217.14 1472.75,1217.14 1473.33,1217.14 1473.92,1217.14 1474.51,1217.14 1475.09,1217.14 1475.68,1217.14 1476.27,1217.14 1476.85,1217.14 1477.44,1217.14 1478.03,1217.14 1478.61,1217.14 1479.2,1217.14 1479.78,1217.14 1480.37,1217.14 1480.96,1217.14 1481.54,1217.14 1482.13,1217.14 1482.72,1217.14 1483.3,1217.14 1483.89,1217.14 1484.48,1217.14 1485.06,1217.14 1485.65,1217.14 1486.24,1217.14 1486.82,1217.14 1487.41,1217.14 1487.99,1217.14 1488.58,1217.14 1489.17,1217.14 1489.75,1217.14 1490.34,1217.14 1490.93,1217.14 1491.51,1217.14 1492.1,1217.14 1492.69,1217.14 1493.27,1217.14 1493.86,1217.14 1494.45,1217.14 1495.03,1217.14 1495.62,1217.14 1496.2,1217.14 1496.79,1217.14 1497.38,1217.14 1497.96,1217.14 1498.55,1217.14 1499.14,1217.14 1499.72,1217.14 1500.31,1217.14 1500.9,1217.14 1501.48,1217.14 1502.07,1217.14 1502.65,1217.14 1503.24,1217.14 1503.83,1217.14 1504.41,1217.14 1505,1217.14 1505.59,1217.14 1506.17,1217.14 1506.76,1217.14 1507.35,1217.14 1507.93,1217.14 1508.52,1217.14 1509.11,1217.14 1509.69,1217.14 1510.28,1217.14 1510.86,1217.14 1511.45,1217.14 1512.04,1217.14 1512.62,1217.14 1513.21,1217.14 1513.8,1217.14 1514.38,1217.14 1514.97,1217.14 1515.56,1217.14 1516.14,1217.14 1516.73,1217.14 1517.32,1217.14 1517.9,1217.14 1518.49,1217.14 1519.07,1217.14 1519.66,1217.14 1520.25,1217.14 1520.83,1217.14 1521.42,1217.14 1522.01,1217.14 1522.59,1217.14 1523.18,1217.14 1523.77,1217.14 1524.35,1217.14 1524.94,1217.14 1525.52,1217.14 1526.11,1217.14 1526.7,1217.14 1527.28,1217.14 1527.87,1217.14 1528.46,1217.14 1529.04,1217.14 1529.63,1217.14 1530.22,1217.14 1530.8,1217.14 1531.39,1217.14 1531.98,1217.14 1532.56,1217.14 1533.15,1217.14 1533.73,1217.14 1534.32,1217.14 1534.91,1217.14 1535.49,1217.14 1536.08,1217.14 1536.67,1217.14 1537.25,1217.14 1537.84,1217.14 1538.43,1217.14 1539.01,1217.14 1539.6,1217.14 1540.19,1217.14 1540.77,1217.14 1541.36,1217.14 1541.94,1217.14 1542.53,1217.14 1543.12,1217.14 1543.7,1217.14 1544.29,1217.14 1544.88,1217.14 1545.46,1217.14 1546.05,1217.14 1546.64,1217.14 1547.22,1217.14 1547.81,1217.14 1548.4,1217.14 1548.98,1217.14 1549.57,1217.14 1550.15,1217.14 1550.74,1217.14 1551.33,1217.14 1551.91,1217.14 1552.5,1217.14 1553.09,1217.14 1553.67,1217.14 1554.26,1217.14 1554.85,1217.14 1555.43,1217.14 1556.02,1217.14 1556.6,1217.14 1557.19,1217.14 1557.78,1217.14 1558.36,1217.14 1558.95,1217.14 1559.54,1217.14 1560.12,1217.14 1560.71,1217.14 1561.3,1217.14 1561.88,1217.14 1562.47,1217.14 1563.06,1217.14 1563.64,1217.14 1564.23,1217.14 1564.81,1217.14 1565.4,1217.14 1565.99,1217.14 1566.57,1217.14 1567.16,1217.14 1567.75,1217.14 1568.33,1217.14 1568.92,1217.14 1569.51,1217.14 1570.09,1217.14 1570.68,1217.14 1571.27,1217.14 1571.85,1217.14 1572.44,1217.14 1573.02,1217.14 1573.61,1217.14 1574.2,1217.14 1574.78,1217.14 1575.37,1217.14 1575.96,1217.14 1576.54,1217.14 1577.13,1217.14 1577.72,1217.14 1578.3,1217.14 1578.89,1217.14 1579.47,1217.14 1580.06,1217.14 1580.65,1217.14 1581.23,1217.14 1581.82,1217.14 1582.41,1217.14 1582.99,1217.14 1583.58,1217.14 1584.17,1217.14 1584.75,1217.14 1585.34,1217.14 1585.93,1217.14 1586.51,1217.14 1587.1,1217.14 1587.68,1217.14 1588.27,1217.14 1588.86,1217.14 1589.44,1217.14 1590.03,1217.14 1590.62,1217.14 1591.2,1217.14 1591.79,1217.14 1592.38,1217.14 1592.96,1217.14 1593.55,1217.14 1594.14,1217.14 1594.72,1217.14 1595.31,1217.14 1595.89,1217.14 1596.48,1217.14 1597.07,1217.14 1597.65,1217.14 1598.24,1217.14 1598.83,1217.14 1599.41,1217.14 1600,1217.14 1600.59,1217.14 1601.17,1217.14 1601.76,1217.14 1602.34,1217.14 1602.93,1217.14 1603.52,1217.14 1604.1,1217.14 1604.69,1217.14 1605.28,1217.14 1605.86,1217.14 1606.45,1217.14 1607.04,1217.14 1607.62,1217.14 1608.21,1217.14 1608.8,1217.14 1609.38,1217.14 1609.97,1217.14 1610.55,1217.14 1611.14,1217.14 1611.73,1217.14 1612.31,1217.14 1612.9,1217.14 1613.49,1217.14 1614.07,1217.14 1614.66,1217.14 1615.25,1217.14 1615.83,1217.14 1616.42,1217.14 1617.01,1217.14 1617.59,1217.14 1618.18,1217.14 1618.76,1217.14 1619.35,1217.14 1619.94,1217.14 1620.52,1217.14 1621.11,1217.14 1621.7,1217.14 1622.28,1217.14 1622.87,1217.14 1623.46,1217.14 1624.04,1217.14 1624.63,1217.14 1625.22,1217.14 1625.8,1217.14 1626.39,1217.14 1626.97,1217.14 1627.56,1217.14 1628.15,1217.14 1628.73,1217.14 1629.32,1217.14 1629.91,1217.14 1630.49,1217.14 1631.08,1217.14 1631.67,1217.14 1632.25,1217.14 1632.84,1217.14 1633.42,1217.14 1634.01,1217.14 1634.6,1217.14 1635.18,1217.14 1635.77,1217.14 1636.36,1217.14 1636.94,1217.14 1637.53,1217.14 1638.12,1217.14 1638.7,1217.14 1639.29,1217.14 1639.88,1217.14 1640.46,1217.14 1641.05,1217.14 1641.63,1217.14 1642.22,1217.14 1642.81,1217.14 1643.39,1217.14 1643.98,1217.14 1644.57,1217.14 1645.15,1217.14 1645.74,1217.14 1646.33,1217.14 1646.91,1217.14 1647.5,1217.14 1648.09,1217.14 1648.67,1217.14 1649.26,1217.14 1649.84,1217.14 1650.43,1217.14 1651.02,1217.14 1651.6,1217.14 1652.19,1217.14 1652.78,1217.14 1653.36,1217.14 1653.95,1217.14 1654.54,1217.14 1655.12,1217.14 1655.71,1217.14 1656.29,1217.14 1656.88,1217.14 1657.47,1217.14 1658.05,1217.14 1658.64,1217.14 1659.23,1217.14 1659.81,1217.14 1660.4,1217.14 1660.99,1217.14 1661.57,1217.14 1662.16,1217.14 1662.75,1217.14 1663.33,1217.14 1663.92,1217.14 1664.5,1217.14 1665.09,1217.14 1665.68,1217.14 1666.26,1217.14 1666.85,1217.14 1667.44,1217.14 1668.02,1217.14 1668.61,1217.14 1669.2,1217.14 1669.78,1217.14 1670.37,1217.14 1670.96,1217.14 1671.54,1217.14 1672.13,1217.14 1672.71,1217.14 1673.3,1217.14 1673.89,1217.14 1674.47,1217.14 1675.06,1217.14 1675.65,1217.14 1676.23,1217.14 1676.82,1217.14 1677.41,1217.14 1677.99,1217.14 1678.58,1217.14 1679.17,1217.14 1679.75,1217.14 1680.34,1217.14 1680.92,1217.14 1681.51,1217.14 1682.1,1217.14 1682.68,1217.14 1683.27,1217.14 1683.86,1217.14 1684.44,1217.14 1685.03,1217.14 1685.62,1217.14 1686.2,1217.14 1686.79,1217.14 1687.37,1217.14 1687.96,1217.14 1688.55,1217.14 1689.13,1217.14 1689.72,1217.14 1690.31,1217.14 1690.89,1217.14 1691.48,1217.14 1692.07,1217.14 1692.65,1217.14 1693.24,1217.14 1693.83,1217.14 1694.41,1217.14 1695,1217.14 1695.58,1217.14 1696.17,1217.14 1696.76,1217.14 1697.34,1217.14 1697.93,1217.14 1698.52,1217.14 1699.1,1217.14 1699.69,1217.14 1700.28,1217.14 1700.86,1217.14 1701.45,1217.14 1702.04,1217.14 1702.62,1217.14 1703.21,1217.14 1703.79,1217.14 1704.38,1217.14 1704.97,1217.14 1705.55,1217.14 1706.14,1217.14 1706.73,1217.14 1707.31,1217.14 1707.9,1217.14 1708.49,1217.14 1709.07,1217.14 1709.66,1217.14 1710.24,1217.14 1710.83,1217.14 1711.42,1217.14 1712,1217.14 1712.59,1217.14 1713.18,1217.14 1713.76,1217.14 1714.35,1217.14 1714.94,1217.14 1715.52,1217.14 1716.11,1217.14 1716.7,1217.14 1717.28,1217.14 1717.87,1217.14 1718.45,1217.14 1719.04,1217.14 1719.63,1217.14 1720.21,1217.14 1720.8,1217.14 1721.39,1217.14 1721.97,1217.14 1722.56,1217.14 1723.15,1217.14 1723.73,1217.14 1724.32,1217.14 1724.91,1217.14 1725.49,1217.14 1726.08,1217.14 1726.66,1217.14 1727.25,1217.14 1727.84,1217.14 1728.42,1217.14 1729.01,1217.14 1729.6,1217.14 1730.18,1217.14 1730.77,1217.14 1731.36,1217.14 1731.94,1217.14 1732.53,1217.14 1733.11,1217.14 1733.7,1217.14 1734.29,1217.14 1734.87,1217.14 1735.46,1217.14 1736.05,1217.14 1736.63,1217.14 1737.22,1217.14 1737.81,1217.14 1738.39,1217.14 1738.98,1217.14 1739.57,1217.14 1740.15,1217.14 1740.74,1217.14 1741.32,1217.14 1741.91,1217.14 1742.5,1217.14 1743.08,1217.14 1743.67,1217.14 1744.26,1217.14 1744.84,1217.14 1745.43,1217.14 1746.02,1217.14 1746.6,1217.14 1747.19,1217.14 1747.78,1217.14 1748.36,1217.14 1748.95,1217.14 1749.53,1217.14 1750.12,1217.14 1750.71,1217.14 1751.29,1217.14 1751.88,1217.14 1752.47,1217.14 1753.05,1217.14 1753.64,1217.14 1754.23,1217.14 1754.81,1217.14 1755.4,1217.14 1755.99,1217.14 1756.57,1217.14 1757.16,1217.14 1757.74,1217.14 1758.33,1217.14 1758.92,1217.14 1759.5,1217.14 1760.09,1217.14 1760.68,1217.14 1761.26,1217.14 1761.85,1217.14 1762.44,1217.14 1763.02,1217.14 1763.61,1217.14 1764.19,1217.14 1764.78,1217.14 1765.37,1217.14 1765.95,1217.14 1766.54,1217.14 1767.13,1217.14 1767.71,1217.14 1768.3,1217.14 1768.89,1217.14 1769.47,1217.14 1770.06,1217.14 1770.65,1217.14 1771.23,1217.14 1771.82,1217.14 1772.4,1217.14 1772.99,1217.14 1773.58,1217.14 1774.16,1217.14 1774.75,1217.14 1775.34,1217.14 1775.92,1217.14 1776.51,1217.14 1777.1,1217.14 1777.68,1217.14 1778.27,1217.14 1778.86,1217.14 1779.44,1217.14 1780.03,1217.14 1780.61,1217.14 1781.2,1217.14 1781.79,1217.14 1782.37,1217.14 1782.96,1217.14 1783.55,1217.14 1784.13,1217.14 1784.72,1217.14 1785.31,1217.14 1785.89,1217.14 1786.48,1217.14 1787.06,1217.14 1787.65,1217.14 1788.24,1217.14 1788.82,1217.14 1789.41,1217.14 1790,1217.14 1790.58,1217.14 1791.17,1217.14 1791.76,1217.14 1792.34,1217.14 1792.93,1217.14 1793.52,1217.14 1794.1,1217.14 1794.69,1217.14 1795.27,1217.14 1795.86,1217.14 1796.45,1217.14 1797.03,1217.14 1797.62,1217.14 1798.21,1217.14 1798.79,1217.14 1799.38,1217.14 1799.97,1217.14 1800.55,1217.14 1801.14,1217.14 1801.73,1217.14 1802.31,1217.14 1802.9,1217.14 1803.48,1217.14 1804.07,1217.14 1804.66,1217.14 1805.24,1217.14 1805.83,1217.14 1806.42,1217.14 1807,1217.14 1807.59,1217.14 1808.18,1217.14 1808.76,1217.14 1809.35,1217.14 1809.94,1217.14 1810.52,1217.14 1811.11,1217.14 1811.69,1217.14 1812.28,1217.14 1812.87,1217.14 1813.45,1217.14 1814.04,1217.14 1814.63,1217.14 1815.21,1217.14 1815.8,1217.14 1816.39,1217.14 1816.97,1217.14 1817.56,1217.14 1818.14,1217.14 1818.73,1217.14 1819.32,1217.14 1819.9,1217.14 1820.49,1217.14 1821.08,1217.14 1821.66,1217.14 1822.25,1217.14 1822.84,1217.14 1823.42,1217.14 1824.01,1217.14 1824.6,1217.14 1825.18,1217.14 1825.77,1217.14 1826.35,1217.14 1826.94,1217.14 1827.53,1217.14 1828.11,1217.14 1828.7,1217.14 1829.29,1217.14 1829.87,1217.14 1830.46,1217.14 1831.05,1217.14 1831.63,1217.14 1832.22,1217.14 1832.81,1217.14 1833.39,1217.14 1833.98,1217.14 1834.56,1217.14 1835.15,1217.14 1835.74,1217.14 1836.32,1217.14 1836.91,1217.14 1837.5,1217.14 1838.08,1217.14 1838.67,1217.14 1839.26,1217.14 1839.84,1217.14 1840.43,1217.14 1841.01,1217.14 1841.6,1217.14 1842.19,1217.14 1842.77,1217.14 1843.36,1217.14 1843.95,1217.14 1844.53,1217.14 1845.12,1217.14 1845.71,1217.14 1846.29,1217.14 1846.88,1217.14 1847.47,1217.14 1848.05,1217.14 1848.64,1217.14 1849.22,1217.14 1849.81,1217.14 1850.4,1217.14 1850.98,1217.14 1851.57,1217.14 1852.16,1217.14 1852.74,1217.14 1853.33,1217.14 1853.92,1217.14 1854.5,1217.14 1855.09,1217.14 1855.68,1217.14 1856.26,1217.14 1856.85,1217.14 1857.43,1217.14 1858.02,1217.14 1858.61,1217.14 1859.19,1217.14 1859.78,1217.14 1860.37,1217.14 1860.95,1217.14 1861.54,1217.14 1862.13,1217.14 1862.71,1217.14 1863.3,1217.14 1863.88,1217.14 1864.47,1217.14 1865.06,1217.14 1865.64,1217.14 1866.23,1217.14 1866.82,1217.14 1867.4,1217.14 1867.99,1217.14 1868.58,1217.14 1869.16,1217.14 1869.75,1217.14 1870.34,1217.14 1870.92,1217.14 1871.51,1217.14 1872.09,1217.14 1872.68,1217.14 1873.27,1217.14 1873.85,1217.14 1874.44,1217.14 1875.03,1217.14 1875.61,1217.14 1876.2,1217.14 1876.79,1217.14 1877.37,1217.14 1877.96,1217.14 1878.55,1217.14 1879.13,1217.14 1879.72,1217.14 1880.3,1217.14 1880.89,1217.14 1881.48,1217.14 1882.06,1217.14 1882.65,1217.14 1883.24,1217.14 1883.82,1217.14 1884.41,1217.14 1885,1217.14 1885.58,1217.14 1886.17,1217.14 1886.76,1217.14 1887.34,1217.14 1887.93,1217.14 1888.51,1217.14 1889.1,1217.14 1889.69,1217.14 1890.27,1217.14 1890.86,1217.14 1891.45,1217.14 1892.03,1217.14 1892.62,1217.14 1893.21,1217.14 1893.79,1217.14 1894.38,1217.14 1894.96,1217.14 1895.55,1217.14 1896.14,1217.14 1896.72,1217.14 1897.31,1217.14 1897.9,1217.14 1898.48,1217.14 1899.07,1217.14 1899.66,1217.14 1900.24,1217.14 1900.83,1217.14 1901.42,1217.14 1902,1217.14 1902.59,1217.14 1903.17,1217.14 1903.76,1217.14 1904.35,1217.14 1904.93,1217.14 1905.52,1217.14 1906.11,1217.14 1906.69,1217.14 1907.28,1217.14 1907.87,1217.14 1908.45,1217.14 1909.04,1217.14 1909.63,1217.14 1910.21,1217.14 1910.8,1217.14 1911.38,1217.14 1911.97,1217.14 1912.56,1217.14 1913.14,1217.14 1913.73,1217.14 1914.32,1217.14 1914.9,1217.14 1915.49,1217.14 1916.08,1217.14 1916.66,1217.14 1917.25,1217.14 1917.83,1217.14 1918.42,1217.14 1919.01,1217.14 1919.59,1217.14 1920.18,1217.14 1920.77,1217.14 1921.35,1217.14 1921.94,1217.14 1922.53,1217.14 1923.11,1217.14 1923.7,1217.14 1924.29,1217.14 1924.87,1217.14 1925.46,1217.14 1926.04,1217.14 1926.63,1217.14 1927.22,1217.14 1927.8,1217.14 1928.39,1217.14 1928.98,1217.14 1929.56,1217.14 1930.15,1217.14 1930.74,1217.14 1931.32,1217.14 1931.91,1217.14 1932.5,1217.14 1933.08,1217.14 1933.67,1217.14 1934.25,1217.14 1934.84,1217.14 1935.43,1217.14 1936.01,1217.14 1936.6,1217.14 1937.19,1217.14 1937.77,1217.14 1938.36,1217.14 1938.95,1217.14 1939.53,1217.14 1940.12,1217.14 1940.71,1217.14 1941.29,1217.14 1941.88,1217.14 1942.46,1217.14 1943.05,1217.14 1943.64,1217.14 1944.22,1217.14 1944.81,1217.14 1945.4,1217.14 1945.98,1217.14 1946.57,1217.14 1947.16,1217.14 1947.74,1217.14 1948.33,1217.14 1948.91,1217.14 1949.5,1217.14 1950.09,1217.14 1950.67,1217.14 1951.26,1217.14 1951.85,1217.14 1952.43,1217.14 1953.02,1217.14 1953.61,1217.14 1954.19,1217.14 1954.78,1217.14 1955.37,1217.14 1955.95,1217.14 1956.54,1217.14 1957.12,1217.14 1957.71,1217.14 1958.3,1217.14 1958.88,1217.14 1959.47,1217.14 1960.06,1217.14 1960.64,1217.14 1961.23,1217.14 1961.82,1217.14 1962.4,1217.14 1962.99,1217.14 1963.58,1217.14 1964.16,1217.14 1964.75,1217.14 1965.33,1217.14 1965.92,1217.14 1966.51,1217.14 1967.09,1217.14 1967.68,1217.14 1968.27,1217.14 1968.85,1217.14 1969.44,1217.14 1970.03,1217.14 1970.61,1217.14 1971.2,1217.14 1971.78,1217.14 1972.37,1217.14 1972.96,1217.14 1973.54,1217.14 1974.13,1217.14 1974.72,1217.14 1975.3,1217.14 1975.89,1217.14 1976.48,1217.14 1977.06,1217.14 1977.65,1217.14 1978.24,1217.14 1978.82,1217.14 1979.41,1217.14 1979.99,1217.14 1980.58,1217.14 1981.17,1217.14 1981.75,1217.14 1982.34,1217.14 1982.93,1217.14 1983.51,1217.14 1984.1,1217.14 1984.69,1217.14 1985.27,1217.14 1985.86,1217.14 1986.45,1217.14 1987.03,1217.14 1987.62,1217.14 1988.2,1217.14 1988.79,1217.14 1989.38,1217.14 1989.96,1217.14 1990.55,1217.14 1991.14,1217.14 1991.72,1217.14 1992.31,1217.14 1992.9,1217.14 1993.48,1217.14 1994.07,1217.14 1994.65,1217.14 1995.24,1217.14 1995.83,1217.14 1996.41,1217.14 1997,1217.14 1997.59,1217.14 1998.17,1217.14 1998.76,1217.14 1999.35,1217.14 1999.93,1217.14 2000.52,1217.14 2001.11,1217.14 2001.69,1217.14 2002.28,1217.14 2002.86,1217.14 2003.45,1217.14 2004.04,1217.14 2004.62,1217.14 2005.21,1217.14 2005.8,1217.14 2006.38,1217.14 2006.97,1217.14 2007.56,1217.14 2008.14,1217.14 2008.73,1217.14 2009.32,1217.14 2009.9,1217.14 2010.49,1217.14 2011.07,1217.14 2011.66,1217.14 2012.25,1217.14 2012.83,1217.14 2013.42,1217.14 2014.01,1217.14 2014.59,1217.14 2015.18,1217.14 2015.77,1217.14 2016.35,1217.14 2016.94,1217.14 2017.53,1217.14 2018.11,1217.14 2018.7,1217.14 2019.28,1217.14 2019.87,1217.14 2020.46,1217.14 2021.04,1217.14 2021.63,1217.14 2022.22,1217.14 2022.8,1217.14 2023.39,1217.14 2023.98,1217.14 2024.56,1217.14 2025.15,1217.14 2025.73,1217.14 2026.32,1217.14 2026.91,1217.14 2027.49,1217.14 2028.08,1217.14 2028.67,1217.14 2029.25,1217.14 2029.84,1217.14 2030.43,1217.14 2031.01,1217.14 2031.6,1217.14 2032.19,1217.14 2032.77,1217.14 2033.36,1217.14 2033.94,1217.14 2034.53,1217.14 2035.12,1217.14 2035.7,1217.14 2036.29,1217.14 2036.88,1217.14 2037.46,1217.14 2038.05,1217.14 2038.64,1217.14 2039.22,1217.14 2039.81,1217.14 2040.4,1217.14 2040.98,1217.14 2041.57,1217.14 2042.15,1217.14 2042.74,1217.14 2043.33,1217.14 2043.91,1217.14 2044.5,1217.14 2045.09,1217.14 2045.67,1217.14 2046.26,1217.14 2046.85,1217.14 2047.43,1217.14 2048.02,1217.14 2048.6,1217.14 2049.19,1217.14 2049.78,1217.14 2050.36,1217.14 2050.95,1217.14 2051.54,1217.14 2052.12,1217.14 2052.71,1217.14 2053.3,1217.14 2053.88,1217.14 2054.47,1217.14 2055.06,1217.14 2055.64,1217.14 2056.23,1217.14 2056.81,1217.14 2057.4,1217.14 2057.99,1217.14 2058.57,1217.14 2059.16,1217.14 2059.75,1217.14 2060.33,1217.14 2060.92,1217.14 2061.51,1217.14 2062.09,1217.14 2062.68,1217.14 2063.27,1217.14 2063.85,1217.14 2064.44,1217.14 2065.02,1217.14 2065.61,1217.14 2066.2,1217.14 2066.78,1217.14 2067.37,1217.14 2067.96,1217.14 2068.54,1217.14 2069.13,1217.14 2069.72,1217.14 2070.3,1217.14 2070.89,1217.14 2071.48,1217.14 2072.06,1217.14 2072.65,1217.14 2073.23,1217.14 2073.82,1217.14 2074.41,1217.14 2074.99,1217.14 2075.58,1217.14 2076.17,1217.14 2076.75,1217.14 2077.34,1217.14 2077.93,1217.14 2078.51,1217.14 2079.1,1217.14 2079.68,1217.14 2080.27,1217.14 2080.86,1217.14 2081.44,1217.14 2082.03,1217.14 2082.62,1217.14 2083.2,1217.14 2083.79,1217.14 2084.38,1217.14 2084.96,1217.14 2085.55,1217.14 2086.14,1217.14 2086.72,1217.14 2087.31,1217.14 2087.89,1217.14 2088.48,1217.14 2089.07,1217.14 2089.65,1217.14 2090.24,1217.14 2090.83,1217.14 2091.41,1217.14 2092,1217.14 2092.59,1217.14 2093.17,1217.14 2093.76,1217.14 2094.35,1217.14 2094.93,1217.14 2095.52,1217.14 2096.1,1217.14 2096.69,1217.14 2097.28,1217.14 2097.86,1217.14 2098.45,1217.14 2099.04,1217.14 2099.62,1217.14 2100.21,1217.14 2100.8,1217.14 2101.38,1217.14 2101.97,1217.14 2102.55,1217.14 2103.14,1217.14 2103.73,1217.14 2104.31,1217.14 2104.9,1217.14 2105.49,1217.14 2106.07,1217.14 2106.66,1217.14 2107.25,1217.14 2107.83,1217.14 2108.42,1217.14 2109.01,1217.14 2109.59,1217.14 2110.18,1217.14 2110.76,1217.14 2111.35,1217.14 2111.94,1217.14 2112.52,1217.14 2113.11,1217.14 2113.7,1217.14 2114.28,1217.14 2114.87,1217.14 2115.46,1217.14 2116.04,1217.14 2116.63,1217.14 2117.22,1217.14 2117.8,1217.14 2118.39,1217.14 2118.97,1217.14 2119.56,1217.14 2120.15,1217.14 2120.73,1217.14 2121.32,1217.14 2121.91,1217.14 2122.49,1217.14 2123.08,1217.14 2123.67,1217.14 2124.25,1217.14 2124.84,1217.14 2125.42,1217.14 2126.01,1217.14 2126.6,1217.14 2127.18,1217.14 2127.77,1217.14 2128.36,1217.14 2128.94,1217.14 2129.53,1217.14 2130.12,1217.14 2130.7,1217.14 2131.29,1217.14 2131.88,1217.14 2132.46,1217.14 2133.05,1217.14 2133.63,1217.14 2134.22,1217.14 2134.81,1217.14 2135.39,1217.14 2135.98,1217.14 2136.57,1217.14 2137.15,1217.14 2137.74,1217.14 2138.33,1217.14 2138.91,1217.14 2139.5,1217.14 2140.09,1217.14 2140.67,1217.14 2141.26,1217.14 2141.84,1217.14 2142.43,1217.14 2143.02,1217.14 2143.6,1217.14 2144.19,1217.14 2144.78,1217.14 2145.36,1217.14 2145.95,1217.14 2146.54,1217.14 2147.12,1217.14 2147.71,1217.14 2148.3,1217.14 2148.88,1217.14 2149.47,1217.14 2150.05,1217.14 2150.64,1217.14 2151.23,1217.14 2151.81,1217.14 2152.4,1217.14 2152.99,1217.14 2153.57,1217.14 2154.16,1217.14 2154.75,1217.14 2155.33,1217.14 2155.92,1217.14 2156.5,1217.14 2157.09,1217.14 2157.68,1217.14 2158.26,1217.14 \"/>\n<path clip-path=\"url(#clip062)\" d=\"M986.025 1216.99 L986.612 1216.99 L987.198 1216.99 L987.785 1216.99 L988.371 1216.99 L988.957 1216.99 L989.544 1216.99 L990.13 1216.99 L990.717 1216.99 L991.303 1216.99 L991.889 1216.99 L992.476 1216.99 L993.062 1216.99 L993.649 1216.99 L994.235 1216.99 L994.822 1216.99 L995.408 1216.99 L995.994 1216.99 L996.581 1216.99 L997.167 1216.99 L997.754 1216.99 L998.34 1216.99 L998.926 1216.99 L999.513 1216.99 L1000.1 1216.99 L1000.69 1216.99 L1001.27 1216.99 L1001.86 1216.99 L1002.44 1216.99 L1003.03 1216.99 L1003.62 1216.99 L1004.2 1216.99 L1004.79 1216.99 L1005.38 1216.99 L1005.96 1216.99 L1006.55 1216.99 L1007.14 1216.99 L1007.72 1216.99 L1008.31 1216.99 L1008.9 1216.99 L1009.48 1216.99 L1010.07 1216.99 L1010.65 1216.99 L1011.24 1216.99 L1011.83 1216.99 L1012.41 1216.99 L1013 1216.99 L1013.59 1216.99 L1014.17 1216.99 L1014.76 1216.99 L1015.35 1216.99 L1015.93 1216.99 L1016.52 1216.99 L1017.11 1216.99 L1017.69 1216.99 L1018.28 1216.99 L1018.86 1216.99 L1019.45 1216.99 L1020.04 1216.99 L1020.62 1216.99 L1021.21 1216.99 L1021.8 1216.99 L1022.38 1216.99 L1022.97 1216.99 L1023.56 1216.99 L1024.14 1216.99 L1024.73 1216.99 L1025.32 1216.99 L1025.9 1216.99 L1026.49 1216.99 L1027.07 1216.99 L1027.66 1216.99 L1028.25 1216.99 L1028.83 1216.99 L1029.42 1216.99 L1030.01 1216.99 L1030.59 1216.99 L1031.18 1216.99 L1031.77 1216.99 L1032.35 1216.99 L1032.94 1216.99 L1033.52 1216.99 L1034.11 1216.99 L1034.7 1216.99 L1035.28 1216.99 L1035.87 1216.99 L1036.46 1216.99 L1037.04 1216.99 L1037.63 1216.99 L1038.22 1216.99 L1038.8 1216.99 L1039.39 1216.99 L1039.98 1216.99 L1040.56 1216.99 L1041.15 1216.99 L1041.73 1216.99 L1042.32 1216.99 L1042.91 1216.99 L1043.49 1216.99 L1044.08 1216.99 L1044.67 1216.99 L1045.25 1216.99 L1045.84 1216.99 L1046.43 1216.99 L1047.01 1216.99 L1047.6 1216.99 L1048.19 1216.99 L1048.77 1216.99 L1049.36 1216.99 L1049.94 1216.99 L1050.53 1216.99 L1051.12 1216.99 L1051.7 1216.99 L1052.29 1216.99 L1052.88 1216.99 L1053.46 1216.99 L1054.05 1216.99 L1054.64 1216.99 L1055.22 1216.99 L1055.81 1216.99 L1056.39 1216.99 L1056.98 1216.99 L1057.57 1216.99 L1058.15 1216.99 L1058.74 1216.99 L1059.33 1216.99 L1059.91 1216.99 L1060.5 1216.99 L1061.09 1216.99 L1061.67 1216.99 L1062.26 1216.99 L1062.85 1216.99 L1063.43 1216.99 L1064.02 1216.99 L1064.6 1216.99 L1065.19 1216.99 L1065.78 1216.99 L1066.36 1216.99 L1066.95 1216.99 L1067.54 1216.99 L1068.12 1216.99 L1068.71 1216.99 L1069.3 1216.99 L1069.88 1216.99 L1070.47 1216.99 L1071.06 1216.99 L1071.64 1216.99 L1072.23 1216.99 L1072.81 1216.99 L1073.4 1216.99 L1073.99 1216.99 L1074.57 1216.99 L1075.16 1216.99 L1075.75 1216.99 L1076.33 1216.99 L1076.92 1216.99 L1077.51 1216.99 L1078.09 1216.99 L1078.68 1216.99 L1079.26 1216.99 L1079.85 1216.99 L1080.44 1216.99 L1081.02 1216.99 L1081.61 1216.99 L1082.2 1216.99 L1082.78 1216.99 L1083.37 1216.99 L1083.96 1216.99 L1084.54 1216.99 L1085.13 1216.99 L1085.72 1216.99 L1086.3 1216.99 L1086.89 1216.99 L1087.47 1216.99 L1088.06 1216.99 L1088.65 1216.99 L1089.23 1216.99 L1089.82 1216.99 L1090.41 1216.99 L1090.99 1216.99 L1091.58 1216.99 L1092.17 1216.99 L1092.75 1216.99 L1093.34 1216.99 L1093.93 1216.99 L1094.51 1216.99 L1095.1 1216.99 L1095.68 1216.99 L1096.27 1216.99 L1096.86 1216.99 L1097.44 1216.99 L1098.03 1216.99 L1098.62 1216.99 L1099.2 1216.99 L1099.79 1216.99 L1100.38 1216.99 L1100.96 1216.99 L1101.55 1216.99 L1102.14 1216.99 L1102.72 1216.99 L1103.31 1216.99 L1103.89 1216.99 L1104.48 1216.99 L1105.07 1216.99 L1105.65 1216.99 L1106.24 1216.99 L1106.83 1216.99 L1107.41 1216.99 L1108 1216.99 L1108.59 1216.99 L1109.17 1216.99 L1109.76 1216.99 L1110.34 1216.99 L1110.93 1216.99 L1111.52 1216.99 L1112.1 1216.99 L1112.69 1216.99 L1113.28 1216.99 L1113.86 1216.99 L1114.45 1216.99 L1115.04 1216.99 L1115.62 1216.99 L1116.21 1216.99 L1116.8 1216.99 L1117.38 1216.99 L1117.97 1216.99 L1118.55 1216.99 L1119.14 1216.99 L1119.73 1216.99 L1120.31 1216.99 L1120.9 1216.99 L1121.49 1216.99 L1122.07 1216.99 L1122.66 1216.99 L1123.25 1216.99 L1123.83 1216.99 L1124.42 1216.99 L1125.01 1216.99 L1125.59 1216.99 L1126.18 1216.99 L1126.76 1216.99 L1127.35 1216.99 L1127.94 1216.99 L1128.52 1216.99 L1129.11 1216.99 L1129.7 1216.99 L1130.28 1216.99 L1130.87 1216.99 L1131.46 1216.99 L1132.04 1216.99 L1132.63 1216.99 L1133.21 1216.99 L1133.8 1216.99 L1134.39 1216.99 L1134.97 1216.99 L1135.56 1216.99 L1136.15 1216.99 L1136.73 1216.99 L1137.32 1216.99 L1137.91 1216.99 L1138.49 1216.99 L1139.08 1216.99 L1139.67 1216.99 L1140.25 1216.99 L1140.84 1216.99 L1141.42 1216.99 L1142.01 1216.99 L1142.6 1216.99 L1143.18 1216.99 L1143.77 1216.99 L1144.36 1216.99 L1144.94 1216.99 L1145.53 1216.99 L1146.12 1216.99 L1146.7 1216.99 L1147.29 1216.99 L1147.88 1216.99 L1148.46 1216.99 L1149.05 1216.99 L1149.63 1216.99 L1150.22 1216.99 L1150.81 1216.99 L1151.39 1216.99 L1151.98 1216.99 L1152.57 1216.99 L1153.15 1216.99 L1153.74 1216.99 L1154.33 1216.99 L1154.91 1216.99 L1155.5 1216.99 L1156.09 1216.99 L1156.67 1216.99 L1157.26 1216.99 L1157.84 1216.99 L1158.43 1216.99 L1159.02 1216.99 L1159.6 1216.99 L1160.19 1216.99 L1160.78 1216.99 L1161.36 1216.99 L1161.95 1216.99 L1162.54 1216.99 L1163.12 1216.99 L1163.71 1216.99 L1164.29 1216.99 L1164.88 1216.99 L1165.47 1216.99 L1166.05 1216.99 L1166.64 1216.99 L1167.23 1216.99 L1167.81 1216.99 L1168.4 1216.99 L1168.99 1216.99 L1169.57 1216.99 L1170.16 1216.99 L1170.75 1216.99 L1171.33 1216.99 L1171.92 1216.99 L1172.5 1216.99 L1173.09 1216.99 L1173.68 1216.99 L1174.26 1216.99 L1174.85 1216.99 L1175.44 1216.99 L1176.02 1216.99 L1176.61 1216.99 L1177.2 1216.99 L1177.78 1216.99 L1178.37 1216.99 L1178.96 1216.99 L1179.54 1216.99 L1180.13 1216.99 L1180.71 1216.99 L1181.3 1216.99 L1181.89 1216.99 L1182.47 1216.99 L1183.06 1216.99 L1183.65 1216.99 L1184.23 1216.99 L1184.82 1216.99 L1185.41 1216.99 L1185.99 1216.99 L1186.58 1216.99 L1187.16 1216.99 L1187.75 1216.99 L1188.34 1216.99 L1188.92 1216.99 L1189.51 1216.99 L1190.1 1216.99 L1190.68 1216.99 L1191.27 1216.99 L1191.86 1216.99 L1192.44 1216.99 L1193.03 1216.99 L1193.62 1216.99 L1194.2 1216.99 L1194.79 1216.99 L1195.37 1216.99 L1195.96 1216.99 L1196.55 1216.99 L1197.13 1216.99 L1197.72 1216.99 L1198.31 1216.99 L1198.89 1216.99 L1199.48 1216.99 L1200.07 1216.99 L1200.65 1216.99 L1201.24 1216.99 L1201.83 1216.99 L1202.41 1216.99 L1203 1216.99 L1203.58 1216.99 L1204.17 1216.99 L1204.76 1216.99 L1205.34 1216.99 L1205.93 1216.99 L1206.52 1216.99 L1207.1 1216.99 L1207.69 1216.99 L1208.28 1216.99 L1208.86 1216.99 L1209.45 1216.99 L1210.03 1216.99 L1210.62 1216.99 L1211.21 1216.99 L1211.79 1216.99 L1212.38 1216.99 L1212.97 1216.99 L1213.55 1216.99 L1214.14 1216.99 L1214.73 1216.99 L1215.31 1216.99 L1215.9 1216.99 L1216.49 1216.99 L1217.07 1216.99 L1217.66 1216.99 L1218.24 1216.99 L1218.83 1216.99 L1219.42 1216.99 L1220 1216.99 L1220.59 1216.99 L1221.18 1216.99 L1221.76 1216.99 L1222.35 1216.99 L1222.94 1216.99 L1223.52 1216.99 L1224.11 1216.99 L1224.7 1216.99 L1225.28 1216.99 L1225.87 1216.99 L1226.45 1216.99 L1227.04 1216.99 L1227.63 1216.99 L1228.21 1216.99 L1228.8 1216.99 L1229.39 1216.99 L1229.97 1216.99 L1230.56 1216.99 L1231.15 1216.99 L1231.73 1216.99 L1232.32 1216.99 L1232.91 1216.99 L1233.49 1216.99 L1234.08 1216.99 L1234.66 1216.99 L1235.25 1216.99 L1235.84 1216.99 L1236.42 1216.99 L1237.01 1216.99 L1237.6 1216.99 L1238.18 1216.99 L1238.77 1216.99 L1239.36 1216.99 L1239.94 1216.99 L1240.53 1216.99 L1241.11 1216.99 L1241.7 1216.99 L1242.29 1216.99 L1242.87 1216.99 L1243.46 1216.99 L1244.05 1216.99 L1244.63 1216.99 L1245.22 1216.99 L1245.81 1216.99 L1246.39 1216.99 L1246.98 1216.99 L1247.57 1216.99 L1248.15 1216.99 L1248.74 1216.99 L1249.32 1216.99 L1249.91 1216.99 L1250.5 1216.99 L1251.08 1216.99 L1251.67 1216.99 L1252.26 1216.99 L1252.84 1216.99 L1253.43 1216.99 L1254.02 1216.99 L1254.6 1216.99 L1255.19 1216.99 L1255.78 1216.99 L1256.36 1216.99 L1256.95 1216.99 L1257.53 1216.99 L1258.12 1216.99 L1258.71 1216.99 L1259.29 1216.99 L1259.88 1216.99 L1260.47 1216.99 L1261.05 1216.99 L1261.64 1216.99 L1262.23 1216.99 L1262.81 1216.99 L1263.4 1216.99 L1263.98 1216.99 L1264.57 1216.99 L1265.16 1216.99 L1265.74 1216.99 L1266.33 1216.99 L1266.92 1216.99 L1267.5 1216.99 L1268.09 1216.99 L1268.68 1216.99 L1269.26 1216.99 L1269.85 1216.99 L1270.44 1216.99 L1271.02 1216.99 L1271.61 1216.99 L1272.19 1216.99 L1272.78 1216.99 L1273.37 1216.99 L1273.95 1216.99 L1274.54 1216.99 L1275.13 1216.99 L1275.71 1216.99 L1276.3 1216.99 L1276.89 1216.99 L1277.47 1216.99 L1278.06 1216.99 L1278.65 1216.99 L1279.23 1216.99 L1279.82 1216.99 L1280.4 1216.99 L1280.99 1216.99 L1281.58 1216.99 L1282.16 1216.99 L1282.75 1216.99 L1283.34 1216.99 L1283.92 1216.99 L1284.51 1216.99 L1285.1 1216.99 L1285.68 1216.99 L1286.27 1216.99 L1286.86 1216.99 L1287.44 1216.99 L1288.03 1216.99 L1288.61 1216.99 L1289.2 1216.99 L1289.79 1216.99 L1290.37 1216.99 L1290.96 1216.99 L1291.55 1216.99 L1292.13 1216.99 L1292.72 1216.99 L1293.31 1216.99 L1293.89 1216.99 L1294.48 1216.99 L1295.06 1216.99 L1295.65 1216.99 L1296.24 1216.99 L1296.82 1216.99 L1297.41 1216.99 L1298 1216.99 L1298.58 1216.99 L1299.17 1216.99 L1299.76 1216.99 L1300.34 1216.99 L1300.93 1216.99 L1301.52 1216.99 L1302.1 1216.99 L1302.69 1216.99 L1303.27 1216.99 L1303.86 1216.99 L1304.45 1216.99 L1305.03 1216.99 L1305.62 1216.99 L1306.21 1216.99 L1306.79 1216.99 L1307.38 1216.99 L1307.97 1216.99 L1308.55 1216.99 L1309.14 1216.99 L1309.73 1216.99 L1310.31 1216.99 L1310.9 1216.99 L1311.48 1216.99 L1312.07 1216.99 L1312.66 1216.99 L1313.24 1216.99 L1313.83 1216.99 L1314.42 1216.99 L1315 1216.99 L1315.59 1216.99 L1316.18 1216.99 L1316.76 1216.99 L1317.35 1216.99 L1317.93 1216.99 L1318.52 1216.99 L1319.11 1216.99 L1319.69 1216.99 L1320.28 1216.99 L1320.87 1216.99 L1321.45 1216.99 L1322.04 1216.99 L1322.63 1216.99 L1323.21 1216.99 L1323.8 1216.99 L1324.39 1216.99 L1324.97 1216.99 L1325.56 1216.99 L1326.14 1216.99 L1326.73 1216.99 L1327.32 1216.99 L1327.9 1216.99 L1328.49 1216.99 L1329.08 1216.99 L1329.66 1216.99 L1330.25 1216.99 L1330.84 1216.99 L1331.42 1216.99 L1332.01 1216.99 L1332.6 1216.99 L1333.18 1216.99 L1333.77 1216.99 L1334.35 1216.99 L1334.94 1216.99 L1335.53 1216.99 L1336.11 1216.99 L1336.7 1216.99 L1337.29 1216.99 L1337.87 1216.99 L1338.46 1216.99 L1339.05 1216.99 L1339.63 1216.99 L1340.22 1216.99 L1340.8 1216.99 L1341.39 1216.99 L1341.98 1216.99 L1342.56 1216.99 L1343.15 1216.99 L1343.74 1216.99 L1344.32 1216.99 L1344.91 1216.99 L1345.5 1216.99 L1346.08 1216.99 L1346.67 1216.99 L1347.26 1216.99 L1347.84 1216.99 L1348.43 1216.99 L1349.01 1216.99 L1349.6 1216.99 L1350.19 1216.99 L1350.77 1216.99 L1351.36 1216.99 L1351.95 1216.99 L1352.53 1216.99 L1353.12 1216.99 L1353.71 1216.99 L1354.29 1216.99 L1354.88 1216.99 L1355.47 1216.99 L1356.05 1216.99 L1356.64 1216.99 L1357.22 1216.99 L1357.81 1216.99 L1358.4 1216.99 L1358.98 1216.99 L1359.57 1216.99 L1360.16 1216.99 L1360.74 1216.99 L1361.33 1216.99 L1361.92 1216.99 L1362.5 1216.99 L1363.09 1216.99 L1363.68 1216.99 L1364.26 1216.99 L1364.85 1216.99 L1365.43 1216.99 L1366.02 1216.99 L1366.61 1216.99 L1367.19 1216.99 L1367.78 1216.99 L1368.37 1216.99 L1368.95 1216.99 L1369.54 1216.99 L1370.13 1216.99 L1370.71 1216.99 L1371.3 1216.99 L1371.88 1216.99 L1372.47 1216.99 L1373.06 1216.99 L1373.64 1216.99 L1374.23 1216.99 L1374.82 1216.99 L1375.4 1216.99 L1375.99 1216.99 L1376.58 1216.99 L1377.16 1216.99 L1377.75 1216.99 L1378.34 1216.99 L1378.92 1216.99 L1379.51 1216.99 L1380.09 1216.99 L1380.68 1216.99 L1381.27 1216.99 L1381.85 1216.99 L1382.44 1216.99 L1383.03 1216.99 L1383.61 1216.99 L1384.2 1216.99 L1384.79 1216.99 L1385.37 1216.99 L1385.96 1216.99 L1386.55 1216.99 L1387.13 1216.99 L1387.72 1216.99 L1388.3 1216.99 L1388.89 1216.99 L1389.48 1216.99 L1390.06 1216.99 L1390.65 1216.99 L1391.24 1216.99 L1391.82 1216.99 L1392.41 1216.99 L1393 1216.99 L1393.58 1216.99 L1394.17 1216.99 L1394.75 1216.99 L1395.34 1216.99 L1395.93 1216.99 L1396.51 1216.99 L1397.1 1216.99 L1397.69 1216.99 L1398.27 1216.99 L1398.86 1216.99 L1399.45 1216.99 L1400.03 1216.99 L1400.62 1216.99 L1401.21 1216.99 L1401.79 1216.99 L1402.38 1216.99 L1402.96 1216.99 L1403.55 1216.99 L1404.14 1216.99 L1404.72 1216.99 L1405.31 1216.99 L1405.9 1216.99 L1406.48 1216.99 L1407.07 1216.99 L1407.66 1216.99 L1408.24 1216.99 L1408.83 1216.99 L1409.42 1216.99 L1410 1216.99 L1410.59 1216.99 L1411.17 1216.99 L1411.76 1216.99 L1412.35 1216.99 L1412.93 1216.99 L1413.52 1216.99 L1414.11 1216.99 L1414.69 1216.99 L1415.28 1216.99 L1415.87 1216.99 L1416.45 1216.99 L1417.04 1216.99 L1417.63 1216.99 L1418.21 1216.99 L1418.8 1216.99 L1419.38 1216.99 L1419.97 1216.99 L1420.56 1216.99 L1421.14 1216.99 L1421.73 1216.99 L1422.32 1216.99 L1422.9 1216.99 L1423.49 1216.99 L1424.08 1216.99 L1424.66 1216.99 L1425.25 1216.99 L1425.83 1216.99 L1426.42 1216.99 L1427.01 1216.99 L1427.59 1216.99 L1428.18 1216.99 L1428.77 1216.99 L1429.35 1216.99 L1429.94 1216.99 L1430.53 1216.99 L1431.11 1216.99 L1431.7 1216.99 L1432.29 1216.99 L1432.87 1216.99 L1433.46 1216.99 L1434.04 1216.99 L1434.63 1216.99 L1435.22 1216.99 L1435.8 1216.99 L1436.39 1216.99 L1436.98 1216.99 L1437.56 1216.99 L1438.15 1216.99 L1438.74 1216.99 L1439.32 1216.99 L1439.91 1216.99 L1440.5 1216.99 L1441.08 1216.99 L1441.67 1216.99 L1442.25 1216.99 L1442.84 1216.99 L1443.43 1216.99 L1444.01 1216.99 L1444.6 1216.99 L1445.19 1216.99 L1445.77 1216.99 L1446.36 1216.99 L1446.95 1216.99 L1447.53 1216.99 L1448.12 1216.99 L1448.7 1216.99 L1449.29 1216.99 L1449.88 1216.99 L1450.46 1216.99 L1451.05 1216.99 L1451.64 1216.99 L1452.22 1216.99 L1452.81 1216.99 L1453.4 1216.99 L1453.98 1216.99 L1454.57 1216.99 L1455.16 1216.99 L1455.74 1216.99 L1456.33 1216.99 L1456.91 1216.99 L1457.5 1216.99 L1458.09 1216.99 L1458.67 1216.99 L1459.26 1216.99 L1459.85 1216.99 L1460.43 1216.99 L1461.02 1216.99 L1461.61 1216.99 L1462.19 1216.99 L1462.78 1216.99 L1463.37 1216.99 L1463.95 1216.99 L1464.54 1216.99 L1465.12 1216.99 L1465.71 1216.99 L1466.3 1216.99 L1466.88 1216.99 L1467.47 1216.99 L1468.06 1216.99 L1468.64 1216.99 L1469.23 1216.99 L1469.82 1216.99 L1470.4 1216.99 L1470.99 1216.99 L1471.57 1216.99 L1472.16 1216.99 L1472.75 1216.99 L1473.33 1216.99 L1473.92 1216.99 L1474.51 1216.99 L1475.09 1216.99 L1475.68 1216.99 L1476.27 1216.99 L1476.85 1216.99 L1477.44 1216.99 L1478.03 1216.99 L1478.61 1216.99 L1479.2 1216.99 L1479.78 1216.99 L1480.37 1216.99 L1480.96 1216.99 L1481.54 1216.99 L1482.13 1216.99 L1482.72 1216.99 L1483.3 1216.99 L1483.89 1216.99 L1484.48 1216.99 L1485.06 1216.99 L1485.65 1216.99 L1486.24 1216.99 L1486.82 1216.99 L1487.41 1216.99 L1487.99 1216.99 L1488.58 1216.99 L1489.17 1216.99 L1489.75 1216.99 L1490.34 1216.99 L1490.93 1216.99 L1491.51 1216.99 L1492.1 1216.99 L1492.69 1216.99 L1493.27 1216.99 L1493.86 1216.99 L1494.45 1216.99 L1495.03 1216.99 L1495.62 1216.99 L1496.2 1216.99 L1496.79 1216.99 L1497.38 1216.99 L1497.96 1216.99 L1498.55 1216.99 L1499.14 1216.99 L1499.72 1216.99 L1500.31 1216.99 L1500.9 1216.99 L1501.48 1216.99 L1502.07 1216.99 L1502.65 1216.99 L1503.24 1216.99 L1503.83 1216.99 L1504.41 1216.99 L1505 1216.99 L1505.59 1216.99 L1506.17 1216.99 L1506.76 1216.99 L1507.35 1216.99 L1507.93 1216.99 L1508.52 1216.99 L1509.11 1216.99 L1509.69 1216.99 L1510.28 1216.99 L1510.86 1216.99 L1511.45 1216.99 L1512.04 1216.99 L1512.62 1216.99 L1513.21 1216.99 L1513.8 1216.99 L1514.38 1216.99 L1514.97 1216.99 L1515.56 1216.99 L1516.14 1216.99 L1516.73 1216.99 L1517.32 1216.99 L1517.9 1216.99 L1518.49 1216.99 L1519.07 1216.99 L1519.66 1216.99 L1520.25 1216.99 L1520.83 1216.99 L1521.42 1216.99 L1522.01 1216.99 L1522.59 1216.99 L1523.18 1216.99 L1523.77 1216.99 L1524.35 1216.99 L1524.94 1216.99 L1525.52 1216.99 L1526.11 1216.99 L1526.7 1216.99 L1527.28 1216.99 L1527.87 1216.99 L1528.46 1216.99 L1529.04 1216.99 L1529.63 1216.99 L1530.22 1216.99 L1530.8 1216.99 L1531.39 1216.99 L1531.98 1216.99 L1532.56 1216.99 L1533.15 1216.99 L1533.73 1216.99 L1534.32 1216.99 L1534.91 1216.99 L1535.49 1216.99 L1536.08 1216.99 L1536.67 1216.99 L1537.25 1216.99 L1537.84 1216.99 L1538.43 1216.99 L1539.01 1216.99 L1539.6 1216.99 L1540.19 1216.99 L1540.77 1216.99 L1541.36 1216.99 L1541.94 1216.99 L1542.53 1216.99 L1543.12 1216.99 L1543.7 1216.99 L1544.29 1216.99 L1544.88 1216.99 L1545.46 1216.99 L1546.05 1216.99 L1546.64 1216.99 L1547.22 1216.99 L1547.81 1216.99 L1548.4 1216.99 L1548.98 1216.99 L1549.57 1216.99 L1550.15 1216.99 L1550.74 1216.99 L1551.33 1216.99 L1551.91 1216.99 L1552.5 1216.99 L1553.09 1216.99 L1553.67 1216.99 L1554.26 1216.99 L1554.85 1216.99 L1555.43 1216.99 L1556.02 1216.99 L1556.6 1216.99 L1557.19 1216.99 L1557.78 1216.99 L1558.36 1216.99 L1558.95 1216.99 L1559.54 1216.99 L1560.12 1216.99 L1560.71 1216.99 L1561.3 1216.99 L1561.88 1216.99 L1562.47 1216.99 L1563.06 1216.99 L1563.64 1216.99 L1564.23 1216.99 L1564.81 1216.99 L1565.4 1216.99 L1565.99 1216.99 L1566.57 1216.99 L1567.16 1216.99 L1567.75 1216.99 L1568.33 1216.99 L1568.92 1216.99 L1569.51 1216.99 L1570.09 1216.99 L1570.68 1216.99 L1571.27 1216.99 L1571.85 1216.99 L1572.44 1216.99 L1573.02 1216.99 L1573.61 1216.99 L1574.2 1216.99 L1574.78 1216.99 L1575.37 1216.99 L1575.96 1216.99 L1576.54 1216.99 L1577.13 1216.99 L1577.72 1216.99 L1578.3 1216.99 L1578.89 1216.99 L1579.47 1216.99 L1580.06 1216.99 L1580.65 1216.99 L1581.23 1216.99 L1581.82 1216.99 L1582.41 1216.99 L1582.99 1216.99 L1583.58 1216.99 L1584.17 1216.99 L1584.75 1216.99 L1585.34 1216.99 L1585.93 1216.99 L1586.51 1216.99 L1587.1 1216.99 L1587.68 1216.99 L1588.27 1216.99 L1588.86 1216.99 L1589.44 1216.99 L1590.03 1216.99 L1590.62 1216.99 L1591.2 1216.99 L1591.79 1216.99 L1592.38 1216.99 L1592.96 1216.99 L1593.55 1216.99 L1594.14 1216.99 L1594.72 1216.99 L1595.31 1216.99 L1595.89 1216.99 L1596.48 1216.99 L1597.07 1216.99 L1597.65 1216.99 L1598.24 1216.99 L1598.83 1216.99 L1599.41 1216.99 L1600 1216.99 L1600.59 1216.99 L1601.17 1216.99 L1601.76 1216.99 L1602.34 1216.99 L1602.93 1216.99 L1603.52 1216.99 L1604.1 1216.99 L1604.69 1216.99 L1605.28 1216.99 L1605.86 1216.99 L1606.45 1216.99 L1607.04 1216.99 L1607.62 1216.99 L1608.21 1216.99 L1608.8 1216.99 L1609.38 1216.99 L1609.97 1216.99 L1610.55 1216.99 L1611.14 1216.99 L1611.73 1216.99 L1612.31 1216.99 L1612.9 1216.99 L1613.49 1216.99 L1614.07 1216.99 L1614.66 1216.99 L1615.25 1216.99 L1615.83 1216.99 L1616.42 1216.99 L1617.01 1216.99 L1617.59 1216.99 L1618.18 1216.99 L1618.76 1216.99 L1619.35 1216.99 L1619.94 1216.99 L1620.52 1216.99 L1621.11 1216.99 L1621.7 1216.99 L1622.28 1216.99 L1622.87 1216.99 L1623.46 1216.99 L1624.04 1216.99 L1624.63 1216.99 L1625.22 1216.99 L1625.8 1216.99 L1626.39 1216.99 L1626.97 1216.99 L1627.56 1216.99 L1628.15 1216.99 L1628.73 1216.99 L1629.32 1216.99 L1629.91 1216.99 L1630.49 1216.99 L1631.08 1216.99 L1631.67 1216.99 L1632.25 1216.99 L1632.84 1216.99 L1633.42 1216.99 L1634.01 1216.99 L1634.6 1216.99 L1635.18 1216.99 L1635.77 1216.99 L1636.36 1216.99 L1636.94 1216.99 L1637.53 1216.99 L1638.12 1216.99 L1638.7 1216.99 L1639.29 1216.99 L1639.88 1216.99 L1640.46 1216.99 L1641.05 1216.99 L1641.63 1216.99 L1642.22 1216.99 L1642.81 1216.99 L1643.39 1216.99 L1643.98 1216.99 L1644.57 1216.99 L1645.15 1216.99 L1645.74 1216.99 L1646.33 1216.99 L1646.91 1216.99 L1647.5 1216.99 L1648.09 1216.99 L1648.67 1216.99 L1649.26 1216.99 L1649.84 1216.99 L1650.43 1216.99 L1651.02 1216.99 L1651.6 1216.99 L1652.19 1216.99 L1652.78 1216.99 L1653.36 1216.99 L1653.95 1216.99 L1654.54 1216.99 L1655.12 1216.99 L1655.71 1216.99 L1656.29 1216.99 L1656.88 1216.99 L1657.47 1216.99 L1658.05 1216.99 L1658.64 1216.99 L1659.23 1216.99 L1659.81 1216.99 L1660.4 1216.99 L1660.99 1216.99 L1661.57 1216.99 L1662.16 1216.99 L1662.75 1216.99 L1663.33 1216.99 L1663.92 1216.99 L1664.5 1216.99 L1665.09 1216.99 L1665.68 1216.99 L1666.26 1216.99 L1666.85 1216.99 L1667.44 1216.99 L1668.02 1216.99 L1668.61 1216.99 L1669.2 1216.99 L1669.78 1216.99 L1670.37 1216.99 L1670.96 1216.99 L1671.54 1216.99 L1672.13 1216.99 L1672.71 1216.99 L1673.3 1216.99 L1673.89 1216.99 L1674.47 1216.99 L1675.06 1216.99 L1675.65 1216.99 L1676.23 1216.99 L1676.82 1216.99 L1677.41 1216.99 L1677.99 1216.99 L1678.58 1216.99 L1679.17 1216.99 L1679.75 1216.99 L1680.34 1216.99 L1680.92 1216.99 L1681.51 1216.99 L1682.1 1216.99 L1682.68 1216.99 L1683.27 1216.99 L1683.86 1216.99 L1684.44 1216.99 L1685.03 1216.99 L1685.62 1216.99 L1686.2 1216.99 L1686.79 1216.99 L1687.37 1216.99 L1687.96 1216.99 L1688.55 1216.99 L1689.13 1216.99 L1689.72 1216.99 L1690.31 1216.99 L1690.89 1216.99 L1691.48 1216.99 L1692.07 1216.99 L1692.65 1216.99 L1693.24 1216.99 L1693.83 1216.99 L1694.41 1216.99 L1695 1216.99 L1695.58 1216.99 L1696.17 1216.99 L1696.76 1216.99 L1697.34 1216.99 L1697.93 1216.99 L1698.52 1216.99 L1699.1 1216.99 L1699.69 1216.99 L1700.28 1216.99 L1700.86 1216.99 L1701.45 1216.99 L1702.04 1216.99 L1702.62 1216.99 L1703.21 1216.99 L1703.79 1216.99 L1704.38 1216.99 L1704.97 1216.99 L1705.55 1216.99 L1706.14 1216.99 L1706.73 1216.99 L1707.31 1216.99 L1707.9 1216.99 L1708.49 1216.99 L1709.07 1216.99 L1709.66 1216.99 L1710.24 1216.99 L1710.83 1216.99 L1711.42 1216.99 L1712 1216.99 L1712.59 1216.99 L1713.18 1216.99 L1713.76 1216.99 L1714.35 1216.99 L1714.94 1216.99 L1715.52 1216.99 L1716.11 1216.99 L1716.7 1216.99 L1717.28 1216.99 L1717.87 1216.99 L1718.45 1216.99 L1719.04 1216.99 L1719.63 1216.99 L1720.21 1216.99 L1720.8 1216.99 L1721.39 1216.99 L1721.97 1216.99 L1722.56 1216.99 L1723.15 1216.99 L1723.73 1216.99 L1724.32 1216.99 L1724.91 1216.99 L1725.49 1216.99 L1726.08 1216.99 L1726.66 1216.99 L1727.25 1216.99 L1727.84 1216.99 L1728.42 1216.99 L1729.01 1216.99 L1729.6 1216.99 L1730.18 1216.99 L1730.77 1216.99 L1731.36 1216.99 L1731.94 1216.99 L1732.53 1216.99 L1733.11 1216.99 L1733.7 1216.99 L1734.29 1216.99 L1734.87 1216.99 L1735.46 1216.99 L1736.05 1216.99 L1736.63 1216.99 L1737.22 1216.99 L1737.81 1216.99 L1738.39 1216.99 L1738.98 1216.99 L1739.57 1216.99 L1740.15 1216.99 L1740.74 1216.99 L1741.32 1216.99 L1741.91 1216.99 L1742.5 1216.99 L1743.08 1216.99 L1743.67 1216.99 L1744.26 1216.99 L1744.84 1216.99 L1745.43 1216.99 L1746.02 1216.99 L1746.6 1216.99 L1747.19 1216.99 L1747.78 1216.99 L1748.36 1216.99 L1748.95 1216.99 L1749.53 1216.99 L1750.12 1216.99 L1750.71 1216.99 L1751.29 1216.99 L1751.88 1216.99 L1752.47 1216.99 L1753.05 1216.99 L1753.64 1216.99 L1754.23 1216.99 L1754.81 1216.99 L1755.4 1216.99 L1755.99 1216.99 L1756.57 1216.99 L1757.16 1216.99 L1757.74 1216.99 L1758.33 1216.99 L1758.92 1216.99 L1759.5 1216.99 L1760.09 1216.99 L1760.68 1216.99 L1761.26 1216.99 L1761.85 1216.99 L1762.44 1216.99 L1763.02 1216.99 L1763.61 1216.99 L1764.19 1216.99 L1764.78 1216.99 L1765.37 1216.99 L1765.95 1216.99 L1766.54 1216.99 L1767.13 1216.99 L1767.71 1216.99 L1768.3 1216.99 L1768.89 1216.99 L1769.47 1216.99 L1770.06 1216.99 L1770.65 1216.99 L1771.23 1216.99 L1771.82 1216.99 L1772.4 1216.99 L1772.99 1216.99 L1773.58 1216.99 L1774.16 1216.99 L1774.75 1216.99 L1775.34 1216.99 L1775.92 1216.99 L1776.51 1216.99 L1777.1 1216.99 L1777.68 1216.99 L1778.27 1216.99 L1778.86 1216.99 L1779.44 1216.99 L1780.03 1216.99 L1780.61 1216.99 L1781.2 1216.99 L1781.79 1216.99 L1782.37 1216.99 L1782.96 1216.99 L1783.55 1216.99 L1784.13 1216.99 L1784.72 1216.99 L1785.31 1216.99 L1785.89 1216.99 L1786.48 1216.99 L1787.06 1216.99 L1787.65 1216.99 L1788.24 1216.99 L1788.82 1216.99 L1789.41 1216.99 L1790 1216.99 L1790.58 1216.99 L1791.17 1216.99 L1791.76 1216.99 L1792.34 1216.99 L1792.93 1216.99 L1793.52 1216.99 L1794.1 1216.99 L1794.69 1216.99 L1795.27 1216.99 L1795.86 1216.99 L1796.45 1216.99 L1797.03 1216.99 L1797.62 1216.99 L1798.21 1216.99 L1798.79 1216.99 L1799.38 1216.99 L1799.97 1216.99 L1800.55 1216.99 L1801.14 1216.99 L1801.73 1216.99 L1802.31 1216.99 L1802.9 1216.99 L1803.48 1216.99 L1804.07 1216.99 L1804.66 1216.99 L1805.24 1216.99 L1805.83 1216.99 L1806.42 1216.99 L1807 1216.99 L1807.59 1216.99 L1808.18 1216.99 L1808.76 1216.99 L1809.35 1216.99 L1809.94 1216.99 L1810.52 1216.99 L1811.11 1216.99 L1811.69 1216.99 L1812.28 1216.99 L1812.87 1216.99 L1813.45 1216.99 L1814.04 1216.99 L1814.63 1216.99 L1815.21 1216.99 L1815.8 1216.99 L1816.39 1216.99 L1816.97 1216.99 L1817.56 1216.99 L1818.14 1216.99 L1818.73 1216.99 L1819.32 1216.99 L1819.9 1216.99 L1820.49 1216.99 L1821.08 1216.99 L1821.66 1216.99 L1822.25 1216.99 L1822.84 1216.99 L1823.42 1216.99 L1824.01 1216.99 L1824.6 1216.99 L1825.18 1216.99 L1825.77 1216.99 L1826.35 1216.99 L1826.94 1216.99 L1827.53 1216.99 L1828.11 1216.99 L1828.7 1216.99 L1829.29 1216.99 L1829.87 1216.99 L1830.46 1216.99 L1831.05 1216.99 L1831.63 1216.99 L1832.22 1216.99 L1832.81 1216.99 L1833.39 1216.99 L1833.98 1216.99 L1834.56 1216.99 L1835.15 1216.99 L1835.74 1216.99 L1836.32 1216.99 L1836.91 1216.99 L1837.5 1216.99 L1838.08 1216.99 L1838.67 1216.99 L1839.26 1216.99 L1839.84 1216.99 L1840.43 1216.99 L1841.01 1216.99 L1841.6 1216.99 L1842.19 1216.99 L1842.77 1216.99 L1843.36 1216.99 L1843.95 1216.99 L1844.53 1216.99 L1845.12 1216.99 L1845.71 1216.99 L1846.29 1216.99 L1846.88 1216.99 L1847.47 1216.99 L1848.05 1216.99 L1848.64 1216.99 L1849.22 1216.99 L1849.81 1216.99 L1850.4 1216.99 L1850.98 1216.99 L1851.57 1216.99 L1852.16 1216.99 L1852.74 1216.99 L1853.33 1216.99 L1853.92 1216.99 L1854.5 1216.99 L1855.09 1216.99 L1855.68 1216.99 L1856.26 1216.99 L1856.85 1216.99 L1857.43 1216.99 L1858.02 1216.99 L1858.61 1216.99 L1859.19 1216.99 L1859.78 1216.99 L1860.37 1216.99 L1860.95 1216.99 L1861.54 1216.99 L1862.13 1216.99 L1862.71 1216.99 L1863.3 1216.99 L1863.88 1216.99 L1864.47 1216.99 L1865.06 1216.99 L1865.64 1216.99 L1866.23 1216.99 L1866.82 1216.99 L1867.4 1216.99 L1867.99 1216.99 L1868.58 1216.99 L1869.16 1216.99 L1869.75 1216.99 L1870.34 1216.99 L1870.92 1216.99 L1871.51 1216.99 L1872.09 1216.99 L1872.68 1216.99 L1873.27 1216.99 L1873.85 1216.99 L1874.44 1216.99 L1875.03 1216.99 L1875.61 1216.99 L1876.2 1216.99 L1876.79 1216.99 L1877.37 1216.99 L1877.96 1216.99 L1878.55 1216.99 L1879.13 1216.99 L1879.72 1216.99 L1880.3 1216.99 L1880.89 1216.99 L1881.48 1216.99 L1882.06 1216.99 L1882.65 1216.99 L1883.24 1216.99 L1883.82 1216.99 L1884.41 1216.99 L1885 1216.99 L1885.58 1216.99 L1886.17 1216.99 L1886.76 1216.99 L1887.34 1216.99 L1887.93 1216.99 L1888.51 1216.99 L1889.1 1216.99 L1889.69 1216.99 L1890.27 1216.99 L1890.86 1216.99 L1891.45 1216.99 L1892.03 1216.99 L1892.62 1216.99 L1893.21 1216.99 L1893.79 1216.99 L1894.38 1216.99 L1894.96 1216.99 L1895.55 1216.99 L1896.14 1216.99 L1896.72 1216.99 L1897.31 1216.99 L1897.9 1216.99 L1898.48 1216.99 L1899.07 1216.99 L1899.66 1216.99 L1900.24 1216.99 L1900.83 1216.99 L1901.42 1216.99 L1902 1216.99 L1902.59 1216.99 L1903.17 1216.99 L1903.76 1216.99 L1904.35 1216.99 L1904.93 1216.99 L1905.52 1216.99 L1906.11 1216.99 L1906.69 1216.99 L1907.28 1216.99 L1907.87 1216.99 L1908.45 1216.99 L1909.04 1216.99 L1909.63 1216.99 L1910.21 1216.99 L1910.8 1216.99 L1911.38 1216.99 L1911.97 1216.99 L1912.56 1216.99 L1913.14 1216.99 L1913.73 1216.99 L1914.32 1216.99 L1914.9 1216.99 L1915.49 1216.99 L1916.08 1216.99 L1916.66 1216.99 L1917.25 1216.99 L1917.83 1216.99 L1918.42 1216.99 L1919.01 1216.99 L1919.59 1216.99 L1920.18 1216.99 L1920.77 1216.99 L1921.35 1216.99 L1921.94 1216.99 L1922.53 1216.99 L1923.11 1216.99 L1923.7 1216.99 L1924.29 1216.99 L1924.87 1216.99 L1925.46 1216.99 L1926.04 1216.99 L1926.63 1216.99 L1927.22 1216.99 L1927.8 1216.99 L1928.39 1216.99 L1928.98 1216.99 L1929.56 1216.99 L1930.15 1216.99 L1930.74 1216.99 L1931.32 1216.99 L1931.91 1216.99 L1932.5 1216.99 L1933.08 1216.99 L1933.67 1216.99 L1934.25 1216.99 L1934.84 1216.99 L1935.43 1216.99 L1936.01 1216.99 L1936.6 1216.99 L1937.19 1216.99 L1937.77 1216.99 L1938.36 1216.99 L1938.95 1216.99 L1939.53 1216.99 L1940.12 1216.99 L1940.71 1216.99 L1941.29 1216.99 L1941.88 1216.99 L1942.46 1216.99 L1943.05 1216.99 L1943.64 1216.99 L1944.22 1216.99 L1944.81 1216.99 L1945.4 1216.99 L1945.98 1216.99 L1946.57 1216.99 L1947.16 1216.99 L1947.74 1216.99 L1948.33 1216.99 L1948.91 1216.99 L1949.5 1216.99 L1950.09 1216.99 L1950.67 1216.99 L1951.26 1216.99 L1951.85 1216.99 L1952.43 1216.99 L1953.02 1216.99 L1953.61 1216.99 L1954.19 1216.99 L1954.78 1216.99 L1955.37 1216.99 L1955.95 1216.99 L1956.54 1216.99 L1957.12 1216.99 L1957.71 1216.99 L1958.3 1216.99 L1958.88 1216.99 L1959.47 1216.99 L1960.06 1216.99 L1960.64 1216.99 L1961.23 1216.99 L1961.82 1216.99 L1962.4 1216.99 L1962.99 1216.99 L1963.58 1216.99 L1964.16 1216.99 L1964.75 1216.99 L1965.33 1216.99 L1965.92 1216.99 L1966.51 1216.99 L1967.09 1216.99 L1967.68 1216.99 L1968.27 1216.99 L1968.85 1216.99 L1969.44 1216.99 L1970.03 1216.99 L1970.61 1216.99 L1971.2 1216.99 L1971.78 1216.99 L1972.37 1216.99 L1972.96 1216.99 L1973.54 1216.99 L1974.13 1216.99 L1974.72 1216.99 L1975.3 1216.99 L1975.89 1216.99 L1976.48 1216.99 L1977.06 1216.99 L1977.65 1216.99 L1978.24 1216.99 L1978.82 1216.99 L1979.41 1216.99 L1979.99 1216.99 L1980.58 1216.99 L1981.17 1216.99 L1981.75 1216.99 L1982.34 1216.99 L1982.93 1216.99 L1983.51 1216.99 L1984.1 1216.99 L1984.69 1216.99 L1985.27 1216.99 L1985.86 1216.99 L1986.45 1216.99 L1987.03 1216.99 L1987.62 1216.99 L1988.2 1216.99 L1988.79 1216.99 L1989.38 1216.99 L1989.96 1216.99 L1990.55 1216.99 L1991.14 1216.99 L1991.72 1216.99 L1992.31 1216.99 L1992.9 1216.99 L1993.48 1216.99 L1994.07 1216.99 L1994.65 1216.99 L1995.24 1216.99 L1995.83 1216.99 L1996.41 1216.99 L1997 1216.99 L1997.59 1216.99 L1998.17 1216.99 L1998.76 1216.99 L1999.35 1216.99 L1999.93 1216.99 L2000.52 1216.99 L2001.11 1216.99 L2001.69 1216.99 L2002.28 1216.99 L2002.86 1216.99 L2003.45 1216.99 L2004.04 1216.99 L2004.62 1216.99 L2005.21 1216.99 L2005.8 1216.99 L2006.38 1216.99 L2006.97 1216.99 L2007.56 1216.99 L2008.14 1216.99 L2008.73 1216.99 L2009.32 1216.99 L2009.9 1216.99 L2010.49 1216.99 L2011.07 1216.99 L2011.66 1216.99 L2012.25 1216.99 L2012.83 1216.99 L2013.42 1216.99 L2014.01 1216.99 L2014.59 1216.99 L2015.18 1216.99 L2015.77 1216.99 L2016.35 1216.99 L2016.94 1216.99 L2017.53 1216.99 L2018.11 1216.99 L2018.7 1216.99 L2019.28 1216.99 L2019.87 1216.99 L2020.46 1216.99 L2021.04 1216.99 L2021.63 1216.99 L2022.22 1216.99 L2022.8 1216.99 L2023.39 1216.99 L2023.98 1216.99 L2024.56 1216.99 L2025.15 1216.99 L2025.73 1216.99 L2026.32 1216.99 L2026.91 1216.99 L2027.49 1216.99 L2028.08 1216.99 L2028.67 1216.99 L2029.25 1216.99 L2029.84 1216.99 L2030.43 1216.99 L2031.01 1216.99 L2031.6 1216.99 L2032.19 1216.99 L2032.77 1216.99 L2033.36 1216.99 L2033.94 1216.99 L2034.53 1216.99 L2035.12 1216.99 L2035.7 1216.99 L2036.29 1216.99 L2036.88 1216.99 L2037.46 1216.99 L2038.05 1216.99 L2038.64 1216.99 L2039.22 1216.99 L2039.81 1216.99 L2040.4 1216.99 L2040.98 1216.99 L2041.57 1216.99 L2042.15 1216.99 L2042.74 1216.99 L2043.33 1216.99 L2043.91 1216.99 L2044.5 1216.99 L2045.09 1216.99 L2045.67 1216.99 L2046.26 1216.99 L2046.85 1216.99 L2047.43 1216.99 L2048.02 1216.99 L2048.6 1216.99 L2049.19 1216.99 L2049.78 1216.99 L2050.36 1216.99 L2050.95 1216.99 L2051.54 1216.99 L2052.12 1216.99 L2052.71 1216.99 L2053.3 1216.99 L2053.88 1216.99 L2054.47 1216.99 L2055.06 1216.99 L2055.64 1216.99 L2056.23 1216.99 L2056.81 1216.99 L2057.4 1216.99 L2057.99 1216.99 L2058.57 1216.99 L2059.16 1216.99 L2059.75 1216.99 L2060.33 1216.99 L2060.92 1216.99 L2061.51 1216.99 L2062.09 1216.99 L2062.68 1216.99 L2063.27 1216.99 L2063.85 1216.99 L2064.44 1216.99 L2065.02 1216.99 L2065.61 1216.99 L2066.2 1216.99 L2066.78 1216.99 L2067.37 1216.99 L2067.96 1216.99 L2068.54 1216.99 L2069.13 1216.99 L2069.72 1216.99 L2070.3 1216.99 L2070.89 1216.99 L2071.48 1216.99 L2072.06 1216.99 L2072.65 1216.99 L2073.23 1216.99 L2073.82 1216.99 L2074.41 1216.99 L2074.99 1216.99 L2075.58 1216.99 L2076.17 1216.99 L2076.75 1216.99 L2077.34 1216.99 L2077.93 1216.99 L2078.51 1216.99 L2079.1 1216.99 L2079.68 1216.99 L2080.27 1216.99 L2080.86 1216.99 L2081.44 1216.99 L2082.03 1216.99 L2082.62 1216.99 L2083.2 1216.99 L2083.79 1216.99 L2084.38 1216.99 L2084.96 1216.99 L2085.55 1216.99 L2086.14 1216.99 L2086.72 1216.99 L2087.31 1216.99 L2087.89 1216.99 L2088.48 1216.99 L2089.07 1216.99 L2089.65 1216.99 L2090.24 1216.99 L2090.83 1216.99 L2091.41 1216.99 L2092 1216.99 L2092.59 1216.99 L2093.17 1216.99 L2093.76 1216.99 L2094.35 1216.99 L2094.93 1216.99 L2095.52 1216.99 L2096.1 1216.99 L2096.69 1216.99 L2097.28 1216.99 L2097.86 1216.99 L2098.45 1216.99 L2099.04 1216.99 L2099.62 1216.99 L2100.21 1216.99 L2100.8 1216.99 L2101.38 1216.99 L2101.97 1216.99 L2102.55 1216.99 L2103.14 1216.99 L2103.73 1216.99 L2104.31 1216.99 L2104.9 1216.99 L2105.49 1216.99 L2106.07 1216.99 L2106.66 1216.99 L2107.25 1216.99 L2107.83 1216.99 L2108.42 1216.99 L2109.01 1216.99 L2109.59 1216.99 L2110.18 1216.99 L2110.76 1216.99 L2111.35 1216.99 L2111.94 1216.99 L2112.52 1216.99 L2113.11 1216.99 L2113.7 1216.99 L2114.28 1216.99 L2114.87 1216.99 L2115.46 1216.99 L2116.04 1216.99 L2116.63 1216.99 L2117.22 1216.99 L2117.8 1216.99 L2118.39 1216.99 L2118.97 1216.99 L2119.56 1216.99 L2120.15 1216.99 L2120.73 1216.99 L2121.32 1216.99 L2121.91 1216.99 L2122.49 1216.99 L2123.08 1216.99 L2123.67 1216.99 L2124.25 1216.99 L2124.84 1216.99 L2125.42 1216.99 L2126.01 1216.99 L2126.6 1216.99 L2127.18 1216.99 L2127.77 1216.99 L2128.36 1216.99 L2128.94 1216.99 L2129.53 1216.99 L2130.12 1216.99 L2130.7 1216.99 L2131.29 1216.99 L2131.88 1216.99 L2132.46 1216.99 L2133.05 1216.99 L2133.63 1216.99 L2134.22 1216.99 L2134.81 1216.99 L2135.39 1216.99 L2135.98 1216.99 L2136.57 1216.99 L2137.15 1216.99 L2137.74 1216.99 L2138.33 1216.99 L2138.91 1216.99 L2139.5 1216.99 L2140.09 1216.99 L2140.67 1216.99 L2141.26 1216.99 L2141.84 1216.99 L2142.43 1216.99 L2143.02 1216.99 L2143.6 1216.99 L2144.19 1216.99 L2144.78 1216.99 L2145.36 1216.99 L2145.95 1216.99 L2146.54 1216.99 L2147.12 1216.99 L2147.71 1216.99 L2148.3 1216.99 L2148.88 1216.99 L2149.47 1216.99 L2150.05 1216.99 L2150.64 1216.99 L2151.23 1216.99 L2151.81 1216.99 L2152.4 1216.99 L2152.99 1216.99 L2153.57 1216.99 L2154.16 1216.99 L2154.75 1216.99 L2155.33 1216.99 L2155.92 1216.99 L2156.5 1216.99 L2157.09 1216.99 L2157.68 1216.99 L2158.26 1216.99 L2158.26 1216.89 L2157.68 1216.89 L2157.09 1216.89 L2156.5 1216.89 L2155.92 1216.89 L2155.33 1216.89 L2154.75 1216.89 L2154.16 1216.89 L2153.57 1216.89 L2152.99 1216.89 L2152.4 1216.89 L2151.81 1216.89 L2151.23 1216.89 L2150.64 1216.89 L2150.05 1216.89 L2149.47 1216.89 L2148.88 1216.89 L2148.3 1216.89 L2147.71 1216.89 L2147.12 1216.89 L2146.54 1216.89 L2145.95 1216.89 L2145.36 1216.89 L2144.78 1216.89 L2144.19 1216.89 L2143.6 1216.89 L2143.02 1216.89 L2142.43 1216.89 L2141.84 1216.89 L2141.26 1216.89 L2140.67 1216.89 L2140.09 1216.89 L2139.5 1216.89 L2138.91 1216.89 L2138.33 1216.89 L2137.74 1216.89 L2137.15 1216.89 L2136.57 1216.89 L2135.98 1216.89 L2135.39 1216.89 L2134.81 1216.89 L2134.22 1216.89 L2133.63 1216.89 L2133.05 1216.89 L2132.46 1216.89 L2131.88 1216.89 L2131.29 1216.89 L2130.7 1216.89 L2130.12 1216.89 L2129.53 1216.89 L2128.94 1216.89 L2128.36 1216.89 L2127.77 1216.89 L2127.18 1216.89 L2126.6 1216.89 L2126.01 1216.89 L2125.42 1216.89 L2124.84 1216.89 L2124.25 1216.89 L2123.67 1216.89 L2123.08 1216.89 L2122.49 1216.89 L2121.91 1216.89 L2121.32 1216.89 L2120.73 1216.89 L2120.15 1216.89 L2119.56 1216.89 L2118.97 1216.89 L2118.39 1216.89 L2117.8 1216.89 L2117.22 1216.89 L2116.63 1216.89 L2116.04 1216.89 L2115.46 1216.89 L2114.87 1216.89 L2114.28 1216.89 L2113.7 1216.89 L2113.11 1216.89 L2112.52 1216.89 L2111.94 1216.89 L2111.35 1216.89 L2110.76 1216.89 L2110.18 1216.89 L2109.59 1216.89 L2109.01 1216.89 L2108.42 1216.89 L2107.83 1216.89 L2107.25 1216.89 L2106.66 1216.89 L2106.07 1216.89 L2105.49 1216.89 L2104.9 1216.89 L2104.31 1216.89 L2103.73 1216.89 L2103.14 1216.89 L2102.55 1216.89 L2101.97 1216.89 L2101.38 1216.89 L2100.8 1216.89 L2100.21 1216.89 L2099.62 1216.89 L2099.04 1216.89 L2098.45 1216.89 L2097.86 1216.89 L2097.28 1216.89 L2096.69 1216.89 L2096.1 1216.89 L2095.52 1216.89 L2094.93 1216.89 L2094.35 1216.89 L2093.76 1216.89 L2093.17 1216.89 L2092.59 1216.89 L2092 1216.89 L2091.41 1216.89 L2090.83 1216.89 L2090.24 1216.89 L2089.65 1216.89 L2089.07 1216.89 L2088.48 1216.89 L2087.89 1216.89 L2087.31 1216.89 L2086.72 1216.89 L2086.14 1216.89 L2085.55 1216.89 L2084.96 1216.89 L2084.38 1216.89 L2083.79 1216.89 L2083.2 1216.89 L2082.62 1216.89 L2082.03 1216.89 L2081.44 1216.89 L2080.86 1216.89 L2080.27 1216.89 L2079.68 1216.89 L2079.1 1216.89 L2078.51 1216.89 L2077.93 1216.89 L2077.34 1216.89 L2076.75 1216.89 L2076.17 1216.89 L2075.58 1216.89 L2074.99 1216.89 L2074.41 1216.89 L2073.82 1216.89 L2073.23 1216.89 L2072.65 1216.89 L2072.06 1216.89 L2071.48 1216.89 L2070.89 1216.89 L2070.3 1216.89 L2069.72 1216.89 L2069.13 1216.89 L2068.54 1216.89 L2067.96 1216.89 L2067.37 1216.89 L2066.78 1216.89 L2066.2 1216.89 L2065.61 1216.89 L2065.02 1216.89 L2064.44 1216.89 L2063.85 1216.89 L2063.27 1216.89 L2062.68 1216.89 L2062.09 1216.89 L2061.51 1216.89 L2060.92 1216.89 L2060.33 1216.89 L2059.75 1216.89 L2059.16 1216.89 L2058.57 1216.89 L2057.99 1216.89 L2057.4 1216.89 L2056.81 1216.89 L2056.23 1216.89 L2055.64 1216.89 L2055.06 1216.89 L2054.47 1216.89 L2053.88 1216.89 L2053.3 1216.89 L2052.71 1216.89 L2052.12 1216.89 L2051.54 1216.89 L2050.95 1216.89 L2050.36 1216.89 L2049.78 1216.89 L2049.19 1216.89 L2048.6 1216.89 L2048.02 1216.89 L2047.43 1216.89 L2046.85 1216.89 L2046.26 1216.89 L2045.67 1216.89 L2045.09 1216.89 L2044.5 1216.89 L2043.91 1216.89 L2043.33 1216.89 L2042.74 1216.89 L2042.15 1216.89 L2041.57 1216.89 L2040.98 1216.89 L2040.4 1216.89 L2039.81 1216.89 L2039.22 1216.89 L2038.64 1216.89 L2038.05 1216.89 L2037.46 1216.89 L2036.88 1216.89 L2036.29 1216.89 L2035.7 1216.89 L2035.12 1216.89 L2034.53 1216.89 L2033.94 1216.89 L2033.36 1216.89 L2032.77 1216.89 L2032.19 1216.89 L2031.6 1216.89 L2031.01 1216.89 L2030.43 1216.89 L2029.84 1216.89 L2029.25 1216.89 L2028.67 1216.89 L2028.08 1216.89 L2027.49 1216.89 L2026.91 1216.89 L2026.32 1216.89 L2025.73 1216.89 L2025.15 1216.89 L2024.56 1216.89 L2023.98 1216.89 L2023.39 1216.89 L2022.8 1216.89 L2022.22 1216.89 L2021.63 1216.89 L2021.04 1216.89 L2020.46 1216.89 L2019.87 1216.89 L2019.28 1216.89 L2018.7 1216.89 L2018.11 1216.89 L2017.53 1216.89 L2016.94 1216.89 L2016.35 1216.89 L2015.77 1216.89 L2015.18 1216.89 L2014.59 1216.89 L2014.01 1216.89 L2013.42 1216.89 L2012.83 1216.89 L2012.25 1216.89 L2011.66 1216.89 L2011.07 1216.89 L2010.49 1216.89 L2009.9 1216.89 L2009.32 1216.89 L2008.73 1216.89 L2008.14 1216.89 L2007.56 1216.89 L2006.97 1216.89 L2006.38 1216.89 L2005.8 1216.89 L2005.21 1216.89 L2004.62 1216.89 L2004.04 1216.89 L2003.45 1216.89 L2002.86 1216.89 L2002.28 1216.89 L2001.69 1216.89 L2001.11 1216.89 L2000.52 1216.89 L1999.93 1216.89 L1999.35 1216.89 L1998.76 1216.89 L1998.17 1216.89 L1997.59 1216.89 L1997 1216.89 L1996.41 1216.89 L1995.83 1216.89 L1995.24 1216.89 L1994.65 1216.89 L1994.07 1216.89 L1993.48 1216.89 L1992.9 1216.89 L1992.31 1216.89 L1991.72 1216.89 L1991.14 1216.89 L1990.55 1216.89 L1989.96 1216.89 L1989.38 1216.89 L1988.79 1216.89 L1988.2 1216.89 L1987.62 1216.89 L1987.03 1216.89 L1986.45 1216.89 L1985.86 1216.89 L1985.27 1216.89 L1984.69 1216.89 L1984.1 1216.89 L1983.51 1216.89 L1982.93 1216.89 L1982.34 1216.89 L1981.75 1216.89 L1981.17 1216.89 L1980.58 1216.89 L1979.99 1216.89 L1979.41 1216.89 L1978.82 1216.89 L1978.24 1216.89 L1977.65 1216.89 L1977.06 1216.89 L1976.48 1216.89 L1975.89 1216.89 L1975.3 1216.89 L1974.72 1216.89 L1974.13 1216.89 L1973.54 1216.89 L1972.96 1216.89 L1972.37 1216.89 L1971.78 1216.89 L1971.2 1216.89 L1970.61 1216.89 L1970.03 1216.89 L1969.44 1216.89 L1968.85 1216.89 L1968.27 1216.89 L1967.68 1216.89 L1967.09 1216.89 L1966.51 1216.89 L1965.92 1216.89 L1965.33 1216.89 L1964.75 1216.89 L1964.16 1216.89 L1963.58 1216.89 L1962.99 1216.89 L1962.4 1216.89 L1961.82 1216.89 L1961.23 1216.89 L1960.64 1216.89 L1960.06 1216.89 L1959.47 1216.89 L1958.88 1216.89 L1958.3 1216.89 L1957.71 1216.89 L1957.12 1216.89 L1956.54 1216.89 L1955.95 1216.89 L1955.37 1216.89 L1954.78 1216.89 L1954.19 1216.89 L1953.61 1216.89 L1953.02 1216.89 L1952.43 1216.89 L1951.85 1216.89 L1951.26 1216.89 L1950.67 1216.89 L1950.09 1216.89 L1949.5 1216.89 L1948.91 1216.89 L1948.33 1216.89 L1947.74 1216.89 L1947.16 1216.89 L1946.57 1216.89 L1945.98 1216.89 L1945.4 1216.89 L1944.81 1216.89 L1944.22 1216.89 L1943.64 1216.89 L1943.05 1216.89 L1942.46 1216.89 L1941.88 1216.89 L1941.29 1216.89 L1940.71 1216.89 L1940.12 1216.89 L1939.53 1216.89 L1938.95 1216.89 L1938.36 1216.89 L1937.77 1216.89 L1937.19 1216.89 L1936.6 1216.89 L1936.01 1216.89 L1935.43 1216.89 L1934.84 1216.89 L1934.25 1216.89 L1933.67 1216.89 L1933.08 1216.89 L1932.5 1216.89 L1931.91 1216.89 L1931.32 1216.89 L1930.74 1216.89 L1930.15 1216.89 L1929.56 1216.89 L1928.98 1216.89 L1928.39 1216.89 L1927.8 1216.89 L1927.22 1216.89 L1926.63 1216.89 L1926.04 1216.89 L1925.46 1216.89 L1924.87 1216.89 L1924.29 1216.89 L1923.7 1216.89 L1923.11 1216.89 L1922.53 1216.89 L1921.94 1216.89 L1921.35 1216.89 L1920.77 1216.89 L1920.18 1216.89 L1919.59 1216.89 L1919.01 1216.89 L1918.42 1216.89 L1917.83 1216.89 L1917.25 1216.89 L1916.66 1216.89 L1916.08 1216.89 L1915.49 1216.89 L1914.9 1216.89 L1914.32 1216.89 L1913.73 1216.89 L1913.14 1216.89 L1912.56 1216.89 L1911.97 1216.89 L1911.38 1216.89 L1910.8 1216.89 L1910.21 1216.89 L1909.63 1216.89 L1909.04 1216.89 L1908.45 1216.89 L1907.87 1216.89 L1907.28 1216.89 L1906.69 1216.89 L1906.11 1216.89 L1905.52 1216.89 L1904.93 1216.89 L1904.35 1216.89 L1903.76 1216.89 L1903.17 1216.89 L1902.59 1216.89 L1902 1216.89 L1901.42 1216.89 L1900.83 1216.89 L1900.24 1216.89 L1899.66 1216.89 L1899.07 1216.89 L1898.48 1216.89 L1897.9 1216.89 L1897.31 1216.89 L1896.72 1216.89 L1896.14 1216.89 L1895.55 1216.89 L1894.96 1216.89 L1894.38 1216.89 L1893.79 1216.89 L1893.21 1216.89 L1892.62 1216.89 L1892.03 1216.89 L1891.45 1216.89 L1890.86 1216.89 L1890.27 1216.89 L1889.69 1216.89 L1889.1 1216.89 L1888.51 1216.89 L1887.93 1216.89 L1887.34 1216.89 L1886.76 1216.89 L1886.17 1216.89 L1885.58 1216.89 L1885 1216.89 L1884.41 1216.89 L1883.82 1216.89 L1883.24 1216.89 L1882.65 1216.89 L1882.06 1216.89 L1881.48 1216.89 L1880.89 1216.89 L1880.3 1216.89 L1879.72 1216.89 L1879.13 1216.89 L1878.55 1216.89 L1877.96 1216.89 L1877.37 1216.89 L1876.79 1216.89 L1876.2 1216.89 L1875.61 1216.89 L1875.03 1216.89 L1874.44 1216.89 L1873.85 1216.89 L1873.27 1216.89 L1872.68 1216.89 L1872.09 1216.89 L1871.51 1216.89 L1870.92 1216.89 L1870.34 1216.89 L1869.75 1216.89 L1869.16 1216.89 L1868.58 1216.89 L1867.99 1216.89 L1867.4 1216.89 L1866.82 1216.89 L1866.23 1216.89 L1865.64 1216.89 L1865.06 1216.89 L1864.47 1216.89 L1863.88 1216.89 L1863.3 1216.89 L1862.71 1216.89 L1862.13 1216.89 L1861.54 1216.89 L1860.95 1216.89 L1860.37 1216.89 L1859.78 1216.89 L1859.19 1216.89 L1858.61 1216.89 L1858.02 1216.89 L1857.43 1216.89 L1856.85 1216.89 L1856.26 1216.89 L1855.68 1216.89 L1855.09 1216.89 L1854.5 1216.89 L1853.92 1216.89 L1853.33 1216.89 L1852.74 1216.89 L1852.16 1216.89 L1851.57 1216.89 L1850.98 1216.89 L1850.4 1216.89 L1849.81 1216.89 L1849.22 1216.89 L1848.64 1216.89 L1848.05 1216.89 L1847.47 1216.89 L1846.88 1216.89 L1846.29 1216.89 L1845.71 1216.89 L1845.12 1216.89 L1844.53 1216.89 L1843.95 1216.89 L1843.36 1216.89 L1842.77 1216.89 L1842.19 1216.89 L1841.6 1216.89 L1841.01 1216.89 L1840.43 1216.89 L1839.84 1216.89 L1839.26 1216.89 L1838.67 1216.89 L1838.08 1216.89 L1837.5 1216.89 L1836.91 1216.89 L1836.32 1216.89 L1835.74 1216.89 L1835.15 1216.89 L1834.56 1216.89 L1833.98 1216.89 L1833.39 1216.89 L1832.81 1216.89 L1832.22 1216.89 L1831.63 1216.89 L1831.05 1216.89 L1830.46 1216.89 L1829.87 1216.89 L1829.29 1216.89 L1828.7 1216.89 L1828.11 1216.89 L1827.53 1216.89 L1826.94 1216.89 L1826.35 1216.89 L1825.77 1216.89 L1825.18 1216.89 L1824.6 1216.89 L1824.01 1216.89 L1823.42 1216.89 L1822.84 1216.89 L1822.25 1216.89 L1821.66 1216.89 L1821.08 1216.89 L1820.49 1216.89 L1819.9 1216.89 L1819.32 1216.89 L1818.73 1216.89 L1818.14 1216.89 L1817.56 1216.89 L1816.97 1216.89 L1816.39 1216.89 L1815.8 1216.89 L1815.21 1216.89 L1814.63 1216.89 L1814.04 1216.89 L1813.45 1216.89 L1812.87 1216.89 L1812.28 1216.89 L1811.69 1216.89 L1811.11 1216.89 L1810.52 1216.89 L1809.94 1216.89 L1809.35 1216.89 L1808.76 1216.89 L1808.18 1216.89 L1807.59 1216.89 L1807 1216.89 L1806.42 1216.89 L1805.83 1216.89 L1805.24 1216.89 L1804.66 1216.89 L1804.07 1216.89 L1803.48 1216.89 L1802.9 1216.89 L1802.31 1216.89 L1801.73 1216.89 L1801.14 1216.89 L1800.55 1216.89 L1799.97 1216.89 L1799.38 1216.89 L1798.79 1216.89 L1798.21 1216.89 L1797.62 1216.89 L1797.03 1216.89 L1796.45 1216.89 L1795.86 1216.89 L1795.27 1216.89 L1794.69 1216.89 L1794.1 1216.89 L1793.52 1216.89 L1792.93 1216.89 L1792.34 1216.89 L1791.76 1216.89 L1791.17 1216.89 L1790.58 1216.89 L1790 1216.89 L1789.41 1216.89 L1788.82 1216.89 L1788.24 1216.89 L1787.65 1216.89 L1787.06 1216.89 L1786.48 1216.89 L1785.89 1216.89 L1785.31 1216.89 L1784.72 1216.89 L1784.13 1216.89 L1783.55 1216.89 L1782.96 1216.89 L1782.37 1216.89 L1781.79 1216.89 L1781.2 1216.89 L1780.61 1216.89 L1780.03 1216.89 L1779.44 1216.89 L1778.86 1216.89 L1778.27 1216.89 L1777.68 1216.89 L1777.1 1216.89 L1776.51 1216.89 L1775.92 1216.89 L1775.34 1216.89 L1774.75 1216.89 L1774.16 1216.89 L1773.58 1216.89 L1772.99 1216.89 L1772.4 1216.89 L1771.82 1216.89 L1771.23 1216.89 L1770.65 1216.89 L1770.06 1216.89 L1769.47 1216.89 L1768.89 1216.89 L1768.3 1216.89 L1767.71 1216.89 L1767.13 1216.89 L1766.54 1216.89 L1765.95 1216.89 L1765.37 1216.89 L1764.78 1216.89 L1764.19 1216.89 L1763.61 1216.89 L1763.02 1216.89 L1762.44 1216.89 L1761.85 1216.89 L1761.26 1216.89 L1760.68 1216.89 L1760.09 1216.89 L1759.5 1216.89 L1758.92 1216.89 L1758.33 1216.89 L1757.74 1216.89 L1757.16 1216.89 L1756.57 1216.89 L1755.99 1216.89 L1755.4 1216.89 L1754.81 1216.89 L1754.23 1216.89 L1753.64 1216.89 L1753.05 1216.89 L1752.47 1216.89 L1751.88 1216.89 L1751.29 1216.89 L1750.71 1216.89 L1750.12 1216.89 L1749.53 1216.89 L1748.95 1216.89 L1748.36 1216.89 L1747.78 1216.89 L1747.19 1216.89 L1746.6 1216.89 L1746.02 1216.89 L1745.43 1216.89 L1744.84 1216.89 L1744.26 1216.89 L1743.67 1216.89 L1743.08 1216.89 L1742.5 1216.89 L1741.91 1216.89 L1741.32 1216.89 L1740.74 1216.89 L1740.15 1216.89 L1739.57 1216.89 L1738.98 1216.89 L1738.39 1216.89 L1737.81 1216.89 L1737.22 1216.89 L1736.63 1216.89 L1736.05 1216.89 L1735.46 1216.89 L1734.87 1216.89 L1734.29 1216.89 L1733.7 1216.89 L1733.11 1216.89 L1732.53 1216.89 L1731.94 1216.89 L1731.36 1216.89 L1730.77 1216.89 L1730.18 1216.89 L1729.6 1216.89 L1729.01 1216.89 L1728.42 1216.89 L1727.84 1216.89 L1727.25 1216.89 L1726.66 1216.89 L1726.08 1216.89 L1725.49 1216.89 L1724.91 1216.89 L1724.32 1216.89 L1723.73 1216.89 L1723.15 1216.89 L1722.56 1216.89 L1721.97 1216.89 L1721.39 1216.89 L1720.8 1216.89 L1720.21 1216.89 L1719.63 1216.89 L1719.04 1216.89 L1718.45 1216.89 L1717.87 1216.89 L1717.28 1216.89 L1716.7 1216.89 L1716.11 1216.89 L1715.52 1216.89 L1714.94 1216.89 L1714.35 1216.89 L1713.76 1216.89 L1713.18 1216.89 L1712.59 1216.89 L1712 1216.89 L1711.42 1216.89 L1710.83 1216.89 L1710.24 1216.89 L1709.66 1216.89 L1709.07 1216.89 L1708.49 1216.89 L1707.9 1216.89 L1707.31 1216.89 L1706.73 1216.89 L1706.14 1216.89 L1705.55 1216.89 L1704.97 1216.89 L1704.38 1216.89 L1703.79 1216.89 L1703.21 1216.89 L1702.62 1216.89 L1702.04 1216.89 L1701.45 1216.89 L1700.86 1216.89 L1700.28 1216.89 L1699.69 1216.89 L1699.1 1216.89 L1698.52 1216.89 L1697.93 1216.89 L1697.34 1216.89 L1696.76 1216.89 L1696.17 1216.89 L1695.58 1216.89 L1695 1216.89 L1694.41 1216.89 L1693.83 1216.89 L1693.24 1216.89 L1692.65 1216.89 L1692.07 1216.89 L1691.48 1216.89 L1690.89 1216.89 L1690.31 1216.89 L1689.72 1216.89 L1689.13 1216.89 L1688.55 1216.89 L1687.96 1216.89 L1687.37 1216.89 L1686.79 1216.89 L1686.2 1216.89 L1685.62 1216.89 L1685.03 1216.89 L1684.44 1216.89 L1683.86 1216.89 L1683.27 1216.89 L1682.68 1216.89 L1682.1 1216.89 L1681.51 1216.89 L1680.92 1216.89 L1680.34 1216.89 L1679.75 1216.89 L1679.17 1216.89 L1678.58 1216.89 L1677.99 1216.89 L1677.41 1216.89 L1676.82 1216.89 L1676.23 1216.89 L1675.65 1216.89 L1675.06 1216.89 L1674.47 1216.89 L1673.89 1216.89 L1673.3 1216.89 L1672.71 1216.89 L1672.13 1216.89 L1671.54 1216.89 L1670.96 1216.89 L1670.37 1216.89 L1669.78 1216.89 L1669.2 1216.89 L1668.61 1216.89 L1668.02 1216.89 L1667.44 1216.89 L1666.85 1216.89 L1666.26 1216.89 L1665.68 1216.89 L1665.09 1216.89 L1664.5 1216.89 L1663.92 1216.89 L1663.33 1216.89 L1662.75 1216.89 L1662.16 1216.89 L1661.57 1216.89 L1660.99 1216.89 L1660.4 1216.89 L1659.81 1216.89 L1659.23 1216.89 L1658.64 1216.89 L1658.05 1216.89 L1657.47 1216.89 L1656.88 1216.89 L1656.29 1216.89 L1655.71 1216.89 L1655.12 1216.89 L1654.54 1216.89 L1653.95 1216.89 L1653.36 1216.89 L1652.78 1216.89 L1652.19 1216.89 L1651.6 1216.89 L1651.02 1216.89 L1650.43 1216.89 L1649.84 1216.89 L1649.26 1216.89 L1648.67 1216.89 L1648.09 1216.89 L1647.5 1216.89 L1646.91 1216.89 L1646.33 1216.89 L1645.74 1216.89 L1645.15 1216.89 L1644.57 1216.89 L1643.98 1216.89 L1643.39 1216.89 L1642.81 1216.89 L1642.22 1216.89 L1641.63 1216.89 L1641.05 1216.89 L1640.46 1216.89 L1639.88 1216.89 L1639.29 1216.89 L1638.7 1216.89 L1638.12 1216.89 L1637.53 1216.89 L1636.94 1216.89 L1636.36 1216.89 L1635.77 1216.89 L1635.18 1216.89 L1634.6 1216.89 L1634.01 1216.89 L1633.42 1216.89 L1632.84 1216.89 L1632.25 1216.89 L1631.67 1216.89 L1631.08 1216.89 L1630.49 1216.89 L1629.91 1216.89 L1629.32 1216.89 L1628.73 1216.89 L1628.15 1216.89 L1627.56 1216.89 L1626.97 1216.89 L1626.39 1216.89 L1625.8 1216.89 L1625.22 1216.89 L1624.63 1216.89 L1624.04 1216.89 L1623.46 1216.89 L1622.87 1216.89 L1622.28 1216.89 L1621.7 1216.89 L1621.11 1216.89 L1620.52 1216.89 L1619.94 1216.89 L1619.35 1216.89 L1618.76 1216.89 L1618.18 1216.89 L1617.59 1216.89 L1617.01 1216.89 L1616.42 1216.89 L1615.83 1216.89 L1615.25 1216.89 L1614.66 1216.89 L1614.07 1216.89 L1613.49 1216.89 L1612.9 1216.89 L1612.31 1216.89 L1611.73 1216.89 L1611.14 1216.89 L1610.55 1216.89 L1609.97 1216.89 L1609.38 1216.89 L1608.8 1216.89 L1608.21 1216.89 L1607.62 1216.89 L1607.04 1216.89 L1606.45 1216.89 L1605.86 1216.89 L1605.28 1216.89 L1604.69 1216.89 L1604.1 1216.89 L1603.52 1216.89 L1602.93 1216.89 L1602.34 1216.89 L1601.76 1216.89 L1601.17 1216.89 L1600.59 1216.89 L1600 1216.89 L1599.41 1216.89 L1598.83 1216.89 L1598.24 1216.89 L1597.65 1216.89 L1597.07 1216.89 L1596.48 1216.89 L1595.89 1216.89 L1595.31 1216.89 L1594.72 1216.89 L1594.14 1216.89 L1593.55 1216.89 L1592.96 1216.89 L1592.38 1216.89 L1591.79 1216.89 L1591.2 1216.89 L1590.62 1216.89 L1590.03 1216.89 L1589.44 1216.89 L1588.86 1216.89 L1588.27 1216.89 L1587.68 1216.89 L1587.1 1216.89 L1586.51 1216.89 L1585.93 1216.89 L1585.34 1216.89 L1584.75 1216.89 L1584.17 1216.89 L1583.58 1216.89 L1582.99 1216.89 L1582.41 1216.89 L1581.82 1216.89 L1581.23 1216.89 L1580.65 1216.89 L1580.06 1216.89 L1579.47 1216.89 L1578.89 1216.89 L1578.3 1216.89 L1577.72 1216.89 L1577.13 1216.89 L1576.54 1216.89 L1575.96 1216.89 L1575.37 1216.89 L1574.78 1216.89 L1574.2 1216.89 L1573.61 1216.89 L1573.02 1216.89 L1572.44 1216.89 L1571.85 1216.89 L1571.27 1216.89 L1570.68 1216.89 L1570.09 1216.89 L1569.51 1216.89 L1568.92 1216.89 L1568.33 1216.89 L1567.75 1216.89 L1567.16 1216.89 L1566.57 1216.89 L1565.99 1216.89 L1565.4 1216.89 L1564.81 1216.89 L1564.23 1216.89 L1563.64 1216.89 L1563.06 1216.89 L1562.47 1216.89 L1561.88 1216.89 L1561.3 1216.89 L1560.71 1216.89 L1560.12 1216.89 L1559.54 1216.89 L1558.95 1216.89 L1558.36 1216.89 L1557.78 1216.89 L1557.19 1216.89 L1556.6 1216.89 L1556.02 1216.89 L1555.43 1216.89 L1554.85 1216.89 L1554.26 1216.89 L1553.67 1216.89 L1553.09 1216.89 L1552.5 1216.89 L1551.91 1216.89 L1551.33 1216.89 L1550.74 1216.89 L1550.15 1216.89 L1549.57 1216.89 L1548.98 1216.89 L1548.4 1216.89 L1547.81 1216.89 L1547.22 1216.89 L1546.64 1216.89 L1546.05 1216.89 L1545.46 1216.89 L1544.88 1216.89 L1544.29 1216.89 L1543.7 1216.89 L1543.12 1216.89 L1542.53 1216.89 L1541.94 1216.89 L1541.36 1216.89 L1540.77 1216.89 L1540.19 1216.89 L1539.6 1216.89 L1539.01 1216.89 L1538.43 1216.89 L1537.84 1216.89 L1537.25 1216.89 L1536.67 1216.89 L1536.08 1216.89 L1535.49 1216.89 L1534.91 1216.89 L1534.32 1216.89 L1533.73 1216.89 L1533.15 1216.89 L1532.56 1216.89 L1531.98 1216.89 L1531.39 1216.89 L1530.8 1216.89 L1530.22 1216.89 L1529.63 1216.89 L1529.04 1216.89 L1528.46 1216.89 L1527.87 1216.89 L1527.28 1216.89 L1526.7 1216.89 L1526.11 1216.89 L1525.52 1216.89 L1524.94 1216.89 L1524.35 1216.89 L1523.77 1216.89 L1523.18 1216.89 L1522.59 1216.89 L1522.01 1216.89 L1521.42 1216.89 L1520.83 1216.89 L1520.25 1216.89 L1519.66 1216.89 L1519.07 1216.89 L1518.49 1216.89 L1517.9 1216.89 L1517.32 1216.89 L1516.73 1216.89 L1516.14 1216.89 L1515.56 1216.89 L1514.97 1216.89 L1514.38 1216.89 L1513.8 1216.89 L1513.21 1216.89 L1512.62 1216.89 L1512.04 1216.89 L1511.45 1216.89 L1510.86 1216.89 L1510.28 1216.89 L1509.69 1216.89 L1509.11 1216.89 L1508.52 1216.89 L1507.93 1216.89 L1507.35 1216.89 L1506.76 1216.89 L1506.17 1216.89 L1505.59 1216.89 L1505 1216.89 L1504.41 1216.89 L1503.83 1216.89 L1503.24 1216.89 L1502.65 1216.89 L1502.07 1216.89 L1501.48 1216.89 L1500.9 1216.89 L1500.31 1216.89 L1499.72 1216.89 L1499.14 1216.89 L1498.55 1216.89 L1497.96 1216.89 L1497.38 1216.89 L1496.79 1216.89 L1496.2 1216.89 L1495.62 1216.89 L1495.03 1216.89 L1494.45 1216.89 L1493.86 1216.89 L1493.27 1216.89 L1492.69 1216.89 L1492.1 1216.89 L1491.51 1216.89 L1490.93 1216.89 L1490.34 1216.89 L1489.75 1216.89 L1489.17 1216.89 L1488.58 1216.89 L1487.99 1216.89 L1487.41 1216.89 L1486.82 1216.89 L1486.24 1216.89 L1485.65 1216.89 L1485.06 1216.89 L1484.48 1216.89 L1483.89 1216.89 L1483.3 1216.89 L1482.72 1216.89 L1482.13 1216.89 L1481.54 1216.89 L1480.96 1216.89 L1480.37 1216.89 L1479.78 1216.89 L1479.2 1216.89 L1478.61 1216.89 L1478.03 1216.89 L1477.44 1216.89 L1476.85 1216.89 L1476.27 1216.89 L1475.68 1216.89 L1475.09 1216.89 L1474.51 1216.89 L1473.92 1216.89 L1473.33 1216.89 L1472.75 1216.89 L1472.16 1216.89 L1471.57 1216.89 L1470.99 1216.89 L1470.4 1216.89 L1469.82 1216.89 L1469.23 1216.89 L1468.64 1216.89 L1468.06 1216.89 L1467.47 1216.89 L1466.88 1216.89 L1466.3 1216.89 L1465.71 1216.89 L1465.12 1216.89 L1464.54 1216.89 L1463.95 1216.89 L1463.37 1216.89 L1462.78 1216.89 L1462.19 1216.89 L1461.61 1216.89 L1461.02 1216.89 L1460.43 1216.89 L1459.85 1216.89 L1459.26 1216.89 L1458.67 1216.89 L1458.09 1216.89 L1457.5 1216.89 L1456.91 1216.89 L1456.33 1216.89 L1455.74 1216.89 L1455.16 1216.89 L1454.57 1216.89 L1453.98 1216.89 L1453.4 1216.89 L1452.81 1216.89 L1452.22 1216.89 L1451.64 1216.89 L1451.05 1216.89 L1450.46 1216.89 L1449.88 1216.89 L1449.29 1216.89 L1448.7 1216.89 L1448.12 1216.89 L1447.53 1216.89 L1446.95 1216.89 L1446.36 1216.89 L1445.77 1216.89 L1445.19 1216.89 L1444.6 1216.89 L1444.01 1216.89 L1443.43 1216.89 L1442.84 1216.89 L1442.25 1216.89 L1441.67 1216.89 L1441.08 1216.89 L1440.5 1216.89 L1439.91 1216.89 L1439.32 1216.89 L1438.74 1216.89 L1438.15 1216.89 L1437.56 1216.89 L1436.98 1216.89 L1436.39 1216.89 L1435.8 1216.89 L1435.22 1216.89 L1434.63 1216.89 L1434.04 1216.89 L1433.46 1216.89 L1432.87 1216.89 L1432.29 1216.89 L1431.7 1216.89 L1431.11 1216.89 L1430.53 1216.89 L1429.94 1216.89 L1429.35 1216.89 L1428.77 1216.89 L1428.18 1216.89 L1427.59 1216.89 L1427.01 1216.89 L1426.42 1216.89 L1425.83 1216.89 L1425.25 1216.89 L1424.66 1216.89 L1424.08 1216.89 L1423.49 1216.89 L1422.9 1216.89 L1422.32 1216.89 L1421.73 1216.89 L1421.14 1216.89 L1420.56 1216.89 L1419.97 1216.89 L1419.38 1216.89 L1418.8 1216.89 L1418.21 1216.89 L1417.63 1216.89 L1417.04 1216.89 L1416.45 1216.89 L1415.87 1216.89 L1415.28 1216.89 L1414.69 1216.89 L1414.11 1216.89 L1413.52 1216.89 L1412.93 1216.89 L1412.35 1216.89 L1411.76 1216.89 L1411.17 1216.89 L1410.59 1216.89 L1410 1216.89 L1409.42 1216.89 L1408.83 1216.89 L1408.24 1216.89 L1407.66 1216.89 L1407.07 1216.89 L1406.48 1216.89 L1405.9 1216.89 L1405.31 1216.89 L1404.72 1216.89 L1404.14 1216.89 L1403.55 1216.89 L1402.96 1216.89 L1402.38 1216.89 L1401.79 1216.89 L1401.21 1216.89 L1400.62 1216.89 L1400.03 1216.89 L1399.45 1216.89 L1398.86 1216.89 L1398.27 1216.89 L1397.69 1216.89 L1397.1 1216.89 L1396.51 1216.89 L1395.93 1216.89 L1395.34 1216.89 L1394.75 1216.89 L1394.17 1216.89 L1393.58 1216.89 L1393 1216.89 L1392.41 1216.89 L1391.82 1216.89 L1391.24 1216.89 L1390.65 1216.89 L1390.06 1216.89 L1389.48 1216.89 L1388.89 1216.89 L1388.3 1216.89 L1387.72 1216.89 L1387.13 1216.89 L1386.55 1216.89 L1385.96 1216.89 L1385.37 1216.89 L1384.79 1216.89 L1384.2 1216.89 L1383.61 1216.89 L1383.03 1216.89 L1382.44 1216.89 L1381.85 1216.89 L1381.27 1216.89 L1380.68 1216.89 L1380.09 1216.89 L1379.51 1216.89 L1378.92 1216.89 L1378.34 1216.89 L1377.75 1216.89 L1377.16 1216.89 L1376.58 1216.89 L1375.99 1216.89 L1375.4 1216.89 L1374.82 1216.89 L1374.23 1216.89 L1373.64 1216.89 L1373.06 1216.89 L1372.47 1216.89 L1371.88 1216.89 L1371.3 1216.89 L1370.71 1216.89 L1370.13 1216.89 L1369.54 1216.89 L1368.95 1216.89 L1368.37 1216.89 L1367.78 1216.89 L1367.19 1216.89 L1366.61 1216.89 L1366.02 1216.89 L1365.43 1216.89 L1364.85 1216.89 L1364.26 1216.89 L1363.68 1216.89 L1363.09 1216.89 L1362.5 1216.89 L1361.92 1216.89 L1361.33 1216.89 L1360.74 1216.89 L1360.16 1216.89 L1359.57 1216.89 L1358.98 1216.89 L1358.4 1216.89 L1357.81 1216.89 L1357.22 1216.89 L1356.64 1216.89 L1356.05 1216.89 L1355.47 1216.89 L1354.88 1216.89 L1354.29 1216.89 L1353.71 1216.89 L1353.12 1216.89 L1352.53 1216.89 L1351.95 1216.89 L1351.36 1216.89 L1350.77 1216.89 L1350.19 1216.89 L1349.6 1216.89 L1349.01 1216.89 L1348.43 1216.89 L1347.84 1216.89 L1347.26 1216.89 L1346.67 1216.89 L1346.08 1216.89 L1345.5 1216.89 L1344.91 1216.89 L1344.32 1216.89 L1343.74 1216.89 L1343.15 1216.89 L1342.56 1216.89 L1341.98 1216.89 L1341.39 1216.89 L1340.8 1216.89 L1340.22 1216.89 L1339.63 1216.89 L1339.05 1216.89 L1338.46 1216.89 L1337.87 1216.89 L1337.29 1216.89 L1336.7 1216.89 L1336.11 1216.89 L1335.53 1216.89 L1334.94 1216.89 L1334.35 1216.89 L1333.77 1216.89 L1333.18 1216.89 L1332.6 1216.89 L1332.01 1216.89 L1331.42 1216.89 L1330.84 1216.89 L1330.25 1216.89 L1329.66 1216.89 L1329.08 1216.89 L1328.49 1216.89 L1327.9 1216.89 L1327.32 1216.89 L1326.73 1216.89 L1326.14 1216.89 L1325.56 1216.89 L1324.97 1216.89 L1324.39 1216.89 L1323.8 1216.89 L1323.21 1216.89 L1322.63 1216.89 L1322.04 1216.89 L1321.45 1216.89 L1320.87 1216.89 L1320.28 1216.89 L1319.69 1216.89 L1319.11 1216.89 L1318.52 1216.89 L1317.93 1216.89 L1317.35 1216.89 L1316.76 1216.89 L1316.18 1216.89 L1315.59 1216.89 L1315 1216.89 L1314.42 1216.89 L1313.83 1216.89 L1313.24 1216.89 L1312.66 1216.89 L1312.07 1216.89 L1311.48 1216.89 L1310.9 1216.89 L1310.31 1216.89 L1309.73 1216.89 L1309.14 1216.89 L1308.55 1216.89 L1307.97 1216.89 L1307.38 1216.89 L1306.79 1216.89 L1306.21 1216.89 L1305.62 1216.89 L1305.03 1216.89 L1304.45 1216.89 L1303.86 1216.89 L1303.27 1216.89 L1302.69 1216.89 L1302.1 1216.89 L1301.52 1216.89 L1300.93 1216.89 L1300.34 1216.89 L1299.76 1216.89 L1299.17 1216.89 L1298.58 1216.89 L1298 1216.89 L1297.41 1216.89 L1296.82 1216.89 L1296.24 1216.89 L1295.65 1216.89 L1295.06 1216.89 L1294.48 1216.89 L1293.89 1216.89 L1293.31 1216.89 L1292.72 1216.89 L1292.13 1216.89 L1291.55 1216.89 L1290.96 1216.89 L1290.37 1216.89 L1289.79 1216.89 L1289.2 1216.89 L1288.61 1216.89 L1288.03 1216.89 L1287.44 1216.89 L1286.86 1216.89 L1286.27 1216.89 L1285.68 1216.89 L1285.1 1216.89 L1284.51 1216.89 L1283.92 1216.89 L1283.34 1216.89 L1282.75 1216.89 L1282.16 1216.89 L1281.58 1216.89 L1280.99 1216.89 L1280.4 1216.89 L1279.82 1216.89 L1279.23 1216.89 L1278.65 1216.89 L1278.06 1216.89 L1277.47 1216.89 L1276.89 1216.89 L1276.3 1216.89 L1275.71 1216.89 L1275.13 1216.89 L1274.54 1216.89 L1273.95 1216.89 L1273.37 1216.89 L1272.78 1216.89 L1272.19 1216.89 L1271.61 1216.89 L1271.02 1216.89 L1270.44 1216.89 L1269.85 1216.89 L1269.26 1216.89 L1268.68 1216.89 L1268.09 1216.89 L1267.5 1216.89 L1266.92 1216.89 L1266.33 1216.89 L1265.74 1216.89 L1265.16 1216.89 L1264.57 1216.89 L1263.98 1216.89 L1263.4 1216.89 L1262.81 1216.89 L1262.23 1216.89 L1261.64 1216.89 L1261.05 1216.89 L1260.47 1216.89 L1259.88 1216.89 L1259.29 1216.89 L1258.71 1216.89 L1258.12 1216.89 L1257.53 1216.89 L1256.95 1216.89 L1256.36 1216.89 L1255.78 1216.89 L1255.19 1216.89 L1254.6 1216.89 L1254.02 1216.89 L1253.43 1216.89 L1252.84 1216.89 L1252.26 1216.89 L1251.67 1216.89 L1251.08 1216.89 L1250.5 1216.89 L1249.91 1216.89 L1249.32 1216.89 L1248.74 1216.89 L1248.15 1216.89 L1247.57 1216.89 L1246.98 1216.89 L1246.39 1216.89 L1245.81 1216.89 L1245.22 1216.89 L1244.63 1216.89 L1244.05 1216.89 L1243.46 1216.89 L1242.87 1216.89 L1242.29 1216.89 L1241.7 1216.89 L1241.11 1216.89 L1240.53 1216.89 L1239.94 1216.89 L1239.36 1216.89 L1238.77 1216.89 L1238.18 1216.89 L1237.6 1216.89 L1237.01 1216.89 L1236.42 1216.89 L1235.84 1216.89 L1235.25 1216.89 L1234.66 1216.89 L1234.08 1216.89 L1233.49 1216.89 L1232.91 1216.89 L1232.32 1216.89 L1231.73 1216.89 L1231.15 1216.89 L1230.56 1216.89 L1229.97 1216.89 L1229.39 1216.89 L1228.8 1216.89 L1228.21 1216.89 L1227.63 1216.89 L1227.04 1216.89 L1226.45 1216.89 L1225.87 1216.89 L1225.28 1216.89 L1224.7 1216.89 L1224.11 1216.89 L1223.52 1216.89 L1222.94 1216.89 L1222.35 1216.89 L1221.76 1216.89 L1221.18 1216.89 L1220.59 1216.89 L1220 1216.89 L1219.42 1216.89 L1218.83 1216.89 L1218.24 1216.89 L1217.66 1216.89 L1217.07 1216.89 L1216.49 1216.89 L1215.9 1216.89 L1215.31 1216.89 L1214.73 1216.89 L1214.14 1216.89 L1213.55 1216.89 L1212.97 1216.89 L1212.38 1216.89 L1211.79 1216.89 L1211.21 1216.89 L1210.62 1216.89 L1210.03 1216.89 L1209.45 1216.89 L1208.86 1216.89 L1208.28 1216.89 L1207.69 1216.89 L1207.1 1216.89 L1206.52 1216.89 L1205.93 1216.89 L1205.34 1216.89 L1204.76 1216.89 L1204.17 1216.89 L1203.58 1216.89 L1203 1216.89 L1202.41 1216.89 L1201.83 1216.89 L1201.24 1216.89 L1200.65 1216.89 L1200.07 1216.89 L1199.48 1216.89 L1198.89 1216.89 L1198.31 1216.89 L1197.72 1216.89 L1197.13 1216.89 L1196.55 1216.89 L1195.96 1216.89 L1195.37 1216.89 L1194.79 1216.89 L1194.2 1216.89 L1193.62 1216.89 L1193.03 1216.89 L1192.44 1216.89 L1191.86 1216.89 L1191.27 1216.89 L1190.68 1216.89 L1190.1 1216.89 L1189.51 1216.89 L1188.92 1216.89 L1188.34 1216.89 L1187.75 1216.89 L1187.16 1216.89 L1186.58 1216.89 L1185.99 1216.89 L1185.41 1216.89 L1184.82 1216.89 L1184.23 1216.89 L1183.65 1216.89 L1183.06 1216.89 L1182.47 1216.89 L1181.89 1216.89 L1181.3 1216.89 L1180.71 1216.89 L1180.13 1216.89 L1179.54 1216.89 L1178.96 1216.89 L1178.37 1216.89 L1177.78 1216.89 L1177.2 1216.89 L1176.61 1216.89 L1176.02 1216.89 L1175.44 1216.89 L1174.85 1216.89 L1174.26 1216.89 L1173.68 1216.89 L1173.09 1216.89 L1172.5 1216.89 L1171.92 1216.89 L1171.33 1216.89 L1170.75 1216.89 L1170.16 1216.89 L1169.57 1216.89 L1168.99 1216.89 L1168.4 1216.89 L1167.81 1216.89 L1167.23 1216.89 L1166.64 1216.89 L1166.05 1216.89 L1165.47 1216.89 L1164.88 1216.89 L1164.29 1216.89 L1163.71 1216.89 L1163.12 1216.89 L1162.54 1216.89 L1161.95 1216.89 L1161.36 1216.89 L1160.78 1216.89 L1160.19 1216.89 L1159.6 1216.89 L1159.02 1216.89 L1158.43 1216.89 L1157.84 1216.89 L1157.26 1216.89 L1156.67 1216.89 L1156.09 1216.89 L1155.5 1216.89 L1154.91 1216.89 L1154.33 1216.89 L1153.74 1216.89 L1153.15 1216.89 L1152.57 1216.89 L1151.98 1216.89 L1151.39 1216.89 L1150.81 1216.89 L1150.22 1216.89 L1149.63 1216.89 L1149.05 1216.89 L1148.46 1216.89 L1147.88 1216.89 L1147.29 1216.89 L1146.7 1216.89 L1146.12 1216.89 L1145.53 1216.89 L1144.94 1216.89 L1144.36 1216.89 L1143.77 1216.89 L1143.18 1216.89 L1142.6 1216.89 L1142.01 1216.89 L1141.42 1216.89 L1140.84 1216.89 L1140.25 1216.89 L1139.67 1216.89 L1139.08 1216.89 L1138.49 1216.89 L1137.91 1216.89 L1137.32 1216.89 L1136.73 1216.89 L1136.15 1216.89 L1135.56 1216.89 L1134.97 1216.89 L1134.39 1216.89 L1133.8 1216.89 L1133.21 1216.89 L1132.63 1216.89 L1132.04 1216.89 L1131.46 1216.89 L1130.87 1216.89 L1130.28 1216.89 L1129.7 1216.89 L1129.11 1216.89 L1128.52 1216.89 L1127.94 1216.89 L1127.35 1216.89 L1126.76 1216.89 L1126.18 1216.89 L1125.59 1216.89 L1125.01 1216.89 L1124.42 1216.89 L1123.83 1216.89 L1123.25 1216.89 L1122.66 1216.89 L1122.07 1216.89 L1121.49 1216.89 L1120.9 1216.89 L1120.31 1216.89 L1119.73 1216.89 L1119.14 1216.89 L1118.55 1216.89 L1117.97 1216.89 L1117.38 1216.89 L1116.8 1216.89 L1116.21 1216.89 L1115.62 1216.89 L1115.04 1216.89 L1114.45 1216.89 L1113.86 1216.89 L1113.28 1216.89 L1112.69 1216.89 L1112.1 1216.89 L1111.52 1216.89 L1110.93 1216.89 L1110.34 1216.89 L1109.76 1216.89 L1109.17 1216.89 L1108.59 1216.89 L1108 1216.89 L1107.41 1216.89 L1106.83 1216.89 L1106.24 1216.89 L1105.65 1216.89 L1105.07 1216.89 L1104.48 1216.89 L1103.89 1216.89 L1103.31 1216.89 L1102.72 1216.89 L1102.14 1216.89 L1101.55 1216.89 L1100.96 1216.89 L1100.38 1216.89 L1099.79 1216.89 L1099.2 1216.89 L1098.62 1216.89 L1098.03 1216.89 L1097.44 1216.89 L1096.86 1216.89 L1096.27 1216.89 L1095.68 1216.89 L1095.1 1216.89 L1094.51 1216.89 L1093.93 1216.89 L1093.34 1216.89 L1092.75 1216.89 L1092.17 1216.89 L1091.58 1216.89 L1090.99 1216.89 L1090.41 1216.89 L1089.82 1216.89 L1089.23 1216.89 L1088.65 1216.89 L1088.06 1216.89 L1087.47 1216.89 L1086.89 1216.89 L1086.3 1216.89 L1085.72 1216.89 L1085.13 1216.89 L1084.54 1216.89 L1083.96 1216.89 L1083.37 1216.89 L1082.78 1216.89 L1082.2 1216.89 L1081.61 1216.89 L1081.02 1216.89 L1080.44 1216.89 L1079.85 1216.89 L1079.26 1216.89 L1078.68 1216.89 L1078.09 1216.89 L1077.51 1216.89 L1076.92 1216.89 L1076.33 1216.89 L1075.75 1216.89 L1075.16 1216.89 L1074.57 1216.89 L1073.99 1216.89 L1073.4 1216.89 L1072.81 1216.89 L1072.23 1216.89 L1071.64 1216.89 L1071.06 1216.89 L1070.47 1216.89 L1069.88 1216.89 L1069.3 1216.89 L1068.71 1216.89 L1068.12 1216.89 L1067.54 1216.89 L1066.95 1216.89 L1066.36 1216.89 L1065.78 1216.89 L1065.19 1216.89 L1064.6 1216.89 L1064.02 1216.89 L1063.43 1216.89 L1062.85 1216.89 L1062.26 1216.89 L1061.67 1216.89 L1061.09 1216.89 L1060.5 1216.89 L1059.91 1216.89 L1059.33 1216.89 L1058.74 1216.89 L1058.15 1216.89 L1057.57 1216.89 L1056.98 1216.89 L1056.39 1216.89 L1055.81 1216.89 L1055.22 1216.89 L1054.64 1216.89 L1054.05 1216.89 L1053.46 1216.89 L1052.88 1216.89 L1052.29 1216.89 L1051.7 1216.89 L1051.12 1216.89 L1050.53 1216.89 L1049.94 1216.89 L1049.36 1216.89 L1048.77 1216.89 L1048.19 1216.89 L1047.6 1216.89 L1047.01 1216.89 L1046.43 1216.89 L1045.84 1216.89 L1045.25 1216.89 L1044.67 1216.89 L1044.08 1216.89 L1043.49 1216.89 L1042.91 1216.89 L1042.32 1216.89 L1041.73 1216.89 L1041.15 1216.89 L1040.56 1216.89 L1039.98 1216.89 L1039.39 1216.89 L1038.8 1216.89 L1038.22 1216.89 L1037.63 1216.89 L1037.04 1216.89 L1036.46 1216.89 L1035.87 1216.89 L1035.28 1216.89 L1034.7 1216.89 L1034.11 1216.89 L1033.52 1216.89 L1032.94 1216.89 L1032.35 1216.89 L1031.77 1216.89 L1031.18 1216.89 L1030.59 1216.89 L1030.01 1216.89 L1029.42 1216.89 L1028.83 1216.89 L1028.25 1216.89 L1027.66 1216.89 L1027.07 1216.89 L1026.49 1216.89 L1025.9 1216.89 L1025.32 1216.89 L1024.73 1216.89 L1024.14 1216.89 L1023.56 1216.89 L1022.97 1216.89 L1022.38 1216.89 L1021.8 1216.89 L1021.21 1216.89 L1020.62 1216.89 L1020.04 1216.89 L1019.45 1216.89 L1018.86 1216.89 L1018.28 1216.89 L1017.69 1216.89 L1017.11 1216.89 L1016.52 1216.89 L1015.93 1216.89 L1015.35 1216.89 L1014.76 1216.89 L1014.17 1216.89 L1013.59 1216.89 L1013 1216.89 L1012.41 1216.89 L1011.83 1216.89 L1011.24 1216.89 L1010.65 1216.89 L1010.07 1216.89 L1009.48 1216.89 L1008.9 1216.89 L1008.31 1216.89 L1007.72 1216.89 L1007.14 1216.89 L1006.55 1216.89 L1005.96 1216.89 L1005.38 1216.89 L1004.79 1216.89 L1004.2 1216.89 L1003.62 1216.89 L1003.03 1216.89 L1002.44 1216.89 L1001.86 1216.89 L1001.27 1216.89 L1000.69 1216.89 L1000.1 1216.89 L999.513 1216.89 L998.926 1216.89 L998.34 1216.89 L997.754 1216.89 L997.167 1216.89 L996.581 1216.89 L995.994 1216.89 L995.408 1216.89 L994.822 1216.89 L994.235 1216.89 L993.649 1216.89 L993.062 1216.89 L992.476 1216.89 L991.889 1216.89 L991.303 1216.89 L990.717 1216.89 L990.13 1216.89 L989.544 1216.89 L988.957 1216.89 L988.371 1216.89 L987.785 1216.89 L987.198 1216.89 L986.612 1216.89 L986.025 1216.89  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1216.94 986.612,1216.94 987.198,1216.94 987.785,1216.94 988.371,1216.94 988.957,1216.94 989.544,1216.94 990.13,1216.94 990.717,1216.94 991.303,1216.94 991.889,1216.94 992.476,1216.94 993.062,1216.94 993.649,1216.94 994.235,1216.94 994.822,1216.94 995.408,1216.94 995.994,1216.94 996.581,1216.94 997.167,1216.94 997.754,1216.94 998.34,1216.94 998.926,1216.94 999.513,1216.94 1000.1,1216.94 1000.69,1216.94 1001.27,1216.94 1001.86,1216.94 1002.44,1216.94 1003.03,1216.94 1003.62,1216.94 1004.2,1216.94 1004.79,1216.94 1005.38,1216.94 1005.96,1216.94 1006.55,1216.94 1007.14,1216.94 1007.72,1216.94 1008.31,1216.94 1008.9,1216.94 1009.48,1216.94 1010.07,1216.94 1010.65,1216.94 1011.24,1216.94 1011.83,1216.94 1012.41,1216.94 1013,1216.94 1013.59,1216.94 1014.17,1216.94 1014.76,1216.94 1015.35,1216.94 1015.93,1216.94 1016.52,1216.94 1017.11,1216.94 1017.69,1216.94 1018.28,1216.94 1018.86,1216.94 1019.45,1216.94 1020.04,1216.94 1020.62,1216.94 1021.21,1216.94 1021.8,1216.94 1022.38,1216.94 1022.97,1216.94 1023.56,1216.94 1024.14,1216.94 1024.73,1216.94 1025.32,1216.94 1025.9,1216.94 1026.49,1216.94 1027.07,1216.94 1027.66,1216.94 1028.25,1216.94 1028.83,1216.94 1029.42,1216.94 1030.01,1216.94 1030.59,1216.94 1031.18,1216.94 1031.77,1216.94 1032.35,1216.94 1032.94,1216.94 1033.52,1216.94 1034.11,1216.94 1034.7,1216.94 1035.28,1216.94 1035.87,1216.94 1036.46,1216.94 1037.04,1216.94 1037.63,1216.94 1038.22,1216.94 1038.8,1216.94 1039.39,1216.94 1039.98,1216.94 1040.56,1216.94 1041.15,1216.94 1041.73,1216.94 1042.32,1216.94 1042.91,1216.94 1043.49,1216.94 1044.08,1216.94 1044.67,1216.94 1045.25,1216.94 1045.84,1216.94 1046.43,1216.94 1047.01,1216.94 1047.6,1216.94 1048.19,1216.94 1048.77,1216.94 1049.36,1216.94 1049.94,1216.94 1050.53,1216.94 1051.12,1216.94 1051.7,1216.94 1052.29,1216.94 1052.88,1216.94 1053.46,1216.94 1054.05,1216.94 1054.64,1216.94 1055.22,1216.94 1055.81,1216.94 1056.39,1216.94 1056.98,1216.94 1057.57,1216.94 1058.15,1216.94 1058.74,1216.94 1059.33,1216.94 1059.91,1216.94 1060.5,1216.94 1061.09,1216.94 1061.67,1216.94 1062.26,1216.94 1062.85,1216.94 1063.43,1216.94 1064.02,1216.94 1064.6,1216.94 1065.19,1216.94 1065.78,1216.94 1066.36,1216.94 1066.95,1216.94 1067.54,1216.94 1068.12,1216.94 1068.71,1216.94 1069.3,1216.94 1069.88,1216.94 1070.47,1216.94 1071.06,1216.94 1071.64,1216.94 1072.23,1216.94 1072.81,1216.94 1073.4,1216.94 1073.99,1216.94 1074.57,1216.94 1075.16,1216.94 1075.75,1216.94 1076.33,1216.94 1076.92,1216.94 1077.51,1216.94 1078.09,1216.94 1078.68,1216.94 1079.26,1216.94 1079.85,1216.94 1080.44,1216.94 1081.02,1216.94 1081.61,1216.94 1082.2,1216.94 1082.78,1216.94 1083.37,1216.94 1083.96,1216.94 1084.54,1216.94 1085.13,1216.94 1085.72,1216.94 1086.3,1216.94 1086.89,1216.94 1087.47,1216.94 1088.06,1216.94 1088.65,1216.94 1089.23,1216.94 1089.82,1216.94 1090.41,1216.94 1090.99,1216.94 1091.58,1216.94 1092.17,1216.94 1092.75,1216.94 1093.34,1216.94 1093.93,1216.94 1094.51,1216.94 1095.1,1216.94 1095.68,1216.94 1096.27,1216.94 1096.86,1216.94 1097.44,1216.94 1098.03,1216.94 1098.62,1216.94 1099.2,1216.94 1099.79,1216.94 1100.38,1216.94 1100.96,1216.94 1101.55,1216.94 1102.14,1216.94 1102.72,1216.94 1103.31,1216.94 1103.89,1216.94 1104.48,1216.94 1105.07,1216.94 1105.65,1216.94 1106.24,1216.94 1106.83,1216.94 1107.41,1216.94 1108,1216.94 1108.59,1216.94 1109.17,1216.94 1109.76,1216.94 1110.34,1216.94 1110.93,1216.94 1111.52,1216.94 1112.1,1216.94 1112.69,1216.94 1113.28,1216.94 1113.86,1216.94 1114.45,1216.94 1115.04,1216.94 1115.62,1216.94 1116.21,1216.94 1116.8,1216.94 1117.38,1216.94 1117.97,1216.94 1118.55,1216.94 1119.14,1216.94 1119.73,1216.94 1120.31,1216.94 1120.9,1216.94 1121.49,1216.94 1122.07,1216.94 1122.66,1216.94 1123.25,1216.94 1123.83,1216.94 1124.42,1216.94 1125.01,1216.94 1125.59,1216.94 1126.18,1216.94 1126.76,1216.94 1127.35,1216.94 1127.94,1216.94 1128.52,1216.94 1129.11,1216.94 1129.7,1216.94 1130.28,1216.94 1130.87,1216.94 1131.46,1216.94 1132.04,1216.94 1132.63,1216.94 1133.21,1216.94 1133.8,1216.94 1134.39,1216.94 1134.97,1216.94 1135.56,1216.94 1136.15,1216.94 1136.73,1216.94 1137.32,1216.94 1137.91,1216.94 1138.49,1216.94 1139.08,1216.94 1139.67,1216.94 1140.25,1216.94 1140.84,1216.94 1141.42,1216.94 1142.01,1216.94 1142.6,1216.94 1143.18,1216.94 1143.77,1216.94 1144.36,1216.94 1144.94,1216.94 1145.53,1216.94 1146.12,1216.94 1146.7,1216.94 1147.29,1216.94 1147.88,1216.94 1148.46,1216.94 1149.05,1216.94 1149.63,1216.94 1150.22,1216.94 1150.81,1216.94 1151.39,1216.94 1151.98,1216.94 1152.57,1216.94 1153.15,1216.94 1153.74,1216.94 1154.33,1216.94 1154.91,1216.94 1155.5,1216.94 1156.09,1216.94 1156.67,1216.94 1157.26,1216.94 1157.84,1216.94 1158.43,1216.94 1159.02,1216.94 1159.6,1216.94 1160.19,1216.94 1160.78,1216.94 1161.36,1216.94 1161.95,1216.94 1162.54,1216.94 1163.12,1216.94 1163.71,1216.94 1164.29,1216.94 1164.88,1216.94 1165.47,1216.94 1166.05,1216.94 1166.64,1216.94 1167.23,1216.94 1167.81,1216.94 1168.4,1216.94 1168.99,1216.94 1169.57,1216.94 1170.16,1216.94 1170.75,1216.94 1171.33,1216.94 1171.92,1216.94 1172.5,1216.94 1173.09,1216.94 1173.68,1216.94 1174.26,1216.94 1174.85,1216.94 1175.44,1216.94 1176.02,1216.94 1176.61,1216.94 1177.2,1216.94 1177.78,1216.94 1178.37,1216.94 1178.96,1216.94 1179.54,1216.94 1180.13,1216.94 1180.71,1216.94 1181.3,1216.94 1181.89,1216.94 1182.47,1216.94 1183.06,1216.94 1183.65,1216.94 1184.23,1216.94 1184.82,1216.94 1185.41,1216.94 1185.99,1216.94 1186.58,1216.94 1187.16,1216.94 1187.75,1216.94 1188.34,1216.94 1188.92,1216.94 1189.51,1216.94 1190.1,1216.94 1190.68,1216.94 1191.27,1216.94 1191.86,1216.94 1192.44,1216.94 1193.03,1216.94 1193.62,1216.94 1194.2,1216.94 1194.79,1216.94 1195.37,1216.94 1195.96,1216.94 1196.55,1216.94 1197.13,1216.94 1197.72,1216.94 1198.31,1216.94 1198.89,1216.94 1199.48,1216.94 1200.07,1216.94 1200.65,1216.94 1201.24,1216.94 1201.83,1216.94 1202.41,1216.94 1203,1216.94 1203.58,1216.94 1204.17,1216.94 1204.76,1216.94 1205.34,1216.94 1205.93,1216.94 1206.52,1216.94 1207.1,1216.94 1207.69,1216.94 1208.28,1216.94 1208.86,1216.94 1209.45,1216.94 1210.03,1216.94 1210.62,1216.94 1211.21,1216.94 1211.79,1216.94 1212.38,1216.94 1212.97,1216.94 1213.55,1216.94 1214.14,1216.94 1214.73,1216.94 1215.31,1216.94 1215.9,1216.94 1216.49,1216.94 1217.07,1216.94 1217.66,1216.94 1218.24,1216.94 1218.83,1216.94 1219.42,1216.94 1220,1216.94 1220.59,1216.94 1221.18,1216.94 1221.76,1216.94 1222.35,1216.94 1222.94,1216.94 1223.52,1216.94 1224.11,1216.94 1224.7,1216.94 1225.28,1216.94 1225.87,1216.94 1226.45,1216.94 1227.04,1216.94 1227.63,1216.94 1228.21,1216.94 1228.8,1216.94 1229.39,1216.94 1229.97,1216.94 1230.56,1216.94 1231.15,1216.94 1231.73,1216.94 1232.32,1216.94 1232.91,1216.94 1233.49,1216.94 1234.08,1216.94 1234.66,1216.94 1235.25,1216.94 1235.84,1216.94 1236.42,1216.94 1237.01,1216.94 1237.6,1216.94 1238.18,1216.94 1238.77,1216.94 1239.36,1216.94 1239.94,1216.94 1240.53,1216.94 1241.11,1216.94 1241.7,1216.94 1242.29,1216.94 1242.87,1216.94 1243.46,1216.94 1244.05,1216.94 1244.63,1216.94 1245.22,1216.94 1245.81,1216.94 1246.39,1216.94 1246.98,1216.94 1247.57,1216.94 1248.15,1216.94 1248.74,1216.94 1249.32,1216.94 1249.91,1216.94 1250.5,1216.94 1251.08,1216.94 1251.67,1216.94 1252.26,1216.94 1252.84,1216.94 1253.43,1216.94 1254.02,1216.94 1254.6,1216.94 1255.19,1216.94 1255.78,1216.94 1256.36,1216.94 1256.95,1216.94 1257.53,1216.94 1258.12,1216.94 1258.71,1216.94 1259.29,1216.94 1259.88,1216.94 1260.47,1216.94 1261.05,1216.94 1261.64,1216.94 1262.23,1216.94 1262.81,1216.94 1263.4,1216.94 1263.98,1216.94 1264.57,1216.94 1265.16,1216.94 1265.74,1216.94 1266.33,1216.94 1266.92,1216.94 1267.5,1216.94 1268.09,1216.94 1268.68,1216.94 1269.26,1216.94 1269.85,1216.94 1270.44,1216.94 1271.02,1216.94 1271.61,1216.94 1272.19,1216.94 1272.78,1216.94 1273.37,1216.94 1273.95,1216.94 1274.54,1216.94 1275.13,1216.94 1275.71,1216.94 1276.3,1216.94 1276.89,1216.94 1277.47,1216.94 1278.06,1216.94 1278.65,1216.94 1279.23,1216.94 1279.82,1216.94 1280.4,1216.94 1280.99,1216.94 1281.58,1216.94 1282.16,1216.94 1282.75,1216.94 1283.34,1216.94 1283.92,1216.94 1284.51,1216.94 1285.1,1216.94 1285.68,1216.94 1286.27,1216.94 1286.86,1216.94 1287.44,1216.94 1288.03,1216.94 1288.61,1216.94 1289.2,1216.94 1289.79,1216.94 1290.37,1216.94 1290.96,1216.94 1291.55,1216.94 1292.13,1216.94 1292.72,1216.94 1293.31,1216.94 1293.89,1216.94 1294.48,1216.94 1295.06,1216.94 1295.65,1216.94 1296.24,1216.94 1296.82,1216.94 1297.41,1216.94 1298,1216.94 1298.58,1216.94 1299.17,1216.94 1299.76,1216.94 1300.34,1216.94 1300.93,1216.94 1301.52,1216.94 1302.1,1216.94 1302.69,1216.94 1303.27,1216.94 1303.86,1216.94 1304.45,1216.94 1305.03,1216.94 1305.62,1216.94 1306.21,1216.94 1306.79,1216.94 1307.38,1216.94 1307.97,1216.94 1308.55,1216.94 1309.14,1216.94 1309.73,1216.94 1310.31,1216.94 1310.9,1216.94 1311.48,1216.94 1312.07,1216.94 1312.66,1216.94 1313.24,1216.94 1313.83,1216.94 1314.42,1216.94 1315,1216.94 1315.59,1216.94 1316.18,1216.94 1316.76,1216.94 1317.35,1216.94 1317.93,1216.94 1318.52,1216.94 1319.11,1216.94 1319.69,1216.94 1320.28,1216.94 1320.87,1216.94 1321.45,1216.94 1322.04,1216.94 1322.63,1216.94 1323.21,1216.94 1323.8,1216.94 1324.39,1216.94 1324.97,1216.94 1325.56,1216.94 1326.14,1216.94 1326.73,1216.94 1327.32,1216.94 1327.9,1216.94 1328.49,1216.94 1329.08,1216.94 1329.66,1216.94 1330.25,1216.94 1330.84,1216.94 1331.42,1216.94 1332.01,1216.94 1332.6,1216.94 1333.18,1216.94 1333.77,1216.94 1334.35,1216.94 1334.94,1216.94 1335.53,1216.94 1336.11,1216.94 1336.7,1216.94 1337.29,1216.94 1337.87,1216.94 1338.46,1216.94 1339.05,1216.94 1339.63,1216.94 1340.22,1216.94 1340.8,1216.94 1341.39,1216.94 1341.98,1216.94 1342.56,1216.94 1343.15,1216.94 1343.74,1216.94 1344.32,1216.94 1344.91,1216.94 1345.5,1216.94 1346.08,1216.94 1346.67,1216.94 1347.26,1216.94 1347.84,1216.94 1348.43,1216.94 1349.01,1216.94 1349.6,1216.94 1350.19,1216.94 1350.77,1216.94 1351.36,1216.94 1351.95,1216.94 1352.53,1216.94 1353.12,1216.94 1353.71,1216.94 1354.29,1216.94 1354.88,1216.94 1355.47,1216.94 1356.05,1216.94 1356.64,1216.94 1357.22,1216.94 1357.81,1216.94 1358.4,1216.94 1358.98,1216.94 1359.57,1216.94 1360.16,1216.94 1360.74,1216.94 1361.33,1216.94 1361.92,1216.94 1362.5,1216.94 1363.09,1216.94 1363.68,1216.94 1364.26,1216.94 1364.85,1216.94 1365.43,1216.94 1366.02,1216.94 1366.61,1216.94 1367.19,1216.94 1367.78,1216.94 1368.37,1216.94 1368.95,1216.94 1369.54,1216.94 1370.13,1216.94 1370.71,1216.94 1371.3,1216.94 1371.88,1216.94 1372.47,1216.94 1373.06,1216.94 1373.64,1216.94 1374.23,1216.94 1374.82,1216.94 1375.4,1216.94 1375.99,1216.94 1376.58,1216.94 1377.16,1216.94 1377.75,1216.94 1378.34,1216.94 1378.92,1216.94 1379.51,1216.94 1380.09,1216.94 1380.68,1216.94 1381.27,1216.94 1381.85,1216.94 1382.44,1216.94 1383.03,1216.94 1383.61,1216.94 1384.2,1216.94 1384.79,1216.94 1385.37,1216.94 1385.96,1216.94 1386.55,1216.94 1387.13,1216.94 1387.72,1216.94 1388.3,1216.94 1388.89,1216.94 1389.48,1216.94 1390.06,1216.94 1390.65,1216.94 1391.24,1216.94 1391.82,1216.94 1392.41,1216.94 1393,1216.94 1393.58,1216.94 1394.17,1216.94 1394.75,1216.94 1395.34,1216.94 1395.93,1216.94 1396.51,1216.94 1397.1,1216.94 1397.69,1216.94 1398.27,1216.94 1398.86,1216.94 1399.45,1216.94 1400.03,1216.94 1400.62,1216.94 1401.21,1216.94 1401.79,1216.94 1402.38,1216.94 1402.96,1216.94 1403.55,1216.94 1404.14,1216.94 1404.72,1216.94 1405.31,1216.94 1405.9,1216.94 1406.48,1216.94 1407.07,1216.94 1407.66,1216.94 1408.24,1216.94 1408.83,1216.94 1409.42,1216.94 1410,1216.94 1410.59,1216.94 1411.17,1216.94 1411.76,1216.94 1412.35,1216.94 1412.93,1216.94 1413.52,1216.94 1414.11,1216.94 1414.69,1216.94 1415.28,1216.94 1415.87,1216.94 1416.45,1216.94 1417.04,1216.94 1417.63,1216.94 1418.21,1216.94 1418.8,1216.94 1419.38,1216.94 1419.97,1216.94 1420.56,1216.94 1421.14,1216.94 1421.73,1216.94 1422.32,1216.94 1422.9,1216.94 1423.49,1216.94 1424.08,1216.94 1424.66,1216.94 1425.25,1216.94 1425.83,1216.94 1426.42,1216.94 1427.01,1216.94 1427.59,1216.94 1428.18,1216.94 1428.77,1216.94 1429.35,1216.94 1429.94,1216.94 1430.53,1216.94 1431.11,1216.94 1431.7,1216.94 1432.29,1216.94 1432.87,1216.94 1433.46,1216.94 1434.04,1216.94 1434.63,1216.94 1435.22,1216.94 1435.8,1216.94 1436.39,1216.94 1436.98,1216.94 1437.56,1216.94 1438.15,1216.94 1438.74,1216.94 1439.32,1216.94 1439.91,1216.94 1440.5,1216.94 1441.08,1216.94 1441.67,1216.94 1442.25,1216.94 1442.84,1216.94 1443.43,1216.94 1444.01,1216.94 1444.6,1216.94 1445.19,1216.94 1445.77,1216.94 1446.36,1216.94 1446.95,1216.94 1447.53,1216.94 1448.12,1216.94 1448.7,1216.94 1449.29,1216.94 1449.88,1216.94 1450.46,1216.94 1451.05,1216.94 1451.64,1216.94 1452.22,1216.94 1452.81,1216.94 1453.4,1216.94 1453.98,1216.94 1454.57,1216.94 1455.16,1216.94 1455.74,1216.94 1456.33,1216.94 1456.91,1216.94 1457.5,1216.94 1458.09,1216.94 1458.67,1216.94 1459.26,1216.94 1459.85,1216.94 1460.43,1216.94 1461.02,1216.94 1461.61,1216.94 1462.19,1216.94 1462.78,1216.94 1463.37,1216.94 1463.95,1216.94 1464.54,1216.94 1465.12,1216.94 1465.71,1216.94 1466.3,1216.94 1466.88,1216.94 1467.47,1216.94 1468.06,1216.94 1468.64,1216.94 1469.23,1216.94 1469.82,1216.94 1470.4,1216.94 1470.99,1216.94 1471.57,1216.94 1472.16,1216.94 1472.75,1216.94 1473.33,1216.94 1473.92,1216.94 1474.51,1216.94 1475.09,1216.94 1475.68,1216.94 1476.27,1216.94 1476.85,1216.94 1477.44,1216.94 1478.03,1216.94 1478.61,1216.94 1479.2,1216.94 1479.78,1216.94 1480.37,1216.94 1480.96,1216.94 1481.54,1216.94 1482.13,1216.94 1482.72,1216.94 1483.3,1216.94 1483.89,1216.94 1484.48,1216.94 1485.06,1216.94 1485.65,1216.94 1486.24,1216.94 1486.82,1216.94 1487.41,1216.94 1487.99,1216.94 1488.58,1216.94 1489.17,1216.94 1489.75,1216.94 1490.34,1216.94 1490.93,1216.94 1491.51,1216.94 1492.1,1216.94 1492.69,1216.94 1493.27,1216.94 1493.86,1216.94 1494.45,1216.94 1495.03,1216.94 1495.62,1216.94 1496.2,1216.94 1496.79,1216.94 1497.38,1216.94 1497.96,1216.94 1498.55,1216.94 1499.14,1216.94 1499.72,1216.94 1500.31,1216.94 1500.9,1216.94 1501.48,1216.94 1502.07,1216.94 1502.65,1216.94 1503.24,1216.94 1503.83,1216.94 1504.41,1216.94 1505,1216.94 1505.59,1216.94 1506.17,1216.94 1506.76,1216.94 1507.35,1216.94 1507.93,1216.94 1508.52,1216.94 1509.11,1216.94 1509.69,1216.94 1510.28,1216.94 1510.86,1216.94 1511.45,1216.94 1512.04,1216.94 1512.62,1216.94 1513.21,1216.94 1513.8,1216.94 1514.38,1216.94 1514.97,1216.94 1515.56,1216.94 1516.14,1216.94 1516.73,1216.94 1517.32,1216.94 1517.9,1216.94 1518.49,1216.94 1519.07,1216.94 1519.66,1216.94 1520.25,1216.94 1520.83,1216.94 1521.42,1216.94 1522.01,1216.94 1522.59,1216.94 1523.18,1216.94 1523.77,1216.94 1524.35,1216.94 1524.94,1216.94 1525.52,1216.94 1526.11,1216.94 1526.7,1216.94 1527.28,1216.94 1527.87,1216.94 1528.46,1216.94 1529.04,1216.94 1529.63,1216.94 1530.22,1216.94 1530.8,1216.94 1531.39,1216.94 1531.98,1216.94 1532.56,1216.94 1533.15,1216.94 1533.73,1216.94 1534.32,1216.94 1534.91,1216.94 1535.49,1216.94 1536.08,1216.94 1536.67,1216.94 1537.25,1216.94 1537.84,1216.94 1538.43,1216.94 1539.01,1216.94 1539.6,1216.94 1540.19,1216.94 1540.77,1216.94 1541.36,1216.94 1541.94,1216.94 1542.53,1216.94 1543.12,1216.94 1543.7,1216.94 1544.29,1216.94 1544.88,1216.94 1545.46,1216.94 1546.05,1216.94 1546.64,1216.94 1547.22,1216.94 1547.81,1216.94 1548.4,1216.94 1548.98,1216.94 1549.57,1216.94 1550.15,1216.94 1550.74,1216.94 1551.33,1216.94 1551.91,1216.94 1552.5,1216.94 1553.09,1216.94 1553.67,1216.94 1554.26,1216.94 1554.85,1216.94 1555.43,1216.94 1556.02,1216.94 1556.6,1216.94 1557.19,1216.94 1557.78,1216.94 1558.36,1216.94 1558.95,1216.94 1559.54,1216.94 1560.12,1216.94 1560.71,1216.94 1561.3,1216.94 1561.88,1216.94 1562.47,1216.94 1563.06,1216.94 1563.64,1216.94 1564.23,1216.94 1564.81,1216.94 1565.4,1216.94 1565.99,1216.94 1566.57,1216.94 1567.16,1216.94 1567.75,1216.94 1568.33,1216.94 1568.92,1216.94 1569.51,1216.94 1570.09,1216.94 1570.68,1216.94 1571.27,1216.94 1571.85,1216.94 1572.44,1216.94 1573.02,1216.94 1573.61,1216.94 1574.2,1216.94 1574.78,1216.94 1575.37,1216.94 1575.96,1216.94 1576.54,1216.94 1577.13,1216.94 1577.72,1216.94 1578.3,1216.94 1578.89,1216.94 1579.47,1216.94 1580.06,1216.94 1580.65,1216.94 1581.23,1216.94 1581.82,1216.94 1582.41,1216.94 1582.99,1216.94 1583.58,1216.94 1584.17,1216.94 1584.75,1216.94 1585.34,1216.94 1585.93,1216.94 1586.51,1216.94 1587.1,1216.94 1587.68,1216.94 1588.27,1216.94 1588.86,1216.94 1589.44,1216.94 1590.03,1216.94 1590.62,1216.94 1591.2,1216.94 1591.79,1216.94 1592.38,1216.94 1592.96,1216.94 1593.55,1216.94 1594.14,1216.94 1594.72,1216.94 1595.31,1216.94 1595.89,1216.94 1596.48,1216.94 1597.07,1216.94 1597.65,1216.94 1598.24,1216.94 1598.83,1216.94 1599.41,1216.94 1600,1216.94 1600.59,1216.94 1601.17,1216.94 1601.76,1216.94 1602.34,1216.94 1602.93,1216.94 1603.52,1216.94 1604.1,1216.94 1604.69,1216.94 1605.28,1216.94 1605.86,1216.94 1606.45,1216.94 1607.04,1216.94 1607.62,1216.94 1608.21,1216.94 1608.8,1216.94 1609.38,1216.94 1609.97,1216.94 1610.55,1216.94 1611.14,1216.94 1611.73,1216.94 1612.31,1216.94 1612.9,1216.94 1613.49,1216.94 1614.07,1216.94 1614.66,1216.94 1615.25,1216.94 1615.83,1216.94 1616.42,1216.94 1617.01,1216.94 1617.59,1216.94 1618.18,1216.94 1618.76,1216.94 1619.35,1216.94 1619.94,1216.94 1620.52,1216.94 1621.11,1216.94 1621.7,1216.94 1622.28,1216.94 1622.87,1216.94 1623.46,1216.94 1624.04,1216.94 1624.63,1216.94 1625.22,1216.94 1625.8,1216.94 1626.39,1216.94 1626.97,1216.94 1627.56,1216.94 1628.15,1216.94 1628.73,1216.94 1629.32,1216.94 1629.91,1216.94 1630.49,1216.94 1631.08,1216.94 1631.67,1216.94 1632.25,1216.94 1632.84,1216.94 1633.42,1216.94 1634.01,1216.94 1634.6,1216.94 1635.18,1216.94 1635.77,1216.94 1636.36,1216.94 1636.94,1216.94 1637.53,1216.94 1638.12,1216.94 1638.7,1216.94 1639.29,1216.94 1639.88,1216.94 1640.46,1216.94 1641.05,1216.94 1641.63,1216.94 1642.22,1216.94 1642.81,1216.94 1643.39,1216.94 1643.98,1216.94 1644.57,1216.94 1645.15,1216.94 1645.74,1216.94 1646.33,1216.94 1646.91,1216.94 1647.5,1216.94 1648.09,1216.94 1648.67,1216.94 1649.26,1216.94 1649.84,1216.94 1650.43,1216.94 1651.02,1216.94 1651.6,1216.94 1652.19,1216.94 1652.78,1216.94 1653.36,1216.94 1653.95,1216.94 1654.54,1216.94 1655.12,1216.94 1655.71,1216.94 1656.29,1216.94 1656.88,1216.94 1657.47,1216.94 1658.05,1216.94 1658.64,1216.94 1659.23,1216.94 1659.81,1216.94 1660.4,1216.94 1660.99,1216.94 1661.57,1216.94 1662.16,1216.94 1662.75,1216.94 1663.33,1216.94 1663.92,1216.94 1664.5,1216.94 1665.09,1216.94 1665.68,1216.94 1666.26,1216.94 1666.85,1216.94 1667.44,1216.94 1668.02,1216.94 1668.61,1216.94 1669.2,1216.94 1669.78,1216.94 1670.37,1216.94 1670.96,1216.94 1671.54,1216.94 1672.13,1216.94 1672.71,1216.94 1673.3,1216.94 1673.89,1216.94 1674.47,1216.94 1675.06,1216.94 1675.65,1216.94 1676.23,1216.94 1676.82,1216.94 1677.41,1216.94 1677.99,1216.94 1678.58,1216.94 1679.17,1216.94 1679.75,1216.94 1680.34,1216.94 1680.92,1216.94 1681.51,1216.94 1682.1,1216.94 1682.68,1216.94 1683.27,1216.94 1683.86,1216.94 1684.44,1216.94 1685.03,1216.94 1685.62,1216.94 1686.2,1216.94 1686.79,1216.94 1687.37,1216.94 1687.96,1216.94 1688.55,1216.94 1689.13,1216.94 1689.72,1216.94 1690.31,1216.94 1690.89,1216.94 1691.48,1216.94 1692.07,1216.94 1692.65,1216.94 1693.24,1216.94 1693.83,1216.94 1694.41,1216.94 1695,1216.94 1695.58,1216.94 1696.17,1216.94 1696.76,1216.94 1697.34,1216.94 1697.93,1216.94 1698.52,1216.94 1699.1,1216.94 1699.69,1216.94 1700.28,1216.94 1700.86,1216.94 1701.45,1216.94 1702.04,1216.94 1702.62,1216.94 1703.21,1216.94 1703.79,1216.94 1704.38,1216.94 1704.97,1216.94 1705.55,1216.94 1706.14,1216.94 1706.73,1216.94 1707.31,1216.94 1707.9,1216.94 1708.49,1216.94 1709.07,1216.94 1709.66,1216.94 1710.24,1216.94 1710.83,1216.94 1711.42,1216.94 1712,1216.94 1712.59,1216.94 1713.18,1216.94 1713.76,1216.94 1714.35,1216.94 1714.94,1216.94 1715.52,1216.94 1716.11,1216.94 1716.7,1216.94 1717.28,1216.94 1717.87,1216.94 1718.45,1216.94 1719.04,1216.94 1719.63,1216.94 1720.21,1216.94 1720.8,1216.94 1721.39,1216.94 1721.97,1216.94 1722.56,1216.94 1723.15,1216.94 1723.73,1216.94 1724.32,1216.94 1724.91,1216.94 1725.49,1216.94 1726.08,1216.94 1726.66,1216.94 1727.25,1216.94 1727.84,1216.94 1728.42,1216.94 1729.01,1216.94 1729.6,1216.94 1730.18,1216.94 1730.77,1216.94 1731.36,1216.94 1731.94,1216.94 1732.53,1216.94 1733.11,1216.94 1733.7,1216.94 1734.29,1216.94 1734.87,1216.94 1735.46,1216.94 1736.05,1216.94 1736.63,1216.94 1737.22,1216.94 1737.81,1216.94 1738.39,1216.94 1738.98,1216.94 1739.57,1216.94 1740.15,1216.94 1740.74,1216.94 1741.32,1216.94 1741.91,1216.94 1742.5,1216.94 1743.08,1216.94 1743.67,1216.94 1744.26,1216.94 1744.84,1216.94 1745.43,1216.94 1746.02,1216.94 1746.6,1216.94 1747.19,1216.94 1747.78,1216.94 1748.36,1216.94 1748.95,1216.94 1749.53,1216.94 1750.12,1216.94 1750.71,1216.94 1751.29,1216.94 1751.88,1216.94 1752.47,1216.94 1753.05,1216.94 1753.64,1216.94 1754.23,1216.94 1754.81,1216.94 1755.4,1216.94 1755.99,1216.94 1756.57,1216.94 1757.16,1216.94 1757.74,1216.94 1758.33,1216.94 1758.92,1216.94 1759.5,1216.94 1760.09,1216.94 1760.68,1216.94 1761.26,1216.94 1761.85,1216.94 1762.44,1216.94 1763.02,1216.94 1763.61,1216.94 1764.19,1216.94 1764.78,1216.94 1765.37,1216.94 1765.95,1216.94 1766.54,1216.94 1767.13,1216.94 1767.71,1216.94 1768.3,1216.94 1768.89,1216.94 1769.47,1216.94 1770.06,1216.94 1770.65,1216.94 1771.23,1216.94 1771.82,1216.94 1772.4,1216.94 1772.99,1216.94 1773.58,1216.94 1774.16,1216.94 1774.75,1216.94 1775.34,1216.94 1775.92,1216.94 1776.51,1216.94 1777.1,1216.94 1777.68,1216.94 1778.27,1216.94 1778.86,1216.94 1779.44,1216.94 1780.03,1216.94 1780.61,1216.94 1781.2,1216.94 1781.79,1216.94 1782.37,1216.94 1782.96,1216.94 1783.55,1216.94 1784.13,1216.94 1784.72,1216.94 1785.31,1216.94 1785.89,1216.94 1786.48,1216.94 1787.06,1216.94 1787.65,1216.94 1788.24,1216.94 1788.82,1216.94 1789.41,1216.94 1790,1216.94 1790.58,1216.94 1791.17,1216.94 1791.76,1216.94 1792.34,1216.94 1792.93,1216.94 1793.52,1216.94 1794.1,1216.94 1794.69,1216.94 1795.27,1216.94 1795.86,1216.94 1796.45,1216.94 1797.03,1216.94 1797.62,1216.94 1798.21,1216.94 1798.79,1216.94 1799.38,1216.94 1799.97,1216.94 1800.55,1216.94 1801.14,1216.94 1801.73,1216.94 1802.31,1216.94 1802.9,1216.94 1803.48,1216.94 1804.07,1216.94 1804.66,1216.94 1805.24,1216.94 1805.83,1216.94 1806.42,1216.94 1807,1216.94 1807.59,1216.94 1808.18,1216.94 1808.76,1216.94 1809.35,1216.94 1809.94,1216.94 1810.52,1216.94 1811.11,1216.94 1811.69,1216.94 1812.28,1216.94 1812.87,1216.94 1813.45,1216.94 1814.04,1216.94 1814.63,1216.94 1815.21,1216.94 1815.8,1216.94 1816.39,1216.94 1816.97,1216.94 1817.56,1216.94 1818.14,1216.94 1818.73,1216.94 1819.32,1216.94 1819.9,1216.94 1820.49,1216.94 1821.08,1216.94 1821.66,1216.94 1822.25,1216.94 1822.84,1216.94 1823.42,1216.94 1824.01,1216.94 1824.6,1216.94 1825.18,1216.94 1825.77,1216.94 1826.35,1216.94 1826.94,1216.94 1827.53,1216.94 1828.11,1216.94 1828.7,1216.94 1829.29,1216.94 1829.87,1216.94 1830.46,1216.94 1831.05,1216.94 1831.63,1216.94 1832.22,1216.94 1832.81,1216.94 1833.39,1216.94 1833.98,1216.94 1834.56,1216.94 1835.15,1216.94 1835.74,1216.94 1836.32,1216.94 1836.91,1216.94 1837.5,1216.94 1838.08,1216.94 1838.67,1216.94 1839.26,1216.94 1839.84,1216.94 1840.43,1216.94 1841.01,1216.94 1841.6,1216.94 1842.19,1216.94 1842.77,1216.94 1843.36,1216.94 1843.95,1216.94 1844.53,1216.94 1845.12,1216.94 1845.71,1216.94 1846.29,1216.94 1846.88,1216.94 1847.47,1216.94 1848.05,1216.94 1848.64,1216.94 1849.22,1216.94 1849.81,1216.94 1850.4,1216.94 1850.98,1216.94 1851.57,1216.94 1852.16,1216.94 1852.74,1216.94 1853.33,1216.94 1853.92,1216.94 1854.5,1216.94 1855.09,1216.94 1855.68,1216.94 1856.26,1216.94 1856.85,1216.94 1857.43,1216.94 1858.02,1216.94 1858.61,1216.94 1859.19,1216.94 1859.78,1216.94 1860.37,1216.94 1860.95,1216.94 1861.54,1216.94 1862.13,1216.94 1862.71,1216.94 1863.3,1216.94 1863.88,1216.94 1864.47,1216.94 1865.06,1216.94 1865.64,1216.94 1866.23,1216.94 1866.82,1216.94 1867.4,1216.94 1867.99,1216.94 1868.58,1216.94 1869.16,1216.94 1869.75,1216.94 1870.34,1216.94 1870.92,1216.94 1871.51,1216.94 1872.09,1216.94 1872.68,1216.94 1873.27,1216.94 1873.85,1216.94 1874.44,1216.94 1875.03,1216.94 1875.61,1216.94 1876.2,1216.94 1876.79,1216.94 1877.37,1216.94 1877.96,1216.94 1878.55,1216.94 1879.13,1216.94 1879.72,1216.94 1880.3,1216.94 1880.89,1216.94 1881.48,1216.94 1882.06,1216.94 1882.65,1216.94 1883.24,1216.94 1883.82,1216.94 1884.41,1216.94 1885,1216.94 1885.58,1216.94 1886.17,1216.94 1886.76,1216.94 1887.34,1216.94 1887.93,1216.94 1888.51,1216.94 1889.1,1216.94 1889.69,1216.94 1890.27,1216.94 1890.86,1216.94 1891.45,1216.94 1892.03,1216.94 1892.62,1216.94 1893.21,1216.94 1893.79,1216.94 1894.38,1216.94 1894.96,1216.94 1895.55,1216.94 1896.14,1216.94 1896.72,1216.94 1897.31,1216.94 1897.9,1216.94 1898.48,1216.94 1899.07,1216.94 1899.66,1216.94 1900.24,1216.94 1900.83,1216.94 1901.42,1216.94 1902,1216.94 1902.59,1216.94 1903.17,1216.94 1903.76,1216.94 1904.35,1216.94 1904.93,1216.94 1905.52,1216.94 1906.11,1216.94 1906.69,1216.94 1907.28,1216.94 1907.87,1216.94 1908.45,1216.94 1909.04,1216.94 1909.63,1216.94 1910.21,1216.94 1910.8,1216.94 1911.38,1216.94 1911.97,1216.94 1912.56,1216.94 1913.14,1216.94 1913.73,1216.94 1914.32,1216.94 1914.9,1216.94 1915.49,1216.94 1916.08,1216.94 1916.66,1216.94 1917.25,1216.94 1917.83,1216.94 1918.42,1216.94 1919.01,1216.94 1919.59,1216.94 1920.18,1216.94 1920.77,1216.94 1921.35,1216.94 1921.94,1216.94 1922.53,1216.94 1923.11,1216.94 1923.7,1216.94 1924.29,1216.94 1924.87,1216.94 1925.46,1216.94 1926.04,1216.94 1926.63,1216.94 1927.22,1216.94 1927.8,1216.94 1928.39,1216.94 1928.98,1216.94 1929.56,1216.94 1930.15,1216.94 1930.74,1216.94 1931.32,1216.94 1931.91,1216.94 1932.5,1216.94 1933.08,1216.94 1933.67,1216.94 1934.25,1216.94 1934.84,1216.94 1935.43,1216.94 1936.01,1216.94 1936.6,1216.94 1937.19,1216.94 1937.77,1216.94 1938.36,1216.94 1938.95,1216.94 1939.53,1216.94 1940.12,1216.94 1940.71,1216.94 1941.29,1216.94 1941.88,1216.94 1942.46,1216.94 1943.05,1216.94 1943.64,1216.94 1944.22,1216.94 1944.81,1216.94 1945.4,1216.94 1945.98,1216.94 1946.57,1216.94 1947.16,1216.94 1947.74,1216.94 1948.33,1216.94 1948.91,1216.94 1949.5,1216.94 1950.09,1216.94 1950.67,1216.94 1951.26,1216.94 1951.85,1216.94 1952.43,1216.94 1953.02,1216.94 1953.61,1216.94 1954.19,1216.94 1954.78,1216.94 1955.37,1216.94 1955.95,1216.94 1956.54,1216.94 1957.12,1216.94 1957.71,1216.94 1958.3,1216.94 1958.88,1216.94 1959.47,1216.94 1960.06,1216.94 1960.64,1216.94 1961.23,1216.94 1961.82,1216.94 1962.4,1216.94 1962.99,1216.94 1963.58,1216.94 1964.16,1216.94 1964.75,1216.94 1965.33,1216.94 1965.92,1216.94 1966.51,1216.94 1967.09,1216.94 1967.68,1216.94 1968.27,1216.94 1968.85,1216.94 1969.44,1216.94 1970.03,1216.94 1970.61,1216.94 1971.2,1216.94 1971.78,1216.94 1972.37,1216.94 1972.96,1216.94 1973.54,1216.94 1974.13,1216.94 1974.72,1216.94 1975.3,1216.94 1975.89,1216.94 1976.48,1216.94 1977.06,1216.94 1977.65,1216.94 1978.24,1216.94 1978.82,1216.94 1979.41,1216.94 1979.99,1216.94 1980.58,1216.94 1981.17,1216.94 1981.75,1216.94 1982.34,1216.94 1982.93,1216.94 1983.51,1216.94 1984.1,1216.94 1984.69,1216.94 1985.27,1216.94 1985.86,1216.94 1986.45,1216.94 1987.03,1216.94 1987.62,1216.94 1988.2,1216.94 1988.79,1216.94 1989.38,1216.94 1989.96,1216.94 1990.55,1216.94 1991.14,1216.94 1991.72,1216.94 1992.31,1216.94 1992.9,1216.94 1993.48,1216.94 1994.07,1216.94 1994.65,1216.94 1995.24,1216.94 1995.83,1216.94 1996.41,1216.94 1997,1216.94 1997.59,1216.94 1998.17,1216.94 1998.76,1216.94 1999.35,1216.94 1999.93,1216.94 2000.52,1216.94 2001.11,1216.94 2001.69,1216.94 2002.28,1216.94 2002.86,1216.94 2003.45,1216.94 2004.04,1216.94 2004.62,1216.94 2005.21,1216.94 2005.8,1216.94 2006.38,1216.94 2006.97,1216.94 2007.56,1216.94 2008.14,1216.94 2008.73,1216.94 2009.32,1216.94 2009.9,1216.94 2010.49,1216.94 2011.07,1216.94 2011.66,1216.94 2012.25,1216.94 2012.83,1216.94 2013.42,1216.94 2014.01,1216.94 2014.59,1216.94 2015.18,1216.94 2015.77,1216.94 2016.35,1216.94 2016.94,1216.94 2017.53,1216.94 2018.11,1216.94 2018.7,1216.94 2019.28,1216.94 2019.87,1216.94 2020.46,1216.94 2021.04,1216.94 2021.63,1216.94 2022.22,1216.94 2022.8,1216.94 2023.39,1216.94 2023.98,1216.94 2024.56,1216.94 2025.15,1216.94 2025.73,1216.94 2026.32,1216.94 2026.91,1216.94 2027.49,1216.94 2028.08,1216.94 2028.67,1216.94 2029.25,1216.94 2029.84,1216.94 2030.43,1216.94 2031.01,1216.94 2031.6,1216.94 2032.19,1216.94 2032.77,1216.94 2033.36,1216.94 2033.94,1216.94 2034.53,1216.94 2035.12,1216.94 2035.7,1216.94 2036.29,1216.94 2036.88,1216.94 2037.46,1216.94 2038.05,1216.94 2038.64,1216.94 2039.22,1216.94 2039.81,1216.94 2040.4,1216.94 2040.98,1216.94 2041.57,1216.94 2042.15,1216.94 2042.74,1216.94 2043.33,1216.94 2043.91,1216.94 2044.5,1216.94 2045.09,1216.94 2045.67,1216.94 2046.26,1216.94 2046.85,1216.94 2047.43,1216.94 2048.02,1216.94 2048.6,1216.94 2049.19,1216.94 2049.78,1216.94 2050.36,1216.94 2050.95,1216.94 2051.54,1216.94 2052.12,1216.94 2052.71,1216.94 2053.3,1216.94 2053.88,1216.94 2054.47,1216.94 2055.06,1216.94 2055.64,1216.94 2056.23,1216.94 2056.81,1216.94 2057.4,1216.94 2057.99,1216.94 2058.57,1216.94 2059.16,1216.94 2059.75,1216.94 2060.33,1216.94 2060.92,1216.94 2061.51,1216.94 2062.09,1216.94 2062.68,1216.94 2063.27,1216.94 2063.85,1216.94 2064.44,1216.94 2065.02,1216.94 2065.61,1216.94 2066.2,1216.94 2066.78,1216.94 2067.37,1216.94 2067.96,1216.94 2068.54,1216.94 2069.13,1216.94 2069.72,1216.94 2070.3,1216.94 2070.89,1216.94 2071.48,1216.94 2072.06,1216.94 2072.65,1216.94 2073.23,1216.94 2073.82,1216.94 2074.41,1216.94 2074.99,1216.94 2075.58,1216.94 2076.17,1216.94 2076.75,1216.94 2077.34,1216.94 2077.93,1216.94 2078.51,1216.94 2079.1,1216.94 2079.68,1216.94 2080.27,1216.94 2080.86,1216.94 2081.44,1216.94 2082.03,1216.94 2082.62,1216.94 2083.2,1216.94 2083.79,1216.94 2084.38,1216.94 2084.96,1216.94 2085.55,1216.94 2086.14,1216.94 2086.72,1216.94 2087.31,1216.94 2087.89,1216.94 2088.48,1216.94 2089.07,1216.94 2089.65,1216.94 2090.24,1216.94 2090.83,1216.94 2091.41,1216.94 2092,1216.94 2092.59,1216.94 2093.17,1216.94 2093.76,1216.94 2094.35,1216.94 2094.93,1216.94 2095.52,1216.94 2096.1,1216.94 2096.69,1216.94 2097.28,1216.94 2097.86,1216.94 2098.45,1216.94 2099.04,1216.94 2099.62,1216.94 2100.21,1216.94 2100.8,1216.94 2101.38,1216.94 2101.97,1216.94 2102.55,1216.94 2103.14,1216.94 2103.73,1216.94 2104.31,1216.94 2104.9,1216.94 2105.49,1216.94 2106.07,1216.94 2106.66,1216.94 2107.25,1216.94 2107.83,1216.94 2108.42,1216.94 2109.01,1216.94 2109.59,1216.94 2110.18,1216.94 2110.76,1216.94 2111.35,1216.94 2111.94,1216.94 2112.52,1216.94 2113.11,1216.94 2113.7,1216.94 2114.28,1216.94 2114.87,1216.94 2115.46,1216.94 2116.04,1216.94 2116.63,1216.94 2117.22,1216.94 2117.8,1216.94 2118.39,1216.94 2118.97,1216.94 2119.56,1216.94 2120.15,1216.94 2120.73,1216.94 2121.32,1216.94 2121.91,1216.94 2122.49,1216.94 2123.08,1216.94 2123.67,1216.94 2124.25,1216.94 2124.84,1216.94 2125.42,1216.94 2126.01,1216.94 2126.6,1216.94 2127.18,1216.94 2127.77,1216.94 2128.36,1216.94 2128.94,1216.94 2129.53,1216.94 2130.12,1216.94 2130.7,1216.94 2131.29,1216.94 2131.88,1216.94 2132.46,1216.94 2133.05,1216.94 2133.63,1216.94 2134.22,1216.94 2134.81,1216.94 2135.39,1216.94 2135.98,1216.94 2136.57,1216.94 2137.15,1216.94 2137.74,1216.94 2138.33,1216.94 2138.91,1216.94 2139.5,1216.94 2140.09,1216.94 2140.67,1216.94 2141.26,1216.94 2141.84,1216.94 2142.43,1216.94 2143.02,1216.94 2143.6,1216.94 2144.19,1216.94 2144.78,1216.94 2145.36,1216.94 2145.95,1216.94 2146.54,1216.94 2147.12,1216.94 2147.71,1216.94 2148.3,1216.94 2148.88,1216.94 2149.47,1216.94 2150.05,1216.94 2150.64,1216.94 2151.23,1216.94 2151.81,1216.94 2152.4,1216.94 2152.99,1216.94 2153.57,1216.94 2154.16,1216.94 2154.75,1216.94 2155.33,1216.94 2155.92,1216.94 2156.5,1216.94 2157.09,1216.94 2157.68,1216.94 2158.26,1216.94 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1563.12,1200.81 1398.3,899.083 \"/>\n<polyline clip-path=\"url(#clip062)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1232.78 985.439,1200.81 2158.26,1200.81 2158.26,1232.78 985.439,1232.78 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip060)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip060)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip063\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip060)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip060)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip060)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip063)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-6762.81 164.91,-7586.79 165.469,-8335.09 166.029,-9036.4 166.588,-9669.84 167.147,-10239.8 167.706,-10750.4 168.266,-11205.5 168.825,-11608.6 169.384,-11963.2 169.943,-12272.5 170.503,-12539.4 171.062,-12766.8 171.621,-12947.5 172.18,-11893.4 172.74,-11518.1 173.299,-11682.1 173.858,-11822.9 174.417,-11059.6 174.977,-11154 175.536,-10859.6 176.095,-10242.4 176.655,-10006.1 177.214,-9764.13 177.773,-9813.8 178.332,-9835.25 178.892,-9832.51 179.451,-9812.54 180.01,-9562.07 180.569,-9314.79 181.129,-9265.61 181.688,-9205.43 182.247,-9128.33 182.806,-9052.79 183.366,-8967.92 183.925,-8582.13 184.484,-8486.6 185.043,-8389.06 185.603,-8023.54 186.162,-7812.32 186.721,-7600.04 187.28,-7185.31 187.84,-6791.1 188.399,-6706.09 188.958,-6616.38 189.517,-6526.57 190.077,-6423.79 190.636,-6250.4 191.195,-6072.69 191.754,-5967.62 192.314,-5867.86 192.873,-5627.42 193.432,-5529.99 193.991,-5362.97 194.551,-5203.59 195.11,-4871.66 195.669,-4782.53 196.228,-4645.28 196.788,-4558.27 197.347,-4419.81 197.906,-4185.08 198.465,-4101 199.025,-3877.39 199.584,-3754.24 200.143,-3548.04 200.702,-3308.26 201.262,-3161.09 201.821,-2940.39 202.38,-2807.34 202.939,-2680.8 203.499,-2592.99 204.058,-2360.8 204.617,-2281.99 205.176,-2164.31 205.736,-2119.62 206.295,-2072.93 206.854,-1996.82 207.413,-1952.5 207.973,-1901.82 208.532,-1758.75 209.091,-1647.99 209.65,-1541.58 210.21,-1441.87 210.769,-1404.07 211.328,-1303.98 211.887,-1212.92 212.447,-1090.46 213.006,-1000.75 213.565,-914.543 214.124,-858.198 214.684,-806.589 215.243,-779.607 215.802,-702.814 216.361,-673.287 216.921,-617.245 217.48,-590.848 218.039,-515.764 218.598,-440.098 219.158,-392.469 219.717,-369.814 220.276,-317.733 220.835,-267.04 221.395,-264.749 221.954,-214.066 222.513,-170.757 223.072,-104.708 223.632,-44.9696 224.191,-24.6446 224.75,-28.0378 225.309,17.6733 225.869,82.2085 226.428,125.452 226.987,159.521 227.546,177.956 228.106,237.517 228.665,292.453 229.224,321.748 229.783,332.405 230.343,346.683 230.902,338.445 231.461,388.428 232.02,425.065 232.58,415.701 233.139,427.263 233.698,437.159 234.257,447.272 234.817,437.549 235.376,447.474 235.935,498.804 236.494,549.97 237.054,611.922 237.613,670.675 238.172,728.461 238.731,746.564 239.291,728.457 239.85,765.391 240.409,761.057 240.968,765.71 241.528,782.511 242.087,837.347 242.646,855.062 243.205,851.591 243.765,882.828 244.324,879.264 244.883,894.887 245.442,892.292 246.002,906.071 246.561,905.867 247.12,936.196 247.679,931.067 248.239,930.921 248.798,930.295 249.357,924.215 249.916,921.578 250.476,937.513 251.035,948.799 251.594,978.532 252.153,990.486 252.713,1037.38 253.272,1059.96 253.831,1089.79 254.39,1064.09 254.95,1087.99 255.509,1130.85 256.068,1116.76 256.627,1085.24 257.187,1093.06 257.746,1062.59 258.305,1053.63 258.864,1094.94 259.424,1101.73 259.983,1074.73 260.542,1065.04 261.101,1026.78 261.661,1021.69 262.22,1032 262.779,1044.73 263.338,1036.09 263.898,1049.09 264.457,1045.33 265.016,1021.81 265.575,1035.14 266.135,1032 266.694,1039.33 267.253,1033.59 267.812,1029.46 268.372,1078.03 268.931,1105.62 269.49,1078.86 270.049,1105.27 270.609,1096.46 271.168,1087.18 271.727,1076.34 272.286,1068.8 272.846,1060.12 273.405,1086.34 273.964,1075.3 274.523,1083.29 275.083,1089.25 275.642,1081.23 276.201,1087.86 276.76,1080.4 277.32,1074.39 277.879,1068.17 278.438,1093.16 278.997,1101.3 279.557,1093.56 280.116,1132.39 280.675,1107.18 281.234,1095.92 281.794,1069.35 282.353,1077.35 282.912,1121.2 283.471,1128.53 284.031,1086.2 284.59,1091.6 285.149,1082.3 285.708,1091.84 286.268,1098.09 286.827,1086.82 287.386,1141.75 287.945,1130.19 288.505,1088.81 289.064,1078.86 289.623,1074.5 290.182,1083.95 290.742,1076.17 291.301,1067.59 291.86,1075.17 292.419,1083.19 292.979,1074.51 293.538,1019.98 294.097,1015.82 294.656,991.489 295.216,1018.53 295.775,1014.73 296.334,1056.49 296.893,1079.31 297.453,1070.88 298.012,1060.12 298.571,1034.95 299.13,1046.04 299.69,1071.46 300.249,1127.11 300.808,1115.52 301.368,1068.86 301.927,1077.38 302.486,1084.12 303.045,1076.54 303.605,1034.63 304.164,1038.07 304.723,1048.4 305.282,1038.28 305.842,1028.14 306.401,1005.32 306.96,999.656 307.519,1029.27 308.079,1007.58 308.638,1021.4 309.197,1043.66 309.756,1035.83 310.316,1010.85 310.875,1000.54 311.434,962.744 311.993,957.056 312.553,984.629 313.112,980.45 313.671,944.069 314.23,923.549 314.79,919.626 315.349,981.243 315.908,973.931 316.467,969.457 317.027,945.286 317.586,921.898 318.145,888.323 318.704,874.457 319.264,857.047 319.823,855.569 320.382,874.005 320.941,908.402 321.501,902.33 322.06,902.112 322.619,933.612 323.178,949.649 323.738,961.029 324.297,956.935 324.856,921.997 325.415,933.195 325.975,927.868 326.534,939.595 327.093,918.518 327.652,930.475 328.212,944.451 328.771,959.126 329.33,919.906 329.889,953.53 330.449,978.337 331.008,969.164 331.567,978.842 332.126,1002.59 332.686,992.578 333.245,988.343 333.804,983.05 334.363,977.262 334.923,971.098 335.482,965.531 336.041,958.389 336.6,965.668 337.16,945.337 337.719,919.747 338.278,902.802 338.837,948.41 339.397,973.879 339.956,969.279 340.515,976.925 341.074,957.795 341.634,919.272 342.193,909.613 342.752,904.688 343.311,899.26 343.871,896.511 344.43,858.593 344.989,877.105 345.548,888.964 346.108,885.697 346.667,903.147 347.226,932.817 347.785,926.598 348.345,918.368 348.904,896.666 349.463,912.143 350.022,939.038 350.582,965.123 351.141,958.436 351.7,937.154 352.259,963.508 352.819,958.512 353.378,978.562 353.937,971.899 354.496,980.441 355.056,973.737 355.615,963.449 356.174,975.465 356.733,965.645 357.293,938.699 357.852,963.214 358.411,939.558 358.97,947.717 359.53,928.49 360.089,890.248 360.648,889.573 361.207,916.608 361.767,912.383 362.326,970.342 362.885,966.52 363.444,944.021 364.004,904.508 364.563,916.956 365.122,878.456 365.681,876.01 366.241,889.487 366.8,901.913 367.359,896.841 367.918,907.853 368.478,934.014 369.037,925.533 369.596,916.358 370.155,958.467 370.715,948.677 371.274,910.806 371.833,889.276 372.392,869.681 372.952,883.054 373.511,909.752 374.07,887.246 374.629,931.837 375.189,927.524 375.748,885.992 376.307,830.853 376.866,851.887 377.426,845.479 377.985,813.387 378.544,844.667 379.103,859.75 379.663,839.291 380.222,836.32 380.781,834.52 381.34,834.568 381.9,815.921 382.459,832.308 383.018,815.303 383.577,813.33 384.137,799.138 384.696,799.529 385.255,800.996 385.814,765.709 386.374,752.568 386.933,739.799 387.492,727.27 388.051,730.214 388.611,733.103 389.17,737.718 389.729,720.943 390.288,723.602 390.848,759.137 391.407,760.895 391.966,762.365 392.525,745.603 393.085,745.039 393.644,745.794 394.203,731.994 394.762,733.554 395.322,723.446 395.881,745.743 396.44,727.509 396.999,730.826 397.559,715.376 398.118,736.381 398.677,742.221 399.236,727.233 399.796,730.574 400.355,780.28 400.914,795.64 401.473,795.028 402.033,812.435 402.592,824.902 403.151,807.509 403.71,806.933 404.27,806.944 404.829,806.768 405.388,833.456 405.947,895.784 406.507,922.109 407.066,898.52 407.625,874.339 408.184,868.157 408.744,865.124 409.303,863.55 409.862,842.146 410.421,839.282 410.981,851.697 411.54,880.534 412.099,875.746 412.658,837.191 413.218,852.31 413.777,866.826 414.336,877.287 414.895,887.799 415.455,882.374 416.014,891.963 416.573,916.46 417.132,913.942 417.692,872.606 418.251,899.146 418.81,891.69 419.369,871.671 419.929,849.308 420.488,828.063 421.047,809.224 421.606,838.498 422.166,832.719 422.725,829.128 423.284,839.429 423.843,833.708 424.403,844.699 424.962,822.123 425.521,804.031 426.08,800.859 426.64,812.832 427.199,775.885 427.758,757.215 428.318,754.197 428.877,754.31 429.436,752.41 429.995,768.874 430.555,752.918 431.114,769.939 431.673,752.382 432.232,771.303 432.792,784.027 433.351,780.443 433.91,794.504 434.469,810.468 435.029,774.979 435.588,790.477 436.147,803.113 436.706,786.158 437.266,783.485 437.825,767.684 438.384,798.389 438.943,799.541 439.503,797.274 440.062,791.543 440.621,809.439 441.18,839.259 441.74,772.157 442.299,785.134 442.858,781.605 443.417,763.225 443.977,767.314 444.536,779.576 445.095,793.626 445.654,840.815 446.214,821.89 446.773,805.245 447.332,805.082 447.891,833.788 448.451,814.305 449.01,844.329 449.569,824.062 450.128,791.866 450.688,823.128 451.247,837.81 451.806,752.753 452.365,754.946 452.925,767.159 453.484,768.905 454.043,700.411 454.602,685.734 455.162,686.891 455.721,741.422 456.28,738.88 456.839,723.956 457.399,743.001 457.958,756.18 458.517,756.261 459.076,755.65 459.636,724.495 460.195,713.246 460.754,715.44 461.313,732.536 461.873,734.537 462.432,732.836 462.991,799.752 463.55,745.706 464.11,742.903 464.669,746.932 465.228,745.882 465.787,780.032 466.347,779.562 466.906,778.14 467.465,790.7 468.024,786.474 468.584,784.01 469.143,767.848 469.702,802.371 470.261,782.309 470.821,779.178 471.38,778.89 471.939,773.906 472.498,789.571 473.058,703.4 473.617,686.965 474.176,687.811 474.735,704.353 475.295,705.985 475.854,673.374 476.413,643.382 476.972,620.468 477.532,628.448 478.091,665.831 478.65,634.344 479.209,639.362 479.769,629.552 480.328,632.65 480.887,656.753 481.446,678.645 482.006,701.32 482.565,671.228 483.124,678.369 483.683,669.145 484.243,674.583 484.802,699.48 485.361,686.508 485.92,706.569 486.48,706.49 487.039,710.942 487.598,694.812 488.157,697.418 488.717,700.804 489.276,701.102 489.835,705.096 490.394,736.696 490.954,754.682 491.513,768.62 492.072,798.552 492.631,780.142 493.191,761.822 493.75,744.863 494.309,761.616 494.868,760.923 495.428,742.044 495.987,760.654 496.546,764.79 497.105,778.565 497.665,762.129 498.224,744.268 498.783,775.688 499.342,738.786 499.902,755.555 500.461,720.523 501.02,736.932 501.579,739.252 502.139,755.294 502.698,757.57 503.257,790.941 503.816,768.637 504.376,754.906 504.935,752.448 505.494,702.566 506.053,720.088 506.613,703.917 507.172,722.653 507.731,739.953 508.29,739.491 508.85,758.346 509.409,822.413 509.968,804.531 510.527,830.916 511.087,874.105 511.646,900.799 512.205,874.337 512.764,869.375 513.324,861.105 513.883,886.952 514.442,877.348 515.001,870.217 515.561,863.597 516.12,872.279 516.679,882.408 517.238,877.49 517.798,865.332 518.357,858.662 518.916,849.38 519.475,848.54 520.035,860.453 520.594,855.317 521.153,833.62 521.712,861.239 522.272,838.302 522.831,831.585 523.39,811.012 523.949,792.957 524.509,790.358 525.068,786.978 525.627,750.72 526.186,748.979 526.746,764.093 527.305,730.773 527.864,750.216 528.423,747.518 528.983,780.241 529.542,827.239 530.101,837.846 530.66,832.453 531.22,846.636 531.779,822.836 532.338,784.78 532.897,800.246 533.457,762.617 534.016,756.863 534.575,769.659 535.134,780.154 535.694,794.557 536.253,774.194 536.812,768.903 537.371,767.821 537.931,779.111 538.49,791.606 539.049,755.155 539.608,752.599 540.168,730.839 540.727,729.792 541.286,728.892 541.845,706.904 542.405,674.082 542.964,724.913 543.523,723.915 544.082,725.214 544.642,727.349 545.201,723.745 545.76,725.207 546.319,692.395 546.879,689.827 547.438,641.326 547.997,643.407 548.556,647.455 549.116,669.729 549.675,657.373 550.234,661.543 550.793,661.44 551.353,678.497 551.912,700.193 552.471,731.979 553.031,696.109 553.59,694.074 554.149,679.938 554.708,665.949 555.268,686.21 555.827,669.947 556.386,704.656 556.945,721.294 557.505,735.227 558.064,718.949 558.623,684.881 559.182,687.71 559.742,723.356 560.301,705.561 560.86,755.13 561.419,736.184 561.979,719.73 562.538,718.525 563.097,721.435 563.656,705.551 564.216,691.38 564.775,691.285 565.334,657.82 565.893,661.937 566.453,664.351 567.012,617.457 567.571,621.24 568.13,643.666 568.69,664.973 569.249,667.752 569.808,665.823 570.367,714.618 570.927,666.083 571.486,687.513 572.045,687.704 572.604,688.023 573.164,722.16 573.723,721.955 574.282,723.659 574.841,723.8 575.401,754.834 575.96,769.436 576.519,766.796 577.078,717.54 577.638,699.822 578.197,701.724 578.756,672.943 579.315,656.903 579.875,680.37 580.434,682.434 580.993,670.158 581.552,676.705 582.112,709.53 582.671,726.874 583.23,762.479 583.789,760.164 584.349,772.351 584.908,770.138 585.467,802.596 586.026,797.583 586.586,827.431 587.145,837.719 587.704,850.721 588.263,825.51 588.823,835.017 589.382,826.807 589.941,820.822 590.5,816.079 591.06,808.954 591.619,852.007 592.178,843.625 592.737,806.692 593.297,803.576 593.856,784.657 594.415,797.475 594.974,775.542 595.534,787.842 596.093,781.259 596.652,807.259 597.211,742.168 597.771,737.898 598.33,720.248 598.889,720.375 599.448,703.667 600.008,721.078 600.567,736.213 601.126,753.664 601.685,751.139 602.245,761.211 602.804,757.446 603.363,755.709 603.922,736.621 604.482,720.632 605.041,742.86 605.6,726.969 606.159,676.569 606.719,678.787 607.278,680.501 607.837,685.586 608.396,686.921 608.956,706.119 609.515,686.262 610.074,671.759 610.633,674.801 611.193,660.491 611.752,663.357 612.311,665.736 612.87,650.537 613.43,653.663 613.989,639.347 614.548,672.54 615.107,657.429 615.667,694.865 616.226,681.187 616.785,679.01 617.344,663.274 617.904,647.353 618.463,713.836 619.022,728.781 619.581,695.367 620.141,665.813 620.7,664.028 621.259,649.52 621.818,621.069 622.378,624.079 622.937,612.839 623.496,634.534 624.055,638.908 624.615,644.995 625.174,660.013 625.733,725.644 626.292,771.856 626.852,767.531 627.411,747.642 627.97,743.543 628.529,742.354 629.089,723.884 629.648,754.634 630.207,749.916 630.766,732.265 631.326,747.208 631.885,745.402 632.444,747.045 633.003,759.313 633.563,743.149 634.122,756.946 634.681,755.79 635.24,805.369 635.8,816.219 636.359,809.911 636.918,802.848 637.477,775.162 638.037,755.457 638.596,735.746 639.155,701.019 639.714,682.595 640.274,701.271 640.833,704.697 641.392,688.116 641.951,691.208 642.511,689.464 643.07,675.063 643.629,678.061 644.188,680.422 644.748,698.941 645.307,747.188 645.866,741.651 646.425,739.944 646.985,754.193 647.544,749.288 648.103,764.831 648.662,763.708 649.222,780.324 649.781,741.75 650.34,722.412 650.899,722.514 651.459,736.583 652.018,749.289 652.577,664.543 653.136,665.095 653.696,680.963 654.255,700.179 654.814,654.936 655.373,689.2 655.933,691.721 656.492,697.627 657.051,715.217 657.61,634.371 658.17,638.41 658.729,643.175 659.288,612.179 659.847,632.282 660.407,633.887 660.966,638.655 661.525,627.146 662.084,630.995 662.644,631.781 663.203,612.837 663.762,583.863 664.321,589.878 664.881,578.826 665.44,585.261 665.999,590.252 666.558,599.036 667.118,588.291 667.677,592.375 668.236,582.942 668.795,601.985 669.355,643.531 669.914,648.542 670.473,666.827 671.032,666.406 671.592,685.207 672.151,684.723 672.71,703.704 673.269,719.284 673.829,718.012 674.388,716.819 674.947,700.518 675.506,688.274 676.066,707.075 676.625,739.718 677.184,720.313 677.743,718.91 678.303,732.155 678.862,746.98 679.421,745.693 679.981,740.272 680.54,770.345 681.099,766.541 681.658,777.606 682.218,741.559 682.777,739.824 683.336,753.661 683.895,765.545 684.455,744.451 685.014,742.731 685.573,737.557 686.132,717.639 686.692,732.449 687.251,732.609 687.81,730.162 688.369,728.223 688.929,709.636 689.488,726.188 690.047,745.827 690.606,730.494 691.166,744.117 691.725,743.159 692.284,726.029 692.843,753.405 693.403,797.319 693.962,824.977 694.521,882.848 695.08,840.421 695.64,800.312 696.199,775.965 696.758,756.564 697.317,720.864 697.877,721.233 698.436,704.848 698.995,669.226 699.554,734.559 700.114,718.272 700.673,713.91 701.232,716.187 701.791,730.724 702.351,729.447 702.91,712.307 703.469,659.235 704.028,643.994 704.588,648.568 705.147,680.033 705.706,699.5 706.265,711.858 706.825,760.196 707.384,736.7 707.943,702.765 708.502,699.439 709.062,731.501 709.621,713.817 710.18,696.225 710.739,648.385 711.299,664.758 711.858,698.61 712.417,696.629 712.976,694.349 713.536,677.994 714.095,630.893 714.654,635.604 715.213,608.266 715.773,614.238 716.332,603.173 716.891,589.842 717.45,578.438 718.01,584.809 718.569,588.087 719.128,561.439 719.687,582.775 720.247,572.586 720.806,560.162 721.365,583.754 721.924,605.92 722.484,610.033 723.043,580.927 723.602,587.441 724.161,658.555 724.721,629.912 725.28,617.241 725.839,620.904 726.398,607.471 726.958,617.89 727.517,606.751 728.076,566.6 728.635,574.585 729.195,613.257 729.754,616.492 730.313,603.555 730.872,607.57 731.432,645.537 731.991,680.216 732.55,681.974 733.109,729.002 733.669,727.577 734.228,729.802 734.787,728.555 735.346,729.344 735.906,710.531 736.465,787.394 737.024,795.125 737.583,758.189 738.143,803.253 738.702,813 739.261,771.725 739.82,753.477 740.38,734.684 740.939,700.387 741.498,713.593 742.057,712.505 742.617,726.859 743.176,740.737 743.735,739.215 744.294,722.592 744.854,788.558 745.413,769.913 745.972,799.704 746.531,779.606 747.091,793.33 747.65,772.333 748.209,768.112 748.768,731.673 749.328,732.149 749.887,763.137 750.446,757.372 751.005,784.044 751.565,741.987 752.124,754.508 752.683,736.841 753.242,716.689 753.802,746.744 754.361,727.077 754.92,741.414 755.479,741.148 756.039,739.359 756.598,734.542 757.157,746.912 757.716,742.414 758.276,742.333 758.835,703.426 759.394,703.197 759.953,703.8 760.513,720.864 761.072,721.435 761.631,738.478 762.19,705.772 762.75,724.431 763.309,722.023 763.868,704.321 764.427,686.377 764.987,673.103 765.546,692.118 766.105,694.79 766.664,676.691 767.224,662.238 767.783,631.448 768.342,631.278 768.901,621.255 769.461,608.964 770.02,644.796 770.579,665.212 771.138,717.932 771.698,714.69 772.257,710.346 772.816,709.167 773.375,695.945 773.935,694.082 774.494,676.048 775.053,695.774 775.612,693.369 776.172,662.246 776.731,681.434 777.29,684.483 777.849,669.597 778.409,640.461 778.968,642.82 779.527,662.827 780.086,667.456 780.646,666.842 781.205,667.657 781.764,667.568 782.323,637.652 782.883,657.191 783.442,671.528 784.001,657.064 784.56,660.232 785.12,679.113 785.679,647.098 786.238,633.494 786.797,717.719 787.357,716.386 787.916,698.242 788.475,697.815 789.034,680.382 789.594,680.76 790.153,665.022 790.712,648.148 791.271,632.349 791.831,635.753 792.39,637.233 792.949,659.71 793.508,647.505 794.068,618.429 794.627,622.16 795.186,608.147 795.745,640.478 796.305,641.933 796.864,692.271 797.423,708.629 797.982,708.376 798.542,736.25 799.101,717.103 799.66,732.895 800.219,713.09 800.779,727.039 801.338,723.271 801.897,738.544 802.456,718.92 803.016,734.423 803.575,733.176 804.134,712.738 804.693,714.428 805.253,729.349 805.812,718.356 806.371,719.687 806.931,753.53 807.49,768.33 808.049,796.004 808.608,804.018 809.168,797.295 809.727,790.914 810.286,786.508 810.845,734.41 811.405,733.868 811.964,699.202 812.523,680.046 813.082,692.925 813.642,691.61 814.201,722.263 814.76,704.363 815.319,701.703 815.879,717.941 816.438,732.678 816.997,716 817.556,717.749 818.116,702.247 818.675,702.584 819.234,719.856 819.793,703.327 820.353,720.604 820.912,735.244 821.471,734.468 822.03,731.805 822.59,745.007 823.149,741.966 823.708,773.158 824.267,753.93 824.827,749.734 825.386,729.191 825.945,729.589 826.504,712.245 827.064,727.801 827.623,724.243 828.182,755.347 828.741,749.33 829.301,696.452 829.86,713.795 830.419,696.785 830.978,727.631 831.538,739.562 832.097,719.125 832.656,718.279 833.215,731.804 833.775,726.466 834.334,676.433 834.893,707.266 835.452,705.516 836.012,721.836 836.571,734.074 837.13,731.146 837.689,742.057 838.249,738.397 838.808,718.539 839.367,700.198 839.926,715.427 840.486,715.254 841.045,715.577 841.604,728.867 842.163,742.372 842.723,703.819 843.282,700.606 843.841,702.762 844.4,685.605 844.96,700.225 845.519,699.951 846.078,701.523 846.637,683.458 847.197,682.161 847.756,677.515 848.315,715.538 848.874,764.37 849.434,759.158 849.993,769.552 850.552,748.843 851.111,743.449 851.671,722.067 852.23,684.763 852.789,716.608 853.348,685.409 853.908,717.281 854.467,701.493 855.026,701.9 855.585,680.881 856.145,646.814 856.704,634.564 857.263,592.497 857.822,595.769 858.382,599.655 858.941,604.441 859.5,625.602 860.059,632.439 860.619,634.786 861.178,633.855 861.737,589.594 862.296,598.229 862.856,584.72 863.415,574.526 863.974,583.11 864.533,574.541 865.093,597.427 865.652,599.572 866.211,588.957 866.77,564.603 867.33,570.735 867.889,559.724 868.448,568.957 869.007,556.51 869.567,577.337 870.126,552.605 870.685,561.297 871.244,602.355 871.804,606.351 872.363,598.889 872.922,605.762 873.481,625.271 874.041,645.606 874.6,659.881 875.159,662 875.718,675.89 876.278,673.982 876.837,662.448 877.396,649.088 877.955,682.813 878.515,666.981 879.074,700.942 879.633,697.989 880.192,697.316 880.752,648.995 881.311,654.326 881.87,669.746 882.429,656.956 882.989,629.468 883.548,633.148 884.107,652.771 884.666,655.099 885.226,689.216 885.785,685.581 886.344,672.578 886.903,691.547 887.463,690.987 888.022,692.624 888.581,724.802 889.14,725.04 889.7,740.602 890.259,721.112 890.818,706.488 891.377,706.178 891.937,723.104 892.496,737.377 893.055,715.907 893.614,714.297 894.174,732.255 894.733,745.707 895.292,728.146 895.851,711.682 896.411,678.387 896.97,696.596 897.529,677.964 898.088,681.732 898.648,680.214 899.207,665.793 899.766,669.171 900.325,672.155 900.885,606.447 901.444,577.875 902.003,580.038 902.562,582.251 903.122,543.339 903.681,535.872 904.24,543.387 904.799,539.067 905.359,545.017 905.918,535.566 906.477,562.143 907.036,570.159 907.596,594.879 908.155,601.086 908.714,640.468 909.273,639.931 909.833,639.006 910.392,641.663 910.951,626.4 911.51,609.445 912.07,613.495 912.629,617.252 913.188,623.519 913.747,662.723 914.307,662.41 914.866,646.058 915.425,632.079 915.984,616.69 916.544,669.16 917.103,652.748 917.662,655.809 918.221,643.814 918.781,694.765 919.34,696.851 919.899,681.768 920.458,695.497 921.018,714.267 921.577,728.255 922.136,759.884 922.695,771.179 923.255,802.379 923.814,779.406 924.373,759.149 924.932,781.814 925.492,825.823 926.051,783.146 926.61,774.257 927.169,753.283 927.729,764.751 928.288,758.489 928.847,753.518 929.406,765.908 929.966,749.707 930.525,760.977 931.084,771.218 931.644,767.338 932.203,780.127 932.762,758.762 933.321,755.337 933.881,738.575 934.44,768.468 934.999,732.844 935.558,748.359 936.118,793.402 936.677,771.395 937.236,765.261 937.795,757.933 938.355,737.48 938.914,737.013 939.473,717.726 940.032,701.774 940.592,683.234 941.151,666.233 941.71,666.224 942.269,686.02 942.829,719.939 943.388,735.285 943.947,731.98 944.506,762.439 945.066,791.657 945.625,784.516 946.184,775.688 946.743,814.041 947.303,823.613 947.862,830.991 948.421,804.839 948.98,796.303 949.54,790.205 950.099,735.9 950.658,715.76 951.217,745.227 951.777,759.417 952.336,753.311 952.895,764.757 953.454,771.697 954.014,783.788 954.573,764.009 955.132,758.073 955.691,773.069 956.251,782.483 956.81,794.499 957.369,819.103 957.928,813.805 958.488,810.26 959.047,802.638 959.606,795.842 960.165,820.612 960.725,823.495 961.284,813.889 961.843,775.66 962.402,739.403 962.962,750.778 963.521,743.701 964.08,787.107 964.639,785.112 965.199,748.403 965.758,712.923 966.317,709.949 966.876,722.046 967.436,650.537 967.995,654.545 968.554,638.914 969.113,674.426 969.673,659.925 970.232,661.99 970.791,676.716 971.35,677.671 971.91,695.365 972.469,675.592 973.028,688.922 973.587,707.678 974.147,672.288 974.706,671.418 975.265,674.579 975.824,688.932 976.384,688.981 976.943,670.666 977.502,667.98 978.061,650.52 978.621,638.32 979.18,643.579 979.739,644.322 980.298,647.243 980.858,629.093 981.417,618.361 981.976,592.417 982.535,613.143 983.095,614.191 983.654,617.933 984.213,587.388 984.772,588.689 985.332,576.578 985.891,586.689 986.45,625.875 987.009,628.727 987.569,695.692 988.128,658.974 988.687,630.262 989.246,649.251 989.806,680.616 990.365,712.48 990.924,743.069 991.483,741.563 992.043,720.113 992.602,685.971 993.161,650.815 993.72,648.959 994.28,648.396 994.839,632.338 995.398,633.305 995.957,636.953 996.517,638.61 997.076,655.491 997.635,652.928 998.194,658.735 998.754,643.541 999.313,643.698 999.872,631.303 1000.43,634.385 1000.99,636.221 1001.55,652.879 1002.11,640.164 1002.67,640.913 1003.23,594.267 1003.79,567.373 1004.35,570.79 1004.91,560.429 1005.46,585.105 1006.02,572.05 1006.58,579.979 1007.14,584.779 1007.7,592.476 1008.26,598.397 1008.82,588.689 1009.38,573.765 1009.94,564.32 1010.5,569.854 1011.06,574.284 1011.62,576.199 1012.18,578.905 1012.73,572.251 1013.29,563.789 1013.85,523.613 1014.41,532.361 1014.97,541.467 1015.53,533.289 1016.09,539.95 1016.65,516.76 1017.21,560.814 1017.77,551.738 1018.33,591.959 1018.89,550.033 1019.45,575.137 1020.01,613.747 1020.56,617.202 1021.12,656.444 1021.68,624.995 1022.24,629.823 1022.8,636.308 1023.36,655.132 1023.92,657.299 1024.48,674.344 1025.04,642.818 1025.6,694.748 1026.16,715.046 1026.72,714.697 1027.28,681.429 1027.83,662.947 1028.39,646.94 1028.95,635.111 1029.51,641.094 1030.07,629.571 1030.63,649.791 1031.19,651.939 1031.75,652.582 1032.31,655.811 1032.87,656.024 1033.43,687.671 1033.99,686.523 1034.55,685.471 1035.1,701.528 1035.66,702.649 1036.22,654.792 1036.78,691.479 1037.34,709.059 1037.9,739.035 1038.46,752.006 1039.02,746.047 1039.58,759.642 1040.14,754.895 1040.7,718.808 1041.26,715.903 1041.82,716.236 1042.38,681.436 1042.93,663.555 1043.49,680.67 1044.05,683.342 1044.61,686.766 1045.17,674.36 1045.73,710.799 1046.29,709.011 1046.85,709.746 1047.41,719.243 1047.97,735.32 1048.53,747.057 1049.09,758.269 1049.65,725.634 1050.2,725.02 1050.76,703.513 1051.32,715.181 1051.88,732.583 1052.44,747.351 1053,744.167 1053.56,757.79 1054.12,768.945 1054.68,765.785 1055.24,746.122 1055.8,725.019 1056.36,738.948 1056.92,779.399 1057.48,773.241 1058.03,768.081 1058.59,765.168 1059.15,758.855 1059.71,759.742 1060.27,774.538 1060.83,770.559 1061.39,749.064 1061.95,746.125 1062.51,772.018 1063.07,751.003 1063.63,695.531 1064.19,742.522 1064.75,720.453 1065.3,686.315 1065.86,686.991 1066.42,651.184 1066.98,635.494 1067.54,584.849 1068.1,606.416 1068.66,608.705 1069.22,627.932 1069.78,612.586 1070.34,601.034 1070.9,606.709 1071.46,626.39 1072.02,663.631 1072.57,634.199 1073.13,588.284 1073.69,595.728 1074.25,616.223 1074.81,635.12 1075.37,649.539 1075.93,683.857 1076.49,729.925 1077.05,727.594 1077.61,738.854 1078.17,719.514 1078.73,733.883 1079.29,710.129 1079.85,727.346 1080.4,690.834 1080.96,656.671 1081.52,674.609 1082.08,706.136 1082.64,672.66 1083.2,656.644 1083.76,656.351 1084.32,657.901 1084.88,659.934 1085.44,611.695 1086,614.362 1086.56,618.325 1087.12,619.271 1087.67,593.283 1088.23,581.668 1088.79,603.958 1089.35,593.089 1089.91,566.431 1090.47,591.727 1091.03,600.082 1091.59,587.561 1092.15,595.775 1092.71,616.813 1093.27,590.174 1093.83,643.67 1094.39,632.787 1094.94,637.071 1095.5,641.852 1096.06,648.108 1096.62,670.429 1097.18,673.44 1097.74,657.297 1098.3,622.478 1098.86,626.964 1099.42,611.955 1099.98,584.904 1100.54,592.034 1101.1,595.223 1101.66,595.757 1102.22,648.751 1102.77,650.741 1103.33,616.755 1103.89,616.649 1104.45,618.745 1105.01,607.65 1105.57,597.942 1106.13,586.049 1106.69,591.569 1107.25,613.681 1107.81,617.553 1108.37,620.398 1108.93,653.892 1109.49,659.522 1110.04,676.157 1110.6,711.623 1111.16,712.374 1111.72,710.491 1112.28,724.568 1112.84,726.897 1113.4,706.844 1113.96,674.05 1114.52,707.747 1115.08,712.123 1115.64,725.117 1116.2,741.004 1116.76,737.94 1117.31,735.124 1117.87,732.066 1118.43,729.616 1118.99,712.684 1119.55,708.664 1120.11,721.047 1120.67,703.326 1121.23,685.104 1121.79,704.204 1122.35,703.431 1122.91,687.488 1123.47,703.758 1124.03,685.9 1124.59,685.333 1125.14,705.864 1125.7,721.767 1126.26,753.517 1126.82,750.447 1127.38,728.758 1127.94,744.647 1128.5,726.091 1129.06,721.735 1129.62,719.225 1130.18,701.176 1130.74,667.813 1131.3,684.533 1131.86,715.863 1132.41,715.994 1132.97,763.191 1133.53,776.849 1134.09,787.236 1134.65,779.333 1135.21,790.328 1135.77,815.086 1136.33,792.919 1136.89,803.226 1137.45,813.657 1138.01,836.851 1138.57,812.807 1139.13,808.678 1139.68,817.197 1140.24,807.126 1140.8,801.918 1141.36,779.664 1141.92,790.596 1142.48,751.903 1143.04,765.468 1143.6,760.89 1144.16,754.077 1144.72,718.275 1145.28,649.767 1145.84,631.486 1146.4,617.029 1146.96,591.009 1147.51,629.129 1148.07,601.679 1148.63,589.733 1149.19,613.364 1149.75,650.905 1150.31,634.206 1150.87,651.309 1151.43,670.315 1151.99,669.338 1152.55,640.744 1153.11,643.048 1153.67,663.061 1154.23,664.595 1154.78,679.526 1155.34,682.233 1155.9,712.309 1156.46,711.054 1157.02,694.998 1157.58,690.539 1158.14,691.736 1158.7,706.828 1159.26,688.022 1159.82,653.624 1160.38,670.478 1160.94,638.456 1161.5,589.056 1162.05,593.716 1162.61,616.564 1163.17,589.076 1163.73,578.373 1164.29,583.654 1164.85,573.18 1165.41,545.321 1165.97,583.274 1166.53,620.183 1167.09,643.258 1167.65,676.246 1168.21,691.429 1168.77,675.284 1169.33,689.654 1169.88,673.521 1170.44,711.58 1171,710.549 1171.56,708.964 1172.12,710.671 1172.68,694.354 1173.24,713.224 1173.8,725.793 1174.36,706.208 1174.92,752.044 1175.48,733.145 1176.04,698.86 1176.6,697.809 1177.15,730.664 1177.71,717.071 1178.27,765.306 1178.83,743.31 1179.39,708.782 1179.95,722.339 1180.51,706.493 1181.07,688.993 1181.63,719.714 1182.19,702.873 1182.75,687.529 1183.31,703.853 1183.87,704.972 1184.43,701.926 1184.98,735.482 1185.54,749.103 1186.1,747.669 1186.66,761.801 1187.22,709.157 1187.78,704.025 1188.34,718.105 1188.9,778.646 1189.46,772.807 1190.02,784.142 1190.58,778.805 1191.14,773.025 1191.7,751.33 1192.25,763.73 1192.81,743.834 1193.37,741.029 1193.93,783.683 1194.49,779.586 1195.05,725.173 1195.61,737.56 1196.17,734.111 1196.73,730.148 1197.29,744.051 1197.85,757.274 1198.41,755.236 1198.97,755.052 1199.52,750.455 1200.08,730.215 1200.64,711.155 1201.2,724.964 1201.76,726.176 1202.32,689.179 1202.88,656.591 1203.44,638.184 1204,640.998 1204.56,610.514 1205.12,614.386 1205.68,567.086 1206.24,589.137 1206.8,594.772 1207.35,598.051 1207.91,584.677 1208.47,642.829 1209.03,648.521 1209.59,667.074 1210.15,701.035 1210.71,685.368 1211.27,688.111 1211.83,684.801 1212.39,650.298 1212.95,652.398 1213.51,652.04 1214.07,619.23 1214.62,621.408 1215.18,625.988 1215.74,661.571 1216.3,643.907 1216.86,657.839 1217.42,658.596 1217.98,658.833 1218.54,676.767 1219.1,708.667 1219.66,687.85 1220.22,705.884 1220.78,689.242 1221.34,658.523 1221.89,642.961 1222.45,694.337 1223.01,675.427 1223.57,676.434 1224.13,660.308 1224.69,628.516 1225.25,615.833 1225.81,603.908 1226.37,625.339 1226.93,647.897 1227.49,634.457 1228.05,618.933 1228.61,624.205 1229.17,642.036 1229.72,662.179 1230.28,663.015 1230.84,648.913 1231.4,665.84 1231.96,680.623 1232.52,696.733 1233.08,713.482 1233.64,680.799 1234.2,678.554 1234.76,680.625 1235.32,665.742 1235.88,681.833 1236.44,667.958 1236.99,672.154 1237.55,673.708 1238.11,673.584 1238.67,627.257 1239.23,648.546 1239.79,653.55 1240.35,673.937 1240.91,673.056 1241.47,724.976 1242.03,720.655 1242.59,671.122 1243.15,686.284 1243.71,687.277 1244.26,672.027 1244.82,670.381 1245.38,685.875 1245.94,719.47 1246.5,702.917 1247.06,715.225 1247.62,715.355 1248.18,729.564 1248.74,744.578 1249.3,724.189 1249.86,709.067 1250.42,708.062 1250.98,706.005 1251.54,707.567 1252.09,722.665 1252.65,735.46 1253.21,714.341 1253.77,730.068 1254.33,712.685 1254.89,723.353 1255.45,742 1256.01,706.367 1256.57,656.937 1257.13,644.993 1257.69,645.356 1258.25,680.264 1258.81,649.346 1259.36,629.763 1259.92,580.03 1260.48,619.32 1261.04,623.16 1261.6,612.207 1262.16,618.12 1262.72,641.683 1263.28,624.329 1263.84,577.9 1264.4,600.782 1264.96,624.474 1265.52,643.744 1266.08,660.737 1266.63,662.634 1267.19,711.772 1267.75,693.707 1268.31,694.976 1268.87,675.021 1269.43,675.432 1269.99,722.366 1270.55,737.954 1271.11,815.436 1271.67,809.887 1272.23,784.311 1272.79,792.309 1273.35,767.666 1273.91,730.464 1274.46,742.443 1275.02,673.578 1275.58,655.688 1276.14,670.285 1276.7,698.221 1277.26,696.534 1277.82,662.102 1278.38,646.446 1278.94,661.906 1279.5,645.437 1280.06,680.01 1280.62,679.245 1281.18,697.865 1281.73,683.009 1282.29,684.104 1282.85,679.74 1283.41,684.5 1283.97,699.305 1284.53,730.096 1285.09,727.789 1285.65,740.399 1286.21,705.344 1286.77,719.92 1287.33,671.481 1287.89,687.335 1288.45,689.907 1289,753.008 1289.56,775.923 1290.12,753.293 1290.68,700.376 1291.24,682.434 1291.8,667.783 1292.36,653.005 1292.92,655.05 1293.48,690.802 1294.04,660.005 1294.6,711.306 1295.16,725.244 1295.72,691.733 1296.28,693.899 1296.83,738.184 1297.39,756.077 1297.95,767.965 1298.51,748.737 1299.07,761.163 1299.63,723.426 1300.19,707.511 1300.75,676.801 1301.31,675.203 1301.87,661.751 1302.43,682.164 1302.99,668.631 1303.55,670.572 1304.1,718.165 1304.66,744.219 1305.22,759.875 1305.78,743.63 1306.34,757.588 1306.9,738.561 1307.46,747.965 1308.02,726.642 1308.58,721.414 1309.14,704.103 1309.7,685.144 1310.26,683.814 1310.82,699.421 1311.38,665.162 1311.93,683.168 1312.49,680.264 1313.05,630.418 1313.61,630.511 1314.17,633.851 1314.73,653.732 1315.29,690.682 1315.85,693.246 1316.41,709.178 1316.97,707.113 1317.53,723.361 1318.09,738.472 1318.65,703.983 1319.2,719.005 1319.76,718.225 1320.32,700.014 1320.88,678.868 1321.44,697.849 1322,711.517 1322.56,677.585 1323.12,662.066 1323.68,668.651 1324.24,704.318 1324.8,687.428 1325.36,668.668 1325.92,667.35 1326.47,651.102 1327.03,672.286 1327.59,672.102 1328.15,656.365 1328.71,657.258 1329.27,642.566 1329.83,595.358 1330.39,630.333 1330.95,634.696 1331.51,668.072 1332.07,617.435 1332.63,590.141 1333.19,578.538 1333.75,586.221 1334.3,606.117 1334.86,676.349 1335.42,661.885 1335.98,679.072 1336.54,682.159 1337.1,666.414 1337.66,650.2 1338.22,636.302 1338.78,642.413 1339.34,644.608 1339.9,660.757 1340.46,677.811 1341.02,664.791 1341.57,650.771 1342.13,667.814 1342.69,666.682 1343.25,667 1343.81,732.953 1344.37,730.523 1344.93,714.936 1345.49,699.413 1346.05,700.365 1346.61,686.212 1347.17,702.311 1347.73,701.599 1348.29,668.255 1348.84,669.698 1349.4,670.753 1349.96,671.419 1350.52,672.704 1351.08,643.86 1351.64,615.234 1352.2,618.138 1352.76,621.464 1353.32,624.8 1353.88,660.87 1354.44,647.341 1355,668.053 1355.56,653.099 1356.12,673.237 1356.67,675.885 1357.23,678.462 1357.79,700.338 1358.35,682.726 1358.91,668.505 1359.47,686.48 1360.03,689.121 1360.59,706.792 1361.15,692.054 1361.71,690.768 1362.27,674.17 1362.83,674.854 1363.39,676.809 1363.94,658.568 1364.5,678.227 1365.06,711.894 1365.62,708.562 1366.18,707.718 1366.74,687.412 1367.3,690.113 1367.86,685.974 1368.42,690.352 1368.98,709.34 1369.54,757.077 1370.1,739.778 1370.66,708.937 1371.21,708 1371.77,703.996 1372.33,671.239 1372.89,702.998 1373.45,699.182 1374.01,745.687 1374.57,693.686 1375.13,727.466 1375.69,744.263 1376.25,775.677 1376.81,785.225 1377.37,765.319 1377.93,774.161 1378.49,769.855 1379.04,783.287 1379.6,746.224 1380.16,740.721 1380.72,752.774 1381.28,817.511 1381.84,843.236 1382.4,833.763 1382.96,793.194 1383.52,739.862 1384.08,802.368 1384.64,813.8 1385.2,785.919 1385.76,797.548 1386.31,761.067 1386.87,727.449 1387.43,709.431 1387.99,688.322 1388.55,684.747 1389.11,669.508 1389.67,622.014 1390.23,624.862 1390.79,596.9 1391.35,603.817 1391.91,608.938 1392.47,646.345 1393.03,663.354 1393.58,676.863 1394.14,640.25 1394.7,644.117 1395.26,610.222 1395.82,597.218 1396.38,584.942 1396.94,570.77 1397.5,610.21 1398.06,581.512 1398.62,585.093 1399.18,570.161 1399.74,592.43 1400.3,599.538 1400.86,585.782 1401.41,609.2 1401.97,613.133 1402.53,634.598 1403.09,650.904 1403.65,669.202 1404.21,638.596 1404.77,623.335 1405.33,626.694 1405.89,660.351 1406.45,678.223 1407.01,708.957 1407.57,706.464 1408.13,703.43 1408.68,732.755 1409.24,728.618 1409.8,707.079 1410.36,672.792 1410.92,734.903 1411.48,733.42 1412.04,733.134 1412.6,714.712 1413.16,697.254 1413.72,680.345 1414.28,715.86 1414.84,698.953 1415.4,714.851 1415.95,715.121 1416.51,715.497 1417.07,715.536 1417.63,728.699 1418.19,695.356 1418.75,693.682 1419.31,675.33 1419.87,656.488 1420.43,674.715 1420.99,687.543 1421.55,688.371 1422.11,688.448 1422.67,670.036 1423.23,638.465 1423.78,624.913 1424.34,655.841 1424.9,640.893 1425.46,605.705 1426.02,594.297 1426.58,596.09 1427.14,601.375 1427.7,605.405 1428.26,605.322 1428.82,623.329 1429.38,628.971 1429.94,629.408 1430.5,616.103 1431.05,620.349 1431.61,609.958 1432.17,593.308 1432.73,597.195 1433.29,602.594 1433.85,608.726 1434.41,629.633 1434.97,665.661 1435.53,651.831 1436.09,619.02 1436.65,621.456 1437.21,642.584 1437.77,630.174 1438.33,631.782 1438.88,635.591 1439.44,639.997 1440,627.843 1440.56,680.718 1441.12,716.922 1441.68,748.538 1442.24,730.819 1442.8,710.277 1443.36,694.034 1443.92,678.895 1444.48,663.346 1445.04,650.991 1445.6,666.607 1446.15,671.316 1446.71,653.788 1447.27,672.734 1447.83,689.745 1448.39,708.779 1448.95,755.803 1449.51,719.392 1450.07,703.617 1450.63,704.4 1451.19,700.616 1451.75,715.054 1452.31,747.493 1452.87,726.884 1453.42,758.622 1453.98,738.648 1454.54,765.215 1455.1,762.063 1455.66,787.79 1456.22,798.246 1456.78,775.087 1457.34,785.581 1457.9,796.077 1458.46,805.304 1459.02,833.667 1459.58,810.663 1460.14,847.873 1460.7,823.371 1461.25,786.546 1461.81,795.833 1462.37,805.025 1462.93,752.34 1463.49,718.385 1464.05,732.28 1464.61,715.794 1465.17,697.593 1465.73,713.972 1466.29,699.948 1466.85,698.929 1467.41,647.313 1467.97,616.703 1468.52,667.017 1469.08,651.023 1469.64,649.91 1470.2,634.181 1470.76,634.583 1471.32,603.496 1471.88,604.278 1472.44,624.773 1473,623.292 1473.56,626.064 1474.12,628.902 1474.68,629.904 1475.24,633.334 1475.79,636.661 1476.35,637.957 1476.91,605.544 1477.47,629.346 1478.03,647.874 1478.59,652.477 1479.15,683.888 1479.71,684.068 1480.27,683.867 1480.83,685.56 1481.39,732.219 1481.95,731.668 1482.51,728.319 1483.07,741.643 1483.62,705.838 1484.18,719.389 1484.74,719.265 1485.3,701.511 1485.86,700.545 1486.42,699.869 1486.98,683.998 1487.54,732.598 1488.1,711.769 1488.66,710.114 1489.22,708.673 1489.78,719.729 1490.34,682.404 1490.89,681.828 1491.45,679.404 1492.01,710.31 1492.57,725.458 1493.13,692.066 1493.69,674.233 1494.25,673.037 1494.81,659.619 1495.37,677.392 1495.93,694.536 1496.49,741.599 1497.05,755.955 1497.61,720.017 1498.16,733.611 1498.72,743.515 1499.28,693.426 1499.84,694.478 1500.4,711.449 1500.96,724.517 1501.52,742.128 1502.08,738.58 1502.64,723.364 1503.2,702.82 1503.76,718.477 1504.32,718.386 1504.88,732.634 1505.44,747.72 1505.99,760.417 1506.55,758.44 1507.11,767.775 1507.67,778.427 1508.23,770.113 1508.79,728.692 1509.35,695.331 1509.91,645.505 1510.47,666.894 1511.03,668.879 1511.59,703.578 1512.15,702.604 1512.71,720.387 1513.26,733.66 1513.82,730.531 1514.38,668.105 1514.94,654.596 1515.5,669.977 1516.06,687.382 1516.62,657.687 1517.18,692.229 1517.74,640.328 1518.3,625.003 1518.86,640.618 1519.42,639.918 1519.98,657.398 1520.53,655.847 1521.09,673.703 1521.65,708.249 1522.21,721.237 1522.77,704.466 1523.33,686.796 1523.89,737.994 1524.45,705.837 1525.01,722.082 1525.57,752.158 1526.13,765.356 1526.69,778.993 1527.25,772.46 1527.81,768.185 1528.36,762.229 1528.92,758.157 1529.48,737.507 1530.04,718.863 1530.6,717.561 1531.16,749.554 1531.72,730.481 1532.28,742.735 1532.84,789.643 1533.4,768.063 1533.96,748.924 1534.52,709.787 1535.08,708.158 1535.63,678.053 1536.19,671.84 1536.75,654.449 1537.31,657.293 1537.87,659.88 1538.43,691.282 1538.99,702.191 1539.55,701.527 1540.11,699.941 1540.67,715.534 1541.23,729.07 1541.79,727.929 1542.35,692.444 1542.9,661.336 1543.46,662.169 1544.02,659.774 1544.58,660.466 1545.14,645.741 1545.7,646.812 1546.26,662.138 1546.82,663.63 1547.38,647.717 1547.94,629.371 1548.5,630.81 1549.06,601.909 1549.62,590.043 1550.18,594.126 1550.73,533.457 1551.29,523.101 1551.85,513.136 1552.41,539.44 1552.97,534.06 1553.53,559.776 1554.09,582.713 1554.65,636.726 1555.21,652.373 1555.77,635.981 1556.33,636.872 1556.89,593.328 1557.45,612.469 1558,629.125 1558.56,695.789 1559.12,694.129 1559.68,660.444 1560.24,643.904 1560.8,660.901 1561.36,646.32 1561.92,617.095 1562.48,605.72 1563.04,623.962 1563.6,658.958 1564.16,661.155 1564.72,662.157 1565.28,631.657 1565.83,635.072 1566.39,658.865 1566.95,677.63 1567.51,660.9 1568.07,677.856 1568.63,657.412 1569.19,706.288 1569.75,722.222 1570.31,701.376 1570.87,699.49 1571.43,713.083 1571.99,710.953 1572.55,739.015 1573.1,719.373 1573.66,734.165 1574.22,732.645 1574.78,679.161 1575.34,695.068 1575.9,739.785 1576.46,750.086 1577.02,745.8 1577.58,742.104 1578.14,754.645 1578.7,766.342 1579.26,774.162 1579.82,772.618 1580.37,752.123 1580.93,733.768 1581.49,763.109 1582.05,742.996 1582.61,737.911 1583.17,719.686 1583.73,703.352 1584.29,702.482 1584.85,715.444 1585.41,681.201 1585.97,710.999 1586.53,693.203 1587.09,692.095 1587.65,691.101 1588.2,691.307 1588.76,707.501 1589.32,724.362 1589.88,737.337 1590.44,734.96 1591,751.119 1591.56,744.175 1592.12,723.779 1592.68,674.981 1593.24,656.809 1593.8,691.963 1594.36,644.637 1594.92,664.013 1595.47,646.016 1596.03,683.071 1596.59,682.67 1597.15,669.137 1597.71,637.39 1598.27,668.991 1598.83,669.331 1599.39,651.734 1599.95,668.345 1600.51,702.681 1601.07,733.94 1601.63,697.637 1602.19,682.58 1602.74,700.168 1603.3,730.243 1603.86,696.146 1604.42,694.968 1604.98,678.143 1605.54,662.976 1606.1,682.425 1606.66,697.17 1607.22,681.062 1607.78,694.24 1608.34,692.777 1608.9,706.037 1609.46,737.03 1610.02,716.592 1610.57,727.833 1611.13,737.65 1611.69,717.986 1612.25,681.808 1612.81,667.589 1613.37,670.232 1613.93,636.625 1614.49,638.971 1615.05,655.346 1615.61,655.567 1616.17,654.926 1616.73,623.403 1617.29,592.519 1617.84,600.115 1618.4,606.374 1618.96,596.25 1619.52,633.95 1620.08,620.455 1620.64,641.372 1621.2,658.191 1621.76,645.737 1622.32,635.754 1622.88,623.402 1623.44,643.31 1624,598.165 1624.56,588.191 1625.11,593.866 1625.67,569.669 1626.23,595.454 1626.79,598.539 1627.35,604.514 1627.91,624.469 1628.47,610.924 1629.03,597.42 1629.59,585.316 1630.15,558.67 1630.71,565.759 1631.27,591.262 1631.83,580.284 1632.39,586.664 1632.94,572.229 1633.5,576.895 1634.06,571.898 1634.62,562.629 1635.18,569.477 1635.74,590.559 1636.3,600.971 1636.86,623.621 1637.42,658.83 1637.98,662.372 1638.54,648.312 1639.1,650.424 1639.66,667.697 1640.21,672.732 1640.77,708.284 1641.33,676.117 1641.89,681.014 1642.45,681.747 1643.01,715.308 1643.57,698.709 1644.13,682.556 1644.69,701.244 1645.25,684.404 1645.81,669.301 1646.37,656.452 1646.93,643.777 1647.48,681.321 1648.04,699.457 1648.6,713.815 1649.16,712.005 1649.72,759.421 1650.28,757.602 1650.84,737.798 1651.4,751.568 1651.96,734.499 1652.52,733.936 1653.08,716.24 1653.64,733.59 1654.2,731.442 1654.76,708.724 1655.31,707.956 1655.87,709.146 1656.43,709.664 1656.99,659.358 1657.55,643.735 1658.11,662.498 1658.67,647.75 1659.23,632.708 1659.79,635.058 1660.35,656.206 1660.91,625.927 1661.47,645.376 1662.03,660.165 1662.58,658.967 1663.14,679.721 1663.7,711.476 1664.26,696.659 1664.82,697.856 1665.38,697.81 1665.94,728.807 1666.5,725.1 1667.06,659.282 1667.62,676.948 1668.18,678.475 1668.74,677.986 1669.3,691.604 1669.85,703.633 1670.41,700.658 1670.97,683.183 1671.53,700.2 1672.09,699.237 1672.65,731.388 1673.21,710.017 1673.77,727.04 1674.33,750.6 1674.89,728.461 1675.45,703.549 1676.01,700.24 1676.57,668.926 1677.13,653.606 1677.68,639.115 1678.24,641.281 1678.8,629.097 1679.36,665.158 1679.92,695.398 1680.48,732.176 1681.04,698.398 1681.6,761.657 1682.16,790.046 1682.72,833.484 1683.28,809.309 1683.84,819.275 1684.4,827.226 1684.95,818.706 1685.51,778.67 1686.07,772.766 1686.63,718.791 1687.19,735.529 1687.75,716.917 1688.31,731.289 1688.87,647.443 1689.43,646.728 1689.99,613.336 1690.55,648.494 1691.11,634.114 1691.67,685.222 1692.23,668.228 1692.78,642.889 1693.34,609.501 1693.9,628.896 1694.46,680.993 1695.02,679.494 1695.58,675.609 1696.14,660.175 1696.7,661.543 1697.26,664.683 1697.82,663.103 1698.38,630.405 1698.94,630.898 1699.5,616.51 1700.05,634.513 1700.61,638.879 1701.17,645.865 1701.73,646.047 1702.29,633.638 1702.85,620.652 1703.41,640.098 1703.97,615.251 1704.53,620.108 1705.09,628.892 1705.65,647.063 1706.21,632.226 1706.77,604.216 1707.32,589.928 1707.88,564.565 1708.44,571.13 1709,590.738 1709.56,596.915 1710.12,602.477 1710.68,607.365 1711.24,610.003 1711.8,546.227 1712.36,534.883 1712.92,525.515 1713.48,522.201 1714.04,516.273 1714.6,508.046 1715.15,516.288 1715.71,541.371 1716.27,565.459 1716.83,572.623 1717.39,594.484 1717.95,579.674 1718.51,582.357 1719.07,604.628 1719.63,594.88 1720.19,615.777 1720.75,665.736 1721.31,667.383 1721.87,670.45 1722.42,654.745 1722.98,660.142 1723.54,662.599 1724.1,663.972 1724.66,648.374 1725.22,680.063 1725.78,693.167 1726.34,707.823 1726.9,705.118 1727.46,701.342 1728.02,684.18 1728.58,686.215 1729.14,703.964 1729.69,671.915 1730.25,704.084 1730.81,718.885 1731.37,737.168 1731.93,699.25 1732.49,698.61 1733.05,715.325 1733.61,698.01 1734.17,680.403 1734.73,679.717 1735.29,699.667 1735.85,701.241 1736.41,716.497 1736.97,719.469 1737.52,738.104 1738.08,766.761 1738.64,780.316 1739.2,771.851 1739.76,780.564 1740.32,777.334 1740.88,803.056 1741.44,812.635 1742,821.484 1742.56,794.207 1743.12,790.995 1743.68,772.223 1744.24,769.939 1744.79,765.305 1745.35,795.318 1745.91,803.326 1746.47,784.477 1747.03,763.013 1747.59,740.885 1748.15,751.709 1748.71,748.76 1749.27,745.319 1749.83,726.712 1750.39,709.481 1750.95,724.777 1751.51,734.817 1752.06,714.698 1752.62,712.317 1753.18,712.851 1753.74,726.953 1754.3,712.295 1754.86,697.828 1755.42,680.862 1755.98,660.938 1756.54,630.451 1757.1,648.261 1757.66,649.568 1758.22,652.773 1758.78,669.366 1759.34,668.699 1759.89,687.321 1760.45,700.03 1761.01,700.414 1761.57,703.849 1762.13,717.761 1762.69,734.647 1763.25,717.785 1763.81,717.544 1764.37,715.708 1764.93,714.475 1765.49,696.397 1766.05,679.591 1766.61,679.742 1767.16,663.98 1767.72,681.734 1768.28,619.319 1768.84,640.678 1769.4,626.447 1769.96,625.399 1770.52,628.725 1771.08,648.354 1771.64,652.454 1772.2,655.55 1772.76,655.718 1773.32,655.876 1773.88,637.2 1774.43,641.652 1774.99,674.026 1775.55,640.453 1776.11,642.758 1776.67,660.933 1777.23,631.842 1777.79,603.138 1778.35,612.227 1778.91,599.85 1779.47,583.898 1780.03,605.466 1780.59,628.194 1781.15,647.696 1781.71,647.565 1782.26,677.462 1782.82,678.688 1783.38,664.511 1783.94,683.502 1784.5,632.077 1785.06,651.965 1785.62,650.415 1786.18,620.897 1786.74,608.485 1787.3,612.761 1787.86,649.426 1788.42,648.857 1788.98,713.901 1789.53,723.957 1790.09,719.569 1790.65,734.14 1791.21,730.259 1791.77,757.118 1792.33,768.918 1792.89,763.579 1793.45,760.271 1794.01,741.406 1794.57,739.458 1795.13,734.939 1795.69,717.668 1796.25,729.633 1796.8,745.065 1797.36,712.739 1797.92,728.103 1798.48,695.186 1799.04,695.561 1799.6,694.118 1800.16,709.141 1800.72,730.692 1801.28,745.246 1801.84,726.032 1802.4,723.329 1802.96,752.372 1803.52,760.845 1804.08,723.329 1804.63,722.619 1805.19,706.514 1805.75,687.324 1806.31,686.128 1806.87,732.006 1807.43,713.532 1807.99,694.455 1808.55,724.216 1809.11,705.469 1809.67,684.281 1810.23,685.825 1810.79,686.189 1811.35,687.326 1811.9,687.811 1812.46,704.374 1813.02,701.388 1813.58,700.141 1814.14,714.465 1814.7,732.372 1815.26,714.539 1815.82,711.316 1816.38,676.773 1816.94,678.992 1817.5,723.844 1818.06,700.567 1818.62,703.998 1819.18,722.153 1819.73,691.327 1820.29,724.475 1820.85,706.037 1821.41,721.445 1821.97,705.336 1822.53,687.867 1823.09,718.953 1823.65,731.767 1824.21,730.867 1824.77,727.15 1825.33,707.974 1825.89,756.824 1826.45,752.275 1827,761.286 1827.56,740.157 1828.12,722.505 1828.68,748.964 1829.24,778.355 1829.8,759.004 1830.36,736.627 1830.92,747.402 1831.48,758.11 1832.04,739.589 1832.6,752.676 1833.16,764.712 1833.72,775.014 1834.27,754.799 1834.83,736.663 1835.39,699.94 1835.95,716.859 1836.51,715.922 1837.07,732.433 1837.63,777.247 1838.19,771.953 \"/>\n<path clip-path=\"url(#clip063)\" d=\"M720.247 690.583 L720.806 690.583 L721.365 690.583 L721.924 690.583 L722.484 690.583 L723.043 690.583 L723.602 690.583 L724.161 690.583 L724.721 690.583 L725.28 690.583 L725.839 690.583 L726.398 690.583 L726.958 690.583 L727.517 690.583 L728.076 690.583 L728.635 690.583 L729.195 690.583 L729.754 690.583 L730.313 690.583 L730.872 690.583 L731.432 690.583 L731.991 690.583 L732.55 690.583 L733.109 690.583 L733.669 690.583 L734.228 690.583 L734.787 690.583 L735.346 690.583 L735.906 690.583 L736.465 690.583 L737.024 690.583 L737.583 690.583 L738.143 690.583 L738.702 690.583 L739.261 690.583 L739.82 690.583 L740.38 690.583 L740.939 690.583 L741.498 690.583 L742.057 690.583 L742.617 690.583 L743.176 690.583 L743.735 690.583 L744.294 690.583 L744.854 690.583 L745.413 690.583 L745.972 690.583 L746.531 690.583 L747.091 690.583 L747.65 690.583 L748.209 690.583 L748.768 690.583 L749.328 690.583 L749.887 690.583 L750.446 690.583 L751.005 690.583 L751.565 690.583 L752.124 690.583 L752.683 690.583 L753.242 690.583 L753.802 690.583 L754.361 690.583 L754.92 690.583 L755.479 690.583 L756.039 690.583 L756.598 690.583 L757.157 690.583 L757.716 690.583 L758.276 690.583 L758.835 690.583 L759.394 690.583 L759.953 690.583 L760.513 690.583 L761.072 690.583 L761.631 690.583 L762.19 690.583 L762.75 690.583 L763.309 690.583 L763.868 690.583 L764.427 690.583 L764.987 690.583 L765.546 690.583 L766.105 690.583 L766.664 690.583 L767.224 690.583 L767.783 690.583 L768.342 690.583 L768.901 690.583 L769.461 690.583 L770.02 690.583 L770.579 690.583 L771.138 690.583 L771.698 690.583 L772.257 690.583 L772.816 690.583 L773.375 690.583 L773.935 690.583 L774.494 690.583 L775.053 690.583 L775.612 690.583 L776.172 690.583 L776.731 690.583 L777.29 690.583 L777.849 690.583 L778.409 690.583 L778.968 690.583 L779.527 690.583 L780.086 690.583 L780.646 690.583 L781.205 690.583 L781.764 690.583 L782.323 690.583 L782.883 690.583 L783.442 690.583 L784.001 690.583 L784.56 690.583 L785.12 690.583 L785.679 690.583 L786.238 690.583 L786.797 690.583 L787.357 690.583 L787.916 690.583 L788.475 690.583 L789.034 690.583 L789.594 690.583 L790.153 690.583 L790.712 690.583 L791.271 690.583 L791.831 690.583 L792.39 690.583 L792.949 690.583 L793.508 690.583 L794.068 690.583 L794.627 690.583 L795.186 690.583 L795.745 690.583 L796.305 690.583 L796.864 690.583 L797.423 690.583 L797.982 690.583 L798.542 690.583 L799.101 690.583 L799.66 690.583 L800.219 690.583 L800.779 690.583 L801.338 690.583 L801.897 690.583 L802.456 690.583 L803.016 690.583 L803.575 690.583 L804.134 690.583 L804.693 690.583 L805.253 690.583 L805.812 690.583 L806.371 690.583 L806.931 690.583 L807.49 690.583 L808.049 690.583 L808.608 690.583 L809.168 690.583 L809.727 690.583 L810.286 690.583 L810.845 690.583 L811.405 690.583 L811.964 690.583 L812.523 690.583 L813.082 690.583 L813.642 690.583 L814.201 690.583 L814.76 690.583 L815.319 690.583 L815.879 690.583 L816.438 690.583 L816.997 690.583 L817.556 690.583 L818.116 690.583 L818.675 690.583 L819.234 690.583 L819.793 690.583 L820.353 690.583 L820.912 690.583 L821.471 690.583 L822.03 690.583 L822.59 690.583 L823.149 690.583 L823.708 690.583 L824.267 690.583 L824.827 690.583 L825.386 690.583 L825.945 690.583 L826.504 690.583 L827.064 690.583 L827.623 690.583 L828.182 690.583 L828.741 690.583 L829.301 690.583 L829.86 690.583 L830.419 690.583 L830.978 690.583 L831.538 690.583 L832.097 690.583 L832.656 690.583 L833.215 690.583 L833.775 690.583 L834.334 690.583 L834.893 690.583 L835.452 690.583 L836.012 690.583 L836.571 690.583 L837.13 690.583 L837.689 690.583 L838.249 690.583 L838.808 690.583 L839.367 690.583 L839.926 690.583 L840.486 690.583 L841.045 690.583 L841.604 690.583 L842.163 690.583 L842.723 690.583 L843.282 690.583 L843.841 690.583 L844.4 690.583 L844.96 690.583 L845.519 690.583 L846.078 690.583 L846.637 690.583 L847.197 690.583 L847.756 690.583 L848.315 690.583 L848.874 690.583 L849.434 690.583 L849.993 690.583 L850.552 690.583 L851.111 690.583 L851.671 690.583 L852.23 690.583 L852.789 690.583 L853.348 690.583 L853.908 690.583 L854.467 690.583 L855.026 690.583 L855.585 690.583 L856.145 690.583 L856.704 690.583 L857.263 690.583 L857.822 690.583 L858.382 690.583 L858.941 690.583 L859.5 690.583 L860.059 690.583 L860.619 690.583 L861.178 690.583 L861.737 690.583 L862.296 690.583 L862.856 690.583 L863.415 690.583 L863.974 690.583 L864.533 690.583 L865.093 690.583 L865.652 690.583 L866.211 690.583 L866.77 690.583 L867.33 690.583 L867.889 690.583 L868.448 690.583 L869.007 690.583 L869.567 690.583 L870.126 690.583 L870.685 690.583 L871.244 690.583 L871.804 690.583 L872.363 690.583 L872.922 690.583 L873.481 690.583 L874.041 690.583 L874.6 690.583 L875.159 690.583 L875.718 690.583 L876.278 690.583 L876.837 690.583 L877.396 690.583 L877.955 690.583 L878.515 690.583 L879.074 690.583 L879.633 690.583 L880.192 690.583 L880.752 690.583 L881.311 690.583 L881.87 690.583 L882.429 690.583 L882.989 690.583 L883.548 690.583 L884.107 690.583 L884.666 690.583 L885.226 690.583 L885.785 690.583 L886.344 690.583 L886.903 690.583 L887.463 690.583 L888.022 690.583 L888.581 690.583 L889.14 690.583 L889.7 690.583 L890.259 690.583 L890.818 690.583 L891.377 690.583 L891.937 690.583 L892.496 690.583 L893.055 690.583 L893.614 690.583 L894.174 690.583 L894.733 690.583 L895.292 690.583 L895.851 690.583 L896.411 690.583 L896.97 690.583 L897.529 690.583 L898.088 690.583 L898.648 690.583 L899.207 690.583 L899.766 690.583 L900.325 690.583 L900.885 690.583 L901.444 690.583 L902.003 690.583 L902.562 690.583 L903.122 690.583 L903.681 690.583 L904.24 690.583 L904.799 690.583 L905.359 690.583 L905.918 690.583 L906.477 690.583 L907.036 690.583 L907.596 690.583 L908.155 690.583 L908.714 690.583 L909.273 690.583 L909.833 690.583 L910.392 690.583 L910.951 690.583 L911.51 690.583 L912.07 690.583 L912.629 690.583 L913.188 690.583 L913.747 690.583 L914.307 690.583 L914.866 690.583 L915.425 690.583 L915.984 690.583 L916.544 690.583 L917.103 690.583 L917.662 690.583 L918.221 690.583 L918.781 690.583 L919.34 690.583 L919.899 690.583 L920.458 690.583 L921.018 690.583 L921.577 690.583 L922.136 690.583 L922.695 690.583 L923.255 690.583 L923.814 690.583 L924.373 690.583 L924.932 690.583 L925.492 690.583 L926.051 690.583 L926.61 690.583 L927.169 690.583 L927.729 690.583 L928.288 690.583 L928.847 690.583 L929.406 690.583 L929.966 690.583 L930.525 690.583 L931.084 690.583 L931.644 690.583 L932.203 690.583 L932.762 690.583 L933.321 690.583 L933.881 690.583 L934.44 690.583 L934.999 690.583 L935.558 690.583 L936.118 690.583 L936.677 690.583 L937.236 690.583 L937.795 690.583 L938.355 690.583 L938.914 690.583 L939.473 690.583 L940.032 690.583 L940.592 690.583 L941.151 690.583 L941.71 690.583 L942.269 690.583 L942.829 690.583 L943.388 690.583 L943.947 690.583 L944.506 690.583 L945.066 690.583 L945.625 690.583 L946.184 690.583 L946.743 690.583 L947.303 690.583 L947.862 690.583 L948.421 690.583 L948.98 690.583 L949.54 690.583 L950.099 690.583 L950.658 690.583 L951.217 690.583 L951.777 690.583 L952.336 690.583 L952.895 690.583 L953.454 690.583 L954.014 690.583 L954.573 690.583 L955.132 690.583 L955.691 690.583 L956.251 690.583 L956.81 690.583 L957.369 690.583 L957.928 690.583 L958.488 690.583 L959.047 690.583 L959.606 690.583 L960.165 690.583 L960.725 690.583 L961.284 690.583 L961.843 690.583 L962.402 690.583 L962.962 690.583 L963.521 690.583 L964.08 690.583 L964.639 690.583 L965.199 690.583 L965.758 690.583 L966.317 690.583 L966.876 690.583 L967.436 690.583 L967.995 690.583 L968.554 690.583 L969.113 690.583 L969.673 690.583 L970.232 690.583 L970.791 690.583 L971.35 690.583 L971.91 690.583 L972.469 690.583 L973.028 690.583 L973.587 690.583 L974.147 690.583 L974.706 690.583 L975.265 690.583 L975.824 690.583 L976.384 690.583 L976.943 690.583 L977.502 690.583 L978.061 690.583 L978.621 690.583 L979.18 690.583 L979.739 690.583 L980.298 690.583 L980.858 690.583 L981.417 690.583 L981.976 690.583 L982.535 690.583 L983.095 690.583 L983.654 690.583 L984.213 690.583 L984.772 690.583 L985.332 690.583 L985.891 690.583 L986.45 690.583 L987.009 690.583 L987.569 690.583 L988.128 690.583 L988.687 690.583 L989.246 690.583 L989.806 690.583 L990.365 690.583 L990.924 690.583 L991.483 690.583 L992.043 690.583 L992.602 690.583 L993.161 690.583 L993.72 690.583 L994.28 690.583 L994.839 690.583 L995.398 690.583 L995.957 690.583 L996.517 690.583 L997.076 690.583 L997.635 690.583 L998.194 690.583 L998.754 690.583 L999.313 690.583 L999.872 690.583 L1000.43 690.583 L1000.99 690.583 L1001.55 690.583 L1002.11 690.583 L1002.67 690.583 L1003.23 690.583 L1003.79 690.583 L1004.35 690.583 L1004.91 690.583 L1005.46 690.583 L1006.02 690.583 L1006.58 690.583 L1007.14 690.583 L1007.7 690.583 L1008.26 690.583 L1008.82 690.583 L1009.38 690.583 L1009.94 690.583 L1010.5 690.583 L1011.06 690.583 L1011.62 690.583 L1012.18 690.583 L1012.73 690.583 L1013.29 690.583 L1013.85 690.583 L1014.41 690.583 L1014.97 690.583 L1015.53 690.583 L1016.09 690.583 L1016.65 690.583 L1017.21 690.583 L1017.77 690.583 L1018.33 690.583 L1018.89 690.583 L1019.45 690.583 L1020.01 690.583 L1020.56 690.583 L1021.12 690.583 L1021.68 690.583 L1022.24 690.583 L1022.8 690.583 L1023.36 690.583 L1023.92 690.583 L1024.48 690.583 L1025.04 690.583 L1025.6 690.583 L1026.16 690.583 L1026.72 690.583 L1027.28 690.583 L1027.83 690.583 L1028.39 690.583 L1028.95 690.583 L1029.51 690.583 L1030.07 690.583 L1030.63 690.583 L1031.19 690.583 L1031.75 690.583 L1032.31 690.583 L1032.87 690.583 L1033.43 690.583 L1033.99 690.583 L1034.55 690.583 L1035.1 690.583 L1035.66 690.583 L1036.22 690.583 L1036.78 690.583 L1037.34 690.583 L1037.9 690.583 L1038.46 690.583 L1039.02 690.583 L1039.58 690.583 L1040.14 690.583 L1040.7 690.583 L1041.26 690.583 L1041.82 690.583 L1042.38 690.583 L1042.93 690.583 L1043.49 690.583 L1044.05 690.583 L1044.61 690.583 L1045.17 690.583 L1045.73 690.583 L1046.29 690.583 L1046.85 690.583 L1047.41 690.583 L1047.97 690.583 L1048.53 690.583 L1049.09 690.583 L1049.65 690.583 L1050.2 690.583 L1050.76 690.583 L1051.32 690.583 L1051.88 690.583 L1052.44 690.583 L1053 690.583 L1053.56 690.583 L1054.12 690.583 L1054.68 690.583 L1055.24 690.583 L1055.8 690.583 L1056.36 690.583 L1056.92 690.583 L1057.48 690.583 L1058.03 690.583 L1058.59 690.583 L1059.15 690.583 L1059.71 690.583 L1060.27 690.583 L1060.83 690.583 L1061.39 690.583 L1061.95 690.583 L1062.51 690.583 L1063.07 690.583 L1063.63 690.583 L1064.19 690.583 L1064.75 690.583 L1065.3 690.583 L1065.86 690.583 L1066.42 690.583 L1066.98 690.583 L1067.54 690.583 L1068.1 690.583 L1068.66 690.583 L1069.22 690.583 L1069.78 690.583 L1070.34 690.583 L1070.9 690.583 L1071.46 690.583 L1072.02 690.583 L1072.57 690.583 L1073.13 690.583 L1073.69 690.583 L1074.25 690.583 L1074.81 690.583 L1075.37 690.583 L1075.93 690.583 L1076.49 690.583 L1077.05 690.583 L1077.61 690.583 L1078.17 690.583 L1078.73 690.583 L1079.29 690.583 L1079.85 690.583 L1080.4 690.583 L1080.96 690.583 L1081.52 690.583 L1082.08 690.583 L1082.64 690.583 L1083.2 690.583 L1083.76 690.583 L1084.32 690.583 L1084.88 690.583 L1085.44 690.583 L1086 690.583 L1086.56 690.583 L1087.12 690.583 L1087.67 690.583 L1088.23 690.583 L1088.79 690.583 L1089.35 690.583 L1089.91 690.583 L1090.47 690.583 L1091.03 690.583 L1091.59 690.583 L1092.15 690.583 L1092.71 690.583 L1093.27 690.583 L1093.83 690.583 L1094.39 690.583 L1094.94 690.583 L1095.5 690.583 L1096.06 690.583 L1096.62 690.583 L1097.18 690.583 L1097.74 690.583 L1098.3 690.583 L1098.86 690.583 L1099.42 690.583 L1099.98 690.583 L1100.54 690.583 L1101.1 690.583 L1101.66 690.583 L1102.22 690.583 L1102.77 690.583 L1103.33 690.583 L1103.89 690.583 L1104.45 690.583 L1105.01 690.583 L1105.57 690.583 L1106.13 690.583 L1106.69 690.583 L1107.25 690.583 L1107.81 690.583 L1108.37 690.583 L1108.93 690.583 L1109.49 690.583 L1110.04 690.583 L1110.6 690.583 L1111.16 690.583 L1111.72 690.583 L1112.28 690.583 L1112.84 690.583 L1113.4 690.583 L1113.96 690.583 L1114.52 690.583 L1115.08 690.583 L1115.64 690.583 L1116.2 690.583 L1116.76 690.583 L1117.31 690.583 L1117.87 690.583 L1118.43 690.583 L1118.99 690.583 L1119.55 690.583 L1120.11 690.583 L1120.67 690.583 L1121.23 690.583 L1121.79 690.583 L1122.35 690.583 L1122.91 690.583 L1123.47 690.583 L1124.03 690.583 L1124.59 690.583 L1125.14 690.583 L1125.7 690.583 L1126.26 690.583 L1126.82 690.583 L1127.38 690.583 L1127.94 690.583 L1128.5 690.583 L1129.06 690.583 L1129.62 690.583 L1130.18 690.583 L1130.74 690.583 L1131.3 690.583 L1131.86 690.583 L1132.41 690.583 L1132.97 690.583 L1133.53 690.583 L1134.09 690.583 L1134.65 690.583 L1135.21 690.583 L1135.77 690.583 L1136.33 690.583 L1136.89 690.583 L1137.45 690.583 L1138.01 690.583 L1138.57 690.583 L1139.13 690.583 L1139.68 690.583 L1140.24 690.583 L1140.8 690.583 L1141.36 690.583 L1141.92 690.583 L1142.48 690.583 L1143.04 690.583 L1143.6 690.583 L1144.16 690.583 L1144.72 690.583 L1145.28 690.583 L1145.84 690.583 L1146.4 690.583 L1146.96 690.583 L1147.51 690.583 L1148.07 690.583 L1148.63 690.583 L1149.19 690.583 L1149.75 690.583 L1150.31 690.583 L1150.87 690.583 L1151.43 690.583 L1151.99 690.583 L1152.55 690.583 L1153.11 690.583 L1153.67 690.583 L1154.23 690.583 L1154.78 690.583 L1155.34 690.583 L1155.9 690.583 L1156.46 690.583 L1157.02 690.583 L1157.58 690.583 L1158.14 690.583 L1158.7 690.583 L1159.26 690.583 L1159.82 690.583 L1160.38 690.583 L1160.94 690.583 L1161.5 690.583 L1162.05 690.583 L1162.61 690.583 L1163.17 690.583 L1163.73 690.583 L1164.29 690.583 L1164.85 690.583 L1165.41 690.583 L1165.97 690.583 L1166.53 690.583 L1167.09 690.583 L1167.65 690.583 L1168.21 690.583 L1168.77 690.583 L1169.33 690.583 L1169.88 690.583 L1170.44 690.583 L1171 690.583 L1171.56 690.583 L1172.12 690.583 L1172.68 690.583 L1173.24 690.583 L1173.8 690.583 L1174.36 690.583 L1174.92 690.583 L1175.48 690.583 L1176.04 690.583 L1176.6 690.583 L1177.15 690.583 L1177.71 690.583 L1178.27 690.583 L1178.83 690.583 L1179.39 690.583 L1179.95 690.583 L1180.51 690.583 L1181.07 690.583 L1181.63 690.583 L1182.19 690.583 L1182.75 690.583 L1183.31 690.583 L1183.87 690.583 L1184.43 690.583 L1184.98 690.583 L1185.54 690.583 L1186.1 690.583 L1186.66 690.583 L1187.22 690.583 L1187.78 690.583 L1188.34 690.583 L1188.9 690.583 L1189.46 690.583 L1190.02 690.583 L1190.58 690.583 L1191.14 690.583 L1191.7 690.583 L1192.25 690.583 L1192.81 690.583 L1193.37 690.583 L1193.93 690.583 L1194.49 690.583 L1195.05 690.583 L1195.61 690.583 L1196.17 690.583 L1196.73 690.583 L1197.29 690.583 L1197.85 690.583 L1198.41 690.583 L1198.97 690.583 L1199.52 690.583 L1200.08 690.583 L1200.64 690.583 L1201.2 690.583 L1201.76 690.583 L1202.32 690.583 L1202.88 690.583 L1203.44 690.583 L1204 690.583 L1204.56 690.583 L1205.12 690.583 L1205.68 690.583 L1206.24 690.583 L1206.8 690.583 L1207.35 690.583 L1207.91 690.583 L1208.47 690.583 L1209.03 690.583 L1209.59 690.583 L1210.15 690.583 L1210.71 690.583 L1211.27 690.583 L1211.83 690.583 L1212.39 690.583 L1212.95 690.583 L1213.51 690.583 L1214.07 690.583 L1214.62 690.583 L1215.18 690.583 L1215.74 690.583 L1216.3 690.583 L1216.86 690.583 L1217.42 690.583 L1217.98 690.583 L1218.54 690.583 L1219.1 690.583 L1219.66 690.583 L1220.22 690.583 L1220.78 690.583 L1221.34 690.583 L1221.89 690.583 L1222.45 690.583 L1223.01 690.583 L1223.57 690.583 L1224.13 690.583 L1224.69 690.583 L1225.25 690.583 L1225.81 690.583 L1226.37 690.583 L1226.93 690.583 L1227.49 690.583 L1228.05 690.583 L1228.61 690.583 L1229.17 690.583 L1229.72 690.583 L1230.28 690.583 L1230.84 690.583 L1231.4 690.583 L1231.96 690.583 L1232.52 690.583 L1233.08 690.583 L1233.64 690.583 L1234.2 690.583 L1234.76 690.583 L1235.32 690.583 L1235.88 690.583 L1236.44 690.583 L1236.99 690.583 L1237.55 690.583 L1238.11 690.583 L1238.67 690.583 L1239.23 690.583 L1239.79 690.583 L1240.35 690.583 L1240.91 690.583 L1241.47 690.583 L1242.03 690.583 L1242.59 690.583 L1243.15 690.583 L1243.71 690.583 L1244.26 690.583 L1244.82 690.583 L1245.38 690.583 L1245.94 690.583 L1246.5 690.583 L1247.06 690.583 L1247.62 690.583 L1248.18 690.583 L1248.74 690.583 L1249.3 690.583 L1249.86 690.583 L1250.42 690.583 L1250.98 690.583 L1251.54 690.583 L1252.09 690.583 L1252.65 690.583 L1253.21 690.583 L1253.77 690.583 L1254.33 690.583 L1254.89 690.583 L1255.45 690.583 L1256.01 690.583 L1256.57 690.583 L1257.13 690.583 L1257.69 690.583 L1258.25 690.583 L1258.81 690.583 L1259.36 690.583 L1259.92 690.583 L1260.48 690.583 L1261.04 690.583 L1261.6 690.583 L1262.16 690.583 L1262.72 690.583 L1263.28 690.583 L1263.84 690.583 L1264.4 690.583 L1264.96 690.583 L1265.52 690.583 L1266.08 690.583 L1266.63 690.583 L1267.19 690.583 L1267.75 690.583 L1268.31 690.583 L1268.87 690.583 L1269.43 690.583 L1269.99 690.583 L1270.55 690.583 L1271.11 690.583 L1271.67 690.583 L1272.23 690.583 L1272.79 690.583 L1273.35 690.583 L1273.91 690.583 L1274.46 690.583 L1275.02 690.583 L1275.58 690.583 L1276.14 690.583 L1276.7 690.583 L1277.26 690.583 L1277.82 690.583 L1278.38 690.583 L1278.94 690.583 L1279.5 690.583 L1280.06 690.583 L1280.62 690.583 L1281.18 690.583 L1281.73 690.583 L1282.29 690.583 L1282.85 690.583 L1283.41 690.583 L1283.97 690.583 L1284.53 690.583 L1285.09 690.583 L1285.65 690.583 L1286.21 690.583 L1286.77 690.583 L1287.33 690.583 L1287.89 690.583 L1288.45 690.583 L1289 690.583 L1289.56 690.583 L1290.12 690.583 L1290.68 690.583 L1291.24 690.583 L1291.8 690.583 L1292.36 690.583 L1292.92 690.583 L1293.48 690.583 L1294.04 690.583 L1294.6 690.583 L1295.16 690.583 L1295.72 690.583 L1296.28 690.583 L1296.83 690.583 L1297.39 690.583 L1297.95 690.583 L1298.51 690.583 L1299.07 690.583 L1299.63 690.583 L1300.19 690.583 L1300.75 690.583 L1301.31 690.583 L1301.87 690.583 L1302.43 690.583 L1302.99 690.583 L1303.55 690.583 L1304.1 690.583 L1304.66 690.583 L1305.22 690.583 L1305.78 690.583 L1306.34 690.583 L1306.9 690.583 L1307.46 690.583 L1308.02 690.583 L1308.58 690.583 L1309.14 690.583 L1309.7 690.583 L1310.26 690.583 L1310.82 690.583 L1311.38 690.583 L1311.93 690.583 L1312.49 690.583 L1313.05 690.583 L1313.61 690.583 L1314.17 690.583 L1314.73 690.583 L1315.29 690.583 L1315.85 690.583 L1316.41 690.583 L1316.97 690.583 L1317.53 690.583 L1318.09 690.583 L1318.65 690.583 L1319.2 690.583 L1319.76 690.583 L1320.32 690.583 L1320.88 690.583 L1321.44 690.583 L1322 690.583 L1322.56 690.583 L1323.12 690.583 L1323.68 690.583 L1324.24 690.583 L1324.8 690.583 L1325.36 690.583 L1325.92 690.583 L1326.47 690.583 L1327.03 690.583 L1327.59 690.583 L1328.15 690.583 L1328.71 690.583 L1329.27 690.583 L1329.83 690.583 L1330.39 690.583 L1330.95 690.583 L1331.51 690.583 L1332.07 690.583 L1332.63 690.583 L1333.19 690.583 L1333.75 690.583 L1334.3 690.583 L1334.86 690.583 L1335.42 690.583 L1335.98 690.583 L1336.54 690.583 L1337.1 690.583 L1337.66 690.583 L1338.22 690.583 L1338.78 690.583 L1339.34 690.583 L1339.9 690.583 L1340.46 690.583 L1341.02 690.583 L1341.57 690.583 L1342.13 690.583 L1342.69 690.583 L1343.25 690.583 L1343.81 690.583 L1344.37 690.583 L1344.93 690.583 L1345.49 690.583 L1346.05 690.583 L1346.61 690.583 L1347.17 690.583 L1347.73 690.583 L1348.29 690.583 L1348.84 690.583 L1349.4 690.583 L1349.96 690.583 L1350.52 690.583 L1351.08 690.583 L1351.64 690.583 L1352.2 690.583 L1352.76 690.583 L1353.32 690.583 L1353.88 690.583 L1354.44 690.583 L1355 690.583 L1355.56 690.583 L1356.12 690.583 L1356.67 690.583 L1357.23 690.583 L1357.79 690.583 L1358.35 690.583 L1358.91 690.583 L1359.47 690.583 L1360.03 690.583 L1360.59 690.583 L1361.15 690.583 L1361.71 690.583 L1362.27 690.583 L1362.83 690.583 L1363.39 690.583 L1363.94 690.583 L1364.5 690.583 L1365.06 690.583 L1365.62 690.583 L1366.18 690.583 L1366.74 690.583 L1367.3 690.583 L1367.86 690.583 L1368.42 690.583 L1368.98 690.583 L1369.54 690.583 L1370.1 690.583 L1370.66 690.583 L1371.21 690.583 L1371.77 690.583 L1372.33 690.583 L1372.89 690.583 L1373.45 690.583 L1374.01 690.583 L1374.57 690.583 L1375.13 690.583 L1375.69 690.583 L1376.25 690.583 L1376.81 690.583 L1377.37 690.583 L1377.93 690.583 L1378.49 690.583 L1379.04 690.583 L1379.6 690.583 L1380.16 690.583 L1380.72 690.583 L1381.28 690.583 L1381.84 690.583 L1382.4 690.583 L1382.96 690.583 L1383.52 690.583 L1384.08 690.583 L1384.64 690.583 L1385.2 690.583 L1385.76 690.583 L1386.31 690.583 L1386.87 690.583 L1387.43 690.583 L1387.99 690.583 L1388.55 690.583 L1389.11 690.583 L1389.67 690.583 L1390.23 690.583 L1390.79 690.583 L1391.35 690.583 L1391.91 690.583 L1392.47 690.583 L1393.03 690.583 L1393.58 690.583 L1394.14 690.583 L1394.7 690.583 L1395.26 690.583 L1395.82 690.583 L1396.38 690.583 L1396.94 690.583 L1397.5 690.583 L1398.06 690.583 L1398.62 690.583 L1399.18 690.583 L1399.74 690.583 L1400.3 690.583 L1400.86 690.583 L1401.41 690.583 L1401.97 690.583 L1402.53 690.583 L1403.09 690.583 L1403.65 690.583 L1404.21 690.583 L1404.77 690.583 L1405.33 690.583 L1405.89 690.583 L1406.45 690.583 L1407.01 690.583 L1407.57 690.583 L1408.13 690.583 L1408.68 690.583 L1409.24 690.583 L1409.8 690.583 L1410.36 690.583 L1410.92 690.583 L1411.48 690.583 L1412.04 690.583 L1412.6 690.583 L1413.16 690.583 L1413.72 690.583 L1414.28 690.583 L1414.84 690.583 L1415.4 690.583 L1415.95 690.583 L1416.51 690.583 L1417.07 690.583 L1417.63 690.583 L1418.19 690.583 L1418.75 690.583 L1419.31 690.583 L1419.87 690.583 L1420.43 690.583 L1420.99 690.583 L1421.55 690.583 L1422.11 690.583 L1422.67 690.583 L1423.23 690.583 L1423.78 690.583 L1424.34 690.583 L1424.9 690.583 L1425.46 690.583 L1426.02 690.583 L1426.58 690.583 L1427.14 690.583 L1427.7 690.583 L1428.26 690.583 L1428.82 690.583 L1429.38 690.583 L1429.94 690.583 L1430.5 690.583 L1431.05 690.583 L1431.61 690.583 L1432.17 690.583 L1432.73 690.583 L1433.29 690.583 L1433.85 690.583 L1434.41 690.583 L1434.97 690.583 L1435.53 690.583 L1436.09 690.583 L1436.65 690.583 L1437.21 690.583 L1437.77 690.583 L1438.33 690.583 L1438.88 690.583 L1439.44 690.583 L1440 690.583 L1440.56 690.583 L1441.12 690.583 L1441.68 690.583 L1442.24 690.583 L1442.8 690.583 L1443.36 690.583 L1443.92 690.583 L1444.48 690.583 L1445.04 690.583 L1445.6 690.583 L1446.15 690.583 L1446.71 690.583 L1447.27 690.583 L1447.83 690.583 L1448.39 690.583 L1448.95 690.583 L1449.51 690.583 L1450.07 690.583 L1450.63 690.583 L1451.19 690.583 L1451.75 690.583 L1452.31 690.583 L1452.87 690.583 L1453.42 690.583 L1453.98 690.583 L1454.54 690.583 L1455.1 690.583 L1455.66 690.583 L1456.22 690.583 L1456.78 690.583 L1457.34 690.583 L1457.9 690.583 L1458.46 690.583 L1459.02 690.583 L1459.58 690.583 L1460.14 690.583 L1460.7 690.583 L1461.25 690.583 L1461.81 690.583 L1462.37 690.583 L1462.93 690.583 L1463.49 690.583 L1464.05 690.583 L1464.61 690.583 L1465.17 690.583 L1465.73 690.583 L1466.29 690.583 L1466.85 690.583 L1467.41 690.583 L1467.97 690.583 L1468.52 690.583 L1469.08 690.583 L1469.64 690.583 L1470.2 690.583 L1470.76 690.583 L1471.32 690.583 L1471.88 690.583 L1472.44 690.583 L1473 690.583 L1473.56 690.583 L1474.12 690.583 L1474.68 690.583 L1475.24 690.583 L1475.79 690.583 L1476.35 690.583 L1476.91 690.583 L1477.47 690.583 L1478.03 690.583 L1478.59 690.583 L1479.15 690.583 L1479.71 690.583 L1480.27 690.583 L1480.83 690.583 L1481.39 690.583 L1481.95 690.583 L1482.51 690.583 L1483.07 690.583 L1483.62 690.583 L1484.18 690.583 L1484.74 690.583 L1485.3 690.583 L1485.86 690.583 L1486.42 690.583 L1486.98 690.583 L1487.54 690.583 L1488.1 690.583 L1488.66 690.583 L1489.22 690.583 L1489.78 690.583 L1490.34 690.583 L1490.89 690.583 L1491.45 690.583 L1492.01 690.583 L1492.57 690.583 L1493.13 690.583 L1493.69 690.583 L1494.25 690.583 L1494.81 690.583 L1495.37 690.583 L1495.93 690.583 L1496.49 690.583 L1497.05 690.583 L1497.61 690.583 L1498.16 690.583 L1498.72 690.583 L1499.28 690.583 L1499.84 690.583 L1500.4 690.583 L1500.96 690.583 L1501.52 690.583 L1502.08 690.583 L1502.64 690.583 L1503.2 690.583 L1503.76 690.583 L1504.32 690.583 L1504.88 690.583 L1505.44 690.583 L1505.99 690.583 L1506.55 690.583 L1507.11 690.583 L1507.67 690.583 L1508.23 690.583 L1508.79 690.583 L1509.35 690.583 L1509.91 690.583 L1510.47 690.583 L1511.03 690.583 L1511.59 690.583 L1512.15 690.583 L1512.71 690.583 L1513.26 690.583 L1513.82 690.583 L1514.38 690.583 L1514.94 690.583 L1515.5 690.583 L1516.06 690.583 L1516.62 690.583 L1517.18 690.583 L1517.74 690.583 L1518.3 690.583 L1518.86 690.583 L1519.42 690.583 L1519.98 690.583 L1520.53 690.583 L1521.09 690.583 L1521.65 690.583 L1522.21 690.583 L1522.77 690.583 L1523.33 690.583 L1523.89 690.583 L1524.45 690.583 L1525.01 690.583 L1525.57 690.583 L1526.13 690.583 L1526.69 690.583 L1527.25 690.583 L1527.81 690.583 L1528.36 690.583 L1528.92 690.583 L1529.48 690.583 L1530.04 690.583 L1530.6 690.583 L1531.16 690.583 L1531.72 690.583 L1532.28 690.583 L1532.84 690.583 L1533.4 690.583 L1533.96 690.583 L1534.52 690.583 L1535.08 690.583 L1535.63 690.583 L1536.19 690.583 L1536.75 690.583 L1537.31 690.583 L1537.87 690.583 L1538.43 690.583 L1538.99 690.583 L1539.55 690.583 L1540.11 690.583 L1540.67 690.583 L1541.23 690.583 L1541.79 690.583 L1542.35 690.583 L1542.9 690.583 L1543.46 690.583 L1544.02 690.583 L1544.58 690.583 L1545.14 690.583 L1545.7 690.583 L1546.26 690.583 L1546.82 690.583 L1547.38 690.583 L1547.94 690.583 L1548.5 690.583 L1549.06 690.583 L1549.62 690.583 L1550.18 690.583 L1550.73 690.583 L1551.29 690.583 L1551.85 690.583 L1552.41 690.583 L1552.97 690.583 L1553.53 690.583 L1554.09 690.583 L1554.65 690.583 L1555.21 690.583 L1555.77 690.583 L1556.33 690.583 L1556.89 690.583 L1557.45 690.583 L1558 690.583 L1558.56 690.583 L1559.12 690.583 L1559.68 690.583 L1560.24 690.583 L1560.8 690.583 L1561.36 690.583 L1561.92 690.583 L1562.48 690.583 L1563.04 690.583 L1563.6 690.583 L1564.16 690.583 L1564.72 690.583 L1565.28 690.583 L1565.83 690.583 L1566.39 690.583 L1566.95 690.583 L1567.51 690.583 L1568.07 690.583 L1568.63 690.583 L1569.19 690.583 L1569.75 690.583 L1570.31 690.583 L1570.87 690.583 L1571.43 690.583 L1571.99 690.583 L1572.55 690.583 L1573.1 690.583 L1573.66 690.583 L1574.22 690.583 L1574.78 690.583 L1575.34 690.583 L1575.9 690.583 L1576.46 690.583 L1577.02 690.583 L1577.58 690.583 L1578.14 690.583 L1578.7 690.583 L1579.26 690.583 L1579.82 690.583 L1580.37 690.583 L1580.93 690.583 L1581.49 690.583 L1582.05 690.583 L1582.61 690.583 L1583.17 690.583 L1583.73 690.583 L1584.29 690.583 L1584.85 690.583 L1585.41 690.583 L1585.97 690.583 L1586.53 690.583 L1587.09 690.583 L1587.65 690.583 L1588.2 690.583 L1588.76 690.583 L1589.32 690.583 L1589.88 690.583 L1590.44 690.583 L1591 690.583 L1591.56 690.583 L1592.12 690.583 L1592.68 690.583 L1593.24 690.583 L1593.8 690.583 L1594.36 690.583 L1594.92 690.583 L1595.47 690.583 L1596.03 690.583 L1596.59 690.583 L1597.15 690.583 L1597.71 690.583 L1598.27 690.583 L1598.83 690.583 L1599.39 690.583 L1599.95 690.583 L1600.51 690.583 L1601.07 690.583 L1601.63 690.583 L1602.19 690.583 L1602.74 690.583 L1603.3 690.583 L1603.86 690.583 L1604.42 690.583 L1604.98 690.583 L1605.54 690.583 L1606.1 690.583 L1606.66 690.583 L1607.22 690.583 L1607.78 690.583 L1608.34 690.583 L1608.9 690.583 L1609.46 690.583 L1610.02 690.583 L1610.57 690.583 L1611.13 690.583 L1611.69 690.583 L1612.25 690.583 L1612.81 690.583 L1613.37 690.583 L1613.93 690.583 L1614.49 690.583 L1615.05 690.583 L1615.61 690.583 L1616.17 690.583 L1616.73 690.583 L1617.29 690.583 L1617.84 690.583 L1618.4 690.583 L1618.96 690.583 L1619.52 690.583 L1620.08 690.583 L1620.64 690.583 L1621.2 690.583 L1621.76 690.583 L1622.32 690.583 L1622.88 690.583 L1623.44 690.583 L1624 690.583 L1624.56 690.583 L1625.11 690.583 L1625.67 690.583 L1626.23 690.583 L1626.79 690.583 L1627.35 690.583 L1627.91 690.583 L1628.47 690.583 L1629.03 690.583 L1629.59 690.583 L1630.15 690.583 L1630.71 690.583 L1631.27 690.583 L1631.83 690.583 L1632.39 690.583 L1632.94 690.583 L1633.5 690.583 L1634.06 690.583 L1634.62 690.583 L1635.18 690.583 L1635.74 690.583 L1636.3 690.583 L1636.86 690.583 L1637.42 690.583 L1637.98 690.583 L1638.54 690.583 L1639.1 690.583 L1639.66 690.583 L1640.21 690.583 L1640.77 690.583 L1641.33 690.583 L1641.89 690.583 L1642.45 690.583 L1643.01 690.583 L1643.57 690.583 L1644.13 690.583 L1644.69 690.583 L1645.25 690.583 L1645.81 690.583 L1646.37 690.583 L1646.93 690.583 L1647.48 690.583 L1648.04 690.583 L1648.6 690.583 L1649.16 690.583 L1649.72 690.583 L1650.28 690.583 L1650.84 690.583 L1651.4 690.583 L1651.96 690.583 L1652.52 690.583 L1653.08 690.583 L1653.64 690.583 L1654.2 690.583 L1654.76 690.583 L1655.31 690.583 L1655.87 690.583 L1656.43 690.583 L1656.99 690.583 L1657.55 690.583 L1658.11 690.583 L1658.67 690.583 L1659.23 690.583 L1659.79 690.583 L1660.35 690.583 L1660.91 690.583 L1661.47 690.583 L1662.03 690.583 L1662.58 690.583 L1663.14 690.583 L1663.7 690.583 L1664.26 690.583 L1664.82 690.583 L1665.38 690.583 L1665.94 690.583 L1666.5 690.583 L1667.06 690.583 L1667.62 690.583 L1668.18 690.583 L1668.74 690.583 L1669.3 690.583 L1669.85 690.583 L1670.41 690.583 L1670.97 690.583 L1671.53 690.583 L1672.09 690.583 L1672.65 690.583 L1673.21 690.583 L1673.77 690.583 L1674.33 690.583 L1674.89 690.583 L1675.45 690.583 L1676.01 690.583 L1676.57 690.583 L1677.13 690.583 L1677.68 690.583 L1678.24 690.583 L1678.8 690.583 L1679.36 690.583 L1679.92 690.583 L1680.48 690.583 L1681.04 690.583 L1681.6 690.583 L1682.16 690.583 L1682.72 690.583 L1683.28 690.583 L1683.84 690.583 L1684.4 690.583 L1684.95 690.583 L1685.51 690.583 L1686.07 690.583 L1686.63 690.583 L1687.19 690.583 L1687.75 690.583 L1688.31 690.583 L1688.87 690.583 L1689.43 690.583 L1689.99 690.583 L1690.55 690.583 L1691.11 690.583 L1691.67 690.583 L1692.23 690.583 L1692.78 690.583 L1693.34 690.583 L1693.9 690.583 L1694.46 690.583 L1695.02 690.583 L1695.58 690.583 L1696.14 690.583 L1696.7 690.583 L1697.26 690.583 L1697.82 690.583 L1698.38 690.583 L1698.94 690.583 L1699.5 690.583 L1700.05 690.583 L1700.61 690.583 L1701.17 690.583 L1701.73 690.583 L1702.29 690.583 L1702.85 690.583 L1703.41 690.583 L1703.97 690.583 L1704.53 690.583 L1705.09 690.583 L1705.65 690.583 L1706.21 690.583 L1706.77 690.583 L1707.32 690.583 L1707.88 690.583 L1708.44 690.583 L1709 690.583 L1709.56 690.583 L1710.12 690.583 L1710.68 690.583 L1711.24 690.583 L1711.8 690.583 L1712.36 690.583 L1712.92 690.583 L1713.48 690.583 L1714.04 690.583 L1714.6 690.583 L1715.15 690.583 L1715.71 690.583 L1716.27 690.583 L1716.83 690.583 L1717.39 690.583 L1717.95 690.583 L1718.51 690.583 L1719.07 690.583 L1719.63 690.583 L1720.19 690.583 L1720.75 690.583 L1721.31 690.583 L1721.87 690.583 L1722.42 690.583 L1722.98 690.583 L1723.54 690.583 L1724.1 690.583 L1724.66 690.583 L1725.22 690.583 L1725.78 690.583 L1726.34 690.583 L1726.9 690.583 L1727.46 690.583 L1728.02 690.583 L1728.58 690.583 L1729.14 690.583 L1729.69 690.583 L1730.25 690.583 L1730.81 690.583 L1731.37 690.583 L1731.93 690.583 L1732.49 690.583 L1733.05 690.583 L1733.61 690.583 L1734.17 690.583 L1734.73 690.583 L1735.29 690.583 L1735.85 690.583 L1736.41 690.583 L1736.97 690.583 L1737.52 690.583 L1738.08 690.583 L1738.64 690.583 L1739.2 690.583 L1739.76 690.583 L1740.32 690.583 L1740.88 690.583 L1741.44 690.583 L1742 690.583 L1742.56 690.583 L1743.12 690.583 L1743.68 690.583 L1744.24 690.583 L1744.79 690.583 L1745.35 690.583 L1745.91 690.583 L1746.47 690.583 L1747.03 690.583 L1747.59 690.583 L1748.15 690.583 L1748.71 690.583 L1749.27 690.583 L1749.83 690.583 L1750.39 690.583 L1750.95 690.583 L1751.51 690.583 L1752.06 690.583 L1752.62 690.583 L1753.18 690.583 L1753.74 690.583 L1754.3 690.583 L1754.86 690.583 L1755.42 690.583 L1755.98 690.583 L1756.54 690.583 L1757.1 690.583 L1757.66 690.583 L1758.22 690.583 L1758.78 690.583 L1759.34 690.583 L1759.89 690.583 L1760.45 690.583 L1761.01 690.583 L1761.57 690.583 L1762.13 690.583 L1762.69 690.583 L1763.25 690.583 L1763.81 690.583 L1764.37 690.583 L1764.93 690.583 L1765.49 690.583 L1766.05 690.583 L1766.61 690.583 L1767.16 690.583 L1767.72 690.583 L1768.28 690.583 L1768.84 690.583 L1769.4 690.583 L1769.96 690.583 L1770.52 690.583 L1771.08 690.583 L1771.64 690.583 L1772.2 690.583 L1772.76 690.583 L1773.32 690.583 L1773.88 690.583 L1774.43 690.583 L1774.99 690.583 L1775.55 690.583 L1776.11 690.583 L1776.67 690.583 L1777.23 690.583 L1777.79 690.583 L1778.35 690.583 L1778.91 690.583 L1779.47 690.583 L1780.03 690.583 L1780.59 690.583 L1781.15 690.583 L1781.71 690.583 L1782.26 690.583 L1782.82 690.583 L1783.38 690.583 L1783.94 690.583 L1784.5 690.583 L1785.06 690.583 L1785.62 690.583 L1786.18 690.583 L1786.74 690.583 L1787.3 690.583 L1787.86 690.583 L1788.42 690.583 L1788.98 690.583 L1789.53 690.583 L1790.09 690.583 L1790.65 690.583 L1791.21 690.583 L1791.77 690.583 L1792.33 690.583 L1792.89 690.583 L1793.45 690.583 L1794.01 690.583 L1794.57 690.583 L1795.13 690.583 L1795.69 690.583 L1796.25 690.583 L1796.8 690.583 L1797.36 690.583 L1797.92 690.583 L1798.48 690.583 L1799.04 690.583 L1799.6 690.583 L1800.16 690.583 L1800.72 690.583 L1801.28 690.583 L1801.84 690.583 L1802.4 690.583 L1802.96 690.583 L1803.52 690.583 L1804.08 690.583 L1804.63 690.583 L1805.19 690.583 L1805.75 690.583 L1806.31 690.583 L1806.87 690.583 L1807.43 690.583 L1807.99 690.583 L1808.55 690.583 L1809.11 690.583 L1809.67 690.583 L1810.23 690.583 L1810.79 690.583 L1811.35 690.583 L1811.9 690.583 L1812.46 690.583 L1813.02 690.583 L1813.58 690.583 L1814.14 690.583 L1814.7 690.583 L1815.26 690.583 L1815.82 690.583 L1816.38 690.583 L1816.94 690.583 L1817.5 690.583 L1818.06 690.583 L1818.62 690.583 L1819.18 690.583 L1819.73 690.583 L1820.29 690.583 L1820.85 690.583 L1821.41 690.583 L1821.97 690.583 L1822.53 690.583 L1823.09 690.583 L1823.65 690.583 L1824.21 690.583 L1824.77 690.583 L1825.33 690.583 L1825.89 690.583 L1826.45 690.583 L1827 690.583 L1827.56 690.583 L1828.12 690.583 L1828.68 690.583 L1829.24 690.583 L1829.8 690.583 L1830.36 690.583 L1830.92 690.583 L1831.48 690.583 L1832.04 690.583 L1832.6 690.583 L1833.16 690.583 L1833.72 690.583 L1834.27 690.583 L1834.83 690.583 L1835.39 690.583 L1835.95 690.583 L1836.51 690.583 L1837.07 690.583 L1837.63 690.583 L1838.19 690.583 L1838.19 680.034 L1837.63 680.034 L1837.07 680.034 L1836.51 680.034 L1835.95 680.034 L1835.39 680.034 L1834.83 680.034 L1834.27 680.034 L1833.72 680.034 L1833.16 680.034 L1832.6 680.034 L1832.04 680.034 L1831.48 680.034 L1830.92 680.034 L1830.36 680.034 L1829.8 680.034 L1829.24 680.034 L1828.68 680.034 L1828.12 680.034 L1827.56 680.034 L1827 680.034 L1826.45 680.034 L1825.89 680.034 L1825.33 680.034 L1824.77 680.034 L1824.21 680.034 L1823.65 680.034 L1823.09 680.034 L1822.53 680.034 L1821.97 680.034 L1821.41 680.034 L1820.85 680.034 L1820.29 680.034 L1819.73 680.034 L1819.18 680.034 L1818.62 680.034 L1818.06 680.034 L1817.5 680.034 L1816.94 680.034 L1816.38 680.034 L1815.82 680.034 L1815.26 680.034 L1814.7 680.034 L1814.14 680.034 L1813.58 680.034 L1813.02 680.034 L1812.46 680.034 L1811.9 680.034 L1811.35 680.034 L1810.79 680.034 L1810.23 680.034 L1809.67 680.034 L1809.11 680.034 L1808.55 680.034 L1807.99 680.034 L1807.43 680.034 L1806.87 680.034 L1806.31 680.034 L1805.75 680.034 L1805.19 680.034 L1804.63 680.034 L1804.08 680.034 L1803.52 680.034 L1802.96 680.034 L1802.4 680.034 L1801.84 680.034 L1801.28 680.034 L1800.72 680.034 L1800.16 680.034 L1799.6 680.034 L1799.04 680.034 L1798.48 680.034 L1797.92 680.034 L1797.36 680.034 L1796.8 680.034 L1796.25 680.034 L1795.69 680.034 L1795.13 680.034 L1794.57 680.034 L1794.01 680.034 L1793.45 680.034 L1792.89 680.034 L1792.33 680.034 L1791.77 680.034 L1791.21 680.034 L1790.65 680.034 L1790.09 680.034 L1789.53 680.034 L1788.98 680.034 L1788.42 680.034 L1787.86 680.034 L1787.3 680.034 L1786.74 680.034 L1786.18 680.034 L1785.62 680.034 L1785.06 680.034 L1784.5 680.034 L1783.94 680.034 L1783.38 680.034 L1782.82 680.034 L1782.26 680.034 L1781.71 680.034 L1781.15 680.034 L1780.59 680.034 L1780.03 680.034 L1779.47 680.034 L1778.91 680.034 L1778.35 680.034 L1777.79 680.034 L1777.23 680.034 L1776.67 680.034 L1776.11 680.034 L1775.55 680.034 L1774.99 680.034 L1774.43 680.034 L1773.88 680.034 L1773.32 680.034 L1772.76 680.034 L1772.2 680.034 L1771.64 680.034 L1771.08 680.034 L1770.52 680.034 L1769.96 680.034 L1769.4 680.034 L1768.84 680.034 L1768.28 680.034 L1767.72 680.034 L1767.16 680.034 L1766.61 680.034 L1766.05 680.034 L1765.49 680.034 L1764.93 680.034 L1764.37 680.034 L1763.81 680.034 L1763.25 680.034 L1762.69 680.034 L1762.13 680.034 L1761.57 680.034 L1761.01 680.034 L1760.45 680.034 L1759.89 680.034 L1759.34 680.034 L1758.78 680.034 L1758.22 680.034 L1757.66 680.034 L1757.1 680.034 L1756.54 680.034 L1755.98 680.034 L1755.42 680.034 L1754.86 680.034 L1754.3 680.034 L1753.74 680.034 L1753.18 680.034 L1752.62 680.034 L1752.06 680.034 L1751.51 680.034 L1750.95 680.034 L1750.39 680.034 L1749.83 680.034 L1749.27 680.034 L1748.71 680.034 L1748.15 680.034 L1747.59 680.034 L1747.03 680.034 L1746.47 680.034 L1745.91 680.034 L1745.35 680.034 L1744.79 680.034 L1744.24 680.034 L1743.68 680.034 L1743.12 680.034 L1742.56 680.034 L1742 680.034 L1741.44 680.034 L1740.88 680.034 L1740.32 680.034 L1739.76 680.034 L1739.2 680.034 L1738.64 680.034 L1738.08 680.034 L1737.52 680.034 L1736.97 680.034 L1736.41 680.034 L1735.85 680.034 L1735.29 680.034 L1734.73 680.034 L1734.17 680.034 L1733.61 680.034 L1733.05 680.034 L1732.49 680.034 L1731.93 680.034 L1731.37 680.034 L1730.81 680.034 L1730.25 680.034 L1729.69 680.034 L1729.14 680.034 L1728.58 680.034 L1728.02 680.034 L1727.46 680.034 L1726.9 680.034 L1726.34 680.034 L1725.78 680.034 L1725.22 680.034 L1724.66 680.034 L1724.1 680.034 L1723.54 680.034 L1722.98 680.034 L1722.42 680.034 L1721.87 680.034 L1721.31 680.034 L1720.75 680.034 L1720.19 680.034 L1719.63 680.034 L1719.07 680.034 L1718.51 680.034 L1717.95 680.034 L1717.39 680.034 L1716.83 680.034 L1716.27 680.034 L1715.71 680.034 L1715.15 680.034 L1714.6 680.034 L1714.04 680.034 L1713.48 680.034 L1712.92 680.034 L1712.36 680.034 L1711.8 680.034 L1711.24 680.034 L1710.68 680.034 L1710.12 680.034 L1709.56 680.034 L1709 680.034 L1708.44 680.034 L1707.88 680.034 L1707.32 680.034 L1706.77 680.034 L1706.21 680.034 L1705.65 680.034 L1705.09 680.034 L1704.53 680.034 L1703.97 680.034 L1703.41 680.034 L1702.85 680.034 L1702.29 680.034 L1701.73 680.034 L1701.17 680.034 L1700.61 680.034 L1700.05 680.034 L1699.5 680.034 L1698.94 680.034 L1698.38 680.034 L1697.82 680.034 L1697.26 680.034 L1696.7 680.034 L1696.14 680.034 L1695.58 680.034 L1695.02 680.034 L1694.46 680.034 L1693.9 680.034 L1693.34 680.034 L1692.78 680.034 L1692.23 680.034 L1691.67 680.034 L1691.11 680.034 L1690.55 680.034 L1689.99 680.034 L1689.43 680.034 L1688.87 680.034 L1688.31 680.034 L1687.75 680.034 L1687.19 680.034 L1686.63 680.034 L1686.07 680.034 L1685.51 680.034 L1684.95 680.034 L1684.4 680.034 L1683.84 680.034 L1683.28 680.034 L1682.72 680.034 L1682.16 680.034 L1681.6 680.034 L1681.04 680.034 L1680.48 680.034 L1679.92 680.034 L1679.36 680.034 L1678.8 680.034 L1678.24 680.034 L1677.68 680.034 L1677.13 680.034 L1676.57 680.034 L1676.01 680.034 L1675.45 680.034 L1674.89 680.034 L1674.33 680.034 L1673.77 680.034 L1673.21 680.034 L1672.65 680.034 L1672.09 680.034 L1671.53 680.034 L1670.97 680.034 L1670.41 680.034 L1669.85 680.034 L1669.3 680.034 L1668.74 680.034 L1668.18 680.034 L1667.62 680.034 L1667.06 680.034 L1666.5 680.034 L1665.94 680.034 L1665.38 680.034 L1664.82 680.034 L1664.26 680.034 L1663.7 680.034 L1663.14 680.034 L1662.58 680.034 L1662.03 680.034 L1661.47 680.034 L1660.91 680.034 L1660.35 680.034 L1659.79 680.034 L1659.23 680.034 L1658.67 680.034 L1658.11 680.034 L1657.55 680.034 L1656.99 680.034 L1656.43 680.034 L1655.87 680.034 L1655.31 680.034 L1654.76 680.034 L1654.2 680.034 L1653.64 680.034 L1653.08 680.034 L1652.52 680.034 L1651.96 680.034 L1651.4 680.034 L1650.84 680.034 L1650.28 680.034 L1649.72 680.034 L1649.16 680.034 L1648.6 680.034 L1648.04 680.034 L1647.48 680.034 L1646.93 680.034 L1646.37 680.034 L1645.81 680.034 L1645.25 680.034 L1644.69 680.034 L1644.13 680.034 L1643.57 680.034 L1643.01 680.034 L1642.45 680.034 L1641.89 680.034 L1641.33 680.034 L1640.77 680.034 L1640.21 680.034 L1639.66 680.034 L1639.1 680.034 L1638.54 680.034 L1637.98 680.034 L1637.42 680.034 L1636.86 680.034 L1636.3 680.034 L1635.74 680.034 L1635.18 680.034 L1634.62 680.034 L1634.06 680.034 L1633.5 680.034 L1632.94 680.034 L1632.39 680.034 L1631.83 680.034 L1631.27 680.034 L1630.71 680.034 L1630.15 680.034 L1629.59 680.034 L1629.03 680.034 L1628.47 680.034 L1627.91 680.034 L1627.35 680.034 L1626.79 680.034 L1626.23 680.034 L1625.67 680.034 L1625.11 680.034 L1624.56 680.034 L1624 680.034 L1623.44 680.034 L1622.88 680.034 L1622.32 680.034 L1621.76 680.034 L1621.2 680.034 L1620.64 680.034 L1620.08 680.034 L1619.52 680.034 L1618.96 680.034 L1618.4 680.034 L1617.84 680.034 L1617.29 680.034 L1616.73 680.034 L1616.17 680.034 L1615.61 680.034 L1615.05 680.034 L1614.49 680.034 L1613.93 680.034 L1613.37 680.034 L1612.81 680.034 L1612.25 680.034 L1611.69 680.034 L1611.13 680.034 L1610.57 680.034 L1610.02 680.034 L1609.46 680.034 L1608.9 680.034 L1608.34 680.034 L1607.78 680.034 L1607.22 680.034 L1606.66 680.034 L1606.1 680.034 L1605.54 680.034 L1604.98 680.034 L1604.42 680.034 L1603.86 680.034 L1603.3 680.034 L1602.74 680.034 L1602.19 680.034 L1601.63 680.034 L1601.07 680.034 L1600.51 680.034 L1599.95 680.034 L1599.39 680.034 L1598.83 680.034 L1598.27 680.034 L1597.71 680.034 L1597.15 680.034 L1596.59 680.034 L1596.03 680.034 L1595.47 680.034 L1594.92 680.034 L1594.36 680.034 L1593.8 680.034 L1593.24 680.034 L1592.68 680.034 L1592.12 680.034 L1591.56 680.034 L1591 680.034 L1590.44 680.034 L1589.88 680.034 L1589.32 680.034 L1588.76 680.034 L1588.2 680.034 L1587.65 680.034 L1587.09 680.034 L1586.53 680.034 L1585.97 680.034 L1585.41 680.034 L1584.85 680.034 L1584.29 680.034 L1583.73 680.034 L1583.17 680.034 L1582.61 680.034 L1582.05 680.034 L1581.49 680.034 L1580.93 680.034 L1580.37 680.034 L1579.82 680.034 L1579.26 680.034 L1578.7 680.034 L1578.14 680.034 L1577.58 680.034 L1577.02 680.034 L1576.46 680.034 L1575.9 680.034 L1575.34 680.034 L1574.78 680.034 L1574.22 680.034 L1573.66 680.034 L1573.1 680.034 L1572.55 680.034 L1571.99 680.034 L1571.43 680.034 L1570.87 680.034 L1570.31 680.034 L1569.75 680.034 L1569.19 680.034 L1568.63 680.034 L1568.07 680.034 L1567.51 680.034 L1566.95 680.034 L1566.39 680.034 L1565.83 680.034 L1565.28 680.034 L1564.72 680.034 L1564.16 680.034 L1563.6 680.034 L1563.04 680.034 L1562.48 680.034 L1561.92 680.034 L1561.36 680.034 L1560.8 680.034 L1560.24 680.034 L1559.68 680.034 L1559.12 680.034 L1558.56 680.034 L1558 680.034 L1557.45 680.034 L1556.89 680.034 L1556.33 680.034 L1555.77 680.034 L1555.21 680.034 L1554.65 680.034 L1554.09 680.034 L1553.53 680.034 L1552.97 680.034 L1552.41 680.034 L1551.85 680.034 L1551.29 680.034 L1550.73 680.034 L1550.18 680.034 L1549.62 680.034 L1549.06 680.034 L1548.5 680.034 L1547.94 680.034 L1547.38 680.034 L1546.82 680.034 L1546.26 680.034 L1545.7 680.034 L1545.14 680.034 L1544.58 680.034 L1544.02 680.034 L1543.46 680.034 L1542.9 680.034 L1542.35 680.034 L1541.79 680.034 L1541.23 680.034 L1540.67 680.034 L1540.11 680.034 L1539.55 680.034 L1538.99 680.034 L1538.43 680.034 L1537.87 680.034 L1537.31 680.034 L1536.75 680.034 L1536.19 680.034 L1535.63 680.034 L1535.08 680.034 L1534.52 680.034 L1533.96 680.034 L1533.4 680.034 L1532.84 680.034 L1532.28 680.034 L1531.72 680.034 L1531.16 680.034 L1530.6 680.034 L1530.04 680.034 L1529.48 680.034 L1528.92 680.034 L1528.36 680.034 L1527.81 680.034 L1527.25 680.034 L1526.69 680.034 L1526.13 680.034 L1525.57 680.034 L1525.01 680.034 L1524.45 680.034 L1523.89 680.034 L1523.33 680.034 L1522.77 680.034 L1522.21 680.034 L1521.65 680.034 L1521.09 680.034 L1520.53 680.034 L1519.98 680.034 L1519.42 680.034 L1518.86 680.034 L1518.3 680.034 L1517.74 680.034 L1517.18 680.034 L1516.62 680.034 L1516.06 680.034 L1515.5 680.034 L1514.94 680.034 L1514.38 680.034 L1513.82 680.034 L1513.26 680.034 L1512.71 680.034 L1512.15 680.034 L1511.59 680.034 L1511.03 680.034 L1510.47 680.034 L1509.91 680.034 L1509.35 680.034 L1508.79 680.034 L1508.23 680.034 L1507.67 680.034 L1507.11 680.034 L1506.55 680.034 L1505.99 680.034 L1505.44 680.034 L1504.88 680.034 L1504.32 680.034 L1503.76 680.034 L1503.2 680.034 L1502.64 680.034 L1502.08 680.034 L1501.52 680.034 L1500.96 680.034 L1500.4 680.034 L1499.84 680.034 L1499.28 680.034 L1498.72 680.034 L1498.16 680.034 L1497.61 680.034 L1497.05 680.034 L1496.49 680.034 L1495.93 680.034 L1495.37 680.034 L1494.81 680.034 L1494.25 680.034 L1493.69 680.034 L1493.13 680.034 L1492.57 680.034 L1492.01 680.034 L1491.45 680.034 L1490.89 680.034 L1490.34 680.034 L1489.78 680.034 L1489.22 680.034 L1488.66 680.034 L1488.1 680.034 L1487.54 680.034 L1486.98 680.034 L1486.42 680.034 L1485.86 680.034 L1485.3 680.034 L1484.74 680.034 L1484.18 680.034 L1483.62 680.034 L1483.07 680.034 L1482.51 680.034 L1481.95 680.034 L1481.39 680.034 L1480.83 680.034 L1480.27 680.034 L1479.71 680.034 L1479.15 680.034 L1478.59 680.034 L1478.03 680.034 L1477.47 680.034 L1476.91 680.034 L1476.35 680.034 L1475.79 680.034 L1475.24 680.034 L1474.68 680.034 L1474.12 680.034 L1473.56 680.034 L1473 680.034 L1472.44 680.034 L1471.88 680.034 L1471.32 680.034 L1470.76 680.034 L1470.2 680.034 L1469.64 680.034 L1469.08 680.034 L1468.52 680.034 L1467.97 680.034 L1467.41 680.034 L1466.85 680.034 L1466.29 680.034 L1465.73 680.034 L1465.17 680.034 L1464.61 680.034 L1464.05 680.034 L1463.49 680.034 L1462.93 680.034 L1462.37 680.034 L1461.81 680.034 L1461.25 680.034 L1460.7 680.034 L1460.14 680.034 L1459.58 680.034 L1459.02 680.034 L1458.46 680.034 L1457.9 680.034 L1457.34 680.034 L1456.78 680.034 L1456.22 680.034 L1455.66 680.034 L1455.1 680.034 L1454.54 680.034 L1453.98 680.034 L1453.42 680.034 L1452.87 680.034 L1452.31 680.034 L1451.75 680.034 L1451.19 680.034 L1450.63 680.034 L1450.07 680.034 L1449.51 680.034 L1448.95 680.034 L1448.39 680.034 L1447.83 680.034 L1447.27 680.034 L1446.71 680.034 L1446.15 680.034 L1445.6 680.034 L1445.04 680.034 L1444.48 680.034 L1443.92 680.034 L1443.36 680.034 L1442.8 680.034 L1442.24 680.034 L1441.68 680.034 L1441.12 680.034 L1440.56 680.034 L1440 680.034 L1439.44 680.034 L1438.88 680.034 L1438.33 680.034 L1437.77 680.034 L1437.21 680.034 L1436.65 680.034 L1436.09 680.034 L1435.53 680.034 L1434.97 680.034 L1434.41 680.034 L1433.85 680.034 L1433.29 680.034 L1432.73 680.034 L1432.17 680.034 L1431.61 680.034 L1431.05 680.034 L1430.5 680.034 L1429.94 680.034 L1429.38 680.034 L1428.82 680.034 L1428.26 680.034 L1427.7 680.034 L1427.14 680.034 L1426.58 680.034 L1426.02 680.034 L1425.46 680.034 L1424.9 680.034 L1424.34 680.034 L1423.78 680.034 L1423.23 680.034 L1422.67 680.034 L1422.11 680.034 L1421.55 680.034 L1420.99 680.034 L1420.43 680.034 L1419.87 680.034 L1419.31 680.034 L1418.75 680.034 L1418.19 680.034 L1417.63 680.034 L1417.07 680.034 L1416.51 680.034 L1415.95 680.034 L1415.4 680.034 L1414.84 680.034 L1414.28 680.034 L1413.72 680.034 L1413.16 680.034 L1412.6 680.034 L1412.04 680.034 L1411.48 680.034 L1410.92 680.034 L1410.36 680.034 L1409.8 680.034 L1409.24 680.034 L1408.68 680.034 L1408.13 680.034 L1407.57 680.034 L1407.01 680.034 L1406.45 680.034 L1405.89 680.034 L1405.33 680.034 L1404.77 680.034 L1404.21 680.034 L1403.65 680.034 L1403.09 680.034 L1402.53 680.034 L1401.97 680.034 L1401.41 680.034 L1400.86 680.034 L1400.3 680.034 L1399.74 680.034 L1399.18 680.034 L1398.62 680.034 L1398.06 680.034 L1397.5 680.034 L1396.94 680.034 L1396.38 680.034 L1395.82 680.034 L1395.26 680.034 L1394.7 680.034 L1394.14 680.034 L1393.58 680.034 L1393.03 680.034 L1392.47 680.034 L1391.91 680.034 L1391.35 680.034 L1390.79 680.034 L1390.23 680.034 L1389.67 680.034 L1389.11 680.034 L1388.55 680.034 L1387.99 680.034 L1387.43 680.034 L1386.87 680.034 L1386.31 680.034 L1385.76 680.034 L1385.2 680.034 L1384.64 680.034 L1384.08 680.034 L1383.52 680.034 L1382.96 680.034 L1382.4 680.034 L1381.84 680.034 L1381.28 680.034 L1380.72 680.034 L1380.16 680.034 L1379.6 680.034 L1379.04 680.034 L1378.49 680.034 L1377.93 680.034 L1377.37 680.034 L1376.81 680.034 L1376.25 680.034 L1375.69 680.034 L1375.13 680.034 L1374.57 680.034 L1374.01 680.034 L1373.45 680.034 L1372.89 680.034 L1372.33 680.034 L1371.77 680.034 L1371.21 680.034 L1370.66 680.034 L1370.1 680.034 L1369.54 680.034 L1368.98 680.034 L1368.42 680.034 L1367.86 680.034 L1367.3 680.034 L1366.74 680.034 L1366.18 680.034 L1365.62 680.034 L1365.06 680.034 L1364.5 680.034 L1363.94 680.034 L1363.39 680.034 L1362.83 680.034 L1362.27 680.034 L1361.71 680.034 L1361.15 680.034 L1360.59 680.034 L1360.03 680.034 L1359.47 680.034 L1358.91 680.034 L1358.35 680.034 L1357.79 680.034 L1357.23 680.034 L1356.67 680.034 L1356.12 680.034 L1355.56 680.034 L1355 680.034 L1354.44 680.034 L1353.88 680.034 L1353.32 680.034 L1352.76 680.034 L1352.2 680.034 L1351.64 680.034 L1351.08 680.034 L1350.52 680.034 L1349.96 680.034 L1349.4 680.034 L1348.84 680.034 L1348.29 680.034 L1347.73 680.034 L1347.17 680.034 L1346.61 680.034 L1346.05 680.034 L1345.49 680.034 L1344.93 680.034 L1344.37 680.034 L1343.81 680.034 L1343.25 680.034 L1342.69 680.034 L1342.13 680.034 L1341.57 680.034 L1341.02 680.034 L1340.46 680.034 L1339.9 680.034 L1339.34 680.034 L1338.78 680.034 L1338.22 680.034 L1337.66 680.034 L1337.1 680.034 L1336.54 680.034 L1335.98 680.034 L1335.42 680.034 L1334.86 680.034 L1334.3 680.034 L1333.75 680.034 L1333.19 680.034 L1332.63 680.034 L1332.07 680.034 L1331.51 680.034 L1330.95 680.034 L1330.39 680.034 L1329.83 680.034 L1329.27 680.034 L1328.71 680.034 L1328.15 680.034 L1327.59 680.034 L1327.03 680.034 L1326.47 680.034 L1325.92 680.034 L1325.36 680.034 L1324.8 680.034 L1324.24 680.034 L1323.68 680.034 L1323.12 680.034 L1322.56 680.034 L1322 680.034 L1321.44 680.034 L1320.88 680.034 L1320.32 680.034 L1319.76 680.034 L1319.2 680.034 L1318.65 680.034 L1318.09 680.034 L1317.53 680.034 L1316.97 680.034 L1316.41 680.034 L1315.85 680.034 L1315.29 680.034 L1314.73 680.034 L1314.17 680.034 L1313.61 680.034 L1313.05 680.034 L1312.49 680.034 L1311.93 680.034 L1311.38 680.034 L1310.82 680.034 L1310.26 680.034 L1309.7 680.034 L1309.14 680.034 L1308.58 680.034 L1308.02 680.034 L1307.46 680.034 L1306.9 680.034 L1306.34 680.034 L1305.78 680.034 L1305.22 680.034 L1304.66 680.034 L1304.1 680.034 L1303.55 680.034 L1302.99 680.034 L1302.43 680.034 L1301.87 680.034 L1301.31 680.034 L1300.75 680.034 L1300.19 680.034 L1299.63 680.034 L1299.07 680.034 L1298.51 680.034 L1297.95 680.034 L1297.39 680.034 L1296.83 680.034 L1296.28 680.034 L1295.72 680.034 L1295.16 680.034 L1294.6 680.034 L1294.04 680.034 L1293.48 680.034 L1292.92 680.034 L1292.36 680.034 L1291.8 680.034 L1291.24 680.034 L1290.68 680.034 L1290.12 680.034 L1289.56 680.034 L1289 680.034 L1288.45 680.034 L1287.89 680.034 L1287.33 680.034 L1286.77 680.034 L1286.21 680.034 L1285.65 680.034 L1285.09 680.034 L1284.53 680.034 L1283.97 680.034 L1283.41 680.034 L1282.85 680.034 L1282.29 680.034 L1281.73 680.034 L1281.18 680.034 L1280.62 680.034 L1280.06 680.034 L1279.5 680.034 L1278.94 680.034 L1278.38 680.034 L1277.82 680.034 L1277.26 680.034 L1276.7 680.034 L1276.14 680.034 L1275.58 680.034 L1275.02 680.034 L1274.46 680.034 L1273.91 680.034 L1273.35 680.034 L1272.79 680.034 L1272.23 680.034 L1271.67 680.034 L1271.11 680.034 L1270.55 680.034 L1269.99 680.034 L1269.43 680.034 L1268.87 680.034 L1268.31 680.034 L1267.75 680.034 L1267.19 680.034 L1266.63 680.034 L1266.08 680.034 L1265.52 680.034 L1264.96 680.034 L1264.4 680.034 L1263.84 680.034 L1263.28 680.034 L1262.72 680.034 L1262.16 680.034 L1261.6 680.034 L1261.04 680.034 L1260.48 680.034 L1259.92 680.034 L1259.36 680.034 L1258.81 680.034 L1258.25 680.034 L1257.69 680.034 L1257.13 680.034 L1256.57 680.034 L1256.01 680.034 L1255.45 680.034 L1254.89 680.034 L1254.33 680.034 L1253.77 680.034 L1253.21 680.034 L1252.65 680.034 L1252.09 680.034 L1251.54 680.034 L1250.98 680.034 L1250.42 680.034 L1249.86 680.034 L1249.3 680.034 L1248.74 680.034 L1248.18 680.034 L1247.62 680.034 L1247.06 680.034 L1246.5 680.034 L1245.94 680.034 L1245.38 680.034 L1244.82 680.034 L1244.26 680.034 L1243.71 680.034 L1243.15 680.034 L1242.59 680.034 L1242.03 680.034 L1241.47 680.034 L1240.91 680.034 L1240.35 680.034 L1239.79 680.034 L1239.23 680.034 L1238.67 680.034 L1238.11 680.034 L1237.55 680.034 L1236.99 680.034 L1236.44 680.034 L1235.88 680.034 L1235.32 680.034 L1234.76 680.034 L1234.2 680.034 L1233.64 680.034 L1233.08 680.034 L1232.52 680.034 L1231.96 680.034 L1231.4 680.034 L1230.84 680.034 L1230.28 680.034 L1229.72 680.034 L1229.17 680.034 L1228.61 680.034 L1228.05 680.034 L1227.49 680.034 L1226.93 680.034 L1226.37 680.034 L1225.81 680.034 L1225.25 680.034 L1224.69 680.034 L1224.13 680.034 L1223.57 680.034 L1223.01 680.034 L1222.45 680.034 L1221.89 680.034 L1221.34 680.034 L1220.78 680.034 L1220.22 680.034 L1219.66 680.034 L1219.1 680.034 L1218.54 680.034 L1217.98 680.034 L1217.42 680.034 L1216.86 680.034 L1216.3 680.034 L1215.74 680.034 L1215.18 680.034 L1214.62 680.034 L1214.07 680.034 L1213.51 680.034 L1212.95 680.034 L1212.39 680.034 L1211.83 680.034 L1211.27 680.034 L1210.71 680.034 L1210.15 680.034 L1209.59 680.034 L1209.03 680.034 L1208.47 680.034 L1207.91 680.034 L1207.35 680.034 L1206.8 680.034 L1206.24 680.034 L1205.68 680.034 L1205.12 680.034 L1204.56 680.034 L1204 680.034 L1203.44 680.034 L1202.88 680.034 L1202.32 680.034 L1201.76 680.034 L1201.2 680.034 L1200.64 680.034 L1200.08 680.034 L1199.52 680.034 L1198.97 680.034 L1198.41 680.034 L1197.85 680.034 L1197.29 680.034 L1196.73 680.034 L1196.17 680.034 L1195.61 680.034 L1195.05 680.034 L1194.49 680.034 L1193.93 680.034 L1193.37 680.034 L1192.81 680.034 L1192.25 680.034 L1191.7 680.034 L1191.14 680.034 L1190.58 680.034 L1190.02 680.034 L1189.46 680.034 L1188.9 680.034 L1188.34 680.034 L1187.78 680.034 L1187.22 680.034 L1186.66 680.034 L1186.1 680.034 L1185.54 680.034 L1184.98 680.034 L1184.43 680.034 L1183.87 680.034 L1183.31 680.034 L1182.75 680.034 L1182.19 680.034 L1181.63 680.034 L1181.07 680.034 L1180.51 680.034 L1179.95 680.034 L1179.39 680.034 L1178.83 680.034 L1178.27 680.034 L1177.71 680.034 L1177.15 680.034 L1176.6 680.034 L1176.04 680.034 L1175.48 680.034 L1174.92 680.034 L1174.36 680.034 L1173.8 680.034 L1173.24 680.034 L1172.68 680.034 L1172.12 680.034 L1171.56 680.034 L1171 680.034 L1170.44 680.034 L1169.88 680.034 L1169.33 680.034 L1168.77 680.034 L1168.21 680.034 L1167.65 680.034 L1167.09 680.034 L1166.53 680.034 L1165.97 680.034 L1165.41 680.034 L1164.85 680.034 L1164.29 680.034 L1163.73 680.034 L1163.17 680.034 L1162.61 680.034 L1162.05 680.034 L1161.5 680.034 L1160.94 680.034 L1160.38 680.034 L1159.82 680.034 L1159.26 680.034 L1158.7 680.034 L1158.14 680.034 L1157.58 680.034 L1157.02 680.034 L1156.46 680.034 L1155.9 680.034 L1155.34 680.034 L1154.78 680.034 L1154.23 680.034 L1153.67 680.034 L1153.11 680.034 L1152.55 680.034 L1151.99 680.034 L1151.43 680.034 L1150.87 680.034 L1150.31 680.034 L1149.75 680.034 L1149.19 680.034 L1148.63 680.034 L1148.07 680.034 L1147.51 680.034 L1146.96 680.034 L1146.4 680.034 L1145.84 680.034 L1145.28 680.034 L1144.72 680.034 L1144.16 680.034 L1143.6 680.034 L1143.04 680.034 L1142.48 680.034 L1141.92 680.034 L1141.36 680.034 L1140.8 680.034 L1140.24 680.034 L1139.68 680.034 L1139.13 680.034 L1138.57 680.034 L1138.01 680.034 L1137.45 680.034 L1136.89 680.034 L1136.33 680.034 L1135.77 680.034 L1135.21 680.034 L1134.65 680.034 L1134.09 680.034 L1133.53 680.034 L1132.97 680.034 L1132.41 680.034 L1131.86 680.034 L1131.3 680.034 L1130.74 680.034 L1130.18 680.034 L1129.62 680.034 L1129.06 680.034 L1128.5 680.034 L1127.94 680.034 L1127.38 680.034 L1126.82 680.034 L1126.26 680.034 L1125.7 680.034 L1125.14 680.034 L1124.59 680.034 L1124.03 680.034 L1123.47 680.034 L1122.91 680.034 L1122.35 680.034 L1121.79 680.034 L1121.23 680.034 L1120.67 680.034 L1120.11 680.034 L1119.55 680.034 L1118.99 680.034 L1118.43 680.034 L1117.87 680.034 L1117.31 680.034 L1116.76 680.034 L1116.2 680.034 L1115.64 680.034 L1115.08 680.034 L1114.52 680.034 L1113.96 680.034 L1113.4 680.034 L1112.84 680.034 L1112.28 680.034 L1111.72 680.034 L1111.16 680.034 L1110.6 680.034 L1110.04 680.034 L1109.49 680.034 L1108.93 680.034 L1108.37 680.034 L1107.81 680.034 L1107.25 680.034 L1106.69 680.034 L1106.13 680.034 L1105.57 680.034 L1105.01 680.034 L1104.45 680.034 L1103.89 680.034 L1103.33 680.034 L1102.77 680.034 L1102.22 680.034 L1101.66 680.034 L1101.1 680.034 L1100.54 680.034 L1099.98 680.034 L1099.42 680.034 L1098.86 680.034 L1098.3 680.034 L1097.74 680.034 L1097.18 680.034 L1096.62 680.034 L1096.06 680.034 L1095.5 680.034 L1094.94 680.034 L1094.39 680.034 L1093.83 680.034 L1093.27 680.034 L1092.71 680.034 L1092.15 680.034 L1091.59 680.034 L1091.03 680.034 L1090.47 680.034 L1089.91 680.034 L1089.35 680.034 L1088.79 680.034 L1088.23 680.034 L1087.67 680.034 L1087.12 680.034 L1086.56 680.034 L1086 680.034 L1085.44 680.034 L1084.88 680.034 L1084.32 680.034 L1083.76 680.034 L1083.2 680.034 L1082.64 680.034 L1082.08 680.034 L1081.52 680.034 L1080.96 680.034 L1080.4 680.034 L1079.85 680.034 L1079.29 680.034 L1078.73 680.034 L1078.17 680.034 L1077.61 680.034 L1077.05 680.034 L1076.49 680.034 L1075.93 680.034 L1075.37 680.034 L1074.81 680.034 L1074.25 680.034 L1073.69 680.034 L1073.13 680.034 L1072.57 680.034 L1072.02 680.034 L1071.46 680.034 L1070.9 680.034 L1070.34 680.034 L1069.78 680.034 L1069.22 680.034 L1068.66 680.034 L1068.1 680.034 L1067.54 680.034 L1066.98 680.034 L1066.42 680.034 L1065.86 680.034 L1065.3 680.034 L1064.75 680.034 L1064.19 680.034 L1063.63 680.034 L1063.07 680.034 L1062.51 680.034 L1061.95 680.034 L1061.39 680.034 L1060.83 680.034 L1060.27 680.034 L1059.71 680.034 L1059.15 680.034 L1058.59 680.034 L1058.03 680.034 L1057.48 680.034 L1056.92 680.034 L1056.36 680.034 L1055.8 680.034 L1055.24 680.034 L1054.68 680.034 L1054.12 680.034 L1053.56 680.034 L1053 680.034 L1052.44 680.034 L1051.88 680.034 L1051.32 680.034 L1050.76 680.034 L1050.2 680.034 L1049.65 680.034 L1049.09 680.034 L1048.53 680.034 L1047.97 680.034 L1047.41 680.034 L1046.85 680.034 L1046.29 680.034 L1045.73 680.034 L1045.17 680.034 L1044.61 680.034 L1044.05 680.034 L1043.49 680.034 L1042.93 680.034 L1042.38 680.034 L1041.82 680.034 L1041.26 680.034 L1040.7 680.034 L1040.14 680.034 L1039.58 680.034 L1039.02 680.034 L1038.46 680.034 L1037.9 680.034 L1037.34 680.034 L1036.78 680.034 L1036.22 680.034 L1035.66 680.034 L1035.1 680.034 L1034.55 680.034 L1033.99 680.034 L1033.43 680.034 L1032.87 680.034 L1032.31 680.034 L1031.75 680.034 L1031.19 680.034 L1030.63 680.034 L1030.07 680.034 L1029.51 680.034 L1028.95 680.034 L1028.39 680.034 L1027.83 680.034 L1027.28 680.034 L1026.72 680.034 L1026.16 680.034 L1025.6 680.034 L1025.04 680.034 L1024.48 680.034 L1023.92 680.034 L1023.36 680.034 L1022.8 680.034 L1022.24 680.034 L1021.68 680.034 L1021.12 680.034 L1020.56 680.034 L1020.01 680.034 L1019.45 680.034 L1018.89 680.034 L1018.33 680.034 L1017.77 680.034 L1017.21 680.034 L1016.65 680.034 L1016.09 680.034 L1015.53 680.034 L1014.97 680.034 L1014.41 680.034 L1013.85 680.034 L1013.29 680.034 L1012.73 680.034 L1012.18 680.034 L1011.62 680.034 L1011.06 680.034 L1010.5 680.034 L1009.94 680.034 L1009.38 680.034 L1008.82 680.034 L1008.26 680.034 L1007.7 680.034 L1007.14 680.034 L1006.58 680.034 L1006.02 680.034 L1005.46 680.034 L1004.91 680.034 L1004.35 680.034 L1003.79 680.034 L1003.23 680.034 L1002.67 680.034 L1002.11 680.034 L1001.55 680.034 L1000.99 680.034 L1000.43 680.034 L999.872 680.034 L999.313 680.034 L998.754 680.034 L998.194 680.034 L997.635 680.034 L997.076 680.034 L996.517 680.034 L995.957 680.034 L995.398 680.034 L994.839 680.034 L994.28 680.034 L993.72 680.034 L993.161 680.034 L992.602 680.034 L992.043 680.034 L991.483 680.034 L990.924 680.034 L990.365 680.034 L989.806 680.034 L989.246 680.034 L988.687 680.034 L988.128 680.034 L987.569 680.034 L987.009 680.034 L986.45 680.034 L985.891 680.034 L985.332 680.034 L984.772 680.034 L984.213 680.034 L983.654 680.034 L983.095 680.034 L982.535 680.034 L981.976 680.034 L981.417 680.034 L980.858 680.034 L980.298 680.034 L979.739 680.034 L979.18 680.034 L978.621 680.034 L978.061 680.034 L977.502 680.034 L976.943 680.034 L976.384 680.034 L975.824 680.034 L975.265 680.034 L974.706 680.034 L974.147 680.034 L973.587 680.034 L973.028 680.034 L972.469 680.034 L971.91 680.034 L971.35 680.034 L970.791 680.034 L970.232 680.034 L969.673 680.034 L969.113 680.034 L968.554 680.034 L967.995 680.034 L967.436 680.034 L966.876 680.034 L966.317 680.034 L965.758 680.034 L965.199 680.034 L964.639 680.034 L964.08 680.034 L963.521 680.034 L962.962 680.034 L962.402 680.034 L961.843 680.034 L961.284 680.034 L960.725 680.034 L960.165 680.034 L959.606 680.034 L959.047 680.034 L958.488 680.034 L957.928 680.034 L957.369 680.034 L956.81 680.034 L956.251 680.034 L955.691 680.034 L955.132 680.034 L954.573 680.034 L954.014 680.034 L953.454 680.034 L952.895 680.034 L952.336 680.034 L951.777 680.034 L951.217 680.034 L950.658 680.034 L950.099 680.034 L949.54 680.034 L948.98 680.034 L948.421 680.034 L947.862 680.034 L947.303 680.034 L946.743 680.034 L946.184 680.034 L945.625 680.034 L945.066 680.034 L944.506 680.034 L943.947 680.034 L943.388 680.034 L942.829 680.034 L942.269 680.034 L941.71 680.034 L941.151 680.034 L940.592 680.034 L940.032 680.034 L939.473 680.034 L938.914 680.034 L938.355 680.034 L937.795 680.034 L937.236 680.034 L936.677 680.034 L936.118 680.034 L935.558 680.034 L934.999 680.034 L934.44 680.034 L933.881 680.034 L933.321 680.034 L932.762 680.034 L932.203 680.034 L931.644 680.034 L931.084 680.034 L930.525 680.034 L929.966 680.034 L929.406 680.034 L928.847 680.034 L928.288 680.034 L927.729 680.034 L927.169 680.034 L926.61 680.034 L926.051 680.034 L925.492 680.034 L924.932 680.034 L924.373 680.034 L923.814 680.034 L923.255 680.034 L922.695 680.034 L922.136 680.034 L921.577 680.034 L921.018 680.034 L920.458 680.034 L919.899 680.034 L919.34 680.034 L918.781 680.034 L918.221 680.034 L917.662 680.034 L917.103 680.034 L916.544 680.034 L915.984 680.034 L915.425 680.034 L914.866 680.034 L914.307 680.034 L913.747 680.034 L913.188 680.034 L912.629 680.034 L912.07 680.034 L911.51 680.034 L910.951 680.034 L910.392 680.034 L909.833 680.034 L909.273 680.034 L908.714 680.034 L908.155 680.034 L907.596 680.034 L907.036 680.034 L906.477 680.034 L905.918 680.034 L905.359 680.034 L904.799 680.034 L904.24 680.034 L903.681 680.034 L903.122 680.034 L902.562 680.034 L902.003 680.034 L901.444 680.034 L900.885 680.034 L900.325 680.034 L899.766 680.034 L899.207 680.034 L898.648 680.034 L898.088 680.034 L897.529 680.034 L896.97 680.034 L896.411 680.034 L895.851 680.034 L895.292 680.034 L894.733 680.034 L894.174 680.034 L893.614 680.034 L893.055 680.034 L892.496 680.034 L891.937 680.034 L891.377 680.034 L890.818 680.034 L890.259 680.034 L889.7 680.034 L889.14 680.034 L888.581 680.034 L888.022 680.034 L887.463 680.034 L886.903 680.034 L886.344 680.034 L885.785 680.034 L885.226 680.034 L884.666 680.034 L884.107 680.034 L883.548 680.034 L882.989 680.034 L882.429 680.034 L881.87 680.034 L881.311 680.034 L880.752 680.034 L880.192 680.034 L879.633 680.034 L879.074 680.034 L878.515 680.034 L877.955 680.034 L877.396 680.034 L876.837 680.034 L876.278 680.034 L875.718 680.034 L875.159 680.034 L874.6 680.034 L874.041 680.034 L873.481 680.034 L872.922 680.034 L872.363 680.034 L871.804 680.034 L871.244 680.034 L870.685 680.034 L870.126 680.034 L869.567 680.034 L869.007 680.034 L868.448 680.034 L867.889 680.034 L867.33 680.034 L866.77 680.034 L866.211 680.034 L865.652 680.034 L865.093 680.034 L864.533 680.034 L863.974 680.034 L863.415 680.034 L862.856 680.034 L862.296 680.034 L861.737 680.034 L861.178 680.034 L860.619 680.034 L860.059 680.034 L859.5 680.034 L858.941 680.034 L858.382 680.034 L857.822 680.034 L857.263 680.034 L856.704 680.034 L856.145 680.034 L855.585 680.034 L855.026 680.034 L854.467 680.034 L853.908 680.034 L853.348 680.034 L852.789 680.034 L852.23 680.034 L851.671 680.034 L851.111 680.034 L850.552 680.034 L849.993 680.034 L849.434 680.034 L848.874 680.034 L848.315 680.034 L847.756 680.034 L847.197 680.034 L846.637 680.034 L846.078 680.034 L845.519 680.034 L844.96 680.034 L844.4 680.034 L843.841 680.034 L843.282 680.034 L842.723 680.034 L842.163 680.034 L841.604 680.034 L841.045 680.034 L840.486 680.034 L839.926 680.034 L839.367 680.034 L838.808 680.034 L838.249 680.034 L837.689 680.034 L837.13 680.034 L836.571 680.034 L836.012 680.034 L835.452 680.034 L834.893 680.034 L834.334 680.034 L833.775 680.034 L833.215 680.034 L832.656 680.034 L832.097 680.034 L831.538 680.034 L830.978 680.034 L830.419 680.034 L829.86 680.034 L829.301 680.034 L828.741 680.034 L828.182 680.034 L827.623 680.034 L827.064 680.034 L826.504 680.034 L825.945 680.034 L825.386 680.034 L824.827 680.034 L824.267 680.034 L823.708 680.034 L823.149 680.034 L822.59 680.034 L822.03 680.034 L821.471 680.034 L820.912 680.034 L820.353 680.034 L819.793 680.034 L819.234 680.034 L818.675 680.034 L818.116 680.034 L817.556 680.034 L816.997 680.034 L816.438 680.034 L815.879 680.034 L815.319 680.034 L814.76 680.034 L814.201 680.034 L813.642 680.034 L813.082 680.034 L812.523 680.034 L811.964 680.034 L811.405 680.034 L810.845 680.034 L810.286 680.034 L809.727 680.034 L809.168 680.034 L808.608 680.034 L808.049 680.034 L807.49 680.034 L806.931 680.034 L806.371 680.034 L805.812 680.034 L805.253 680.034 L804.693 680.034 L804.134 680.034 L803.575 680.034 L803.016 680.034 L802.456 680.034 L801.897 680.034 L801.338 680.034 L800.779 680.034 L800.219 680.034 L799.66 680.034 L799.101 680.034 L798.542 680.034 L797.982 680.034 L797.423 680.034 L796.864 680.034 L796.305 680.034 L795.745 680.034 L795.186 680.034 L794.627 680.034 L794.068 680.034 L793.508 680.034 L792.949 680.034 L792.39 680.034 L791.831 680.034 L791.271 680.034 L790.712 680.034 L790.153 680.034 L789.594 680.034 L789.034 680.034 L788.475 680.034 L787.916 680.034 L787.357 680.034 L786.797 680.034 L786.238 680.034 L785.679 680.034 L785.12 680.034 L784.56 680.034 L784.001 680.034 L783.442 680.034 L782.883 680.034 L782.323 680.034 L781.764 680.034 L781.205 680.034 L780.646 680.034 L780.086 680.034 L779.527 680.034 L778.968 680.034 L778.409 680.034 L777.849 680.034 L777.29 680.034 L776.731 680.034 L776.172 680.034 L775.612 680.034 L775.053 680.034 L774.494 680.034 L773.935 680.034 L773.375 680.034 L772.816 680.034 L772.257 680.034 L771.698 680.034 L771.138 680.034 L770.579 680.034 L770.02 680.034 L769.461 680.034 L768.901 680.034 L768.342 680.034 L767.783 680.034 L767.224 680.034 L766.664 680.034 L766.105 680.034 L765.546 680.034 L764.987 680.034 L764.427 680.034 L763.868 680.034 L763.309 680.034 L762.75 680.034 L762.19 680.034 L761.631 680.034 L761.072 680.034 L760.513 680.034 L759.953 680.034 L759.394 680.034 L758.835 680.034 L758.276 680.034 L757.716 680.034 L757.157 680.034 L756.598 680.034 L756.039 680.034 L755.479 680.034 L754.92 680.034 L754.361 680.034 L753.802 680.034 L753.242 680.034 L752.683 680.034 L752.124 680.034 L751.565 680.034 L751.005 680.034 L750.446 680.034 L749.887 680.034 L749.328 680.034 L748.768 680.034 L748.209 680.034 L747.65 680.034 L747.091 680.034 L746.531 680.034 L745.972 680.034 L745.413 680.034 L744.854 680.034 L744.294 680.034 L743.735 680.034 L743.176 680.034 L742.617 680.034 L742.057 680.034 L741.498 680.034 L740.939 680.034 L740.38 680.034 L739.82 680.034 L739.261 680.034 L738.702 680.034 L738.143 680.034 L737.583 680.034 L737.024 680.034 L736.465 680.034 L735.906 680.034 L735.346 680.034 L734.787 680.034 L734.228 680.034 L733.669 680.034 L733.109 680.034 L732.55 680.034 L731.991 680.034 L731.432 680.034 L730.872 680.034 L730.313 680.034 L729.754 680.034 L729.195 680.034 L728.635 680.034 L728.076 680.034 L727.517 680.034 L726.958 680.034 L726.398 680.034 L725.839 680.034 L725.28 680.034 L724.721 680.034 L724.161 680.034 L723.602 680.034 L723.043 680.034 L722.484 680.034 L721.924 680.034 L721.365 680.034 L720.806 680.034 L720.247 680.034  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,685.309 720.806,685.309 721.365,685.309 721.924,685.309 722.484,685.309 723.043,685.309 723.602,685.309 724.161,685.309 724.721,685.309 725.28,685.309 725.839,685.309 726.398,685.309 726.958,685.309 727.517,685.309 728.076,685.309 728.635,685.309 729.195,685.309 729.754,685.309 730.313,685.309 730.872,685.309 731.432,685.309 731.991,685.309 732.55,685.309 733.109,685.309 733.669,685.309 734.228,685.309 734.787,685.309 735.346,685.309 735.906,685.309 736.465,685.309 737.024,685.309 737.583,685.309 738.143,685.309 738.702,685.309 739.261,685.309 739.82,685.309 740.38,685.309 740.939,685.309 741.498,685.309 742.057,685.309 742.617,685.309 743.176,685.309 743.735,685.309 744.294,685.309 744.854,685.309 745.413,685.309 745.972,685.309 746.531,685.309 747.091,685.309 747.65,685.309 748.209,685.309 748.768,685.309 749.328,685.309 749.887,685.309 750.446,685.309 751.005,685.309 751.565,685.309 752.124,685.309 752.683,685.309 753.242,685.309 753.802,685.309 754.361,685.309 754.92,685.309 755.479,685.309 756.039,685.309 756.598,685.309 757.157,685.309 757.716,685.309 758.276,685.309 758.835,685.309 759.394,685.309 759.953,685.309 760.513,685.309 761.072,685.309 761.631,685.309 762.19,685.309 762.75,685.309 763.309,685.309 763.868,685.309 764.427,685.309 764.987,685.309 765.546,685.309 766.105,685.309 766.664,685.309 767.224,685.309 767.783,685.309 768.342,685.309 768.901,685.309 769.461,685.309 770.02,685.309 770.579,685.309 771.138,685.309 771.698,685.309 772.257,685.309 772.816,685.309 773.375,685.309 773.935,685.309 774.494,685.309 775.053,685.309 775.612,685.309 776.172,685.309 776.731,685.309 777.29,685.309 777.849,685.309 778.409,685.309 778.968,685.309 779.527,685.309 780.086,685.309 780.646,685.309 781.205,685.309 781.764,685.309 782.323,685.309 782.883,685.309 783.442,685.309 784.001,685.309 784.56,685.309 785.12,685.309 785.679,685.309 786.238,685.309 786.797,685.309 787.357,685.309 787.916,685.309 788.475,685.309 789.034,685.309 789.594,685.309 790.153,685.309 790.712,685.309 791.271,685.309 791.831,685.309 792.39,685.309 792.949,685.309 793.508,685.309 794.068,685.309 794.627,685.309 795.186,685.309 795.745,685.309 796.305,685.309 796.864,685.309 797.423,685.309 797.982,685.309 798.542,685.309 799.101,685.309 799.66,685.309 800.219,685.309 800.779,685.309 801.338,685.309 801.897,685.309 802.456,685.309 803.016,685.309 803.575,685.309 804.134,685.309 804.693,685.309 805.253,685.309 805.812,685.309 806.371,685.309 806.931,685.309 807.49,685.309 808.049,685.309 808.608,685.309 809.168,685.309 809.727,685.309 810.286,685.309 810.845,685.309 811.405,685.309 811.964,685.309 812.523,685.309 813.082,685.309 813.642,685.309 814.201,685.309 814.76,685.309 815.319,685.309 815.879,685.309 816.438,685.309 816.997,685.309 817.556,685.309 818.116,685.309 818.675,685.309 819.234,685.309 819.793,685.309 820.353,685.309 820.912,685.309 821.471,685.309 822.03,685.309 822.59,685.309 823.149,685.309 823.708,685.309 824.267,685.309 824.827,685.309 825.386,685.309 825.945,685.309 826.504,685.309 827.064,685.309 827.623,685.309 828.182,685.309 828.741,685.309 829.301,685.309 829.86,685.309 830.419,685.309 830.978,685.309 831.538,685.309 832.097,685.309 832.656,685.309 833.215,685.309 833.775,685.309 834.334,685.309 834.893,685.309 835.452,685.309 836.012,685.309 836.571,685.309 837.13,685.309 837.689,685.309 838.249,685.309 838.808,685.309 839.367,685.309 839.926,685.309 840.486,685.309 841.045,685.309 841.604,685.309 842.163,685.309 842.723,685.309 843.282,685.309 843.841,685.309 844.4,685.309 844.96,685.309 845.519,685.309 846.078,685.309 846.637,685.309 847.197,685.309 847.756,685.309 848.315,685.309 848.874,685.309 849.434,685.309 849.993,685.309 850.552,685.309 851.111,685.309 851.671,685.309 852.23,685.309 852.789,685.309 853.348,685.309 853.908,685.309 854.467,685.309 855.026,685.309 855.585,685.309 856.145,685.309 856.704,685.309 857.263,685.309 857.822,685.309 858.382,685.309 858.941,685.309 859.5,685.309 860.059,685.309 860.619,685.309 861.178,685.309 861.737,685.309 862.296,685.309 862.856,685.309 863.415,685.309 863.974,685.309 864.533,685.309 865.093,685.309 865.652,685.309 866.211,685.309 866.77,685.309 867.33,685.309 867.889,685.309 868.448,685.309 869.007,685.309 869.567,685.309 870.126,685.309 870.685,685.309 871.244,685.309 871.804,685.309 872.363,685.309 872.922,685.309 873.481,685.309 874.041,685.309 874.6,685.309 875.159,685.309 875.718,685.309 876.278,685.309 876.837,685.309 877.396,685.309 877.955,685.309 878.515,685.309 879.074,685.309 879.633,685.309 880.192,685.309 880.752,685.309 881.311,685.309 881.87,685.309 882.429,685.309 882.989,685.309 883.548,685.309 884.107,685.309 884.666,685.309 885.226,685.309 885.785,685.309 886.344,685.309 886.903,685.309 887.463,685.309 888.022,685.309 888.581,685.309 889.14,685.309 889.7,685.309 890.259,685.309 890.818,685.309 891.377,685.309 891.937,685.309 892.496,685.309 893.055,685.309 893.614,685.309 894.174,685.309 894.733,685.309 895.292,685.309 895.851,685.309 896.411,685.309 896.97,685.309 897.529,685.309 898.088,685.309 898.648,685.309 899.207,685.309 899.766,685.309 900.325,685.309 900.885,685.309 901.444,685.309 902.003,685.309 902.562,685.309 903.122,685.309 903.681,685.309 904.24,685.309 904.799,685.309 905.359,685.309 905.918,685.309 906.477,685.309 907.036,685.309 907.596,685.309 908.155,685.309 908.714,685.309 909.273,685.309 909.833,685.309 910.392,685.309 910.951,685.309 911.51,685.309 912.07,685.309 912.629,685.309 913.188,685.309 913.747,685.309 914.307,685.309 914.866,685.309 915.425,685.309 915.984,685.309 916.544,685.309 917.103,685.309 917.662,685.309 918.221,685.309 918.781,685.309 919.34,685.309 919.899,685.309 920.458,685.309 921.018,685.309 921.577,685.309 922.136,685.309 922.695,685.309 923.255,685.309 923.814,685.309 924.373,685.309 924.932,685.309 925.492,685.309 926.051,685.309 926.61,685.309 927.169,685.309 927.729,685.309 928.288,685.309 928.847,685.309 929.406,685.309 929.966,685.309 930.525,685.309 931.084,685.309 931.644,685.309 932.203,685.309 932.762,685.309 933.321,685.309 933.881,685.309 934.44,685.309 934.999,685.309 935.558,685.309 936.118,685.309 936.677,685.309 937.236,685.309 937.795,685.309 938.355,685.309 938.914,685.309 939.473,685.309 940.032,685.309 940.592,685.309 941.151,685.309 941.71,685.309 942.269,685.309 942.829,685.309 943.388,685.309 943.947,685.309 944.506,685.309 945.066,685.309 945.625,685.309 946.184,685.309 946.743,685.309 947.303,685.309 947.862,685.309 948.421,685.309 948.98,685.309 949.54,685.309 950.099,685.309 950.658,685.309 951.217,685.309 951.777,685.309 952.336,685.309 952.895,685.309 953.454,685.309 954.014,685.309 954.573,685.309 955.132,685.309 955.691,685.309 956.251,685.309 956.81,685.309 957.369,685.309 957.928,685.309 958.488,685.309 959.047,685.309 959.606,685.309 960.165,685.309 960.725,685.309 961.284,685.309 961.843,685.309 962.402,685.309 962.962,685.309 963.521,685.309 964.08,685.309 964.639,685.309 965.199,685.309 965.758,685.309 966.317,685.309 966.876,685.309 967.436,685.309 967.995,685.309 968.554,685.309 969.113,685.309 969.673,685.309 970.232,685.309 970.791,685.309 971.35,685.309 971.91,685.309 972.469,685.309 973.028,685.309 973.587,685.309 974.147,685.309 974.706,685.309 975.265,685.309 975.824,685.309 976.384,685.309 976.943,685.309 977.502,685.309 978.061,685.309 978.621,685.309 979.18,685.309 979.739,685.309 980.298,685.309 980.858,685.309 981.417,685.309 981.976,685.309 982.535,685.309 983.095,685.309 983.654,685.309 984.213,685.309 984.772,685.309 985.332,685.309 985.891,685.309 986.45,685.309 987.009,685.309 987.569,685.309 988.128,685.309 988.687,685.309 989.246,685.309 989.806,685.309 990.365,685.309 990.924,685.309 991.483,685.309 992.043,685.309 992.602,685.309 993.161,685.309 993.72,685.309 994.28,685.309 994.839,685.309 995.398,685.309 995.957,685.309 996.517,685.309 997.076,685.309 997.635,685.309 998.194,685.309 998.754,685.309 999.313,685.309 999.872,685.309 1000.43,685.309 1000.99,685.309 1001.55,685.309 1002.11,685.309 1002.67,685.309 1003.23,685.309 1003.79,685.309 1004.35,685.309 1004.91,685.309 1005.46,685.309 1006.02,685.309 1006.58,685.309 1007.14,685.309 1007.7,685.309 1008.26,685.309 1008.82,685.309 1009.38,685.309 1009.94,685.309 1010.5,685.309 1011.06,685.309 1011.62,685.309 1012.18,685.309 1012.73,685.309 1013.29,685.309 1013.85,685.309 1014.41,685.309 1014.97,685.309 1015.53,685.309 1016.09,685.309 1016.65,685.309 1017.21,685.309 1017.77,685.309 1018.33,685.309 1018.89,685.309 1019.45,685.309 1020.01,685.309 1020.56,685.309 1021.12,685.309 1021.68,685.309 1022.24,685.309 1022.8,685.309 1023.36,685.309 1023.92,685.309 1024.48,685.309 1025.04,685.309 1025.6,685.309 1026.16,685.309 1026.72,685.309 1027.28,685.309 1027.83,685.309 1028.39,685.309 1028.95,685.309 1029.51,685.309 1030.07,685.309 1030.63,685.309 1031.19,685.309 1031.75,685.309 1032.31,685.309 1032.87,685.309 1033.43,685.309 1033.99,685.309 1034.55,685.309 1035.1,685.309 1035.66,685.309 1036.22,685.309 1036.78,685.309 1037.34,685.309 1037.9,685.309 1038.46,685.309 1039.02,685.309 1039.58,685.309 1040.14,685.309 1040.7,685.309 1041.26,685.309 1041.82,685.309 1042.38,685.309 1042.93,685.309 1043.49,685.309 1044.05,685.309 1044.61,685.309 1045.17,685.309 1045.73,685.309 1046.29,685.309 1046.85,685.309 1047.41,685.309 1047.97,685.309 1048.53,685.309 1049.09,685.309 1049.65,685.309 1050.2,685.309 1050.76,685.309 1051.32,685.309 1051.88,685.309 1052.44,685.309 1053,685.309 1053.56,685.309 1054.12,685.309 1054.68,685.309 1055.24,685.309 1055.8,685.309 1056.36,685.309 1056.92,685.309 1057.48,685.309 1058.03,685.309 1058.59,685.309 1059.15,685.309 1059.71,685.309 1060.27,685.309 1060.83,685.309 1061.39,685.309 1061.95,685.309 1062.51,685.309 1063.07,685.309 1063.63,685.309 1064.19,685.309 1064.75,685.309 1065.3,685.309 1065.86,685.309 1066.42,685.309 1066.98,685.309 1067.54,685.309 1068.1,685.309 1068.66,685.309 1069.22,685.309 1069.78,685.309 1070.34,685.309 1070.9,685.309 1071.46,685.309 1072.02,685.309 1072.57,685.309 1073.13,685.309 1073.69,685.309 1074.25,685.309 1074.81,685.309 1075.37,685.309 1075.93,685.309 1076.49,685.309 1077.05,685.309 1077.61,685.309 1078.17,685.309 1078.73,685.309 1079.29,685.309 1079.85,685.309 1080.4,685.309 1080.96,685.309 1081.52,685.309 1082.08,685.309 1082.64,685.309 1083.2,685.309 1083.76,685.309 1084.32,685.309 1084.88,685.309 1085.44,685.309 1086,685.309 1086.56,685.309 1087.12,685.309 1087.67,685.309 1088.23,685.309 1088.79,685.309 1089.35,685.309 1089.91,685.309 1090.47,685.309 1091.03,685.309 1091.59,685.309 1092.15,685.309 1092.71,685.309 1093.27,685.309 1093.83,685.309 1094.39,685.309 1094.94,685.309 1095.5,685.309 1096.06,685.309 1096.62,685.309 1097.18,685.309 1097.74,685.309 1098.3,685.309 1098.86,685.309 1099.42,685.309 1099.98,685.309 1100.54,685.309 1101.1,685.309 1101.66,685.309 1102.22,685.309 1102.77,685.309 1103.33,685.309 1103.89,685.309 1104.45,685.309 1105.01,685.309 1105.57,685.309 1106.13,685.309 1106.69,685.309 1107.25,685.309 1107.81,685.309 1108.37,685.309 1108.93,685.309 1109.49,685.309 1110.04,685.309 1110.6,685.309 1111.16,685.309 1111.72,685.309 1112.28,685.309 1112.84,685.309 1113.4,685.309 1113.96,685.309 1114.52,685.309 1115.08,685.309 1115.64,685.309 1116.2,685.309 1116.76,685.309 1117.31,685.309 1117.87,685.309 1118.43,685.309 1118.99,685.309 1119.55,685.309 1120.11,685.309 1120.67,685.309 1121.23,685.309 1121.79,685.309 1122.35,685.309 1122.91,685.309 1123.47,685.309 1124.03,685.309 1124.59,685.309 1125.14,685.309 1125.7,685.309 1126.26,685.309 1126.82,685.309 1127.38,685.309 1127.94,685.309 1128.5,685.309 1129.06,685.309 1129.62,685.309 1130.18,685.309 1130.74,685.309 1131.3,685.309 1131.86,685.309 1132.41,685.309 1132.97,685.309 1133.53,685.309 1134.09,685.309 1134.65,685.309 1135.21,685.309 1135.77,685.309 1136.33,685.309 1136.89,685.309 1137.45,685.309 1138.01,685.309 1138.57,685.309 1139.13,685.309 1139.68,685.309 1140.24,685.309 1140.8,685.309 1141.36,685.309 1141.92,685.309 1142.48,685.309 1143.04,685.309 1143.6,685.309 1144.16,685.309 1144.72,685.309 1145.28,685.309 1145.84,685.309 1146.4,685.309 1146.96,685.309 1147.51,685.309 1148.07,685.309 1148.63,685.309 1149.19,685.309 1149.75,685.309 1150.31,685.309 1150.87,685.309 1151.43,685.309 1151.99,685.309 1152.55,685.309 1153.11,685.309 1153.67,685.309 1154.23,685.309 1154.78,685.309 1155.34,685.309 1155.9,685.309 1156.46,685.309 1157.02,685.309 1157.58,685.309 1158.14,685.309 1158.7,685.309 1159.26,685.309 1159.82,685.309 1160.38,685.309 1160.94,685.309 1161.5,685.309 1162.05,685.309 1162.61,685.309 1163.17,685.309 1163.73,685.309 1164.29,685.309 1164.85,685.309 1165.41,685.309 1165.97,685.309 1166.53,685.309 1167.09,685.309 1167.65,685.309 1168.21,685.309 1168.77,685.309 1169.33,685.309 1169.88,685.309 1170.44,685.309 1171,685.309 1171.56,685.309 1172.12,685.309 1172.68,685.309 1173.24,685.309 1173.8,685.309 1174.36,685.309 1174.92,685.309 1175.48,685.309 1176.04,685.309 1176.6,685.309 1177.15,685.309 1177.71,685.309 1178.27,685.309 1178.83,685.309 1179.39,685.309 1179.95,685.309 1180.51,685.309 1181.07,685.309 1181.63,685.309 1182.19,685.309 1182.75,685.309 1183.31,685.309 1183.87,685.309 1184.43,685.309 1184.98,685.309 1185.54,685.309 1186.1,685.309 1186.66,685.309 1187.22,685.309 1187.78,685.309 1188.34,685.309 1188.9,685.309 1189.46,685.309 1190.02,685.309 1190.58,685.309 1191.14,685.309 1191.7,685.309 1192.25,685.309 1192.81,685.309 1193.37,685.309 1193.93,685.309 1194.49,685.309 1195.05,685.309 1195.61,685.309 1196.17,685.309 1196.73,685.309 1197.29,685.309 1197.85,685.309 1198.41,685.309 1198.97,685.309 1199.52,685.309 1200.08,685.309 1200.64,685.309 1201.2,685.309 1201.76,685.309 1202.32,685.309 1202.88,685.309 1203.44,685.309 1204,685.309 1204.56,685.309 1205.12,685.309 1205.68,685.309 1206.24,685.309 1206.8,685.309 1207.35,685.309 1207.91,685.309 1208.47,685.309 1209.03,685.309 1209.59,685.309 1210.15,685.309 1210.71,685.309 1211.27,685.309 1211.83,685.309 1212.39,685.309 1212.95,685.309 1213.51,685.309 1214.07,685.309 1214.62,685.309 1215.18,685.309 1215.74,685.309 1216.3,685.309 1216.86,685.309 1217.42,685.309 1217.98,685.309 1218.54,685.309 1219.1,685.309 1219.66,685.309 1220.22,685.309 1220.78,685.309 1221.34,685.309 1221.89,685.309 1222.45,685.309 1223.01,685.309 1223.57,685.309 1224.13,685.309 1224.69,685.309 1225.25,685.309 1225.81,685.309 1226.37,685.309 1226.93,685.309 1227.49,685.309 1228.05,685.309 1228.61,685.309 1229.17,685.309 1229.72,685.309 1230.28,685.309 1230.84,685.309 1231.4,685.309 1231.96,685.309 1232.52,685.309 1233.08,685.309 1233.64,685.309 1234.2,685.309 1234.76,685.309 1235.32,685.309 1235.88,685.309 1236.44,685.309 1236.99,685.309 1237.55,685.309 1238.11,685.309 1238.67,685.309 1239.23,685.309 1239.79,685.309 1240.35,685.309 1240.91,685.309 1241.47,685.309 1242.03,685.309 1242.59,685.309 1243.15,685.309 1243.71,685.309 1244.26,685.309 1244.82,685.309 1245.38,685.309 1245.94,685.309 1246.5,685.309 1247.06,685.309 1247.62,685.309 1248.18,685.309 1248.74,685.309 1249.3,685.309 1249.86,685.309 1250.42,685.309 1250.98,685.309 1251.54,685.309 1252.09,685.309 1252.65,685.309 1253.21,685.309 1253.77,685.309 1254.33,685.309 1254.89,685.309 1255.45,685.309 1256.01,685.309 1256.57,685.309 1257.13,685.309 1257.69,685.309 1258.25,685.309 1258.81,685.309 1259.36,685.309 1259.92,685.309 1260.48,685.309 1261.04,685.309 1261.6,685.309 1262.16,685.309 1262.72,685.309 1263.28,685.309 1263.84,685.309 1264.4,685.309 1264.96,685.309 1265.52,685.309 1266.08,685.309 1266.63,685.309 1267.19,685.309 1267.75,685.309 1268.31,685.309 1268.87,685.309 1269.43,685.309 1269.99,685.309 1270.55,685.309 1271.11,685.309 1271.67,685.309 1272.23,685.309 1272.79,685.309 1273.35,685.309 1273.91,685.309 1274.46,685.309 1275.02,685.309 1275.58,685.309 1276.14,685.309 1276.7,685.309 1277.26,685.309 1277.82,685.309 1278.38,685.309 1278.94,685.309 1279.5,685.309 1280.06,685.309 1280.62,685.309 1281.18,685.309 1281.73,685.309 1282.29,685.309 1282.85,685.309 1283.41,685.309 1283.97,685.309 1284.53,685.309 1285.09,685.309 1285.65,685.309 1286.21,685.309 1286.77,685.309 1287.33,685.309 1287.89,685.309 1288.45,685.309 1289,685.309 1289.56,685.309 1290.12,685.309 1290.68,685.309 1291.24,685.309 1291.8,685.309 1292.36,685.309 1292.92,685.309 1293.48,685.309 1294.04,685.309 1294.6,685.309 1295.16,685.309 1295.72,685.309 1296.28,685.309 1296.83,685.309 1297.39,685.309 1297.95,685.309 1298.51,685.309 1299.07,685.309 1299.63,685.309 1300.19,685.309 1300.75,685.309 1301.31,685.309 1301.87,685.309 1302.43,685.309 1302.99,685.309 1303.55,685.309 1304.1,685.309 1304.66,685.309 1305.22,685.309 1305.78,685.309 1306.34,685.309 1306.9,685.309 1307.46,685.309 1308.02,685.309 1308.58,685.309 1309.14,685.309 1309.7,685.309 1310.26,685.309 1310.82,685.309 1311.38,685.309 1311.93,685.309 1312.49,685.309 1313.05,685.309 1313.61,685.309 1314.17,685.309 1314.73,685.309 1315.29,685.309 1315.85,685.309 1316.41,685.309 1316.97,685.309 1317.53,685.309 1318.09,685.309 1318.65,685.309 1319.2,685.309 1319.76,685.309 1320.32,685.309 1320.88,685.309 1321.44,685.309 1322,685.309 1322.56,685.309 1323.12,685.309 1323.68,685.309 1324.24,685.309 1324.8,685.309 1325.36,685.309 1325.92,685.309 1326.47,685.309 1327.03,685.309 1327.59,685.309 1328.15,685.309 1328.71,685.309 1329.27,685.309 1329.83,685.309 1330.39,685.309 1330.95,685.309 1331.51,685.309 1332.07,685.309 1332.63,685.309 1333.19,685.309 1333.75,685.309 1334.3,685.309 1334.86,685.309 1335.42,685.309 1335.98,685.309 1336.54,685.309 1337.1,685.309 1337.66,685.309 1338.22,685.309 1338.78,685.309 1339.34,685.309 1339.9,685.309 1340.46,685.309 1341.02,685.309 1341.57,685.309 1342.13,685.309 1342.69,685.309 1343.25,685.309 1343.81,685.309 1344.37,685.309 1344.93,685.309 1345.49,685.309 1346.05,685.309 1346.61,685.309 1347.17,685.309 1347.73,685.309 1348.29,685.309 1348.84,685.309 1349.4,685.309 1349.96,685.309 1350.52,685.309 1351.08,685.309 1351.64,685.309 1352.2,685.309 1352.76,685.309 1353.32,685.309 1353.88,685.309 1354.44,685.309 1355,685.309 1355.56,685.309 1356.12,685.309 1356.67,685.309 1357.23,685.309 1357.79,685.309 1358.35,685.309 1358.91,685.309 1359.47,685.309 1360.03,685.309 1360.59,685.309 1361.15,685.309 1361.71,685.309 1362.27,685.309 1362.83,685.309 1363.39,685.309 1363.94,685.309 1364.5,685.309 1365.06,685.309 1365.62,685.309 1366.18,685.309 1366.74,685.309 1367.3,685.309 1367.86,685.309 1368.42,685.309 1368.98,685.309 1369.54,685.309 1370.1,685.309 1370.66,685.309 1371.21,685.309 1371.77,685.309 1372.33,685.309 1372.89,685.309 1373.45,685.309 1374.01,685.309 1374.57,685.309 1375.13,685.309 1375.69,685.309 1376.25,685.309 1376.81,685.309 1377.37,685.309 1377.93,685.309 1378.49,685.309 1379.04,685.309 1379.6,685.309 1380.16,685.309 1380.72,685.309 1381.28,685.309 1381.84,685.309 1382.4,685.309 1382.96,685.309 1383.52,685.309 1384.08,685.309 1384.64,685.309 1385.2,685.309 1385.76,685.309 1386.31,685.309 1386.87,685.309 1387.43,685.309 1387.99,685.309 1388.55,685.309 1389.11,685.309 1389.67,685.309 1390.23,685.309 1390.79,685.309 1391.35,685.309 1391.91,685.309 1392.47,685.309 1393.03,685.309 1393.58,685.309 1394.14,685.309 1394.7,685.309 1395.26,685.309 1395.82,685.309 1396.38,685.309 1396.94,685.309 1397.5,685.309 1398.06,685.309 1398.62,685.309 1399.18,685.309 1399.74,685.309 1400.3,685.309 1400.86,685.309 1401.41,685.309 1401.97,685.309 1402.53,685.309 1403.09,685.309 1403.65,685.309 1404.21,685.309 1404.77,685.309 1405.33,685.309 1405.89,685.309 1406.45,685.309 1407.01,685.309 1407.57,685.309 1408.13,685.309 1408.68,685.309 1409.24,685.309 1409.8,685.309 1410.36,685.309 1410.92,685.309 1411.48,685.309 1412.04,685.309 1412.6,685.309 1413.16,685.309 1413.72,685.309 1414.28,685.309 1414.84,685.309 1415.4,685.309 1415.95,685.309 1416.51,685.309 1417.07,685.309 1417.63,685.309 1418.19,685.309 1418.75,685.309 1419.31,685.309 1419.87,685.309 1420.43,685.309 1420.99,685.309 1421.55,685.309 1422.11,685.309 1422.67,685.309 1423.23,685.309 1423.78,685.309 1424.34,685.309 1424.9,685.309 1425.46,685.309 1426.02,685.309 1426.58,685.309 1427.14,685.309 1427.7,685.309 1428.26,685.309 1428.82,685.309 1429.38,685.309 1429.94,685.309 1430.5,685.309 1431.05,685.309 1431.61,685.309 1432.17,685.309 1432.73,685.309 1433.29,685.309 1433.85,685.309 1434.41,685.309 1434.97,685.309 1435.53,685.309 1436.09,685.309 1436.65,685.309 1437.21,685.309 1437.77,685.309 1438.33,685.309 1438.88,685.309 1439.44,685.309 1440,685.309 1440.56,685.309 1441.12,685.309 1441.68,685.309 1442.24,685.309 1442.8,685.309 1443.36,685.309 1443.92,685.309 1444.48,685.309 1445.04,685.309 1445.6,685.309 1446.15,685.309 1446.71,685.309 1447.27,685.309 1447.83,685.309 1448.39,685.309 1448.95,685.309 1449.51,685.309 1450.07,685.309 1450.63,685.309 1451.19,685.309 1451.75,685.309 1452.31,685.309 1452.87,685.309 1453.42,685.309 1453.98,685.309 1454.54,685.309 1455.1,685.309 1455.66,685.309 1456.22,685.309 1456.78,685.309 1457.34,685.309 1457.9,685.309 1458.46,685.309 1459.02,685.309 1459.58,685.309 1460.14,685.309 1460.7,685.309 1461.25,685.309 1461.81,685.309 1462.37,685.309 1462.93,685.309 1463.49,685.309 1464.05,685.309 1464.61,685.309 1465.17,685.309 1465.73,685.309 1466.29,685.309 1466.85,685.309 1467.41,685.309 1467.97,685.309 1468.52,685.309 1469.08,685.309 1469.64,685.309 1470.2,685.309 1470.76,685.309 1471.32,685.309 1471.88,685.309 1472.44,685.309 1473,685.309 1473.56,685.309 1474.12,685.309 1474.68,685.309 1475.24,685.309 1475.79,685.309 1476.35,685.309 1476.91,685.309 1477.47,685.309 1478.03,685.309 1478.59,685.309 1479.15,685.309 1479.71,685.309 1480.27,685.309 1480.83,685.309 1481.39,685.309 1481.95,685.309 1482.51,685.309 1483.07,685.309 1483.62,685.309 1484.18,685.309 1484.74,685.309 1485.3,685.309 1485.86,685.309 1486.42,685.309 1486.98,685.309 1487.54,685.309 1488.1,685.309 1488.66,685.309 1489.22,685.309 1489.78,685.309 1490.34,685.309 1490.89,685.309 1491.45,685.309 1492.01,685.309 1492.57,685.309 1493.13,685.309 1493.69,685.309 1494.25,685.309 1494.81,685.309 1495.37,685.309 1495.93,685.309 1496.49,685.309 1497.05,685.309 1497.61,685.309 1498.16,685.309 1498.72,685.309 1499.28,685.309 1499.84,685.309 1500.4,685.309 1500.96,685.309 1501.52,685.309 1502.08,685.309 1502.64,685.309 1503.2,685.309 1503.76,685.309 1504.32,685.309 1504.88,685.309 1505.44,685.309 1505.99,685.309 1506.55,685.309 1507.11,685.309 1507.67,685.309 1508.23,685.309 1508.79,685.309 1509.35,685.309 1509.91,685.309 1510.47,685.309 1511.03,685.309 1511.59,685.309 1512.15,685.309 1512.71,685.309 1513.26,685.309 1513.82,685.309 1514.38,685.309 1514.94,685.309 1515.5,685.309 1516.06,685.309 1516.62,685.309 1517.18,685.309 1517.74,685.309 1518.3,685.309 1518.86,685.309 1519.42,685.309 1519.98,685.309 1520.53,685.309 1521.09,685.309 1521.65,685.309 1522.21,685.309 1522.77,685.309 1523.33,685.309 1523.89,685.309 1524.45,685.309 1525.01,685.309 1525.57,685.309 1526.13,685.309 1526.69,685.309 1527.25,685.309 1527.81,685.309 1528.36,685.309 1528.92,685.309 1529.48,685.309 1530.04,685.309 1530.6,685.309 1531.16,685.309 1531.72,685.309 1532.28,685.309 1532.84,685.309 1533.4,685.309 1533.96,685.309 1534.52,685.309 1535.08,685.309 1535.63,685.309 1536.19,685.309 1536.75,685.309 1537.31,685.309 1537.87,685.309 1538.43,685.309 1538.99,685.309 1539.55,685.309 1540.11,685.309 1540.67,685.309 1541.23,685.309 1541.79,685.309 1542.35,685.309 1542.9,685.309 1543.46,685.309 1544.02,685.309 1544.58,685.309 1545.14,685.309 1545.7,685.309 1546.26,685.309 1546.82,685.309 1547.38,685.309 1547.94,685.309 1548.5,685.309 1549.06,685.309 1549.62,685.309 1550.18,685.309 1550.73,685.309 1551.29,685.309 1551.85,685.309 1552.41,685.309 1552.97,685.309 1553.53,685.309 1554.09,685.309 1554.65,685.309 1555.21,685.309 1555.77,685.309 1556.33,685.309 1556.89,685.309 1557.45,685.309 1558,685.309 1558.56,685.309 1559.12,685.309 1559.68,685.309 1560.24,685.309 1560.8,685.309 1561.36,685.309 1561.92,685.309 1562.48,685.309 1563.04,685.309 1563.6,685.309 1564.16,685.309 1564.72,685.309 1565.28,685.309 1565.83,685.309 1566.39,685.309 1566.95,685.309 1567.51,685.309 1568.07,685.309 1568.63,685.309 1569.19,685.309 1569.75,685.309 1570.31,685.309 1570.87,685.309 1571.43,685.309 1571.99,685.309 1572.55,685.309 1573.1,685.309 1573.66,685.309 1574.22,685.309 1574.78,685.309 1575.34,685.309 1575.9,685.309 1576.46,685.309 1577.02,685.309 1577.58,685.309 1578.14,685.309 1578.7,685.309 1579.26,685.309 1579.82,685.309 1580.37,685.309 1580.93,685.309 1581.49,685.309 1582.05,685.309 1582.61,685.309 1583.17,685.309 1583.73,685.309 1584.29,685.309 1584.85,685.309 1585.41,685.309 1585.97,685.309 1586.53,685.309 1587.09,685.309 1587.65,685.309 1588.2,685.309 1588.76,685.309 1589.32,685.309 1589.88,685.309 1590.44,685.309 1591,685.309 1591.56,685.309 1592.12,685.309 1592.68,685.309 1593.24,685.309 1593.8,685.309 1594.36,685.309 1594.92,685.309 1595.47,685.309 1596.03,685.309 1596.59,685.309 1597.15,685.309 1597.71,685.309 1598.27,685.309 1598.83,685.309 1599.39,685.309 1599.95,685.309 1600.51,685.309 1601.07,685.309 1601.63,685.309 1602.19,685.309 1602.74,685.309 1603.3,685.309 1603.86,685.309 1604.42,685.309 1604.98,685.309 1605.54,685.309 1606.1,685.309 1606.66,685.309 1607.22,685.309 1607.78,685.309 1608.34,685.309 1608.9,685.309 1609.46,685.309 1610.02,685.309 1610.57,685.309 1611.13,685.309 1611.69,685.309 1612.25,685.309 1612.81,685.309 1613.37,685.309 1613.93,685.309 1614.49,685.309 1615.05,685.309 1615.61,685.309 1616.17,685.309 1616.73,685.309 1617.29,685.309 1617.84,685.309 1618.4,685.309 1618.96,685.309 1619.52,685.309 1620.08,685.309 1620.64,685.309 1621.2,685.309 1621.76,685.309 1622.32,685.309 1622.88,685.309 1623.44,685.309 1624,685.309 1624.56,685.309 1625.11,685.309 1625.67,685.309 1626.23,685.309 1626.79,685.309 1627.35,685.309 1627.91,685.309 1628.47,685.309 1629.03,685.309 1629.59,685.309 1630.15,685.309 1630.71,685.309 1631.27,685.309 1631.83,685.309 1632.39,685.309 1632.94,685.309 1633.5,685.309 1634.06,685.309 1634.62,685.309 1635.18,685.309 1635.74,685.309 1636.3,685.309 1636.86,685.309 1637.42,685.309 1637.98,685.309 1638.54,685.309 1639.1,685.309 1639.66,685.309 1640.21,685.309 1640.77,685.309 1641.33,685.309 1641.89,685.309 1642.45,685.309 1643.01,685.309 1643.57,685.309 1644.13,685.309 1644.69,685.309 1645.25,685.309 1645.81,685.309 1646.37,685.309 1646.93,685.309 1647.48,685.309 1648.04,685.309 1648.6,685.309 1649.16,685.309 1649.72,685.309 1650.28,685.309 1650.84,685.309 1651.4,685.309 1651.96,685.309 1652.52,685.309 1653.08,685.309 1653.64,685.309 1654.2,685.309 1654.76,685.309 1655.31,685.309 1655.87,685.309 1656.43,685.309 1656.99,685.309 1657.55,685.309 1658.11,685.309 1658.67,685.309 1659.23,685.309 1659.79,685.309 1660.35,685.309 1660.91,685.309 1661.47,685.309 1662.03,685.309 1662.58,685.309 1663.14,685.309 1663.7,685.309 1664.26,685.309 1664.82,685.309 1665.38,685.309 1665.94,685.309 1666.5,685.309 1667.06,685.309 1667.62,685.309 1668.18,685.309 1668.74,685.309 1669.3,685.309 1669.85,685.309 1670.41,685.309 1670.97,685.309 1671.53,685.309 1672.09,685.309 1672.65,685.309 1673.21,685.309 1673.77,685.309 1674.33,685.309 1674.89,685.309 1675.45,685.309 1676.01,685.309 1676.57,685.309 1677.13,685.309 1677.68,685.309 1678.24,685.309 1678.8,685.309 1679.36,685.309 1679.92,685.309 1680.48,685.309 1681.04,685.309 1681.6,685.309 1682.16,685.309 1682.72,685.309 1683.28,685.309 1683.84,685.309 1684.4,685.309 1684.95,685.309 1685.51,685.309 1686.07,685.309 1686.63,685.309 1687.19,685.309 1687.75,685.309 1688.31,685.309 1688.87,685.309 1689.43,685.309 1689.99,685.309 1690.55,685.309 1691.11,685.309 1691.67,685.309 1692.23,685.309 1692.78,685.309 1693.34,685.309 1693.9,685.309 1694.46,685.309 1695.02,685.309 1695.58,685.309 1696.14,685.309 1696.7,685.309 1697.26,685.309 1697.82,685.309 1698.38,685.309 1698.94,685.309 1699.5,685.309 1700.05,685.309 1700.61,685.309 1701.17,685.309 1701.73,685.309 1702.29,685.309 1702.85,685.309 1703.41,685.309 1703.97,685.309 1704.53,685.309 1705.09,685.309 1705.65,685.309 1706.21,685.309 1706.77,685.309 1707.32,685.309 1707.88,685.309 1708.44,685.309 1709,685.309 1709.56,685.309 1710.12,685.309 1710.68,685.309 1711.24,685.309 1711.8,685.309 1712.36,685.309 1712.92,685.309 1713.48,685.309 1714.04,685.309 1714.6,685.309 1715.15,685.309 1715.71,685.309 1716.27,685.309 1716.83,685.309 1717.39,685.309 1717.95,685.309 1718.51,685.309 1719.07,685.309 1719.63,685.309 1720.19,685.309 1720.75,685.309 1721.31,685.309 1721.87,685.309 1722.42,685.309 1722.98,685.309 1723.54,685.309 1724.1,685.309 1724.66,685.309 1725.22,685.309 1725.78,685.309 1726.34,685.309 1726.9,685.309 1727.46,685.309 1728.02,685.309 1728.58,685.309 1729.14,685.309 1729.69,685.309 1730.25,685.309 1730.81,685.309 1731.37,685.309 1731.93,685.309 1732.49,685.309 1733.05,685.309 1733.61,685.309 1734.17,685.309 1734.73,685.309 1735.29,685.309 1735.85,685.309 1736.41,685.309 1736.97,685.309 1737.52,685.309 1738.08,685.309 1738.64,685.309 1739.2,685.309 1739.76,685.309 1740.32,685.309 1740.88,685.309 1741.44,685.309 1742,685.309 1742.56,685.309 1743.12,685.309 1743.68,685.309 1744.24,685.309 1744.79,685.309 1745.35,685.309 1745.91,685.309 1746.47,685.309 1747.03,685.309 1747.59,685.309 1748.15,685.309 1748.71,685.309 1749.27,685.309 1749.83,685.309 1750.39,685.309 1750.95,685.309 1751.51,685.309 1752.06,685.309 1752.62,685.309 1753.18,685.309 1753.74,685.309 1754.3,685.309 1754.86,685.309 1755.42,685.309 1755.98,685.309 1756.54,685.309 1757.1,685.309 1757.66,685.309 1758.22,685.309 1758.78,685.309 1759.34,685.309 1759.89,685.309 1760.45,685.309 1761.01,685.309 1761.57,685.309 1762.13,685.309 1762.69,685.309 1763.25,685.309 1763.81,685.309 1764.37,685.309 1764.93,685.309 1765.49,685.309 1766.05,685.309 1766.61,685.309 1767.16,685.309 1767.72,685.309 1768.28,685.309 1768.84,685.309 1769.4,685.309 1769.96,685.309 1770.52,685.309 1771.08,685.309 1771.64,685.309 1772.2,685.309 1772.76,685.309 1773.32,685.309 1773.88,685.309 1774.43,685.309 1774.99,685.309 1775.55,685.309 1776.11,685.309 1776.67,685.309 1777.23,685.309 1777.79,685.309 1778.35,685.309 1778.91,685.309 1779.47,685.309 1780.03,685.309 1780.59,685.309 1781.15,685.309 1781.71,685.309 1782.26,685.309 1782.82,685.309 1783.38,685.309 1783.94,685.309 1784.5,685.309 1785.06,685.309 1785.62,685.309 1786.18,685.309 1786.74,685.309 1787.3,685.309 1787.86,685.309 1788.42,685.309 1788.98,685.309 1789.53,685.309 1790.09,685.309 1790.65,685.309 1791.21,685.309 1791.77,685.309 1792.33,685.309 1792.89,685.309 1793.45,685.309 1794.01,685.309 1794.57,685.309 1795.13,685.309 1795.69,685.309 1796.25,685.309 1796.8,685.309 1797.36,685.309 1797.92,685.309 1798.48,685.309 1799.04,685.309 1799.6,685.309 1800.16,685.309 1800.72,685.309 1801.28,685.309 1801.84,685.309 1802.4,685.309 1802.96,685.309 1803.52,685.309 1804.08,685.309 1804.63,685.309 1805.19,685.309 1805.75,685.309 1806.31,685.309 1806.87,685.309 1807.43,685.309 1807.99,685.309 1808.55,685.309 1809.11,685.309 1809.67,685.309 1810.23,685.309 1810.79,685.309 1811.35,685.309 1811.9,685.309 1812.46,685.309 1813.02,685.309 1813.58,685.309 1814.14,685.309 1814.7,685.309 1815.26,685.309 1815.82,685.309 1816.38,685.309 1816.94,685.309 1817.5,685.309 1818.06,685.309 1818.62,685.309 1819.18,685.309 1819.73,685.309 1820.29,685.309 1820.85,685.309 1821.41,685.309 1821.97,685.309 1822.53,685.309 1823.09,685.309 1823.65,685.309 1824.21,685.309 1824.77,685.309 1825.33,685.309 1825.89,685.309 1826.45,685.309 1827,685.309 1827.56,685.309 1828.12,685.309 1828.68,685.309 1829.24,685.309 1829.8,685.309 1830.36,685.309 1830.92,685.309 1831.48,685.309 1832.04,685.309 1832.6,685.309 1833.16,685.309 1833.72,685.309 1834.27,685.309 1834.83,685.309 1835.39,685.309 1835.95,685.309 1836.51,685.309 1837.07,685.309 1837.63,685.309 1838.19,685.309 \"/>\n<path clip-path=\"url(#clip063)\" d=\"M720.247 683.301 L720.806 683.301 L721.365 683.301 L721.924 683.301 L722.484 683.301 L723.043 683.301 L723.602 683.301 L724.161 683.301 L724.721 683.301 L725.28 683.301 L725.839 683.301 L726.398 683.301 L726.958 683.301 L727.517 683.301 L728.076 683.301 L728.635 683.301 L729.195 683.301 L729.754 683.301 L730.313 683.301 L730.872 683.301 L731.432 683.301 L731.991 683.301 L732.55 683.301 L733.109 683.301 L733.669 683.301 L734.228 683.301 L734.787 683.301 L735.346 683.301 L735.906 683.301 L736.465 683.301 L737.024 683.301 L737.583 683.301 L738.143 683.301 L738.702 683.301 L739.261 683.301 L739.82 683.301 L740.38 683.301 L740.939 683.301 L741.498 683.301 L742.057 683.301 L742.617 683.301 L743.176 683.301 L743.735 683.301 L744.294 683.301 L744.854 683.301 L745.413 683.301 L745.972 683.301 L746.531 683.301 L747.091 683.301 L747.65 683.301 L748.209 683.301 L748.768 683.301 L749.328 683.301 L749.887 683.301 L750.446 683.301 L751.005 683.301 L751.565 683.301 L752.124 683.301 L752.683 683.301 L753.242 683.301 L753.802 683.301 L754.361 683.301 L754.92 683.301 L755.479 683.301 L756.039 683.301 L756.598 683.301 L757.157 683.301 L757.716 683.301 L758.276 683.301 L758.835 683.301 L759.394 683.301 L759.953 683.301 L760.513 683.301 L761.072 683.301 L761.631 683.301 L762.19 683.301 L762.75 683.301 L763.309 683.301 L763.868 683.301 L764.427 683.301 L764.987 683.301 L765.546 683.301 L766.105 683.301 L766.664 683.301 L767.224 683.301 L767.783 683.301 L768.342 683.301 L768.901 683.301 L769.461 683.301 L770.02 683.301 L770.579 683.301 L771.138 683.301 L771.698 683.301 L772.257 683.301 L772.816 683.301 L773.375 683.301 L773.935 683.301 L774.494 683.301 L775.053 683.301 L775.612 683.301 L776.172 683.301 L776.731 683.301 L777.29 683.301 L777.849 683.301 L778.409 683.301 L778.968 683.301 L779.527 683.301 L780.086 683.301 L780.646 683.301 L781.205 683.301 L781.764 683.301 L782.323 683.301 L782.883 683.301 L783.442 683.301 L784.001 683.301 L784.56 683.301 L785.12 683.301 L785.679 683.301 L786.238 683.301 L786.797 683.301 L787.357 683.301 L787.916 683.301 L788.475 683.301 L789.034 683.301 L789.594 683.301 L790.153 683.301 L790.712 683.301 L791.271 683.301 L791.831 683.301 L792.39 683.301 L792.949 683.301 L793.508 683.301 L794.068 683.301 L794.627 683.301 L795.186 683.301 L795.745 683.301 L796.305 683.301 L796.864 683.301 L797.423 683.301 L797.982 683.301 L798.542 683.301 L799.101 683.301 L799.66 683.301 L800.219 683.301 L800.779 683.301 L801.338 683.301 L801.897 683.301 L802.456 683.301 L803.016 683.301 L803.575 683.301 L804.134 683.301 L804.693 683.301 L805.253 683.301 L805.812 683.301 L806.371 683.301 L806.931 683.301 L807.49 683.301 L808.049 683.301 L808.608 683.301 L809.168 683.301 L809.727 683.301 L810.286 683.301 L810.845 683.301 L811.405 683.301 L811.964 683.301 L812.523 683.301 L813.082 683.301 L813.642 683.301 L814.201 683.301 L814.76 683.301 L815.319 683.301 L815.879 683.301 L816.438 683.301 L816.997 683.301 L817.556 683.301 L818.116 683.301 L818.675 683.301 L819.234 683.301 L819.793 683.301 L820.353 683.301 L820.912 683.301 L821.471 683.301 L822.03 683.301 L822.59 683.301 L823.149 683.301 L823.708 683.301 L824.267 683.301 L824.827 683.301 L825.386 683.301 L825.945 683.301 L826.504 683.301 L827.064 683.301 L827.623 683.301 L828.182 683.301 L828.741 683.301 L829.301 683.301 L829.86 683.301 L830.419 683.301 L830.978 683.301 L831.538 683.301 L832.097 683.301 L832.656 683.301 L833.215 683.301 L833.775 683.301 L834.334 683.301 L834.893 683.301 L835.452 683.301 L836.012 683.301 L836.571 683.301 L837.13 683.301 L837.689 683.301 L838.249 683.301 L838.808 683.301 L839.367 683.301 L839.926 683.301 L840.486 683.301 L841.045 683.301 L841.604 683.301 L842.163 683.301 L842.723 683.301 L843.282 683.301 L843.841 683.301 L844.4 683.301 L844.96 683.301 L845.519 683.301 L846.078 683.301 L846.637 683.301 L847.197 683.301 L847.756 683.301 L848.315 683.301 L848.874 683.301 L849.434 683.301 L849.993 683.301 L850.552 683.301 L851.111 683.301 L851.671 683.301 L852.23 683.301 L852.789 683.301 L853.348 683.301 L853.908 683.301 L854.467 683.301 L855.026 683.301 L855.585 683.301 L856.145 683.301 L856.704 683.301 L857.263 683.301 L857.822 683.301 L858.382 683.301 L858.941 683.301 L859.5 683.301 L860.059 683.301 L860.619 683.301 L861.178 683.301 L861.737 683.301 L862.296 683.301 L862.856 683.301 L863.415 683.301 L863.974 683.301 L864.533 683.301 L865.093 683.301 L865.652 683.301 L866.211 683.301 L866.77 683.301 L867.33 683.301 L867.889 683.301 L868.448 683.301 L869.007 683.301 L869.567 683.301 L870.126 683.301 L870.685 683.301 L871.244 683.301 L871.804 683.301 L872.363 683.301 L872.922 683.301 L873.481 683.301 L874.041 683.301 L874.6 683.301 L875.159 683.301 L875.718 683.301 L876.278 683.301 L876.837 683.301 L877.396 683.301 L877.955 683.301 L878.515 683.301 L879.074 683.301 L879.633 683.301 L880.192 683.301 L880.752 683.301 L881.311 683.301 L881.87 683.301 L882.429 683.301 L882.989 683.301 L883.548 683.301 L884.107 683.301 L884.666 683.301 L885.226 683.301 L885.785 683.301 L886.344 683.301 L886.903 683.301 L887.463 683.301 L888.022 683.301 L888.581 683.301 L889.14 683.301 L889.7 683.301 L890.259 683.301 L890.818 683.301 L891.377 683.301 L891.937 683.301 L892.496 683.301 L893.055 683.301 L893.614 683.301 L894.174 683.301 L894.733 683.301 L895.292 683.301 L895.851 683.301 L896.411 683.301 L896.97 683.301 L897.529 683.301 L898.088 683.301 L898.648 683.301 L899.207 683.301 L899.766 683.301 L900.325 683.301 L900.885 683.301 L901.444 683.301 L902.003 683.301 L902.562 683.301 L903.122 683.301 L903.681 683.301 L904.24 683.301 L904.799 683.301 L905.359 683.301 L905.918 683.301 L906.477 683.301 L907.036 683.301 L907.596 683.301 L908.155 683.301 L908.714 683.301 L909.273 683.301 L909.833 683.301 L910.392 683.301 L910.951 683.301 L911.51 683.301 L912.07 683.301 L912.629 683.301 L913.188 683.301 L913.747 683.301 L914.307 683.301 L914.866 683.301 L915.425 683.301 L915.984 683.301 L916.544 683.301 L917.103 683.301 L917.662 683.301 L918.221 683.301 L918.781 683.301 L919.34 683.301 L919.899 683.301 L920.458 683.301 L921.018 683.301 L921.577 683.301 L922.136 683.301 L922.695 683.301 L923.255 683.301 L923.814 683.301 L924.373 683.301 L924.932 683.301 L925.492 683.301 L926.051 683.301 L926.61 683.301 L927.169 683.301 L927.729 683.301 L928.288 683.301 L928.847 683.301 L929.406 683.301 L929.966 683.301 L930.525 683.301 L931.084 683.301 L931.644 683.301 L932.203 683.301 L932.762 683.301 L933.321 683.301 L933.881 683.301 L934.44 683.301 L934.999 683.301 L935.558 683.301 L936.118 683.301 L936.677 683.301 L937.236 683.301 L937.795 683.301 L938.355 683.301 L938.914 683.301 L939.473 683.301 L940.032 683.301 L940.592 683.301 L941.151 683.301 L941.71 683.301 L942.269 683.301 L942.829 683.301 L943.388 683.301 L943.947 683.301 L944.506 683.301 L945.066 683.301 L945.625 683.301 L946.184 683.301 L946.743 683.301 L947.303 683.301 L947.862 683.301 L948.421 683.301 L948.98 683.301 L949.54 683.301 L950.099 683.301 L950.658 683.301 L951.217 683.301 L951.777 683.301 L952.336 683.301 L952.895 683.301 L953.454 683.301 L954.014 683.301 L954.573 683.301 L955.132 683.301 L955.691 683.301 L956.251 683.301 L956.81 683.301 L957.369 683.301 L957.928 683.301 L958.488 683.301 L959.047 683.301 L959.606 683.301 L960.165 683.301 L960.725 683.301 L961.284 683.301 L961.843 683.301 L962.402 683.301 L962.962 683.301 L963.521 683.301 L964.08 683.301 L964.639 683.301 L965.199 683.301 L965.758 683.301 L966.317 683.301 L966.876 683.301 L967.436 683.301 L967.995 683.301 L968.554 683.301 L969.113 683.301 L969.673 683.301 L970.232 683.301 L970.791 683.301 L971.35 683.301 L971.91 683.301 L972.469 683.301 L973.028 683.301 L973.587 683.301 L974.147 683.301 L974.706 683.301 L975.265 683.301 L975.824 683.301 L976.384 683.301 L976.943 683.301 L977.502 683.301 L978.061 683.301 L978.621 683.301 L979.18 683.301 L979.739 683.301 L980.298 683.301 L980.858 683.301 L981.417 683.301 L981.976 683.301 L982.535 683.301 L983.095 683.301 L983.654 683.301 L984.213 683.301 L984.772 683.301 L985.332 683.301 L985.891 683.301 L986.45 683.301 L987.009 683.301 L987.569 683.301 L988.128 683.301 L988.687 683.301 L989.246 683.301 L989.806 683.301 L990.365 683.301 L990.924 683.301 L991.483 683.301 L992.043 683.301 L992.602 683.301 L993.161 683.301 L993.72 683.301 L994.28 683.301 L994.839 683.301 L995.398 683.301 L995.957 683.301 L996.517 683.301 L997.076 683.301 L997.635 683.301 L998.194 683.301 L998.754 683.301 L999.313 683.301 L999.872 683.301 L1000.43 683.301 L1000.99 683.301 L1001.55 683.301 L1002.11 683.301 L1002.67 683.301 L1003.23 683.301 L1003.79 683.301 L1004.35 683.301 L1004.91 683.301 L1005.46 683.301 L1006.02 683.301 L1006.58 683.301 L1007.14 683.301 L1007.7 683.301 L1008.26 683.301 L1008.82 683.301 L1009.38 683.301 L1009.94 683.301 L1010.5 683.301 L1011.06 683.301 L1011.62 683.301 L1012.18 683.301 L1012.73 683.301 L1013.29 683.301 L1013.85 683.301 L1014.41 683.301 L1014.97 683.301 L1015.53 683.301 L1016.09 683.301 L1016.65 683.301 L1017.21 683.301 L1017.77 683.301 L1018.33 683.301 L1018.89 683.301 L1019.45 683.301 L1020.01 683.301 L1020.56 683.301 L1021.12 683.301 L1021.68 683.301 L1022.24 683.301 L1022.8 683.301 L1023.36 683.301 L1023.92 683.301 L1024.48 683.301 L1025.04 683.301 L1025.6 683.301 L1026.16 683.301 L1026.72 683.301 L1027.28 683.301 L1027.83 683.301 L1028.39 683.301 L1028.95 683.301 L1029.51 683.301 L1030.07 683.301 L1030.63 683.301 L1031.19 683.301 L1031.75 683.301 L1032.31 683.301 L1032.87 683.301 L1033.43 683.301 L1033.99 683.301 L1034.55 683.301 L1035.1 683.301 L1035.66 683.301 L1036.22 683.301 L1036.78 683.301 L1037.34 683.301 L1037.9 683.301 L1038.46 683.301 L1039.02 683.301 L1039.58 683.301 L1040.14 683.301 L1040.7 683.301 L1041.26 683.301 L1041.82 683.301 L1042.38 683.301 L1042.93 683.301 L1043.49 683.301 L1044.05 683.301 L1044.61 683.301 L1045.17 683.301 L1045.73 683.301 L1046.29 683.301 L1046.85 683.301 L1047.41 683.301 L1047.97 683.301 L1048.53 683.301 L1049.09 683.301 L1049.65 683.301 L1050.2 683.301 L1050.76 683.301 L1051.32 683.301 L1051.88 683.301 L1052.44 683.301 L1053 683.301 L1053.56 683.301 L1054.12 683.301 L1054.68 683.301 L1055.24 683.301 L1055.8 683.301 L1056.36 683.301 L1056.92 683.301 L1057.48 683.301 L1058.03 683.301 L1058.59 683.301 L1059.15 683.301 L1059.71 683.301 L1060.27 683.301 L1060.83 683.301 L1061.39 683.301 L1061.95 683.301 L1062.51 683.301 L1063.07 683.301 L1063.63 683.301 L1064.19 683.301 L1064.75 683.301 L1065.3 683.301 L1065.86 683.301 L1066.42 683.301 L1066.98 683.301 L1067.54 683.301 L1068.1 683.301 L1068.66 683.301 L1069.22 683.301 L1069.78 683.301 L1070.34 683.301 L1070.9 683.301 L1071.46 683.301 L1072.02 683.301 L1072.57 683.301 L1073.13 683.301 L1073.69 683.301 L1074.25 683.301 L1074.81 683.301 L1075.37 683.301 L1075.93 683.301 L1076.49 683.301 L1077.05 683.301 L1077.61 683.301 L1078.17 683.301 L1078.73 683.301 L1079.29 683.301 L1079.85 683.301 L1080.4 683.301 L1080.96 683.301 L1081.52 683.301 L1082.08 683.301 L1082.64 683.301 L1083.2 683.301 L1083.76 683.301 L1084.32 683.301 L1084.88 683.301 L1085.44 683.301 L1086 683.301 L1086.56 683.301 L1087.12 683.301 L1087.67 683.301 L1088.23 683.301 L1088.79 683.301 L1089.35 683.301 L1089.91 683.301 L1090.47 683.301 L1091.03 683.301 L1091.59 683.301 L1092.15 683.301 L1092.71 683.301 L1093.27 683.301 L1093.83 683.301 L1094.39 683.301 L1094.94 683.301 L1095.5 683.301 L1096.06 683.301 L1096.62 683.301 L1097.18 683.301 L1097.74 683.301 L1098.3 683.301 L1098.86 683.301 L1099.42 683.301 L1099.98 683.301 L1100.54 683.301 L1101.1 683.301 L1101.66 683.301 L1102.22 683.301 L1102.77 683.301 L1103.33 683.301 L1103.89 683.301 L1104.45 683.301 L1105.01 683.301 L1105.57 683.301 L1106.13 683.301 L1106.69 683.301 L1107.25 683.301 L1107.81 683.301 L1108.37 683.301 L1108.93 683.301 L1109.49 683.301 L1110.04 683.301 L1110.6 683.301 L1111.16 683.301 L1111.72 683.301 L1112.28 683.301 L1112.84 683.301 L1113.4 683.301 L1113.96 683.301 L1114.52 683.301 L1115.08 683.301 L1115.64 683.301 L1116.2 683.301 L1116.76 683.301 L1117.31 683.301 L1117.87 683.301 L1118.43 683.301 L1118.99 683.301 L1119.55 683.301 L1120.11 683.301 L1120.67 683.301 L1121.23 683.301 L1121.79 683.301 L1122.35 683.301 L1122.91 683.301 L1123.47 683.301 L1124.03 683.301 L1124.59 683.301 L1125.14 683.301 L1125.7 683.301 L1126.26 683.301 L1126.82 683.301 L1127.38 683.301 L1127.94 683.301 L1128.5 683.301 L1129.06 683.301 L1129.62 683.301 L1130.18 683.301 L1130.74 683.301 L1131.3 683.301 L1131.86 683.301 L1132.41 683.301 L1132.97 683.301 L1133.53 683.301 L1134.09 683.301 L1134.65 683.301 L1135.21 683.301 L1135.77 683.301 L1136.33 683.301 L1136.89 683.301 L1137.45 683.301 L1138.01 683.301 L1138.57 683.301 L1139.13 683.301 L1139.68 683.301 L1140.24 683.301 L1140.8 683.301 L1141.36 683.301 L1141.92 683.301 L1142.48 683.301 L1143.04 683.301 L1143.6 683.301 L1144.16 683.301 L1144.72 683.301 L1145.28 683.301 L1145.84 683.301 L1146.4 683.301 L1146.96 683.301 L1147.51 683.301 L1148.07 683.301 L1148.63 683.301 L1149.19 683.301 L1149.75 683.301 L1150.31 683.301 L1150.87 683.301 L1151.43 683.301 L1151.99 683.301 L1152.55 683.301 L1153.11 683.301 L1153.67 683.301 L1154.23 683.301 L1154.78 683.301 L1155.34 683.301 L1155.9 683.301 L1156.46 683.301 L1157.02 683.301 L1157.58 683.301 L1158.14 683.301 L1158.7 683.301 L1159.26 683.301 L1159.82 683.301 L1160.38 683.301 L1160.94 683.301 L1161.5 683.301 L1162.05 683.301 L1162.61 683.301 L1163.17 683.301 L1163.73 683.301 L1164.29 683.301 L1164.85 683.301 L1165.41 683.301 L1165.97 683.301 L1166.53 683.301 L1167.09 683.301 L1167.65 683.301 L1168.21 683.301 L1168.77 683.301 L1169.33 683.301 L1169.88 683.301 L1170.44 683.301 L1171 683.301 L1171.56 683.301 L1172.12 683.301 L1172.68 683.301 L1173.24 683.301 L1173.8 683.301 L1174.36 683.301 L1174.92 683.301 L1175.48 683.301 L1176.04 683.301 L1176.6 683.301 L1177.15 683.301 L1177.71 683.301 L1178.27 683.301 L1178.83 683.301 L1179.39 683.301 L1179.95 683.301 L1180.51 683.301 L1181.07 683.301 L1181.63 683.301 L1182.19 683.301 L1182.75 683.301 L1183.31 683.301 L1183.87 683.301 L1184.43 683.301 L1184.98 683.301 L1185.54 683.301 L1186.1 683.301 L1186.66 683.301 L1187.22 683.301 L1187.78 683.301 L1188.34 683.301 L1188.9 683.301 L1189.46 683.301 L1190.02 683.301 L1190.58 683.301 L1191.14 683.301 L1191.7 683.301 L1192.25 683.301 L1192.81 683.301 L1193.37 683.301 L1193.93 683.301 L1194.49 683.301 L1195.05 683.301 L1195.61 683.301 L1196.17 683.301 L1196.73 683.301 L1197.29 683.301 L1197.85 683.301 L1198.41 683.301 L1198.97 683.301 L1199.52 683.301 L1200.08 683.301 L1200.64 683.301 L1201.2 683.301 L1201.76 683.301 L1202.32 683.301 L1202.88 683.301 L1203.44 683.301 L1204 683.301 L1204.56 683.301 L1205.12 683.301 L1205.68 683.301 L1206.24 683.301 L1206.8 683.301 L1207.35 683.301 L1207.91 683.301 L1208.47 683.301 L1209.03 683.301 L1209.59 683.301 L1210.15 683.301 L1210.71 683.301 L1211.27 683.301 L1211.83 683.301 L1212.39 683.301 L1212.95 683.301 L1213.51 683.301 L1214.07 683.301 L1214.62 683.301 L1215.18 683.301 L1215.74 683.301 L1216.3 683.301 L1216.86 683.301 L1217.42 683.301 L1217.98 683.301 L1218.54 683.301 L1219.1 683.301 L1219.66 683.301 L1220.22 683.301 L1220.78 683.301 L1221.34 683.301 L1221.89 683.301 L1222.45 683.301 L1223.01 683.301 L1223.57 683.301 L1224.13 683.301 L1224.69 683.301 L1225.25 683.301 L1225.81 683.301 L1226.37 683.301 L1226.93 683.301 L1227.49 683.301 L1228.05 683.301 L1228.61 683.301 L1229.17 683.301 L1229.72 683.301 L1230.28 683.301 L1230.84 683.301 L1231.4 683.301 L1231.96 683.301 L1232.52 683.301 L1233.08 683.301 L1233.64 683.301 L1234.2 683.301 L1234.76 683.301 L1235.32 683.301 L1235.88 683.301 L1236.44 683.301 L1236.99 683.301 L1237.55 683.301 L1238.11 683.301 L1238.67 683.301 L1239.23 683.301 L1239.79 683.301 L1240.35 683.301 L1240.91 683.301 L1241.47 683.301 L1242.03 683.301 L1242.59 683.301 L1243.15 683.301 L1243.71 683.301 L1244.26 683.301 L1244.82 683.301 L1245.38 683.301 L1245.94 683.301 L1246.5 683.301 L1247.06 683.301 L1247.62 683.301 L1248.18 683.301 L1248.74 683.301 L1249.3 683.301 L1249.86 683.301 L1250.42 683.301 L1250.98 683.301 L1251.54 683.301 L1252.09 683.301 L1252.65 683.301 L1253.21 683.301 L1253.77 683.301 L1254.33 683.301 L1254.89 683.301 L1255.45 683.301 L1256.01 683.301 L1256.57 683.301 L1257.13 683.301 L1257.69 683.301 L1258.25 683.301 L1258.81 683.301 L1259.36 683.301 L1259.92 683.301 L1260.48 683.301 L1261.04 683.301 L1261.6 683.301 L1262.16 683.301 L1262.72 683.301 L1263.28 683.301 L1263.84 683.301 L1264.4 683.301 L1264.96 683.301 L1265.52 683.301 L1266.08 683.301 L1266.63 683.301 L1267.19 683.301 L1267.75 683.301 L1268.31 683.301 L1268.87 683.301 L1269.43 683.301 L1269.99 683.301 L1270.55 683.301 L1271.11 683.301 L1271.67 683.301 L1272.23 683.301 L1272.79 683.301 L1273.35 683.301 L1273.91 683.301 L1274.46 683.301 L1275.02 683.301 L1275.58 683.301 L1276.14 683.301 L1276.7 683.301 L1277.26 683.301 L1277.82 683.301 L1278.38 683.301 L1278.94 683.301 L1279.5 683.301 L1280.06 683.301 L1280.62 683.301 L1281.18 683.301 L1281.73 683.301 L1282.29 683.301 L1282.85 683.301 L1283.41 683.301 L1283.97 683.301 L1284.53 683.301 L1285.09 683.301 L1285.65 683.301 L1286.21 683.301 L1286.77 683.301 L1287.33 683.301 L1287.89 683.301 L1288.45 683.301 L1289 683.301 L1289.56 683.301 L1290.12 683.301 L1290.68 683.301 L1291.24 683.301 L1291.8 683.301 L1292.36 683.301 L1292.92 683.301 L1293.48 683.301 L1294.04 683.301 L1294.6 683.301 L1295.16 683.301 L1295.72 683.301 L1296.28 683.301 L1296.83 683.301 L1297.39 683.301 L1297.95 683.301 L1298.51 683.301 L1299.07 683.301 L1299.63 683.301 L1300.19 683.301 L1300.75 683.301 L1301.31 683.301 L1301.87 683.301 L1302.43 683.301 L1302.99 683.301 L1303.55 683.301 L1304.1 683.301 L1304.66 683.301 L1305.22 683.301 L1305.78 683.301 L1306.34 683.301 L1306.9 683.301 L1307.46 683.301 L1308.02 683.301 L1308.58 683.301 L1309.14 683.301 L1309.7 683.301 L1310.26 683.301 L1310.82 683.301 L1311.38 683.301 L1311.93 683.301 L1312.49 683.301 L1313.05 683.301 L1313.61 683.301 L1314.17 683.301 L1314.73 683.301 L1315.29 683.301 L1315.85 683.301 L1316.41 683.301 L1316.97 683.301 L1317.53 683.301 L1318.09 683.301 L1318.65 683.301 L1319.2 683.301 L1319.76 683.301 L1320.32 683.301 L1320.88 683.301 L1321.44 683.301 L1322 683.301 L1322.56 683.301 L1323.12 683.301 L1323.68 683.301 L1324.24 683.301 L1324.8 683.301 L1325.36 683.301 L1325.92 683.301 L1326.47 683.301 L1327.03 683.301 L1327.59 683.301 L1328.15 683.301 L1328.71 683.301 L1329.27 683.301 L1329.83 683.301 L1330.39 683.301 L1330.95 683.301 L1331.51 683.301 L1332.07 683.301 L1332.63 683.301 L1333.19 683.301 L1333.75 683.301 L1334.3 683.301 L1334.86 683.301 L1335.42 683.301 L1335.98 683.301 L1336.54 683.301 L1337.1 683.301 L1337.66 683.301 L1338.22 683.301 L1338.78 683.301 L1339.34 683.301 L1339.9 683.301 L1340.46 683.301 L1341.02 683.301 L1341.57 683.301 L1342.13 683.301 L1342.69 683.301 L1343.25 683.301 L1343.81 683.301 L1344.37 683.301 L1344.93 683.301 L1345.49 683.301 L1346.05 683.301 L1346.61 683.301 L1347.17 683.301 L1347.73 683.301 L1348.29 683.301 L1348.84 683.301 L1349.4 683.301 L1349.96 683.301 L1350.52 683.301 L1351.08 683.301 L1351.64 683.301 L1352.2 683.301 L1352.76 683.301 L1353.32 683.301 L1353.88 683.301 L1354.44 683.301 L1355 683.301 L1355.56 683.301 L1356.12 683.301 L1356.67 683.301 L1357.23 683.301 L1357.79 683.301 L1358.35 683.301 L1358.91 683.301 L1359.47 683.301 L1360.03 683.301 L1360.59 683.301 L1361.15 683.301 L1361.71 683.301 L1362.27 683.301 L1362.83 683.301 L1363.39 683.301 L1363.94 683.301 L1364.5 683.301 L1365.06 683.301 L1365.62 683.301 L1366.18 683.301 L1366.74 683.301 L1367.3 683.301 L1367.86 683.301 L1368.42 683.301 L1368.98 683.301 L1369.54 683.301 L1370.1 683.301 L1370.66 683.301 L1371.21 683.301 L1371.77 683.301 L1372.33 683.301 L1372.89 683.301 L1373.45 683.301 L1374.01 683.301 L1374.57 683.301 L1375.13 683.301 L1375.69 683.301 L1376.25 683.301 L1376.81 683.301 L1377.37 683.301 L1377.93 683.301 L1378.49 683.301 L1379.04 683.301 L1379.6 683.301 L1380.16 683.301 L1380.72 683.301 L1381.28 683.301 L1381.84 683.301 L1382.4 683.301 L1382.96 683.301 L1383.52 683.301 L1384.08 683.301 L1384.64 683.301 L1385.2 683.301 L1385.76 683.301 L1386.31 683.301 L1386.87 683.301 L1387.43 683.301 L1387.99 683.301 L1388.55 683.301 L1389.11 683.301 L1389.67 683.301 L1390.23 683.301 L1390.79 683.301 L1391.35 683.301 L1391.91 683.301 L1392.47 683.301 L1393.03 683.301 L1393.58 683.301 L1394.14 683.301 L1394.7 683.301 L1395.26 683.301 L1395.82 683.301 L1396.38 683.301 L1396.94 683.301 L1397.5 683.301 L1398.06 683.301 L1398.62 683.301 L1399.18 683.301 L1399.74 683.301 L1400.3 683.301 L1400.86 683.301 L1401.41 683.301 L1401.97 683.301 L1402.53 683.301 L1403.09 683.301 L1403.65 683.301 L1404.21 683.301 L1404.77 683.301 L1405.33 683.301 L1405.89 683.301 L1406.45 683.301 L1407.01 683.301 L1407.57 683.301 L1408.13 683.301 L1408.68 683.301 L1409.24 683.301 L1409.8 683.301 L1410.36 683.301 L1410.92 683.301 L1411.48 683.301 L1412.04 683.301 L1412.6 683.301 L1413.16 683.301 L1413.72 683.301 L1414.28 683.301 L1414.84 683.301 L1415.4 683.301 L1415.95 683.301 L1416.51 683.301 L1417.07 683.301 L1417.63 683.301 L1418.19 683.301 L1418.75 683.301 L1419.31 683.301 L1419.87 683.301 L1420.43 683.301 L1420.99 683.301 L1421.55 683.301 L1422.11 683.301 L1422.67 683.301 L1423.23 683.301 L1423.78 683.301 L1424.34 683.301 L1424.9 683.301 L1425.46 683.301 L1426.02 683.301 L1426.58 683.301 L1427.14 683.301 L1427.7 683.301 L1428.26 683.301 L1428.82 683.301 L1429.38 683.301 L1429.94 683.301 L1430.5 683.301 L1431.05 683.301 L1431.61 683.301 L1432.17 683.301 L1432.73 683.301 L1433.29 683.301 L1433.85 683.301 L1434.41 683.301 L1434.97 683.301 L1435.53 683.301 L1436.09 683.301 L1436.65 683.301 L1437.21 683.301 L1437.77 683.301 L1438.33 683.301 L1438.88 683.301 L1439.44 683.301 L1440 683.301 L1440.56 683.301 L1441.12 683.301 L1441.68 683.301 L1442.24 683.301 L1442.8 683.301 L1443.36 683.301 L1443.92 683.301 L1444.48 683.301 L1445.04 683.301 L1445.6 683.301 L1446.15 683.301 L1446.71 683.301 L1447.27 683.301 L1447.83 683.301 L1448.39 683.301 L1448.95 683.301 L1449.51 683.301 L1450.07 683.301 L1450.63 683.301 L1451.19 683.301 L1451.75 683.301 L1452.31 683.301 L1452.87 683.301 L1453.42 683.301 L1453.98 683.301 L1454.54 683.301 L1455.1 683.301 L1455.66 683.301 L1456.22 683.301 L1456.78 683.301 L1457.34 683.301 L1457.9 683.301 L1458.46 683.301 L1459.02 683.301 L1459.58 683.301 L1460.14 683.301 L1460.7 683.301 L1461.25 683.301 L1461.81 683.301 L1462.37 683.301 L1462.93 683.301 L1463.49 683.301 L1464.05 683.301 L1464.61 683.301 L1465.17 683.301 L1465.73 683.301 L1466.29 683.301 L1466.85 683.301 L1467.41 683.301 L1467.97 683.301 L1468.52 683.301 L1469.08 683.301 L1469.64 683.301 L1470.2 683.301 L1470.76 683.301 L1471.32 683.301 L1471.88 683.301 L1472.44 683.301 L1473 683.301 L1473.56 683.301 L1474.12 683.301 L1474.68 683.301 L1475.24 683.301 L1475.79 683.301 L1476.35 683.301 L1476.91 683.301 L1477.47 683.301 L1478.03 683.301 L1478.59 683.301 L1479.15 683.301 L1479.71 683.301 L1480.27 683.301 L1480.83 683.301 L1481.39 683.301 L1481.95 683.301 L1482.51 683.301 L1483.07 683.301 L1483.62 683.301 L1484.18 683.301 L1484.74 683.301 L1485.3 683.301 L1485.86 683.301 L1486.42 683.301 L1486.98 683.301 L1487.54 683.301 L1488.1 683.301 L1488.66 683.301 L1489.22 683.301 L1489.78 683.301 L1490.34 683.301 L1490.89 683.301 L1491.45 683.301 L1492.01 683.301 L1492.57 683.301 L1493.13 683.301 L1493.69 683.301 L1494.25 683.301 L1494.81 683.301 L1495.37 683.301 L1495.93 683.301 L1496.49 683.301 L1497.05 683.301 L1497.61 683.301 L1498.16 683.301 L1498.72 683.301 L1499.28 683.301 L1499.84 683.301 L1500.4 683.301 L1500.96 683.301 L1501.52 683.301 L1502.08 683.301 L1502.64 683.301 L1503.2 683.301 L1503.76 683.301 L1504.32 683.301 L1504.88 683.301 L1505.44 683.301 L1505.99 683.301 L1506.55 683.301 L1507.11 683.301 L1507.67 683.301 L1508.23 683.301 L1508.79 683.301 L1509.35 683.301 L1509.91 683.301 L1510.47 683.301 L1511.03 683.301 L1511.59 683.301 L1512.15 683.301 L1512.71 683.301 L1513.26 683.301 L1513.82 683.301 L1514.38 683.301 L1514.94 683.301 L1515.5 683.301 L1516.06 683.301 L1516.62 683.301 L1517.18 683.301 L1517.74 683.301 L1518.3 683.301 L1518.86 683.301 L1519.42 683.301 L1519.98 683.301 L1520.53 683.301 L1521.09 683.301 L1521.65 683.301 L1522.21 683.301 L1522.77 683.301 L1523.33 683.301 L1523.89 683.301 L1524.45 683.301 L1525.01 683.301 L1525.57 683.301 L1526.13 683.301 L1526.69 683.301 L1527.25 683.301 L1527.81 683.301 L1528.36 683.301 L1528.92 683.301 L1529.48 683.301 L1530.04 683.301 L1530.6 683.301 L1531.16 683.301 L1531.72 683.301 L1532.28 683.301 L1532.84 683.301 L1533.4 683.301 L1533.96 683.301 L1534.52 683.301 L1535.08 683.301 L1535.63 683.301 L1536.19 683.301 L1536.75 683.301 L1537.31 683.301 L1537.87 683.301 L1538.43 683.301 L1538.99 683.301 L1539.55 683.301 L1540.11 683.301 L1540.67 683.301 L1541.23 683.301 L1541.79 683.301 L1542.35 683.301 L1542.9 683.301 L1543.46 683.301 L1544.02 683.301 L1544.58 683.301 L1545.14 683.301 L1545.7 683.301 L1546.26 683.301 L1546.82 683.301 L1547.38 683.301 L1547.94 683.301 L1548.5 683.301 L1549.06 683.301 L1549.62 683.301 L1550.18 683.301 L1550.73 683.301 L1551.29 683.301 L1551.85 683.301 L1552.41 683.301 L1552.97 683.301 L1553.53 683.301 L1554.09 683.301 L1554.65 683.301 L1555.21 683.301 L1555.77 683.301 L1556.33 683.301 L1556.89 683.301 L1557.45 683.301 L1558 683.301 L1558.56 683.301 L1559.12 683.301 L1559.68 683.301 L1560.24 683.301 L1560.8 683.301 L1561.36 683.301 L1561.92 683.301 L1562.48 683.301 L1563.04 683.301 L1563.6 683.301 L1564.16 683.301 L1564.72 683.301 L1565.28 683.301 L1565.83 683.301 L1566.39 683.301 L1566.95 683.301 L1567.51 683.301 L1568.07 683.301 L1568.63 683.301 L1569.19 683.301 L1569.75 683.301 L1570.31 683.301 L1570.87 683.301 L1571.43 683.301 L1571.99 683.301 L1572.55 683.301 L1573.1 683.301 L1573.66 683.301 L1574.22 683.301 L1574.78 683.301 L1575.34 683.301 L1575.9 683.301 L1576.46 683.301 L1577.02 683.301 L1577.58 683.301 L1578.14 683.301 L1578.7 683.301 L1579.26 683.301 L1579.82 683.301 L1580.37 683.301 L1580.93 683.301 L1581.49 683.301 L1582.05 683.301 L1582.61 683.301 L1583.17 683.301 L1583.73 683.301 L1584.29 683.301 L1584.85 683.301 L1585.41 683.301 L1585.97 683.301 L1586.53 683.301 L1587.09 683.301 L1587.65 683.301 L1588.2 683.301 L1588.76 683.301 L1589.32 683.301 L1589.88 683.301 L1590.44 683.301 L1591 683.301 L1591.56 683.301 L1592.12 683.301 L1592.68 683.301 L1593.24 683.301 L1593.8 683.301 L1594.36 683.301 L1594.92 683.301 L1595.47 683.301 L1596.03 683.301 L1596.59 683.301 L1597.15 683.301 L1597.71 683.301 L1598.27 683.301 L1598.83 683.301 L1599.39 683.301 L1599.95 683.301 L1600.51 683.301 L1601.07 683.301 L1601.63 683.301 L1602.19 683.301 L1602.74 683.301 L1603.3 683.301 L1603.86 683.301 L1604.42 683.301 L1604.98 683.301 L1605.54 683.301 L1606.1 683.301 L1606.66 683.301 L1607.22 683.301 L1607.78 683.301 L1608.34 683.301 L1608.9 683.301 L1609.46 683.301 L1610.02 683.301 L1610.57 683.301 L1611.13 683.301 L1611.69 683.301 L1612.25 683.301 L1612.81 683.301 L1613.37 683.301 L1613.93 683.301 L1614.49 683.301 L1615.05 683.301 L1615.61 683.301 L1616.17 683.301 L1616.73 683.301 L1617.29 683.301 L1617.84 683.301 L1618.4 683.301 L1618.96 683.301 L1619.52 683.301 L1620.08 683.301 L1620.64 683.301 L1621.2 683.301 L1621.76 683.301 L1622.32 683.301 L1622.88 683.301 L1623.44 683.301 L1624 683.301 L1624.56 683.301 L1625.11 683.301 L1625.67 683.301 L1626.23 683.301 L1626.79 683.301 L1627.35 683.301 L1627.91 683.301 L1628.47 683.301 L1629.03 683.301 L1629.59 683.301 L1630.15 683.301 L1630.71 683.301 L1631.27 683.301 L1631.83 683.301 L1632.39 683.301 L1632.94 683.301 L1633.5 683.301 L1634.06 683.301 L1634.62 683.301 L1635.18 683.301 L1635.74 683.301 L1636.3 683.301 L1636.86 683.301 L1637.42 683.301 L1637.98 683.301 L1638.54 683.301 L1639.1 683.301 L1639.66 683.301 L1640.21 683.301 L1640.77 683.301 L1641.33 683.301 L1641.89 683.301 L1642.45 683.301 L1643.01 683.301 L1643.57 683.301 L1644.13 683.301 L1644.69 683.301 L1645.25 683.301 L1645.81 683.301 L1646.37 683.301 L1646.93 683.301 L1647.48 683.301 L1648.04 683.301 L1648.6 683.301 L1649.16 683.301 L1649.72 683.301 L1650.28 683.301 L1650.84 683.301 L1651.4 683.301 L1651.96 683.301 L1652.52 683.301 L1653.08 683.301 L1653.64 683.301 L1654.2 683.301 L1654.76 683.301 L1655.31 683.301 L1655.87 683.301 L1656.43 683.301 L1656.99 683.301 L1657.55 683.301 L1658.11 683.301 L1658.67 683.301 L1659.23 683.301 L1659.79 683.301 L1660.35 683.301 L1660.91 683.301 L1661.47 683.301 L1662.03 683.301 L1662.58 683.301 L1663.14 683.301 L1663.7 683.301 L1664.26 683.301 L1664.82 683.301 L1665.38 683.301 L1665.94 683.301 L1666.5 683.301 L1667.06 683.301 L1667.62 683.301 L1668.18 683.301 L1668.74 683.301 L1669.3 683.301 L1669.85 683.301 L1670.41 683.301 L1670.97 683.301 L1671.53 683.301 L1672.09 683.301 L1672.65 683.301 L1673.21 683.301 L1673.77 683.301 L1674.33 683.301 L1674.89 683.301 L1675.45 683.301 L1676.01 683.301 L1676.57 683.301 L1677.13 683.301 L1677.68 683.301 L1678.24 683.301 L1678.8 683.301 L1679.36 683.301 L1679.92 683.301 L1680.48 683.301 L1681.04 683.301 L1681.6 683.301 L1682.16 683.301 L1682.72 683.301 L1683.28 683.301 L1683.84 683.301 L1684.4 683.301 L1684.95 683.301 L1685.51 683.301 L1686.07 683.301 L1686.63 683.301 L1687.19 683.301 L1687.75 683.301 L1688.31 683.301 L1688.87 683.301 L1689.43 683.301 L1689.99 683.301 L1690.55 683.301 L1691.11 683.301 L1691.67 683.301 L1692.23 683.301 L1692.78 683.301 L1693.34 683.301 L1693.9 683.301 L1694.46 683.301 L1695.02 683.301 L1695.58 683.301 L1696.14 683.301 L1696.7 683.301 L1697.26 683.301 L1697.82 683.301 L1698.38 683.301 L1698.94 683.301 L1699.5 683.301 L1700.05 683.301 L1700.61 683.301 L1701.17 683.301 L1701.73 683.301 L1702.29 683.301 L1702.85 683.301 L1703.41 683.301 L1703.97 683.301 L1704.53 683.301 L1705.09 683.301 L1705.65 683.301 L1706.21 683.301 L1706.77 683.301 L1707.32 683.301 L1707.88 683.301 L1708.44 683.301 L1709 683.301 L1709.56 683.301 L1710.12 683.301 L1710.68 683.301 L1711.24 683.301 L1711.8 683.301 L1712.36 683.301 L1712.92 683.301 L1713.48 683.301 L1714.04 683.301 L1714.6 683.301 L1715.15 683.301 L1715.71 683.301 L1716.27 683.301 L1716.83 683.301 L1717.39 683.301 L1717.95 683.301 L1718.51 683.301 L1719.07 683.301 L1719.63 683.301 L1720.19 683.301 L1720.75 683.301 L1721.31 683.301 L1721.87 683.301 L1722.42 683.301 L1722.98 683.301 L1723.54 683.301 L1724.1 683.301 L1724.66 683.301 L1725.22 683.301 L1725.78 683.301 L1726.34 683.301 L1726.9 683.301 L1727.46 683.301 L1728.02 683.301 L1728.58 683.301 L1729.14 683.301 L1729.69 683.301 L1730.25 683.301 L1730.81 683.301 L1731.37 683.301 L1731.93 683.301 L1732.49 683.301 L1733.05 683.301 L1733.61 683.301 L1734.17 683.301 L1734.73 683.301 L1735.29 683.301 L1735.85 683.301 L1736.41 683.301 L1736.97 683.301 L1737.52 683.301 L1738.08 683.301 L1738.64 683.301 L1739.2 683.301 L1739.76 683.301 L1740.32 683.301 L1740.88 683.301 L1741.44 683.301 L1742 683.301 L1742.56 683.301 L1743.12 683.301 L1743.68 683.301 L1744.24 683.301 L1744.79 683.301 L1745.35 683.301 L1745.91 683.301 L1746.47 683.301 L1747.03 683.301 L1747.59 683.301 L1748.15 683.301 L1748.71 683.301 L1749.27 683.301 L1749.83 683.301 L1750.39 683.301 L1750.95 683.301 L1751.51 683.301 L1752.06 683.301 L1752.62 683.301 L1753.18 683.301 L1753.74 683.301 L1754.3 683.301 L1754.86 683.301 L1755.42 683.301 L1755.98 683.301 L1756.54 683.301 L1757.1 683.301 L1757.66 683.301 L1758.22 683.301 L1758.78 683.301 L1759.34 683.301 L1759.89 683.301 L1760.45 683.301 L1761.01 683.301 L1761.57 683.301 L1762.13 683.301 L1762.69 683.301 L1763.25 683.301 L1763.81 683.301 L1764.37 683.301 L1764.93 683.301 L1765.49 683.301 L1766.05 683.301 L1766.61 683.301 L1767.16 683.301 L1767.72 683.301 L1768.28 683.301 L1768.84 683.301 L1769.4 683.301 L1769.96 683.301 L1770.52 683.301 L1771.08 683.301 L1771.64 683.301 L1772.2 683.301 L1772.76 683.301 L1773.32 683.301 L1773.88 683.301 L1774.43 683.301 L1774.99 683.301 L1775.55 683.301 L1776.11 683.301 L1776.67 683.301 L1777.23 683.301 L1777.79 683.301 L1778.35 683.301 L1778.91 683.301 L1779.47 683.301 L1780.03 683.301 L1780.59 683.301 L1781.15 683.301 L1781.71 683.301 L1782.26 683.301 L1782.82 683.301 L1783.38 683.301 L1783.94 683.301 L1784.5 683.301 L1785.06 683.301 L1785.62 683.301 L1786.18 683.301 L1786.74 683.301 L1787.3 683.301 L1787.86 683.301 L1788.42 683.301 L1788.98 683.301 L1789.53 683.301 L1790.09 683.301 L1790.65 683.301 L1791.21 683.301 L1791.77 683.301 L1792.33 683.301 L1792.89 683.301 L1793.45 683.301 L1794.01 683.301 L1794.57 683.301 L1795.13 683.301 L1795.69 683.301 L1796.25 683.301 L1796.8 683.301 L1797.36 683.301 L1797.92 683.301 L1798.48 683.301 L1799.04 683.301 L1799.6 683.301 L1800.16 683.301 L1800.72 683.301 L1801.28 683.301 L1801.84 683.301 L1802.4 683.301 L1802.96 683.301 L1803.52 683.301 L1804.08 683.301 L1804.63 683.301 L1805.19 683.301 L1805.75 683.301 L1806.31 683.301 L1806.87 683.301 L1807.43 683.301 L1807.99 683.301 L1808.55 683.301 L1809.11 683.301 L1809.67 683.301 L1810.23 683.301 L1810.79 683.301 L1811.35 683.301 L1811.9 683.301 L1812.46 683.301 L1813.02 683.301 L1813.58 683.301 L1814.14 683.301 L1814.7 683.301 L1815.26 683.301 L1815.82 683.301 L1816.38 683.301 L1816.94 683.301 L1817.5 683.301 L1818.06 683.301 L1818.62 683.301 L1819.18 683.301 L1819.73 683.301 L1820.29 683.301 L1820.85 683.301 L1821.41 683.301 L1821.97 683.301 L1822.53 683.301 L1823.09 683.301 L1823.65 683.301 L1824.21 683.301 L1824.77 683.301 L1825.33 683.301 L1825.89 683.301 L1826.45 683.301 L1827 683.301 L1827.56 683.301 L1828.12 683.301 L1828.68 683.301 L1829.24 683.301 L1829.8 683.301 L1830.36 683.301 L1830.92 683.301 L1831.48 683.301 L1832.04 683.301 L1832.6 683.301 L1833.16 683.301 L1833.72 683.301 L1834.27 683.301 L1834.83 683.301 L1835.39 683.301 L1835.95 683.301 L1836.51 683.301 L1837.07 683.301 L1837.63 683.301 L1838.19 683.301 L1838.19 681.94 L1837.63 681.94 L1837.07 681.94 L1836.51 681.94 L1835.95 681.94 L1835.39 681.94 L1834.83 681.94 L1834.27 681.94 L1833.72 681.94 L1833.16 681.94 L1832.6 681.94 L1832.04 681.94 L1831.48 681.94 L1830.92 681.94 L1830.36 681.94 L1829.8 681.94 L1829.24 681.94 L1828.68 681.94 L1828.12 681.94 L1827.56 681.94 L1827 681.94 L1826.45 681.94 L1825.89 681.94 L1825.33 681.94 L1824.77 681.94 L1824.21 681.94 L1823.65 681.94 L1823.09 681.94 L1822.53 681.94 L1821.97 681.94 L1821.41 681.94 L1820.85 681.94 L1820.29 681.94 L1819.73 681.94 L1819.18 681.94 L1818.62 681.94 L1818.06 681.94 L1817.5 681.94 L1816.94 681.94 L1816.38 681.94 L1815.82 681.94 L1815.26 681.94 L1814.7 681.94 L1814.14 681.94 L1813.58 681.94 L1813.02 681.94 L1812.46 681.94 L1811.9 681.94 L1811.35 681.94 L1810.79 681.94 L1810.23 681.94 L1809.67 681.94 L1809.11 681.94 L1808.55 681.94 L1807.99 681.94 L1807.43 681.94 L1806.87 681.94 L1806.31 681.94 L1805.75 681.94 L1805.19 681.94 L1804.63 681.94 L1804.08 681.94 L1803.52 681.94 L1802.96 681.94 L1802.4 681.94 L1801.84 681.94 L1801.28 681.94 L1800.72 681.94 L1800.16 681.94 L1799.6 681.94 L1799.04 681.94 L1798.48 681.94 L1797.92 681.94 L1797.36 681.94 L1796.8 681.94 L1796.25 681.94 L1795.69 681.94 L1795.13 681.94 L1794.57 681.94 L1794.01 681.94 L1793.45 681.94 L1792.89 681.94 L1792.33 681.94 L1791.77 681.94 L1791.21 681.94 L1790.65 681.94 L1790.09 681.94 L1789.53 681.94 L1788.98 681.94 L1788.42 681.94 L1787.86 681.94 L1787.3 681.94 L1786.74 681.94 L1786.18 681.94 L1785.62 681.94 L1785.06 681.94 L1784.5 681.94 L1783.94 681.94 L1783.38 681.94 L1782.82 681.94 L1782.26 681.94 L1781.71 681.94 L1781.15 681.94 L1780.59 681.94 L1780.03 681.94 L1779.47 681.94 L1778.91 681.94 L1778.35 681.94 L1777.79 681.94 L1777.23 681.94 L1776.67 681.94 L1776.11 681.94 L1775.55 681.94 L1774.99 681.94 L1774.43 681.94 L1773.88 681.94 L1773.32 681.94 L1772.76 681.94 L1772.2 681.94 L1771.64 681.94 L1771.08 681.94 L1770.52 681.94 L1769.96 681.94 L1769.4 681.94 L1768.84 681.94 L1768.28 681.94 L1767.72 681.94 L1767.16 681.94 L1766.61 681.94 L1766.05 681.94 L1765.49 681.94 L1764.93 681.94 L1764.37 681.94 L1763.81 681.94 L1763.25 681.94 L1762.69 681.94 L1762.13 681.94 L1761.57 681.94 L1761.01 681.94 L1760.45 681.94 L1759.89 681.94 L1759.34 681.94 L1758.78 681.94 L1758.22 681.94 L1757.66 681.94 L1757.1 681.94 L1756.54 681.94 L1755.98 681.94 L1755.42 681.94 L1754.86 681.94 L1754.3 681.94 L1753.74 681.94 L1753.18 681.94 L1752.62 681.94 L1752.06 681.94 L1751.51 681.94 L1750.95 681.94 L1750.39 681.94 L1749.83 681.94 L1749.27 681.94 L1748.71 681.94 L1748.15 681.94 L1747.59 681.94 L1747.03 681.94 L1746.47 681.94 L1745.91 681.94 L1745.35 681.94 L1744.79 681.94 L1744.24 681.94 L1743.68 681.94 L1743.12 681.94 L1742.56 681.94 L1742 681.94 L1741.44 681.94 L1740.88 681.94 L1740.32 681.94 L1739.76 681.94 L1739.2 681.94 L1738.64 681.94 L1738.08 681.94 L1737.52 681.94 L1736.97 681.94 L1736.41 681.94 L1735.85 681.94 L1735.29 681.94 L1734.73 681.94 L1734.17 681.94 L1733.61 681.94 L1733.05 681.94 L1732.49 681.94 L1731.93 681.94 L1731.37 681.94 L1730.81 681.94 L1730.25 681.94 L1729.69 681.94 L1729.14 681.94 L1728.58 681.94 L1728.02 681.94 L1727.46 681.94 L1726.9 681.94 L1726.34 681.94 L1725.78 681.94 L1725.22 681.94 L1724.66 681.94 L1724.1 681.94 L1723.54 681.94 L1722.98 681.94 L1722.42 681.94 L1721.87 681.94 L1721.31 681.94 L1720.75 681.94 L1720.19 681.94 L1719.63 681.94 L1719.07 681.94 L1718.51 681.94 L1717.95 681.94 L1717.39 681.94 L1716.83 681.94 L1716.27 681.94 L1715.71 681.94 L1715.15 681.94 L1714.6 681.94 L1714.04 681.94 L1713.48 681.94 L1712.92 681.94 L1712.36 681.94 L1711.8 681.94 L1711.24 681.94 L1710.68 681.94 L1710.12 681.94 L1709.56 681.94 L1709 681.94 L1708.44 681.94 L1707.88 681.94 L1707.32 681.94 L1706.77 681.94 L1706.21 681.94 L1705.65 681.94 L1705.09 681.94 L1704.53 681.94 L1703.97 681.94 L1703.41 681.94 L1702.85 681.94 L1702.29 681.94 L1701.73 681.94 L1701.17 681.94 L1700.61 681.94 L1700.05 681.94 L1699.5 681.94 L1698.94 681.94 L1698.38 681.94 L1697.82 681.94 L1697.26 681.94 L1696.7 681.94 L1696.14 681.94 L1695.58 681.94 L1695.02 681.94 L1694.46 681.94 L1693.9 681.94 L1693.34 681.94 L1692.78 681.94 L1692.23 681.94 L1691.67 681.94 L1691.11 681.94 L1690.55 681.94 L1689.99 681.94 L1689.43 681.94 L1688.87 681.94 L1688.31 681.94 L1687.75 681.94 L1687.19 681.94 L1686.63 681.94 L1686.07 681.94 L1685.51 681.94 L1684.95 681.94 L1684.4 681.94 L1683.84 681.94 L1683.28 681.94 L1682.72 681.94 L1682.16 681.94 L1681.6 681.94 L1681.04 681.94 L1680.48 681.94 L1679.92 681.94 L1679.36 681.94 L1678.8 681.94 L1678.24 681.94 L1677.68 681.94 L1677.13 681.94 L1676.57 681.94 L1676.01 681.94 L1675.45 681.94 L1674.89 681.94 L1674.33 681.94 L1673.77 681.94 L1673.21 681.94 L1672.65 681.94 L1672.09 681.94 L1671.53 681.94 L1670.97 681.94 L1670.41 681.94 L1669.85 681.94 L1669.3 681.94 L1668.74 681.94 L1668.18 681.94 L1667.62 681.94 L1667.06 681.94 L1666.5 681.94 L1665.94 681.94 L1665.38 681.94 L1664.82 681.94 L1664.26 681.94 L1663.7 681.94 L1663.14 681.94 L1662.58 681.94 L1662.03 681.94 L1661.47 681.94 L1660.91 681.94 L1660.35 681.94 L1659.79 681.94 L1659.23 681.94 L1658.67 681.94 L1658.11 681.94 L1657.55 681.94 L1656.99 681.94 L1656.43 681.94 L1655.87 681.94 L1655.31 681.94 L1654.76 681.94 L1654.2 681.94 L1653.64 681.94 L1653.08 681.94 L1652.52 681.94 L1651.96 681.94 L1651.4 681.94 L1650.84 681.94 L1650.28 681.94 L1649.72 681.94 L1649.16 681.94 L1648.6 681.94 L1648.04 681.94 L1647.48 681.94 L1646.93 681.94 L1646.37 681.94 L1645.81 681.94 L1645.25 681.94 L1644.69 681.94 L1644.13 681.94 L1643.57 681.94 L1643.01 681.94 L1642.45 681.94 L1641.89 681.94 L1641.33 681.94 L1640.77 681.94 L1640.21 681.94 L1639.66 681.94 L1639.1 681.94 L1638.54 681.94 L1637.98 681.94 L1637.42 681.94 L1636.86 681.94 L1636.3 681.94 L1635.74 681.94 L1635.18 681.94 L1634.62 681.94 L1634.06 681.94 L1633.5 681.94 L1632.94 681.94 L1632.39 681.94 L1631.83 681.94 L1631.27 681.94 L1630.71 681.94 L1630.15 681.94 L1629.59 681.94 L1629.03 681.94 L1628.47 681.94 L1627.91 681.94 L1627.35 681.94 L1626.79 681.94 L1626.23 681.94 L1625.67 681.94 L1625.11 681.94 L1624.56 681.94 L1624 681.94 L1623.44 681.94 L1622.88 681.94 L1622.32 681.94 L1621.76 681.94 L1621.2 681.94 L1620.64 681.94 L1620.08 681.94 L1619.52 681.94 L1618.96 681.94 L1618.4 681.94 L1617.84 681.94 L1617.29 681.94 L1616.73 681.94 L1616.17 681.94 L1615.61 681.94 L1615.05 681.94 L1614.49 681.94 L1613.93 681.94 L1613.37 681.94 L1612.81 681.94 L1612.25 681.94 L1611.69 681.94 L1611.13 681.94 L1610.57 681.94 L1610.02 681.94 L1609.46 681.94 L1608.9 681.94 L1608.34 681.94 L1607.78 681.94 L1607.22 681.94 L1606.66 681.94 L1606.1 681.94 L1605.54 681.94 L1604.98 681.94 L1604.42 681.94 L1603.86 681.94 L1603.3 681.94 L1602.74 681.94 L1602.19 681.94 L1601.63 681.94 L1601.07 681.94 L1600.51 681.94 L1599.95 681.94 L1599.39 681.94 L1598.83 681.94 L1598.27 681.94 L1597.71 681.94 L1597.15 681.94 L1596.59 681.94 L1596.03 681.94 L1595.47 681.94 L1594.92 681.94 L1594.36 681.94 L1593.8 681.94 L1593.24 681.94 L1592.68 681.94 L1592.12 681.94 L1591.56 681.94 L1591 681.94 L1590.44 681.94 L1589.88 681.94 L1589.32 681.94 L1588.76 681.94 L1588.2 681.94 L1587.65 681.94 L1587.09 681.94 L1586.53 681.94 L1585.97 681.94 L1585.41 681.94 L1584.85 681.94 L1584.29 681.94 L1583.73 681.94 L1583.17 681.94 L1582.61 681.94 L1582.05 681.94 L1581.49 681.94 L1580.93 681.94 L1580.37 681.94 L1579.82 681.94 L1579.26 681.94 L1578.7 681.94 L1578.14 681.94 L1577.58 681.94 L1577.02 681.94 L1576.46 681.94 L1575.9 681.94 L1575.34 681.94 L1574.78 681.94 L1574.22 681.94 L1573.66 681.94 L1573.1 681.94 L1572.55 681.94 L1571.99 681.94 L1571.43 681.94 L1570.87 681.94 L1570.31 681.94 L1569.75 681.94 L1569.19 681.94 L1568.63 681.94 L1568.07 681.94 L1567.51 681.94 L1566.95 681.94 L1566.39 681.94 L1565.83 681.94 L1565.28 681.94 L1564.72 681.94 L1564.16 681.94 L1563.6 681.94 L1563.04 681.94 L1562.48 681.94 L1561.92 681.94 L1561.36 681.94 L1560.8 681.94 L1560.24 681.94 L1559.68 681.94 L1559.12 681.94 L1558.56 681.94 L1558 681.94 L1557.45 681.94 L1556.89 681.94 L1556.33 681.94 L1555.77 681.94 L1555.21 681.94 L1554.65 681.94 L1554.09 681.94 L1553.53 681.94 L1552.97 681.94 L1552.41 681.94 L1551.85 681.94 L1551.29 681.94 L1550.73 681.94 L1550.18 681.94 L1549.62 681.94 L1549.06 681.94 L1548.5 681.94 L1547.94 681.94 L1547.38 681.94 L1546.82 681.94 L1546.26 681.94 L1545.7 681.94 L1545.14 681.94 L1544.58 681.94 L1544.02 681.94 L1543.46 681.94 L1542.9 681.94 L1542.35 681.94 L1541.79 681.94 L1541.23 681.94 L1540.67 681.94 L1540.11 681.94 L1539.55 681.94 L1538.99 681.94 L1538.43 681.94 L1537.87 681.94 L1537.31 681.94 L1536.75 681.94 L1536.19 681.94 L1535.63 681.94 L1535.08 681.94 L1534.52 681.94 L1533.96 681.94 L1533.4 681.94 L1532.84 681.94 L1532.28 681.94 L1531.72 681.94 L1531.16 681.94 L1530.6 681.94 L1530.04 681.94 L1529.48 681.94 L1528.92 681.94 L1528.36 681.94 L1527.81 681.94 L1527.25 681.94 L1526.69 681.94 L1526.13 681.94 L1525.57 681.94 L1525.01 681.94 L1524.45 681.94 L1523.89 681.94 L1523.33 681.94 L1522.77 681.94 L1522.21 681.94 L1521.65 681.94 L1521.09 681.94 L1520.53 681.94 L1519.98 681.94 L1519.42 681.94 L1518.86 681.94 L1518.3 681.94 L1517.74 681.94 L1517.18 681.94 L1516.62 681.94 L1516.06 681.94 L1515.5 681.94 L1514.94 681.94 L1514.38 681.94 L1513.82 681.94 L1513.26 681.94 L1512.71 681.94 L1512.15 681.94 L1511.59 681.94 L1511.03 681.94 L1510.47 681.94 L1509.91 681.94 L1509.35 681.94 L1508.79 681.94 L1508.23 681.94 L1507.67 681.94 L1507.11 681.94 L1506.55 681.94 L1505.99 681.94 L1505.44 681.94 L1504.88 681.94 L1504.32 681.94 L1503.76 681.94 L1503.2 681.94 L1502.64 681.94 L1502.08 681.94 L1501.52 681.94 L1500.96 681.94 L1500.4 681.94 L1499.84 681.94 L1499.28 681.94 L1498.72 681.94 L1498.16 681.94 L1497.61 681.94 L1497.05 681.94 L1496.49 681.94 L1495.93 681.94 L1495.37 681.94 L1494.81 681.94 L1494.25 681.94 L1493.69 681.94 L1493.13 681.94 L1492.57 681.94 L1492.01 681.94 L1491.45 681.94 L1490.89 681.94 L1490.34 681.94 L1489.78 681.94 L1489.22 681.94 L1488.66 681.94 L1488.1 681.94 L1487.54 681.94 L1486.98 681.94 L1486.42 681.94 L1485.86 681.94 L1485.3 681.94 L1484.74 681.94 L1484.18 681.94 L1483.62 681.94 L1483.07 681.94 L1482.51 681.94 L1481.95 681.94 L1481.39 681.94 L1480.83 681.94 L1480.27 681.94 L1479.71 681.94 L1479.15 681.94 L1478.59 681.94 L1478.03 681.94 L1477.47 681.94 L1476.91 681.94 L1476.35 681.94 L1475.79 681.94 L1475.24 681.94 L1474.68 681.94 L1474.12 681.94 L1473.56 681.94 L1473 681.94 L1472.44 681.94 L1471.88 681.94 L1471.32 681.94 L1470.76 681.94 L1470.2 681.94 L1469.64 681.94 L1469.08 681.94 L1468.52 681.94 L1467.97 681.94 L1467.41 681.94 L1466.85 681.94 L1466.29 681.94 L1465.73 681.94 L1465.17 681.94 L1464.61 681.94 L1464.05 681.94 L1463.49 681.94 L1462.93 681.94 L1462.37 681.94 L1461.81 681.94 L1461.25 681.94 L1460.7 681.94 L1460.14 681.94 L1459.58 681.94 L1459.02 681.94 L1458.46 681.94 L1457.9 681.94 L1457.34 681.94 L1456.78 681.94 L1456.22 681.94 L1455.66 681.94 L1455.1 681.94 L1454.54 681.94 L1453.98 681.94 L1453.42 681.94 L1452.87 681.94 L1452.31 681.94 L1451.75 681.94 L1451.19 681.94 L1450.63 681.94 L1450.07 681.94 L1449.51 681.94 L1448.95 681.94 L1448.39 681.94 L1447.83 681.94 L1447.27 681.94 L1446.71 681.94 L1446.15 681.94 L1445.6 681.94 L1445.04 681.94 L1444.48 681.94 L1443.92 681.94 L1443.36 681.94 L1442.8 681.94 L1442.24 681.94 L1441.68 681.94 L1441.12 681.94 L1440.56 681.94 L1440 681.94 L1439.44 681.94 L1438.88 681.94 L1438.33 681.94 L1437.77 681.94 L1437.21 681.94 L1436.65 681.94 L1436.09 681.94 L1435.53 681.94 L1434.97 681.94 L1434.41 681.94 L1433.85 681.94 L1433.29 681.94 L1432.73 681.94 L1432.17 681.94 L1431.61 681.94 L1431.05 681.94 L1430.5 681.94 L1429.94 681.94 L1429.38 681.94 L1428.82 681.94 L1428.26 681.94 L1427.7 681.94 L1427.14 681.94 L1426.58 681.94 L1426.02 681.94 L1425.46 681.94 L1424.9 681.94 L1424.34 681.94 L1423.78 681.94 L1423.23 681.94 L1422.67 681.94 L1422.11 681.94 L1421.55 681.94 L1420.99 681.94 L1420.43 681.94 L1419.87 681.94 L1419.31 681.94 L1418.75 681.94 L1418.19 681.94 L1417.63 681.94 L1417.07 681.94 L1416.51 681.94 L1415.95 681.94 L1415.4 681.94 L1414.84 681.94 L1414.28 681.94 L1413.72 681.94 L1413.16 681.94 L1412.6 681.94 L1412.04 681.94 L1411.48 681.94 L1410.92 681.94 L1410.36 681.94 L1409.8 681.94 L1409.24 681.94 L1408.68 681.94 L1408.13 681.94 L1407.57 681.94 L1407.01 681.94 L1406.45 681.94 L1405.89 681.94 L1405.33 681.94 L1404.77 681.94 L1404.21 681.94 L1403.65 681.94 L1403.09 681.94 L1402.53 681.94 L1401.97 681.94 L1401.41 681.94 L1400.86 681.94 L1400.3 681.94 L1399.74 681.94 L1399.18 681.94 L1398.62 681.94 L1398.06 681.94 L1397.5 681.94 L1396.94 681.94 L1396.38 681.94 L1395.82 681.94 L1395.26 681.94 L1394.7 681.94 L1394.14 681.94 L1393.58 681.94 L1393.03 681.94 L1392.47 681.94 L1391.91 681.94 L1391.35 681.94 L1390.79 681.94 L1390.23 681.94 L1389.67 681.94 L1389.11 681.94 L1388.55 681.94 L1387.99 681.94 L1387.43 681.94 L1386.87 681.94 L1386.31 681.94 L1385.76 681.94 L1385.2 681.94 L1384.64 681.94 L1384.08 681.94 L1383.52 681.94 L1382.96 681.94 L1382.4 681.94 L1381.84 681.94 L1381.28 681.94 L1380.72 681.94 L1380.16 681.94 L1379.6 681.94 L1379.04 681.94 L1378.49 681.94 L1377.93 681.94 L1377.37 681.94 L1376.81 681.94 L1376.25 681.94 L1375.69 681.94 L1375.13 681.94 L1374.57 681.94 L1374.01 681.94 L1373.45 681.94 L1372.89 681.94 L1372.33 681.94 L1371.77 681.94 L1371.21 681.94 L1370.66 681.94 L1370.1 681.94 L1369.54 681.94 L1368.98 681.94 L1368.42 681.94 L1367.86 681.94 L1367.3 681.94 L1366.74 681.94 L1366.18 681.94 L1365.62 681.94 L1365.06 681.94 L1364.5 681.94 L1363.94 681.94 L1363.39 681.94 L1362.83 681.94 L1362.27 681.94 L1361.71 681.94 L1361.15 681.94 L1360.59 681.94 L1360.03 681.94 L1359.47 681.94 L1358.91 681.94 L1358.35 681.94 L1357.79 681.94 L1357.23 681.94 L1356.67 681.94 L1356.12 681.94 L1355.56 681.94 L1355 681.94 L1354.44 681.94 L1353.88 681.94 L1353.32 681.94 L1352.76 681.94 L1352.2 681.94 L1351.64 681.94 L1351.08 681.94 L1350.52 681.94 L1349.96 681.94 L1349.4 681.94 L1348.84 681.94 L1348.29 681.94 L1347.73 681.94 L1347.17 681.94 L1346.61 681.94 L1346.05 681.94 L1345.49 681.94 L1344.93 681.94 L1344.37 681.94 L1343.81 681.94 L1343.25 681.94 L1342.69 681.94 L1342.13 681.94 L1341.57 681.94 L1341.02 681.94 L1340.46 681.94 L1339.9 681.94 L1339.34 681.94 L1338.78 681.94 L1338.22 681.94 L1337.66 681.94 L1337.1 681.94 L1336.54 681.94 L1335.98 681.94 L1335.42 681.94 L1334.86 681.94 L1334.3 681.94 L1333.75 681.94 L1333.19 681.94 L1332.63 681.94 L1332.07 681.94 L1331.51 681.94 L1330.95 681.94 L1330.39 681.94 L1329.83 681.94 L1329.27 681.94 L1328.71 681.94 L1328.15 681.94 L1327.59 681.94 L1327.03 681.94 L1326.47 681.94 L1325.92 681.94 L1325.36 681.94 L1324.8 681.94 L1324.24 681.94 L1323.68 681.94 L1323.12 681.94 L1322.56 681.94 L1322 681.94 L1321.44 681.94 L1320.88 681.94 L1320.32 681.94 L1319.76 681.94 L1319.2 681.94 L1318.65 681.94 L1318.09 681.94 L1317.53 681.94 L1316.97 681.94 L1316.41 681.94 L1315.85 681.94 L1315.29 681.94 L1314.73 681.94 L1314.17 681.94 L1313.61 681.94 L1313.05 681.94 L1312.49 681.94 L1311.93 681.94 L1311.38 681.94 L1310.82 681.94 L1310.26 681.94 L1309.7 681.94 L1309.14 681.94 L1308.58 681.94 L1308.02 681.94 L1307.46 681.94 L1306.9 681.94 L1306.34 681.94 L1305.78 681.94 L1305.22 681.94 L1304.66 681.94 L1304.1 681.94 L1303.55 681.94 L1302.99 681.94 L1302.43 681.94 L1301.87 681.94 L1301.31 681.94 L1300.75 681.94 L1300.19 681.94 L1299.63 681.94 L1299.07 681.94 L1298.51 681.94 L1297.95 681.94 L1297.39 681.94 L1296.83 681.94 L1296.28 681.94 L1295.72 681.94 L1295.16 681.94 L1294.6 681.94 L1294.04 681.94 L1293.48 681.94 L1292.92 681.94 L1292.36 681.94 L1291.8 681.94 L1291.24 681.94 L1290.68 681.94 L1290.12 681.94 L1289.56 681.94 L1289 681.94 L1288.45 681.94 L1287.89 681.94 L1287.33 681.94 L1286.77 681.94 L1286.21 681.94 L1285.65 681.94 L1285.09 681.94 L1284.53 681.94 L1283.97 681.94 L1283.41 681.94 L1282.85 681.94 L1282.29 681.94 L1281.73 681.94 L1281.18 681.94 L1280.62 681.94 L1280.06 681.94 L1279.5 681.94 L1278.94 681.94 L1278.38 681.94 L1277.82 681.94 L1277.26 681.94 L1276.7 681.94 L1276.14 681.94 L1275.58 681.94 L1275.02 681.94 L1274.46 681.94 L1273.91 681.94 L1273.35 681.94 L1272.79 681.94 L1272.23 681.94 L1271.67 681.94 L1271.11 681.94 L1270.55 681.94 L1269.99 681.94 L1269.43 681.94 L1268.87 681.94 L1268.31 681.94 L1267.75 681.94 L1267.19 681.94 L1266.63 681.94 L1266.08 681.94 L1265.52 681.94 L1264.96 681.94 L1264.4 681.94 L1263.84 681.94 L1263.28 681.94 L1262.72 681.94 L1262.16 681.94 L1261.6 681.94 L1261.04 681.94 L1260.48 681.94 L1259.92 681.94 L1259.36 681.94 L1258.81 681.94 L1258.25 681.94 L1257.69 681.94 L1257.13 681.94 L1256.57 681.94 L1256.01 681.94 L1255.45 681.94 L1254.89 681.94 L1254.33 681.94 L1253.77 681.94 L1253.21 681.94 L1252.65 681.94 L1252.09 681.94 L1251.54 681.94 L1250.98 681.94 L1250.42 681.94 L1249.86 681.94 L1249.3 681.94 L1248.74 681.94 L1248.18 681.94 L1247.62 681.94 L1247.06 681.94 L1246.5 681.94 L1245.94 681.94 L1245.38 681.94 L1244.82 681.94 L1244.26 681.94 L1243.71 681.94 L1243.15 681.94 L1242.59 681.94 L1242.03 681.94 L1241.47 681.94 L1240.91 681.94 L1240.35 681.94 L1239.79 681.94 L1239.23 681.94 L1238.67 681.94 L1238.11 681.94 L1237.55 681.94 L1236.99 681.94 L1236.44 681.94 L1235.88 681.94 L1235.32 681.94 L1234.76 681.94 L1234.2 681.94 L1233.64 681.94 L1233.08 681.94 L1232.52 681.94 L1231.96 681.94 L1231.4 681.94 L1230.84 681.94 L1230.28 681.94 L1229.72 681.94 L1229.17 681.94 L1228.61 681.94 L1228.05 681.94 L1227.49 681.94 L1226.93 681.94 L1226.37 681.94 L1225.81 681.94 L1225.25 681.94 L1224.69 681.94 L1224.13 681.94 L1223.57 681.94 L1223.01 681.94 L1222.45 681.94 L1221.89 681.94 L1221.34 681.94 L1220.78 681.94 L1220.22 681.94 L1219.66 681.94 L1219.1 681.94 L1218.54 681.94 L1217.98 681.94 L1217.42 681.94 L1216.86 681.94 L1216.3 681.94 L1215.74 681.94 L1215.18 681.94 L1214.62 681.94 L1214.07 681.94 L1213.51 681.94 L1212.95 681.94 L1212.39 681.94 L1211.83 681.94 L1211.27 681.94 L1210.71 681.94 L1210.15 681.94 L1209.59 681.94 L1209.03 681.94 L1208.47 681.94 L1207.91 681.94 L1207.35 681.94 L1206.8 681.94 L1206.24 681.94 L1205.68 681.94 L1205.12 681.94 L1204.56 681.94 L1204 681.94 L1203.44 681.94 L1202.88 681.94 L1202.32 681.94 L1201.76 681.94 L1201.2 681.94 L1200.64 681.94 L1200.08 681.94 L1199.52 681.94 L1198.97 681.94 L1198.41 681.94 L1197.85 681.94 L1197.29 681.94 L1196.73 681.94 L1196.17 681.94 L1195.61 681.94 L1195.05 681.94 L1194.49 681.94 L1193.93 681.94 L1193.37 681.94 L1192.81 681.94 L1192.25 681.94 L1191.7 681.94 L1191.14 681.94 L1190.58 681.94 L1190.02 681.94 L1189.46 681.94 L1188.9 681.94 L1188.34 681.94 L1187.78 681.94 L1187.22 681.94 L1186.66 681.94 L1186.1 681.94 L1185.54 681.94 L1184.98 681.94 L1184.43 681.94 L1183.87 681.94 L1183.31 681.94 L1182.75 681.94 L1182.19 681.94 L1181.63 681.94 L1181.07 681.94 L1180.51 681.94 L1179.95 681.94 L1179.39 681.94 L1178.83 681.94 L1178.27 681.94 L1177.71 681.94 L1177.15 681.94 L1176.6 681.94 L1176.04 681.94 L1175.48 681.94 L1174.92 681.94 L1174.36 681.94 L1173.8 681.94 L1173.24 681.94 L1172.68 681.94 L1172.12 681.94 L1171.56 681.94 L1171 681.94 L1170.44 681.94 L1169.88 681.94 L1169.33 681.94 L1168.77 681.94 L1168.21 681.94 L1167.65 681.94 L1167.09 681.94 L1166.53 681.94 L1165.97 681.94 L1165.41 681.94 L1164.85 681.94 L1164.29 681.94 L1163.73 681.94 L1163.17 681.94 L1162.61 681.94 L1162.05 681.94 L1161.5 681.94 L1160.94 681.94 L1160.38 681.94 L1159.82 681.94 L1159.26 681.94 L1158.7 681.94 L1158.14 681.94 L1157.58 681.94 L1157.02 681.94 L1156.46 681.94 L1155.9 681.94 L1155.34 681.94 L1154.78 681.94 L1154.23 681.94 L1153.67 681.94 L1153.11 681.94 L1152.55 681.94 L1151.99 681.94 L1151.43 681.94 L1150.87 681.94 L1150.31 681.94 L1149.75 681.94 L1149.19 681.94 L1148.63 681.94 L1148.07 681.94 L1147.51 681.94 L1146.96 681.94 L1146.4 681.94 L1145.84 681.94 L1145.28 681.94 L1144.72 681.94 L1144.16 681.94 L1143.6 681.94 L1143.04 681.94 L1142.48 681.94 L1141.92 681.94 L1141.36 681.94 L1140.8 681.94 L1140.24 681.94 L1139.68 681.94 L1139.13 681.94 L1138.57 681.94 L1138.01 681.94 L1137.45 681.94 L1136.89 681.94 L1136.33 681.94 L1135.77 681.94 L1135.21 681.94 L1134.65 681.94 L1134.09 681.94 L1133.53 681.94 L1132.97 681.94 L1132.41 681.94 L1131.86 681.94 L1131.3 681.94 L1130.74 681.94 L1130.18 681.94 L1129.62 681.94 L1129.06 681.94 L1128.5 681.94 L1127.94 681.94 L1127.38 681.94 L1126.82 681.94 L1126.26 681.94 L1125.7 681.94 L1125.14 681.94 L1124.59 681.94 L1124.03 681.94 L1123.47 681.94 L1122.91 681.94 L1122.35 681.94 L1121.79 681.94 L1121.23 681.94 L1120.67 681.94 L1120.11 681.94 L1119.55 681.94 L1118.99 681.94 L1118.43 681.94 L1117.87 681.94 L1117.31 681.94 L1116.76 681.94 L1116.2 681.94 L1115.64 681.94 L1115.08 681.94 L1114.52 681.94 L1113.96 681.94 L1113.4 681.94 L1112.84 681.94 L1112.28 681.94 L1111.72 681.94 L1111.16 681.94 L1110.6 681.94 L1110.04 681.94 L1109.49 681.94 L1108.93 681.94 L1108.37 681.94 L1107.81 681.94 L1107.25 681.94 L1106.69 681.94 L1106.13 681.94 L1105.57 681.94 L1105.01 681.94 L1104.45 681.94 L1103.89 681.94 L1103.33 681.94 L1102.77 681.94 L1102.22 681.94 L1101.66 681.94 L1101.1 681.94 L1100.54 681.94 L1099.98 681.94 L1099.42 681.94 L1098.86 681.94 L1098.3 681.94 L1097.74 681.94 L1097.18 681.94 L1096.62 681.94 L1096.06 681.94 L1095.5 681.94 L1094.94 681.94 L1094.39 681.94 L1093.83 681.94 L1093.27 681.94 L1092.71 681.94 L1092.15 681.94 L1091.59 681.94 L1091.03 681.94 L1090.47 681.94 L1089.91 681.94 L1089.35 681.94 L1088.79 681.94 L1088.23 681.94 L1087.67 681.94 L1087.12 681.94 L1086.56 681.94 L1086 681.94 L1085.44 681.94 L1084.88 681.94 L1084.32 681.94 L1083.76 681.94 L1083.2 681.94 L1082.64 681.94 L1082.08 681.94 L1081.52 681.94 L1080.96 681.94 L1080.4 681.94 L1079.85 681.94 L1079.29 681.94 L1078.73 681.94 L1078.17 681.94 L1077.61 681.94 L1077.05 681.94 L1076.49 681.94 L1075.93 681.94 L1075.37 681.94 L1074.81 681.94 L1074.25 681.94 L1073.69 681.94 L1073.13 681.94 L1072.57 681.94 L1072.02 681.94 L1071.46 681.94 L1070.9 681.94 L1070.34 681.94 L1069.78 681.94 L1069.22 681.94 L1068.66 681.94 L1068.1 681.94 L1067.54 681.94 L1066.98 681.94 L1066.42 681.94 L1065.86 681.94 L1065.3 681.94 L1064.75 681.94 L1064.19 681.94 L1063.63 681.94 L1063.07 681.94 L1062.51 681.94 L1061.95 681.94 L1061.39 681.94 L1060.83 681.94 L1060.27 681.94 L1059.71 681.94 L1059.15 681.94 L1058.59 681.94 L1058.03 681.94 L1057.48 681.94 L1056.92 681.94 L1056.36 681.94 L1055.8 681.94 L1055.24 681.94 L1054.68 681.94 L1054.12 681.94 L1053.56 681.94 L1053 681.94 L1052.44 681.94 L1051.88 681.94 L1051.32 681.94 L1050.76 681.94 L1050.2 681.94 L1049.65 681.94 L1049.09 681.94 L1048.53 681.94 L1047.97 681.94 L1047.41 681.94 L1046.85 681.94 L1046.29 681.94 L1045.73 681.94 L1045.17 681.94 L1044.61 681.94 L1044.05 681.94 L1043.49 681.94 L1042.93 681.94 L1042.38 681.94 L1041.82 681.94 L1041.26 681.94 L1040.7 681.94 L1040.14 681.94 L1039.58 681.94 L1039.02 681.94 L1038.46 681.94 L1037.9 681.94 L1037.34 681.94 L1036.78 681.94 L1036.22 681.94 L1035.66 681.94 L1035.1 681.94 L1034.55 681.94 L1033.99 681.94 L1033.43 681.94 L1032.87 681.94 L1032.31 681.94 L1031.75 681.94 L1031.19 681.94 L1030.63 681.94 L1030.07 681.94 L1029.51 681.94 L1028.95 681.94 L1028.39 681.94 L1027.83 681.94 L1027.28 681.94 L1026.72 681.94 L1026.16 681.94 L1025.6 681.94 L1025.04 681.94 L1024.48 681.94 L1023.92 681.94 L1023.36 681.94 L1022.8 681.94 L1022.24 681.94 L1021.68 681.94 L1021.12 681.94 L1020.56 681.94 L1020.01 681.94 L1019.45 681.94 L1018.89 681.94 L1018.33 681.94 L1017.77 681.94 L1017.21 681.94 L1016.65 681.94 L1016.09 681.94 L1015.53 681.94 L1014.97 681.94 L1014.41 681.94 L1013.85 681.94 L1013.29 681.94 L1012.73 681.94 L1012.18 681.94 L1011.62 681.94 L1011.06 681.94 L1010.5 681.94 L1009.94 681.94 L1009.38 681.94 L1008.82 681.94 L1008.26 681.94 L1007.7 681.94 L1007.14 681.94 L1006.58 681.94 L1006.02 681.94 L1005.46 681.94 L1004.91 681.94 L1004.35 681.94 L1003.79 681.94 L1003.23 681.94 L1002.67 681.94 L1002.11 681.94 L1001.55 681.94 L1000.99 681.94 L1000.43 681.94 L999.872 681.94 L999.313 681.94 L998.754 681.94 L998.194 681.94 L997.635 681.94 L997.076 681.94 L996.517 681.94 L995.957 681.94 L995.398 681.94 L994.839 681.94 L994.28 681.94 L993.72 681.94 L993.161 681.94 L992.602 681.94 L992.043 681.94 L991.483 681.94 L990.924 681.94 L990.365 681.94 L989.806 681.94 L989.246 681.94 L988.687 681.94 L988.128 681.94 L987.569 681.94 L987.009 681.94 L986.45 681.94 L985.891 681.94 L985.332 681.94 L984.772 681.94 L984.213 681.94 L983.654 681.94 L983.095 681.94 L982.535 681.94 L981.976 681.94 L981.417 681.94 L980.858 681.94 L980.298 681.94 L979.739 681.94 L979.18 681.94 L978.621 681.94 L978.061 681.94 L977.502 681.94 L976.943 681.94 L976.384 681.94 L975.824 681.94 L975.265 681.94 L974.706 681.94 L974.147 681.94 L973.587 681.94 L973.028 681.94 L972.469 681.94 L971.91 681.94 L971.35 681.94 L970.791 681.94 L970.232 681.94 L969.673 681.94 L969.113 681.94 L968.554 681.94 L967.995 681.94 L967.436 681.94 L966.876 681.94 L966.317 681.94 L965.758 681.94 L965.199 681.94 L964.639 681.94 L964.08 681.94 L963.521 681.94 L962.962 681.94 L962.402 681.94 L961.843 681.94 L961.284 681.94 L960.725 681.94 L960.165 681.94 L959.606 681.94 L959.047 681.94 L958.488 681.94 L957.928 681.94 L957.369 681.94 L956.81 681.94 L956.251 681.94 L955.691 681.94 L955.132 681.94 L954.573 681.94 L954.014 681.94 L953.454 681.94 L952.895 681.94 L952.336 681.94 L951.777 681.94 L951.217 681.94 L950.658 681.94 L950.099 681.94 L949.54 681.94 L948.98 681.94 L948.421 681.94 L947.862 681.94 L947.303 681.94 L946.743 681.94 L946.184 681.94 L945.625 681.94 L945.066 681.94 L944.506 681.94 L943.947 681.94 L943.388 681.94 L942.829 681.94 L942.269 681.94 L941.71 681.94 L941.151 681.94 L940.592 681.94 L940.032 681.94 L939.473 681.94 L938.914 681.94 L938.355 681.94 L937.795 681.94 L937.236 681.94 L936.677 681.94 L936.118 681.94 L935.558 681.94 L934.999 681.94 L934.44 681.94 L933.881 681.94 L933.321 681.94 L932.762 681.94 L932.203 681.94 L931.644 681.94 L931.084 681.94 L930.525 681.94 L929.966 681.94 L929.406 681.94 L928.847 681.94 L928.288 681.94 L927.729 681.94 L927.169 681.94 L926.61 681.94 L926.051 681.94 L925.492 681.94 L924.932 681.94 L924.373 681.94 L923.814 681.94 L923.255 681.94 L922.695 681.94 L922.136 681.94 L921.577 681.94 L921.018 681.94 L920.458 681.94 L919.899 681.94 L919.34 681.94 L918.781 681.94 L918.221 681.94 L917.662 681.94 L917.103 681.94 L916.544 681.94 L915.984 681.94 L915.425 681.94 L914.866 681.94 L914.307 681.94 L913.747 681.94 L913.188 681.94 L912.629 681.94 L912.07 681.94 L911.51 681.94 L910.951 681.94 L910.392 681.94 L909.833 681.94 L909.273 681.94 L908.714 681.94 L908.155 681.94 L907.596 681.94 L907.036 681.94 L906.477 681.94 L905.918 681.94 L905.359 681.94 L904.799 681.94 L904.24 681.94 L903.681 681.94 L903.122 681.94 L902.562 681.94 L902.003 681.94 L901.444 681.94 L900.885 681.94 L900.325 681.94 L899.766 681.94 L899.207 681.94 L898.648 681.94 L898.088 681.94 L897.529 681.94 L896.97 681.94 L896.411 681.94 L895.851 681.94 L895.292 681.94 L894.733 681.94 L894.174 681.94 L893.614 681.94 L893.055 681.94 L892.496 681.94 L891.937 681.94 L891.377 681.94 L890.818 681.94 L890.259 681.94 L889.7 681.94 L889.14 681.94 L888.581 681.94 L888.022 681.94 L887.463 681.94 L886.903 681.94 L886.344 681.94 L885.785 681.94 L885.226 681.94 L884.666 681.94 L884.107 681.94 L883.548 681.94 L882.989 681.94 L882.429 681.94 L881.87 681.94 L881.311 681.94 L880.752 681.94 L880.192 681.94 L879.633 681.94 L879.074 681.94 L878.515 681.94 L877.955 681.94 L877.396 681.94 L876.837 681.94 L876.278 681.94 L875.718 681.94 L875.159 681.94 L874.6 681.94 L874.041 681.94 L873.481 681.94 L872.922 681.94 L872.363 681.94 L871.804 681.94 L871.244 681.94 L870.685 681.94 L870.126 681.94 L869.567 681.94 L869.007 681.94 L868.448 681.94 L867.889 681.94 L867.33 681.94 L866.77 681.94 L866.211 681.94 L865.652 681.94 L865.093 681.94 L864.533 681.94 L863.974 681.94 L863.415 681.94 L862.856 681.94 L862.296 681.94 L861.737 681.94 L861.178 681.94 L860.619 681.94 L860.059 681.94 L859.5 681.94 L858.941 681.94 L858.382 681.94 L857.822 681.94 L857.263 681.94 L856.704 681.94 L856.145 681.94 L855.585 681.94 L855.026 681.94 L854.467 681.94 L853.908 681.94 L853.348 681.94 L852.789 681.94 L852.23 681.94 L851.671 681.94 L851.111 681.94 L850.552 681.94 L849.993 681.94 L849.434 681.94 L848.874 681.94 L848.315 681.94 L847.756 681.94 L847.197 681.94 L846.637 681.94 L846.078 681.94 L845.519 681.94 L844.96 681.94 L844.4 681.94 L843.841 681.94 L843.282 681.94 L842.723 681.94 L842.163 681.94 L841.604 681.94 L841.045 681.94 L840.486 681.94 L839.926 681.94 L839.367 681.94 L838.808 681.94 L838.249 681.94 L837.689 681.94 L837.13 681.94 L836.571 681.94 L836.012 681.94 L835.452 681.94 L834.893 681.94 L834.334 681.94 L833.775 681.94 L833.215 681.94 L832.656 681.94 L832.097 681.94 L831.538 681.94 L830.978 681.94 L830.419 681.94 L829.86 681.94 L829.301 681.94 L828.741 681.94 L828.182 681.94 L827.623 681.94 L827.064 681.94 L826.504 681.94 L825.945 681.94 L825.386 681.94 L824.827 681.94 L824.267 681.94 L823.708 681.94 L823.149 681.94 L822.59 681.94 L822.03 681.94 L821.471 681.94 L820.912 681.94 L820.353 681.94 L819.793 681.94 L819.234 681.94 L818.675 681.94 L818.116 681.94 L817.556 681.94 L816.997 681.94 L816.438 681.94 L815.879 681.94 L815.319 681.94 L814.76 681.94 L814.201 681.94 L813.642 681.94 L813.082 681.94 L812.523 681.94 L811.964 681.94 L811.405 681.94 L810.845 681.94 L810.286 681.94 L809.727 681.94 L809.168 681.94 L808.608 681.94 L808.049 681.94 L807.49 681.94 L806.931 681.94 L806.371 681.94 L805.812 681.94 L805.253 681.94 L804.693 681.94 L804.134 681.94 L803.575 681.94 L803.016 681.94 L802.456 681.94 L801.897 681.94 L801.338 681.94 L800.779 681.94 L800.219 681.94 L799.66 681.94 L799.101 681.94 L798.542 681.94 L797.982 681.94 L797.423 681.94 L796.864 681.94 L796.305 681.94 L795.745 681.94 L795.186 681.94 L794.627 681.94 L794.068 681.94 L793.508 681.94 L792.949 681.94 L792.39 681.94 L791.831 681.94 L791.271 681.94 L790.712 681.94 L790.153 681.94 L789.594 681.94 L789.034 681.94 L788.475 681.94 L787.916 681.94 L787.357 681.94 L786.797 681.94 L786.238 681.94 L785.679 681.94 L785.12 681.94 L784.56 681.94 L784.001 681.94 L783.442 681.94 L782.883 681.94 L782.323 681.94 L781.764 681.94 L781.205 681.94 L780.646 681.94 L780.086 681.94 L779.527 681.94 L778.968 681.94 L778.409 681.94 L777.849 681.94 L777.29 681.94 L776.731 681.94 L776.172 681.94 L775.612 681.94 L775.053 681.94 L774.494 681.94 L773.935 681.94 L773.375 681.94 L772.816 681.94 L772.257 681.94 L771.698 681.94 L771.138 681.94 L770.579 681.94 L770.02 681.94 L769.461 681.94 L768.901 681.94 L768.342 681.94 L767.783 681.94 L767.224 681.94 L766.664 681.94 L766.105 681.94 L765.546 681.94 L764.987 681.94 L764.427 681.94 L763.868 681.94 L763.309 681.94 L762.75 681.94 L762.19 681.94 L761.631 681.94 L761.072 681.94 L760.513 681.94 L759.953 681.94 L759.394 681.94 L758.835 681.94 L758.276 681.94 L757.716 681.94 L757.157 681.94 L756.598 681.94 L756.039 681.94 L755.479 681.94 L754.92 681.94 L754.361 681.94 L753.802 681.94 L753.242 681.94 L752.683 681.94 L752.124 681.94 L751.565 681.94 L751.005 681.94 L750.446 681.94 L749.887 681.94 L749.328 681.94 L748.768 681.94 L748.209 681.94 L747.65 681.94 L747.091 681.94 L746.531 681.94 L745.972 681.94 L745.413 681.94 L744.854 681.94 L744.294 681.94 L743.735 681.94 L743.176 681.94 L742.617 681.94 L742.057 681.94 L741.498 681.94 L740.939 681.94 L740.38 681.94 L739.82 681.94 L739.261 681.94 L738.702 681.94 L738.143 681.94 L737.583 681.94 L737.024 681.94 L736.465 681.94 L735.906 681.94 L735.346 681.94 L734.787 681.94 L734.228 681.94 L733.669 681.94 L733.109 681.94 L732.55 681.94 L731.991 681.94 L731.432 681.94 L730.872 681.94 L730.313 681.94 L729.754 681.94 L729.195 681.94 L728.635 681.94 L728.076 681.94 L727.517 681.94 L726.958 681.94 L726.398 681.94 L725.839 681.94 L725.28 681.94 L724.721 681.94 L724.161 681.94 L723.602 681.94 L723.043 681.94 L722.484 681.94 L721.924 681.94 L721.365 681.94 L720.806 681.94 L720.247 681.94  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip063)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,682.623 720.806,682.623 721.365,682.623 721.924,682.623 722.484,682.623 723.043,682.623 723.602,682.623 724.161,682.623 724.721,682.623 725.28,682.623 725.839,682.623 726.398,682.623 726.958,682.623 727.517,682.623 728.076,682.623 728.635,682.623 729.195,682.623 729.754,682.623 730.313,682.623 730.872,682.623 731.432,682.623 731.991,682.623 732.55,682.623 733.109,682.623 733.669,682.623 734.228,682.623 734.787,682.623 735.346,682.623 735.906,682.623 736.465,682.623 737.024,682.623 737.583,682.623 738.143,682.623 738.702,682.623 739.261,682.623 739.82,682.623 740.38,682.623 740.939,682.623 741.498,682.623 742.057,682.623 742.617,682.623 743.176,682.623 743.735,682.623 744.294,682.623 744.854,682.623 745.413,682.623 745.972,682.623 746.531,682.623 747.091,682.623 747.65,682.623 748.209,682.623 748.768,682.623 749.328,682.623 749.887,682.623 750.446,682.623 751.005,682.623 751.565,682.623 752.124,682.623 752.683,682.623 753.242,682.623 753.802,682.623 754.361,682.623 754.92,682.623 755.479,682.623 756.039,682.623 756.598,682.623 757.157,682.623 757.716,682.623 758.276,682.623 758.835,682.623 759.394,682.623 759.953,682.623 760.513,682.623 761.072,682.623 761.631,682.623 762.19,682.623 762.75,682.623 763.309,682.623 763.868,682.623 764.427,682.623 764.987,682.623 765.546,682.623 766.105,682.623 766.664,682.623 767.224,682.623 767.783,682.623 768.342,682.623 768.901,682.623 769.461,682.623 770.02,682.623 770.579,682.623 771.138,682.623 771.698,682.623 772.257,682.623 772.816,682.623 773.375,682.623 773.935,682.623 774.494,682.623 775.053,682.623 775.612,682.623 776.172,682.623 776.731,682.623 777.29,682.623 777.849,682.623 778.409,682.623 778.968,682.623 779.527,682.623 780.086,682.623 780.646,682.623 781.205,682.623 781.764,682.623 782.323,682.623 782.883,682.623 783.442,682.623 784.001,682.623 784.56,682.623 785.12,682.623 785.679,682.623 786.238,682.623 786.797,682.623 787.357,682.623 787.916,682.623 788.475,682.623 789.034,682.623 789.594,682.623 790.153,682.623 790.712,682.623 791.271,682.623 791.831,682.623 792.39,682.623 792.949,682.623 793.508,682.623 794.068,682.623 794.627,682.623 795.186,682.623 795.745,682.623 796.305,682.623 796.864,682.623 797.423,682.623 797.982,682.623 798.542,682.623 799.101,682.623 799.66,682.623 800.219,682.623 800.779,682.623 801.338,682.623 801.897,682.623 802.456,682.623 803.016,682.623 803.575,682.623 804.134,682.623 804.693,682.623 805.253,682.623 805.812,682.623 806.371,682.623 806.931,682.623 807.49,682.623 808.049,682.623 808.608,682.623 809.168,682.623 809.727,682.623 810.286,682.623 810.845,682.623 811.405,682.623 811.964,682.623 812.523,682.623 813.082,682.623 813.642,682.623 814.201,682.623 814.76,682.623 815.319,682.623 815.879,682.623 816.438,682.623 816.997,682.623 817.556,682.623 818.116,682.623 818.675,682.623 819.234,682.623 819.793,682.623 820.353,682.623 820.912,682.623 821.471,682.623 822.03,682.623 822.59,682.623 823.149,682.623 823.708,682.623 824.267,682.623 824.827,682.623 825.386,682.623 825.945,682.623 826.504,682.623 827.064,682.623 827.623,682.623 828.182,682.623 828.741,682.623 829.301,682.623 829.86,682.623 830.419,682.623 830.978,682.623 831.538,682.623 832.097,682.623 832.656,682.623 833.215,682.623 833.775,682.623 834.334,682.623 834.893,682.623 835.452,682.623 836.012,682.623 836.571,682.623 837.13,682.623 837.689,682.623 838.249,682.623 838.808,682.623 839.367,682.623 839.926,682.623 840.486,682.623 841.045,682.623 841.604,682.623 842.163,682.623 842.723,682.623 843.282,682.623 843.841,682.623 844.4,682.623 844.96,682.623 845.519,682.623 846.078,682.623 846.637,682.623 847.197,682.623 847.756,682.623 848.315,682.623 848.874,682.623 849.434,682.623 849.993,682.623 850.552,682.623 851.111,682.623 851.671,682.623 852.23,682.623 852.789,682.623 853.348,682.623 853.908,682.623 854.467,682.623 855.026,682.623 855.585,682.623 856.145,682.623 856.704,682.623 857.263,682.623 857.822,682.623 858.382,682.623 858.941,682.623 859.5,682.623 860.059,682.623 860.619,682.623 861.178,682.623 861.737,682.623 862.296,682.623 862.856,682.623 863.415,682.623 863.974,682.623 864.533,682.623 865.093,682.623 865.652,682.623 866.211,682.623 866.77,682.623 867.33,682.623 867.889,682.623 868.448,682.623 869.007,682.623 869.567,682.623 870.126,682.623 870.685,682.623 871.244,682.623 871.804,682.623 872.363,682.623 872.922,682.623 873.481,682.623 874.041,682.623 874.6,682.623 875.159,682.623 875.718,682.623 876.278,682.623 876.837,682.623 877.396,682.623 877.955,682.623 878.515,682.623 879.074,682.623 879.633,682.623 880.192,682.623 880.752,682.623 881.311,682.623 881.87,682.623 882.429,682.623 882.989,682.623 883.548,682.623 884.107,682.623 884.666,682.623 885.226,682.623 885.785,682.623 886.344,682.623 886.903,682.623 887.463,682.623 888.022,682.623 888.581,682.623 889.14,682.623 889.7,682.623 890.259,682.623 890.818,682.623 891.377,682.623 891.937,682.623 892.496,682.623 893.055,682.623 893.614,682.623 894.174,682.623 894.733,682.623 895.292,682.623 895.851,682.623 896.411,682.623 896.97,682.623 897.529,682.623 898.088,682.623 898.648,682.623 899.207,682.623 899.766,682.623 900.325,682.623 900.885,682.623 901.444,682.623 902.003,682.623 902.562,682.623 903.122,682.623 903.681,682.623 904.24,682.623 904.799,682.623 905.359,682.623 905.918,682.623 906.477,682.623 907.036,682.623 907.596,682.623 908.155,682.623 908.714,682.623 909.273,682.623 909.833,682.623 910.392,682.623 910.951,682.623 911.51,682.623 912.07,682.623 912.629,682.623 913.188,682.623 913.747,682.623 914.307,682.623 914.866,682.623 915.425,682.623 915.984,682.623 916.544,682.623 917.103,682.623 917.662,682.623 918.221,682.623 918.781,682.623 919.34,682.623 919.899,682.623 920.458,682.623 921.018,682.623 921.577,682.623 922.136,682.623 922.695,682.623 923.255,682.623 923.814,682.623 924.373,682.623 924.932,682.623 925.492,682.623 926.051,682.623 926.61,682.623 927.169,682.623 927.729,682.623 928.288,682.623 928.847,682.623 929.406,682.623 929.966,682.623 930.525,682.623 931.084,682.623 931.644,682.623 932.203,682.623 932.762,682.623 933.321,682.623 933.881,682.623 934.44,682.623 934.999,682.623 935.558,682.623 936.118,682.623 936.677,682.623 937.236,682.623 937.795,682.623 938.355,682.623 938.914,682.623 939.473,682.623 940.032,682.623 940.592,682.623 941.151,682.623 941.71,682.623 942.269,682.623 942.829,682.623 943.388,682.623 943.947,682.623 944.506,682.623 945.066,682.623 945.625,682.623 946.184,682.623 946.743,682.623 947.303,682.623 947.862,682.623 948.421,682.623 948.98,682.623 949.54,682.623 950.099,682.623 950.658,682.623 951.217,682.623 951.777,682.623 952.336,682.623 952.895,682.623 953.454,682.623 954.014,682.623 954.573,682.623 955.132,682.623 955.691,682.623 956.251,682.623 956.81,682.623 957.369,682.623 957.928,682.623 958.488,682.623 959.047,682.623 959.606,682.623 960.165,682.623 960.725,682.623 961.284,682.623 961.843,682.623 962.402,682.623 962.962,682.623 963.521,682.623 964.08,682.623 964.639,682.623 965.199,682.623 965.758,682.623 966.317,682.623 966.876,682.623 967.436,682.623 967.995,682.623 968.554,682.623 969.113,682.623 969.673,682.623 970.232,682.623 970.791,682.623 971.35,682.623 971.91,682.623 972.469,682.623 973.028,682.623 973.587,682.623 974.147,682.623 974.706,682.623 975.265,682.623 975.824,682.623 976.384,682.623 976.943,682.623 977.502,682.623 978.061,682.623 978.621,682.623 979.18,682.623 979.739,682.623 980.298,682.623 980.858,682.623 981.417,682.623 981.976,682.623 982.535,682.623 983.095,682.623 983.654,682.623 984.213,682.623 984.772,682.623 985.332,682.623 985.891,682.623 986.45,682.623 987.009,682.623 987.569,682.623 988.128,682.623 988.687,682.623 989.246,682.623 989.806,682.623 990.365,682.623 990.924,682.623 991.483,682.623 992.043,682.623 992.602,682.623 993.161,682.623 993.72,682.623 994.28,682.623 994.839,682.623 995.398,682.623 995.957,682.623 996.517,682.623 997.076,682.623 997.635,682.623 998.194,682.623 998.754,682.623 999.313,682.623 999.872,682.623 1000.43,682.623 1000.99,682.623 1001.55,682.623 1002.11,682.623 1002.67,682.623 1003.23,682.623 1003.79,682.623 1004.35,682.623 1004.91,682.623 1005.46,682.623 1006.02,682.623 1006.58,682.623 1007.14,682.623 1007.7,682.623 1008.26,682.623 1008.82,682.623 1009.38,682.623 1009.94,682.623 1010.5,682.623 1011.06,682.623 1011.62,682.623 1012.18,682.623 1012.73,682.623 1013.29,682.623 1013.85,682.623 1014.41,682.623 1014.97,682.623 1015.53,682.623 1016.09,682.623 1016.65,682.623 1017.21,682.623 1017.77,682.623 1018.33,682.623 1018.89,682.623 1019.45,682.623 1020.01,682.623 1020.56,682.623 1021.12,682.623 1021.68,682.623 1022.24,682.623 1022.8,682.623 1023.36,682.623 1023.92,682.623 1024.48,682.623 1025.04,682.623 1025.6,682.623 1026.16,682.623 1026.72,682.623 1027.28,682.623 1027.83,682.623 1028.39,682.623 1028.95,682.623 1029.51,682.623 1030.07,682.623 1030.63,682.623 1031.19,682.623 1031.75,682.623 1032.31,682.623 1032.87,682.623 1033.43,682.623 1033.99,682.623 1034.55,682.623 1035.1,682.623 1035.66,682.623 1036.22,682.623 1036.78,682.623 1037.34,682.623 1037.9,682.623 1038.46,682.623 1039.02,682.623 1039.58,682.623 1040.14,682.623 1040.7,682.623 1041.26,682.623 1041.82,682.623 1042.38,682.623 1042.93,682.623 1043.49,682.623 1044.05,682.623 1044.61,682.623 1045.17,682.623 1045.73,682.623 1046.29,682.623 1046.85,682.623 1047.41,682.623 1047.97,682.623 1048.53,682.623 1049.09,682.623 1049.65,682.623 1050.2,682.623 1050.76,682.623 1051.32,682.623 1051.88,682.623 1052.44,682.623 1053,682.623 1053.56,682.623 1054.12,682.623 1054.68,682.623 1055.24,682.623 1055.8,682.623 1056.36,682.623 1056.92,682.623 1057.48,682.623 1058.03,682.623 1058.59,682.623 1059.15,682.623 1059.71,682.623 1060.27,682.623 1060.83,682.623 1061.39,682.623 1061.95,682.623 1062.51,682.623 1063.07,682.623 1063.63,682.623 1064.19,682.623 1064.75,682.623 1065.3,682.623 1065.86,682.623 1066.42,682.623 1066.98,682.623 1067.54,682.623 1068.1,682.623 1068.66,682.623 1069.22,682.623 1069.78,682.623 1070.34,682.623 1070.9,682.623 1071.46,682.623 1072.02,682.623 1072.57,682.623 1073.13,682.623 1073.69,682.623 1074.25,682.623 1074.81,682.623 1075.37,682.623 1075.93,682.623 1076.49,682.623 1077.05,682.623 1077.61,682.623 1078.17,682.623 1078.73,682.623 1079.29,682.623 1079.85,682.623 1080.4,682.623 1080.96,682.623 1081.52,682.623 1082.08,682.623 1082.64,682.623 1083.2,682.623 1083.76,682.623 1084.32,682.623 1084.88,682.623 1085.44,682.623 1086,682.623 1086.56,682.623 1087.12,682.623 1087.67,682.623 1088.23,682.623 1088.79,682.623 1089.35,682.623 1089.91,682.623 1090.47,682.623 1091.03,682.623 1091.59,682.623 1092.15,682.623 1092.71,682.623 1093.27,682.623 1093.83,682.623 1094.39,682.623 1094.94,682.623 1095.5,682.623 1096.06,682.623 1096.62,682.623 1097.18,682.623 1097.74,682.623 1098.3,682.623 1098.86,682.623 1099.42,682.623 1099.98,682.623 1100.54,682.623 1101.1,682.623 1101.66,682.623 1102.22,682.623 1102.77,682.623 1103.33,682.623 1103.89,682.623 1104.45,682.623 1105.01,682.623 1105.57,682.623 1106.13,682.623 1106.69,682.623 1107.25,682.623 1107.81,682.623 1108.37,682.623 1108.93,682.623 1109.49,682.623 1110.04,682.623 1110.6,682.623 1111.16,682.623 1111.72,682.623 1112.28,682.623 1112.84,682.623 1113.4,682.623 1113.96,682.623 1114.52,682.623 1115.08,682.623 1115.64,682.623 1116.2,682.623 1116.76,682.623 1117.31,682.623 1117.87,682.623 1118.43,682.623 1118.99,682.623 1119.55,682.623 1120.11,682.623 1120.67,682.623 1121.23,682.623 1121.79,682.623 1122.35,682.623 1122.91,682.623 1123.47,682.623 1124.03,682.623 1124.59,682.623 1125.14,682.623 1125.7,682.623 1126.26,682.623 1126.82,682.623 1127.38,682.623 1127.94,682.623 1128.5,682.623 1129.06,682.623 1129.62,682.623 1130.18,682.623 1130.74,682.623 1131.3,682.623 1131.86,682.623 1132.41,682.623 1132.97,682.623 1133.53,682.623 1134.09,682.623 1134.65,682.623 1135.21,682.623 1135.77,682.623 1136.33,682.623 1136.89,682.623 1137.45,682.623 1138.01,682.623 1138.57,682.623 1139.13,682.623 1139.68,682.623 1140.24,682.623 1140.8,682.623 1141.36,682.623 1141.92,682.623 1142.48,682.623 1143.04,682.623 1143.6,682.623 1144.16,682.623 1144.72,682.623 1145.28,682.623 1145.84,682.623 1146.4,682.623 1146.96,682.623 1147.51,682.623 1148.07,682.623 1148.63,682.623 1149.19,682.623 1149.75,682.623 1150.31,682.623 1150.87,682.623 1151.43,682.623 1151.99,682.623 1152.55,682.623 1153.11,682.623 1153.67,682.623 1154.23,682.623 1154.78,682.623 1155.34,682.623 1155.9,682.623 1156.46,682.623 1157.02,682.623 1157.58,682.623 1158.14,682.623 1158.7,682.623 1159.26,682.623 1159.82,682.623 1160.38,682.623 1160.94,682.623 1161.5,682.623 1162.05,682.623 1162.61,682.623 1163.17,682.623 1163.73,682.623 1164.29,682.623 1164.85,682.623 1165.41,682.623 1165.97,682.623 1166.53,682.623 1167.09,682.623 1167.65,682.623 1168.21,682.623 1168.77,682.623 1169.33,682.623 1169.88,682.623 1170.44,682.623 1171,682.623 1171.56,682.623 1172.12,682.623 1172.68,682.623 1173.24,682.623 1173.8,682.623 1174.36,682.623 1174.92,682.623 1175.48,682.623 1176.04,682.623 1176.6,682.623 1177.15,682.623 1177.71,682.623 1178.27,682.623 1178.83,682.623 1179.39,682.623 1179.95,682.623 1180.51,682.623 1181.07,682.623 1181.63,682.623 1182.19,682.623 1182.75,682.623 1183.31,682.623 1183.87,682.623 1184.43,682.623 1184.98,682.623 1185.54,682.623 1186.1,682.623 1186.66,682.623 1187.22,682.623 1187.78,682.623 1188.34,682.623 1188.9,682.623 1189.46,682.623 1190.02,682.623 1190.58,682.623 1191.14,682.623 1191.7,682.623 1192.25,682.623 1192.81,682.623 1193.37,682.623 1193.93,682.623 1194.49,682.623 1195.05,682.623 1195.61,682.623 1196.17,682.623 1196.73,682.623 1197.29,682.623 1197.85,682.623 1198.41,682.623 1198.97,682.623 1199.52,682.623 1200.08,682.623 1200.64,682.623 1201.2,682.623 1201.76,682.623 1202.32,682.623 1202.88,682.623 1203.44,682.623 1204,682.623 1204.56,682.623 1205.12,682.623 1205.68,682.623 1206.24,682.623 1206.8,682.623 1207.35,682.623 1207.91,682.623 1208.47,682.623 1209.03,682.623 1209.59,682.623 1210.15,682.623 1210.71,682.623 1211.27,682.623 1211.83,682.623 1212.39,682.623 1212.95,682.623 1213.51,682.623 1214.07,682.623 1214.62,682.623 1215.18,682.623 1215.74,682.623 1216.3,682.623 1216.86,682.623 1217.42,682.623 1217.98,682.623 1218.54,682.623 1219.1,682.623 1219.66,682.623 1220.22,682.623 1220.78,682.623 1221.34,682.623 1221.89,682.623 1222.45,682.623 1223.01,682.623 1223.57,682.623 1224.13,682.623 1224.69,682.623 1225.25,682.623 1225.81,682.623 1226.37,682.623 1226.93,682.623 1227.49,682.623 1228.05,682.623 1228.61,682.623 1229.17,682.623 1229.72,682.623 1230.28,682.623 1230.84,682.623 1231.4,682.623 1231.96,682.623 1232.52,682.623 1233.08,682.623 1233.64,682.623 1234.2,682.623 1234.76,682.623 1235.32,682.623 1235.88,682.623 1236.44,682.623 1236.99,682.623 1237.55,682.623 1238.11,682.623 1238.67,682.623 1239.23,682.623 1239.79,682.623 1240.35,682.623 1240.91,682.623 1241.47,682.623 1242.03,682.623 1242.59,682.623 1243.15,682.623 1243.71,682.623 1244.26,682.623 1244.82,682.623 1245.38,682.623 1245.94,682.623 1246.5,682.623 1247.06,682.623 1247.62,682.623 1248.18,682.623 1248.74,682.623 1249.3,682.623 1249.86,682.623 1250.42,682.623 1250.98,682.623 1251.54,682.623 1252.09,682.623 1252.65,682.623 1253.21,682.623 1253.77,682.623 1254.33,682.623 1254.89,682.623 1255.45,682.623 1256.01,682.623 1256.57,682.623 1257.13,682.623 1257.69,682.623 1258.25,682.623 1258.81,682.623 1259.36,682.623 1259.92,682.623 1260.48,682.623 1261.04,682.623 1261.6,682.623 1262.16,682.623 1262.72,682.623 1263.28,682.623 1263.84,682.623 1264.4,682.623 1264.96,682.623 1265.52,682.623 1266.08,682.623 1266.63,682.623 1267.19,682.623 1267.75,682.623 1268.31,682.623 1268.87,682.623 1269.43,682.623 1269.99,682.623 1270.55,682.623 1271.11,682.623 1271.67,682.623 1272.23,682.623 1272.79,682.623 1273.35,682.623 1273.91,682.623 1274.46,682.623 1275.02,682.623 1275.58,682.623 1276.14,682.623 1276.7,682.623 1277.26,682.623 1277.82,682.623 1278.38,682.623 1278.94,682.623 1279.5,682.623 1280.06,682.623 1280.62,682.623 1281.18,682.623 1281.73,682.623 1282.29,682.623 1282.85,682.623 1283.41,682.623 1283.97,682.623 1284.53,682.623 1285.09,682.623 1285.65,682.623 1286.21,682.623 1286.77,682.623 1287.33,682.623 1287.89,682.623 1288.45,682.623 1289,682.623 1289.56,682.623 1290.12,682.623 1290.68,682.623 1291.24,682.623 1291.8,682.623 1292.36,682.623 1292.92,682.623 1293.48,682.623 1294.04,682.623 1294.6,682.623 1295.16,682.623 1295.72,682.623 1296.28,682.623 1296.83,682.623 1297.39,682.623 1297.95,682.623 1298.51,682.623 1299.07,682.623 1299.63,682.623 1300.19,682.623 1300.75,682.623 1301.31,682.623 1301.87,682.623 1302.43,682.623 1302.99,682.623 1303.55,682.623 1304.1,682.623 1304.66,682.623 1305.22,682.623 1305.78,682.623 1306.34,682.623 1306.9,682.623 1307.46,682.623 1308.02,682.623 1308.58,682.623 1309.14,682.623 1309.7,682.623 1310.26,682.623 1310.82,682.623 1311.38,682.623 1311.93,682.623 1312.49,682.623 1313.05,682.623 1313.61,682.623 1314.17,682.623 1314.73,682.623 1315.29,682.623 1315.85,682.623 1316.41,682.623 1316.97,682.623 1317.53,682.623 1318.09,682.623 1318.65,682.623 1319.2,682.623 1319.76,682.623 1320.32,682.623 1320.88,682.623 1321.44,682.623 1322,682.623 1322.56,682.623 1323.12,682.623 1323.68,682.623 1324.24,682.623 1324.8,682.623 1325.36,682.623 1325.92,682.623 1326.47,682.623 1327.03,682.623 1327.59,682.623 1328.15,682.623 1328.71,682.623 1329.27,682.623 1329.83,682.623 1330.39,682.623 1330.95,682.623 1331.51,682.623 1332.07,682.623 1332.63,682.623 1333.19,682.623 1333.75,682.623 1334.3,682.623 1334.86,682.623 1335.42,682.623 1335.98,682.623 1336.54,682.623 1337.1,682.623 1337.66,682.623 1338.22,682.623 1338.78,682.623 1339.34,682.623 1339.9,682.623 1340.46,682.623 1341.02,682.623 1341.57,682.623 1342.13,682.623 1342.69,682.623 1343.25,682.623 1343.81,682.623 1344.37,682.623 1344.93,682.623 1345.49,682.623 1346.05,682.623 1346.61,682.623 1347.17,682.623 1347.73,682.623 1348.29,682.623 1348.84,682.623 1349.4,682.623 1349.96,682.623 1350.52,682.623 1351.08,682.623 1351.64,682.623 1352.2,682.623 1352.76,682.623 1353.32,682.623 1353.88,682.623 1354.44,682.623 1355,682.623 1355.56,682.623 1356.12,682.623 1356.67,682.623 1357.23,682.623 1357.79,682.623 1358.35,682.623 1358.91,682.623 1359.47,682.623 1360.03,682.623 1360.59,682.623 1361.15,682.623 1361.71,682.623 1362.27,682.623 1362.83,682.623 1363.39,682.623 1363.94,682.623 1364.5,682.623 1365.06,682.623 1365.62,682.623 1366.18,682.623 1366.74,682.623 1367.3,682.623 1367.86,682.623 1368.42,682.623 1368.98,682.623 1369.54,682.623 1370.1,682.623 1370.66,682.623 1371.21,682.623 1371.77,682.623 1372.33,682.623 1372.89,682.623 1373.45,682.623 1374.01,682.623 1374.57,682.623 1375.13,682.623 1375.69,682.623 1376.25,682.623 1376.81,682.623 1377.37,682.623 1377.93,682.623 1378.49,682.623 1379.04,682.623 1379.6,682.623 1380.16,682.623 1380.72,682.623 1381.28,682.623 1381.84,682.623 1382.4,682.623 1382.96,682.623 1383.52,682.623 1384.08,682.623 1384.64,682.623 1385.2,682.623 1385.76,682.623 1386.31,682.623 1386.87,682.623 1387.43,682.623 1387.99,682.623 1388.55,682.623 1389.11,682.623 1389.67,682.623 1390.23,682.623 1390.79,682.623 1391.35,682.623 1391.91,682.623 1392.47,682.623 1393.03,682.623 1393.58,682.623 1394.14,682.623 1394.7,682.623 1395.26,682.623 1395.82,682.623 1396.38,682.623 1396.94,682.623 1397.5,682.623 1398.06,682.623 1398.62,682.623 1399.18,682.623 1399.74,682.623 1400.3,682.623 1400.86,682.623 1401.41,682.623 1401.97,682.623 1402.53,682.623 1403.09,682.623 1403.65,682.623 1404.21,682.623 1404.77,682.623 1405.33,682.623 1405.89,682.623 1406.45,682.623 1407.01,682.623 1407.57,682.623 1408.13,682.623 1408.68,682.623 1409.24,682.623 1409.8,682.623 1410.36,682.623 1410.92,682.623 1411.48,682.623 1412.04,682.623 1412.6,682.623 1413.16,682.623 1413.72,682.623 1414.28,682.623 1414.84,682.623 1415.4,682.623 1415.95,682.623 1416.51,682.623 1417.07,682.623 1417.63,682.623 1418.19,682.623 1418.75,682.623 1419.31,682.623 1419.87,682.623 1420.43,682.623 1420.99,682.623 1421.55,682.623 1422.11,682.623 1422.67,682.623 1423.23,682.623 1423.78,682.623 1424.34,682.623 1424.9,682.623 1425.46,682.623 1426.02,682.623 1426.58,682.623 1427.14,682.623 1427.7,682.623 1428.26,682.623 1428.82,682.623 1429.38,682.623 1429.94,682.623 1430.5,682.623 1431.05,682.623 1431.61,682.623 1432.17,682.623 1432.73,682.623 1433.29,682.623 1433.85,682.623 1434.41,682.623 1434.97,682.623 1435.53,682.623 1436.09,682.623 1436.65,682.623 1437.21,682.623 1437.77,682.623 1438.33,682.623 1438.88,682.623 1439.44,682.623 1440,682.623 1440.56,682.623 1441.12,682.623 1441.68,682.623 1442.24,682.623 1442.8,682.623 1443.36,682.623 1443.92,682.623 1444.48,682.623 1445.04,682.623 1445.6,682.623 1446.15,682.623 1446.71,682.623 1447.27,682.623 1447.83,682.623 1448.39,682.623 1448.95,682.623 1449.51,682.623 1450.07,682.623 1450.63,682.623 1451.19,682.623 1451.75,682.623 1452.31,682.623 1452.87,682.623 1453.42,682.623 1453.98,682.623 1454.54,682.623 1455.1,682.623 1455.66,682.623 1456.22,682.623 1456.78,682.623 1457.34,682.623 1457.9,682.623 1458.46,682.623 1459.02,682.623 1459.58,682.623 1460.14,682.623 1460.7,682.623 1461.25,682.623 1461.81,682.623 1462.37,682.623 1462.93,682.623 1463.49,682.623 1464.05,682.623 1464.61,682.623 1465.17,682.623 1465.73,682.623 1466.29,682.623 1466.85,682.623 1467.41,682.623 1467.97,682.623 1468.52,682.623 1469.08,682.623 1469.64,682.623 1470.2,682.623 1470.76,682.623 1471.32,682.623 1471.88,682.623 1472.44,682.623 1473,682.623 1473.56,682.623 1474.12,682.623 1474.68,682.623 1475.24,682.623 1475.79,682.623 1476.35,682.623 1476.91,682.623 1477.47,682.623 1478.03,682.623 1478.59,682.623 1479.15,682.623 1479.71,682.623 1480.27,682.623 1480.83,682.623 1481.39,682.623 1481.95,682.623 1482.51,682.623 1483.07,682.623 1483.62,682.623 1484.18,682.623 1484.74,682.623 1485.3,682.623 1485.86,682.623 1486.42,682.623 1486.98,682.623 1487.54,682.623 1488.1,682.623 1488.66,682.623 1489.22,682.623 1489.78,682.623 1490.34,682.623 1490.89,682.623 1491.45,682.623 1492.01,682.623 1492.57,682.623 1493.13,682.623 1493.69,682.623 1494.25,682.623 1494.81,682.623 1495.37,682.623 1495.93,682.623 1496.49,682.623 1497.05,682.623 1497.61,682.623 1498.16,682.623 1498.72,682.623 1499.28,682.623 1499.84,682.623 1500.4,682.623 1500.96,682.623 1501.52,682.623 1502.08,682.623 1502.64,682.623 1503.2,682.623 1503.76,682.623 1504.32,682.623 1504.88,682.623 1505.44,682.623 1505.99,682.623 1506.55,682.623 1507.11,682.623 1507.67,682.623 1508.23,682.623 1508.79,682.623 1509.35,682.623 1509.91,682.623 1510.47,682.623 1511.03,682.623 1511.59,682.623 1512.15,682.623 1512.71,682.623 1513.26,682.623 1513.82,682.623 1514.38,682.623 1514.94,682.623 1515.5,682.623 1516.06,682.623 1516.62,682.623 1517.18,682.623 1517.74,682.623 1518.3,682.623 1518.86,682.623 1519.42,682.623 1519.98,682.623 1520.53,682.623 1521.09,682.623 1521.65,682.623 1522.21,682.623 1522.77,682.623 1523.33,682.623 1523.89,682.623 1524.45,682.623 1525.01,682.623 1525.57,682.623 1526.13,682.623 1526.69,682.623 1527.25,682.623 1527.81,682.623 1528.36,682.623 1528.92,682.623 1529.48,682.623 1530.04,682.623 1530.6,682.623 1531.16,682.623 1531.72,682.623 1532.28,682.623 1532.84,682.623 1533.4,682.623 1533.96,682.623 1534.52,682.623 1535.08,682.623 1535.63,682.623 1536.19,682.623 1536.75,682.623 1537.31,682.623 1537.87,682.623 1538.43,682.623 1538.99,682.623 1539.55,682.623 1540.11,682.623 1540.67,682.623 1541.23,682.623 1541.79,682.623 1542.35,682.623 1542.9,682.623 1543.46,682.623 1544.02,682.623 1544.58,682.623 1545.14,682.623 1545.7,682.623 1546.26,682.623 1546.82,682.623 1547.38,682.623 1547.94,682.623 1548.5,682.623 1549.06,682.623 1549.62,682.623 1550.18,682.623 1550.73,682.623 1551.29,682.623 1551.85,682.623 1552.41,682.623 1552.97,682.623 1553.53,682.623 1554.09,682.623 1554.65,682.623 1555.21,682.623 1555.77,682.623 1556.33,682.623 1556.89,682.623 1557.45,682.623 1558,682.623 1558.56,682.623 1559.12,682.623 1559.68,682.623 1560.24,682.623 1560.8,682.623 1561.36,682.623 1561.92,682.623 1562.48,682.623 1563.04,682.623 1563.6,682.623 1564.16,682.623 1564.72,682.623 1565.28,682.623 1565.83,682.623 1566.39,682.623 1566.95,682.623 1567.51,682.623 1568.07,682.623 1568.63,682.623 1569.19,682.623 1569.75,682.623 1570.31,682.623 1570.87,682.623 1571.43,682.623 1571.99,682.623 1572.55,682.623 1573.1,682.623 1573.66,682.623 1574.22,682.623 1574.78,682.623 1575.34,682.623 1575.9,682.623 1576.46,682.623 1577.02,682.623 1577.58,682.623 1578.14,682.623 1578.7,682.623 1579.26,682.623 1579.82,682.623 1580.37,682.623 1580.93,682.623 1581.49,682.623 1582.05,682.623 1582.61,682.623 1583.17,682.623 1583.73,682.623 1584.29,682.623 1584.85,682.623 1585.41,682.623 1585.97,682.623 1586.53,682.623 1587.09,682.623 1587.65,682.623 1588.2,682.623 1588.76,682.623 1589.32,682.623 1589.88,682.623 1590.44,682.623 1591,682.623 1591.56,682.623 1592.12,682.623 1592.68,682.623 1593.24,682.623 1593.8,682.623 1594.36,682.623 1594.92,682.623 1595.47,682.623 1596.03,682.623 1596.59,682.623 1597.15,682.623 1597.71,682.623 1598.27,682.623 1598.83,682.623 1599.39,682.623 1599.95,682.623 1600.51,682.623 1601.07,682.623 1601.63,682.623 1602.19,682.623 1602.74,682.623 1603.3,682.623 1603.86,682.623 1604.42,682.623 1604.98,682.623 1605.54,682.623 1606.1,682.623 1606.66,682.623 1607.22,682.623 1607.78,682.623 1608.34,682.623 1608.9,682.623 1609.46,682.623 1610.02,682.623 1610.57,682.623 1611.13,682.623 1611.69,682.623 1612.25,682.623 1612.81,682.623 1613.37,682.623 1613.93,682.623 1614.49,682.623 1615.05,682.623 1615.61,682.623 1616.17,682.623 1616.73,682.623 1617.29,682.623 1617.84,682.623 1618.4,682.623 1618.96,682.623 1619.52,682.623 1620.08,682.623 1620.64,682.623 1621.2,682.623 1621.76,682.623 1622.32,682.623 1622.88,682.623 1623.44,682.623 1624,682.623 1624.56,682.623 1625.11,682.623 1625.67,682.623 1626.23,682.623 1626.79,682.623 1627.35,682.623 1627.91,682.623 1628.47,682.623 1629.03,682.623 1629.59,682.623 1630.15,682.623 1630.71,682.623 1631.27,682.623 1631.83,682.623 1632.39,682.623 1632.94,682.623 1633.5,682.623 1634.06,682.623 1634.62,682.623 1635.18,682.623 1635.74,682.623 1636.3,682.623 1636.86,682.623 1637.42,682.623 1637.98,682.623 1638.54,682.623 1639.1,682.623 1639.66,682.623 1640.21,682.623 1640.77,682.623 1641.33,682.623 1641.89,682.623 1642.45,682.623 1643.01,682.623 1643.57,682.623 1644.13,682.623 1644.69,682.623 1645.25,682.623 1645.81,682.623 1646.37,682.623 1646.93,682.623 1647.48,682.623 1648.04,682.623 1648.6,682.623 1649.16,682.623 1649.72,682.623 1650.28,682.623 1650.84,682.623 1651.4,682.623 1651.96,682.623 1652.52,682.623 1653.08,682.623 1653.64,682.623 1654.2,682.623 1654.76,682.623 1655.31,682.623 1655.87,682.623 1656.43,682.623 1656.99,682.623 1657.55,682.623 1658.11,682.623 1658.67,682.623 1659.23,682.623 1659.79,682.623 1660.35,682.623 1660.91,682.623 1661.47,682.623 1662.03,682.623 1662.58,682.623 1663.14,682.623 1663.7,682.623 1664.26,682.623 1664.82,682.623 1665.38,682.623 1665.94,682.623 1666.5,682.623 1667.06,682.623 1667.62,682.623 1668.18,682.623 1668.74,682.623 1669.3,682.623 1669.85,682.623 1670.41,682.623 1670.97,682.623 1671.53,682.623 1672.09,682.623 1672.65,682.623 1673.21,682.623 1673.77,682.623 1674.33,682.623 1674.89,682.623 1675.45,682.623 1676.01,682.623 1676.57,682.623 1677.13,682.623 1677.68,682.623 1678.24,682.623 1678.8,682.623 1679.36,682.623 1679.92,682.623 1680.48,682.623 1681.04,682.623 1681.6,682.623 1682.16,682.623 1682.72,682.623 1683.28,682.623 1683.84,682.623 1684.4,682.623 1684.95,682.623 1685.51,682.623 1686.07,682.623 1686.63,682.623 1687.19,682.623 1687.75,682.623 1688.31,682.623 1688.87,682.623 1689.43,682.623 1689.99,682.623 1690.55,682.623 1691.11,682.623 1691.67,682.623 1692.23,682.623 1692.78,682.623 1693.34,682.623 1693.9,682.623 1694.46,682.623 1695.02,682.623 1695.58,682.623 1696.14,682.623 1696.7,682.623 1697.26,682.623 1697.82,682.623 1698.38,682.623 1698.94,682.623 1699.5,682.623 1700.05,682.623 1700.61,682.623 1701.17,682.623 1701.73,682.623 1702.29,682.623 1702.85,682.623 1703.41,682.623 1703.97,682.623 1704.53,682.623 1705.09,682.623 1705.65,682.623 1706.21,682.623 1706.77,682.623 1707.32,682.623 1707.88,682.623 1708.44,682.623 1709,682.623 1709.56,682.623 1710.12,682.623 1710.68,682.623 1711.24,682.623 1711.8,682.623 1712.36,682.623 1712.92,682.623 1713.48,682.623 1714.04,682.623 1714.6,682.623 1715.15,682.623 1715.71,682.623 1716.27,682.623 1716.83,682.623 1717.39,682.623 1717.95,682.623 1718.51,682.623 1719.07,682.623 1719.63,682.623 1720.19,682.623 1720.75,682.623 1721.31,682.623 1721.87,682.623 1722.42,682.623 1722.98,682.623 1723.54,682.623 1724.1,682.623 1724.66,682.623 1725.22,682.623 1725.78,682.623 1726.34,682.623 1726.9,682.623 1727.46,682.623 1728.02,682.623 1728.58,682.623 1729.14,682.623 1729.69,682.623 1730.25,682.623 1730.81,682.623 1731.37,682.623 1731.93,682.623 1732.49,682.623 1733.05,682.623 1733.61,682.623 1734.17,682.623 1734.73,682.623 1735.29,682.623 1735.85,682.623 1736.41,682.623 1736.97,682.623 1737.52,682.623 1738.08,682.623 1738.64,682.623 1739.2,682.623 1739.76,682.623 1740.32,682.623 1740.88,682.623 1741.44,682.623 1742,682.623 1742.56,682.623 1743.12,682.623 1743.68,682.623 1744.24,682.623 1744.79,682.623 1745.35,682.623 1745.91,682.623 1746.47,682.623 1747.03,682.623 1747.59,682.623 1748.15,682.623 1748.71,682.623 1749.27,682.623 1749.83,682.623 1750.39,682.623 1750.95,682.623 1751.51,682.623 1752.06,682.623 1752.62,682.623 1753.18,682.623 1753.74,682.623 1754.3,682.623 1754.86,682.623 1755.42,682.623 1755.98,682.623 1756.54,682.623 1757.1,682.623 1757.66,682.623 1758.22,682.623 1758.78,682.623 1759.34,682.623 1759.89,682.623 1760.45,682.623 1761.01,682.623 1761.57,682.623 1762.13,682.623 1762.69,682.623 1763.25,682.623 1763.81,682.623 1764.37,682.623 1764.93,682.623 1765.49,682.623 1766.05,682.623 1766.61,682.623 1767.16,682.623 1767.72,682.623 1768.28,682.623 1768.84,682.623 1769.4,682.623 1769.96,682.623 1770.52,682.623 1771.08,682.623 1771.64,682.623 1772.2,682.623 1772.76,682.623 1773.32,682.623 1773.88,682.623 1774.43,682.623 1774.99,682.623 1775.55,682.623 1776.11,682.623 1776.67,682.623 1777.23,682.623 1777.79,682.623 1778.35,682.623 1778.91,682.623 1779.47,682.623 1780.03,682.623 1780.59,682.623 1781.15,682.623 1781.71,682.623 1782.26,682.623 1782.82,682.623 1783.38,682.623 1783.94,682.623 1784.5,682.623 1785.06,682.623 1785.62,682.623 1786.18,682.623 1786.74,682.623 1787.3,682.623 1787.86,682.623 1788.42,682.623 1788.98,682.623 1789.53,682.623 1790.09,682.623 1790.65,682.623 1791.21,682.623 1791.77,682.623 1792.33,682.623 1792.89,682.623 1793.45,682.623 1794.01,682.623 1794.57,682.623 1795.13,682.623 1795.69,682.623 1796.25,682.623 1796.8,682.623 1797.36,682.623 1797.92,682.623 1798.48,682.623 1799.04,682.623 1799.6,682.623 1800.16,682.623 1800.72,682.623 1801.28,682.623 1801.84,682.623 1802.4,682.623 1802.96,682.623 1803.52,682.623 1804.08,682.623 1804.63,682.623 1805.19,682.623 1805.75,682.623 1806.31,682.623 1806.87,682.623 1807.43,682.623 1807.99,682.623 1808.55,682.623 1809.11,682.623 1809.67,682.623 1810.23,682.623 1810.79,682.623 1811.35,682.623 1811.9,682.623 1812.46,682.623 1813.02,682.623 1813.58,682.623 1814.14,682.623 1814.7,682.623 1815.26,682.623 1815.82,682.623 1816.38,682.623 1816.94,682.623 1817.5,682.623 1818.06,682.623 1818.62,682.623 1819.18,682.623 1819.73,682.623 1820.29,682.623 1820.85,682.623 1821.41,682.623 1821.97,682.623 1822.53,682.623 1823.09,682.623 1823.65,682.623 1824.21,682.623 1824.77,682.623 1825.33,682.623 1825.89,682.623 1826.45,682.623 1827,682.623 1827.56,682.623 1828.12,682.623 1828.68,682.623 1829.24,682.623 1829.8,682.623 1830.36,682.623 1830.92,682.623 1831.48,682.623 1832.04,682.623 1832.6,682.623 1833.16,682.623 1833.72,682.623 1834.27,682.623 1834.83,682.623 1835.39,682.623 1835.95,682.623 1836.51,682.623 1837.07,682.623 1837.63,682.623 1838.19,682.623 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.023764009156209 ± 0.026553590666989053\nProjected Energy: -4.010245253907723 ± (0.0034134154891010127, 0.0034415665357965253)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.665769</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.3545e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.108e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.146e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.242e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.535e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.566e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0, boundary_condition=:periodic)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\nboundary_condition : the boundary condition to apply. Can be one of :periodic, :twisted, or :hard_wall\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen, [Val(boundary_condition)])\n\nCompute the new address of a hopping event for the Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes multiplied by a term consistent with boundary condition.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions can be periodic, pi-twisted and hard-wall.\n\nBoundary conditions\n\nFor π-twisted -> :twisted\nFor hard wall -> :hard_wall\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(:twisted))\n(BoseFS{2,3}(2, 0, 0), -1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3, Val(:hard_wall))\n(BoseFS{2,3}(2, 0, 0), 0.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
