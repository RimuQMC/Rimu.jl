var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip760\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip760)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip761\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip760)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip762\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip760)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.83 2211.02,1260.83 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.3 2211.02,1003.3 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,745.771 2211.02,745.771 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.242 2211.02,488.242 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,230.713 2211.02,230.713 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.83 423.181,1260.83 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.3 423.181,1003.3 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,745.771 423.181,745.771 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.242 423.181,488.242 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,230.713 423.181,230.713 \"/>\n<path clip-path=\"url(#clip760)\" d=\"M356.339 1246.63 Q352.728 1246.63 350.899 1250.19 Q349.094 1253.73 349.094 1260.86 Q349.094 1267.97 350.899 1271.54 Q352.728 1275.08 356.339 1275.08 Q359.973 1275.08 361.779 1271.54 Q363.608 1267.97 363.608 1260.86 Q363.608 1253.73 361.779 1250.19 Q359.973 1246.63 356.339 1246.63 M356.339 1242.92 Q362.149 1242.92 365.205 1247.53 Q368.284 1252.11 368.284 1260.86 Q368.284 1269.59 365.205 1274.2 Q362.149 1278.78 356.339 1278.78 Q350.529 1278.78 347.45 1274.2 Q344.395 1269.59 344.395 1260.86 Q344.395 1252.11 347.45 1247.53 Q350.529 1242.92 356.339 1242.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M290.043 1016.65 L306.363 1016.65 L306.363 1020.58 L284.418 1020.58 L284.418 1016.65 Q287.08 1013.89 291.664 1009.26 Q296.27 1004.61 297.451 1003.27 Q299.696 1000.74 300.576 999.007 Q301.478 997.247 301.478 995.558 Q301.478 992.803 299.534 991.067 Q297.613 989.331 294.511 989.331 Q292.312 989.331 289.858 990.095 Q287.427 990.858 284.65 992.409 L284.65 987.687 Q287.474 986.553 289.927 985.974 Q292.381 985.396 294.418 985.396 Q299.789 985.396 302.983 988.081 Q306.177 990.766 306.177 995.257 Q306.177 997.386 305.367 999.308 Q304.58 1001.21 302.474 1003.8 Q301.895 1004.47 298.793 1007.69 Q295.691 1010.88 290.043 1016.65 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M316.224 986.021 L334.58 986.021 L334.58 989.956 L320.506 989.956 L320.506 998.428 Q321.524 998.081 322.543 997.919 Q323.562 997.733 324.58 997.733 Q330.367 997.733 333.747 1000.9 Q337.126 1004.08 337.126 1009.49 Q337.126 1015.07 333.654 1018.17 Q330.182 1021.25 323.862 1021.25 Q321.687 1021.25 319.418 1020.88 Q317.173 1020.51 314.765 1019.77 L314.765 1015.07 Q316.849 1016.21 319.071 1016.76 Q321.293 1017.32 323.77 1017.32 Q327.774 1017.32 330.112 1015.21 Q332.45 1013.1 332.45 1009.49 Q332.45 1005.88 330.112 1003.78 Q327.774 1001.67 323.77 1001.67 Q321.895 1001.67 320.02 1002.09 Q318.168 1002.5 316.224 1003.38 L316.224 986.021 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M356.339 989.099 Q352.728 989.099 350.899 992.664 Q349.094 996.206 349.094 1003.34 Q349.094 1010.44 350.899 1014.01 Q352.728 1017.55 356.339 1017.55 Q359.973 1017.55 361.779 1014.01 Q363.608 1010.44 363.608 1003.34 Q363.608 996.206 361.779 992.664 Q359.973 989.099 356.339 989.099 M356.339 985.396 Q362.149 985.396 365.205 990.002 Q368.284 994.585 368.284 1003.34 Q368.284 1012.06 365.205 1016.67 Q362.149 1021.25 356.339 1021.25 Q350.529 1021.25 347.45 1016.67 Q344.395 1012.06 344.395 1003.34 Q344.395 994.585 347.45 990.002 Q350.529 985.396 356.339 985.396 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M286.062 728.491 L304.418 728.491 L304.418 732.427 L290.344 732.427 L290.344 740.899 Q291.363 740.551 292.381 740.389 Q293.4 740.204 294.418 740.204 Q300.205 740.204 303.585 743.376 Q306.964 746.547 306.964 751.963 Q306.964 757.542 303.492 760.644 Q300.02 763.723 293.701 763.723 Q291.525 763.723 289.256 763.352 Q287.011 762.982 284.603 762.241 L284.603 757.542 Q286.687 758.676 288.909 759.232 Q291.131 759.787 293.608 759.787 Q297.613 759.787 299.951 757.681 Q302.288 755.575 302.288 751.963 Q302.288 748.352 299.951 746.246 Q297.613 744.139 293.608 744.139 Q291.733 744.139 289.858 744.556 Q288.006 744.973 286.062 745.852 L286.062 728.491 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M326.177 731.57 Q322.566 731.57 320.737 735.135 Q318.932 738.676 318.932 745.806 Q318.932 752.913 320.737 756.477 Q322.566 760.019 326.177 760.019 Q329.811 760.019 331.617 756.477 Q333.446 752.913 333.446 745.806 Q333.446 738.676 331.617 735.135 Q329.811 731.57 326.177 731.57 M326.177 727.866 Q331.987 727.866 335.043 732.473 Q338.122 737.056 338.122 745.806 Q338.122 754.533 335.043 759.139 Q331.987 763.723 326.177 763.723 Q320.367 763.723 317.288 759.139 Q314.233 754.533 314.233 745.806 Q314.233 737.056 317.288 732.473 Q320.367 727.866 326.177 727.866 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M356.339 731.57 Q352.728 731.57 350.899 735.135 Q349.094 738.676 349.094 745.806 Q349.094 752.913 350.899 756.477 Q352.728 760.019 356.339 760.019 Q359.973 760.019 361.779 756.477 Q363.608 752.913 363.608 745.806 Q363.608 738.676 361.779 735.135 Q359.973 731.57 356.339 731.57 M356.339 727.866 Q362.149 727.866 365.205 732.473 Q368.284 737.056 368.284 745.806 Q368.284 754.533 365.205 759.139 Q362.149 763.723 356.339 763.723 Q350.529 763.723 347.45 759.139 Q344.395 754.533 344.395 745.806 Q344.395 737.056 347.45 732.473 Q350.529 727.866 356.339 727.866 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M284.835 470.962 L307.057 470.962 L307.057 472.953 L294.511 505.522 L289.627 505.522 L301.432 474.897 L284.835 474.897 L284.835 470.962 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M316.224 470.962 L334.58 470.962 L334.58 474.897 L320.506 474.897 L320.506 483.37 Q321.524 483.022 322.543 482.86 Q323.562 482.675 324.58 482.675 Q330.367 482.675 333.747 485.846 Q337.126 489.018 337.126 494.434 Q337.126 500.013 333.654 503.115 Q330.182 506.193 323.862 506.193 Q321.687 506.193 319.418 505.823 Q317.173 505.453 314.765 504.712 L314.765 500.013 Q316.849 501.147 319.071 501.703 Q321.293 502.258 323.77 502.258 Q327.774 502.258 330.112 500.152 Q332.45 498.045 332.45 494.434 Q332.45 490.823 330.112 488.717 Q327.774 486.61 323.77 486.61 Q321.895 486.61 320.02 487.027 Q318.168 487.444 316.224 488.323 L316.224 470.962 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M356.339 474.041 Q352.728 474.041 350.899 477.606 Q349.094 481.147 349.094 488.277 Q349.094 495.383 350.899 498.948 Q352.728 502.49 356.339 502.49 Q359.973 502.49 361.779 498.948 Q363.608 495.383 363.608 488.277 Q363.608 481.147 361.779 477.606 Q359.973 474.041 356.339 474.041 M356.339 470.337 Q362.149 470.337 365.205 474.944 Q368.284 479.527 368.284 488.277 Q368.284 497.004 365.205 501.61 Q362.149 506.193 356.339 506.193 Q350.529 506.193 347.45 501.61 Q344.395 497.004 344.395 488.277 Q344.395 479.527 347.45 474.944 Q350.529 470.337 356.339 470.337 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M256.664 244.058 L264.303 244.058 L264.303 217.692 L255.992 219.359 L255.992 215.1 L264.256 213.433 L268.932 213.433 L268.932 244.058 L276.571 244.058 L276.571 247.993 L256.664 247.993 L256.664 244.058 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M296.015 216.512 Q292.404 216.512 290.576 220.076 Q288.77 223.618 288.77 230.748 Q288.77 237.854 290.576 241.419 Q292.404 244.961 296.015 244.961 Q299.65 244.961 301.455 241.419 Q303.284 237.854 303.284 230.748 Q303.284 223.618 301.455 220.076 Q299.65 216.512 296.015 216.512 M296.015 212.808 Q301.826 212.808 304.881 217.414 Q307.96 221.998 307.96 230.748 Q307.96 239.475 304.881 244.081 Q301.826 248.664 296.015 248.664 Q290.205 248.664 287.127 244.081 Q284.071 239.475 284.071 230.748 Q284.071 221.998 287.127 217.414 Q290.205 212.808 296.015 212.808 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M326.177 216.512 Q322.566 216.512 320.737 220.076 Q318.932 223.618 318.932 230.748 Q318.932 237.854 320.737 241.419 Q322.566 244.961 326.177 244.961 Q329.811 244.961 331.617 241.419 Q333.446 237.854 333.446 230.748 Q333.446 223.618 331.617 220.076 Q329.811 216.512 326.177 216.512 M326.177 212.808 Q331.987 212.808 335.043 217.414 Q338.122 221.998 338.122 230.748 Q338.122 239.475 335.043 244.081 Q331.987 248.664 326.177 248.664 Q320.367 248.664 317.288 244.081 Q314.233 239.475 314.233 230.748 Q314.233 221.998 317.288 217.414 Q320.367 212.808 326.177 212.808 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M356.339 216.512 Q352.728 216.512 350.899 220.076 Q349.094 223.618 349.094 230.748 Q349.094 237.854 350.899 241.419 Q352.728 244.961 356.339 244.961 Q359.973 244.961 361.779 241.419 Q363.608 237.854 363.608 230.748 Q363.608 223.618 361.779 220.076 Q359.973 216.512 356.339 216.512 M356.339 212.808 Q362.149 212.808 365.205 217.414 Q368.284 221.998 368.284 230.748 Q368.284 239.475 365.205 244.081 Q362.149 248.664 356.339 248.664 Q350.529 248.664 347.45 244.081 Q344.395 239.475 344.395 230.748 Q344.395 221.998 347.45 217.414 Q350.529 212.808 356.339 212.808 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip762)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,230.713 4017.76,230.713 \"/>\n<polyline clip-path=\"url(#clip762)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1249.06 459.396,1247.55 459.964,1247.06 460.533,1245.45 461.101,1244.8 461.669,1244.09 462.238,1243.27 462.806,1242.39 463.375,1241.4 463.943,1240.31 464.511,1238.12 465.08,1236.85 465.648,1235.46 466.216,1233.97 466.785,1232.36 467.353,1230.61 467.921,1228.74 468.49,1225.7 469.058,1223.54 469.626,1221.21 470.195,1217.7 470.763,1215.02 471.331,1212.18 471.9,1208.13 472.468,1204.97 473.036,1201.59 473.605,1198.02 474.173,1194.24 474.741,1190.23 475.31,1185 475.878,1178.52 476.446,1173.82 477.015,1167.83 477.583,1159.54 478.152,1153.17 478.72,1144.6 479.288,1138.84 479.857,1131.77 480.425,1123.52 480.993,1115.96 481.562,1109.25 482.13,1102.29 482.698,1095.07 483.267,1087.71 483.835,1079.23 484.403,1071.49 484.972,1062.6 485.54,1053.49 486.108,1045.34 486.677,1037 487.245,1028.5 487.813,1017.67 488.382,1006.87 488.95,994.908 489.518,984.939 490.087,974.974 490.655,962.849 491.224,950.712 491.792,941.678 492.36,932.552 492.929,922.302 493.497,911.876 494.065,901.519 494.634,888.936 495.202,878.546 495.77,869.069 496.339,859.603 496.907,849.036 497.475,835.505 498.044,823.121 498.612,810.885 499.18,800.827 499.749,790.735 500.317,781.775 500.885,771.632 501.454,760.561 502.022,748.642 502.59,737.873 503.159,727.157 503.727,718.679 504.295,710.057 504.864,700.489 505.432,692.136 506.001,679.595 506.569,669.227 507.137,661.165 507.706,651.009 508.274,642.966 508.842,634.112 509.411,626.466 509.979,618.769 510.547,610.111 511.116,601.548 511.684,593.379 512.252,582.1 512.821,573.872 513.389,566.077 513.957,559.471 514.526,552.848 515.094,545.431 515.662,536.949 516.231,530.834 516.799,523.818 517.367,518.029 517.936,511.043 518.504,504.119 519.072,497.683 519.641,492.233 520.209,486.895 520.778,478.473 521.346,470.343 521.914,465.62 522.483,457.756 523.051,452.139 523.619,442.722 524.188,437.644 524.756,432.748 525.324,428.942 525.893,425.46 526.461,420.675 527.029,413.866 527.598,409.625 528.166,403.19 528.734,399.145 529.303,397.211 529.871,393.315 530.439,389.321 531.008,384.491 531.576,381.642 532.144,376.805 532.713,374.445 533.281,372.828 533.85,366.312 534.418,361.985 534.986,359.771 535.555,356.545 536.123,351.294 536.691,349.348 537.26,348.254 537.828,344.285 538.396,342.522 538.965,336.758 539.533,335.074 540.101,334.534 540.67,332.867 541.238,330.079 541.806,327.491 542.375,325.886 542.943,322.418 543.511,321.02 544.08,319.571 544.648,319.258 545.216,318.04 545.785,314.756 546.353,313.508 546.921,311.272 547.49,309.962 548.058,304.601 548.627,302.636 549.195,302.828 549.763,301.974 550.332,299.04 550.9,297.012 551.468,293.086 552.037,291.592 552.605,292.099 553.173,291.605 553.742,291.185 554.31,289.416 554.878,288.856 555.447,285.944 556.015,284.288 556.583,282.809 557.152,280.19 557.72,280.887 558.288,278.575 558.857,279.286 559.425,277.852 559.993,277.41 560.562,276.059 561.13,279.798 561.698,278.005 562.267,276.454 562.835,276.863 563.404,276.13 563.972,274.521 564.54,270.088 565.109,268.833 565.677,267.716 566.245,265.554 566.814,268.649 567.382,266.31 567.95,267.085 568.519,266.82 569.087,264.421 569.655,269.103 570.224,269.508 570.792,269.715 571.36,268.768 571.929,267.981 572.497,267.385 573.065,262.594 573.634,261.232 574.202,261.977 574.77,260.872 575.339,260.638 575.907,257.076 576.476,258.07 577.044,257.715 577.612,258.493 578.181,259.009 578.749,257.586 579.317,257.196 579.886,255.918 580.454,253.607 581.022,251.464 581.591,249.596 582.159,249.811 582.727,248.979 583.296,247.068 583.864,247.373 584.432,245.628 585.001,245.082 585.569,243.583 586.137,244.361 586.706,245.675 587.274,244.986 587.842,245.36 588.411,245.943 588.979,243.262 589.547,243.755 590.116,243.272 590.684,245.974 591.253,246.308 591.821,245.525 592.389,245.735 592.958,243.855 593.526,244.321 594.094,246.573 594.663,245.675 595.231,246.833 595.799,245.987 596.368,247.254 596.936,248.494 597.504,248.481 598.073,248.33 598.641,248.337 599.209,247.443 599.778,247.6 600.346,247.556 600.914,248.636 601.483,249.461 602.051,248.125 602.619,246.79 603.188,247.993 603.756,247.659 604.325,247.697 604.893,248.396 605.461,247.99 606.03,247.764 606.598,247.342 607.166,246.25 607.735,244.986 608.303,243.778 608.871,243.836 609.44,243.736 610.008,240.406 610.576,240.607 611.145,242.845 611.713,242.689 612.281,244.783 612.85,245.617 613.418,247.318 613.986,247.957 614.555,247.717 615.123,245.111 615.691,246.945 616.26,244.467 616.828,240.957 617.396,243.058 617.965,241.847 618.533,240.849 619.102,240.779 619.67,240.875 620.238,241.935 620.807,241.791 621.375,241.725 621.943,239.547 622.512,237.422 623.08,238.569 623.648,239.649 624.217,239.699 624.785,239.685 625.353,240.516 625.922,240.374 626.49,237.24 627.058,237.661 627.627,238.868 628.195,237.918 628.763,235.994 629.332,235.095 629.9,233.276 630.468,235.805 631.037,236.194 631.605,235.327 632.173,235.603 632.742,235.806 633.31,236.02 633.879,236.436 634.447,235.893 635.015,236.019 635.584,235.028 636.152,235.017 636.72,236.403 637.289,237.553 637.857,235.593 638.425,234.774 638.994,233.157 639.562,234.569 640.13,235.003 640.699,234.199 641.267,235.522 641.835,236.662 642.404,235.921 642.972,235.9 643.54,239.008 644.109,235.671 644.677,235.972 645.245,236.085 645.814,235.274 646.382,236.472 646.951,234.776 647.519,236.212 648.087,237.55 648.656,238.661 649.224,236.556 649.792,233.619 650.361,233.016 650.929,233.542 651.497,234.8 652.066,234.918 652.634,231.296 653.202,232.778 653.771,232.033 654.339,232.522 654.907,234.056 655.476,236.309 656.044,237.715 656.612,236.925 657.181,235.293 657.749,235.464 658.317,233.393 658.886,230.484 659.454,230.866 660.022,230.488 660.591,233.138 661.159,236.447 661.728,234.559 662.296,231.542 662.864,234.029 663.433,236.33 664.001,236.47 664.569,236.588 665.138,236.607 665.706,236.752 666.274,237.939 666.843,236.609 667.411,237.769 667.979,238.849 668.548,239.756 669.116,237.567 669.684,238.664 670.253,239.471 670.821,237.25 671.389,237.095 671.958,239.075 672.526,238.08 673.094,237.914 673.663,237.662 674.231,236.705 674.799,236.606 675.368,235.666 675.936,234.687 676.505,235.662 677.073,233.631 677.641,232.861 678.21,234.222 678.778,232.461 679.346,234.043 679.915,233.256 680.483,234.656 681.051,233.662 681.62,233.784 682.188,234.898 682.756,234.995 683.325,235.147 683.893,232.161 684.461,230.522 685.03,232.1 685.598,231.347 686.166,228.614 686.735,230.338 687.303,232.855 687.871,232.095 688.44,232.303 689.008,232.361 689.577,232.817 690.145,233.264 690.713,233.728 691.282,233.812 691.85,232.919 692.418,231.018 692.987,231.335 693.555,231.936 694.123,233.309 694.692,232.548 695.26,232.889 695.828,232.039 696.397,231.348 696.965,231.613 697.533,231.034 698.102,231.287 698.67,230.669 699.238,230.803 699.807,233.165 700.375,233.365 700.943,232.747 701.512,233.14 702.08,233.435 702.648,235.77 703.217,236.796 703.785,234.782 704.354,237.067 704.922,235.943 705.49,236.073 706.059,234.153 706.627,233.213 707.195,235.481 707.764,234.477 708.332,234.444 708.9,236.323 709.469,237.198 710.037,233.984 710.605,232.983 711.174,233.034 711.742,234.098 712.31,234.048 712.879,235.228 713.447,235.111 714.015,230.993 714.584,232.256 715.152,231.536 715.72,232.874 716.289,233.094 716.857,236.277 717.425,236.433 717.994,236.335 718.562,235.258 719.131,235.394 719.699,236.314 720.267,236.373 720.836,235.163 721.404,235.295 721.972,235.213 722.541,233.952 723.109,233.742 723.677,233.96 724.246,233.871 724.814,232.926 725.382,231.934 725.951,233.241 726.519,234.408 727.087,233.313 727.656,233.182 728.224,231.01 728.792,229.111 729.361,229.728 729.929,231.075 730.497,231.127 731.066,232.334 731.634,233.454 732.203,233.417 732.771,232.29 733.339,232.574 733.908,230.7 734.476,229.751 735.044,228.069 735.613,228.651 736.181,230.226 736.749,230.588 737.318,230.064 737.886,232.444 738.454,231.365 739.023,234.632 739.591,233.649 740.159,233.918 740.728,233.908 741.296,233.91 741.864,233.813 742.433,232.726 743.001,233.935 743.569,233.967 744.138,234.036 744.706,233.264 745.274,233.197 745.843,235.417 746.411,235.366 746.98,235.315 747.548,238.425 748.116,240.167 748.685,239.707 749.253,240.235 749.821,238.782 750.39,239.481 750.958,241.036 751.526,238.29 752.095,237.032 752.663,236.797 753.231,237.54 753.8,234.88 754.368,234.834 754.936,234.604 755.505,234.634 756.073,233.536 756.641,234.665 757.21,234.565 757.778,232.364 758.346,232.453 758.915,232.41 759.483,233.4 760.052,233.24 760.62,233.093 761.188,232.03 761.757,231.178 762.325,229.027 762.893,228.432 763.462,230.683 764.03,230.572 764.598,229.088 765.167,230.41 765.735,232.591 766.303,230.482 766.872,229.42 767.44,228.503 768.008,228.795 768.577,229.047 769.145,231.345 769.713,229.219 770.282,231.521 770.85,232.568 771.418,232.388 771.987,233.372 772.555,231.275 773.123,231.272 773.692,231.232 774.26,230.271 774.829,230.295 775.397,230.562 775.965,232.94 776.534,233.224 777.102,234.254 777.67,232.167 778.239,231.249 778.807,230.359 779.375,229.616 779.944,228.772 780.512,230.121 781.08,231.411 781.649,231.661 782.217,231.607 782.785,230.571 783.354,229.911 783.922,230.176 784.49,232.261 785.059,230.03 785.627,228.274 786.195,230.448 786.764,230.493 787.332,230.662 787.9,229.729 788.469,229.001 789.037,229.159 789.606,229.245 790.174,232.692 790.742,233.853 791.311,233.79 791.879,232.846 792.447,232.859 793.016,232.644 793.584,232.675 794.152,233.597 794.721,231.563 795.289,229.621 795.857,229.978 796.426,229.13 796.994,228.296 797.562,228.577 798.131,229.759 798.699,230.099 799.267,227.371 799.836,225.74 800.404,226.243 800.972,227.602 801.541,229.051 802.109,229.41 802.678,229.768 803.246,230.991 803.814,232.321 804.383,231.36 804.951,233.35 805.519,233.204 806.088,234.985 806.656,234.874 807.224,235.703 807.793,234.268 808.361,234.191 808.929,234.163 809.498,234.002 810.066,235.188 810.634,235.095 811.203,236.89 811.771,237.417 812.339,239.091 812.908,239.578 813.476,237.945 814.044,238.436 814.613,237.085 815.181,235.934 815.749,236.468 816.318,235.223 816.886,231.685 817.455,231.665 818.023,230.756 818.591,231.851 819.16,228.922 819.728,228.083 820.296,227.325 820.865,227.574 821.433,229.036 822.001,228.287 822.57,227.423 823.138,227.787 823.706,228.197 824.275,228.513 824.843,228.717 825.411,231.993 825.98,232.971 826.548,232.944 827.116,231.843 827.685,232.714 828.253,231.52 828.821,232.745 829.39,230.59 829.958,231.49 830.526,233.283 831.095,235.25 831.663,231.987 832.232,229.818 832.8,230.084 833.368,232.256 833.937,233.413 834.505,233.199 835.073,234.086 835.642,234.819 836.21,234.817 836.778,233.581 837.347,233.626 837.915,232.638 838.483,231.666 839.052,232.568 839.62,232.369 840.188,232.429 840.757,232.111 841.325,229.987 841.893,230.036 842.462,227.063 843.03,229.433 843.598,228.497 844.167,228.91 844.735,230.245 845.304,229.421 845.872,227.683 846.44,227.935 847.009,228.239 847.577,228.469 848.145,227.882 848.714,227.061 849.282,225.372 849.85,227.911 850.419,228.283 850.987,227.49 851.555,228.824 852.124,227.997 852.692,228.349 853.26,229.63 853.829,232.959 854.397,235.052 854.965,235.678 855.534,237.459 856.102,235.072 856.67,233.833 857.239,232.573 857.807,233.668 858.375,234.52 858.944,234.341 859.512,234.98 860.081,233.66 860.649,233.663 861.217,231.602 861.786,230.569 862.354,232.915 862.922,233.807 863.491,237.825 864.059,236.235 864.627,235.977 865.196,236.797 865.764,236.39 866.332,234.225 866.901,234.878 867.469,236.717 868.037,234.319 868.606,233.886 869.174,234.303 869.742,236.984 870.311,234.559 870.879,234.344 871.447,231.982 872.016,232.089 872.584,231.874 873.152,230.642 873.721,231.778 874.289,230.627 874.858,230.692 875.426,229.895 875.994,230.951 876.563,228.978 877.131,229.027 877.699,229.25 878.268,230.442 878.836,228.325 879.404,228.561 879.973,227.764 880.541,227.987 881.109,227.28 881.678,226.587 882.246,226.987 882.814,225.187 883.383,224.726 883.951,225.58 884.519,225.011 885.088,228.811 885.656,228.978 886.224,230.057 886.793,229.942 887.361,230.907 887.93,231.074 888.498,230.14 889.066,229.234 889.635,230.309 890.203,230.373 890.771,230.508 891.34,234.841 891.908,232.531 892.476,231.291 893.045,231.261 893.613,232.193 894.181,232.557 894.75,231.585 895.318,233.823 895.886,232.702 896.455,233.54 897.023,231.443 897.591,230.196 898.16,230.343 898.728,228.016 899.296,229.326 899.865,227.637 900.433,230.254 901.001,228.401 901.57,228.633 902.138,227.76 902.707,230.066 903.275,229.417 903.843,228.577 904.412,230.921 904.98,232.214 905.548,232.31 906.117,232.212 906.685,232.392 907.253,232.283 907.822,233.53 908.39,233.629 908.958,234.668 909.527,233.218 910.095,230.948 910.663,230.925 911.232,231.237 911.8,231.384 912.368,233.675 912.937,232.438 913.505,232.302 914.073,233.237 914.642,234.315 915.21,232.058 915.779,230.933 916.347,230.956 916.915,229.85 917.484,231.988 918.052,233.032 918.62,232.953 919.189,232.973 919.757,233.829 920.325,232.518 920.894,233.34 921.462,235.074 922.03,233.979 922.599,233.973 923.167,232.844 923.735,233.386 924.304,234.529 924.872,233.354 925.44,234.13 926.009,235.013 926.577,236.901 927.145,237.792 927.714,236.404 928.282,236.174 928.85,233.941 929.419,232.824 929.987,231.614 930.556,231.627 931.124,231.546 931.692,231.645 932.261,230.627 932.829,229.618 933.397,228.71 933.966,228.823 934.534,228.922 935.102,230.073 935.671,230.233 936.239,229.186 936.807,230.355 937.376,231.354 937.944,231.261 938.512,227.985 939.081,229.145 939.649,229.263 940.217,230.248 940.786,232.128 941.354,232.132 941.922,231.01 942.491,230.229 943.059,231.281 943.627,232.356 944.196,232.374 944.764,232.276 945.333,230.899 945.901,229.112 946.469,229.309 947.038,229.234 947.606,227.484 948.174,228.839 948.743,229.888 949.311,230.136 949.879,231.274 950.448,230.268 951.016,229.443 951.584,230.482 952.153,231.669 952.721,232.854 953.289,232.67 953.858,235.681 954.426,236.623 954.994,238.233 955.563,234.483 956.131,233.167 956.699,232.75 957.268,233.758 957.836,234.323 958.405,234.246 958.973,232.98 959.541,233.908 960.11,233.417 960.678,233.182 961.246,236.218 961.815,235.738 962.383,235.306 962.951,234.773 963.52,234.407 964.088,234.119 964.656,234.904 965.225,234.535 965.793,235.075 966.361,231.701 966.93,231.674 967.498,231.516 968.066,230.393 968.635,231.536 969.203,229.34 969.771,229.222 970.34,227.081 970.908,226.145 971.476,229.32 972.045,228.41 972.613,227.572 973.182,226.615 973.75,226.69 974.318,225.957 974.887,226.127 975.455,225.136 976.023,226.372 976.592,224.523 977.16,225.899 977.728,224.166 978.297,224.64 978.865,223.733 979.433,224.151 980.002,225.458 980.57,224.903 981.138,225.192 981.707,225.721 982.275,226.972 982.843,229.414 983.412,229.68 983.98,230.671 984.548,230.663 985.117,229.763 985.685,231.011 986.253,231.236 986.822,231.441 987.39,232.55 987.959,233.743 988.527,233.78 989.095,235.408 989.664,236.063 990.232,234.838 990.8,234.694 991.369,234.455 991.937,233.078 992.505,234.227 993.074,234.123 993.642,233.786 994.21,232.482 994.779,233.427 995.347,233.115 995.915,236.255 996.484,234.746 997.052,231.461 997.62,230.38 998.189,229.501 998.757,229.352 999.325,228.351 999.894,228.568 1000.46,228.875 1001.03,232.208 1001.6,233.303 1002.17,233.104 1002.74,232.979 1003.3,232.653 1003.87,232.533 1004.44,232.46 1005.01,231.052 1005.58,230.701 1006.15,228.671 1006.71,228.506 1007.28,229.771 1007.85,231.069 1008.42,233.071 1008.99,232.806 1009.56,229.703 1010.12,230.66 1010.69,230.712 1011.26,230.731 1011.83,229.756 1012.4,229.532 1012.97,231.608 1013.53,230.423 1014.1,229.485 1014.67,229.449 1015.24,230.356 1015.81,229.2 1016.38,227.412 1016.94,229.786 1017.51,228.713 1018.08,227.842 1018.65,228.039 1019.22,228.366 1019.79,229.301 1020.35,230.532 1020.92,229.664 1021.49,230.912 1022.06,229.886 1022.63,229.139 1023.2,229.385 1023.76,229.484 1024.33,231.755 1024.9,230.791 1025.47,230.87 1026.04,231.796 1026.61,230.905 1027.17,229.021 1027.74,229.231 1028.31,229.311 1028.88,231.517 1029.45,230.603 1030.02,229.562 1030.58,230.763 1031.15,231.655 1031.72,231.443 1032.29,231.576 1032.86,230.406 1033.43,231.673 1033.99,230.978 1034.56,233.041 1035.13,233.863 1035.7,231.701 1036.27,231.703 1036.84,228.626 1037.4,227.487 1037.97,226.553 1038.54,225.857 1039.11,223.137 1039.68,225.687 1040.25,223.974 1040.81,224.666 1041.38,223.273 1041.95,224.224 1042.52,221.772 1043.09,225.585 1043.66,227.362 1044.22,228.906 1044.79,228.133 1045.36,231.342 1045.93,232.412 1046.5,231.375 1047.07,231.415 1047.63,232.514 1048.2,232.483 1048.77,232.35 1049.34,232.356 1049.91,233.33 1050.48,234.09 1051.05,233.9 1051.61,232.732 1052.18,230.472 1052.75,229.613 1053.32,230.63 1053.89,231.751 1054.46,230.613 1055.02,231.771 1055.59,231.86 1056.16,230.822 1056.73,231.992 1057.3,233.041 1057.87,231.917 1058.43,229.872 1059,232.217 1059.57,230.281 1060.14,230.555 1060.71,232.683 1061.28,231.35 1061.84,231.456 1062.41,231.5 1062.98,230.374 1063.55,231.435 1064.12,229.487 1064.69,227.505 1065.25,228.895 1065.82,230.201 1066.39,230.475 1066.96,234.534 1067.53,233.418 1068.1,232.262 1068.66,231.255 1069.23,231.32 1069.8,231.425 1070.37,231.52 1070.94,232.762 1071.51,233.762 1072.07,234.623 1072.64,234.417 1073.21,231.106 1073.78,230.058 1074.35,229.177 1074.92,229.469 1075.48,230.544 1076.05,229.407 1076.62,230.734 1077.19,228.759 1077.76,230.949 1078.33,229.814 1078.89,230.021 1079.46,230.136 1080.03,232.171 1080.6,233.186 1081.17,234.007 1081.74,232.831 1082.3,232.585 1082.87,235.509 1083.44,234.517 1084.01,233.412 1084.58,229.972 1085.15,231.181 1085.71,232.274 1086.28,232.213 1086.85,233.222 1087.42,233.86 1087.99,234.65 1088.56,232.433 1089.12,231.482 1089.69,230.369 1090.26,231.374 1090.83,231.408 1091.4,231.366 1091.97,229.42 1092.53,228.332 1093.1,229.417 1093.67,230.559 1094.24,230.79 1094.81,231.055 1095.38,233.216 1095.94,234.006 1096.51,233.832 1097.08,232.612 1097.65,232.498 1098.22,230.363 1098.79,229.372 1099.35,229.49 1099.92,230.773 1100.49,229.682 1101.06,228.598 1101.63,228.678 1102.2,226.63 1102.76,228.757 1103.33,229.115 1103.9,230.2 1104.47,230.162 1105.04,231.211 1105.61,231.038 1106.17,229.932 1106.74,228.941 1107.31,229.258 1107.88,228.426 1108.45,227.343 1109.02,228.624 1109.58,229.772 1110.15,231.783 1110.72,231.766 1111.29,231.817 1111.86,231.876 1112.43,231.735 1112.99,231.785 1113.56,232.647 1114.13,232.787 1114.7,233.787 1115.27,233.791 1115.84,232.628 1116.4,232.453 1116.97,233.337 1117.54,231.129 1118.11,230.231 1118.68,229.978 1119.25,232.389 1119.81,232.235 1120.38,232.047 1120.95,230.855 1121.52,230.642 1122.09,230.4 1122.66,230.422 1123.23,230.74 1123.79,230.728 1124.36,232.561 1124.93,234.549 1125.5,235.311 1126.07,237.116 1126.64,237.558 1127.2,236.993 1127.77,234.507 1128.34,235.234 1128.91,236.983 1129.48,235.478 1130.05,236.161 1130.61,236.66 1131.18,237.372 1131.75,236.825 1132.32,237.076 1132.89,235.293 1133.46,233.673 1134.02,234.39 1134.59,235.125 1135.16,233.631 1135.73,233.248 1136.3,231.768 1136.87,232.542 1137.43,231.32 1138,231.048 1138.57,231.948 1139.14,230.662 1139.71,229.55 1140.28,228.472 1140.84,229.308 1141.41,231.338 1141.98,230 1142.55,231.058 1143.12,232.07 1143.69,231.983 1144.25,230.743 1144.82,230.573 1145.39,229.31 1145.96,228.583 1146.53,227.739 1147.1,230.885 1147.66,229.758 1148.23,230.764 1148.8,231.502 1149.37,230.351 1149.94,231.428 1150.51,231.149 1151.07,229.06 1151.64,226.924 1152.21,226.258 1152.78,229.541 1153.35,228.482 1153.92,229.864 1154.48,231.728 1155.05,231.231 1155.62,233.064 1156.19,234.678 1156.76,233.201 1157.33,230.817 1157.89,230.555 1158.46,228.294 1159.03,226.279 1159.6,225.407 1160.17,226.749 1160.74,227.904 1161.3,227.98 1161.87,230.19 1162.44,230.178 1163.01,229.141 1163.58,229.335 1164.15,229.573 1164.71,228.424 1165.28,226.539 1165.85,227.806 1166.42,227.061 1166.99,229.224 1167.56,228.288 1168.12,226.29 1168.69,225.473 1169.26,226.723 1169.83,228.001 1170.4,228.072 1170.97,227.293 1171.53,228.551 1172.1,229.73 1172.67,227.727 1173.24,226.899 1173.81,227.247 1174.38,227.651 1174.94,228.1 1175.51,228.248 1176.08,229.545 1176.65,227.407 1177.22,226.724 1177.79,227.025 1178.35,226.305 1178.92,224.633 1179.49,224.195 1180.06,223.645 1180.63,224.376 1181.2,226.008 1181.76,228.431 1182.33,227.6 1182.9,227.871 1183.47,228.031 1184.04,229.307 1184.61,228.368 1185.17,230.559 1185.74,230.588 1186.31,232.643 1186.88,231.63 1187.45,232.696 1188.02,231.711 1188.58,230.674 1189.15,230.536 1189.72,231.694 1190.29,231.79 1190.86,231.714 1191.43,231.717 1192,229.608 1192.56,229.793 1193.13,229.899 1193.7,230.973 1194.27,231.964 1194.84,232.979 1195.41,232.785 1195.97,231.527 1196.54,231.646 1197.11,232.709 1197.68,232.843 1198.25,231.781 1198.82,232.613 1199.38,234.433 1199.95,234.258 1200.52,231.965 1201.09,230.835 1201.66,229.974 1202.23,227.013 1202.79,227.45 1203.36,225.863 1203.93,226.225 1204.5,226.763 1205.07,227.996 1205.64,230.426 1206.2,232.516 1206.77,232.377 1207.34,232.254 1207.91,234.469 1208.48,234.21 1209.05,233.018 1209.61,233.767 1210.18,233.555 1210.75,232.423 1211.32,232.259 1211.89,232.192 1212.46,231.152 1213.02,230.196 1213.59,234.529 1214.16,234.319 1214.73,232.902 1215.3,232.944 1215.87,233.921 1216.43,233.638 1217,232.466 1217.57,231.523 1218.14,230.504 1218.71,230.5 1219.28,232.608 1219.84,233.656 1220.41,233.388 1220.98,232.318 1221.55,232.304 1222.12,233.487 1222.69,232.421 1223.25,232.2 1223.82,231.236 1224.39,231.079 1224.96,230.008 1225.53,230.012 1226.1,231.223 1226.66,231.248 1227.23,230.286 1227.8,231.391 1228.37,229.337 1228.94,229.389 1229.51,230.668 1230.07,230.66 1230.64,230.808 1231.21,229.852 1231.78,228.845 1232.35,228.012 1232.92,229.226 1233.48,229.477 1234.05,228.43 1234.62,228.59 1235.19,229.654 1235.76,230.739 1236.33,230.772 1236.89,230.735 1237.46,230.791 1238.03,232.756 1238.6,231.772 1239.17,229.514 1239.74,229.608 1240.3,229.576 1240.87,229.595 1241.44,233.9 1242.01,233.563 1242.58,234.346 1243.15,234.236 1243.71,232.973 1244.28,232.871 1244.85,232.57 1245.42,232.438 1245.99,232.322 1246.56,233.399 1247.12,233.26 1247.69,235.026 1248.26,234.76 1248.83,236.472 1249.4,235.154 1249.97,235.676 1250.53,235.19 1251.1,234.838 1251.67,234.633 1252.24,235.274 1252.81,233.64 1253.38,234.226 1253.94,233.982 1254.51,231.768 1255.08,231.959 1255.65,230.711 1256.22,230.58 1256.79,229.518 1257.35,230.525 1257.92,229.604 1258.49,229.687 1259.06,229.736 1259.63,231.856 1260.2,231.544 1260.76,230.214 1261.33,230.26 1261.9,230.247 1262.47,230.126 1263.04,228.14 1263.61,229.589 1264.18,226.655 1264.74,226.031 1265.31,225.26 1265.88,226.766 1266.45,225.987 1267.02,227.285 1267.59,227.577 1268.15,226.817 1268.72,227.111 1269.29,226.33 1269.86,226.747 1270.43,229.191 1271,228.501 1271.56,230.799 1272.13,229.928 1272.7,230.102 1273.27,229.828 1273.84,228.778 1274.41,229.877 1274.97,230.761 1275.54,231.007 1276.11,229.004 1276.68,229.157 1277.25,228.22 1277.82,229.51 1278.38,229.584 1278.95,232.773 1279.52,232.885 1280.09,236.955 1280.66,238.678 1281.23,238.364 1281.79,237.043 1282.36,237.549 1282.93,234.947 1283.5,233.533 1284.07,235.267 1284.64,233.989 1285.2,235.074 1285.77,234.831 1286.34,233.565 1286.91,232.483 1287.48,232.415 1288.05,233.128 1288.61,234.976 1289.18,232.483 1289.75,234.548 1290.32,233.02 1290.89,231.863 1291.46,231.676 1292.02,231.485 1292.59,229.136 1293.16,229.203 1293.73,229.343 1294.3,228.499 1294.87,230.369 1295.43,232.606 1296,232.586 1296.57,232.253 1297.14,231.909 1297.71,232.828 1298.28,232.699 1298.84,234.661 1299.41,233.418 1299.98,233.273 1300.55,233.043 1301.12,232.562 1301.69,233.47 1302.25,232.068 1302.82,231.044 1303.39,229.913 1303.96,228.851 1304.53,227.915 1305.1,227.809 1305.66,227.88 1306.23,229.178 1306.8,229.26 1307.37,229.489 1307.94,230.625 1308.51,230.399 1309.07,230.368 1309.64,228.114 1310.21,228.229 1310.78,228.524 1311.35,228.417 1311.92,229.715 1312.48,230.563 1313.05,229.369 1313.62,228.393 1314.19,227.574 1314.76,229.849 1315.33,230.986 1315.89,232.061 1316.46,232.044 1317.03,229.768 1317.6,230.896 1318.17,227.817 1318.74,226.911 1319.3,225.964 1319.87,226.242 1320.44,226.749 1321.01,227.054 1321.58,227.26 1322.15,227.544 1322.71,227.861 1323.28,227.038 1323.85,228.348 1324.42,227.316 1324.99,226.464 1325.56,227.99 1326.12,226.14 1326.69,226.499 1327.26,226.756 1327.83,228.333 1328.4,230.6 1328.97,231.536 1329.53,230.395 1330.1,230.622 1330.67,228.634 1331.24,229.928 1331.81,231.02 1332.38,227.863 1332.94,224.864 1333.51,224.248 1334.08,225.729 1334.65,226.118 1335.22,226.451 1335.79,228.082 1336.36,229.079 1336.92,230.287 1337.49,230.594 1338.06,231.643 1338.63,230.661 1339.2,227.329 1339.77,229.649 1340.33,229.628 1340.9,230.77 1341.47,228.903 1342.04,229.18 1342.61,229.459 1343.18,228.604 1343.74,230.952 1344.31,230.726 1344.88,230.826 1345.45,230.971 1346.02,232.889 1346.59,231.62 1347.15,233.637 1347.72,233.662 1348.29,234.653 1348.86,233.471 1349.43,233.477 1350,233.28 1350.56,233.242 1351.13,230.044 1351.7,230.062 1352.27,229.165 1352.84,230.268 1353.41,233.353 1353.97,234.139 1354.54,231.813 1355.11,232.908 1355.68,231.868 1356.25,230.847 1356.82,230.92 1357.38,229.741 1357.95,231.684 1358.52,230.841 1359.09,232.086 1359.66,231.995 1360.23,231.622 1360.79,230.527 1361.36,230.566 1361.93,233.949 1362.5,233.711 1363.07,233.427 1363.64,233.375 1364.2,234.077 1364.77,233.941 1365.34,233.827 1365.91,232.516 1366.48,232.488 1367.05,229.063 1367.61,228.272 1368.18,230.47 1368.75,230.443 1369.32,230.495 1369.89,230.463 1370.46,228.479 1371.02,228.851 1371.59,230.126 1372.16,231.256 1372.73,233.294 1373.3,233.153 1373.87,232.983 1374.43,232.892 1375,232.72 1375.57,232.775 1376.14,232.795 1376.71,233.816 1377.28,235.548 1377.84,235.269 1378.41,233.659 1378.98,233.321 1379.55,233.105 1380.12,232.647 1380.69,230.437 1381.25,230.393 1381.82,230.496 1382.39,230.336 1382.96,232.596 1383.53,234.357 1384.1,235.141 1384.66,235.715 1385.23,235.571 1385.8,237.167 1386.37,237.486 1386.94,234.761 1387.51,233.341 1388.07,234.008 1388.64,234.697 1389.21,234.342 1389.78,233.889 1390.35,232.656 1390.92,232.554 1391.48,231.597 1392.05,233.414 1392.62,232.224 1393.19,232.119 1393.76,230.867 1394.33,230.951 1394.89,231.852 1395.46,229.597 1396.03,227.73 1396.6,227.797 1397.17,224.93 1397.74,224.228 1398.3,226.368 1398.87,228.618 1399.44,228.946 1400.01,229.247 1400.58,229.132 1401.15,228.337 1401.71,227.54 1402.28,226.9 1402.85,227.047 1403.42,224.136 1403.99,225.488 1404.56,227.786 1405.13,226.849 1405.69,226.172 1406.26,226.538 1406.83,227.85 1407.4,227.9 1407.97,231.184 1408.54,230.433 1409.1,231.71 1409.67,232.537 1410.24,231.225 1410.81,233.35 1411.38,232.142 1411.95,231.188 1412.51,232.105 1413.08,231.071 1413.65,232.012 1414.22,229.576 1414.79,232.372 1415.36,231.154 1415.92,227.936 1416.49,229.415 1417.06,230.537 1417.63,229.323 1418.2,231.289 1418.77,230.254 1419.33,228.952 1419.9,229.102 1420.47,228.256 1421.04,225.28 1421.61,224.608 1422.18,225.093 1422.74,226.677 1423.31,225.976 1423.88,227.365 1424.45,228.556 1425.02,229.688 1425.59,228.701 1426.15,229.187 1426.72,228.27 1427.29,230.49 1427.86,231.642 1428.43,231.686 1429,232.775 1429.56,231.687 1430.13,230.848 1430.7,228.946 1431.27,230.308 1431.84,230.352 1432.41,230.227 1432.97,231.327 1433.54,229.2 1434.11,228.526 1434.68,226.635 1435.25,223.787 1435.82,226.195 1436.38,225.553 1436.95,224.878 1437.52,227.405 1438.09,227.632 1438.66,228.827 1439.23,230.167 1439.79,230.381 1440.36,229.357 1440.93,230.474 1441.5,231.783 1442.07,230.82 1442.64,231.806 1443.2,232.865 1443.77,232.596 1444.34,233.703 1444.91,234.634 1445.48,234.612 1446.05,234.532 1446.61,235.405 1447.18,235.403 1447.75,234.231 1448.32,231.107 1448.89,231.394 1449.46,232.578 1450.02,230.634 1450.59,229.569 1451.16,231.583 1451.73,232.549 1452.3,232.414 1452.87,231.485 1453.43,233.589 1454,233.616 1454.57,232.363 1455.14,233.254 1455.71,232.047 1456.28,230.952 1456.84,231.955 1457.41,232.764 1457.98,233.516 1458.55,232.474 1459.12,233.29 1459.69,229.782 1460.25,229.886 1460.82,230.099 1461.39,230.166 1461.96,231.331 1462.53,231.449 1463.1,231.383 1463.66,232.349 1464.23,232.302 1464.8,231.049 1465.37,230.931 1465.94,230.817 1466.51,230.846 1467.07,229.995 1467.64,228.139 1468.21,228.048 1468.78,229.19 1469.35,231.312 1469.92,231.53 1470.48,232.431 1471.05,234.409 1471.62,234.153 1472.19,230.765 1472.76,227.687 1473.33,226.81 1473.89,228.093 1474.46,226.543 1475.03,227.903 1475.6,229.254 1476.17,229.318 1476.74,228.346 1477.31,227.574 1477.87,227.993 1478.44,229.197 1479.01,228.193 1479.58,230.359 1480.15,229.264 1480.72,230.305 1481.28,230.373 1481.85,229.376 1482.42,230.618 1482.99,229.609 1483.56,230.813 1484.13,232.929 1484.69,233.809 1485.26,232.914 1485.83,233.7 1486.4,231.506 1486.97,233.41 1487.54,236.356 1488.1,236.048 1488.67,236.672 1489.24,236.092 1489.81,236.6 1490.38,236.026 1490.95,234.645 1491.51,232.467 1492.08,234.345 1492.65,233.029 1493.22,232.916 1493.79,234.747 1494.36,233.406 1494.92,233.27 1495.49,230.992 1496.06,229.917 1496.63,232.617 1497.2,231.369 1497.77,231.047 1498.33,230.784 1498.9,230.828 1499.47,229.756 1500.04,229.758 1500.61,230.999 1501.18,230.87 1501.74,232.748 1502.31,232.597 1502.88,232.228 1503.45,231.937 1504.02,233.937 1504.59,233.466 1505.15,236.346 1505.72,236.646 1506.29,233.028 1506.86,232.531 1507.43,233.371 1508,233.085 1508.56,232.74 1509.13,229.392 1509.7,230.406 1510.27,231.438 1510.84,231.22 1511.41,231.151 1511.97,230.063 1512.54,228.942 1513.11,228.736 1513.68,227.467 1514.25,225.494 1514.82,227.981 1515.38,228.212 1515.95,227.29 1516.52,229.406 1517.09,229.518 1517.66,228.466 1518.23,226.365 1518.79,227.532 1519.36,228.793 1519.93,228.717 1520.5,227.712 1521.07,224.907 1521.64,224.247 1522.2,224.481 1522.77,225.871 1523.34,226.353 1523.91,227.641 1524.48,225.722 1525.05,227.036 1525.61,227.31 1526.18,225.432 1526.75,222.757 1527.32,224.161 1527.89,221.611 1528.46,223.249 1529.02,223.048 1529.59,224.616 1530.16,223.106 1530.73,224.837 1531.3,225.424 1531.87,224.973 1532.43,226.595 1533,226.94 1533.57,228.18 1534.14,229.713 1534.71,228.886 1535.28,230.113 1535.84,230.338 1536.41,229.454 1536.98,228.608 1537.55,228.987 1538.12,227.968 1538.69,227.284 1539.25,228.646 1539.82,226.833 1540.39,227.41 1540.96,226.963 1541.53,228.613 1542.1,228.824 1542.66,230.204 1543.23,230.626 1543.8,235.071 1544.37,236.008 1544.94,236.762 1545.51,234.557 1546.08,234.282 1546.64,237.238 1547.21,236.884 1547.78,234.523 1548.35,233.979 1548.92,234.02 1549.49,233.934 1550.05,236.622 1550.62,238.283 1551.19,237.832 1551.76,237.334 1552.33,235.806 1552.9,234.526 1553.46,233.177 1554.03,230.009 1554.6,230.335 1555.17,230.349 1555.74,229.283 1556.31,229.293 1556.87,227.385 1557.44,226.607 1558.01,228.945 1558.58,228.901 1559.15,231.065 1559.72,233.382 1560.28,237.25 1560.85,236.878 1561.42,236.424 1561.99,237.119 1562.56,237.828 1563.13,238.339 1563.69,236.747 1564.26,235.582 1564.83,234.021 1565.4,232.597 1565.97,234.684 1566.54,234.273 1567.1,233.954 1567.67,234.558 1568.24,236.148 1568.81,235.603 1569.38,234.149 1569.95,232.723 1570.51,234.307 1571.08,232.856 1571.65,232.709 1572.22,234.602 1572.79,236.353 1573.36,232.946 1573.92,234.843 1574.49,234.594 1575.06,234.255 1575.63,235.088 1576.2,233.64 1576.77,232.409 1577.33,232.123 1577.9,231.947 1578.47,231.897 1579.04,230.787 1579.61,229.591 1580.18,229.449 1580.74,228.363 1581.31,227.416 1581.88,227.512 1582.45,228.566 1583.02,228.585 1583.59,227.815 1584.15,227.956 1584.72,228.065 1585.29,228.198 1585.86,228.297 1586.43,228.509 1587,226.631 1587.56,226.874 1588.13,228.13 1588.7,228.368 1589.27,228.427 1589.84,225.653 1590.41,225.826 1590.97,225.049 1591.54,226.691 1592.11,227.021 1592.68,227.152 1593.25,227.419 1593.82,227.468 1594.38,226.652 1594.95,226.927 1595.52,229.036 1596.09,229.118 1596.66,230.226 1597.23,232.143 1597.79,232.091 1598.36,230.949 1598.93,231.029 1599.5,231 1600.07,231.066 1600.64,231.045 1601.2,230.966 1601.77,231.008 1602.34,231.746 1602.91,231.775 1603.48,232.667 1604.05,233.579 1604.61,232.503 1605.18,231.31 1605.75,232.14 1606.32,230.092 1606.89,230.199 1607.46,230.335 1608.02,230.339 1608.59,232.368 1609.16,233.302 1609.73,231.088 1610.3,229.882 1610.87,230.884 1611.43,231.914 1612,230.847 1612.57,231.002 1613.14,231.893 1613.71,232.734 1614.28,232.682 1614.84,232.608 1615.41,232.263 1615.98,233.218 1616.55,233.026 1617.12,232.754 1617.69,232.548 1618.26,234.604 1618.82,235.139 1619.39,234.67 1619.96,234.444 1620.53,231.984 1621.1,230.564 1621.67,228.468 1622.23,228.615 1622.8,228.714 1623.37,227.848 1623.94,228.177 1624.51,228.49 1625.08,230.784 1625.64,230.804 1626.21,231.955 1626.78,230.929 1627.35,229.725 1627.92,230.057 1628.49,228.975 1629.05,228.911 1629.62,228.897 1630.19,229.902 1630.76,228.989 1631.33,229.078 1631.9,229.406 1632.46,230.214 1633.03,229.237 1633.6,228.985 1634.17,229.093 1634.74,230.139 1635.31,231.181 1635.87,232.226 1636.44,232.181 1637.01,234.293 1637.58,233.096 1638.15,232 1638.72,230.91 1639.28,230.757 1639.85,231.635 1640.42,232.5 1640.99,230.249 1641.56,230.409 1642.13,232.428 1642.69,232.347 1643.26,234.26 1643.83,230.897 1644.4,233.866 1644.97,228.613 1645.54,229.783 1646.1,228.88 1646.67,229.113 1647.24,230.175 1647.81,230.238 1648.38,231.195 1648.95,231.046 1649.51,231.994 1650.08,232.052 1650.65,232.929 1651.22,231.596 1651.79,233.669 1652.36,233.276 1652.92,230.995 1653.49,229.931 1654.06,228.936 1654.63,229.011 1655.2,229.051 1655.77,229.279 1656.33,229.295 1656.9,229.193 1657.47,229.511 1658.04,230.718 1658.61,231.613 1659.18,230.412 1659.74,231.256 1660.31,231.019 1660.88,228.964 1661.45,228.943 1662.02,229.974 1662.59,231.101 1663.15,228.986 1663.72,231.052 1664.29,231.147 1664.86,229.091 1665.43,230.176 1666,231.069 1666.56,227.857 1667.13,228.051 1667.7,229.147 1668.27,229.391 1668.84,228.443 1669.41,228.556 1669.97,227.576 1670.54,226.796 1671.11,225.036 1671.68,227.555 1672.25,228.784 1672.82,230.961 1673.38,229.955 1673.95,226.792 1674.52,226.78 1675.09,226.944 1675.66,229.378 1676.23,226.703 1676.79,224.746 1677.36,226.208 1677.93,226.603 1678.5,226.874 1679.07,228.223 1679.64,226.671 1680.2,228.467 1680.77,226.703 1681.34,227.332 1681.91,229.52 1682.48,230.9 1683.05,232.06 1683.61,229.909 1684.18,230.111 1684.75,229.244 1685.32,230.444 1685.89,229.474 1686.46,230.733 1687.02,232.958 1687.59,233.02 1688.16,234.967 1688.73,233.748 1689.3,234.786 1689.87,235.32 1690.44,235.134 1691,234.886 1691.57,232.531 1692.14,232.348 1692.71,232.141 1693.28,231.301 1693.85,232.459 1694.41,231.469 1694.98,230.509 1695.55,229.547 1696.12,231.792 1696.69,230.707 1697.26,231.571 1697.82,231.355 1698.39,232.306 1698.96,235.186 1699.53,234.659 1700.1,236.558 1700.67,237.195 1701.23,236.829 1701.8,236.351 1702.37,235.852 1702.94,235.618 1703.51,233.178 1704.08,232.927 1704.64,233.914 1705.21,232.451 1705.78,233.442 1706.35,232.109 1706.92,232.176 1707.49,230.032 1708.05,232.082 1708.62,233.097 1709.19,233.771 1709.76,233.505 1710.33,233.213 1710.9,233.054 1711.46,233.843 1712.03,233.739 1712.6,235.174 1713.17,234.761 1713.74,235.585 1714.31,235.165 1714.87,235.857 1715.44,235.303 1716.01,235.005 1716.58,232.46 1717.15,232.137 1717.72,230.969 1718.28,231.889 1718.85,230.851 1719.42,232.739 1719.99,229.347 1720.56,228.282 1721.13,232.451 1721.69,232.328 1722.26,232.156 1722.83,232.212 1723.4,232.181 1723.97,231.823 1724.54,231.605 1725.1,230.502 1725.67,229.332 1726.24,231.383 1726.81,231.376 1727.38,229.354 1727.95,229.312 1728.51,229.38 1729.08,228.352 1729.65,229.541 1730.22,226.481 1730.79,227.876 1731.36,227.083 1731.92,227.235 1732.49,227.528 1733.06,225.42 1733.63,222.726 1734.2,223.222 1734.77,224.621 1735.33,225.105 1735.9,225.518 1736.47,223.743 1737.04,225.152 1737.61,224.484 1738.18,224.9 1738.74,225.346 1739.31,226.894 1739.88,228.123 1740.45,230.297 1741.02,229.261 1741.59,228.458 1742.15,230.009 1742.72,229.232 1743.29,230.275 1743.86,229.407 1744.43,228.388 1745,228.68 1745.56,228.666 1746.13,229.893 1746.7,230.81 1747.27,229.686 1747.84,227.644 1748.41,227.792 1748.97,227.128 1749.54,229.406 1750.11,230.485 1750.68,230.485 1751.25,229.456 1751.82,229.461 1752.38,229.481 1752.95,227.627 1753.52,228.007 1754.09,230.431 1754.66,231.252 1755.23,231.133 1755.79,232.179 1756.36,232.141 1756.93,233.12 1757.5,233.972 1758.07,234.647 1758.64,234.539 1759.21,234.18 1759.77,235.114 1760.34,236.813 1760.91,236.643 1761.48,238.304 1762.05,235.57 1762.62,236.129 1763.18,235.707 1763.75,234.194 1764.32,233.747 1764.89,234.599 1765.46,233.213 1766.03,233.766 1766.59,233.413 1767.16,230.412 1767.73,230.431 1768.3,231.315 1768.87,232.115 1769.44,234.022 1770,231.61 1770.57,230.497 1771.14,229.487 1771.71,228.656 1772.28,228.77 1772.85,226.773 1773.41,227.151 1773.98,229.505 1774.55,228.417 1775.12,227.623 1775.69,227.81 1776.26,227.088 1776.82,227.177 1777.39,225.212 1777.96,224.504 1778.53,225.141 1779.1,225.465 1779.67,224.876 1780.23,223.296 1780.8,223.988 1781.37,226.68 1781.94,226.908 1782.51,228.287 1783.08,226.612 1783.64,226.976 1784.21,228.296 1784.78,230.689 1785.35,229.765 1785.92,229.774 1786.49,227.974 1787.05,229.331 1787.62,229.518 1788.19,232.875 1788.76,235.774 1789.33,235.296 1789.9,236.267 1790.46,236.788 1791.03,238.58 1791.6,239.993 1792.17,237.353 1792.74,238.037 1793.31,237.401 1793.87,237.83 1794.44,235.348 1795.01,233.701 1795.58,232.492 1796.15,237.547 1796.72,235.772 1797.28,235.579 1797.85,235.398 1798.42,234.087 1798.99,232.844 1799.56,231.582 1800.13,229.346 1800.69,230.298 1801.26,229.266 1801.83,231.331 1802.4,231.398 1802.97,230.285 1803.54,230.401 1804.1,231.289 1804.67,230.202 1805.24,230.263 1805.81,229.112 1806.38,228.185 1806.95,228.188 1807.51,227.386 1808.08,227.466 1808.65,226.647 1809.22,228.915 1809.79,226.952 1810.36,226.296 1810.92,225.677 1811.49,226.259 1812.06,226.655 1812.63,227.007 1813.2,228.414 1813.77,228.816 1814.33,228.002 1814.9,227.252 1815.47,227.486 1816.04,227.695 1816.61,231.01 1817.18,228.284 1817.74,229.282 1818.31,230.348 1818.88,230.251 1819.45,229.353 1820.02,230.431 1820.59,230.62 1821.15,230.529 1821.72,229.544 1822.29,228.732 1822.86,227.663 1823.43,228.756 1824,227.856 1824.56,227.113 1825.13,228.389 1825.7,228.604 1826.27,229.792 1826.84,228.78 1827.41,228.833 1827.97,231.127 1828.54,233.112 1829.11,234.057 1829.68,233.776 1830.25,232.41 1830.82,231.271 1831.39,232.395 1831.95,230.302 1832.52,229.474 1833.09,230.79 1833.66,230.056 1834.23,228.081 1834.8,228.958 1835.36,230.2 1835.93,229.996 1836.5,231.118 1837.07,229.132 1837.64,231.252 1838.21,230.18 1838.77,236.491 1839.34,235.042 1839.91,233.608 1840.48,231.385 1841.05,233.537 1841.62,235.709 1842.18,235.394 1842.75,234.019 1843.32,234.843 1843.89,236.639 1844.46,238.023 1845.03,235.545 1845.59,236.255 1846.16,234.71 1846.73,233.348 1847.3,232.96 1847.87,231.57 1848.44,229.559 1849,229.691 1849.57,229.537 1850.14,232.718 1850.71,231.476 1851.28,232.588 1851.85,233.48 1852.41,235.366 1852.98,233.833 1853.55,233.419 1854.12,233.135 1854.69,232.765 1855.26,233.635 1855.82,233.456 1856.39,232.183 1856.96,231.956 1857.53,229.827 1858.1,229.776 1858.67,229.897 1859.23,229.005 1859.8,229.153 1860.37,229.304 1860.94,230.149 1861.51,229.07 1862.08,228.928 1862.64,230.211 1863.21,227.235 1863.78,225.402 1864.35,225.819 1864.92,227.095 1865.49,227.254 1866.05,224.218 1866.62,224.813 1867.19,225.17 1867.76,225.527 1868.33,226.086 1868.9,224.492 1869.46,223.844 1870.03,225.246 1870.6,225.776 1871.17,227.415 1871.74,226.812 1872.31,228.08 1872.87,233.252 1873.44,234.283 1874.01,232.786 1874.58,232.807 1875.15,231.599 1875.72,230.557 1876.28,230.584 1876.85,230.798 1877.42,230.981 1877.99,230.849 1878.56,230.937 1879.13,231.265 1879.69,231.124 1880.26,232.384 1880.83,232.304 1881.4,232.298 1881.97,233.558 1882.54,232.385 1883.1,232.379 1883.67,231.346 1884.24,231.314 1884.81,230.315 1885.38,229.464 1885.95,229.487 1886.51,229.547 1887.08,229.709 1887.65,230.967 1888.22,231.034 1888.79,228.912 1889.36,225.926 1889.92,227.203 1890.49,227.54 1891.06,226.822 1891.63,226.045 1892.2,228.402 1892.77,228.579 1893.33,225.864 1893.9,226.264 1894.47,228.739 1895.04,228.048 1895.61,226.147 1896.18,228.684 1896.74,228.718 1897.31,230.872 1897.88,229.857 1898.45,228.581 1899.02,226.619 1899.59,227.004 1900.16,227.445 1900.72,229.882 1901.29,228.176 1901.86,228.391 1902.43,228.682 1903,229.038 1903.57,228.347 1904.13,228.666 1904.7,229.002 1905.27,229.549 1905.84,231.922 1906.41,230.757 1906.98,228.682 1907.54,227.738 1908.11,227.905 1908.68,230.421 1909.25,230.856 1909.82,232.948 1910.39,230.801 1910.95,231.745 1911.52,229.742 1912.09,231.068 1912.66,230.819 1913.23,229.779 1913.8,231.992 1914.36,231.998 1914.93,232.892 1915.5,232.668 1916.07,233.638 1916.64,234.351 1917.21,232.236 1917.77,232.263 1918.34,233.498 1918.91,234.655 1919.48,236.947 1920.05,237.631 1920.62,236.068 1921.18,233.541 1921.75,233.602 1922.32,234.74 1922.89,235.969 1923.46,233.632 1924.03,234.426 1924.59,234.427 1925.16,234.038 1925.73,234.97 1926.3,235.589 1926.87,234.186 1927.44,233.889 1928,232.652 1928.57,231.512 1929.14,233.621 1929.71,235.411 1930.28,232.842 1930.85,233.774 1931.41,233.518 1931.98,233.235 1932.55,238.177 1933.12,237.638 1933.69,236.175 1934.26,234.782 1934.82,236.565 1935.39,233.098 1935.96,236.009 1936.53,234.52 1937.1,232.23 1937.67,229.906 1938.23,229.748 1938.8,229.691 1939.37,228.467 1939.94,228.615 1940.51,227.621 1941.08,228.861 1941.64,227.85 1942.21,228.22 1942.78,229.31 1943.35,230.317 1943.92,229.261 1944.49,227.169 1945.05,227.339 1945.62,229.796 1946.19,229.858 1946.76,231.903 1947.33,232.625 1947.9,232.374 1948.46,233.32 1949.03,231.996 1949.6,231.954 1950.17,233.012 1950.74,232.731 1951.31,231.434 1951.87,232.349 1952.44,231.353 1953.01,234.304 1953.58,233.105 1954.15,233.655 1954.72,236.296 1955.28,234.878 1955.85,234.647 1956.42,235.352 1956.99,235.052 1957.56,232.569 1958.13,232.22 1958.69,232.075 1959.26,233.151 1959.83,232.883 1960.4,232.678 1960.97,231.387 1961.54,230.445 1962.1,228.402 1962.67,230.604 1963.24,231.606 1963.81,230.329 1964.38,229.319 1964.95,230.373 1965.51,230.397 1966.08,231.154 1966.65,230.192 1967.22,230.07 1967.79,233.099 1968.36,234.169 1968.92,230.542 1969.49,230.485 1970.06,230.664 1970.63,229.438 1971.2,228.296 1971.77,228.259 1972.34,228.297 1972.9,228.5 1973.47,227.506 1974.04,230.706 1974.61,229.594 1975.18,231.635 1975.75,231.522 1976.31,230.189 1976.88,231.064 1977.45,227.851 1978.02,228.765 1978.59,225.61 1979.16,224.867 1979.72,225.021 1980.29,224.337 1980.86,223.671 1981.43,224.145 1982,224.446 1982.57,227.809 1983.13,225.897 1983.7,225.239 1984.27,224.539 1984.84,223.839 1985.41,225.323 1985.98,224.728 1986.54,225.033 1987.11,226.474 1987.68,223.827 1988.25,222.294 1988.82,222.903 1989.39,225.387 1989.95,225.738 1990.52,227.279 1991.09,227.547 1991.66,229.022 1992.23,233.201 1992.8,235.226 1993.36,235.26 1993.93,236.994 1994.5,235.658 1995.07,234.365 1995.64,235.256 1996.21,235.073 1996.77,234.892 1997.34,234.437 1997.91,234.118 1998.48,232.802 1999.05,231.559 1999.62,232.321 2000.18,231.193 2000.75,230.139 2001.32,231.35 2001.89,232.502 2002.46,229.15 2003.03,228.069 2003.59,228.314 2004.16,228.524 2004.73,226.679 2005.3,225.075 2005.87,227.624 2006.44,227.885 2007,227.146 2007.57,229.602 2008.14,231.668 2008.71,230.594 2009.28,231.496 2009.85,232.774 2010.41,232.631 2010.98,233.436 2011.55,232.065 2012.12,229.847 2012.69,228.915 2013.26,230.23 2013.82,233.24 2014.39,232.073 2014.96,233.986 2015.53,236.048 2016.1,233.689 2016.67,232.184 2017.23,231.024 2017.8,228.969 2018.37,228.929 2018.94,226.952 2019.51,227.076 2020.08,227.191 2020.64,225.481 2021.21,226.881 2021.78,225.976 2022.35,225.029 2022.92,226.311 2023.49,227.639 2024.05,227.971 2024.62,228.213 2025.19,228.422 2025.76,228.801 2026.33,229.117 2026.9,230.397 2027.46,232.666 2028.03,232.599 2028.6,232.353 2029.17,231.382 2029.74,231.553 2030.31,231.752 2030.87,232.839 2031.44,232.641 2032.01,232.361 2032.58,230.358 2033.15,228.493 2033.72,228.807 2034.28,229.991 2034.85,229.054 2035.42,229.158 2035.99,230.297 2036.56,230.34 2037.13,232.559 2037.69,233.653 2038.26,236.401 2038.83,236.987 2039.4,237.509 2039.97,236.27 2040.54,233.821 2041.11,233.759 2041.67,231.4 2042.24,232.464 2042.81,231.457 2043.38,232.43 2043.95,234.526 2044.52,233.427 2045.08,236.272 2045.65,236.703 2046.22,235.497 2046.79,234.039 2047.36,234.824 2047.93,234.618 2048.49,235.339 2049.06,235.149 2049.63,231.745 2050.2,229.754 2050.77,231.882 2051.34,234.91 2051.9,234.502 2052.47,234.133 2053.04,230.53 2053.61,229.577 2054.18,230.894 2054.75,231.8 2055.31,233.778 2055.88,233.716 2056.45,231.566 2057.02,233.453 2057.59,234.984 2058.16,234.583 2058.72,234.421 2059.29,231.844 2059.86,231.63 2060.43,233.447 2061,234.173 2061.57,232.823 2062.13,233.706 2062.7,234.439 2063.27,236.281 2063.84,235.798 2064.41,236.218 2064.98,236.571 2065.54,237.195 2066.11,235.4 2066.68,234.038 2067.25,232.733 2067.82,231.595 2068.39,232.774 2068.95,232.751 2069.52,232.411 2070.09,232.997 2070.66,230.621 2071.23,229.28 2071.8,226.111 2072.36,227.359 2072.93,227.449 2073.5,228.405 2074.07,229.391 2074.64,229.504 2075.21,230.306 2075.77,230.33 2076.34,230.08 2076.91,229.829 2077.48,227.978 2078.05,228.09 2078.62,231.462 2079.18,230.255 2079.75,229.329 2080.32,228.293 2080.89,227.26 2081.46,226.263 2082.03,225.579 2082.59,225.825 2083.16,225.15 2083.73,224.574 2084.3,223.877 2084.87,224.076 2085.44,223.519 2086,219.895 2086.57,223.61 2087.14,224.089 2087.71,223.488 2088.28,223.029 2088.85,224.52 2089.41,226.306 2089.98,227.649 2090.55,229.154 2091.12,230.4 2091.69,230.463 2092.26,229.572 2092.82,230.648 2093.39,230.657 2093.96,230.82 2094.53,230.915 2095.1,231.856 2095.67,231.748 2096.23,231.699 2096.8,232.8 2097.37,234.714 2097.94,235.354 2098.51,235.028 2099.08,235.819 2099.64,234.628 2100.21,236.275 2100.78,235.933 2101.35,234.537 2101.92,234.132 2102.49,230.803 2103.05,227.822 2103.62,228.813 2104.19,228.876 2104.76,227.944 2105.33,228.968 2105.9,229.952 2106.46,229.926 2107.03,228.167 2107.6,228.397 2108.17,229.444 2108.74,229.365 2109.31,230.394 2109.87,229.249 2110.44,228.391 2111.01,227.377 2111.58,229.539 2112.15,230.967 2112.72,230.811 2113.29,230.783 2113.85,229.739 2114.42,230.59 2114.99,231.511 2115.56,232.432 2116.13,231.283 2116.7,230.43 2117.26,229.366 2117.83,229.405 2118.4,231.671 2118.97,231.399 2119.54,232.347 2120.11,231.241 2120.67,227.904 2121.24,230.228 2121.81,231.172 2122.38,230.988 2122.95,231.027 2123.52,233.077 2124.08,229.908 2124.65,230.167 2125.22,232.371 2125.79,232.151 2126.36,232.342 2126.93,231.397 2127.49,230.54 2128.06,231.639 2128.63,231.519 2129.2,232.41 2129.77,231.052 2130.34,230.932 2130.9,233.021 2131.47,229.821 2132.04,228.718 2132.61,228.833 2133.18,229.966 2133.75,229.073 2134.31,229.447 2134.88,229.769 2135.45,229.736 2136.02,228.88 2136.59,229.139 2137.16,229.471 2137.72,229.474 2138.29,229.529 2138.86,228.598 2139.43,225.73 2140,227.091 2140.57,227.308 2141.13,229.604 2141.7,228.665 2142.27,228.846 2142.84,230.007 2143.41,230.025 2143.98,230.261 2144.54,230.414 2145.11,227.384 2145.68,230.955 2146.25,231.979 2146.82,232.888 2147.39,232.596 2147.95,233.534 2148.52,232.371 2149.09,231.258 2149.66,230.139 2150.23,231.198 2150.8,232.242 2151.36,231.105 2151.93,230.204 2152.5,231.132 2153.07,230.314 2153.64,229.519 2154.21,230.68 2154.77,231.521 2155.34,233.324 2155.91,234.228 2156.48,233.005 2157.05,231.821 2157.62,232.824 2158.18,233.59 2158.75,232.575 2159.32,234.557 2159.89,233.296 \"/>\n<path clip-path=\"url(#clip760)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip760)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip760)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip760)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip760)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip760)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.026 ± 0.021\n  with uncertainty of ± 0.0018799260918001771\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01141 ± (0.00221871, 0.00236215) (MC)\n  95% confidence interval: [-4.01586, -4.00684]) (MC)\n  linear error propagation: -4.01159 ± 0.00228078\n  |δ_y| = |0.00105028| (≤ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.011414081270581, val_l = 0.004450693493045499, val_u = 0.004576155790546821)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip790\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip790)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip791\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip790)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip792\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip790)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1151.03 2211.02,1151.03 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,996.656 2211.02,996.656 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,842.281 2211.02,842.281 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,687.905 2211.02,687.905 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,533.529 2211.02,533.529 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,379.153 2211.02,379.153 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,224.778 2211.02,224.778 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1151.03 365.751,1151.03 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,996.656 365.751,996.656 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,842.281 365.751,842.281 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,687.905 365.751,687.905 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,533.529 365.751,533.529 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,379.153 365.751,379.153 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,224.778 365.751,224.778 \"/>\n<path clip-path=\"url(#clip790)\" d=\"M298.909 1136.83 Q295.298 1136.83 293.469 1140.4 Q291.664 1143.94 291.664 1151.07 Q291.664 1158.17 293.469 1161.74 Q295.298 1165.28 298.909 1165.28 Q302.543 1165.28 304.349 1161.74 Q306.177 1158.17 306.177 1151.07 Q306.177 1143.94 304.349 1140.4 Q302.543 1136.83 298.909 1136.83 M298.909 1133.13 Q304.719 1133.13 307.775 1137.73 Q310.853 1142.32 310.853 1151.07 Q310.853 1159.79 307.775 1164.4 Q304.719 1168.98 298.909 1168.98 Q293.099 1168.98 290.02 1164.4 Q286.964 1159.79 286.964 1151.07 Q286.964 1142.32 290.02 1137.73 Q293.099 1133.13 298.909 1133.13 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M259.557 1010 L267.196 1010 L267.196 983.635 L258.886 985.302 L258.886 981.043 L267.15 979.376 L271.826 979.376 L271.826 1010 L279.465 1010 L279.465 1013.94 L259.557 1013.94 L259.557 1010 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M298.909 982.455 Q295.298 982.455 293.469 986.02 Q291.664 989.561 291.664 996.691 Q291.664 1003.8 293.469 1007.36 Q295.298 1010.9 298.909 1010.9 Q302.543 1010.9 304.349 1007.36 Q306.177 1003.8 306.177 996.691 Q306.177 989.561 304.349 986.02 Q302.543 982.455 298.909 982.455 M298.909 978.751 Q304.719 978.751 307.775 983.358 Q310.853 987.941 310.853 996.691 Q310.853 1005.42 307.775 1010.02 Q304.719 1014.61 298.909 1014.61 Q293.099 1014.61 290.02 1010.02 Q286.964 1005.42 286.964 996.691 Q286.964 987.941 290.02 983.358 Q293.099 978.751 298.909 978.751 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M262.775 855.625 L279.094 855.625 L279.094 859.561 L257.15 859.561 L257.15 855.625 Q259.812 852.871 264.395 848.241 Q269.002 843.588 270.182 842.246 Q272.428 839.723 273.307 837.987 Q274.21 836.227 274.21 834.538 Q274.21 831.783 272.266 830.047 Q270.344 828.311 267.242 828.311 Q265.043 828.311 262.59 829.075 Q260.159 829.839 257.381 831.389 L257.381 826.667 Q260.205 825.533 262.659 824.954 Q265.113 824.376 267.15 824.376 Q272.52 824.376 275.715 827.061 Q278.909 829.746 278.909 834.237 Q278.909 836.366 278.099 838.288 Q277.312 840.186 275.205 842.778 Q274.627 843.45 271.525 846.667 Q268.423 849.862 262.775 855.625 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M298.909 828.079 Q295.298 828.079 293.469 831.644 Q291.664 835.186 291.664 842.315 Q291.664 849.422 293.469 852.987 Q295.298 856.528 298.909 856.528 Q302.543 856.528 304.349 852.987 Q306.177 849.422 306.177 842.315 Q306.177 835.186 304.349 831.644 Q302.543 828.079 298.909 828.079 M298.909 824.376 Q304.719 824.376 307.775 828.982 Q310.853 833.565 310.853 842.315 Q310.853 851.042 307.775 855.649 Q304.719 860.232 298.909 860.232 Q293.099 860.232 290.02 855.649 Q286.964 851.042 286.964 842.315 Q286.964 833.565 290.02 828.982 Q293.099 824.376 298.909 824.376 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M272.914 686.551 Q276.27 687.268 278.145 689.537 Q280.043 691.805 280.043 695.139 Q280.043 700.254 276.525 703.055 Q273.006 705.856 266.525 705.856 Q264.349 705.856 262.034 705.416 Q259.742 705 257.289 704.143 L257.289 699.629 Q259.233 700.764 261.548 701.342 Q263.863 701.921 266.386 701.921 Q270.784 701.921 273.076 700.185 Q275.39 698.449 275.39 695.139 Q275.39 692.083 273.238 690.37 Q271.108 688.634 267.289 688.634 L263.261 688.634 L263.261 684.791 L267.474 684.791 Q270.923 684.791 272.752 683.426 Q274.58 682.037 274.58 679.444 Q274.58 676.782 272.682 675.37 Q270.807 673.935 267.289 673.935 Q265.367 673.935 263.168 674.352 Q260.969 674.768 258.33 675.648 L258.33 671.481 Q260.992 670.741 263.307 670.37 Q265.645 670 267.705 670 Q273.029 670 276.131 672.43 Q279.233 674.838 279.233 678.958 Q279.233 681.829 277.59 683.819 Q275.946 685.787 272.914 686.551 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M298.909 673.704 Q295.298 673.704 293.469 677.268 Q291.664 680.81 291.664 687.94 Q291.664 695.046 293.469 698.611 Q295.298 702.152 298.909 702.152 Q302.543 702.152 304.349 698.611 Q306.177 695.046 306.177 687.94 Q306.177 680.81 304.349 677.268 Q302.543 673.704 298.909 673.704 M298.909 670 Q304.719 670 307.775 674.606 Q310.853 679.19 310.853 687.94 Q310.853 696.666 307.775 701.273 Q304.719 705.856 298.909 705.856 Q293.099 705.856 290.02 701.273 Q286.964 696.666 286.964 687.94 Q286.964 679.19 290.02 674.606 Q293.099 670 298.909 670 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M271.594 520.323 L259.789 538.772 L271.594 538.772 L271.594 520.323 M270.367 516.249 L276.247 516.249 L276.247 538.772 L281.177 538.772 L281.177 542.661 L276.247 542.661 L276.247 550.809 L271.594 550.809 L271.594 542.661 L255.992 542.661 L255.992 538.147 L270.367 516.249 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M298.909 519.328 Q295.298 519.328 293.469 522.893 Q291.664 526.434 291.664 533.564 Q291.664 540.67 293.469 544.235 Q295.298 547.777 298.909 547.777 Q302.543 547.777 304.349 544.235 Q306.177 540.67 306.177 533.564 Q306.177 526.434 304.349 522.893 Q302.543 519.328 298.909 519.328 M298.909 515.624 Q304.719 515.624 307.775 520.231 Q310.853 524.814 310.853 533.564 Q310.853 542.291 307.775 546.897 Q304.719 551.48 298.909 551.48 Q293.099 551.48 290.02 546.897 Q286.964 542.291 286.964 533.564 Q286.964 524.814 290.02 520.231 Q293.099 515.624 298.909 515.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M258.793 361.873 L277.15 361.873 L277.15 365.809 L263.076 365.809 L263.076 374.281 Q264.094 373.934 265.113 373.772 Q266.131 373.586 267.15 373.586 Q272.937 373.586 276.316 376.758 Q279.696 379.929 279.696 385.346 Q279.696 390.924 276.224 394.026 Q272.752 397.105 266.432 397.105 Q264.256 397.105 261.988 396.734 Q259.742 396.364 257.335 395.623 L257.335 390.924 Q259.418 392.059 261.641 392.614 Q263.863 393.17 266.34 393.17 Q270.344 393.17 272.682 391.063 Q275.02 388.957 275.02 385.346 Q275.02 381.734 272.682 379.628 Q270.344 377.522 266.34 377.522 Q264.465 377.522 262.59 377.938 Q260.738 378.355 258.793 379.234 L258.793 361.873 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M298.909 364.952 Q295.298 364.952 293.469 368.517 Q291.664 372.059 291.664 379.188 Q291.664 386.295 293.469 389.859 Q295.298 393.401 298.909 393.401 Q302.543 393.401 304.349 389.859 Q306.177 386.295 306.177 379.188 Q306.177 372.059 304.349 368.517 Q302.543 364.952 298.909 364.952 M298.909 361.248 Q304.719 361.248 307.775 365.855 Q310.853 370.438 310.853 379.188 Q310.853 387.915 307.775 392.521 Q304.719 397.105 298.909 397.105 Q293.099 397.105 290.02 392.521 Q286.964 387.915 286.964 379.188 Q286.964 370.438 290.02 365.855 Q293.099 361.248 298.909 361.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M269.326 222.914 Q266.178 222.914 264.326 225.067 Q262.497 227.22 262.497 230.97 Q262.497 234.697 264.326 236.873 Q266.178 239.025 269.326 239.025 Q272.474 239.025 274.303 236.873 Q276.154 234.697 276.154 230.97 Q276.154 227.22 274.303 225.067 Q272.474 222.914 269.326 222.914 M278.608 208.262 L278.608 212.521 Q276.849 211.688 275.043 211.248 Q273.261 210.808 271.502 210.808 Q266.872 210.808 264.418 213.933 Q261.988 217.058 261.641 223.377 Q263.006 221.363 265.066 220.299 Q267.127 219.211 269.603 219.211 Q274.812 219.211 277.821 222.382 Q280.853 225.53 280.853 230.97 Q280.853 236.294 277.705 239.512 Q274.557 242.729 269.326 242.729 Q263.33 242.729 260.159 238.146 Q256.988 233.539 256.988 224.813 Q256.988 216.618 260.877 211.757 Q264.766 206.873 271.316 206.873 Q273.076 206.873 274.858 207.22 Q276.664 207.567 278.608 208.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M298.909 210.576 Q295.298 210.576 293.469 214.141 Q291.664 217.683 291.664 224.813 Q291.664 231.919 293.469 235.484 Q295.298 239.025 298.909 239.025 Q302.543 239.025 304.349 235.484 Q306.177 231.919 306.177 224.813 Q306.177 217.683 304.349 214.141 Q302.543 210.576 298.909 210.576 M298.909 206.873 Q304.719 206.873 307.775 211.479 Q310.853 216.063 310.853 224.813 Q310.853 233.539 307.775 238.146 Q304.719 242.729 298.909 242.729 Q293.099 242.729 290.02 238.146 Q286.964 233.539 286.964 224.813 Q286.964 216.063 290.02 211.479 Q293.099 206.873 298.909 206.873 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip792)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1037.28 400.199,932.783 400.786,836.901 401.372,749.056 401.958,668.715 402.545,595.382 403.131,528.599 403.718,569.687 404.304,508.205 404.891,541.34 405.477,489.467 406.063,441.417 406.65,399.431 407.236,360.616 407.823,327.185 408.409,297.632 408.995,328.979 409.582,302.899 410.168,281.304 410.755,261.598 411.341,244.795 411.927,231.51 412.514,219.895 413.1,248.127 413.687,239.929 414.273,234.392 414.86,260.618 415.446,258.363 416.032,257.204 416.619,282.481 417.205,282.501 417.792,284.351 418.378,287.627 418.964,292.084 419.551,298.203 420.137,321.914 420.724,360.771 421.31,368.378 421.896,391.18 422.483,439.295 423.069,458.888 423.656,499.621 424.242,506.667 424.829,524.932 425.415,551.633 426.001,569.436 426.588,577.996 427.174,587.161 427.761,597.042 428.347,606.67 428.933,622.883 429.52,632.578 430.106,648.533 430.693,664.4 431.279,673.412 431.865,682.564 432.452,691.817 433.038,712.462 433.625,731.506 434.211,754.919 434.798,767.831 435.384,779.989 435.97,800.657 436.557,820.309 437.143,826.828 437.73,833.4 438.316,843.887 438.902,854.611 439.489,864.719 440.075,882.062 440.662,891.608 441.248,897.973 441.835,904.169 442.421,913.626 443.007,931.704 443.594,946.01 444.18,959.601 444.767,966.99 445.353,974.416 445.939,978.822 446.526,986.305 447.112,996.102 447.699,1007.92 448.285,1016.87 448.871,1025.68 449.458,1029.29 450.044,1033.31 450.631,1039.55 451.217,1043.15 451.804,1055.95 452.39,1064.09 452.976,1067.44 453.563,1075.23 454.149,1078.79 454.736,1084.09 455.322,1087.09 455.908,1090.3 456.495,1095.5 457.081,1100.62 457.668,1105.11 458.254,1115.5 458.84,1120.38 459.427,1124.58 460.013,1126.78 460.6,1129.12 461.186,1132.99 461.773,1138.83 462.359,1140.71 462.945,1144.25 463.532,1145.84 464.118,1149.55 464.705,1153.29 465.291,1156.34 465.877,1157.89 466.464,1159.38 467.05,1165.95 467.637,1172.18 468.223,1173.14 468.809,1179.15 469.396,1181.78 469.982,1190.38 470.569,1192.48 471.155,1194.42 471.742,1194.8 472.328,1194.78 472.914,1196.8 473.501,1201.93 474.087,1203.39 474.674,1208.17 475.26,1209.57 475.846,1207.98 476.433,1209.3 477.019,1210.84 477.606,1213.67 478.192,1213.77 478.778,1216.77 479.365,1216.35 479.951,1214.93 480.538,1220.47 481.124,1223.07 481.711,1222.8 482.297,1223.99 482.883,1228.07 483.47,1227.69 484.056,1226.18 484.643,1228.65 485.229,1228.19 485.815,1233.23 486.402,1232.84 486.988,1230.94 487.575,1230.58 488.161,1231.78 488.748,1232.77 489.334,1232.5 489.92,1234.77 490.507,1234.34 491.093,1234.01 491.68,1232.2 492.266,1231.61 492.852,1233.8 493.439,1233.36 494.025,1234.26 494.612,1233.99 495.198,1239.09 495.784,1239.84 496.371,1237.8 496.957,1237.13 497.544,1239.21 498.13,1240.17 498.717,1243.64 499.303,1244.05 499.889,1241.88 500.476,1241.01 501.062,1240.05 501.649,1240.85 502.235,1240.13 502.821,1242.46 503.408,1243.23 503.994,1243.82 504.581,1245.91 505.167,1243.8 505.753,1245.53 506.34,1243.45 506.926,1244.09 507.513,1243.5 508.099,1244.08 508.686,1238.18 509.272,1239.28 509.858,1240.1 510.445,1238.45 511.031,1238.26 511.618,1239.2 512.204,1243.78 512.79,1244.41 513.377,1244.9 513.963,1246.73 514.55,1241.96 515.136,1244 515.722,1242.15 516.309,1241.6 516.895,1243.75 517.482,1237 518.068,1235.54 518.655,1234.33 519.241,1234.58 519.827,1234.65 520.414,1234.5 521,1239.66 521.587,1240.6 522.173,1238.92 522.759,1239.55 523.346,1239.11 523.932,1242.86 524.519,1240.98 525.105,1240.76 525.691,1239.12 526.278,1237.8 526.864,1238.9 527.451,1238.74 528.037,1239.7 528.624,1241.98 529.21,1244.1 529.796,1245.93 530.383,1245.2 530.969,1245.78 531.556,1247.71 532.142,1246.94 532.728,1248.7 533.315,1249.02 533.901,1250.53 534.488,1249.25 535.074,1247.3 535.661,1247.79 536.247,1246.98 536.833,1245.9 537.42,1248.86 538.006,1247.95 538.593,1248.23 539.179,1244.58 539.765,1243.79 540.352,1244.39 540.938,1243.77 541.525,1245.74 542.111,1244.84 542.697,1241.72 543.284,1242.45 543.87,1240.65 544.457,1241.31 545.043,1239.37 545.63,1237.43 546.216,1237.02 546.802,1236.77 547.389,1236.34 547.975,1237.03 548.562,1236.43 549.148,1236.07 549.734,1234.32 550.321,1232.86 550.907,1234.07 551.494,1235.31 552.08,1233.42 552.666,1233.42 553.253,1232.96 553.839,1231.68 554.426,1231.76 555.012,1231.63 555.599,1231.74 556.185,1232.69 556.771,1233.89 557.358,1235.04 557.944,1234.65 558.531,1234.46 559.117,1238.26 559.703,1237.78 560.29,1234.77 560.876,1234.67 561.463,1231.79 562.049,1230.42 562.635,1227.95 563.222,1226.75 563.808,1226.63 564.395,1229.46 564.981,1226.83 565.568,1229.51 566.154,1233.53 566.74,1230.68 567.327,1231.88 567.913,1232.85 568.5,1232.69 569.086,1232.33 569.672,1230.77 570.259,1230.68 570.845,1230.49 571.432,1232.92 572.018,1235.32 572.605,1233.75 573.191,1232.23 573.777,1231.95 574.364,1231.75 574.95,1230.51 575.537,1230.45 576.123,1234.08 576.709,1233.41 577.296,1231.75 577.882,1232.73 578.469,1234.92 579.055,1235.9 579.641,1238.02 580.228,1234.86 580.814,1234.26 581.401,1235.19 581.987,1234.74 582.574,1234.37 583.16,1233.99 583.746,1233.35 584.333,1233.88 584.919,1233.6 585.506,1234.69 586.092,1234.6 586.678,1232.79 587.265,1231.24 587.851,1233.49 588.438,1234.38 589.024,1236.26 589.61,1234.47 590.197,1233.85 590.783,1234.73 591.37,1233.02 591.956,1231.51 592.543,1232.27 593.129,1232.17 593.715,1228.22 594.302,1232.13 594.888,1231.64 595.475,1231.38 596.061,1232.24 596.647,1230.66 597.234,1232.61 597.82,1230.75 598.407,1228.97 598.993,1227.43 599.579,1229.83 600.166,1233.3 600.752,1233.97 601.339,1233.27 601.925,1231.66 602.512,1231.42 603.098,1235.75 603.684,1233.93 604.271,1234.79 604.857,1234.16 605.444,1232.23 606.03,1229.39 606.616,1227.52 607.203,1228.33 607.789,1230.18 608.376,1229.86 608.962,1232.29 609.548,1235.79 610.135,1235.33 610.721,1235.78 611.308,1232.55 611.894,1228.43 612.481,1230.61 613.067,1234.21 613.653,1231.15 614.24,1228.24 614.826,1227.93 615.413,1227.65 615.999,1227.48 616.585,1227.16 617.172,1225.56 617.758,1227.02 618.345,1225.45 618.931,1223.95 619.518,1222.64 620.104,1225.12 620.69,1223.6 621.277,1222.41 621.863,1224.94 622.45,1224.97 623.036,1222.38 623.622,1223.41 624.209,1223.43 624.795,1223.57 625.382,1224.58 625.968,1224.56 626.554,1225.57 627.141,1226.66 627.727,1225.36 628.314,1227.74 628.9,1228.61 629.487,1226.89 630.073,1228.96 630.659,1226.98 631.246,1227.87 631.832,1226.09 632.419,1227.22 633.005,1226.99 633.591,1225.55 634.178,1225.33 634.764,1225.04 635.351,1228.6 635.937,1230.57 636.523,1228.64 637.11,1229.53 637.696,1232.86 638.283,1230.8 638.869,1227.73 639.456,1228.61 640.042,1228.32 640.628,1228.21 641.215,1227.61 641.801,1227.02 642.388,1226.39 642.974,1226.21 643.56,1227.23 644.147,1229.51 644.733,1229.11 645.32,1228.36 645.906,1226.65 646.492,1227.52 647.079,1227.06 647.665,1228.05 648.252,1228.86 648.838,1228.52 649.425,1229.21 650.011,1228.89 650.597,1229.63 651.184,1229.47 651.77,1226.57 652.357,1226.27 652.943,1226.96 653.529,1226.43 654.116,1226.01 654.702,1223.08 655.289,1221.7 655.875,1224.03 656.462,1221.12 657.048,1222.35 657.634,1222.07 658.221,1224.29 658.807,1225.37 659.394,1222.52 659.98,1223.64 660.566,1223.59 661.153,1221.19 661.739,1219.98 662.326,1223.77 662.912,1224.92 663.498,1224.81 664.085,1223.45 664.671,1223.43 665.258,1221.9 665.844,1221.93 666.431,1226.87 667.017,1225.32 667.603,1226.17 668.19,1224.51 668.776,1224.19 669.363,1220.22 669.949,1219.9 670.535,1219.88 671.122,1221.07 671.708,1220.79 672.295,1219.55 672.881,1219.34 673.467,1220.69 674.054,1220.42 674.64,1220.41 675.227,1221.85 675.813,1222.03 676.4,1221.69 676.986,1221.72 677.572,1222.81 678.159,1223.97 678.745,1222.34 679.332,1220.85 679.918,1222.1 680.504,1222.2 681.091,1224.8 681.677,1227.11 682.264,1226.4 682.85,1224.77 683.436,1224.7 684.023,1223.21 684.609,1221.8 685.196,1221.78 685.782,1223.1 686.369,1222.71 686.955,1224.96 687.541,1226.12 688.128,1228.2 688.714,1227.55 689.301,1225.68 689.887,1225.25 690.473,1225.89 691.06,1222.99 691.646,1224.27 692.233,1220.25 692.819,1221.37 693.405,1220.96 693.992,1220.9 694.578,1220.82 695.165,1220.86 695.751,1222.12 696.338,1220.59 696.924,1220.47 697.51,1220.31 698.097,1221.18 698.683,1221.2 699.27,1218.42 699.856,1218.37 700.442,1218.32 701.029,1214.38 701.615,1212.05 702.202,1212.39 702.788,1211.52 703.375,1213.08 703.961,1212.02 704.547,1209.89 705.134,1213.03 705.72,1214.4 706.307,1214.54 706.893,1213.48 707.479,1216.58 708.066,1216.54 708.652,1216.72 709.239,1216.59 709.825,1217.84 710.411,1216.39 710.998,1216.42 711.584,1219.02 712.171,1218.88 712.757,1218.89 713.344,1217.63 713.93,1217.76 714.516,1217.88 715.103,1219.13 715.689,1220.14 716.276,1222.76 716.862,1223.52 717.448,1220.83 718.035,1220.97 718.621,1222.78 719.208,1221.21 719.794,1218.54 720.38,1221.08 720.967,1222.38 721.553,1223.53 722.14,1223.23 722.726,1222.97 723.313,1220.2 723.899,1222.78 724.485,1220.01 725.072,1218.7 725.658,1218.88 726.245,1217.63 726.831,1220.14 727.417,1220.13 728.004,1220.16 728.59,1221.33 729.177,1221.31 729.763,1220.99 730.349,1218.09 730.936,1217.68 731.522,1216.36 732.109,1218.83 732.695,1219.92 733.282,1221 733.868,1221.91 734.454,1222.97 735.041,1221.37 735.627,1219.81 736.214,1219.48 736.8,1219.53 737.386,1220.77 737.973,1221.58 738.559,1221.28 739.146,1218.74 739.732,1221.43 740.318,1223.59 740.905,1221 741.491,1220.95 742.078,1220.75 742.664,1221.89 743.251,1222.8 743.837,1222.65 744.423,1222.58 745.01,1218.4 745.596,1216.93 746.183,1216.93 746.769,1218.01 747.355,1217.95 747.942,1218.16 748.528,1218.07 749.115,1216.9 749.701,1219.32 750.288,1221.67 750.874,1221.26 751.46,1222.32 752.047,1223.37 752.633,1223.09 753.22,1221.7 753.806,1221.3 754.392,1224.65 754.979,1226.71 755.565,1226.22 756.152,1224.67 756.738,1222.98 757.324,1222.58 757.911,1222.17 758.497,1220.7 759.084,1219.07 759.67,1220.21 760.257,1217.75 760.843,1217.87 761.429,1215.62 762.016,1215.66 762.602,1214.54 763.189,1216.18 763.775,1216.19 764.361,1216.14 764.948,1216.26 765.534,1214.72 766.121,1214.73 766.707,1212.42 767.293,1211.62 767.88,1209.4 768.466,1208.59 769.053,1210.39 769.639,1209.61 770.226,1211.09 770.812,1212.35 771.398,1211.57 771.985,1212.96 772.571,1217.19 773.158,1217.19 773.744,1218.28 774.33,1216.94 774.917,1220.49 775.503,1221.56 776.09,1222.55 776.676,1222.33 777.262,1220.62 777.849,1221.57 778.435,1222.68 779.022,1222.32 779.608,1221.89 780.195,1221.56 780.781,1221.37 781.367,1217.41 781.954,1216.18 782.54,1216.16 783.127,1217.46 783.713,1216.36 784.299,1217.78 784.886,1216.26 785.472,1218.85 786.059,1217.75 786.645,1215.53 787.232,1213.06 787.818,1216.95 788.404,1219.57 788.991,1219.27 789.577,1216.63 790.164,1215.17 790.75,1215.37 791.336,1214.22 791.923,1213.24 792.509,1213.14 793.096,1214.56 793.682,1214.44 794.268,1215.58 794.855,1216.72 795.441,1215.6 796.028,1215.8 796.614,1215.68 797.201,1216.03 797.787,1218.6 798.373,1218.55 798.96,1222.2 799.546,1219.39 800.133,1220.57 800.719,1220.12 801.305,1218.53 801.892,1219.55 802.478,1221.7 803.065,1221.46 803.651,1221.16 804.237,1220.94 804.824,1221.71 805.41,1222.78 805.997,1224.92 806.583,1221.96 807.17,1221.57 807.756,1222.59 808.342,1221.04 808.929,1222.1 809.515,1221.73 810.102,1220.23 810.688,1216.18 811.274,1213.56 811.861,1212.68 812.447,1210.37 813.034,1213.15 813.62,1214.56 814.206,1216.03 814.793,1214.65 815.379,1213.53 815.966,1213.66 816.552,1212.79 817.139,1214.3 817.725,1214.23 818.311,1216.68 818.898,1217.93 819.484,1215.06 820.071,1213.91 820.657,1208.9 821.243,1210.68 821.83,1210.87 822.416,1209.73 823.003,1210.09 823.589,1212.61 824.175,1211.73 824.762,1209.36 825.348,1212.17 825.935,1212.61 826.521,1212.02 827.108,1208.64 827.694,1211.47 828.28,1211.64 828.867,1214.45 829.453,1214.29 830.04,1214.52 830.626,1216 831.212,1214.61 831.799,1215.99 832.385,1215.92 832.972,1216.89 833.558,1215.62 834.145,1218.03 834.731,1218.01 835.317,1217.78 835.904,1216.35 836.49,1218.95 837.077,1218.72 837.663,1219.74 838.249,1219.54 838.836,1220.47 839.422,1221.39 840.009,1221 840.595,1223.28 841.181,1223.98 841.768,1223.08 842.354,1223.9 842.941,1219.4 843.527,1219.24 844.114,1217.97 844.7,1218.12 845.286,1216.96 845.873,1216.75 846.459,1217.89 847.046,1219.01 847.632,1217.73 848.218,1217.66 848.805,1217.5 849.391,1212.2 849.978,1214.93 850.564,1216.41 851.15,1216.43 851.737,1215.28 852.323,1214.8 852.91,1215.94 853.496,1213.18 854.083,1214.48 854.669,1213.4 855.255,1215.9 855.842,1217.41 856.428,1217.24 857.015,1220.09 857.601,1218.56 858.187,1220.65 858.774,1217.53 859.36,1219.81 859.947,1219.58 860.533,1220.69 861.119,1217.95 861.706,1218.76 862.292,1219.81 862.879,1217 863.465,1215.42 864.052,1215.26 864.638,1215.34 865.224,1215.09 865.811,1215.18 866.397,1213.61 866.984,1213.42 867.57,1212.08 868.156,1213.76 868.743,1216.48 869.329,1216.51 869.916,1216.12 870.502,1215.93 871.089,1213.1 871.675,1214.55 872.261,1214.68 872.848,1213.49 873.434,1212.11 874.021,1214.79 874.607,1216.13 875.193,1216.1 875.78,1217.45 876.366,1214.85 876.953,1213.54 877.539,1213.58 878.125,1213.5 878.712,1212.4 879.298,1213.93 879.885,1212.88 880.471,1210.69 881.058,1211.93 881.644,1211.86 882.23,1213.17 882.817,1212.45 883.403,1210.98 883.99,1212.33 884.576,1211.32 885.162,1210.15 885.749,1207.73 886.335,1206.48 886.922,1208.02 887.508,1208.17 888.094,1210.78 888.681,1212.07 889.267,1213.5 889.854,1213.46 890.44,1213.54 891.027,1213.4 891.613,1214.62 892.199,1215.86 892.786,1216.99 893.372,1216.9 893.959,1216.83 894.545,1215.46 895.131,1215.28 895.718,1216.57 896.304,1215.18 896.891,1213.97 897.477,1214.07 898.063,1218.06 898.65,1216.71 899.236,1216.6 899.823,1215.43 900.409,1213.14 900.996,1213.1 901.582,1214.44 902.168,1215.39 902.755,1214.12 903.341,1212.79 903.928,1212.72 904.514,1212.8 905.1,1214.45 905.687,1216.63 906.273,1216.43 906.86,1216.55 907.446,1218.73 908.032,1217.15 908.619,1215.91 909.205,1215.63 909.792,1214.25 910.378,1215.47 910.965,1216.49 911.551,1215.25 912.137,1213.8 912.724,1212.33 913.31,1212.5 913.897,1208.76 914.483,1207.48 915.069,1205.36 915.656,1209.79 916.242,1211.31 916.829,1211.77 917.415,1210.48 918.002,1209.71 918.588,1209.72 919.174,1211.19 919.761,1210 920.347,1210.52 920.934,1210.75 921.52,1206.96 922.106,1207.42 922.693,1207.83 923.279,1208.37 923.866,1208.72 924.452,1208.99 925.038,1207.94 925.625,1208.29 926.211,1207.54 926.798,1211.57 927.384,1211.58 927.971,1211.75 928.557,1213.11 929.143,1211.72 929.73,1214.38 930.316,1214.56 930.903,1217.2 931.489,1218.43 932.075,1214.67 932.662,1215.81 933.248,1216.89 933.835,1218.13 934.421,1218.14 935.007,1219.13 935.594,1219.04 936.18,1220.35 936.767,1218.98 937.353,1221.33 937.94,1219.81 938.526,1222.03 939.112,1221.61 939.699,1222.86 940.285,1222.52 940.872,1221.09 941.458,1221.89 942.044,1221.67 942.631,1221.16 943.217,1219.76 943.804,1216.87 944.39,1216.57 944.976,1215.39 945.563,1215.4 946.149,1216.5 946.736,1215 947.322,1214.71 947.909,1214.45 948.495,1213.08 949.081,1211.57 949.668,1211.45 950.254,1209.38 950.841,1208.46 951.427,1209.84 952.013,1209.92 952.6,1210.11 953.186,1211.71 953.773,1210.25 954.359,1210.29 954.945,1210.62 955.532,1212.15 956.118,1210.94 956.705,1211.26 957.291,1207.35 957.878,1209.07 958.464,1213 959.05,1214.3 959.637,1215.39 960.223,1215.6 960.81,1216.85 961.396,1216.64 961.982,1216.32 962.569,1212.29 963.155,1210.91 963.742,1211.09 964.328,1211.19 964.915,1211.53 965.501,1211.64 966.087,1211.68 966.674,1213.36 967.26,1213.78 967.847,1216.26 968.433,1216.51 969.019,1215.02 969.606,1213.46 970.192,1211 970.779,1211.27 971.365,1215.01 971.951,1213.87 972.538,1213.8 973.124,1213.78 973.711,1214.97 974.297,1215.27 974.884,1212.76 975.47,1214.19 976.056,1215.34 976.643,1215.41 977.229,1214.34 977.816,1215.76 978.402,1217.97 978.988,1215.16 979.575,1216.49 980.161,1217.6 980.748,1217.43 981.334,1217.09 981.92,1216.01 982.507,1214.54 983.093,1215.6 983.68,1214.1 984.266,1215.35 984.853,1216.28 985.439,1216.02 986.025,1215.93 986.612,1213.19 987.198,1214.34 987.785,1214.24 988.371,1213.1 988.957,1214.17 989.544,1216.47 990.13,1216.25 990.717,1216.19 991.303,1213.53 991.889,1214.62 992.476,1215.9 993.062,1214.46 993.649,1213.37 994.235,1213.6 994.822,1213.42 995.408,1214.83 995.994,1213.29 996.581,1214.12 997.167,1211.59 997.754,1210.52 998.34,1213.09 998.926,1213.07 999.513,1216.81 1000.1,1218.25 1000.69,1219.46 1001.27,1220.41 1001.86,1223.83 1002.44,1220.91 1003.03,1223.11 1003.62,1222.43 1004.2,1224.27 1004.79,1223.29 1005.38,1226.43 1005.96,1222.01 1006.55,1219.97 1007.14,1218.16 1007.72,1219.15 1008.31,1215.29 1008.9,1213.97 1009.48,1215.19 1010.07,1215.13 1010.65,1213.77 1011.24,1213.76 1011.83,1213.88 1012.41,1213.84 1013,1212.6 1013.59,1211.61 1014.17,1211.76 1014.76,1213.12 1015.35,1215.83 1015.93,1216.89 1016.52,1215.67 1017.11,1214.3 1017.69,1215.67 1018.28,1214.25 1018.86,1214.12 1019.45,1215.36 1020.04,1213.93 1020.62,1212.61 1021.21,1213.93 1021.8,1216.41 1022.38,1213.56 1022.97,1215.89 1023.56,1215.57 1024.14,1212.97 1024.73,1214.55 1025.32,1214.41 1025.9,1214.33 1026.49,1215.69 1027.07,1214.4 1027.66,1216.77 1028.25,1219.21 1028.83,1217.6 1029.42,1216.04 1030.01,1215.72 1030.59,1210.76 1031.18,1212.03 1031.77,1213.38 1032.35,1214.58 1032.94,1214.49 1033.52,1214.34 1034.11,1214.21 1034.7,1212.67 1035.28,1211.39 1035.87,1210.27 1036.46,1210.42 1037.04,1214.39 1037.63,1215.66 1038.22,1216.76 1038.8,1216.44 1039.39,1215.15 1039.98,1216.55 1040.56,1214.96 1041.15,1217.37 1041.73,1214.74 1042.32,1216.12 1042.91,1215.89 1043.49,1215.77 1044.08,1213.29 1044.67,1212.01 1045.25,1210.94 1045.84,1212.31 1046.43,1212.56 1047.01,1208.93 1047.6,1210.03 1048.19,1211.29 1048.77,1215.44 1049.36,1213.98 1049.94,1212.63 1050.53,1212.67 1051.12,1211.39 1051.7,1210.55 1052.29,1209.51 1052.88,1212.13 1053.46,1213.25 1054.05,1214.6 1054.64,1213.38 1055.22,1213.32 1055.81,1213.35 1056.39,1215.72 1056.98,1217.08 1057.57,1215.81 1058.15,1214.44 1058.74,1214.16 1059.33,1213.84 1059.91,1211.18 1060.5,1210.16 1061.09,1210.29 1061.67,1211.71 1062.26,1211.8 1062.85,1214.38 1063.43,1215.59 1064.02,1215.48 1064.6,1213.94 1065.19,1215.27 1065.78,1216.62 1066.36,1216.58 1066.95,1219.12 1067.54,1216.63 1068.12,1216.24 1068.71,1214.95 1069.3,1215.01 1069.88,1213.74 1070.47,1213.94 1071.06,1215.28 1071.64,1216.51 1072.23,1216.17 1072.81,1217.22 1073.4,1218.59 1073.99,1217.11 1074.57,1215.76 1075.16,1213.32 1075.75,1213.32 1076.33,1213.23 1076.92,1213.13 1077.51,1213.28 1078.09,1213.19 1078.68,1212.11 1079.26,1211.89 1079.85,1210.62 1080.44,1210.54 1081.02,1211.89 1081.61,1212.06 1082.2,1210.93 1082.78,1213.57 1083.37,1214.66 1083.96,1214.98 1084.54,1212.05 1085.13,1212.2 1085.72,1212.39 1086.3,1213.82 1086.89,1214.08 1087.47,1214.37 1088.06,1214.35 1088.65,1213.97 1089.23,1213.99 1089.82,1211.74 1090.41,1209.26 1090.99,1208.23 1091.58,1205.9 1092.17,1205.2 1092.75,1205.74 1093.34,1208.64 1093.93,1207.65 1094.51,1205.4 1095.1,1207.1 1095.68,1206.14 1096.27,1205.4 1096.86,1204.38 1097.44,1204.89 1098.03,1204.43 1098.62,1206.47 1099.2,1208.35 1099.79,1207.4 1100.38,1206.41 1100.96,1208.14 1101.55,1208.54 1102.14,1210.29 1102.72,1209.32 1103.31,1210.77 1103.89,1211.09 1104.48,1209.98 1105.07,1211.52 1105.65,1212.88 1106.24,1214.23 1106.83,1213.26 1107.41,1210.81 1108,1212.43 1108.59,1211.16 1109.17,1209.91 1109.76,1209.98 1110.34,1211.47 1110.93,1211.68 1111.52,1213.22 1112.1,1214.15 1112.69,1215.23 1113.28,1211.45 1113.86,1212.83 1114.45,1211.62 1115.04,1210.72 1115.62,1212.11 1116.21,1210.8 1116.8,1211.12 1117.38,1213.66 1117.97,1216.31 1118.55,1217.21 1119.14,1213.31 1119.73,1214.64 1120.31,1213 1120.9,1210.74 1121.49,1211.33 1122.07,1209.07 1122.66,1207.03 1123.25,1208.75 1123.83,1211.61 1124.42,1211.93 1125.01,1214.69 1125.59,1217.21 1126.18,1218.37 1126.76,1216.87 1127.35,1215.55 1127.94,1215.53 1128.52,1212.9 1129.11,1212.92 1129.7,1214.2 1130.28,1214 1130.87,1213.74 1131.46,1215.18 1132.04,1217.53 1132.63,1216.08 1133.21,1217.06 1133.8,1214.51 1134.39,1215.69 1134.97,1218.18 1135.56,1219.28 1136.15,1217.89 1136.73,1216.42 1137.32,1216.4 1137.91,1217.41 1138.49,1215.96 1139.08,1214.57 1139.67,1217.04 1140.25,1218.12 1140.84,1217.79 1141.42,1217.38 1142.01,1216.91 1142.6,1216.79 1143.18,1215.26 1143.77,1217.9 1144.36,1218.81 1144.94,1218.54 1145.53,1219.51 1146.12,1221.65 1146.7,1222.32 1147.29,1223.15 1147.88,1222.43 1148.46,1220.6 1149.05,1217.75 1149.63,1218.82 1150.22,1218.57 1150.81,1218.44 1151.39,1216.95 1151.98,1218.13 1152.57,1215.51 1153.15,1215.48 1153.74,1212.96 1154.33,1214.16 1154.91,1212.83 1155.5,1213.99 1156.09,1215.23 1156.67,1215.4 1157.26,1213.99 1157.84,1213.85 1158.43,1213.92 1159.02,1213.89 1159.6,1216.44 1160.19,1216.24 1160.78,1216.14 1161.36,1214.84 1161.95,1213.62 1162.54,1212.35 1163.12,1212.53 1163.71,1214.03 1164.29,1213.86 1164.88,1212.54 1165.47,1212.32 1166.05,1213.57 1166.64,1212.53 1167.23,1210.25 1167.81,1210.38 1168.4,1213.1 1168.99,1214.45 1169.57,1215.5 1170.16,1219.14 1170.75,1218.69 1171.33,1220.7 1171.92,1220.38 1172.5,1219.83 1173.09,1218.42 1173.68,1215.52 1174.26,1212.97 1174.85,1213.1 1175.44,1213.21 1176.02,1210.45 1176.61,1210.68 1177.2,1212.06 1177.78,1211.09 1178.37,1211.27 1178.96,1212.59 1179.54,1212.75 1180.13,1212.8 1180.71,1214.03 1181.3,1215.19 1181.89,1209.9 1182.47,1210.06 1183.06,1211.71 1183.65,1211.61 1184.23,1210.36 1184.82,1210.63 1185.41,1212 1185.99,1213.11 1186.58,1214.33 1187.16,1214.34 1187.75,1211.77 1188.34,1210.44 1188.92,1210.7 1189.51,1211.94 1190.1,1211.92 1190.68,1210.44 1191.27,1211.68 1191.86,1211.9 1192.44,1213.05 1193.03,1213.23 1193.62,1214.53 1194.2,1214.54 1194.79,1213.08 1195.37,1213.04 1195.96,1214.2 1196.55,1212.86 1197.13,1215.35 1197.72,1215.32 1198.31,1213.79 1198.89,1213.8 1199.48,1213.62 1200.07,1214.79 1200.65,1216.04 1201.24,1217.1 1201.83,1215.68 1202.41,1215.41 1203,1216.72 1203.58,1216.58 1204.17,1215.33 1204.76,1214.03 1205.34,1213.99 1205.93,1214.03 1206.52,1213.96 1207.1,1211.56 1207.69,1212.71 1208.28,1215.45 1208.86,1215.36 1209.45,1215.43 1210.03,1215.43 1210.62,1210.19 1211.21,1210.53 1211.79,1209.5 1212.38,1209.54 1212.97,1211.01 1213.55,1211.08 1214.14,1211.4 1214.73,1211.51 1215.31,1211.61 1215.9,1210.26 1216.49,1210.36 1217.07,1208.13 1217.66,1208.36 1218.24,1206.16 1218.83,1207.64 1219.42,1206.89 1220,1207.37 1220.59,1207.69 1221.18,1207.84 1221.76,1206.96 1222.35,1208.86 1222.94,1208.07 1223.52,1208.28 1224.11,1210.92 1224.7,1210.66 1225.28,1212.16 1225.87,1212.32 1226.45,1213.62 1227.04,1212.42 1227.63,1213.55 1228.21,1213.47 1228.8,1213.44 1229.39,1210.87 1229.97,1211.22 1230.56,1212.83 1231.15,1212.78 1231.73,1212.81 1232.32,1212.97 1232.91,1215.41 1233.49,1213.7 1234.08,1217.31 1234.66,1218.16 1235.25,1219.21 1235.84,1217.51 1236.42,1218.56 1237.01,1217.09 1237.6,1216.81 1238.18,1217.81 1238.77,1217.55 1239.36,1218.59 1239.94,1218.18 1240.53,1215.3 1241.11,1216.18 1241.7,1213.42 1242.29,1214.48 1242.87,1214.29 1243.46,1214.64 1244.05,1215.94 1244.63,1214.65 1245.22,1213.59 1245.81,1213.29 1246.39,1215.73 1246.98,1215.58 1247.57,1216.76 1248.15,1215.25 1248.74,1215.19 1249.32,1211.31 1249.91,1211.12 1250.5,1206.07 1251.08,1203.8 1251.67,1204 1252.26,1205.44 1252.84,1204.66 1253.43,1207.7 1254.02,1209.33 1254.6,1207.14 1255.19,1208.6 1255.78,1207.19 1256.36,1207.38 1256.95,1208.83 1257.53,1210.09 1258.12,1210.13 1258.71,1209.22 1259.29,1206.89 1259.88,1209.85 1260.47,1207.27 1261.05,1209.06 1261.64,1210.42 1262.23,1210.62 1262.81,1210.83 1263.4,1213.68 1263.98,1213.64 1264.57,1213.5 1265.16,1214.57 1265.74,1212.34 1266.33,1209.61 1266.92,1209.59 1267.5,1209.95 1268.09,1210.33 1268.68,1209.18 1269.26,1209.29 1269.85,1206.83 1270.44,1208.26 1271.02,1208.37 1271.61,1208.6 1272.19,1209.13 1272.78,1207.97 1273.37,1209.62 1273.95,1210.84 1274.54,1212.22 1275.13,1213.54 1275.71,1214.72 1276.3,1214.92 1276.89,1214.9 1277.47,1213.38 1278.06,1213.32 1278.65,1213.08 1279.23,1211.72 1279.82,1212 1280.4,1212.04 1280.99,1214.8 1281.58,1214.72 1282.16,1214.42 1282.75,1214.61 1283.34,1213.08 1283.92,1212.06 1284.51,1213.53 1285.1,1214.75 1285.68,1215.81 1286.27,1213.1 1286.86,1211.73 1287.44,1210.41 1288.03,1210.4 1288.61,1213.15 1289.2,1211.8 1289.79,1215.55 1290.37,1216.73 1290.96,1217.97 1291.55,1217.74 1292.13,1217.23 1292.72,1216.96 1293.31,1216.79 1293.89,1216.53 1294.48,1216.22 1295.06,1217.29 1295.65,1215.78 1296.24,1217.1 1296.82,1218.22 1297.41,1216.46 1298,1218.78 1298.58,1218.45 1299.17,1218.24 1299.76,1216.41 1300.34,1213.7 1300.93,1212.56 1301.52,1213.93 1302.1,1213.66 1302.69,1216.09 1303.27,1214.56 1303.86,1213.25 1304.45,1217.09 1305.03,1220.82 1305.62,1221.7 1306.21,1220.06 1306.79,1219.7 1307.38,1219.41 1307.97,1217.52 1308.55,1216.37 1309.14,1214.93 1309.73,1214.57 1310.31,1213.28 1310.9,1214.47 1311.48,1218.53 1312.07,1215.78 1312.66,1215.84 1313.24,1214.47 1313.83,1216.75 1314.42,1216.45 1315,1216.15 1315.59,1217.22 1316.18,1214.4 1316.76,1214.67 1317.35,1214.55 1317.93,1214.37 1318.52,1212.01 1319.11,1213.52 1319.69,1211.02 1320.28,1210.92 1320.87,1209.64 1321.45,1210.99 1322.04,1210.92 1322.63,1211.09 1323.21,1211.08 1323.8,1214.93 1324.39,1214.93 1324.97,1216.04 1325.56,1214.73 1326.14,1210.96 1326.73,1209.93 1327.32,1212.7 1327.9,1211.33 1328.49,1212.56 1329.08,1213.78 1329.66,1213.68 1330.25,1215.12 1330.84,1212.77 1331.42,1213.78 1332.01,1212.25 1332.6,1212.33 1333.18,1212.75 1333.77,1214.07 1334.35,1214.03 1334.94,1209.89 1335.53,1210.1 1336.11,1210.38 1336.7,1210.38 1337.29,1209.45 1337.87,1209.54 1338.46,1209.6 1339.05,1211.13 1339.63,1211.12 1340.22,1215.27 1340.8,1216.28 1341.39,1213.65 1341.98,1213.69 1342.56,1213.63 1343.15,1213.68 1343.74,1216.11 1344.32,1215.7 1344.91,1214.19 1345.5,1212.82 1346.08,1210.32 1346.67,1210.43 1347.26,1210.58 1347.84,1210.63 1348.43,1210.79 1349.01,1210.68 1349.6,1210.6 1350.19,1209.3 1350.77,1207.1 1351.36,1207.33 1351.95,1209.19 1352.53,1209.54 1353.12,1209.74 1353.71,1210.24 1354.29,1212.9 1354.88,1212.96 1355.47,1212.84 1356.05,1213.04 1356.64,1210.29 1357.22,1208.08 1357.81,1207.03 1358.4,1206.22 1358.98,1206.28 1359.57,1204.2 1360.16,1203.65 1360.74,1206.84 1361.33,1208.48 1361.92,1207.6 1362.5,1206.68 1363.09,1207.02 1363.68,1207.49 1364.26,1208.92 1364.85,1209 1365.43,1210.13 1366.02,1207.88 1366.61,1209.27 1367.19,1209.36 1367.78,1210.86 1368.37,1210.76 1368.95,1209.65 1369.54,1212.38 1370.13,1214.68 1370.71,1214.67 1371.3,1218.23 1371.88,1219.23 1372.47,1216.78 1373.06,1214.14 1373.64,1213.79 1374.23,1213.46 1374.82,1213.64 1375.4,1214.65 1375.99,1215.68 1376.58,1216.53 1377.16,1216.44 1377.75,1220.08 1378.34,1218.59 1378.92,1215.91 1379.51,1217.13 1380.09,1218.04 1380.68,1217.71 1381.27,1216.21 1381.85,1216.21 1382.44,1212.27 1383.03,1213.18 1383.61,1211.62 1384.2,1210.59 1384.79,1212.15 1385.37,1209.53 1385.96,1210.95 1386.55,1212.08 1387.13,1210.95 1387.72,1212.18 1388.3,1211.02 1388.89,1213.97 1389.48,1210.58 1390.06,1212.03 1390.65,1215.95 1391.24,1214.21 1391.82,1212.87 1392.41,1214.36 1393,1211.99 1393.58,1213.24 1394.17,1214.84 1394.75,1214.7 1395.34,1215.77 1395.93,1219.46 1396.51,1220.4 1397.1,1219.96 1397.69,1218.17 1398.27,1219.12 1398.86,1217.54 1399.45,1216.16 1400.03,1214.83 1400.62,1216.06 1401.21,1215.52 1401.79,1216.67 1402.38,1214.02 1402.96,1212.62 1403.55,1212.54 1404.14,1211.18 1404.72,1212.47 1405.31,1213.47 1405.9,1215.79 1406.48,1214.17 1407.07,1214.13 1407.66,1214.29 1408.24,1212.95 1408.83,1215.54 1409.42,1216.4 1410,1218.76 1410.59,1222.32 1411.17,1219.55 1411.76,1220.44 1412.35,1221.39 1412.93,1218.45 1413.52,1218.25 1414.11,1216.87 1414.69,1215.28 1415.28,1215.03 1415.87,1216.29 1416.45,1214.96 1417.04,1213.36 1417.63,1214.51 1418.21,1213.3 1418.8,1211.98 1419.38,1212.26 1419.97,1210.86 1420.56,1209.64 1421.14,1209.58 1421.73,1209.58 1422.32,1208.42 1422.9,1208.31 1423.49,1209.63 1424.08,1213.38 1424.66,1213.02 1425.25,1211.55 1425.83,1213.88 1426.42,1215.19 1427.01,1212.75 1427.59,1211.55 1428.18,1211.67 1428.77,1212.77 1429.35,1210.17 1429.94,1210.07 1430.53,1211.53 1431.11,1210.4 1431.7,1211.82 1432.29,1213.13 1432.87,1211.9 1433.46,1210.88 1434.04,1209.9 1434.63,1211.11 1435.22,1210.07 1435.8,1214.3 1436.39,1214.2 1436.98,1213.96 1437.56,1213.89 1438.15,1212.48 1438.74,1212.32 1439.32,1212.38 1439.91,1211.18 1440.5,1211.2 1441.08,1212.7 1441.67,1212.83 1442.25,1212.97 1442.84,1212.93 1443.43,1213.97 1444.01,1216.25 1444.6,1216.42 1445.19,1215.09 1445.77,1212.54 1446.36,1212.25 1446.95,1211.13 1447.53,1208.67 1448.12,1208.89 1448.7,1212.96 1449.29,1216.72 1449.88,1217.86 1450.46,1216.39 1451.05,1218.34 1451.64,1216.78 1452.22,1215.2 1452.81,1215.16 1453.4,1216.38 1453.98,1217.37 1454.57,1216.94 1455.16,1215.54 1455.74,1216.8 1456.33,1214.21 1456.91,1215.56 1457.5,1214.32 1458.09,1214.25 1458.67,1215.47 1459.26,1213.99 1459.85,1215.22 1460.43,1213.78 1461.02,1211.19 1461.61,1210.05 1462.19,1211.08 1462.78,1210.06 1463.37,1212.68 1463.95,1210.32 1464.54,1206.64 1465.12,1206.89 1465.71,1205.99 1466.3,1206.56 1466.88,1205.81 1467.47,1206.37 1468.06,1207.94 1468.64,1210.51 1469.23,1208.17 1469.82,1209.7 1470.4,1209.78 1470.99,1207.48 1471.57,1209.03 1472.16,1209.13 1472.75,1211.86 1473.33,1213.17 1473.92,1209.88 1474.51,1211.37 1475.09,1211.74 1475.68,1212.06 1476.27,1212 1476.85,1213.31 1477.44,1213.33 1478.03,1211.84 1478.61,1211.99 1479.2,1209.68 1479.78,1209.82 1480.37,1210.23 1480.96,1210.55 1481.54,1208.07 1482.13,1208.57 1482.72,1204.96 1483.3,1204.46 1483.89,1208.76 1484.48,1209.31 1485.06,1208.24 1485.65,1208.53 1486.24,1208.89 1486.82,1212.94 1487.41,1211.73 1487.99,1210.48 1488.58,1210.73 1489.17,1210.8 1489.75,1212.12 1490.34,1213.5 1490.93,1213.8 1491.51,1215.39 1492.1,1217.87 1492.69,1214.97 1493.27,1214.75 1493.86,1215.94 1494.45,1213.44 1495.03,1213.33 1495.62,1214.64 1496.2,1217.26 1496.79,1215.94 1497.38,1214.48 1497.96,1214.62 1498.55,1215.89 1499.14,1219.38 1499.72,1220.32 1500.31,1220.19 1500.9,1218.65 1501.48,1218.18 1502.07,1216.71 1502.65,1219.12 1503.24,1217.64 1503.83,1217.4 1504.41,1219.76 1505,1223.14 1505.59,1221.63 1506.17,1224.88 1506.76,1223.11 1507.35,1223.53 1507.93,1221.81 1508.52,1223.79 1509.11,1221.87 1509.69,1221.29 1510.28,1221.97 1510.86,1220.13 1511.45,1219.81 1512.04,1218.39 1512.62,1216.58 1513.21,1217.61 1513.8,1216.16 1514.38,1215.9 1514.97,1216.99 1515.56,1218.05 1516.14,1217.64 1516.73,1218.92 1517.32,1219.82 1517.9,1218.24 1518.49,1220.5 1519.07,1219.89 1519.66,1220.52 1520.25,1218.59 1520.83,1218.39 1521.42,1216.75 1522.01,1216.24 1522.59,1210.8 1523.18,1209.54 1523.77,1208.49 1524.35,1211.05 1524.94,1211.3 1525.52,1207.58 1526.11,1207.86 1526.7,1210.61 1527.28,1211.19 1527.87,1211.06 1528.46,1211.08 1529.04,1207.7 1529.63,1205.52 1530.22,1205.89 1530.8,1206.33 1531.39,1208.05 1531.98,1209.5 1532.56,1211.06 1533.15,1214.88 1533.73,1214.5 1534.32,1214.49 1534.91,1215.8 1535.49,1215.83 1536.08,1218.19 1536.67,1219.22 1537.25,1216.46 1537.84,1216.56 1538.43,1213.96 1539.01,1211.11 1539.6,1206.3 1540.19,1206.6 1540.77,1207.01 1541.36,1206.02 1541.94,1204.99 1542.53,1204.19 1543.12,1205.96 1543.7,1207.25 1544.29,1209.05 1544.88,1210.72 1545.46,1208.11 1546.05,1208.52 1546.64,1208.83 1547.22,1208.01 1547.81,1205.96 1548.4,1206.5 1548.98,1208.17 1549.57,1209.84 1550.15,1207.84 1550.74,1209.54 1551.33,1209.67 1551.91,1207.3 1552.5,1205.05 1553.09,1209.1 1553.67,1206.72 1554.26,1206.93 1554.85,1207.25 1555.43,1206.14 1556.02,1207.81 1556.6,1209.25 1557.19,1209.56 1557.78,1209.74 1558.36,1209.77 1558.95,1211.1 1559.54,1212.56 1560.12,1212.76 1560.71,1214.12 1561.3,1215.33 1561.88,1215.29 1562.47,1214.08 1563.06,1214.11 1563.64,1215.1 1564.23,1215 1564.81,1214.93 1565.4,1214.83 1565.99,1214.77 1566.57,1214.57 1567.16,1216.92 1567.75,1216.72 1568.33,1215.28 1568.92,1215.05 1569.51,1215.03 1570.09,1218.47 1570.68,1218.38 1571.27,1219.44 1571.85,1217.58 1572.44,1217.27 1573.02,1217.2 1573.61,1216.96 1574.2,1216.98 1574.78,1218.05 1575.37,1217.81 1575.96,1215.33 1576.54,1215.27 1577.13,1213.96 1577.72,1211.62 1578.3,1211.65 1578.89,1213.02 1579.47,1212.91 1580.06,1212.94 1580.65,1212.85 1581.23,1212.87 1581.82,1212.96 1582.41,1212.9 1582.99,1211.99 1583.58,1211.93 1584.17,1210.81 1584.75,1209.65 1585.34,1210.9 1585.93,1212.32 1586.51,1211.29 1587.1,1213.76 1587.68,1213.64 1588.27,1213.49 1588.86,1213.49 1589.44,1211.02 1590.03,1209.83 1590.62,1212.48 1591.2,1213.95 1591.79,1212.74 1592.38,1211.48 1592.96,1212.76 1593.55,1212.56 1594.14,1211.47 1594.72,1210.41 1595.31,1210.42 1595.89,1210.47 1596.48,1210.84 1597.07,1209.64 1597.65,1209.81 1598.24,1210.09 1598.83,1210.29 1599.41,1207.73 1600,1206.98 1600.59,1207.45 1601.17,1207.63 1601.76,1210.56 1602.34,1212.26 1602.93,1214.83 1603.52,1214.7 1604.1,1214.63 1604.69,1215.73 1605.28,1215.4 1605.86,1215.08 1606.45,1212.33 1607.04,1212.31 1607.62,1210.89 1608.21,1212.12 1608.8,1213.59 1609.38,1213.21 1609.97,1214.54 1610.55,1214.66 1611.14,1214.72 1611.73,1213.54 1612.31,1214.67 1612.9,1214.61 1613.49,1214.24 1614.07,1213.29 1614.66,1214.49 1615.25,1214.84 1615.83,1214.75 1616.42,1213.51 1617.01,1212.25 1617.59,1210.96 1618.18,1210.97 1618.76,1208.35 1619.35,1209.73 1619.94,1211.02 1620.52,1212.32 1621.11,1212.5 1621.7,1211.43 1622.28,1210.35 1622.87,1213.06 1623.46,1212.88 1624.04,1210.41 1624.63,1210.47 1625.22,1208.08 1625.8,1212.12 1626.39,1208.48 1626.97,1214.83 1627.56,1213.45 1628.15,1214.58 1628.73,1214.34 1629.32,1213.08 1629.91,1213.01 1630.49,1211.85 1631.08,1212.03 1631.67,1210.86 1632.25,1210.75 1632.84,1209.65 1633.42,1211.23 1634.01,1208.67 1634.6,1209.08 1635.18,1211.81 1635.77,1213.1 1636.36,1214.34 1636.94,1214.29 1637.53,1214.28 1638.12,1214.04 1638.7,1214.06 1639.29,1214.22 1639.88,1213.86 1640.46,1212.42 1641.05,1211.32 1641.63,1212.77 1642.22,1211.74 1642.81,1212.02 1643.39,1214.53 1643.98,1214.59 1644.57,1213.38 1645.15,1212.02 1645.74,1214.59 1646.33,1212.11 1646.91,1211.98 1647.5,1214.49 1648.09,1213.2 1648.67,1212.12 1649.26,1216.03 1649.84,1215.87 1650.43,1214.59 1651.02,1214.33 1651.6,1215.52 1652.19,1215.44 1652.78,1216.68 1653.36,1217.71 1653.95,1219.95 1654.54,1217.01 1655.12,1215.59 1655.71,1212.98 1656.29,1214.2 1656.88,1218.08 1657.47,1218.19 1658.05,1218.08 1658.64,1215.2 1659.23,1218.5 1659.81,1220.98 1660.4,1219.34 1660.99,1218.97 1661.57,1218.73 1662.16,1217.18 1662.75,1219.13 1663.33,1217.04 1663.92,1219.24 1664.5,1218.57 1665.09,1215.99 1665.68,1214.33 1666.26,1212.9 1666.85,1215.5 1667.44,1215.27 1668.02,1216.35 1668.61,1214.92 1669.2,1216.11 1669.78,1214.6 1670.37,1211.87 1670.96,1211.74 1671.54,1209.3 1672.13,1210.69 1672.71,1209.35 1673.3,1208.59 1673.89,1208.71 1674.47,1208.91 1675.06,1211.7 1675.65,1211.88 1676.23,1212.09 1676.82,1213.09 1677.41,1211.66 1677.99,1212.83 1678.58,1213.98 1679.17,1215.16 1679.75,1212.45 1680.34,1213.75 1680.92,1212.69 1681.51,1212.93 1682.1,1211.75 1682.68,1208.18 1683.27,1208.72 1683.86,1206.29 1684.44,1205.37 1685.03,1205.67 1685.62,1206.11 1686.2,1206.58 1686.79,1206.75 1687.37,1209.62 1687.96,1209.87 1688.55,1208.61 1689.13,1210.33 1689.72,1209.07 1690.31,1210.64 1690.89,1210.52 1691.48,1213.11 1692.07,1210.62 1692.65,1209.34 1693.24,1208.46 1693.83,1208.71 1694.41,1209 1695,1209.14 1695.58,1208.11 1696.17,1208.17 1696.76,1206.33 1697.34,1206.73 1697.93,1205.62 1698.52,1206.02 1699.1,1205.06 1699.69,1205.62 1700.28,1205.88 1700.86,1208.9 1701.45,1209.25 1702.04,1210.64 1702.62,1209.51 1703.21,1210.75 1703.79,1208.44 1704.38,1212.54 1704.97,1213.87 1705.55,1208.83 1706.14,1208.94 1706.73,1209.12 1707.31,1209.01 1707.9,1209.01 1708.49,1209.42 1709.07,1209.66 1709.66,1210.99 1710.24,1212.42 1710.83,1209.95 1711.42,1209.94 1712,1212.39 1712.59,1212.48 1713.18,1212.43 1713.76,1213.72 1714.35,1212.32 1714.94,1216.08 1715.52,1214.48 1716.11,1215.52 1716.7,1215.42 1717.28,1215.15 1717.87,1217.79 1718.45,1221.19 1719.04,1220.78 1719.63,1219.26 1720.21,1218.81 1720.8,1218.45 1721.39,1220.73 1721.97,1219.18 1722.56,1220.13 1723.15,1219.77 1723.73,1219.37 1724.32,1217.61 1724.91,1216.2 1725.49,1213.61 1726.08,1214.89 1726.66,1215.9 1727.25,1214.06 1727.84,1215.03 1728.42,1213.79 1729.01,1214.86 1729.6,1216.13 1730.18,1215.83 1730.77,1215.9 1731.36,1214.45 1731.94,1213.35 1732.53,1214.72 1733.11,1217.24 1733.7,1217.13 1734.29,1218.01 1734.87,1215.32 1735.46,1214.03 1736.05,1214.03 1736.63,1215.3 1737.22,1215.32 1737.81,1215.33 1738.39,1217.62 1738.98,1217.23 1739.57,1214.33 1740.15,1213.34 1740.74,1213.47 1741.32,1212.18 1741.91,1212.19 1742.5,1210.96 1743.08,1209.85 1743.67,1208.95 1744.26,1208.99 1744.84,1209.33 1745.43,1208.1 1746.02,1205.91 1746.6,1205.97 1747.19,1203.79 1747.78,1206.97 1748.36,1206.16 1748.95,1206.55 1749.53,1208.29 1750.12,1208.75 1750.71,1207.64 1751.29,1209.24 1751.88,1208.51 1752.47,1208.86 1753.05,1212.47 1753.64,1212.46 1754.23,1211.38 1754.81,1210.39 1755.4,1208.02 1755.99,1210.89 1756.57,1212.23 1757.16,1213.47 1757.74,1214.52 1758.33,1214.43 1758.92,1216.91 1759.5,1216.54 1760.09,1213.76 1760.68,1215.11 1761.26,1216.14 1761.85,1215.98 1762.44,1216.93 1763.02,1216.91 1763.61,1219.39 1764.19,1220.38 1764.78,1219.75 1765.37,1219.49 1765.95,1220.34 1766.54,1222.4 1767.13,1221.73 1767.71,1218.62 1768.3,1218.44 1768.89,1216.85 1769.47,1218.95 1770.06,1218.6 1770.65,1217.08 1771.23,1214.22 1771.82,1215.35 1772.4,1215.36 1772.99,1217.58 1773.58,1215.99 1774.16,1215.79 1774.75,1211.71 1775.34,1208.1 1775.92,1208.57 1776.51,1207.27 1777.1,1206.49 1777.68,1204.14 1778.27,1202.21 1778.86,1205.24 1779.44,1204.24 1780.03,1204.84 1780.61,1204.15 1781.2,1207.04 1781.79,1208.95 1782.37,1210.36 1782.96,1204.1 1783.55,1206.12 1784.13,1206.24 1784.72,1206.34 1785.31,1207.84 1785.89,1209.28 1786.48,1210.78 1787.06,1213.49 1787.65,1212.36 1788.24,1213.63 1788.82,1211.14 1789.41,1211.05 1790,1212.39 1790.58,1212.26 1791.17,1211.18 1791.76,1212.5 1792.34,1212.43 1792.93,1213.85 1793.52,1215.02 1794.1,1215.08 1794.69,1216.12 1795.27,1216.1 1795.86,1217.17 1796.45,1214.5 1797.03,1216.94 1797.62,1217.83 1798.21,1218.69 1798.79,1218.1 1799.38,1217.73 1799.97,1217.39 1800.55,1215.77 1801.14,1215.33 1801.73,1216.37 1802.31,1217.35 1802.9,1217.15 1803.48,1216.97 1804.07,1212.99 1804.66,1216.32 1805.24,1215.16 1805.83,1213.89 1806.42,1214.02 1807,1215.12 1807.59,1213.84 1808.18,1213.62 1808.76,1213.73 1809.35,1214.94 1809.94,1215.96 1810.52,1217.31 1811.11,1216.05 1811.69,1217.19 1812.28,1218.17 1812.87,1216.7 1813.45,1216.49 1814.04,1215.09 1814.63,1216.35 1815.21,1216.33 1815.8,1213.57 1816.39,1211.13 1816.97,1209.92 1817.56,1210.18 1818.14,1211.78 1818.73,1213.13 1819.32,1211.74 1819.9,1214.27 1820.49,1215.29 1821.08,1213.71 1821.66,1214.6 1822.25,1217.03 1822.84,1216.02 1823.42,1214.55 1824.01,1214.81 1824.6,1213.45 1825.18,1215.87 1825.77,1213.32 1826.35,1214.62 1826.94,1206.89 1827.53,1208.54 1828.11,1210.19 1828.7,1212.84 1829.29,1210.19 1829.87,1207.46 1830.46,1207.73 1831.05,1209.3 1831.63,1208.21 1832.22,1205.9 1832.81,1204.06 1833.39,1206.93 1833.98,1205.94 1834.56,1207.71 1835.15,1209.28 1835.74,1209.69 1836.32,1211.34 1836.91,1213.78 1837.5,1213.65 1838.08,1213.86 1838.67,1209.99 1839.26,1211.47 1839.84,1210.09 1840.43,1208.95 1841.01,1206.57 1841.6,1208.34 1842.19,1208.77 1842.77,1209.05 1843.36,1209.45 1843.95,1208.33 1844.53,1208.48 1845.12,1209.98 1845.71,1210.22 1846.29,1212.79 1846.88,1212.88 1847.47,1212.75 1848.05,1213.86 1848.64,1213.72 1849.22,1213.58 1849.81,1212.58 1850.4,1213.91 1850.98,1214.12 1851.57,1212.6 1852.16,1216.24 1852.74,1218.56 1853.33,1218.18 1853.92,1216.74 1854.5,1216.63 1855.09,1220.41 1855.68,1219.84 1856.26,1219.55 1856.85,1219.25 1857.43,1218.69 1858.02,1220.74 1858.61,1221.68 1859.19,1220.14 1859.78,1219.62 1860.37,1217.74 1860.95,1218.56 1861.54,1217.1 1862.13,1210.84 1862.71,1209.52 1863.3,1211.27 1863.88,1211.19 1864.47,1212.62 1865.06,1213.88 1865.64,1213.85 1866.23,1213.59 1866.82,1213.36 1867.4,1213.52 1867.99,1213.4 1868.58,1213 1869.16,1213.16 1869.75,1211.61 1870.34,1211.66 1870.92,1211.63 1871.51,1210.05 1872.09,1211.42 1872.68,1211.39 1873.27,1212.61 1873.85,1212.64 1874.44,1213.84 1875.03,1214.89 1875.61,1214.89 1876.2,1214.85 1876.79,1214.68 1877.37,1213.17 1877.96,1213.08 1878.55,1215.66 1879.13,1219.35 1879.72,1217.91 1880.3,1217.58 1880.89,1218.53 1881.48,1219.57 1882.06,1216.81 1882.65,1216.65 1883.24,1220.01 1883.82,1219.64 1884.41,1216.73 1885,1217.62 1885.58,1220 1886.17,1217.01 1886.76,1217.02 1887.34,1214.44 1887.93,1215.67 1888.51,1217.25 1889.1,1219.7 1889.69,1219.33 1890.27,1218.88 1890.86,1215.98 1891.45,1218.08 1892.03,1217.88 1892.62,1217.58 1893.21,1217.2 1893.79,1218.08 1894.38,1217.75 1894.96,1217.39 1895.55,1216.76 1896.14,1213.88 1896.72,1215.28 1897.31,1217.82 1897.9,1219.02 1898.48,1218.88 1899.07,1215.88 1899.66,1215.35 1900.24,1212.79 1900.83,1215.36 1901.42,1214.21 1902,1216.63 1902.59,1215.03 1903.17,1215.33 1903.76,1216.6 1904.35,1213.91 1904.93,1213.88 1905.52,1212.75 1906.11,1212.97 1906.69,1211.74 1907.28,1210.79 1907.87,1213.3 1908.45,1213.23 1909.04,1211.68 1909.63,1210.19 1910.21,1207.28 1910.8,1206.29 1911.38,1208.04 1911.97,1211.02 1912.56,1210.87 1913.14,1209.41 1913.73,1207.8 1914.32,1210.54 1914.9,1209.5 1915.49,1209.41 1916.08,1209.8 1916.66,1208.57 1917.25,1207.71 1917.83,1209.32 1918.42,1209.6 1919.01,1211.04 1919.59,1212.39 1920.18,1209.78 1920.77,1207.52 1921.35,1210.56 1921.94,1209.36 1922.53,1209.6 1923.11,1209.88 1923.7,1203.75 1924.29,1204.23 1924.87,1205.87 1925.46,1207.45 1926.04,1205.16 1926.63,1209.28 1927.22,1205.64 1927.8,1207.35 1928.39,1210.06 1928.98,1212.87 1929.56,1213.08 1930.15,1213.17 1930.74,1214.69 1931.32,1214.57 1931.91,1215.83 1932.5,1214.39 1933.08,1215.67 1933.67,1215.29 1934.25,1214.01 1934.84,1212.82 1935.43,1214.12 1936.01,1216.7 1936.6,1216.58 1937.19,1213.66 1937.77,1213.61 1938.36,1211.13 1938.95,1210.22 1939.53,1210.48 1940.12,1209.28 1940.71,1210.84 1941.29,1210.86 1941.88,1209.53 1942.46,1209.82 1943.05,1211.36 1943.64,1210.23 1944.22,1211.41 1944.81,1207.77 1945.4,1209.16 1945.98,1208.43 1946.57,1205.11 1947.16,1206.72 1947.74,1206.9 1948.33,1205.94 1948.91,1206.2 1949.5,1209.14 1950.09,1209.53 1950.67,1209.67 1951.26,1208.32 1951.85,1208.59 1952.43,1208.79 1953.02,1210.32 1953.61,1211.45 1954.19,1213.96 1954.78,1211.32 1955.37,1210.1 1955.95,1211.64 1956.54,1212.88 1957.12,1211.63 1957.71,1211.61 1958.3,1210.69 1958.88,1211.86 1959.47,1212.02 1960.06,1208.32 1960.64,1206.96 1961.23,1211.31 1961.82,1211.39 1962.4,1211.18 1962.99,1212.67 1963.58,1214.1 1964.16,1214.2 1964.75,1214.21 1965.33,1214.02 1965.92,1215.29 1966.51,1211.46 1967.09,1212.82 1967.68,1210.35 1968.27,1210.47 1968.85,1212.08 1969.44,1211.02 1970.03,1214.94 1970.61,1213.89 1971.2,1217.78 1971.78,1218.81 1972.37,1218.76 1972.96,1219.73 1973.54,1220.69 1974.13,1220.28 1974.72,1220.07 1975.3,1216.13 1975.89,1218.53 1976.48,1219.44 1977.06,1220.42 1977.65,1221.42 1978.24,1219.78 1978.82,1220.64 1979.41,1220.41 1979.99,1218.79 1980.58,1222.11 1981.17,1224.14 1981.75,1223.6 1982.34,1220.77 1982.93,1220.47 1983.51,1218.71 1984.1,1218.46 1984.69,1216.74 1985.27,1211.67 1985.86,1209.12 1986.45,1208.97 1987.03,1206.73 1987.62,1208.22 1988.2,1209.69 1988.79,1208.51 1989.38,1208.63 1989.96,1208.75 1990.55,1209.2 1991.14,1209.51 1991.72,1211.04 1992.31,1212.51 1992.9,1211.56 1993.48,1212.9 1994.07,1214.18 1994.65,1212.71 1995.24,1211.28 1995.83,1215.34 1996.41,1216.7 1997,1216.46 1997.59,1216.26 1998.17,1218.56 1998.76,1220.61 1999.35,1217.64 1999.93,1217.4 2000.52,1218.37 2001.11,1215.46 2001.69,1212.96 2002.28,1214.25 2002.86,1213.15 2003.45,1211.56 2004.04,1211.69 2004.62,1210.66 2005.21,1212.27 2005.8,1214.95 2006.38,1216.11 2006.97,1214.55 2007.56,1210.87 2008.14,1212.24 2008.73,1209.87 2009.32,1207.26 2009.9,1210.02 2010.49,1211.8 2011.07,1213.18 2011.66,1215.69 2012.25,1215.78 2012.83,1218.23 2013.42,1218.17 2014.01,1218.12 2014.59,1220.28 2015.18,1218.7 2015.77,1219.9 2016.35,1221.16 2016.94,1219.74 2017.53,1218.22 2018.11,1217.89 2018.7,1217.66 2019.28,1217.47 2019.87,1217.06 2020.46,1216.72 2021.04,1215.2 2021.63,1212.43 2022.22,1212.46 2022.8,1212.72 2023.39,1213.87 2023.98,1213.64 2024.56,1213.38 2025.15,1212.02 2025.73,1212.21 2026.32,1212.51 2026.91,1214.92 2027.49,1217.21 2028.08,1216.88 2028.67,1215.48 2029.25,1216.64 2029.84,1216.55 2030.43,1215.2 2031.01,1215.15 2031.6,1212.45 2032.19,1211.06 2032.77,1207.62 2033.36,1206.76 2033.94,1205.97 2034.53,1207.33 2035.12,1210.2 2035.7,1210.2 2036.29,1213.02 2036.88,1211.7 2037.46,1212.89 2038.05,1211.68 2038.64,1209.07 2039.22,1210.33 2039.81,1206.77 2040.4,1206.11 2040.98,1207.44 2041.57,1209.12 2042.15,1208.08 2042.74,1208.23 2043.33,1207.25 2043.91,1207.37 2044.5,1211.44 2045.09,1213.85 2045.67,1211.27 2046.26,1207.53 2046.85,1207.93 2047.43,1208.29 2048.02,1212.62 2048.6,1213.79 2049.19,1212.21 2049.78,1211.1 2050.36,1208.65 2050.95,1208.65 2051.54,1211.21 2052.12,1208.88 2052.71,1206.94 2053.3,1207.32 2053.88,1207.43 2054.47,1210.5 2055.06,1210.74 2055.64,1208.49 2056.23,1207.53 2056.81,1209.1 2057.4,1207.97 2057.99,1207 2058.57,1204.65 2059.16,1205.11 2059.75,1204.47 2060.33,1203.9 2060.92,1202.99 2061.51,1205.04 2062.09,1206.6 2062.68,1208.12 2063.27,1209.47 2063.85,1208 2064.44,1207.98 2065.02,1208.35 2065.61,1207.59 2066.2,1210.45 2066.78,1212.09 2067.37,1215.98 2067.96,1214.57 2068.54,1214.55 2069.13,1213.46 2069.72,1212.31 2070.3,1212.2 2070.89,1211.25 2071.48,1211.23 2072.06,1211.55 2072.65,1211.87 2073.23,1214.15 2073.82,1214.08 2074.41,1210.02 2074.99,1211.48 2075.58,1212.62 2076.17,1213.92 2076.75,1215.24 2077.34,1216.53 2077.93,1217.47 2078.51,1217.3 2079.1,1218.24 2079.68,1219.07 2080.27,1220.06 2080.86,1219.98 2081.44,1220.82 2082.03,1225.38 2082.62,1221.14 2083.2,1220.73 2083.79,1221.61 2084.38,1222.34 2084.96,1220.72 2085.55,1218.69 2086.14,1217.16 2086.72,1215.4 2087.31,1213.91 2087.89,1213.84 2088.48,1214.94 2089.07,1213.65 2089.65,1213.64 2090.24,1213.44 2090.83,1213.32 2091.41,1212.17 2092,1212.27 2092.59,1212.31 2093.17,1210.94 2093.76,1208.54 2094.35,1207.66 2094.93,1207.95 2095.52,1206.87 2096.1,1208.21 2096.69,1206.09 2097.28,1206.38 2097.86,1207.97 2098.45,1208.37 2099.04,1212.37 2099.62,1216.01 2100.21,1214.87 2100.8,1214.84 2101.38,1216.02 2101.97,1214.83 2102.55,1213.67 2103.14,1213.73 2103.73,1215.89 2104.31,1215.67 2104.9,1214.45 2105.49,1214.58 2106.07,1213.35 2106.66,1214.76 2107.25,1215.84 2107.83,1217.13 2108.42,1214.57 2109.01,1212.86 2109.59,1213.04 2110.18,1213.07 2110.76,1214.35 2111.35,1213.33 2111.94,1212.21 2112.52,1211.06 2113.11,1212.43 2113.7,1213.45 2114.28,1214.76 2114.87,1214.75 2115.46,1212.01 2116.04,1212.32 2116.63,1211.14 2117.22,1212.45 2117.8,1216.52 2118.39,1213.75 2118.97,1212.61 2119.56,1212.82 2120.15,1212.77 2120.73,1210.25 2121.32,1214.07 2121.91,1213.77 2122.49,1211.09 2123.08,1211.32 2123.67,1211.05 2124.25,1212.17 2124.84,1213.2 2125.42,1211.86 2126.01,1211.98 2126.6,1210.87 2127.18,1212.49 2127.77,1212.63 2128.36,1210.07 2128.94,1213.93 2129.53,1215.3 2130.12,1215.21 2130.7,1213.87 2131.29,1214.98 2131.88,1214.56 2132.46,1214.2 2133.05,1214.26 2133.63,1215.33 2134.22,1215.06 2134.81,1214.69 2135.39,1214.71 2135.98,1214.68 2136.57,1215.84 2137.15,1219.39 2137.74,1217.85 2138.33,1217.67 2138.91,1214.95 2139.5,1216.12 2140.09,1215.95 2140.67,1214.58 2141.26,1214.57 2141.84,1214.3 2142.43,1214.13 2143.02,1217.83 2143.6,1213.55 2144.19,1212.29 2144.78,1211.15 2145.36,1211.46 2145.95,1210.26 2146.54,1211.62 2147.12,1212.94 2147.71,1214.29 2148.3,1213.01 2148.88,1211.72 2149.47,1213.08 2150.05,1214.17 2150.64,1213.05 2151.23,1214.04 2151.81,1215.02 2152.4,1213.63 2152.99,1212.6 2153.57,1210.37 2154.16,1209.2 2154.75,1210.62 2155.33,1212.01 2155.92,1210.76 2156.5,1209.77 2157.09,1210.94 2157.68,1208.47 2158.26,1209.92 \"/>\n<path clip-path=\"url(#clip792)\" d=\"M986.025 1213.5 L986.612 1213.5 L987.198 1213.5 L987.785 1213.5 L988.371 1213.5 L988.957 1213.5 L989.544 1213.5 L990.13 1213.5 L990.717 1213.5 L991.303 1213.5 L991.889 1213.5 L992.476 1213.5 L993.062 1213.5 L993.649 1213.5 L994.235 1213.5 L994.822 1213.5 L995.408 1213.5 L995.994 1213.5 L996.581 1213.5 L997.167 1213.5 L997.754 1213.5 L998.34 1213.5 L998.926 1213.5 L999.513 1213.5 L1000.1 1213.5 L1000.69 1213.5 L1001.27 1213.5 L1001.86 1213.5 L1002.44 1213.5 L1003.03 1213.5 L1003.62 1213.5 L1004.2 1213.5 L1004.79 1213.5 L1005.38 1213.5 L1005.96 1213.5 L1006.55 1213.5 L1007.14 1213.5 L1007.72 1213.5 L1008.31 1213.5 L1008.9 1213.5 L1009.48 1213.5 L1010.07 1213.5 L1010.65 1213.5 L1011.24 1213.5 L1011.83 1213.5 L1012.41 1213.5 L1013 1213.5 L1013.59 1213.5 L1014.17 1213.5 L1014.76 1213.5 L1015.35 1213.5 L1015.93 1213.5 L1016.52 1213.5 L1017.11 1213.5 L1017.69 1213.5 L1018.28 1213.5 L1018.86 1213.5 L1019.45 1213.5 L1020.04 1213.5 L1020.62 1213.5 L1021.21 1213.5 L1021.8 1213.5 L1022.38 1213.5 L1022.97 1213.5 L1023.56 1213.5 L1024.14 1213.5 L1024.73 1213.5 L1025.32 1213.5 L1025.9 1213.5 L1026.49 1213.5 L1027.07 1213.5 L1027.66 1213.5 L1028.25 1213.5 L1028.83 1213.5 L1029.42 1213.5 L1030.01 1213.5 L1030.59 1213.5 L1031.18 1213.5 L1031.77 1213.5 L1032.35 1213.5 L1032.94 1213.5 L1033.52 1213.5 L1034.11 1213.5 L1034.7 1213.5 L1035.28 1213.5 L1035.87 1213.5 L1036.46 1213.5 L1037.04 1213.5 L1037.63 1213.5 L1038.22 1213.5 L1038.8 1213.5 L1039.39 1213.5 L1039.98 1213.5 L1040.56 1213.5 L1041.15 1213.5 L1041.73 1213.5 L1042.32 1213.5 L1042.91 1213.5 L1043.49 1213.5 L1044.08 1213.5 L1044.67 1213.5 L1045.25 1213.5 L1045.84 1213.5 L1046.43 1213.5 L1047.01 1213.5 L1047.6 1213.5 L1048.19 1213.5 L1048.77 1213.5 L1049.36 1213.5 L1049.94 1213.5 L1050.53 1213.5 L1051.12 1213.5 L1051.7 1213.5 L1052.29 1213.5 L1052.88 1213.5 L1053.46 1213.5 L1054.05 1213.5 L1054.64 1213.5 L1055.22 1213.5 L1055.81 1213.5 L1056.39 1213.5 L1056.98 1213.5 L1057.57 1213.5 L1058.15 1213.5 L1058.74 1213.5 L1059.33 1213.5 L1059.91 1213.5 L1060.5 1213.5 L1061.09 1213.5 L1061.67 1213.5 L1062.26 1213.5 L1062.85 1213.5 L1063.43 1213.5 L1064.02 1213.5 L1064.6 1213.5 L1065.19 1213.5 L1065.78 1213.5 L1066.36 1213.5 L1066.95 1213.5 L1067.54 1213.5 L1068.12 1213.5 L1068.71 1213.5 L1069.3 1213.5 L1069.88 1213.5 L1070.47 1213.5 L1071.06 1213.5 L1071.64 1213.5 L1072.23 1213.5 L1072.81 1213.5 L1073.4 1213.5 L1073.99 1213.5 L1074.57 1213.5 L1075.16 1213.5 L1075.75 1213.5 L1076.33 1213.5 L1076.92 1213.5 L1077.51 1213.5 L1078.09 1213.5 L1078.68 1213.5 L1079.26 1213.5 L1079.85 1213.5 L1080.44 1213.5 L1081.02 1213.5 L1081.61 1213.5 L1082.2 1213.5 L1082.78 1213.5 L1083.37 1213.5 L1083.96 1213.5 L1084.54 1213.5 L1085.13 1213.5 L1085.72 1213.5 L1086.3 1213.5 L1086.89 1213.5 L1087.47 1213.5 L1088.06 1213.5 L1088.65 1213.5 L1089.23 1213.5 L1089.82 1213.5 L1090.41 1213.5 L1090.99 1213.5 L1091.58 1213.5 L1092.17 1213.5 L1092.75 1213.5 L1093.34 1213.5 L1093.93 1213.5 L1094.51 1213.5 L1095.1 1213.5 L1095.68 1213.5 L1096.27 1213.5 L1096.86 1213.5 L1097.44 1213.5 L1098.03 1213.5 L1098.62 1213.5 L1099.2 1213.5 L1099.79 1213.5 L1100.38 1213.5 L1100.96 1213.5 L1101.55 1213.5 L1102.14 1213.5 L1102.72 1213.5 L1103.31 1213.5 L1103.89 1213.5 L1104.48 1213.5 L1105.07 1213.5 L1105.65 1213.5 L1106.24 1213.5 L1106.83 1213.5 L1107.41 1213.5 L1108 1213.5 L1108.59 1213.5 L1109.17 1213.5 L1109.76 1213.5 L1110.34 1213.5 L1110.93 1213.5 L1111.52 1213.5 L1112.1 1213.5 L1112.69 1213.5 L1113.28 1213.5 L1113.86 1213.5 L1114.45 1213.5 L1115.04 1213.5 L1115.62 1213.5 L1116.21 1213.5 L1116.8 1213.5 L1117.38 1213.5 L1117.97 1213.5 L1118.55 1213.5 L1119.14 1213.5 L1119.73 1213.5 L1120.31 1213.5 L1120.9 1213.5 L1121.49 1213.5 L1122.07 1213.5 L1122.66 1213.5 L1123.25 1213.5 L1123.83 1213.5 L1124.42 1213.5 L1125.01 1213.5 L1125.59 1213.5 L1126.18 1213.5 L1126.76 1213.5 L1127.35 1213.5 L1127.94 1213.5 L1128.52 1213.5 L1129.11 1213.5 L1129.7 1213.5 L1130.28 1213.5 L1130.87 1213.5 L1131.46 1213.5 L1132.04 1213.5 L1132.63 1213.5 L1133.21 1213.5 L1133.8 1213.5 L1134.39 1213.5 L1134.97 1213.5 L1135.56 1213.5 L1136.15 1213.5 L1136.73 1213.5 L1137.32 1213.5 L1137.91 1213.5 L1138.49 1213.5 L1139.08 1213.5 L1139.67 1213.5 L1140.25 1213.5 L1140.84 1213.5 L1141.42 1213.5 L1142.01 1213.5 L1142.6 1213.5 L1143.18 1213.5 L1143.77 1213.5 L1144.36 1213.5 L1144.94 1213.5 L1145.53 1213.5 L1146.12 1213.5 L1146.7 1213.5 L1147.29 1213.5 L1147.88 1213.5 L1148.46 1213.5 L1149.05 1213.5 L1149.63 1213.5 L1150.22 1213.5 L1150.81 1213.5 L1151.39 1213.5 L1151.98 1213.5 L1152.57 1213.5 L1153.15 1213.5 L1153.74 1213.5 L1154.33 1213.5 L1154.91 1213.5 L1155.5 1213.5 L1156.09 1213.5 L1156.67 1213.5 L1157.26 1213.5 L1157.84 1213.5 L1158.43 1213.5 L1159.02 1213.5 L1159.6 1213.5 L1160.19 1213.5 L1160.78 1213.5 L1161.36 1213.5 L1161.95 1213.5 L1162.54 1213.5 L1163.12 1213.5 L1163.71 1213.5 L1164.29 1213.5 L1164.88 1213.5 L1165.47 1213.5 L1166.05 1213.5 L1166.64 1213.5 L1167.23 1213.5 L1167.81 1213.5 L1168.4 1213.5 L1168.99 1213.5 L1169.57 1213.5 L1170.16 1213.5 L1170.75 1213.5 L1171.33 1213.5 L1171.92 1213.5 L1172.5 1213.5 L1173.09 1213.5 L1173.68 1213.5 L1174.26 1213.5 L1174.85 1213.5 L1175.44 1213.5 L1176.02 1213.5 L1176.61 1213.5 L1177.2 1213.5 L1177.78 1213.5 L1178.37 1213.5 L1178.96 1213.5 L1179.54 1213.5 L1180.13 1213.5 L1180.71 1213.5 L1181.3 1213.5 L1181.89 1213.5 L1182.47 1213.5 L1183.06 1213.5 L1183.65 1213.5 L1184.23 1213.5 L1184.82 1213.5 L1185.41 1213.5 L1185.99 1213.5 L1186.58 1213.5 L1187.16 1213.5 L1187.75 1213.5 L1188.34 1213.5 L1188.92 1213.5 L1189.51 1213.5 L1190.1 1213.5 L1190.68 1213.5 L1191.27 1213.5 L1191.86 1213.5 L1192.44 1213.5 L1193.03 1213.5 L1193.62 1213.5 L1194.2 1213.5 L1194.79 1213.5 L1195.37 1213.5 L1195.96 1213.5 L1196.55 1213.5 L1197.13 1213.5 L1197.72 1213.5 L1198.31 1213.5 L1198.89 1213.5 L1199.48 1213.5 L1200.07 1213.5 L1200.65 1213.5 L1201.24 1213.5 L1201.83 1213.5 L1202.41 1213.5 L1203 1213.5 L1203.58 1213.5 L1204.17 1213.5 L1204.76 1213.5 L1205.34 1213.5 L1205.93 1213.5 L1206.52 1213.5 L1207.1 1213.5 L1207.69 1213.5 L1208.28 1213.5 L1208.86 1213.5 L1209.45 1213.5 L1210.03 1213.5 L1210.62 1213.5 L1211.21 1213.5 L1211.79 1213.5 L1212.38 1213.5 L1212.97 1213.5 L1213.55 1213.5 L1214.14 1213.5 L1214.73 1213.5 L1215.31 1213.5 L1215.9 1213.5 L1216.49 1213.5 L1217.07 1213.5 L1217.66 1213.5 L1218.24 1213.5 L1218.83 1213.5 L1219.42 1213.5 L1220 1213.5 L1220.59 1213.5 L1221.18 1213.5 L1221.76 1213.5 L1222.35 1213.5 L1222.94 1213.5 L1223.52 1213.5 L1224.11 1213.5 L1224.7 1213.5 L1225.28 1213.5 L1225.87 1213.5 L1226.45 1213.5 L1227.04 1213.5 L1227.63 1213.5 L1228.21 1213.5 L1228.8 1213.5 L1229.39 1213.5 L1229.97 1213.5 L1230.56 1213.5 L1231.15 1213.5 L1231.73 1213.5 L1232.32 1213.5 L1232.91 1213.5 L1233.49 1213.5 L1234.08 1213.5 L1234.66 1213.5 L1235.25 1213.5 L1235.84 1213.5 L1236.42 1213.5 L1237.01 1213.5 L1237.6 1213.5 L1238.18 1213.5 L1238.77 1213.5 L1239.36 1213.5 L1239.94 1213.5 L1240.53 1213.5 L1241.11 1213.5 L1241.7 1213.5 L1242.29 1213.5 L1242.87 1213.5 L1243.46 1213.5 L1244.05 1213.5 L1244.63 1213.5 L1245.22 1213.5 L1245.81 1213.5 L1246.39 1213.5 L1246.98 1213.5 L1247.57 1213.5 L1248.15 1213.5 L1248.74 1213.5 L1249.32 1213.5 L1249.91 1213.5 L1250.5 1213.5 L1251.08 1213.5 L1251.67 1213.5 L1252.26 1213.5 L1252.84 1213.5 L1253.43 1213.5 L1254.02 1213.5 L1254.6 1213.5 L1255.19 1213.5 L1255.78 1213.5 L1256.36 1213.5 L1256.95 1213.5 L1257.53 1213.5 L1258.12 1213.5 L1258.71 1213.5 L1259.29 1213.5 L1259.88 1213.5 L1260.47 1213.5 L1261.05 1213.5 L1261.64 1213.5 L1262.23 1213.5 L1262.81 1213.5 L1263.4 1213.5 L1263.98 1213.5 L1264.57 1213.5 L1265.16 1213.5 L1265.74 1213.5 L1266.33 1213.5 L1266.92 1213.5 L1267.5 1213.5 L1268.09 1213.5 L1268.68 1213.5 L1269.26 1213.5 L1269.85 1213.5 L1270.44 1213.5 L1271.02 1213.5 L1271.61 1213.5 L1272.19 1213.5 L1272.78 1213.5 L1273.37 1213.5 L1273.95 1213.5 L1274.54 1213.5 L1275.13 1213.5 L1275.71 1213.5 L1276.3 1213.5 L1276.89 1213.5 L1277.47 1213.5 L1278.06 1213.5 L1278.65 1213.5 L1279.23 1213.5 L1279.82 1213.5 L1280.4 1213.5 L1280.99 1213.5 L1281.58 1213.5 L1282.16 1213.5 L1282.75 1213.5 L1283.34 1213.5 L1283.92 1213.5 L1284.51 1213.5 L1285.1 1213.5 L1285.68 1213.5 L1286.27 1213.5 L1286.86 1213.5 L1287.44 1213.5 L1288.03 1213.5 L1288.61 1213.5 L1289.2 1213.5 L1289.79 1213.5 L1290.37 1213.5 L1290.96 1213.5 L1291.55 1213.5 L1292.13 1213.5 L1292.72 1213.5 L1293.31 1213.5 L1293.89 1213.5 L1294.48 1213.5 L1295.06 1213.5 L1295.65 1213.5 L1296.24 1213.5 L1296.82 1213.5 L1297.41 1213.5 L1298 1213.5 L1298.58 1213.5 L1299.17 1213.5 L1299.76 1213.5 L1300.34 1213.5 L1300.93 1213.5 L1301.52 1213.5 L1302.1 1213.5 L1302.69 1213.5 L1303.27 1213.5 L1303.86 1213.5 L1304.45 1213.5 L1305.03 1213.5 L1305.62 1213.5 L1306.21 1213.5 L1306.79 1213.5 L1307.38 1213.5 L1307.97 1213.5 L1308.55 1213.5 L1309.14 1213.5 L1309.73 1213.5 L1310.31 1213.5 L1310.9 1213.5 L1311.48 1213.5 L1312.07 1213.5 L1312.66 1213.5 L1313.24 1213.5 L1313.83 1213.5 L1314.42 1213.5 L1315 1213.5 L1315.59 1213.5 L1316.18 1213.5 L1316.76 1213.5 L1317.35 1213.5 L1317.93 1213.5 L1318.52 1213.5 L1319.11 1213.5 L1319.69 1213.5 L1320.28 1213.5 L1320.87 1213.5 L1321.45 1213.5 L1322.04 1213.5 L1322.63 1213.5 L1323.21 1213.5 L1323.8 1213.5 L1324.39 1213.5 L1324.97 1213.5 L1325.56 1213.5 L1326.14 1213.5 L1326.73 1213.5 L1327.32 1213.5 L1327.9 1213.5 L1328.49 1213.5 L1329.08 1213.5 L1329.66 1213.5 L1330.25 1213.5 L1330.84 1213.5 L1331.42 1213.5 L1332.01 1213.5 L1332.6 1213.5 L1333.18 1213.5 L1333.77 1213.5 L1334.35 1213.5 L1334.94 1213.5 L1335.53 1213.5 L1336.11 1213.5 L1336.7 1213.5 L1337.29 1213.5 L1337.87 1213.5 L1338.46 1213.5 L1339.05 1213.5 L1339.63 1213.5 L1340.22 1213.5 L1340.8 1213.5 L1341.39 1213.5 L1341.98 1213.5 L1342.56 1213.5 L1343.15 1213.5 L1343.74 1213.5 L1344.32 1213.5 L1344.91 1213.5 L1345.5 1213.5 L1346.08 1213.5 L1346.67 1213.5 L1347.26 1213.5 L1347.84 1213.5 L1348.43 1213.5 L1349.01 1213.5 L1349.6 1213.5 L1350.19 1213.5 L1350.77 1213.5 L1351.36 1213.5 L1351.95 1213.5 L1352.53 1213.5 L1353.12 1213.5 L1353.71 1213.5 L1354.29 1213.5 L1354.88 1213.5 L1355.47 1213.5 L1356.05 1213.5 L1356.64 1213.5 L1357.22 1213.5 L1357.81 1213.5 L1358.4 1213.5 L1358.98 1213.5 L1359.57 1213.5 L1360.16 1213.5 L1360.74 1213.5 L1361.33 1213.5 L1361.92 1213.5 L1362.5 1213.5 L1363.09 1213.5 L1363.68 1213.5 L1364.26 1213.5 L1364.85 1213.5 L1365.43 1213.5 L1366.02 1213.5 L1366.61 1213.5 L1367.19 1213.5 L1367.78 1213.5 L1368.37 1213.5 L1368.95 1213.5 L1369.54 1213.5 L1370.13 1213.5 L1370.71 1213.5 L1371.3 1213.5 L1371.88 1213.5 L1372.47 1213.5 L1373.06 1213.5 L1373.64 1213.5 L1374.23 1213.5 L1374.82 1213.5 L1375.4 1213.5 L1375.99 1213.5 L1376.58 1213.5 L1377.16 1213.5 L1377.75 1213.5 L1378.34 1213.5 L1378.92 1213.5 L1379.51 1213.5 L1380.09 1213.5 L1380.68 1213.5 L1381.27 1213.5 L1381.85 1213.5 L1382.44 1213.5 L1383.03 1213.5 L1383.61 1213.5 L1384.2 1213.5 L1384.79 1213.5 L1385.37 1213.5 L1385.96 1213.5 L1386.55 1213.5 L1387.13 1213.5 L1387.72 1213.5 L1388.3 1213.5 L1388.89 1213.5 L1389.48 1213.5 L1390.06 1213.5 L1390.65 1213.5 L1391.24 1213.5 L1391.82 1213.5 L1392.41 1213.5 L1393 1213.5 L1393.58 1213.5 L1394.17 1213.5 L1394.75 1213.5 L1395.34 1213.5 L1395.93 1213.5 L1396.51 1213.5 L1397.1 1213.5 L1397.69 1213.5 L1398.27 1213.5 L1398.86 1213.5 L1399.45 1213.5 L1400.03 1213.5 L1400.62 1213.5 L1401.21 1213.5 L1401.79 1213.5 L1402.38 1213.5 L1402.96 1213.5 L1403.55 1213.5 L1404.14 1213.5 L1404.72 1213.5 L1405.31 1213.5 L1405.9 1213.5 L1406.48 1213.5 L1407.07 1213.5 L1407.66 1213.5 L1408.24 1213.5 L1408.83 1213.5 L1409.42 1213.5 L1410 1213.5 L1410.59 1213.5 L1411.17 1213.5 L1411.76 1213.5 L1412.35 1213.5 L1412.93 1213.5 L1413.52 1213.5 L1414.11 1213.5 L1414.69 1213.5 L1415.28 1213.5 L1415.87 1213.5 L1416.45 1213.5 L1417.04 1213.5 L1417.63 1213.5 L1418.21 1213.5 L1418.8 1213.5 L1419.38 1213.5 L1419.97 1213.5 L1420.56 1213.5 L1421.14 1213.5 L1421.73 1213.5 L1422.32 1213.5 L1422.9 1213.5 L1423.49 1213.5 L1424.08 1213.5 L1424.66 1213.5 L1425.25 1213.5 L1425.83 1213.5 L1426.42 1213.5 L1427.01 1213.5 L1427.59 1213.5 L1428.18 1213.5 L1428.77 1213.5 L1429.35 1213.5 L1429.94 1213.5 L1430.53 1213.5 L1431.11 1213.5 L1431.7 1213.5 L1432.29 1213.5 L1432.87 1213.5 L1433.46 1213.5 L1434.04 1213.5 L1434.63 1213.5 L1435.22 1213.5 L1435.8 1213.5 L1436.39 1213.5 L1436.98 1213.5 L1437.56 1213.5 L1438.15 1213.5 L1438.74 1213.5 L1439.32 1213.5 L1439.91 1213.5 L1440.5 1213.5 L1441.08 1213.5 L1441.67 1213.5 L1442.25 1213.5 L1442.84 1213.5 L1443.43 1213.5 L1444.01 1213.5 L1444.6 1213.5 L1445.19 1213.5 L1445.77 1213.5 L1446.36 1213.5 L1446.95 1213.5 L1447.53 1213.5 L1448.12 1213.5 L1448.7 1213.5 L1449.29 1213.5 L1449.88 1213.5 L1450.46 1213.5 L1451.05 1213.5 L1451.64 1213.5 L1452.22 1213.5 L1452.81 1213.5 L1453.4 1213.5 L1453.98 1213.5 L1454.57 1213.5 L1455.16 1213.5 L1455.74 1213.5 L1456.33 1213.5 L1456.91 1213.5 L1457.5 1213.5 L1458.09 1213.5 L1458.67 1213.5 L1459.26 1213.5 L1459.85 1213.5 L1460.43 1213.5 L1461.02 1213.5 L1461.61 1213.5 L1462.19 1213.5 L1462.78 1213.5 L1463.37 1213.5 L1463.95 1213.5 L1464.54 1213.5 L1465.12 1213.5 L1465.71 1213.5 L1466.3 1213.5 L1466.88 1213.5 L1467.47 1213.5 L1468.06 1213.5 L1468.64 1213.5 L1469.23 1213.5 L1469.82 1213.5 L1470.4 1213.5 L1470.99 1213.5 L1471.57 1213.5 L1472.16 1213.5 L1472.75 1213.5 L1473.33 1213.5 L1473.92 1213.5 L1474.51 1213.5 L1475.09 1213.5 L1475.68 1213.5 L1476.27 1213.5 L1476.85 1213.5 L1477.44 1213.5 L1478.03 1213.5 L1478.61 1213.5 L1479.2 1213.5 L1479.78 1213.5 L1480.37 1213.5 L1480.96 1213.5 L1481.54 1213.5 L1482.13 1213.5 L1482.72 1213.5 L1483.3 1213.5 L1483.89 1213.5 L1484.48 1213.5 L1485.06 1213.5 L1485.65 1213.5 L1486.24 1213.5 L1486.82 1213.5 L1487.41 1213.5 L1487.99 1213.5 L1488.58 1213.5 L1489.17 1213.5 L1489.75 1213.5 L1490.34 1213.5 L1490.93 1213.5 L1491.51 1213.5 L1492.1 1213.5 L1492.69 1213.5 L1493.27 1213.5 L1493.86 1213.5 L1494.45 1213.5 L1495.03 1213.5 L1495.62 1213.5 L1496.2 1213.5 L1496.79 1213.5 L1497.38 1213.5 L1497.96 1213.5 L1498.55 1213.5 L1499.14 1213.5 L1499.72 1213.5 L1500.31 1213.5 L1500.9 1213.5 L1501.48 1213.5 L1502.07 1213.5 L1502.65 1213.5 L1503.24 1213.5 L1503.83 1213.5 L1504.41 1213.5 L1505 1213.5 L1505.59 1213.5 L1506.17 1213.5 L1506.76 1213.5 L1507.35 1213.5 L1507.93 1213.5 L1508.52 1213.5 L1509.11 1213.5 L1509.69 1213.5 L1510.28 1213.5 L1510.86 1213.5 L1511.45 1213.5 L1512.04 1213.5 L1512.62 1213.5 L1513.21 1213.5 L1513.8 1213.5 L1514.38 1213.5 L1514.97 1213.5 L1515.56 1213.5 L1516.14 1213.5 L1516.73 1213.5 L1517.32 1213.5 L1517.9 1213.5 L1518.49 1213.5 L1519.07 1213.5 L1519.66 1213.5 L1520.25 1213.5 L1520.83 1213.5 L1521.42 1213.5 L1522.01 1213.5 L1522.59 1213.5 L1523.18 1213.5 L1523.77 1213.5 L1524.35 1213.5 L1524.94 1213.5 L1525.52 1213.5 L1526.11 1213.5 L1526.7 1213.5 L1527.28 1213.5 L1527.87 1213.5 L1528.46 1213.5 L1529.04 1213.5 L1529.63 1213.5 L1530.22 1213.5 L1530.8 1213.5 L1531.39 1213.5 L1531.98 1213.5 L1532.56 1213.5 L1533.15 1213.5 L1533.73 1213.5 L1534.32 1213.5 L1534.91 1213.5 L1535.49 1213.5 L1536.08 1213.5 L1536.67 1213.5 L1537.25 1213.5 L1537.84 1213.5 L1538.43 1213.5 L1539.01 1213.5 L1539.6 1213.5 L1540.19 1213.5 L1540.77 1213.5 L1541.36 1213.5 L1541.94 1213.5 L1542.53 1213.5 L1543.12 1213.5 L1543.7 1213.5 L1544.29 1213.5 L1544.88 1213.5 L1545.46 1213.5 L1546.05 1213.5 L1546.64 1213.5 L1547.22 1213.5 L1547.81 1213.5 L1548.4 1213.5 L1548.98 1213.5 L1549.57 1213.5 L1550.15 1213.5 L1550.74 1213.5 L1551.33 1213.5 L1551.91 1213.5 L1552.5 1213.5 L1553.09 1213.5 L1553.67 1213.5 L1554.26 1213.5 L1554.85 1213.5 L1555.43 1213.5 L1556.02 1213.5 L1556.6 1213.5 L1557.19 1213.5 L1557.78 1213.5 L1558.36 1213.5 L1558.95 1213.5 L1559.54 1213.5 L1560.12 1213.5 L1560.71 1213.5 L1561.3 1213.5 L1561.88 1213.5 L1562.47 1213.5 L1563.06 1213.5 L1563.64 1213.5 L1564.23 1213.5 L1564.81 1213.5 L1565.4 1213.5 L1565.99 1213.5 L1566.57 1213.5 L1567.16 1213.5 L1567.75 1213.5 L1568.33 1213.5 L1568.92 1213.5 L1569.51 1213.5 L1570.09 1213.5 L1570.68 1213.5 L1571.27 1213.5 L1571.85 1213.5 L1572.44 1213.5 L1573.02 1213.5 L1573.61 1213.5 L1574.2 1213.5 L1574.78 1213.5 L1575.37 1213.5 L1575.96 1213.5 L1576.54 1213.5 L1577.13 1213.5 L1577.72 1213.5 L1578.3 1213.5 L1578.89 1213.5 L1579.47 1213.5 L1580.06 1213.5 L1580.65 1213.5 L1581.23 1213.5 L1581.82 1213.5 L1582.41 1213.5 L1582.99 1213.5 L1583.58 1213.5 L1584.17 1213.5 L1584.75 1213.5 L1585.34 1213.5 L1585.93 1213.5 L1586.51 1213.5 L1587.1 1213.5 L1587.68 1213.5 L1588.27 1213.5 L1588.86 1213.5 L1589.44 1213.5 L1590.03 1213.5 L1590.62 1213.5 L1591.2 1213.5 L1591.79 1213.5 L1592.38 1213.5 L1592.96 1213.5 L1593.55 1213.5 L1594.14 1213.5 L1594.72 1213.5 L1595.31 1213.5 L1595.89 1213.5 L1596.48 1213.5 L1597.07 1213.5 L1597.65 1213.5 L1598.24 1213.5 L1598.83 1213.5 L1599.41 1213.5 L1600 1213.5 L1600.59 1213.5 L1601.17 1213.5 L1601.76 1213.5 L1602.34 1213.5 L1602.93 1213.5 L1603.52 1213.5 L1604.1 1213.5 L1604.69 1213.5 L1605.28 1213.5 L1605.86 1213.5 L1606.45 1213.5 L1607.04 1213.5 L1607.62 1213.5 L1608.21 1213.5 L1608.8 1213.5 L1609.38 1213.5 L1609.97 1213.5 L1610.55 1213.5 L1611.14 1213.5 L1611.73 1213.5 L1612.31 1213.5 L1612.9 1213.5 L1613.49 1213.5 L1614.07 1213.5 L1614.66 1213.5 L1615.25 1213.5 L1615.83 1213.5 L1616.42 1213.5 L1617.01 1213.5 L1617.59 1213.5 L1618.18 1213.5 L1618.76 1213.5 L1619.35 1213.5 L1619.94 1213.5 L1620.52 1213.5 L1621.11 1213.5 L1621.7 1213.5 L1622.28 1213.5 L1622.87 1213.5 L1623.46 1213.5 L1624.04 1213.5 L1624.63 1213.5 L1625.22 1213.5 L1625.8 1213.5 L1626.39 1213.5 L1626.97 1213.5 L1627.56 1213.5 L1628.15 1213.5 L1628.73 1213.5 L1629.32 1213.5 L1629.91 1213.5 L1630.49 1213.5 L1631.08 1213.5 L1631.67 1213.5 L1632.25 1213.5 L1632.84 1213.5 L1633.42 1213.5 L1634.01 1213.5 L1634.6 1213.5 L1635.18 1213.5 L1635.77 1213.5 L1636.36 1213.5 L1636.94 1213.5 L1637.53 1213.5 L1638.12 1213.5 L1638.7 1213.5 L1639.29 1213.5 L1639.88 1213.5 L1640.46 1213.5 L1641.05 1213.5 L1641.63 1213.5 L1642.22 1213.5 L1642.81 1213.5 L1643.39 1213.5 L1643.98 1213.5 L1644.57 1213.5 L1645.15 1213.5 L1645.74 1213.5 L1646.33 1213.5 L1646.91 1213.5 L1647.5 1213.5 L1648.09 1213.5 L1648.67 1213.5 L1649.26 1213.5 L1649.84 1213.5 L1650.43 1213.5 L1651.02 1213.5 L1651.6 1213.5 L1652.19 1213.5 L1652.78 1213.5 L1653.36 1213.5 L1653.95 1213.5 L1654.54 1213.5 L1655.12 1213.5 L1655.71 1213.5 L1656.29 1213.5 L1656.88 1213.5 L1657.47 1213.5 L1658.05 1213.5 L1658.64 1213.5 L1659.23 1213.5 L1659.81 1213.5 L1660.4 1213.5 L1660.99 1213.5 L1661.57 1213.5 L1662.16 1213.5 L1662.75 1213.5 L1663.33 1213.5 L1663.92 1213.5 L1664.5 1213.5 L1665.09 1213.5 L1665.68 1213.5 L1666.26 1213.5 L1666.85 1213.5 L1667.44 1213.5 L1668.02 1213.5 L1668.61 1213.5 L1669.2 1213.5 L1669.78 1213.5 L1670.37 1213.5 L1670.96 1213.5 L1671.54 1213.5 L1672.13 1213.5 L1672.71 1213.5 L1673.3 1213.5 L1673.89 1213.5 L1674.47 1213.5 L1675.06 1213.5 L1675.65 1213.5 L1676.23 1213.5 L1676.82 1213.5 L1677.41 1213.5 L1677.99 1213.5 L1678.58 1213.5 L1679.17 1213.5 L1679.75 1213.5 L1680.34 1213.5 L1680.92 1213.5 L1681.51 1213.5 L1682.1 1213.5 L1682.68 1213.5 L1683.27 1213.5 L1683.86 1213.5 L1684.44 1213.5 L1685.03 1213.5 L1685.62 1213.5 L1686.2 1213.5 L1686.79 1213.5 L1687.37 1213.5 L1687.96 1213.5 L1688.55 1213.5 L1689.13 1213.5 L1689.72 1213.5 L1690.31 1213.5 L1690.89 1213.5 L1691.48 1213.5 L1692.07 1213.5 L1692.65 1213.5 L1693.24 1213.5 L1693.83 1213.5 L1694.41 1213.5 L1695 1213.5 L1695.58 1213.5 L1696.17 1213.5 L1696.76 1213.5 L1697.34 1213.5 L1697.93 1213.5 L1698.52 1213.5 L1699.1 1213.5 L1699.69 1213.5 L1700.28 1213.5 L1700.86 1213.5 L1701.45 1213.5 L1702.04 1213.5 L1702.62 1213.5 L1703.21 1213.5 L1703.79 1213.5 L1704.38 1213.5 L1704.97 1213.5 L1705.55 1213.5 L1706.14 1213.5 L1706.73 1213.5 L1707.31 1213.5 L1707.9 1213.5 L1708.49 1213.5 L1709.07 1213.5 L1709.66 1213.5 L1710.24 1213.5 L1710.83 1213.5 L1711.42 1213.5 L1712 1213.5 L1712.59 1213.5 L1713.18 1213.5 L1713.76 1213.5 L1714.35 1213.5 L1714.94 1213.5 L1715.52 1213.5 L1716.11 1213.5 L1716.7 1213.5 L1717.28 1213.5 L1717.87 1213.5 L1718.45 1213.5 L1719.04 1213.5 L1719.63 1213.5 L1720.21 1213.5 L1720.8 1213.5 L1721.39 1213.5 L1721.97 1213.5 L1722.56 1213.5 L1723.15 1213.5 L1723.73 1213.5 L1724.32 1213.5 L1724.91 1213.5 L1725.49 1213.5 L1726.08 1213.5 L1726.66 1213.5 L1727.25 1213.5 L1727.84 1213.5 L1728.42 1213.5 L1729.01 1213.5 L1729.6 1213.5 L1730.18 1213.5 L1730.77 1213.5 L1731.36 1213.5 L1731.94 1213.5 L1732.53 1213.5 L1733.11 1213.5 L1733.7 1213.5 L1734.29 1213.5 L1734.87 1213.5 L1735.46 1213.5 L1736.05 1213.5 L1736.63 1213.5 L1737.22 1213.5 L1737.81 1213.5 L1738.39 1213.5 L1738.98 1213.5 L1739.57 1213.5 L1740.15 1213.5 L1740.74 1213.5 L1741.32 1213.5 L1741.91 1213.5 L1742.5 1213.5 L1743.08 1213.5 L1743.67 1213.5 L1744.26 1213.5 L1744.84 1213.5 L1745.43 1213.5 L1746.02 1213.5 L1746.6 1213.5 L1747.19 1213.5 L1747.78 1213.5 L1748.36 1213.5 L1748.95 1213.5 L1749.53 1213.5 L1750.12 1213.5 L1750.71 1213.5 L1751.29 1213.5 L1751.88 1213.5 L1752.47 1213.5 L1753.05 1213.5 L1753.64 1213.5 L1754.23 1213.5 L1754.81 1213.5 L1755.4 1213.5 L1755.99 1213.5 L1756.57 1213.5 L1757.16 1213.5 L1757.74 1213.5 L1758.33 1213.5 L1758.92 1213.5 L1759.5 1213.5 L1760.09 1213.5 L1760.68 1213.5 L1761.26 1213.5 L1761.85 1213.5 L1762.44 1213.5 L1763.02 1213.5 L1763.61 1213.5 L1764.19 1213.5 L1764.78 1213.5 L1765.37 1213.5 L1765.95 1213.5 L1766.54 1213.5 L1767.13 1213.5 L1767.71 1213.5 L1768.3 1213.5 L1768.89 1213.5 L1769.47 1213.5 L1770.06 1213.5 L1770.65 1213.5 L1771.23 1213.5 L1771.82 1213.5 L1772.4 1213.5 L1772.99 1213.5 L1773.58 1213.5 L1774.16 1213.5 L1774.75 1213.5 L1775.34 1213.5 L1775.92 1213.5 L1776.51 1213.5 L1777.1 1213.5 L1777.68 1213.5 L1778.27 1213.5 L1778.86 1213.5 L1779.44 1213.5 L1780.03 1213.5 L1780.61 1213.5 L1781.2 1213.5 L1781.79 1213.5 L1782.37 1213.5 L1782.96 1213.5 L1783.55 1213.5 L1784.13 1213.5 L1784.72 1213.5 L1785.31 1213.5 L1785.89 1213.5 L1786.48 1213.5 L1787.06 1213.5 L1787.65 1213.5 L1788.24 1213.5 L1788.82 1213.5 L1789.41 1213.5 L1790 1213.5 L1790.58 1213.5 L1791.17 1213.5 L1791.76 1213.5 L1792.34 1213.5 L1792.93 1213.5 L1793.52 1213.5 L1794.1 1213.5 L1794.69 1213.5 L1795.27 1213.5 L1795.86 1213.5 L1796.45 1213.5 L1797.03 1213.5 L1797.62 1213.5 L1798.21 1213.5 L1798.79 1213.5 L1799.38 1213.5 L1799.97 1213.5 L1800.55 1213.5 L1801.14 1213.5 L1801.73 1213.5 L1802.31 1213.5 L1802.9 1213.5 L1803.48 1213.5 L1804.07 1213.5 L1804.66 1213.5 L1805.24 1213.5 L1805.83 1213.5 L1806.42 1213.5 L1807 1213.5 L1807.59 1213.5 L1808.18 1213.5 L1808.76 1213.5 L1809.35 1213.5 L1809.94 1213.5 L1810.52 1213.5 L1811.11 1213.5 L1811.69 1213.5 L1812.28 1213.5 L1812.87 1213.5 L1813.45 1213.5 L1814.04 1213.5 L1814.63 1213.5 L1815.21 1213.5 L1815.8 1213.5 L1816.39 1213.5 L1816.97 1213.5 L1817.56 1213.5 L1818.14 1213.5 L1818.73 1213.5 L1819.32 1213.5 L1819.9 1213.5 L1820.49 1213.5 L1821.08 1213.5 L1821.66 1213.5 L1822.25 1213.5 L1822.84 1213.5 L1823.42 1213.5 L1824.01 1213.5 L1824.6 1213.5 L1825.18 1213.5 L1825.77 1213.5 L1826.35 1213.5 L1826.94 1213.5 L1827.53 1213.5 L1828.11 1213.5 L1828.7 1213.5 L1829.29 1213.5 L1829.87 1213.5 L1830.46 1213.5 L1831.05 1213.5 L1831.63 1213.5 L1832.22 1213.5 L1832.81 1213.5 L1833.39 1213.5 L1833.98 1213.5 L1834.56 1213.5 L1835.15 1213.5 L1835.74 1213.5 L1836.32 1213.5 L1836.91 1213.5 L1837.5 1213.5 L1838.08 1213.5 L1838.67 1213.5 L1839.26 1213.5 L1839.84 1213.5 L1840.43 1213.5 L1841.01 1213.5 L1841.6 1213.5 L1842.19 1213.5 L1842.77 1213.5 L1843.36 1213.5 L1843.95 1213.5 L1844.53 1213.5 L1845.12 1213.5 L1845.71 1213.5 L1846.29 1213.5 L1846.88 1213.5 L1847.47 1213.5 L1848.05 1213.5 L1848.64 1213.5 L1849.22 1213.5 L1849.81 1213.5 L1850.4 1213.5 L1850.98 1213.5 L1851.57 1213.5 L1852.16 1213.5 L1852.74 1213.5 L1853.33 1213.5 L1853.92 1213.5 L1854.5 1213.5 L1855.09 1213.5 L1855.68 1213.5 L1856.26 1213.5 L1856.85 1213.5 L1857.43 1213.5 L1858.02 1213.5 L1858.61 1213.5 L1859.19 1213.5 L1859.78 1213.5 L1860.37 1213.5 L1860.95 1213.5 L1861.54 1213.5 L1862.13 1213.5 L1862.71 1213.5 L1863.3 1213.5 L1863.88 1213.5 L1864.47 1213.5 L1865.06 1213.5 L1865.64 1213.5 L1866.23 1213.5 L1866.82 1213.5 L1867.4 1213.5 L1867.99 1213.5 L1868.58 1213.5 L1869.16 1213.5 L1869.75 1213.5 L1870.34 1213.5 L1870.92 1213.5 L1871.51 1213.5 L1872.09 1213.5 L1872.68 1213.5 L1873.27 1213.5 L1873.85 1213.5 L1874.44 1213.5 L1875.03 1213.5 L1875.61 1213.5 L1876.2 1213.5 L1876.79 1213.5 L1877.37 1213.5 L1877.96 1213.5 L1878.55 1213.5 L1879.13 1213.5 L1879.72 1213.5 L1880.3 1213.5 L1880.89 1213.5 L1881.48 1213.5 L1882.06 1213.5 L1882.65 1213.5 L1883.24 1213.5 L1883.82 1213.5 L1884.41 1213.5 L1885 1213.5 L1885.58 1213.5 L1886.17 1213.5 L1886.76 1213.5 L1887.34 1213.5 L1887.93 1213.5 L1888.51 1213.5 L1889.1 1213.5 L1889.69 1213.5 L1890.27 1213.5 L1890.86 1213.5 L1891.45 1213.5 L1892.03 1213.5 L1892.62 1213.5 L1893.21 1213.5 L1893.79 1213.5 L1894.38 1213.5 L1894.96 1213.5 L1895.55 1213.5 L1896.14 1213.5 L1896.72 1213.5 L1897.31 1213.5 L1897.9 1213.5 L1898.48 1213.5 L1899.07 1213.5 L1899.66 1213.5 L1900.24 1213.5 L1900.83 1213.5 L1901.42 1213.5 L1902 1213.5 L1902.59 1213.5 L1903.17 1213.5 L1903.76 1213.5 L1904.35 1213.5 L1904.93 1213.5 L1905.52 1213.5 L1906.11 1213.5 L1906.69 1213.5 L1907.28 1213.5 L1907.87 1213.5 L1908.45 1213.5 L1909.04 1213.5 L1909.63 1213.5 L1910.21 1213.5 L1910.8 1213.5 L1911.38 1213.5 L1911.97 1213.5 L1912.56 1213.5 L1913.14 1213.5 L1913.73 1213.5 L1914.32 1213.5 L1914.9 1213.5 L1915.49 1213.5 L1916.08 1213.5 L1916.66 1213.5 L1917.25 1213.5 L1917.83 1213.5 L1918.42 1213.5 L1919.01 1213.5 L1919.59 1213.5 L1920.18 1213.5 L1920.77 1213.5 L1921.35 1213.5 L1921.94 1213.5 L1922.53 1213.5 L1923.11 1213.5 L1923.7 1213.5 L1924.29 1213.5 L1924.87 1213.5 L1925.46 1213.5 L1926.04 1213.5 L1926.63 1213.5 L1927.22 1213.5 L1927.8 1213.5 L1928.39 1213.5 L1928.98 1213.5 L1929.56 1213.5 L1930.15 1213.5 L1930.74 1213.5 L1931.32 1213.5 L1931.91 1213.5 L1932.5 1213.5 L1933.08 1213.5 L1933.67 1213.5 L1934.25 1213.5 L1934.84 1213.5 L1935.43 1213.5 L1936.01 1213.5 L1936.6 1213.5 L1937.19 1213.5 L1937.77 1213.5 L1938.36 1213.5 L1938.95 1213.5 L1939.53 1213.5 L1940.12 1213.5 L1940.71 1213.5 L1941.29 1213.5 L1941.88 1213.5 L1942.46 1213.5 L1943.05 1213.5 L1943.64 1213.5 L1944.22 1213.5 L1944.81 1213.5 L1945.4 1213.5 L1945.98 1213.5 L1946.57 1213.5 L1947.16 1213.5 L1947.74 1213.5 L1948.33 1213.5 L1948.91 1213.5 L1949.5 1213.5 L1950.09 1213.5 L1950.67 1213.5 L1951.26 1213.5 L1951.85 1213.5 L1952.43 1213.5 L1953.02 1213.5 L1953.61 1213.5 L1954.19 1213.5 L1954.78 1213.5 L1955.37 1213.5 L1955.95 1213.5 L1956.54 1213.5 L1957.12 1213.5 L1957.71 1213.5 L1958.3 1213.5 L1958.88 1213.5 L1959.47 1213.5 L1960.06 1213.5 L1960.64 1213.5 L1961.23 1213.5 L1961.82 1213.5 L1962.4 1213.5 L1962.99 1213.5 L1963.58 1213.5 L1964.16 1213.5 L1964.75 1213.5 L1965.33 1213.5 L1965.92 1213.5 L1966.51 1213.5 L1967.09 1213.5 L1967.68 1213.5 L1968.27 1213.5 L1968.85 1213.5 L1969.44 1213.5 L1970.03 1213.5 L1970.61 1213.5 L1971.2 1213.5 L1971.78 1213.5 L1972.37 1213.5 L1972.96 1213.5 L1973.54 1213.5 L1974.13 1213.5 L1974.72 1213.5 L1975.3 1213.5 L1975.89 1213.5 L1976.48 1213.5 L1977.06 1213.5 L1977.65 1213.5 L1978.24 1213.5 L1978.82 1213.5 L1979.41 1213.5 L1979.99 1213.5 L1980.58 1213.5 L1981.17 1213.5 L1981.75 1213.5 L1982.34 1213.5 L1982.93 1213.5 L1983.51 1213.5 L1984.1 1213.5 L1984.69 1213.5 L1985.27 1213.5 L1985.86 1213.5 L1986.45 1213.5 L1987.03 1213.5 L1987.62 1213.5 L1988.2 1213.5 L1988.79 1213.5 L1989.38 1213.5 L1989.96 1213.5 L1990.55 1213.5 L1991.14 1213.5 L1991.72 1213.5 L1992.31 1213.5 L1992.9 1213.5 L1993.48 1213.5 L1994.07 1213.5 L1994.65 1213.5 L1995.24 1213.5 L1995.83 1213.5 L1996.41 1213.5 L1997 1213.5 L1997.59 1213.5 L1998.17 1213.5 L1998.76 1213.5 L1999.35 1213.5 L1999.93 1213.5 L2000.52 1213.5 L2001.11 1213.5 L2001.69 1213.5 L2002.28 1213.5 L2002.86 1213.5 L2003.45 1213.5 L2004.04 1213.5 L2004.62 1213.5 L2005.21 1213.5 L2005.8 1213.5 L2006.38 1213.5 L2006.97 1213.5 L2007.56 1213.5 L2008.14 1213.5 L2008.73 1213.5 L2009.32 1213.5 L2009.9 1213.5 L2010.49 1213.5 L2011.07 1213.5 L2011.66 1213.5 L2012.25 1213.5 L2012.83 1213.5 L2013.42 1213.5 L2014.01 1213.5 L2014.59 1213.5 L2015.18 1213.5 L2015.77 1213.5 L2016.35 1213.5 L2016.94 1213.5 L2017.53 1213.5 L2018.11 1213.5 L2018.7 1213.5 L2019.28 1213.5 L2019.87 1213.5 L2020.46 1213.5 L2021.04 1213.5 L2021.63 1213.5 L2022.22 1213.5 L2022.8 1213.5 L2023.39 1213.5 L2023.98 1213.5 L2024.56 1213.5 L2025.15 1213.5 L2025.73 1213.5 L2026.32 1213.5 L2026.91 1213.5 L2027.49 1213.5 L2028.08 1213.5 L2028.67 1213.5 L2029.25 1213.5 L2029.84 1213.5 L2030.43 1213.5 L2031.01 1213.5 L2031.6 1213.5 L2032.19 1213.5 L2032.77 1213.5 L2033.36 1213.5 L2033.94 1213.5 L2034.53 1213.5 L2035.12 1213.5 L2035.7 1213.5 L2036.29 1213.5 L2036.88 1213.5 L2037.46 1213.5 L2038.05 1213.5 L2038.64 1213.5 L2039.22 1213.5 L2039.81 1213.5 L2040.4 1213.5 L2040.98 1213.5 L2041.57 1213.5 L2042.15 1213.5 L2042.74 1213.5 L2043.33 1213.5 L2043.91 1213.5 L2044.5 1213.5 L2045.09 1213.5 L2045.67 1213.5 L2046.26 1213.5 L2046.85 1213.5 L2047.43 1213.5 L2048.02 1213.5 L2048.6 1213.5 L2049.19 1213.5 L2049.78 1213.5 L2050.36 1213.5 L2050.95 1213.5 L2051.54 1213.5 L2052.12 1213.5 L2052.71 1213.5 L2053.3 1213.5 L2053.88 1213.5 L2054.47 1213.5 L2055.06 1213.5 L2055.64 1213.5 L2056.23 1213.5 L2056.81 1213.5 L2057.4 1213.5 L2057.99 1213.5 L2058.57 1213.5 L2059.16 1213.5 L2059.75 1213.5 L2060.33 1213.5 L2060.92 1213.5 L2061.51 1213.5 L2062.09 1213.5 L2062.68 1213.5 L2063.27 1213.5 L2063.85 1213.5 L2064.44 1213.5 L2065.02 1213.5 L2065.61 1213.5 L2066.2 1213.5 L2066.78 1213.5 L2067.37 1213.5 L2067.96 1213.5 L2068.54 1213.5 L2069.13 1213.5 L2069.72 1213.5 L2070.3 1213.5 L2070.89 1213.5 L2071.48 1213.5 L2072.06 1213.5 L2072.65 1213.5 L2073.23 1213.5 L2073.82 1213.5 L2074.41 1213.5 L2074.99 1213.5 L2075.58 1213.5 L2076.17 1213.5 L2076.75 1213.5 L2077.34 1213.5 L2077.93 1213.5 L2078.51 1213.5 L2079.1 1213.5 L2079.68 1213.5 L2080.27 1213.5 L2080.86 1213.5 L2081.44 1213.5 L2082.03 1213.5 L2082.62 1213.5 L2083.2 1213.5 L2083.79 1213.5 L2084.38 1213.5 L2084.96 1213.5 L2085.55 1213.5 L2086.14 1213.5 L2086.72 1213.5 L2087.31 1213.5 L2087.89 1213.5 L2088.48 1213.5 L2089.07 1213.5 L2089.65 1213.5 L2090.24 1213.5 L2090.83 1213.5 L2091.41 1213.5 L2092 1213.5 L2092.59 1213.5 L2093.17 1213.5 L2093.76 1213.5 L2094.35 1213.5 L2094.93 1213.5 L2095.52 1213.5 L2096.1 1213.5 L2096.69 1213.5 L2097.28 1213.5 L2097.86 1213.5 L2098.45 1213.5 L2099.04 1213.5 L2099.62 1213.5 L2100.21 1213.5 L2100.8 1213.5 L2101.38 1213.5 L2101.97 1213.5 L2102.55 1213.5 L2103.14 1213.5 L2103.73 1213.5 L2104.31 1213.5 L2104.9 1213.5 L2105.49 1213.5 L2106.07 1213.5 L2106.66 1213.5 L2107.25 1213.5 L2107.83 1213.5 L2108.42 1213.5 L2109.01 1213.5 L2109.59 1213.5 L2110.18 1213.5 L2110.76 1213.5 L2111.35 1213.5 L2111.94 1213.5 L2112.52 1213.5 L2113.11 1213.5 L2113.7 1213.5 L2114.28 1213.5 L2114.87 1213.5 L2115.46 1213.5 L2116.04 1213.5 L2116.63 1213.5 L2117.22 1213.5 L2117.8 1213.5 L2118.39 1213.5 L2118.97 1213.5 L2119.56 1213.5 L2120.15 1213.5 L2120.73 1213.5 L2121.32 1213.5 L2121.91 1213.5 L2122.49 1213.5 L2123.08 1213.5 L2123.67 1213.5 L2124.25 1213.5 L2124.84 1213.5 L2125.42 1213.5 L2126.01 1213.5 L2126.6 1213.5 L2127.18 1213.5 L2127.77 1213.5 L2128.36 1213.5 L2128.94 1213.5 L2129.53 1213.5 L2130.12 1213.5 L2130.7 1213.5 L2131.29 1213.5 L2131.88 1213.5 L2132.46 1213.5 L2133.05 1213.5 L2133.63 1213.5 L2134.22 1213.5 L2134.81 1213.5 L2135.39 1213.5 L2135.98 1213.5 L2136.57 1213.5 L2137.15 1213.5 L2137.74 1213.5 L2138.33 1213.5 L2138.91 1213.5 L2139.5 1213.5 L2140.09 1213.5 L2140.67 1213.5 L2141.26 1213.5 L2141.84 1213.5 L2142.43 1213.5 L2143.02 1213.5 L2143.6 1213.5 L2144.19 1213.5 L2144.78 1213.5 L2145.36 1213.5 L2145.95 1213.5 L2146.54 1213.5 L2147.12 1213.5 L2147.71 1213.5 L2148.3 1213.5 L2148.88 1213.5 L2149.47 1213.5 L2150.05 1213.5 L2150.64 1213.5 L2151.23 1213.5 L2151.81 1213.5 L2152.4 1213.5 L2152.99 1213.5 L2153.57 1213.5 L2154.16 1213.5 L2154.75 1213.5 L2155.33 1213.5 L2155.92 1213.5 L2156.5 1213.5 L2157.09 1213.5 L2157.68 1213.5 L2158.26 1213.5 L2158.26 1212.86 L2157.68 1212.86 L2157.09 1212.86 L2156.5 1212.86 L2155.92 1212.86 L2155.33 1212.86 L2154.75 1212.86 L2154.16 1212.86 L2153.57 1212.86 L2152.99 1212.86 L2152.4 1212.86 L2151.81 1212.86 L2151.23 1212.86 L2150.64 1212.86 L2150.05 1212.86 L2149.47 1212.86 L2148.88 1212.86 L2148.3 1212.86 L2147.71 1212.86 L2147.12 1212.86 L2146.54 1212.86 L2145.95 1212.86 L2145.36 1212.86 L2144.78 1212.86 L2144.19 1212.86 L2143.6 1212.86 L2143.02 1212.86 L2142.43 1212.86 L2141.84 1212.86 L2141.26 1212.86 L2140.67 1212.86 L2140.09 1212.86 L2139.5 1212.86 L2138.91 1212.86 L2138.33 1212.86 L2137.74 1212.86 L2137.15 1212.86 L2136.57 1212.86 L2135.98 1212.86 L2135.39 1212.86 L2134.81 1212.86 L2134.22 1212.86 L2133.63 1212.86 L2133.05 1212.86 L2132.46 1212.86 L2131.88 1212.86 L2131.29 1212.86 L2130.7 1212.86 L2130.12 1212.86 L2129.53 1212.86 L2128.94 1212.86 L2128.36 1212.86 L2127.77 1212.86 L2127.18 1212.86 L2126.6 1212.86 L2126.01 1212.86 L2125.42 1212.86 L2124.84 1212.86 L2124.25 1212.86 L2123.67 1212.86 L2123.08 1212.86 L2122.49 1212.86 L2121.91 1212.86 L2121.32 1212.86 L2120.73 1212.86 L2120.15 1212.86 L2119.56 1212.86 L2118.97 1212.86 L2118.39 1212.86 L2117.8 1212.86 L2117.22 1212.86 L2116.63 1212.86 L2116.04 1212.86 L2115.46 1212.86 L2114.87 1212.86 L2114.28 1212.86 L2113.7 1212.86 L2113.11 1212.86 L2112.52 1212.86 L2111.94 1212.86 L2111.35 1212.86 L2110.76 1212.86 L2110.18 1212.86 L2109.59 1212.86 L2109.01 1212.86 L2108.42 1212.86 L2107.83 1212.86 L2107.25 1212.86 L2106.66 1212.86 L2106.07 1212.86 L2105.49 1212.86 L2104.9 1212.86 L2104.31 1212.86 L2103.73 1212.86 L2103.14 1212.86 L2102.55 1212.86 L2101.97 1212.86 L2101.38 1212.86 L2100.8 1212.86 L2100.21 1212.86 L2099.62 1212.86 L2099.04 1212.86 L2098.45 1212.86 L2097.86 1212.86 L2097.28 1212.86 L2096.69 1212.86 L2096.1 1212.86 L2095.52 1212.86 L2094.93 1212.86 L2094.35 1212.86 L2093.76 1212.86 L2093.17 1212.86 L2092.59 1212.86 L2092 1212.86 L2091.41 1212.86 L2090.83 1212.86 L2090.24 1212.86 L2089.65 1212.86 L2089.07 1212.86 L2088.48 1212.86 L2087.89 1212.86 L2087.31 1212.86 L2086.72 1212.86 L2086.14 1212.86 L2085.55 1212.86 L2084.96 1212.86 L2084.38 1212.86 L2083.79 1212.86 L2083.2 1212.86 L2082.62 1212.86 L2082.03 1212.86 L2081.44 1212.86 L2080.86 1212.86 L2080.27 1212.86 L2079.68 1212.86 L2079.1 1212.86 L2078.51 1212.86 L2077.93 1212.86 L2077.34 1212.86 L2076.75 1212.86 L2076.17 1212.86 L2075.58 1212.86 L2074.99 1212.86 L2074.41 1212.86 L2073.82 1212.86 L2073.23 1212.86 L2072.65 1212.86 L2072.06 1212.86 L2071.48 1212.86 L2070.89 1212.86 L2070.3 1212.86 L2069.72 1212.86 L2069.13 1212.86 L2068.54 1212.86 L2067.96 1212.86 L2067.37 1212.86 L2066.78 1212.86 L2066.2 1212.86 L2065.61 1212.86 L2065.02 1212.86 L2064.44 1212.86 L2063.85 1212.86 L2063.27 1212.86 L2062.68 1212.86 L2062.09 1212.86 L2061.51 1212.86 L2060.92 1212.86 L2060.33 1212.86 L2059.75 1212.86 L2059.16 1212.86 L2058.57 1212.86 L2057.99 1212.86 L2057.4 1212.86 L2056.81 1212.86 L2056.23 1212.86 L2055.64 1212.86 L2055.06 1212.86 L2054.47 1212.86 L2053.88 1212.86 L2053.3 1212.86 L2052.71 1212.86 L2052.12 1212.86 L2051.54 1212.86 L2050.95 1212.86 L2050.36 1212.86 L2049.78 1212.86 L2049.19 1212.86 L2048.6 1212.86 L2048.02 1212.86 L2047.43 1212.86 L2046.85 1212.86 L2046.26 1212.86 L2045.67 1212.86 L2045.09 1212.86 L2044.5 1212.86 L2043.91 1212.86 L2043.33 1212.86 L2042.74 1212.86 L2042.15 1212.86 L2041.57 1212.86 L2040.98 1212.86 L2040.4 1212.86 L2039.81 1212.86 L2039.22 1212.86 L2038.64 1212.86 L2038.05 1212.86 L2037.46 1212.86 L2036.88 1212.86 L2036.29 1212.86 L2035.7 1212.86 L2035.12 1212.86 L2034.53 1212.86 L2033.94 1212.86 L2033.36 1212.86 L2032.77 1212.86 L2032.19 1212.86 L2031.6 1212.86 L2031.01 1212.86 L2030.43 1212.86 L2029.84 1212.86 L2029.25 1212.86 L2028.67 1212.86 L2028.08 1212.86 L2027.49 1212.86 L2026.91 1212.86 L2026.32 1212.86 L2025.73 1212.86 L2025.15 1212.86 L2024.56 1212.86 L2023.98 1212.86 L2023.39 1212.86 L2022.8 1212.86 L2022.22 1212.86 L2021.63 1212.86 L2021.04 1212.86 L2020.46 1212.86 L2019.87 1212.86 L2019.28 1212.86 L2018.7 1212.86 L2018.11 1212.86 L2017.53 1212.86 L2016.94 1212.86 L2016.35 1212.86 L2015.77 1212.86 L2015.18 1212.86 L2014.59 1212.86 L2014.01 1212.86 L2013.42 1212.86 L2012.83 1212.86 L2012.25 1212.86 L2011.66 1212.86 L2011.07 1212.86 L2010.49 1212.86 L2009.9 1212.86 L2009.32 1212.86 L2008.73 1212.86 L2008.14 1212.86 L2007.56 1212.86 L2006.97 1212.86 L2006.38 1212.86 L2005.8 1212.86 L2005.21 1212.86 L2004.62 1212.86 L2004.04 1212.86 L2003.45 1212.86 L2002.86 1212.86 L2002.28 1212.86 L2001.69 1212.86 L2001.11 1212.86 L2000.52 1212.86 L1999.93 1212.86 L1999.35 1212.86 L1998.76 1212.86 L1998.17 1212.86 L1997.59 1212.86 L1997 1212.86 L1996.41 1212.86 L1995.83 1212.86 L1995.24 1212.86 L1994.65 1212.86 L1994.07 1212.86 L1993.48 1212.86 L1992.9 1212.86 L1992.31 1212.86 L1991.72 1212.86 L1991.14 1212.86 L1990.55 1212.86 L1989.96 1212.86 L1989.38 1212.86 L1988.79 1212.86 L1988.2 1212.86 L1987.62 1212.86 L1987.03 1212.86 L1986.45 1212.86 L1985.86 1212.86 L1985.27 1212.86 L1984.69 1212.86 L1984.1 1212.86 L1983.51 1212.86 L1982.93 1212.86 L1982.34 1212.86 L1981.75 1212.86 L1981.17 1212.86 L1980.58 1212.86 L1979.99 1212.86 L1979.41 1212.86 L1978.82 1212.86 L1978.24 1212.86 L1977.65 1212.86 L1977.06 1212.86 L1976.48 1212.86 L1975.89 1212.86 L1975.3 1212.86 L1974.72 1212.86 L1974.13 1212.86 L1973.54 1212.86 L1972.96 1212.86 L1972.37 1212.86 L1971.78 1212.86 L1971.2 1212.86 L1970.61 1212.86 L1970.03 1212.86 L1969.44 1212.86 L1968.85 1212.86 L1968.27 1212.86 L1967.68 1212.86 L1967.09 1212.86 L1966.51 1212.86 L1965.92 1212.86 L1965.33 1212.86 L1964.75 1212.86 L1964.16 1212.86 L1963.58 1212.86 L1962.99 1212.86 L1962.4 1212.86 L1961.82 1212.86 L1961.23 1212.86 L1960.64 1212.86 L1960.06 1212.86 L1959.47 1212.86 L1958.88 1212.86 L1958.3 1212.86 L1957.71 1212.86 L1957.12 1212.86 L1956.54 1212.86 L1955.95 1212.86 L1955.37 1212.86 L1954.78 1212.86 L1954.19 1212.86 L1953.61 1212.86 L1953.02 1212.86 L1952.43 1212.86 L1951.85 1212.86 L1951.26 1212.86 L1950.67 1212.86 L1950.09 1212.86 L1949.5 1212.86 L1948.91 1212.86 L1948.33 1212.86 L1947.74 1212.86 L1947.16 1212.86 L1946.57 1212.86 L1945.98 1212.86 L1945.4 1212.86 L1944.81 1212.86 L1944.22 1212.86 L1943.64 1212.86 L1943.05 1212.86 L1942.46 1212.86 L1941.88 1212.86 L1941.29 1212.86 L1940.71 1212.86 L1940.12 1212.86 L1939.53 1212.86 L1938.95 1212.86 L1938.36 1212.86 L1937.77 1212.86 L1937.19 1212.86 L1936.6 1212.86 L1936.01 1212.86 L1935.43 1212.86 L1934.84 1212.86 L1934.25 1212.86 L1933.67 1212.86 L1933.08 1212.86 L1932.5 1212.86 L1931.91 1212.86 L1931.32 1212.86 L1930.74 1212.86 L1930.15 1212.86 L1929.56 1212.86 L1928.98 1212.86 L1928.39 1212.86 L1927.8 1212.86 L1927.22 1212.86 L1926.63 1212.86 L1926.04 1212.86 L1925.46 1212.86 L1924.87 1212.86 L1924.29 1212.86 L1923.7 1212.86 L1923.11 1212.86 L1922.53 1212.86 L1921.94 1212.86 L1921.35 1212.86 L1920.77 1212.86 L1920.18 1212.86 L1919.59 1212.86 L1919.01 1212.86 L1918.42 1212.86 L1917.83 1212.86 L1917.25 1212.86 L1916.66 1212.86 L1916.08 1212.86 L1915.49 1212.86 L1914.9 1212.86 L1914.32 1212.86 L1913.73 1212.86 L1913.14 1212.86 L1912.56 1212.86 L1911.97 1212.86 L1911.38 1212.86 L1910.8 1212.86 L1910.21 1212.86 L1909.63 1212.86 L1909.04 1212.86 L1908.45 1212.86 L1907.87 1212.86 L1907.28 1212.86 L1906.69 1212.86 L1906.11 1212.86 L1905.52 1212.86 L1904.93 1212.86 L1904.35 1212.86 L1903.76 1212.86 L1903.17 1212.86 L1902.59 1212.86 L1902 1212.86 L1901.42 1212.86 L1900.83 1212.86 L1900.24 1212.86 L1899.66 1212.86 L1899.07 1212.86 L1898.48 1212.86 L1897.9 1212.86 L1897.31 1212.86 L1896.72 1212.86 L1896.14 1212.86 L1895.55 1212.86 L1894.96 1212.86 L1894.38 1212.86 L1893.79 1212.86 L1893.21 1212.86 L1892.62 1212.86 L1892.03 1212.86 L1891.45 1212.86 L1890.86 1212.86 L1890.27 1212.86 L1889.69 1212.86 L1889.1 1212.86 L1888.51 1212.86 L1887.93 1212.86 L1887.34 1212.86 L1886.76 1212.86 L1886.17 1212.86 L1885.58 1212.86 L1885 1212.86 L1884.41 1212.86 L1883.82 1212.86 L1883.24 1212.86 L1882.65 1212.86 L1882.06 1212.86 L1881.48 1212.86 L1880.89 1212.86 L1880.3 1212.86 L1879.72 1212.86 L1879.13 1212.86 L1878.55 1212.86 L1877.96 1212.86 L1877.37 1212.86 L1876.79 1212.86 L1876.2 1212.86 L1875.61 1212.86 L1875.03 1212.86 L1874.44 1212.86 L1873.85 1212.86 L1873.27 1212.86 L1872.68 1212.86 L1872.09 1212.86 L1871.51 1212.86 L1870.92 1212.86 L1870.34 1212.86 L1869.75 1212.86 L1869.16 1212.86 L1868.58 1212.86 L1867.99 1212.86 L1867.4 1212.86 L1866.82 1212.86 L1866.23 1212.86 L1865.64 1212.86 L1865.06 1212.86 L1864.47 1212.86 L1863.88 1212.86 L1863.3 1212.86 L1862.71 1212.86 L1862.13 1212.86 L1861.54 1212.86 L1860.95 1212.86 L1860.37 1212.86 L1859.78 1212.86 L1859.19 1212.86 L1858.61 1212.86 L1858.02 1212.86 L1857.43 1212.86 L1856.85 1212.86 L1856.26 1212.86 L1855.68 1212.86 L1855.09 1212.86 L1854.5 1212.86 L1853.92 1212.86 L1853.33 1212.86 L1852.74 1212.86 L1852.16 1212.86 L1851.57 1212.86 L1850.98 1212.86 L1850.4 1212.86 L1849.81 1212.86 L1849.22 1212.86 L1848.64 1212.86 L1848.05 1212.86 L1847.47 1212.86 L1846.88 1212.86 L1846.29 1212.86 L1845.71 1212.86 L1845.12 1212.86 L1844.53 1212.86 L1843.95 1212.86 L1843.36 1212.86 L1842.77 1212.86 L1842.19 1212.86 L1841.6 1212.86 L1841.01 1212.86 L1840.43 1212.86 L1839.84 1212.86 L1839.26 1212.86 L1838.67 1212.86 L1838.08 1212.86 L1837.5 1212.86 L1836.91 1212.86 L1836.32 1212.86 L1835.74 1212.86 L1835.15 1212.86 L1834.56 1212.86 L1833.98 1212.86 L1833.39 1212.86 L1832.81 1212.86 L1832.22 1212.86 L1831.63 1212.86 L1831.05 1212.86 L1830.46 1212.86 L1829.87 1212.86 L1829.29 1212.86 L1828.7 1212.86 L1828.11 1212.86 L1827.53 1212.86 L1826.94 1212.86 L1826.35 1212.86 L1825.77 1212.86 L1825.18 1212.86 L1824.6 1212.86 L1824.01 1212.86 L1823.42 1212.86 L1822.84 1212.86 L1822.25 1212.86 L1821.66 1212.86 L1821.08 1212.86 L1820.49 1212.86 L1819.9 1212.86 L1819.32 1212.86 L1818.73 1212.86 L1818.14 1212.86 L1817.56 1212.86 L1816.97 1212.86 L1816.39 1212.86 L1815.8 1212.86 L1815.21 1212.86 L1814.63 1212.86 L1814.04 1212.86 L1813.45 1212.86 L1812.87 1212.86 L1812.28 1212.86 L1811.69 1212.86 L1811.11 1212.86 L1810.52 1212.86 L1809.94 1212.86 L1809.35 1212.86 L1808.76 1212.86 L1808.18 1212.86 L1807.59 1212.86 L1807 1212.86 L1806.42 1212.86 L1805.83 1212.86 L1805.24 1212.86 L1804.66 1212.86 L1804.07 1212.86 L1803.48 1212.86 L1802.9 1212.86 L1802.31 1212.86 L1801.73 1212.86 L1801.14 1212.86 L1800.55 1212.86 L1799.97 1212.86 L1799.38 1212.86 L1798.79 1212.86 L1798.21 1212.86 L1797.62 1212.86 L1797.03 1212.86 L1796.45 1212.86 L1795.86 1212.86 L1795.27 1212.86 L1794.69 1212.86 L1794.1 1212.86 L1793.52 1212.86 L1792.93 1212.86 L1792.34 1212.86 L1791.76 1212.86 L1791.17 1212.86 L1790.58 1212.86 L1790 1212.86 L1789.41 1212.86 L1788.82 1212.86 L1788.24 1212.86 L1787.65 1212.86 L1787.06 1212.86 L1786.48 1212.86 L1785.89 1212.86 L1785.31 1212.86 L1784.72 1212.86 L1784.13 1212.86 L1783.55 1212.86 L1782.96 1212.86 L1782.37 1212.86 L1781.79 1212.86 L1781.2 1212.86 L1780.61 1212.86 L1780.03 1212.86 L1779.44 1212.86 L1778.86 1212.86 L1778.27 1212.86 L1777.68 1212.86 L1777.1 1212.86 L1776.51 1212.86 L1775.92 1212.86 L1775.34 1212.86 L1774.75 1212.86 L1774.16 1212.86 L1773.58 1212.86 L1772.99 1212.86 L1772.4 1212.86 L1771.82 1212.86 L1771.23 1212.86 L1770.65 1212.86 L1770.06 1212.86 L1769.47 1212.86 L1768.89 1212.86 L1768.3 1212.86 L1767.71 1212.86 L1767.13 1212.86 L1766.54 1212.86 L1765.95 1212.86 L1765.37 1212.86 L1764.78 1212.86 L1764.19 1212.86 L1763.61 1212.86 L1763.02 1212.86 L1762.44 1212.86 L1761.85 1212.86 L1761.26 1212.86 L1760.68 1212.86 L1760.09 1212.86 L1759.5 1212.86 L1758.92 1212.86 L1758.33 1212.86 L1757.74 1212.86 L1757.16 1212.86 L1756.57 1212.86 L1755.99 1212.86 L1755.4 1212.86 L1754.81 1212.86 L1754.23 1212.86 L1753.64 1212.86 L1753.05 1212.86 L1752.47 1212.86 L1751.88 1212.86 L1751.29 1212.86 L1750.71 1212.86 L1750.12 1212.86 L1749.53 1212.86 L1748.95 1212.86 L1748.36 1212.86 L1747.78 1212.86 L1747.19 1212.86 L1746.6 1212.86 L1746.02 1212.86 L1745.43 1212.86 L1744.84 1212.86 L1744.26 1212.86 L1743.67 1212.86 L1743.08 1212.86 L1742.5 1212.86 L1741.91 1212.86 L1741.32 1212.86 L1740.74 1212.86 L1740.15 1212.86 L1739.57 1212.86 L1738.98 1212.86 L1738.39 1212.86 L1737.81 1212.86 L1737.22 1212.86 L1736.63 1212.86 L1736.05 1212.86 L1735.46 1212.86 L1734.87 1212.86 L1734.29 1212.86 L1733.7 1212.86 L1733.11 1212.86 L1732.53 1212.86 L1731.94 1212.86 L1731.36 1212.86 L1730.77 1212.86 L1730.18 1212.86 L1729.6 1212.86 L1729.01 1212.86 L1728.42 1212.86 L1727.84 1212.86 L1727.25 1212.86 L1726.66 1212.86 L1726.08 1212.86 L1725.49 1212.86 L1724.91 1212.86 L1724.32 1212.86 L1723.73 1212.86 L1723.15 1212.86 L1722.56 1212.86 L1721.97 1212.86 L1721.39 1212.86 L1720.8 1212.86 L1720.21 1212.86 L1719.63 1212.86 L1719.04 1212.86 L1718.45 1212.86 L1717.87 1212.86 L1717.28 1212.86 L1716.7 1212.86 L1716.11 1212.86 L1715.52 1212.86 L1714.94 1212.86 L1714.35 1212.86 L1713.76 1212.86 L1713.18 1212.86 L1712.59 1212.86 L1712 1212.86 L1711.42 1212.86 L1710.83 1212.86 L1710.24 1212.86 L1709.66 1212.86 L1709.07 1212.86 L1708.49 1212.86 L1707.9 1212.86 L1707.31 1212.86 L1706.73 1212.86 L1706.14 1212.86 L1705.55 1212.86 L1704.97 1212.86 L1704.38 1212.86 L1703.79 1212.86 L1703.21 1212.86 L1702.62 1212.86 L1702.04 1212.86 L1701.45 1212.86 L1700.86 1212.86 L1700.28 1212.86 L1699.69 1212.86 L1699.1 1212.86 L1698.52 1212.86 L1697.93 1212.86 L1697.34 1212.86 L1696.76 1212.86 L1696.17 1212.86 L1695.58 1212.86 L1695 1212.86 L1694.41 1212.86 L1693.83 1212.86 L1693.24 1212.86 L1692.65 1212.86 L1692.07 1212.86 L1691.48 1212.86 L1690.89 1212.86 L1690.31 1212.86 L1689.72 1212.86 L1689.13 1212.86 L1688.55 1212.86 L1687.96 1212.86 L1687.37 1212.86 L1686.79 1212.86 L1686.2 1212.86 L1685.62 1212.86 L1685.03 1212.86 L1684.44 1212.86 L1683.86 1212.86 L1683.27 1212.86 L1682.68 1212.86 L1682.1 1212.86 L1681.51 1212.86 L1680.92 1212.86 L1680.34 1212.86 L1679.75 1212.86 L1679.17 1212.86 L1678.58 1212.86 L1677.99 1212.86 L1677.41 1212.86 L1676.82 1212.86 L1676.23 1212.86 L1675.65 1212.86 L1675.06 1212.86 L1674.47 1212.86 L1673.89 1212.86 L1673.3 1212.86 L1672.71 1212.86 L1672.13 1212.86 L1671.54 1212.86 L1670.96 1212.86 L1670.37 1212.86 L1669.78 1212.86 L1669.2 1212.86 L1668.61 1212.86 L1668.02 1212.86 L1667.44 1212.86 L1666.85 1212.86 L1666.26 1212.86 L1665.68 1212.86 L1665.09 1212.86 L1664.5 1212.86 L1663.92 1212.86 L1663.33 1212.86 L1662.75 1212.86 L1662.16 1212.86 L1661.57 1212.86 L1660.99 1212.86 L1660.4 1212.86 L1659.81 1212.86 L1659.23 1212.86 L1658.64 1212.86 L1658.05 1212.86 L1657.47 1212.86 L1656.88 1212.86 L1656.29 1212.86 L1655.71 1212.86 L1655.12 1212.86 L1654.54 1212.86 L1653.95 1212.86 L1653.36 1212.86 L1652.78 1212.86 L1652.19 1212.86 L1651.6 1212.86 L1651.02 1212.86 L1650.43 1212.86 L1649.84 1212.86 L1649.26 1212.86 L1648.67 1212.86 L1648.09 1212.86 L1647.5 1212.86 L1646.91 1212.86 L1646.33 1212.86 L1645.74 1212.86 L1645.15 1212.86 L1644.57 1212.86 L1643.98 1212.86 L1643.39 1212.86 L1642.81 1212.86 L1642.22 1212.86 L1641.63 1212.86 L1641.05 1212.86 L1640.46 1212.86 L1639.88 1212.86 L1639.29 1212.86 L1638.7 1212.86 L1638.12 1212.86 L1637.53 1212.86 L1636.94 1212.86 L1636.36 1212.86 L1635.77 1212.86 L1635.18 1212.86 L1634.6 1212.86 L1634.01 1212.86 L1633.42 1212.86 L1632.84 1212.86 L1632.25 1212.86 L1631.67 1212.86 L1631.08 1212.86 L1630.49 1212.86 L1629.91 1212.86 L1629.32 1212.86 L1628.73 1212.86 L1628.15 1212.86 L1627.56 1212.86 L1626.97 1212.86 L1626.39 1212.86 L1625.8 1212.86 L1625.22 1212.86 L1624.63 1212.86 L1624.04 1212.86 L1623.46 1212.86 L1622.87 1212.86 L1622.28 1212.86 L1621.7 1212.86 L1621.11 1212.86 L1620.52 1212.86 L1619.94 1212.86 L1619.35 1212.86 L1618.76 1212.86 L1618.18 1212.86 L1617.59 1212.86 L1617.01 1212.86 L1616.42 1212.86 L1615.83 1212.86 L1615.25 1212.86 L1614.66 1212.86 L1614.07 1212.86 L1613.49 1212.86 L1612.9 1212.86 L1612.31 1212.86 L1611.73 1212.86 L1611.14 1212.86 L1610.55 1212.86 L1609.97 1212.86 L1609.38 1212.86 L1608.8 1212.86 L1608.21 1212.86 L1607.62 1212.86 L1607.04 1212.86 L1606.45 1212.86 L1605.86 1212.86 L1605.28 1212.86 L1604.69 1212.86 L1604.1 1212.86 L1603.52 1212.86 L1602.93 1212.86 L1602.34 1212.86 L1601.76 1212.86 L1601.17 1212.86 L1600.59 1212.86 L1600 1212.86 L1599.41 1212.86 L1598.83 1212.86 L1598.24 1212.86 L1597.65 1212.86 L1597.07 1212.86 L1596.48 1212.86 L1595.89 1212.86 L1595.31 1212.86 L1594.72 1212.86 L1594.14 1212.86 L1593.55 1212.86 L1592.96 1212.86 L1592.38 1212.86 L1591.79 1212.86 L1591.2 1212.86 L1590.62 1212.86 L1590.03 1212.86 L1589.44 1212.86 L1588.86 1212.86 L1588.27 1212.86 L1587.68 1212.86 L1587.1 1212.86 L1586.51 1212.86 L1585.93 1212.86 L1585.34 1212.86 L1584.75 1212.86 L1584.17 1212.86 L1583.58 1212.86 L1582.99 1212.86 L1582.41 1212.86 L1581.82 1212.86 L1581.23 1212.86 L1580.65 1212.86 L1580.06 1212.86 L1579.47 1212.86 L1578.89 1212.86 L1578.3 1212.86 L1577.72 1212.86 L1577.13 1212.86 L1576.54 1212.86 L1575.96 1212.86 L1575.37 1212.86 L1574.78 1212.86 L1574.2 1212.86 L1573.61 1212.86 L1573.02 1212.86 L1572.44 1212.86 L1571.85 1212.86 L1571.27 1212.86 L1570.68 1212.86 L1570.09 1212.86 L1569.51 1212.86 L1568.92 1212.86 L1568.33 1212.86 L1567.75 1212.86 L1567.16 1212.86 L1566.57 1212.86 L1565.99 1212.86 L1565.4 1212.86 L1564.81 1212.86 L1564.23 1212.86 L1563.64 1212.86 L1563.06 1212.86 L1562.47 1212.86 L1561.88 1212.86 L1561.3 1212.86 L1560.71 1212.86 L1560.12 1212.86 L1559.54 1212.86 L1558.95 1212.86 L1558.36 1212.86 L1557.78 1212.86 L1557.19 1212.86 L1556.6 1212.86 L1556.02 1212.86 L1555.43 1212.86 L1554.85 1212.86 L1554.26 1212.86 L1553.67 1212.86 L1553.09 1212.86 L1552.5 1212.86 L1551.91 1212.86 L1551.33 1212.86 L1550.74 1212.86 L1550.15 1212.86 L1549.57 1212.86 L1548.98 1212.86 L1548.4 1212.86 L1547.81 1212.86 L1547.22 1212.86 L1546.64 1212.86 L1546.05 1212.86 L1545.46 1212.86 L1544.88 1212.86 L1544.29 1212.86 L1543.7 1212.86 L1543.12 1212.86 L1542.53 1212.86 L1541.94 1212.86 L1541.36 1212.86 L1540.77 1212.86 L1540.19 1212.86 L1539.6 1212.86 L1539.01 1212.86 L1538.43 1212.86 L1537.84 1212.86 L1537.25 1212.86 L1536.67 1212.86 L1536.08 1212.86 L1535.49 1212.86 L1534.91 1212.86 L1534.32 1212.86 L1533.73 1212.86 L1533.15 1212.86 L1532.56 1212.86 L1531.98 1212.86 L1531.39 1212.86 L1530.8 1212.86 L1530.22 1212.86 L1529.63 1212.86 L1529.04 1212.86 L1528.46 1212.86 L1527.87 1212.86 L1527.28 1212.86 L1526.7 1212.86 L1526.11 1212.86 L1525.52 1212.86 L1524.94 1212.86 L1524.35 1212.86 L1523.77 1212.86 L1523.18 1212.86 L1522.59 1212.86 L1522.01 1212.86 L1521.42 1212.86 L1520.83 1212.86 L1520.25 1212.86 L1519.66 1212.86 L1519.07 1212.86 L1518.49 1212.86 L1517.9 1212.86 L1517.32 1212.86 L1516.73 1212.86 L1516.14 1212.86 L1515.56 1212.86 L1514.97 1212.86 L1514.38 1212.86 L1513.8 1212.86 L1513.21 1212.86 L1512.62 1212.86 L1512.04 1212.86 L1511.45 1212.86 L1510.86 1212.86 L1510.28 1212.86 L1509.69 1212.86 L1509.11 1212.86 L1508.52 1212.86 L1507.93 1212.86 L1507.35 1212.86 L1506.76 1212.86 L1506.17 1212.86 L1505.59 1212.86 L1505 1212.86 L1504.41 1212.86 L1503.83 1212.86 L1503.24 1212.86 L1502.65 1212.86 L1502.07 1212.86 L1501.48 1212.86 L1500.9 1212.86 L1500.31 1212.86 L1499.72 1212.86 L1499.14 1212.86 L1498.55 1212.86 L1497.96 1212.86 L1497.38 1212.86 L1496.79 1212.86 L1496.2 1212.86 L1495.62 1212.86 L1495.03 1212.86 L1494.45 1212.86 L1493.86 1212.86 L1493.27 1212.86 L1492.69 1212.86 L1492.1 1212.86 L1491.51 1212.86 L1490.93 1212.86 L1490.34 1212.86 L1489.75 1212.86 L1489.17 1212.86 L1488.58 1212.86 L1487.99 1212.86 L1487.41 1212.86 L1486.82 1212.86 L1486.24 1212.86 L1485.65 1212.86 L1485.06 1212.86 L1484.48 1212.86 L1483.89 1212.86 L1483.3 1212.86 L1482.72 1212.86 L1482.13 1212.86 L1481.54 1212.86 L1480.96 1212.86 L1480.37 1212.86 L1479.78 1212.86 L1479.2 1212.86 L1478.61 1212.86 L1478.03 1212.86 L1477.44 1212.86 L1476.85 1212.86 L1476.27 1212.86 L1475.68 1212.86 L1475.09 1212.86 L1474.51 1212.86 L1473.92 1212.86 L1473.33 1212.86 L1472.75 1212.86 L1472.16 1212.86 L1471.57 1212.86 L1470.99 1212.86 L1470.4 1212.86 L1469.82 1212.86 L1469.23 1212.86 L1468.64 1212.86 L1468.06 1212.86 L1467.47 1212.86 L1466.88 1212.86 L1466.3 1212.86 L1465.71 1212.86 L1465.12 1212.86 L1464.54 1212.86 L1463.95 1212.86 L1463.37 1212.86 L1462.78 1212.86 L1462.19 1212.86 L1461.61 1212.86 L1461.02 1212.86 L1460.43 1212.86 L1459.85 1212.86 L1459.26 1212.86 L1458.67 1212.86 L1458.09 1212.86 L1457.5 1212.86 L1456.91 1212.86 L1456.33 1212.86 L1455.74 1212.86 L1455.16 1212.86 L1454.57 1212.86 L1453.98 1212.86 L1453.4 1212.86 L1452.81 1212.86 L1452.22 1212.86 L1451.64 1212.86 L1451.05 1212.86 L1450.46 1212.86 L1449.88 1212.86 L1449.29 1212.86 L1448.7 1212.86 L1448.12 1212.86 L1447.53 1212.86 L1446.95 1212.86 L1446.36 1212.86 L1445.77 1212.86 L1445.19 1212.86 L1444.6 1212.86 L1444.01 1212.86 L1443.43 1212.86 L1442.84 1212.86 L1442.25 1212.86 L1441.67 1212.86 L1441.08 1212.86 L1440.5 1212.86 L1439.91 1212.86 L1439.32 1212.86 L1438.74 1212.86 L1438.15 1212.86 L1437.56 1212.86 L1436.98 1212.86 L1436.39 1212.86 L1435.8 1212.86 L1435.22 1212.86 L1434.63 1212.86 L1434.04 1212.86 L1433.46 1212.86 L1432.87 1212.86 L1432.29 1212.86 L1431.7 1212.86 L1431.11 1212.86 L1430.53 1212.86 L1429.94 1212.86 L1429.35 1212.86 L1428.77 1212.86 L1428.18 1212.86 L1427.59 1212.86 L1427.01 1212.86 L1426.42 1212.86 L1425.83 1212.86 L1425.25 1212.86 L1424.66 1212.86 L1424.08 1212.86 L1423.49 1212.86 L1422.9 1212.86 L1422.32 1212.86 L1421.73 1212.86 L1421.14 1212.86 L1420.56 1212.86 L1419.97 1212.86 L1419.38 1212.86 L1418.8 1212.86 L1418.21 1212.86 L1417.63 1212.86 L1417.04 1212.86 L1416.45 1212.86 L1415.87 1212.86 L1415.28 1212.86 L1414.69 1212.86 L1414.11 1212.86 L1413.52 1212.86 L1412.93 1212.86 L1412.35 1212.86 L1411.76 1212.86 L1411.17 1212.86 L1410.59 1212.86 L1410 1212.86 L1409.42 1212.86 L1408.83 1212.86 L1408.24 1212.86 L1407.66 1212.86 L1407.07 1212.86 L1406.48 1212.86 L1405.9 1212.86 L1405.31 1212.86 L1404.72 1212.86 L1404.14 1212.86 L1403.55 1212.86 L1402.96 1212.86 L1402.38 1212.86 L1401.79 1212.86 L1401.21 1212.86 L1400.62 1212.86 L1400.03 1212.86 L1399.45 1212.86 L1398.86 1212.86 L1398.27 1212.86 L1397.69 1212.86 L1397.1 1212.86 L1396.51 1212.86 L1395.93 1212.86 L1395.34 1212.86 L1394.75 1212.86 L1394.17 1212.86 L1393.58 1212.86 L1393 1212.86 L1392.41 1212.86 L1391.82 1212.86 L1391.24 1212.86 L1390.65 1212.86 L1390.06 1212.86 L1389.48 1212.86 L1388.89 1212.86 L1388.3 1212.86 L1387.72 1212.86 L1387.13 1212.86 L1386.55 1212.86 L1385.96 1212.86 L1385.37 1212.86 L1384.79 1212.86 L1384.2 1212.86 L1383.61 1212.86 L1383.03 1212.86 L1382.44 1212.86 L1381.85 1212.86 L1381.27 1212.86 L1380.68 1212.86 L1380.09 1212.86 L1379.51 1212.86 L1378.92 1212.86 L1378.34 1212.86 L1377.75 1212.86 L1377.16 1212.86 L1376.58 1212.86 L1375.99 1212.86 L1375.4 1212.86 L1374.82 1212.86 L1374.23 1212.86 L1373.64 1212.86 L1373.06 1212.86 L1372.47 1212.86 L1371.88 1212.86 L1371.3 1212.86 L1370.71 1212.86 L1370.13 1212.86 L1369.54 1212.86 L1368.95 1212.86 L1368.37 1212.86 L1367.78 1212.86 L1367.19 1212.86 L1366.61 1212.86 L1366.02 1212.86 L1365.43 1212.86 L1364.85 1212.86 L1364.26 1212.86 L1363.68 1212.86 L1363.09 1212.86 L1362.5 1212.86 L1361.92 1212.86 L1361.33 1212.86 L1360.74 1212.86 L1360.16 1212.86 L1359.57 1212.86 L1358.98 1212.86 L1358.4 1212.86 L1357.81 1212.86 L1357.22 1212.86 L1356.64 1212.86 L1356.05 1212.86 L1355.47 1212.86 L1354.88 1212.86 L1354.29 1212.86 L1353.71 1212.86 L1353.12 1212.86 L1352.53 1212.86 L1351.95 1212.86 L1351.36 1212.86 L1350.77 1212.86 L1350.19 1212.86 L1349.6 1212.86 L1349.01 1212.86 L1348.43 1212.86 L1347.84 1212.86 L1347.26 1212.86 L1346.67 1212.86 L1346.08 1212.86 L1345.5 1212.86 L1344.91 1212.86 L1344.32 1212.86 L1343.74 1212.86 L1343.15 1212.86 L1342.56 1212.86 L1341.98 1212.86 L1341.39 1212.86 L1340.8 1212.86 L1340.22 1212.86 L1339.63 1212.86 L1339.05 1212.86 L1338.46 1212.86 L1337.87 1212.86 L1337.29 1212.86 L1336.7 1212.86 L1336.11 1212.86 L1335.53 1212.86 L1334.94 1212.86 L1334.35 1212.86 L1333.77 1212.86 L1333.18 1212.86 L1332.6 1212.86 L1332.01 1212.86 L1331.42 1212.86 L1330.84 1212.86 L1330.25 1212.86 L1329.66 1212.86 L1329.08 1212.86 L1328.49 1212.86 L1327.9 1212.86 L1327.32 1212.86 L1326.73 1212.86 L1326.14 1212.86 L1325.56 1212.86 L1324.97 1212.86 L1324.39 1212.86 L1323.8 1212.86 L1323.21 1212.86 L1322.63 1212.86 L1322.04 1212.86 L1321.45 1212.86 L1320.87 1212.86 L1320.28 1212.86 L1319.69 1212.86 L1319.11 1212.86 L1318.52 1212.86 L1317.93 1212.86 L1317.35 1212.86 L1316.76 1212.86 L1316.18 1212.86 L1315.59 1212.86 L1315 1212.86 L1314.42 1212.86 L1313.83 1212.86 L1313.24 1212.86 L1312.66 1212.86 L1312.07 1212.86 L1311.48 1212.86 L1310.9 1212.86 L1310.31 1212.86 L1309.73 1212.86 L1309.14 1212.86 L1308.55 1212.86 L1307.97 1212.86 L1307.38 1212.86 L1306.79 1212.86 L1306.21 1212.86 L1305.62 1212.86 L1305.03 1212.86 L1304.45 1212.86 L1303.86 1212.86 L1303.27 1212.86 L1302.69 1212.86 L1302.1 1212.86 L1301.52 1212.86 L1300.93 1212.86 L1300.34 1212.86 L1299.76 1212.86 L1299.17 1212.86 L1298.58 1212.86 L1298 1212.86 L1297.41 1212.86 L1296.82 1212.86 L1296.24 1212.86 L1295.65 1212.86 L1295.06 1212.86 L1294.48 1212.86 L1293.89 1212.86 L1293.31 1212.86 L1292.72 1212.86 L1292.13 1212.86 L1291.55 1212.86 L1290.96 1212.86 L1290.37 1212.86 L1289.79 1212.86 L1289.2 1212.86 L1288.61 1212.86 L1288.03 1212.86 L1287.44 1212.86 L1286.86 1212.86 L1286.27 1212.86 L1285.68 1212.86 L1285.1 1212.86 L1284.51 1212.86 L1283.92 1212.86 L1283.34 1212.86 L1282.75 1212.86 L1282.16 1212.86 L1281.58 1212.86 L1280.99 1212.86 L1280.4 1212.86 L1279.82 1212.86 L1279.23 1212.86 L1278.65 1212.86 L1278.06 1212.86 L1277.47 1212.86 L1276.89 1212.86 L1276.3 1212.86 L1275.71 1212.86 L1275.13 1212.86 L1274.54 1212.86 L1273.95 1212.86 L1273.37 1212.86 L1272.78 1212.86 L1272.19 1212.86 L1271.61 1212.86 L1271.02 1212.86 L1270.44 1212.86 L1269.85 1212.86 L1269.26 1212.86 L1268.68 1212.86 L1268.09 1212.86 L1267.5 1212.86 L1266.92 1212.86 L1266.33 1212.86 L1265.74 1212.86 L1265.16 1212.86 L1264.57 1212.86 L1263.98 1212.86 L1263.4 1212.86 L1262.81 1212.86 L1262.23 1212.86 L1261.64 1212.86 L1261.05 1212.86 L1260.47 1212.86 L1259.88 1212.86 L1259.29 1212.86 L1258.71 1212.86 L1258.12 1212.86 L1257.53 1212.86 L1256.95 1212.86 L1256.36 1212.86 L1255.78 1212.86 L1255.19 1212.86 L1254.6 1212.86 L1254.02 1212.86 L1253.43 1212.86 L1252.84 1212.86 L1252.26 1212.86 L1251.67 1212.86 L1251.08 1212.86 L1250.5 1212.86 L1249.91 1212.86 L1249.32 1212.86 L1248.74 1212.86 L1248.15 1212.86 L1247.57 1212.86 L1246.98 1212.86 L1246.39 1212.86 L1245.81 1212.86 L1245.22 1212.86 L1244.63 1212.86 L1244.05 1212.86 L1243.46 1212.86 L1242.87 1212.86 L1242.29 1212.86 L1241.7 1212.86 L1241.11 1212.86 L1240.53 1212.86 L1239.94 1212.86 L1239.36 1212.86 L1238.77 1212.86 L1238.18 1212.86 L1237.6 1212.86 L1237.01 1212.86 L1236.42 1212.86 L1235.84 1212.86 L1235.25 1212.86 L1234.66 1212.86 L1234.08 1212.86 L1233.49 1212.86 L1232.91 1212.86 L1232.32 1212.86 L1231.73 1212.86 L1231.15 1212.86 L1230.56 1212.86 L1229.97 1212.86 L1229.39 1212.86 L1228.8 1212.86 L1228.21 1212.86 L1227.63 1212.86 L1227.04 1212.86 L1226.45 1212.86 L1225.87 1212.86 L1225.28 1212.86 L1224.7 1212.86 L1224.11 1212.86 L1223.52 1212.86 L1222.94 1212.86 L1222.35 1212.86 L1221.76 1212.86 L1221.18 1212.86 L1220.59 1212.86 L1220 1212.86 L1219.42 1212.86 L1218.83 1212.86 L1218.24 1212.86 L1217.66 1212.86 L1217.07 1212.86 L1216.49 1212.86 L1215.9 1212.86 L1215.31 1212.86 L1214.73 1212.86 L1214.14 1212.86 L1213.55 1212.86 L1212.97 1212.86 L1212.38 1212.86 L1211.79 1212.86 L1211.21 1212.86 L1210.62 1212.86 L1210.03 1212.86 L1209.45 1212.86 L1208.86 1212.86 L1208.28 1212.86 L1207.69 1212.86 L1207.1 1212.86 L1206.52 1212.86 L1205.93 1212.86 L1205.34 1212.86 L1204.76 1212.86 L1204.17 1212.86 L1203.58 1212.86 L1203 1212.86 L1202.41 1212.86 L1201.83 1212.86 L1201.24 1212.86 L1200.65 1212.86 L1200.07 1212.86 L1199.48 1212.86 L1198.89 1212.86 L1198.31 1212.86 L1197.72 1212.86 L1197.13 1212.86 L1196.55 1212.86 L1195.96 1212.86 L1195.37 1212.86 L1194.79 1212.86 L1194.2 1212.86 L1193.62 1212.86 L1193.03 1212.86 L1192.44 1212.86 L1191.86 1212.86 L1191.27 1212.86 L1190.68 1212.86 L1190.1 1212.86 L1189.51 1212.86 L1188.92 1212.86 L1188.34 1212.86 L1187.75 1212.86 L1187.16 1212.86 L1186.58 1212.86 L1185.99 1212.86 L1185.41 1212.86 L1184.82 1212.86 L1184.23 1212.86 L1183.65 1212.86 L1183.06 1212.86 L1182.47 1212.86 L1181.89 1212.86 L1181.3 1212.86 L1180.71 1212.86 L1180.13 1212.86 L1179.54 1212.86 L1178.96 1212.86 L1178.37 1212.86 L1177.78 1212.86 L1177.2 1212.86 L1176.61 1212.86 L1176.02 1212.86 L1175.44 1212.86 L1174.85 1212.86 L1174.26 1212.86 L1173.68 1212.86 L1173.09 1212.86 L1172.5 1212.86 L1171.92 1212.86 L1171.33 1212.86 L1170.75 1212.86 L1170.16 1212.86 L1169.57 1212.86 L1168.99 1212.86 L1168.4 1212.86 L1167.81 1212.86 L1167.23 1212.86 L1166.64 1212.86 L1166.05 1212.86 L1165.47 1212.86 L1164.88 1212.86 L1164.29 1212.86 L1163.71 1212.86 L1163.12 1212.86 L1162.54 1212.86 L1161.95 1212.86 L1161.36 1212.86 L1160.78 1212.86 L1160.19 1212.86 L1159.6 1212.86 L1159.02 1212.86 L1158.43 1212.86 L1157.84 1212.86 L1157.26 1212.86 L1156.67 1212.86 L1156.09 1212.86 L1155.5 1212.86 L1154.91 1212.86 L1154.33 1212.86 L1153.74 1212.86 L1153.15 1212.86 L1152.57 1212.86 L1151.98 1212.86 L1151.39 1212.86 L1150.81 1212.86 L1150.22 1212.86 L1149.63 1212.86 L1149.05 1212.86 L1148.46 1212.86 L1147.88 1212.86 L1147.29 1212.86 L1146.7 1212.86 L1146.12 1212.86 L1145.53 1212.86 L1144.94 1212.86 L1144.36 1212.86 L1143.77 1212.86 L1143.18 1212.86 L1142.6 1212.86 L1142.01 1212.86 L1141.42 1212.86 L1140.84 1212.86 L1140.25 1212.86 L1139.67 1212.86 L1139.08 1212.86 L1138.49 1212.86 L1137.91 1212.86 L1137.32 1212.86 L1136.73 1212.86 L1136.15 1212.86 L1135.56 1212.86 L1134.97 1212.86 L1134.39 1212.86 L1133.8 1212.86 L1133.21 1212.86 L1132.63 1212.86 L1132.04 1212.86 L1131.46 1212.86 L1130.87 1212.86 L1130.28 1212.86 L1129.7 1212.86 L1129.11 1212.86 L1128.52 1212.86 L1127.94 1212.86 L1127.35 1212.86 L1126.76 1212.86 L1126.18 1212.86 L1125.59 1212.86 L1125.01 1212.86 L1124.42 1212.86 L1123.83 1212.86 L1123.25 1212.86 L1122.66 1212.86 L1122.07 1212.86 L1121.49 1212.86 L1120.9 1212.86 L1120.31 1212.86 L1119.73 1212.86 L1119.14 1212.86 L1118.55 1212.86 L1117.97 1212.86 L1117.38 1212.86 L1116.8 1212.86 L1116.21 1212.86 L1115.62 1212.86 L1115.04 1212.86 L1114.45 1212.86 L1113.86 1212.86 L1113.28 1212.86 L1112.69 1212.86 L1112.1 1212.86 L1111.52 1212.86 L1110.93 1212.86 L1110.34 1212.86 L1109.76 1212.86 L1109.17 1212.86 L1108.59 1212.86 L1108 1212.86 L1107.41 1212.86 L1106.83 1212.86 L1106.24 1212.86 L1105.65 1212.86 L1105.07 1212.86 L1104.48 1212.86 L1103.89 1212.86 L1103.31 1212.86 L1102.72 1212.86 L1102.14 1212.86 L1101.55 1212.86 L1100.96 1212.86 L1100.38 1212.86 L1099.79 1212.86 L1099.2 1212.86 L1098.62 1212.86 L1098.03 1212.86 L1097.44 1212.86 L1096.86 1212.86 L1096.27 1212.86 L1095.68 1212.86 L1095.1 1212.86 L1094.51 1212.86 L1093.93 1212.86 L1093.34 1212.86 L1092.75 1212.86 L1092.17 1212.86 L1091.58 1212.86 L1090.99 1212.86 L1090.41 1212.86 L1089.82 1212.86 L1089.23 1212.86 L1088.65 1212.86 L1088.06 1212.86 L1087.47 1212.86 L1086.89 1212.86 L1086.3 1212.86 L1085.72 1212.86 L1085.13 1212.86 L1084.54 1212.86 L1083.96 1212.86 L1083.37 1212.86 L1082.78 1212.86 L1082.2 1212.86 L1081.61 1212.86 L1081.02 1212.86 L1080.44 1212.86 L1079.85 1212.86 L1079.26 1212.86 L1078.68 1212.86 L1078.09 1212.86 L1077.51 1212.86 L1076.92 1212.86 L1076.33 1212.86 L1075.75 1212.86 L1075.16 1212.86 L1074.57 1212.86 L1073.99 1212.86 L1073.4 1212.86 L1072.81 1212.86 L1072.23 1212.86 L1071.64 1212.86 L1071.06 1212.86 L1070.47 1212.86 L1069.88 1212.86 L1069.3 1212.86 L1068.71 1212.86 L1068.12 1212.86 L1067.54 1212.86 L1066.95 1212.86 L1066.36 1212.86 L1065.78 1212.86 L1065.19 1212.86 L1064.6 1212.86 L1064.02 1212.86 L1063.43 1212.86 L1062.85 1212.86 L1062.26 1212.86 L1061.67 1212.86 L1061.09 1212.86 L1060.5 1212.86 L1059.91 1212.86 L1059.33 1212.86 L1058.74 1212.86 L1058.15 1212.86 L1057.57 1212.86 L1056.98 1212.86 L1056.39 1212.86 L1055.81 1212.86 L1055.22 1212.86 L1054.64 1212.86 L1054.05 1212.86 L1053.46 1212.86 L1052.88 1212.86 L1052.29 1212.86 L1051.7 1212.86 L1051.12 1212.86 L1050.53 1212.86 L1049.94 1212.86 L1049.36 1212.86 L1048.77 1212.86 L1048.19 1212.86 L1047.6 1212.86 L1047.01 1212.86 L1046.43 1212.86 L1045.84 1212.86 L1045.25 1212.86 L1044.67 1212.86 L1044.08 1212.86 L1043.49 1212.86 L1042.91 1212.86 L1042.32 1212.86 L1041.73 1212.86 L1041.15 1212.86 L1040.56 1212.86 L1039.98 1212.86 L1039.39 1212.86 L1038.8 1212.86 L1038.22 1212.86 L1037.63 1212.86 L1037.04 1212.86 L1036.46 1212.86 L1035.87 1212.86 L1035.28 1212.86 L1034.7 1212.86 L1034.11 1212.86 L1033.52 1212.86 L1032.94 1212.86 L1032.35 1212.86 L1031.77 1212.86 L1031.18 1212.86 L1030.59 1212.86 L1030.01 1212.86 L1029.42 1212.86 L1028.83 1212.86 L1028.25 1212.86 L1027.66 1212.86 L1027.07 1212.86 L1026.49 1212.86 L1025.9 1212.86 L1025.32 1212.86 L1024.73 1212.86 L1024.14 1212.86 L1023.56 1212.86 L1022.97 1212.86 L1022.38 1212.86 L1021.8 1212.86 L1021.21 1212.86 L1020.62 1212.86 L1020.04 1212.86 L1019.45 1212.86 L1018.86 1212.86 L1018.28 1212.86 L1017.69 1212.86 L1017.11 1212.86 L1016.52 1212.86 L1015.93 1212.86 L1015.35 1212.86 L1014.76 1212.86 L1014.17 1212.86 L1013.59 1212.86 L1013 1212.86 L1012.41 1212.86 L1011.83 1212.86 L1011.24 1212.86 L1010.65 1212.86 L1010.07 1212.86 L1009.48 1212.86 L1008.9 1212.86 L1008.31 1212.86 L1007.72 1212.86 L1007.14 1212.86 L1006.55 1212.86 L1005.96 1212.86 L1005.38 1212.86 L1004.79 1212.86 L1004.2 1212.86 L1003.62 1212.86 L1003.03 1212.86 L1002.44 1212.86 L1001.86 1212.86 L1001.27 1212.86 L1000.69 1212.86 L1000.1 1212.86 L999.513 1212.86 L998.926 1212.86 L998.34 1212.86 L997.754 1212.86 L997.167 1212.86 L996.581 1212.86 L995.994 1212.86 L995.408 1212.86 L994.822 1212.86 L994.235 1212.86 L993.649 1212.86 L993.062 1212.86 L992.476 1212.86 L991.889 1212.86 L991.303 1212.86 L990.717 1212.86 L990.13 1212.86 L989.544 1212.86 L988.957 1212.86 L988.371 1212.86 L987.785 1212.86 L987.198 1212.86 L986.612 1212.86 L986.025 1212.86  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1213.18 986.612,1213.18 987.198,1213.18 987.785,1213.18 988.371,1213.18 988.957,1213.18 989.544,1213.18 990.13,1213.18 990.717,1213.18 991.303,1213.18 991.889,1213.18 992.476,1213.18 993.062,1213.18 993.649,1213.18 994.235,1213.18 994.822,1213.18 995.408,1213.18 995.994,1213.18 996.581,1213.18 997.167,1213.18 997.754,1213.18 998.34,1213.18 998.926,1213.18 999.513,1213.18 1000.1,1213.18 1000.69,1213.18 1001.27,1213.18 1001.86,1213.18 1002.44,1213.18 1003.03,1213.18 1003.62,1213.18 1004.2,1213.18 1004.79,1213.18 1005.38,1213.18 1005.96,1213.18 1006.55,1213.18 1007.14,1213.18 1007.72,1213.18 1008.31,1213.18 1008.9,1213.18 1009.48,1213.18 1010.07,1213.18 1010.65,1213.18 1011.24,1213.18 1011.83,1213.18 1012.41,1213.18 1013,1213.18 1013.59,1213.18 1014.17,1213.18 1014.76,1213.18 1015.35,1213.18 1015.93,1213.18 1016.52,1213.18 1017.11,1213.18 1017.69,1213.18 1018.28,1213.18 1018.86,1213.18 1019.45,1213.18 1020.04,1213.18 1020.62,1213.18 1021.21,1213.18 1021.8,1213.18 1022.38,1213.18 1022.97,1213.18 1023.56,1213.18 1024.14,1213.18 1024.73,1213.18 1025.32,1213.18 1025.9,1213.18 1026.49,1213.18 1027.07,1213.18 1027.66,1213.18 1028.25,1213.18 1028.83,1213.18 1029.42,1213.18 1030.01,1213.18 1030.59,1213.18 1031.18,1213.18 1031.77,1213.18 1032.35,1213.18 1032.94,1213.18 1033.52,1213.18 1034.11,1213.18 1034.7,1213.18 1035.28,1213.18 1035.87,1213.18 1036.46,1213.18 1037.04,1213.18 1037.63,1213.18 1038.22,1213.18 1038.8,1213.18 1039.39,1213.18 1039.98,1213.18 1040.56,1213.18 1041.15,1213.18 1041.73,1213.18 1042.32,1213.18 1042.91,1213.18 1043.49,1213.18 1044.08,1213.18 1044.67,1213.18 1045.25,1213.18 1045.84,1213.18 1046.43,1213.18 1047.01,1213.18 1047.6,1213.18 1048.19,1213.18 1048.77,1213.18 1049.36,1213.18 1049.94,1213.18 1050.53,1213.18 1051.12,1213.18 1051.7,1213.18 1052.29,1213.18 1052.88,1213.18 1053.46,1213.18 1054.05,1213.18 1054.64,1213.18 1055.22,1213.18 1055.81,1213.18 1056.39,1213.18 1056.98,1213.18 1057.57,1213.18 1058.15,1213.18 1058.74,1213.18 1059.33,1213.18 1059.91,1213.18 1060.5,1213.18 1061.09,1213.18 1061.67,1213.18 1062.26,1213.18 1062.85,1213.18 1063.43,1213.18 1064.02,1213.18 1064.6,1213.18 1065.19,1213.18 1065.78,1213.18 1066.36,1213.18 1066.95,1213.18 1067.54,1213.18 1068.12,1213.18 1068.71,1213.18 1069.3,1213.18 1069.88,1213.18 1070.47,1213.18 1071.06,1213.18 1071.64,1213.18 1072.23,1213.18 1072.81,1213.18 1073.4,1213.18 1073.99,1213.18 1074.57,1213.18 1075.16,1213.18 1075.75,1213.18 1076.33,1213.18 1076.92,1213.18 1077.51,1213.18 1078.09,1213.18 1078.68,1213.18 1079.26,1213.18 1079.85,1213.18 1080.44,1213.18 1081.02,1213.18 1081.61,1213.18 1082.2,1213.18 1082.78,1213.18 1083.37,1213.18 1083.96,1213.18 1084.54,1213.18 1085.13,1213.18 1085.72,1213.18 1086.3,1213.18 1086.89,1213.18 1087.47,1213.18 1088.06,1213.18 1088.65,1213.18 1089.23,1213.18 1089.82,1213.18 1090.41,1213.18 1090.99,1213.18 1091.58,1213.18 1092.17,1213.18 1092.75,1213.18 1093.34,1213.18 1093.93,1213.18 1094.51,1213.18 1095.1,1213.18 1095.68,1213.18 1096.27,1213.18 1096.86,1213.18 1097.44,1213.18 1098.03,1213.18 1098.62,1213.18 1099.2,1213.18 1099.79,1213.18 1100.38,1213.18 1100.96,1213.18 1101.55,1213.18 1102.14,1213.18 1102.72,1213.18 1103.31,1213.18 1103.89,1213.18 1104.48,1213.18 1105.07,1213.18 1105.65,1213.18 1106.24,1213.18 1106.83,1213.18 1107.41,1213.18 1108,1213.18 1108.59,1213.18 1109.17,1213.18 1109.76,1213.18 1110.34,1213.18 1110.93,1213.18 1111.52,1213.18 1112.1,1213.18 1112.69,1213.18 1113.28,1213.18 1113.86,1213.18 1114.45,1213.18 1115.04,1213.18 1115.62,1213.18 1116.21,1213.18 1116.8,1213.18 1117.38,1213.18 1117.97,1213.18 1118.55,1213.18 1119.14,1213.18 1119.73,1213.18 1120.31,1213.18 1120.9,1213.18 1121.49,1213.18 1122.07,1213.18 1122.66,1213.18 1123.25,1213.18 1123.83,1213.18 1124.42,1213.18 1125.01,1213.18 1125.59,1213.18 1126.18,1213.18 1126.76,1213.18 1127.35,1213.18 1127.94,1213.18 1128.52,1213.18 1129.11,1213.18 1129.7,1213.18 1130.28,1213.18 1130.87,1213.18 1131.46,1213.18 1132.04,1213.18 1132.63,1213.18 1133.21,1213.18 1133.8,1213.18 1134.39,1213.18 1134.97,1213.18 1135.56,1213.18 1136.15,1213.18 1136.73,1213.18 1137.32,1213.18 1137.91,1213.18 1138.49,1213.18 1139.08,1213.18 1139.67,1213.18 1140.25,1213.18 1140.84,1213.18 1141.42,1213.18 1142.01,1213.18 1142.6,1213.18 1143.18,1213.18 1143.77,1213.18 1144.36,1213.18 1144.94,1213.18 1145.53,1213.18 1146.12,1213.18 1146.7,1213.18 1147.29,1213.18 1147.88,1213.18 1148.46,1213.18 1149.05,1213.18 1149.63,1213.18 1150.22,1213.18 1150.81,1213.18 1151.39,1213.18 1151.98,1213.18 1152.57,1213.18 1153.15,1213.18 1153.74,1213.18 1154.33,1213.18 1154.91,1213.18 1155.5,1213.18 1156.09,1213.18 1156.67,1213.18 1157.26,1213.18 1157.84,1213.18 1158.43,1213.18 1159.02,1213.18 1159.6,1213.18 1160.19,1213.18 1160.78,1213.18 1161.36,1213.18 1161.95,1213.18 1162.54,1213.18 1163.12,1213.18 1163.71,1213.18 1164.29,1213.18 1164.88,1213.18 1165.47,1213.18 1166.05,1213.18 1166.64,1213.18 1167.23,1213.18 1167.81,1213.18 1168.4,1213.18 1168.99,1213.18 1169.57,1213.18 1170.16,1213.18 1170.75,1213.18 1171.33,1213.18 1171.92,1213.18 1172.5,1213.18 1173.09,1213.18 1173.68,1213.18 1174.26,1213.18 1174.85,1213.18 1175.44,1213.18 1176.02,1213.18 1176.61,1213.18 1177.2,1213.18 1177.78,1213.18 1178.37,1213.18 1178.96,1213.18 1179.54,1213.18 1180.13,1213.18 1180.71,1213.18 1181.3,1213.18 1181.89,1213.18 1182.47,1213.18 1183.06,1213.18 1183.65,1213.18 1184.23,1213.18 1184.82,1213.18 1185.41,1213.18 1185.99,1213.18 1186.58,1213.18 1187.16,1213.18 1187.75,1213.18 1188.34,1213.18 1188.92,1213.18 1189.51,1213.18 1190.1,1213.18 1190.68,1213.18 1191.27,1213.18 1191.86,1213.18 1192.44,1213.18 1193.03,1213.18 1193.62,1213.18 1194.2,1213.18 1194.79,1213.18 1195.37,1213.18 1195.96,1213.18 1196.55,1213.18 1197.13,1213.18 1197.72,1213.18 1198.31,1213.18 1198.89,1213.18 1199.48,1213.18 1200.07,1213.18 1200.65,1213.18 1201.24,1213.18 1201.83,1213.18 1202.41,1213.18 1203,1213.18 1203.58,1213.18 1204.17,1213.18 1204.76,1213.18 1205.34,1213.18 1205.93,1213.18 1206.52,1213.18 1207.1,1213.18 1207.69,1213.18 1208.28,1213.18 1208.86,1213.18 1209.45,1213.18 1210.03,1213.18 1210.62,1213.18 1211.21,1213.18 1211.79,1213.18 1212.38,1213.18 1212.97,1213.18 1213.55,1213.18 1214.14,1213.18 1214.73,1213.18 1215.31,1213.18 1215.9,1213.18 1216.49,1213.18 1217.07,1213.18 1217.66,1213.18 1218.24,1213.18 1218.83,1213.18 1219.42,1213.18 1220,1213.18 1220.59,1213.18 1221.18,1213.18 1221.76,1213.18 1222.35,1213.18 1222.94,1213.18 1223.52,1213.18 1224.11,1213.18 1224.7,1213.18 1225.28,1213.18 1225.87,1213.18 1226.45,1213.18 1227.04,1213.18 1227.63,1213.18 1228.21,1213.18 1228.8,1213.18 1229.39,1213.18 1229.97,1213.18 1230.56,1213.18 1231.15,1213.18 1231.73,1213.18 1232.32,1213.18 1232.91,1213.18 1233.49,1213.18 1234.08,1213.18 1234.66,1213.18 1235.25,1213.18 1235.84,1213.18 1236.42,1213.18 1237.01,1213.18 1237.6,1213.18 1238.18,1213.18 1238.77,1213.18 1239.36,1213.18 1239.94,1213.18 1240.53,1213.18 1241.11,1213.18 1241.7,1213.18 1242.29,1213.18 1242.87,1213.18 1243.46,1213.18 1244.05,1213.18 1244.63,1213.18 1245.22,1213.18 1245.81,1213.18 1246.39,1213.18 1246.98,1213.18 1247.57,1213.18 1248.15,1213.18 1248.74,1213.18 1249.32,1213.18 1249.91,1213.18 1250.5,1213.18 1251.08,1213.18 1251.67,1213.18 1252.26,1213.18 1252.84,1213.18 1253.43,1213.18 1254.02,1213.18 1254.6,1213.18 1255.19,1213.18 1255.78,1213.18 1256.36,1213.18 1256.95,1213.18 1257.53,1213.18 1258.12,1213.18 1258.71,1213.18 1259.29,1213.18 1259.88,1213.18 1260.47,1213.18 1261.05,1213.18 1261.64,1213.18 1262.23,1213.18 1262.81,1213.18 1263.4,1213.18 1263.98,1213.18 1264.57,1213.18 1265.16,1213.18 1265.74,1213.18 1266.33,1213.18 1266.92,1213.18 1267.5,1213.18 1268.09,1213.18 1268.68,1213.18 1269.26,1213.18 1269.85,1213.18 1270.44,1213.18 1271.02,1213.18 1271.61,1213.18 1272.19,1213.18 1272.78,1213.18 1273.37,1213.18 1273.95,1213.18 1274.54,1213.18 1275.13,1213.18 1275.71,1213.18 1276.3,1213.18 1276.89,1213.18 1277.47,1213.18 1278.06,1213.18 1278.65,1213.18 1279.23,1213.18 1279.82,1213.18 1280.4,1213.18 1280.99,1213.18 1281.58,1213.18 1282.16,1213.18 1282.75,1213.18 1283.34,1213.18 1283.92,1213.18 1284.51,1213.18 1285.1,1213.18 1285.68,1213.18 1286.27,1213.18 1286.86,1213.18 1287.44,1213.18 1288.03,1213.18 1288.61,1213.18 1289.2,1213.18 1289.79,1213.18 1290.37,1213.18 1290.96,1213.18 1291.55,1213.18 1292.13,1213.18 1292.72,1213.18 1293.31,1213.18 1293.89,1213.18 1294.48,1213.18 1295.06,1213.18 1295.65,1213.18 1296.24,1213.18 1296.82,1213.18 1297.41,1213.18 1298,1213.18 1298.58,1213.18 1299.17,1213.18 1299.76,1213.18 1300.34,1213.18 1300.93,1213.18 1301.52,1213.18 1302.1,1213.18 1302.69,1213.18 1303.27,1213.18 1303.86,1213.18 1304.45,1213.18 1305.03,1213.18 1305.62,1213.18 1306.21,1213.18 1306.79,1213.18 1307.38,1213.18 1307.97,1213.18 1308.55,1213.18 1309.14,1213.18 1309.73,1213.18 1310.31,1213.18 1310.9,1213.18 1311.48,1213.18 1312.07,1213.18 1312.66,1213.18 1313.24,1213.18 1313.83,1213.18 1314.42,1213.18 1315,1213.18 1315.59,1213.18 1316.18,1213.18 1316.76,1213.18 1317.35,1213.18 1317.93,1213.18 1318.52,1213.18 1319.11,1213.18 1319.69,1213.18 1320.28,1213.18 1320.87,1213.18 1321.45,1213.18 1322.04,1213.18 1322.63,1213.18 1323.21,1213.18 1323.8,1213.18 1324.39,1213.18 1324.97,1213.18 1325.56,1213.18 1326.14,1213.18 1326.73,1213.18 1327.32,1213.18 1327.9,1213.18 1328.49,1213.18 1329.08,1213.18 1329.66,1213.18 1330.25,1213.18 1330.84,1213.18 1331.42,1213.18 1332.01,1213.18 1332.6,1213.18 1333.18,1213.18 1333.77,1213.18 1334.35,1213.18 1334.94,1213.18 1335.53,1213.18 1336.11,1213.18 1336.7,1213.18 1337.29,1213.18 1337.87,1213.18 1338.46,1213.18 1339.05,1213.18 1339.63,1213.18 1340.22,1213.18 1340.8,1213.18 1341.39,1213.18 1341.98,1213.18 1342.56,1213.18 1343.15,1213.18 1343.74,1213.18 1344.32,1213.18 1344.91,1213.18 1345.5,1213.18 1346.08,1213.18 1346.67,1213.18 1347.26,1213.18 1347.84,1213.18 1348.43,1213.18 1349.01,1213.18 1349.6,1213.18 1350.19,1213.18 1350.77,1213.18 1351.36,1213.18 1351.95,1213.18 1352.53,1213.18 1353.12,1213.18 1353.71,1213.18 1354.29,1213.18 1354.88,1213.18 1355.47,1213.18 1356.05,1213.18 1356.64,1213.18 1357.22,1213.18 1357.81,1213.18 1358.4,1213.18 1358.98,1213.18 1359.57,1213.18 1360.16,1213.18 1360.74,1213.18 1361.33,1213.18 1361.92,1213.18 1362.5,1213.18 1363.09,1213.18 1363.68,1213.18 1364.26,1213.18 1364.85,1213.18 1365.43,1213.18 1366.02,1213.18 1366.61,1213.18 1367.19,1213.18 1367.78,1213.18 1368.37,1213.18 1368.95,1213.18 1369.54,1213.18 1370.13,1213.18 1370.71,1213.18 1371.3,1213.18 1371.88,1213.18 1372.47,1213.18 1373.06,1213.18 1373.64,1213.18 1374.23,1213.18 1374.82,1213.18 1375.4,1213.18 1375.99,1213.18 1376.58,1213.18 1377.16,1213.18 1377.75,1213.18 1378.34,1213.18 1378.92,1213.18 1379.51,1213.18 1380.09,1213.18 1380.68,1213.18 1381.27,1213.18 1381.85,1213.18 1382.44,1213.18 1383.03,1213.18 1383.61,1213.18 1384.2,1213.18 1384.79,1213.18 1385.37,1213.18 1385.96,1213.18 1386.55,1213.18 1387.13,1213.18 1387.72,1213.18 1388.3,1213.18 1388.89,1213.18 1389.48,1213.18 1390.06,1213.18 1390.65,1213.18 1391.24,1213.18 1391.82,1213.18 1392.41,1213.18 1393,1213.18 1393.58,1213.18 1394.17,1213.18 1394.75,1213.18 1395.34,1213.18 1395.93,1213.18 1396.51,1213.18 1397.1,1213.18 1397.69,1213.18 1398.27,1213.18 1398.86,1213.18 1399.45,1213.18 1400.03,1213.18 1400.62,1213.18 1401.21,1213.18 1401.79,1213.18 1402.38,1213.18 1402.96,1213.18 1403.55,1213.18 1404.14,1213.18 1404.72,1213.18 1405.31,1213.18 1405.9,1213.18 1406.48,1213.18 1407.07,1213.18 1407.66,1213.18 1408.24,1213.18 1408.83,1213.18 1409.42,1213.18 1410,1213.18 1410.59,1213.18 1411.17,1213.18 1411.76,1213.18 1412.35,1213.18 1412.93,1213.18 1413.52,1213.18 1414.11,1213.18 1414.69,1213.18 1415.28,1213.18 1415.87,1213.18 1416.45,1213.18 1417.04,1213.18 1417.63,1213.18 1418.21,1213.18 1418.8,1213.18 1419.38,1213.18 1419.97,1213.18 1420.56,1213.18 1421.14,1213.18 1421.73,1213.18 1422.32,1213.18 1422.9,1213.18 1423.49,1213.18 1424.08,1213.18 1424.66,1213.18 1425.25,1213.18 1425.83,1213.18 1426.42,1213.18 1427.01,1213.18 1427.59,1213.18 1428.18,1213.18 1428.77,1213.18 1429.35,1213.18 1429.94,1213.18 1430.53,1213.18 1431.11,1213.18 1431.7,1213.18 1432.29,1213.18 1432.87,1213.18 1433.46,1213.18 1434.04,1213.18 1434.63,1213.18 1435.22,1213.18 1435.8,1213.18 1436.39,1213.18 1436.98,1213.18 1437.56,1213.18 1438.15,1213.18 1438.74,1213.18 1439.32,1213.18 1439.91,1213.18 1440.5,1213.18 1441.08,1213.18 1441.67,1213.18 1442.25,1213.18 1442.84,1213.18 1443.43,1213.18 1444.01,1213.18 1444.6,1213.18 1445.19,1213.18 1445.77,1213.18 1446.36,1213.18 1446.95,1213.18 1447.53,1213.18 1448.12,1213.18 1448.7,1213.18 1449.29,1213.18 1449.88,1213.18 1450.46,1213.18 1451.05,1213.18 1451.64,1213.18 1452.22,1213.18 1452.81,1213.18 1453.4,1213.18 1453.98,1213.18 1454.57,1213.18 1455.16,1213.18 1455.74,1213.18 1456.33,1213.18 1456.91,1213.18 1457.5,1213.18 1458.09,1213.18 1458.67,1213.18 1459.26,1213.18 1459.85,1213.18 1460.43,1213.18 1461.02,1213.18 1461.61,1213.18 1462.19,1213.18 1462.78,1213.18 1463.37,1213.18 1463.95,1213.18 1464.54,1213.18 1465.12,1213.18 1465.71,1213.18 1466.3,1213.18 1466.88,1213.18 1467.47,1213.18 1468.06,1213.18 1468.64,1213.18 1469.23,1213.18 1469.82,1213.18 1470.4,1213.18 1470.99,1213.18 1471.57,1213.18 1472.16,1213.18 1472.75,1213.18 1473.33,1213.18 1473.92,1213.18 1474.51,1213.18 1475.09,1213.18 1475.68,1213.18 1476.27,1213.18 1476.85,1213.18 1477.44,1213.18 1478.03,1213.18 1478.61,1213.18 1479.2,1213.18 1479.78,1213.18 1480.37,1213.18 1480.96,1213.18 1481.54,1213.18 1482.13,1213.18 1482.72,1213.18 1483.3,1213.18 1483.89,1213.18 1484.48,1213.18 1485.06,1213.18 1485.65,1213.18 1486.24,1213.18 1486.82,1213.18 1487.41,1213.18 1487.99,1213.18 1488.58,1213.18 1489.17,1213.18 1489.75,1213.18 1490.34,1213.18 1490.93,1213.18 1491.51,1213.18 1492.1,1213.18 1492.69,1213.18 1493.27,1213.18 1493.86,1213.18 1494.45,1213.18 1495.03,1213.18 1495.62,1213.18 1496.2,1213.18 1496.79,1213.18 1497.38,1213.18 1497.96,1213.18 1498.55,1213.18 1499.14,1213.18 1499.72,1213.18 1500.31,1213.18 1500.9,1213.18 1501.48,1213.18 1502.07,1213.18 1502.65,1213.18 1503.24,1213.18 1503.83,1213.18 1504.41,1213.18 1505,1213.18 1505.59,1213.18 1506.17,1213.18 1506.76,1213.18 1507.35,1213.18 1507.93,1213.18 1508.52,1213.18 1509.11,1213.18 1509.69,1213.18 1510.28,1213.18 1510.86,1213.18 1511.45,1213.18 1512.04,1213.18 1512.62,1213.18 1513.21,1213.18 1513.8,1213.18 1514.38,1213.18 1514.97,1213.18 1515.56,1213.18 1516.14,1213.18 1516.73,1213.18 1517.32,1213.18 1517.9,1213.18 1518.49,1213.18 1519.07,1213.18 1519.66,1213.18 1520.25,1213.18 1520.83,1213.18 1521.42,1213.18 1522.01,1213.18 1522.59,1213.18 1523.18,1213.18 1523.77,1213.18 1524.35,1213.18 1524.94,1213.18 1525.52,1213.18 1526.11,1213.18 1526.7,1213.18 1527.28,1213.18 1527.87,1213.18 1528.46,1213.18 1529.04,1213.18 1529.63,1213.18 1530.22,1213.18 1530.8,1213.18 1531.39,1213.18 1531.98,1213.18 1532.56,1213.18 1533.15,1213.18 1533.73,1213.18 1534.32,1213.18 1534.91,1213.18 1535.49,1213.18 1536.08,1213.18 1536.67,1213.18 1537.25,1213.18 1537.84,1213.18 1538.43,1213.18 1539.01,1213.18 1539.6,1213.18 1540.19,1213.18 1540.77,1213.18 1541.36,1213.18 1541.94,1213.18 1542.53,1213.18 1543.12,1213.18 1543.7,1213.18 1544.29,1213.18 1544.88,1213.18 1545.46,1213.18 1546.05,1213.18 1546.64,1213.18 1547.22,1213.18 1547.81,1213.18 1548.4,1213.18 1548.98,1213.18 1549.57,1213.18 1550.15,1213.18 1550.74,1213.18 1551.33,1213.18 1551.91,1213.18 1552.5,1213.18 1553.09,1213.18 1553.67,1213.18 1554.26,1213.18 1554.85,1213.18 1555.43,1213.18 1556.02,1213.18 1556.6,1213.18 1557.19,1213.18 1557.78,1213.18 1558.36,1213.18 1558.95,1213.18 1559.54,1213.18 1560.12,1213.18 1560.71,1213.18 1561.3,1213.18 1561.88,1213.18 1562.47,1213.18 1563.06,1213.18 1563.64,1213.18 1564.23,1213.18 1564.81,1213.18 1565.4,1213.18 1565.99,1213.18 1566.57,1213.18 1567.16,1213.18 1567.75,1213.18 1568.33,1213.18 1568.92,1213.18 1569.51,1213.18 1570.09,1213.18 1570.68,1213.18 1571.27,1213.18 1571.85,1213.18 1572.44,1213.18 1573.02,1213.18 1573.61,1213.18 1574.2,1213.18 1574.78,1213.18 1575.37,1213.18 1575.96,1213.18 1576.54,1213.18 1577.13,1213.18 1577.72,1213.18 1578.3,1213.18 1578.89,1213.18 1579.47,1213.18 1580.06,1213.18 1580.65,1213.18 1581.23,1213.18 1581.82,1213.18 1582.41,1213.18 1582.99,1213.18 1583.58,1213.18 1584.17,1213.18 1584.75,1213.18 1585.34,1213.18 1585.93,1213.18 1586.51,1213.18 1587.1,1213.18 1587.68,1213.18 1588.27,1213.18 1588.86,1213.18 1589.44,1213.18 1590.03,1213.18 1590.62,1213.18 1591.2,1213.18 1591.79,1213.18 1592.38,1213.18 1592.96,1213.18 1593.55,1213.18 1594.14,1213.18 1594.72,1213.18 1595.31,1213.18 1595.89,1213.18 1596.48,1213.18 1597.07,1213.18 1597.65,1213.18 1598.24,1213.18 1598.83,1213.18 1599.41,1213.18 1600,1213.18 1600.59,1213.18 1601.17,1213.18 1601.76,1213.18 1602.34,1213.18 1602.93,1213.18 1603.52,1213.18 1604.1,1213.18 1604.69,1213.18 1605.28,1213.18 1605.86,1213.18 1606.45,1213.18 1607.04,1213.18 1607.62,1213.18 1608.21,1213.18 1608.8,1213.18 1609.38,1213.18 1609.97,1213.18 1610.55,1213.18 1611.14,1213.18 1611.73,1213.18 1612.31,1213.18 1612.9,1213.18 1613.49,1213.18 1614.07,1213.18 1614.66,1213.18 1615.25,1213.18 1615.83,1213.18 1616.42,1213.18 1617.01,1213.18 1617.59,1213.18 1618.18,1213.18 1618.76,1213.18 1619.35,1213.18 1619.94,1213.18 1620.52,1213.18 1621.11,1213.18 1621.7,1213.18 1622.28,1213.18 1622.87,1213.18 1623.46,1213.18 1624.04,1213.18 1624.63,1213.18 1625.22,1213.18 1625.8,1213.18 1626.39,1213.18 1626.97,1213.18 1627.56,1213.18 1628.15,1213.18 1628.73,1213.18 1629.32,1213.18 1629.91,1213.18 1630.49,1213.18 1631.08,1213.18 1631.67,1213.18 1632.25,1213.18 1632.84,1213.18 1633.42,1213.18 1634.01,1213.18 1634.6,1213.18 1635.18,1213.18 1635.77,1213.18 1636.36,1213.18 1636.94,1213.18 1637.53,1213.18 1638.12,1213.18 1638.7,1213.18 1639.29,1213.18 1639.88,1213.18 1640.46,1213.18 1641.05,1213.18 1641.63,1213.18 1642.22,1213.18 1642.81,1213.18 1643.39,1213.18 1643.98,1213.18 1644.57,1213.18 1645.15,1213.18 1645.74,1213.18 1646.33,1213.18 1646.91,1213.18 1647.5,1213.18 1648.09,1213.18 1648.67,1213.18 1649.26,1213.18 1649.84,1213.18 1650.43,1213.18 1651.02,1213.18 1651.6,1213.18 1652.19,1213.18 1652.78,1213.18 1653.36,1213.18 1653.95,1213.18 1654.54,1213.18 1655.12,1213.18 1655.71,1213.18 1656.29,1213.18 1656.88,1213.18 1657.47,1213.18 1658.05,1213.18 1658.64,1213.18 1659.23,1213.18 1659.81,1213.18 1660.4,1213.18 1660.99,1213.18 1661.57,1213.18 1662.16,1213.18 1662.75,1213.18 1663.33,1213.18 1663.92,1213.18 1664.5,1213.18 1665.09,1213.18 1665.68,1213.18 1666.26,1213.18 1666.85,1213.18 1667.44,1213.18 1668.02,1213.18 1668.61,1213.18 1669.2,1213.18 1669.78,1213.18 1670.37,1213.18 1670.96,1213.18 1671.54,1213.18 1672.13,1213.18 1672.71,1213.18 1673.3,1213.18 1673.89,1213.18 1674.47,1213.18 1675.06,1213.18 1675.65,1213.18 1676.23,1213.18 1676.82,1213.18 1677.41,1213.18 1677.99,1213.18 1678.58,1213.18 1679.17,1213.18 1679.75,1213.18 1680.34,1213.18 1680.92,1213.18 1681.51,1213.18 1682.1,1213.18 1682.68,1213.18 1683.27,1213.18 1683.86,1213.18 1684.44,1213.18 1685.03,1213.18 1685.62,1213.18 1686.2,1213.18 1686.79,1213.18 1687.37,1213.18 1687.96,1213.18 1688.55,1213.18 1689.13,1213.18 1689.72,1213.18 1690.31,1213.18 1690.89,1213.18 1691.48,1213.18 1692.07,1213.18 1692.65,1213.18 1693.24,1213.18 1693.83,1213.18 1694.41,1213.18 1695,1213.18 1695.58,1213.18 1696.17,1213.18 1696.76,1213.18 1697.34,1213.18 1697.93,1213.18 1698.52,1213.18 1699.1,1213.18 1699.69,1213.18 1700.28,1213.18 1700.86,1213.18 1701.45,1213.18 1702.04,1213.18 1702.62,1213.18 1703.21,1213.18 1703.79,1213.18 1704.38,1213.18 1704.97,1213.18 1705.55,1213.18 1706.14,1213.18 1706.73,1213.18 1707.31,1213.18 1707.9,1213.18 1708.49,1213.18 1709.07,1213.18 1709.66,1213.18 1710.24,1213.18 1710.83,1213.18 1711.42,1213.18 1712,1213.18 1712.59,1213.18 1713.18,1213.18 1713.76,1213.18 1714.35,1213.18 1714.94,1213.18 1715.52,1213.18 1716.11,1213.18 1716.7,1213.18 1717.28,1213.18 1717.87,1213.18 1718.45,1213.18 1719.04,1213.18 1719.63,1213.18 1720.21,1213.18 1720.8,1213.18 1721.39,1213.18 1721.97,1213.18 1722.56,1213.18 1723.15,1213.18 1723.73,1213.18 1724.32,1213.18 1724.91,1213.18 1725.49,1213.18 1726.08,1213.18 1726.66,1213.18 1727.25,1213.18 1727.84,1213.18 1728.42,1213.18 1729.01,1213.18 1729.6,1213.18 1730.18,1213.18 1730.77,1213.18 1731.36,1213.18 1731.94,1213.18 1732.53,1213.18 1733.11,1213.18 1733.7,1213.18 1734.29,1213.18 1734.87,1213.18 1735.46,1213.18 1736.05,1213.18 1736.63,1213.18 1737.22,1213.18 1737.81,1213.18 1738.39,1213.18 1738.98,1213.18 1739.57,1213.18 1740.15,1213.18 1740.74,1213.18 1741.32,1213.18 1741.91,1213.18 1742.5,1213.18 1743.08,1213.18 1743.67,1213.18 1744.26,1213.18 1744.84,1213.18 1745.43,1213.18 1746.02,1213.18 1746.6,1213.18 1747.19,1213.18 1747.78,1213.18 1748.36,1213.18 1748.95,1213.18 1749.53,1213.18 1750.12,1213.18 1750.71,1213.18 1751.29,1213.18 1751.88,1213.18 1752.47,1213.18 1753.05,1213.18 1753.64,1213.18 1754.23,1213.18 1754.81,1213.18 1755.4,1213.18 1755.99,1213.18 1756.57,1213.18 1757.16,1213.18 1757.74,1213.18 1758.33,1213.18 1758.92,1213.18 1759.5,1213.18 1760.09,1213.18 1760.68,1213.18 1761.26,1213.18 1761.85,1213.18 1762.44,1213.18 1763.02,1213.18 1763.61,1213.18 1764.19,1213.18 1764.78,1213.18 1765.37,1213.18 1765.95,1213.18 1766.54,1213.18 1767.13,1213.18 1767.71,1213.18 1768.3,1213.18 1768.89,1213.18 1769.47,1213.18 1770.06,1213.18 1770.65,1213.18 1771.23,1213.18 1771.82,1213.18 1772.4,1213.18 1772.99,1213.18 1773.58,1213.18 1774.16,1213.18 1774.75,1213.18 1775.34,1213.18 1775.92,1213.18 1776.51,1213.18 1777.1,1213.18 1777.68,1213.18 1778.27,1213.18 1778.86,1213.18 1779.44,1213.18 1780.03,1213.18 1780.61,1213.18 1781.2,1213.18 1781.79,1213.18 1782.37,1213.18 1782.96,1213.18 1783.55,1213.18 1784.13,1213.18 1784.72,1213.18 1785.31,1213.18 1785.89,1213.18 1786.48,1213.18 1787.06,1213.18 1787.65,1213.18 1788.24,1213.18 1788.82,1213.18 1789.41,1213.18 1790,1213.18 1790.58,1213.18 1791.17,1213.18 1791.76,1213.18 1792.34,1213.18 1792.93,1213.18 1793.52,1213.18 1794.1,1213.18 1794.69,1213.18 1795.27,1213.18 1795.86,1213.18 1796.45,1213.18 1797.03,1213.18 1797.62,1213.18 1798.21,1213.18 1798.79,1213.18 1799.38,1213.18 1799.97,1213.18 1800.55,1213.18 1801.14,1213.18 1801.73,1213.18 1802.31,1213.18 1802.9,1213.18 1803.48,1213.18 1804.07,1213.18 1804.66,1213.18 1805.24,1213.18 1805.83,1213.18 1806.42,1213.18 1807,1213.18 1807.59,1213.18 1808.18,1213.18 1808.76,1213.18 1809.35,1213.18 1809.94,1213.18 1810.52,1213.18 1811.11,1213.18 1811.69,1213.18 1812.28,1213.18 1812.87,1213.18 1813.45,1213.18 1814.04,1213.18 1814.63,1213.18 1815.21,1213.18 1815.8,1213.18 1816.39,1213.18 1816.97,1213.18 1817.56,1213.18 1818.14,1213.18 1818.73,1213.18 1819.32,1213.18 1819.9,1213.18 1820.49,1213.18 1821.08,1213.18 1821.66,1213.18 1822.25,1213.18 1822.84,1213.18 1823.42,1213.18 1824.01,1213.18 1824.6,1213.18 1825.18,1213.18 1825.77,1213.18 1826.35,1213.18 1826.94,1213.18 1827.53,1213.18 1828.11,1213.18 1828.7,1213.18 1829.29,1213.18 1829.87,1213.18 1830.46,1213.18 1831.05,1213.18 1831.63,1213.18 1832.22,1213.18 1832.81,1213.18 1833.39,1213.18 1833.98,1213.18 1834.56,1213.18 1835.15,1213.18 1835.74,1213.18 1836.32,1213.18 1836.91,1213.18 1837.5,1213.18 1838.08,1213.18 1838.67,1213.18 1839.26,1213.18 1839.84,1213.18 1840.43,1213.18 1841.01,1213.18 1841.6,1213.18 1842.19,1213.18 1842.77,1213.18 1843.36,1213.18 1843.95,1213.18 1844.53,1213.18 1845.12,1213.18 1845.71,1213.18 1846.29,1213.18 1846.88,1213.18 1847.47,1213.18 1848.05,1213.18 1848.64,1213.18 1849.22,1213.18 1849.81,1213.18 1850.4,1213.18 1850.98,1213.18 1851.57,1213.18 1852.16,1213.18 1852.74,1213.18 1853.33,1213.18 1853.92,1213.18 1854.5,1213.18 1855.09,1213.18 1855.68,1213.18 1856.26,1213.18 1856.85,1213.18 1857.43,1213.18 1858.02,1213.18 1858.61,1213.18 1859.19,1213.18 1859.78,1213.18 1860.37,1213.18 1860.95,1213.18 1861.54,1213.18 1862.13,1213.18 1862.71,1213.18 1863.3,1213.18 1863.88,1213.18 1864.47,1213.18 1865.06,1213.18 1865.64,1213.18 1866.23,1213.18 1866.82,1213.18 1867.4,1213.18 1867.99,1213.18 1868.58,1213.18 1869.16,1213.18 1869.75,1213.18 1870.34,1213.18 1870.92,1213.18 1871.51,1213.18 1872.09,1213.18 1872.68,1213.18 1873.27,1213.18 1873.85,1213.18 1874.44,1213.18 1875.03,1213.18 1875.61,1213.18 1876.2,1213.18 1876.79,1213.18 1877.37,1213.18 1877.96,1213.18 1878.55,1213.18 1879.13,1213.18 1879.72,1213.18 1880.3,1213.18 1880.89,1213.18 1881.48,1213.18 1882.06,1213.18 1882.65,1213.18 1883.24,1213.18 1883.82,1213.18 1884.41,1213.18 1885,1213.18 1885.58,1213.18 1886.17,1213.18 1886.76,1213.18 1887.34,1213.18 1887.93,1213.18 1888.51,1213.18 1889.1,1213.18 1889.69,1213.18 1890.27,1213.18 1890.86,1213.18 1891.45,1213.18 1892.03,1213.18 1892.62,1213.18 1893.21,1213.18 1893.79,1213.18 1894.38,1213.18 1894.96,1213.18 1895.55,1213.18 1896.14,1213.18 1896.72,1213.18 1897.31,1213.18 1897.9,1213.18 1898.48,1213.18 1899.07,1213.18 1899.66,1213.18 1900.24,1213.18 1900.83,1213.18 1901.42,1213.18 1902,1213.18 1902.59,1213.18 1903.17,1213.18 1903.76,1213.18 1904.35,1213.18 1904.93,1213.18 1905.52,1213.18 1906.11,1213.18 1906.69,1213.18 1907.28,1213.18 1907.87,1213.18 1908.45,1213.18 1909.04,1213.18 1909.63,1213.18 1910.21,1213.18 1910.8,1213.18 1911.38,1213.18 1911.97,1213.18 1912.56,1213.18 1913.14,1213.18 1913.73,1213.18 1914.32,1213.18 1914.9,1213.18 1915.49,1213.18 1916.08,1213.18 1916.66,1213.18 1917.25,1213.18 1917.83,1213.18 1918.42,1213.18 1919.01,1213.18 1919.59,1213.18 1920.18,1213.18 1920.77,1213.18 1921.35,1213.18 1921.94,1213.18 1922.53,1213.18 1923.11,1213.18 1923.7,1213.18 1924.29,1213.18 1924.87,1213.18 1925.46,1213.18 1926.04,1213.18 1926.63,1213.18 1927.22,1213.18 1927.8,1213.18 1928.39,1213.18 1928.98,1213.18 1929.56,1213.18 1930.15,1213.18 1930.74,1213.18 1931.32,1213.18 1931.91,1213.18 1932.5,1213.18 1933.08,1213.18 1933.67,1213.18 1934.25,1213.18 1934.84,1213.18 1935.43,1213.18 1936.01,1213.18 1936.6,1213.18 1937.19,1213.18 1937.77,1213.18 1938.36,1213.18 1938.95,1213.18 1939.53,1213.18 1940.12,1213.18 1940.71,1213.18 1941.29,1213.18 1941.88,1213.18 1942.46,1213.18 1943.05,1213.18 1943.64,1213.18 1944.22,1213.18 1944.81,1213.18 1945.4,1213.18 1945.98,1213.18 1946.57,1213.18 1947.16,1213.18 1947.74,1213.18 1948.33,1213.18 1948.91,1213.18 1949.5,1213.18 1950.09,1213.18 1950.67,1213.18 1951.26,1213.18 1951.85,1213.18 1952.43,1213.18 1953.02,1213.18 1953.61,1213.18 1954.19,1213.18 1954.78,1213.18 1955.37,1213.18 1955.95,1213.18 1956.54,1213.18 1957.12,1213.18 1957.71,1213.18 1958.3,1213.18 1958.88,1213.18 1959.47,1213.18 1960.06,1213.18 1960.64,1213.18 1961.23,1213.18 1961.82,1213.18 1962.4,1213.18 1962.99,1213.18 1963.58,1213.18 1964.16,1213.18 1964.75,1213.18 1965.33,1213.18 1965.92,1213.18 1966.51,1213.18 1967.09,1213.18 1967.68,1213.18 1968.27,1213.18 1968.85,1213.18 1969.44,1213.18 1970.03,1213.18 1970.61,1213.18 1971.2,1213.18 1971.78,1213.18 1972.37,1213.18 1972.96,1213.18 1973.54,1213.18 1974.13,1213.18 1974.72,1213.18 1975.3,1213.18 1975.89,1213.18 1976.48,1213.18 1977.06,1213.18 1977.65,1213.18 1978.24,1213.18 1978.82,1213.18 1979.41,1213.18 1979.99,1213.18 1980.58,1213.18 1981.17,1213.18 1981.75,1213.18 1982.34,1213.18 1982.93,1213.18 1983.51,1213.18 1984.1,1213.18 1984.69,1213.18 1985.27,1213.18 1985.86,1213.18 1986.45,1213.18 1987.03,1213.18 1987.62,1213.18 1988.2,1213.18 1988.79,1213.18 1989.38,1213.18 1989.96,1213.18 1990.55,1213.18 1991.14,1213.18 1991.72,1213.18 1992.31,1213.18 1992.9,1213.18 1993.48,1213.18 1994.07,1213.18 1994.65,1213.18 1995.24,1213.18 1995.83,1213.18 1996.41,1213.18 1997,1213.18 1997.59,1213.18 1998.17,1213.18 1998.76,1213.18 1999.35,1213.18 1999.93,1213.18 2000.52,1213.18 2001.11,1213.18 2001.69,1213.18 2002.28,1213.18 2002.86,1213.18 2003.45,1213.18 2004.04,1213.18 2004.62,1213.18 2005.21,1213.18 2005.8,1213.18 2006.38,1213.18 2006.97,1213.18 2007.56,1213.18 2008.14,1213.18 2008.73,1213.18 2009.32,1213.18 2009.9,1213.18 2010.49,1213.18 2011.07,1213.18 2011.66,1213.18 2012.25,1213.18 2012.83,1213.18 2013.42,1213.18 2014.01,1213.18 2014.59,1213.18 2015.18,1213.18 2015.77,1213.18 2016.35,1213.18 2016.94,1213.18 2017.53,1213.18 2018.11,1213.18 2018.7,1213.18 2019.28,1213.18 2019.87,1213.18 2020.46,1213.18 2021.04,1213.18 2021.63,1213.18 2022.22,1213.18 2022.8,1213.18 2023.39,1213.18 2023.98,1213.18 2024.56,1213.18 2025.15,1213.18 2025.73,1213.18 2026.32,1213.18 2026.91,1213.18 2027.49,1213.18 2028.08,1213.18 2028.67,1213.18 2029.25,1213.18 2029.84,1213.18 2030.43,1213.18 2031.01,1213.18 2031.6,1213.18 2032.19,1213.18 2032.77,1213.18 2033.36,1213.18 2033.94,1213.18 2034.53,1213.18 2035.12,1213.18 2035.7,1213.18 2036.29,1213.18 2036.88,1213.18 2037.46,1213.18 2038.05,1213.18 2038.64,1213.18 2039.22,1213.18 2039.81,1213.18 2040.4,1213.18 2040.98,1213.18 2041.57,1213.18 2042.15,1213.18 2042.74,1213.18 2043.33,1213.18 2043.91,1213.18 2044.5,1213.18 2045.09,1213.18 2045.67,1213.18 2046.26,1213.18 2046.85,1213.18 2047.43,1213.18 2048.02,1213.18 2048.6,1213.18 2049.19,1213.18 2049.78,1213.18 2050.36,1213.18 2050.95,1213.18 2051.54,1213.18 2052.12,1213.18 2052.71,1213.18 2053.3,1213.18 2053.88,1213.18 2054.47,1213.18 2055.06,1213.18 2055.64,1213.18 2056.23,1213.18 2056.81,1213.18 2057.4,1213.18 2057.99,1213.18 2058.57,1213.18 2059.16,1213.18 2059.75,1213.18 2060.33,1213.18 2060.92,1213.18 2061.51,1213.18 2062.09,1213.18 2062.68,1213.18 2063.27,1213.18 2063.85,1213.18 2064.44,1213.18 2065.02,1213.18 2065.61,1213.18 2066.2,1213.18 2066.78,1213.18 2067.37,1213.18 2067.96,1213.18 2068.54,1213.18 2069.13,1213.18 2069.72,1213.18 2070.3,1213.18 2070.89,1213.18 2071.48,1213.18 2072.06,1213.18 2072.65,1213.18 2073.23,1213.18 2073.82,1213.18 2074.41,1213.18 2074.99,1213.18 2075.58,1213.18 2076.17,1213.18 2076.75,1213.18 2077.34,1213.18 2077.93,1213.18 2078.51,1213.18 2079.1,1213.18 2079.68,1213.18 2080.27,1213.18 2080.86,1213.18 2081.44,1213.18 2082.03,1213.18 2082.62,1213.18 2083.2,1213.18 2083.79,1213.18 2084.38,1213.18 2084.96,1213.18 2085.55,1213.18 2086.14,1213.18 2086.72,1213.18 2087.31,1213.18 2087.89,1213.18 2088.48,1213.18 2089.07,1213.18 2089.65,1213.18 2090.24,1213.18 2090.83,1213.18 2091.41,1213.18 2092,1213.18 2092.59,1213.18 2093.17,1213.18 2093.76,1213.18 2094.35,1213.18 2094.93,1213.18 2095.52,1213.18 2096.1,1213.18 2096.69,1213.18 2097.28,1213.18 2097.86,1213.18 2098.45,1213.18 2099.04,1213.18 2099.62,1213.18 2100.21,1213.18 2100.8,1213.18 2101.38,1213.18 2101.97,1213.18 2102.55,1213.18 2103.14,1213.18 2103.73,1213.18 2104.31,1213.18 2104.9,1213.18 2105.49,1213.18 2106.07,1213.18 2106.66,1213.18 2107.25,1213.18 2107.83,1213.18 2108.42,1213.18 2109.01,1213.18 2109.59,1213.18 2110.18,1213.18 2110.76,1213.18 2111.35,1213.18 2111.94,1213.18 2112.52,1213.18 2113.11,1213.18 2113.7,1213.18 2114.28,1213.18 2114.87,1213.18 2115.46,1213.18 2116.04,1213.18 2116.63,1213.18 2117.22,1213.18 2117.8,1213.18 2118.39,1213.18 2118.97,1213.18 2119.56,1213.18 2120.15,1213.18 2120.73,1213.18 2121.32,1213.18 2121.91,1213.18 2122.49,1213.18 2123.08,1213.18 2123.67,1213.18 2124.25,1213.18 2124.84,1213.18 2125.42,1213.18 2126.01,1213.18 2126.6,1213.18 2127.18,1213.18 2127.77,1213.18 2128.36,1213.18 2128.94,1213.18 2129.53,1213.18 2130.12,1213.18 2130.7,1213.18 2131.29,1213.18 2131.88,1213.18 2132.46,1213.18 2133.05,1213.18 2133.63,1213.18 2134.22,1213.18 2134.81,1213.18 2135.39,1213.18 2135.98,1213.18 2136.57,1213.18 2137.15,1213.18 2137.74,1213.18 2138.33,1213.18 2138.91,1213.18 2139.5,1213.18 2140.09,1213.18 2140.67,1213.18 2141.26,1213.18 2141.84,1213.18 2142.43,1213.18 2143.02,1213.18 2143.6,1213.18 2144.19,1213.18 2144.78,1213.18 2145.36,1213.18 2145.95,1213.18 2146.54,1213.18 2147.12,1213.18 2147.71,1213.18 2148.3,1213.18 2148.88,1213.18 2149.47,1213.18 2150.05,1213.18 2150.64,1213.18 2151.23,1213.18 2151.81,1213.18 2152.4,1213.18 2152.99,1213.18 2153.57,1213.18 2154.16,1213.18 2154.75,1213.18 2155.33,1213.18 2155.92,1213.18 2156.5,1213.18 2157.09,1213.18 2157.68,1213.18 2158.26,1213.18 \"/>\n<path clip-path=\"url(#clip792)\" d=\"M986.025 1213.03 L986.612 1213.03 L987.198 1213.03 L987.785 1213.03 L988.371 1213.03 L988.957 1213.03 L989.544 1213.03 L990.13 1213.03 L990.717 1213.03 L991.303 1213.03 L991.889 1213.03 L992.476 1213.03 L993.062 1213.03 L993.649 1213.03 L994.235 1213.03 L994.822 1213.03 L995.408 1213.03 L995.994 1213.03 L996.581 1213.03 L997.167 1213.03 L997.754 1213.03 L998.34 1213.03 L998.926 1213.03 L999.513 1213.03 L1000.1 1213.03 L1000.69 1213.03 L1001.27 1213.03 L1001.86 1213.03 L1002.44 1213.03 L1003.03 1213.03 L1003.62 1213.03 L1004.2 1213.03 L1004.79 1213.03 L1005.38 1213.03 L1005.96 1213.03 L1006.55 1213.03 L1007.14 1213.03 L1007.72 1213.03 L1008.31 1213.03 L1008.9 1213.03 L1009.48 1213.03 L1010.07 1213.03 L1010.65 1213.03 L1011.24 1213.03 L1011.83 1213.03 L1012.41 1213.03 L1013 1213.03 L1013.59 1213.03 L1014.17 1213.03 L1014.76 1213.03 L1015.35 1213.03 L1015.93 1213.03 L1016.52 1213.03 L1017.11 1213.03 L1017.69 1213.03 L1018.28 1213.03 L1018.86 1213.03 L1019.45 1213.03 L1020.04 1213.03 L1020.62 1213.03 L1021.21 1213.03 L1021.8 1213.03 L1022.38 1213.03 L1022.97 1213.03 L1023.56 1213.03 L1024.14 1213.03 L1024.73 1213.03 L1025.32 1213.03 L1025.9 1213.03 L1026.49 1213.03 L1027.07 1213.03 L1027.66 1213.03 L1028.25 1213.03 L1028.83 1213.03 L1029.42 1213.03 L1030.01 1213.03 L1030.59 1213.03 L1031.18 1213.03 L1031.77 1213.03 L1032.35 1213.03 L1032.94 1213.03 L1033.52 1213.03 L1034.11 1213.03 L1034.7 1213.03 L1035.28 1213.03 L1035.87 1213.03 L1036.46 1213.03 L1037.04 1213.03 L1037.63 1213.03 L1038.22 1213.03 L1038.8 1213.03 L1039.39 1213.03 L1039.98 1213.03 L1040.56 1213.03 L1041.15 1213.03 L1041.73 1213.03 L1042.32 1213.03 L1042.91 1213.03 L1043.49 1213.03 L1044.08 1213.03 L1044.67 1213.03 L1045.25 1213.03 L1045.84 1213.03 L1046.43 1213.03 L1047.01 1213.03 L1047.6 1213.03 L1048.19 1213.03 L1048.77 1213.03 L1049.36 1213.03 L1049.94 1213.03 L1050.53 1213.03 L1051.12 1213.03 L1051.7 1213.03 L1052.29 1213.03 L1052.88 1213.03 L1053.46 1213.03 L1054.05 1213.03 L1054.64 1213.03 L1055.22 1213.03 L1055.81 1213.03 L1056.39 1213.03 L1056.98 1213.03 L1057.57 1213.03 L1058.15 1213.03 L1058.74 1213.03 L1059.33 1213.03 L1059.91 1213.03 L1060.5 1213.03 L1061.09 1213.03 L1061.67 1213.03 L1062.26 1213.03 L1062.85 1213.03 L1063.43 1213.03 L1064.02 1213.03 L1064.6 1213.03 L1065.19 1213.03 L1065.78 1213.03 L1066.36 1213.03 L1066.95 1213.03 L1067.54 1213.03 L1068.12 1213.03 L1068.71 1213.03 L1069.3 1213.03 L1069.88 1213.03 L1070.47 1213.03 L1071.06 1213.03 L1071.64 1213.03 L1072.23 1213.03 L1072.81 1213.03 L1073.4 1213.03 L1073.99 1213.03 L1074.57 1213.03 L1075.16 1213.03 L1075.75 1213.03 L1076.33 1213.03 L1076.92 1213.03 L1077.51 1213.03 L1078.09 1213.03 L1078.68 1213.03 L1079.26 1213.03 L1079.85 1213.03 L1080.44 1213.03 L1081.02 1213.03 L1081.61 1213.03 L1082.2 1213.03 L1082.78 1213.03 L1083.37 1213.03 L1083.96 1213.03 L1084.54 1213.03 L1085.13 1213.03 L1085.72 1213.03 L1086.3 1213.03 L1086.89 1213.03 L1087.47 1213.03 L1088.06 1213.03 L1088.65 1213.03 L1089.23 1213.03 L1089.82 1213.03 L1090.41 1213.03 L1090.99 1213.03 L1091.58 1213.03 L1092.17 1213.03 L1092.75 1213.03 L1093.34 1213.03 L1093.93 1213.03 L1094.51 1213.03 L1095.1 1213.03 L1095.68 1213.03 L1096.27 1213.03 L1096.86 1213.03 L1097.44 1213.03 L1098.03 1213.03 L1098.62 1213.03 L1099.2 1213.03 L1099.79 1213.03 L1100.38 1213.03 L1100.96 1213.03 L1101.55 1213.03 L1102.14 1213.03 L1102.72 1213.03 L1103.31 1213.03 L1103.89 1213.03 L1104.48 1213.03 L1105.07 1213.03 L1105.65 1213.03 L1106.24 1213.03 L1106.83 1213.03 L1107.41 1213.03 L1108 1213.03 L1108.59 1213.03 L1109.17 1213.03 L1109.76 1213.03 L1110.34 1213.03 L1110.93 1213.03 L1111.52 1213.03 L1112.1 1213.03 L1112.69 1213.03 L1113.28 1213.03 L1113.86 1213.03 L1114.45 1213.03 L1115.04 1213.03 L1115.62 1213.03 L1116.21 1213.03 L1116.8 1213.03 L1117.38 1213.03 L1117.97 1213.03 L1118.55 1213.03 L1119.14 1213.03 L1119.73 1213.03 L1120.31 1213.03 L1120.9 1213.03 L1121.49 1213.03 L1122.07 1213.03 L1122.66 1213.03 L1123.25 1213.03 L1123.83 1213.03 L1124.42 1213.03 L1125.01 1213.03 L1125.59 1213.03 L1126.18 1213.03 L1126.76 1213.03 L1127.35 1213.03 L1127.94 1213.03 L1128.52 1213.03 L1129.11 1213.03 L1129.7 1213.03 L1130.28 1213.03 L1130.87 1213.03 L1131.46 1213.03 L1132.04 1213.03 L1132.63 1213.03 L1133.21 1213.03 L1133.8 1213.03 L1134.39 1213.03 L1134.97 1213.03 L1135.56 1213.03 L1136.15 1213.03 L1136.73 1213.03 L1137.32 1213.03 L1137.91 1213.03 L1138.49 1213.03 L1139.08 1213.03 L1139.67 1213.03 L1140.25 1213.03 L1140.84 1213.03 L1141.42 1213.03 L1142.01 1213.03 L1142.6 1213.03 L1143.18 1213.03 L1143.77 1213.03 L1144.36 1213.03 L1144.94 1213.03 L1145.53 1213.03 L1146.12 1213.03 L1146.7 1213.03 L1147.29 1213.03 L1147.88 1213.03 L1148.46 1213.03 L1149.05 1213.03 L1149.63 1213.03 L1150.22 1213.03 L1150.81 1213.03 L1151.39 1213.03 L1151.98 1213.03 L1152.57 1213.03 L1153.15 1213.03 L1153.74 1213.03 L1154.33 1213.03 L1154.91 1213.03 L1155.5 1213.03 L1156.09 1213.03 L1156.67 1213.03 L1157.26 1213.03 L1157.84 1213.03 L1158.43 1213.03 L1159.02 1213.03 L1159.6 1213.03 L1160.19 1213.03 L1160.78 1213.03 L1161.36 1213.03 L1161.95 1213.03 L1162.54 1213.03 L1163.12 1213.03 L1163.71 1213.03 L1164.29 1213.03 L1164.88 1213.03 L1165.47 1213.03 L1166.05 1213.03 L1166.64 1213.03 L1167.23 1213.03 L1167.81 1213.03 L1168.4 1213.03 L1168.99 1213.03 L1169.57 1213.03 L1170.16 1213.03 L1170.75 1213.03 L1171.33 1213.03 L1171.92 1213.03 L1172.5 1213.03 L1173.09 1213.03 L1173.68 1213.03 L1174.26 1213.03 L1174.85 1213.03 L1175.44 1213.03 L1176.02 1213.03 L1176.61 1213.03 L1177.2 1213.03 L1177.78 1213.03 L1178.37 1213.03 L1178.96 1213.03 L1179.54 1213.03 L1180.13 1213.03 L1180.71 1213.03 L1181.3 1213.03 L1181.89 1213.03 L1182.47 1213.03 L1183.06 1213.03 L1183.65 1213.03 L1184.23 1213.03 L1184.82 1213.03 L1185.41 1213.03 L1185.99 1213.03 L1186.58 1213.03 L1187.16 1213.03 L1187.75 1213.03 L1188.34 1213.03 L1188.92 1213.03 L1189.51 1213.03 L1190.1 1213.03 L1190.68 1213.03 L1191.27 1213.03 L1191.86 1213.03 L1192.44 1213.03 L1193.03 1213.03 L1193.62 1213.03 L1194.2 1213.03 L1194.79 1213.03 L1195.37 1213.03 L1195.96 1213.03 L1196.55 1213.03 L1197.13 1213.03 L1197.72 1213.03 L1198.31 1213.03 L1198.89 1213.03 L1199.48 1213.03 L1200.07 1213.03 L1200.65 1213.03 L1201.24 1213.03 L1201.83 1213.03 L1202.41 1213.03 L1203 1213.03 L1203.58 1213.03 L1204.17 1213.03 L1204.76 1213.03 L1205.34 1213.03 L1205.93 1213.03 L1206.52 1213.03 L1207.1 1213.03 L1207.69 1213.03 L1208.28 1213.03 L1208.86 1213.03 L1209.45 1213.03 L1210.03 1213.03 L1210.62 1213.03 L1211.21 1213.03 L1211.79 1213.03 L1212.38 1213.03 L1212.97 1213.03 L1213.55 1213.03 L1214.14 1213.03 L1214.73 1213.03 L1215.31 1213.03 L1215.9 1213.03 L1216.49 1213.03 L1217.07 1213.03 L1217.66 1213.03 L1218.24 1213.03 L1218.83 1213.03 L1219.42 1213.03 L1220 1213.03 L1220.59 1213.03 L1221.18 1213.03 L1221.76 1213.03 L1222.35 1213.03 L1222.94 1213.03 L1223.52 1213.03 L1224.11 1213.03 L1224.7 1213.03 L1225.28 1213.03 L1225.87 1213.03 L1226.45 1213.03 L1227.04 1213.03 L1227.63 1213.03 L1228.21 1213.03 L1228.8 1213.03 L1229.39 1213.03 L1229.97 1213.03 L1230.56 1213.03 L1231.15 1213.03 L1231.73 1213.03 L1232.32 1213.03 L1232.91 1213.03 L1233.49 1213.03 L1234.08 1213.03 L1234.66 1213.03 L1235.25 1213.03 L1235.84 1213.03 L1236.42 1213.03 L1237.01 1213.03 L1237.6 1213.03 L1238.18 1213.03 L1238.77 1213.03 L1239.36 1213.03 L1239.94 1213.03 L1240.53 1213.03 L1241.11 1213.03 L1241.7 1213.03 L1242.29 1213.03 L1242.87 1213.03 L1243.46 1213.03 L1244.05 1213.03 L1244.63 1213.03 L1245.22 1213.03 L1245.81 1213.03 L1246.39 1213.03 L1246.98 1213.03 L1247.57 1213.03 L1248.15 1213.03 L1248.74 1213.03 L1249.32 1213.03 L1249.91 1213.03 L1250.5 1213.03 L1251.08 1213.03 L1251.67 1213.03 L1252.26 1213.03 L1252.84 1213.03 L1253.43 1213.03 L1254.02 1213.03 L1254.6 1213.03 L1255.19 1213.03 L1255.78 1213.03 L1256.36 1213.03 L1256.95 1213.03 L1257.53 1213.03 L1258.12 1213.03 L1258.71 1213.03 L1259.29 1213.03 L1259.88 1213.03 L1260.47 1213.03 L1261.05 1213.03 L1261.64 1213.03 L1262.23 1213.03 L1262.81 1213.03 L1263.4 1213.03 L1263.98 1213.03 L1264.57 1213.03 L1265.16 1213.03 L1265.74 1213.03 L1266.33 1213.03 L1266.92 1213.03 L1267.5 1213.03 L1268.09 1213.03 L1268.68 1213.03 L1269.26 1213.03 L1269.85 1213.03 L1270.44 1213.03 L1271.02 1213.03 L1271.61 1213.03 L1272.19 1213.03 L1272.78 1213.03 L1273.37 1213.03 L1273.95 1213.03 L1274.54 1213.03 L1275.13 1213.03 L1275.71 1213.03 L1276.3 1213.03 L1276.89 1213.03 L1277.47 1213.03 L1278.06 1213.03 L1278.65 1213.03 L1279.23 1213.03 L1279.82 1213.03 L1280.4 1213.03 L1280.99 1213.03 L1281.58 1213.03 L1282.16 1213.03 L1282.75 1213.03 L1283.34 1213.03 L1283.92 1213.03 L1284.51 1213.03 L1285.1 1213.03 L1285.68 1213.03 L1286.27 1213.03 L1286.86 1213.03 L1287.44 1213.03 L1288.03 1213.03 L1288.61 1213.03 L1289.2 1213.03 L1289.79 1213.03 L1290.37 1213.03 L1290.96 1213.03 L1291.55 1213.03 L1292.13 1213.03 L1292.72 1213.03 L1293.31 1213.03 L1293.89 1213.03 L1294.48 1213.03 L1295.06 1213.03 L1295.65 1213.03 L1296.24 1213.03 L1296.82 1213.03 L1297.41 1213.03 L1298 1213.03 L1298.58 1213.03 L1299.17 1213.03 L1299.76 1213.03 L1300.34 1213.03 L1300.93 1213.03 L1301.52 1213.03 L1302.1 1213.03 L1302.69 1213.03 L1303.27 1213.03 L1303.86 1213.03 L1304.45 1213.03 L1305.03 1213.03 L1305.62 1213.03 L1306.21 1213.03 L1306.79 1213.03 L1307.38 1213.03 L1307.97 1213.03 L1308.55 1213.03 L1309.14 1213.03 L1309.73 1213.03 L1310.31 1213.03 L1310.9 1213.03 L1311.48 1213.03 L1312.07 1213.03 L1312.66 1213.03 L1313.24 1213.03 L1313.83 1213.03 L1314.42 1213.03 L1315 1213.03 L1315.59 1213.03 L1316.18 1213.03 L1316.76 1213.03 L1317.35 1213.03 L1317.93 1213.03 L1318.52 1213.03 L1319.11 1213.03 L1319.69 1213.03 L1320.28 1213.03 L1320.87 1213.03 L1321.45 1213.03 L1322.04 1213.03 L1322.63 1213.03 L1323.21 1213.03 L1323.8 1213.03 L1324.39 1213.03 L1324.97 1213.03 L1325.56 1213.03 L1326.14 1213.03 L1326.73 1213.03 L1327.32 1213.03 L1327.9 1213.03 L1328.49 1213.03 L1329.08 1213.03 L1329.66 1213.03 L1330.25 1213.03 L1330.84 1213.03 L1331.42 1213.03 L1332.01 1213.03 L1332.6 1213.03 L1333.18 1213.03 L1333.77 1213.03 L1334.35 1213.03 L1334.94 1213.03 L1335.53 1213.03 L1336.11 1213.03 L1336.7 1213.03 L1337.29 1213.03 L1337.87 1213.03 L1338.46 1213.03 L1339.05 1213.03 L1339.63 1213.03 L1340.22 1213.03 L1340.8 1213.03 L1341.39 1213.03 L1341.98 1213.03 L1342.56 1213.03 L1343.15 1213.03 L1343.74 1213.03 L1344.32 1213.03 L1344.91 1213.03 L1345.5 1213.03 L1346.08 1213.03 L1346.67 1213.03 L1347.26 1213.03 L1347.84 1213.03 L1348.43 1213.03 L1349.01 1213.03 L1349.6 1213.03 L1350.19 1213.03 L1350.77 1213.03 L1351.36 1213.03 L1351.95 1213.03 L1352.53 1213.03 L1353.12 1213.03 L1353.71 1213.03 L1354.29 1213.03 L1354.88 1213.03 L1355.47 1213.03 L1356.05 1213.03 L1356.64 1213.03 L1357.22 1213.03 L1357.81 1213.03 L1358.4 1213.03 L1358.98 1213.03 L1359.57 1213.03 L1360.16 1213.03 L1360.74 1213.03 L1361.33 1213.03 L1361.92 1213.03 L1362.5 1213.03 L1363.09 1213.03 L1363.68 1213.03 L1364.26 1213.03 L1364.85 1213.03 L1365.43 1213.03 L1366.02 1213.03 L1366.61 1213.03 L1367.19 1213.03 L1367.78 1213.03 L1368.37 1213.03 L1368.95 1213.03 L1369.54 1213.03 L1370.13 1213.03 L1370.71 1213.03 L1371.3 1213.03 L1371.88 1213.03 L1372.47 1213.03 L1373.06 1213.03 L1373.64 1213.03 L1374.23 1213.03 L1374.82 1213.03 L1375.4 1213.03 L1375.99 1213.03 L1376.58 1213.03 L1377.16 1213.03 L1377.75 1213.03 L1378.34 1213.03 L1378.92 1213.03 L1379.51 1213.03 L1380.09 1213.03 L1380.68 1213.03 L1381.27 1213.03 L1381.85 1213.03 L1382.44 1213.03 L1383.03 1213.03 L1383.61 1213.03 L1384.2 1213.03 L1384.79 1213.03 L1385.37 1213.03 L1385.96 1213.03 L1386.55 1213.03 L1387.13 1213.03 L1387.72 1213.03 L1388.3 1213.03 L1388.89 1213.03 L1389.48 1213.03 L1390.06 1213.03 L1390.65 1213.03 L1391.24 1213.03 L1391.82 1213.03 L1392.41 1213.03 L1393 1213.03 L1393.58 1213.03 L1394.17 1213.03 L1394.75 1213.03 L1395.34 1213.03 L1395.93 1213.03 L1396.51 1213.03 L1397.1 1213.03 L1397.69 1213.03 L1398.27 1213.03 L1398.86 1213.03 L1399.45 1213.03 L1400.03 1213.03 L1400.62 1213.03 L1401.21 1213.03 L1401.79 1213.03 L1402.38 1213.03 L1402.96 1213.03 L1403.55 1213.03 L1404.14 1213.03 L1404.72 1213.03 L1405.31 1213.03 L1405.9 1213.03 L1406.48 1213.03 L1407.07 1213.03 L1407.66 1213.03 L1408.24 1213.03 L1408.83 1213.03 L1409.42 1213.03 L1410 1213.03 L1410.59 1213.03 L1411.17 1213.03 L1411.76 1213.03 L1412.35 1213.03 L1412.93 1213.03 L1413.52 1213.03 L1414.11 1213.03 L1414.69 1213.03 L1415.28 1213.03 L1415.87 1213.03 L1416.45 1213.03 L1417.04 1213.03 L1417.63 1213.03 L1418.21 1213.03 L1418.8 1213.03 L1419.38 1213.03 L1419.97 1213.03 L1420.56 1213.03 L1421.14 1213.03 L1421.73 1213.03 L1422.32 1213.03 L1422.9 1213.03 L1423.49 1213.03 L1424.08 1213.03 L1424.66 1213.03 L1425.25 1213.03 L1425.83 1213.03 L1426.42 1213.03 L1427.01 1213.03 L1427.59 1213.03 L1428.18 1213.03 L1428.77 1213.03 L1429.35 1213.03 L1429.94 1213.03 L1430.53 1213.03 L1431.11 1213.03 L1431.7 1213.03 L1432.29 1213.03 L1432.87 1213.03 L1433.46 1213.03 L1434.04 1213.03 L1434.63 1213.03 L1435.22 1213.03 L1435.8 1213.03 L1436.39 1213.03 L1436.98 1213.03 L1437.56 1213.03 L1438.15 1213.03 L1438.74 1213.03 L1439.32 1213.03 L1439.91 1213.03 L1440.5 1213.03 L1441.08 1213.03 L1441.67 1213.03 L1442.25 1213.03 L1442.84 1213.03 L1443.43 1213.03 L1444.01 1213.03 L1444.6 1213.03 L1445.19 1213.03 L1445.77 1213.03 L1446.36 1213.03 L1446.95 1213.03 L1447.53 1213.03 L1448.12 1213.03 L1448.7 1213.03 L1449.29 1213.03 L1449.88 1213.03 L1450.46 1213.03 L1451.05 1213.03 L1451.64 1213.03 L1452.22 1213.03 L1452.81 1213.03 L1453.4 1213.03 L1453.98 1213.03 L1454.57 1213.03 L1455.16 1213.03 L1455.74 1213.03 L1456.33 1213.03 L1456.91 1213.03 L1457.5 1213.03 L1458.09 1213.03 L1458.67 1213.03 L1459.26 1213.03 L1459.85 1213.03 L1460.43 1213.03 L1461.02 1213.03 L1461.61 1213.03 L1462.19 1213.03 L1462.78 1213.03 L1463.37 1213.03 L1463.95 1213.03 L1464.54 1213.03 L1465.12 1213.03 L1465.71 1213.03 L1466.3 1213.03 L1466.88 1213.03 L1467.47 1213.03 L1468.06 1213.03 L1468.64 1213.03 L1469.23 1213.03 L1469.82 1213.03 L1470.4 1213.03 L1470.99 1213.03 L1471.57 1213.03 L1472.16 1213.03 L1472.75 1213.03 L1473.33 1213.03 L1473.92 1213.03 L1474.51 1213.03 L1475.09 1213.03 L1475.68 1213.03 L1476.27 1213.03 L1476.85 1213.03 L1477.44 1213.03 L1478.03 1213.03 L1478.61 1213.03 L1479.2 1213.03 L1479.78 1213.03 L1480.37 1213.03 L1480.96 1213.03 L1481.54 1213.03 L1482.13 1213.03 L1482.72 1213.03 L1483.3 1213.03 L1483.89 1213.03 L1484.48 1213.03 L1485.06 1213.03 L1485.65 1213.03 L1486.24 1213.03 L1486.82 1213.03 L1487.41 1213.03 L1487.99 1213.03 L1488.58 1213.03 L1489.17 1213.03 L1489.75 1213.03 L1490.34 1213.03 L1490.93 1213.03 L1491.51 1213.03 L1492.1 1213.03 L1492.69 1213.03 L1493.27 1213.03 L1493.86 1213.03 L1494.45 1213.03 L1495.03 1213.03 L1495.62 1213.03 L1496.2 1213.03 L1496.79 1213.03 L1497.38 1213.03 L1497.96 1213.03 L1498.55 1213.03 L1499.14 1213.03 L1499.72 1213.03 L1500.31 1213.03 L1500.9 1213.03 L1501.48 1213.03 L1502.07 1213.03 L1502.65 1213.03 L1503.24 1213.03 L1503.83 1213.03 L1504.41 1213.03 L1505 1213.03 L1505.59 1213.03 L1506.17 1213.03 L1506.76 1213.03 L1507.35 1213.03 L1507.93 1213.03 L1508.52 1213.03 L1509.11 1213.03 L1509.69 1213.03 L1510.28 1213.03 L1510.86 1213.03 L1511.45 1213.03 L1512.04 1213.03 L1512.62 1213.03 L1513.21 1213.03 L1513.8 1213.03 L1514.38 1213.03 L1514.97 1213.03 L1515.56 1213.03 L1516.14 1213.03 L1516.73 1213.03 L1517.32 1213.03 L1517.9 1213.03 L1518.49 1213.03 L1519.07 1213.03 L1519.66 1213.03 L1520.25 1213.03 L1520.83 1213.03 L1521.42 1213.03 L1522.01 1213.03 L1522.59 1213.03 L1523.18 1213.03 L1523.77 1213.03 L1524.35 1213.03 L1524.94 1213.03 L1525.52 1213.03 L1526.11 1213.03 L1526.7 1213.03 L1527.28 1213.03 L1527.87 1213.03 L1528.46 1213.03 L1529.04 1213.03 L1529.63 1213.03 L1530.22 1213.03 L1530.8 1213.03 L1531.39 1213.03 L1531.98 1213.03 L1532.56 1213.03 L1533.15 1213.03 L1533.73 1213.03 L1534.32 1213.03 L1534.91 1213.03 L1535.49 1213.03 L1536.08 1213.03 L1536.67 1213.03 L1537.25 1213.03 L1537.84 1213.03 L1538.43 1213.03 L1539.01 1213.03 L1539.6 1213.03 L1540.19 1213.03 L1540.77 1213.03 L1541.36 1213.03 L1541.94 1213.03 L1542.53 1213.03 L1543.12 1213.03 L1543.7 1213.03 L1544.29 1213.03 L1544.88 1213.03 L1545.46 1213.03 L1546.05 1213.03 L1546.64 1213.03 L1547.22 1213.03 L1547.81 1213.03 L1548.4 1213.03 L1548.98 1213.03 L1549.57 1213.03 L1550.15 1213.03 L1550.74 1213.03 L1551.33 1213.03 L1551.91 1213.03 L1552.5 1213.03 L1553.09 1213.03 L1553.67 1213.03 L1554.26 1213.03 L1554.85 1213.03 L1555.43 1213.03 L1556.02 1213.03 L1556.6 1213.03 L1557.19 1213.03 L1557.78 1213.03 L1558.36 1213.03 L1558.95 1213.03 L1559.54 1213.03 L1560.12 1213.03 L1560.71 1213.03 L1561.3 1213.03 L1561.88 1213.03 L1562.47 1213.03 L1563.06 1213.03 L1563.64 1213.03 L1564.23 1213.03 L1564.81 1213.03 L1565.4 1213.03 L1565.99 1213.03 L1566.57 1213.03 L1567.16 1213.03 L1567.75 1213.03 L1568.33 1213.03 L1568.92 1213.03 L1569.51 1213.03 L1570.09 1213.03 L1570.68 1213.03 L1571.27 1213.03 L1571.85 1213.03 L1572.44 1213.03 L1573.02 1213.03 L1573.61 1213.03 L1574.2 1213.03 L1574.78 1213.03 L1575.37 1213.03 L1575.96 1213.03 L1576.54 1213.03 L1577.13 1213.03 L1577.72 1213.03 L1578.3 1213.03 L1578.89 1213.03 L1579.47 1213.03 L1580.06 1213.03 L1580.65 1213.03 L1581.23 1213.03 L1581.82 1213.03 L1582.41 1213.03 L1582.99 1213.03 L1583.58 1213.03 L1584.17 1213.03 L1584.75 1213.03 L1585.34 1213.03 L1585.93 1213.03 L1586.51 1213.03 L1587.1 1213.03 L1587.68 1213.03 L1588.27 1213.03 L1588.86 1213.03 L1589.44 1213.03 L1590.03 1213.03 L1590.62 1213.03 L1591.2 1213.03 L1591.79 1213.03 L1592.38 1213.03 L1592.96 1213.03 L1593.55 1213.03 L1594.14 1213.03 L1594.72 1213.03 L1595.31 1213.03 L1595.89 1213.03 L1596.48 1213.03 L1597.07 1213.03 L1597.65 1213.03 L1598.24 1213.03 L1598.83 1213.03 L1599.41 1213.03 L1600 1213.03 L1600.59 1213.03 L1601.17 1213.03 L1601.76 1213.03 L1602.34 1213.03 L1602.93 1213.03 L1603.52 1213.03 L1604.1 1213.03 L1604.69 1213.03 L1605.28 1213.03 L1605.86 1213.03 L1606.45 1213.03 L1607.04 1213.03 L1607.62 1213.03 L1608.21 1213.03 L1608.8 1213.03 L1609.38 1213.03 L1609.97 1213.03 L1610.55 1213.03 L1611.14 1213.03 L1611.73 1213.03 L1612.31 1213.03 L1612.9 1213.03 L1613.49 1213.03 L1614.07 1213.03 L1614.66 1213.03 L1615.25 1213.03 L1615.83 1213.03 L1616.42 1213.03 L1617.01 1213.03 L1617.59 1213.03 L1618.18 1213.03 L1618.76 1213.03 L1619.35 1213.03 L1619.94 1213.03 L1620.52 1213.03 L1621.11 1213.03 L1621.7 1213.03 L1622.28 1213.03 L1622.87 1213.03 L1623.46 1213.03 L1624.04 1213.03 L1624.63 1213.03 L1625.22 1213.03 L1625.8 1213.03 L1626.39 1213.03 L1626.97 1213.03 L1627.56 1213.03 L1628.15 1213.03 L1628.73 1213.03 L1629.32 1213.03 L1629.91 1213.03 L1630.49 1213.03 L1631.08 1213.03 L1631.67 1213.03 L1632.25 1213.03 L1632.84 1213.03 L1633.42 1213.03 L1634.01 1213.03 L1634.6 1213.03 L1635.18 1213.03 L1635.77 1213.03 L1636.36 1213.03 L1636.94 1213.03 L1637.53 1213.03 L1638.12 1213.03 L1638.7 1213.03 L1639.29 1213.03 L1639.88 1213.03 L1640.46 1213.03 L1641.05 1213.03 L1641.63 1213.03 L1642.22 1213.03 L1642.81 1213.03 L1643.39 1213.03 L1643.98 1213.03 L1644.57 1213.03 L1645.15 1213.03 L1645.74 1213.03 L1646.33 1213.03 L1646.91 1213.03 L1647.5 1213.03 L1648.09 1213.03 L1648.67 1213.03 L1649.26 1213.03 L1649.84 1213.03 L1650.43 1213.03 L1651.02 1213.03 L1651.6 1213.03 L1652.19 1213.03 L1652.78 1213.03 L1653.36 1213.03 L1653.95 1213.03 L1654.54 1213.03 L1655.12 1213.03 L1655.71 1213.03 L1656.29 1213.03 L1656.88 1213.03 L1657.47 1213.03 L1658.05 1213.03 L1658.64 1213.03 L1659.23 1213.03 L1659.81 1213.03 L1660.4 1213.03 L1660.99 1213.03 L1661.57 1213.03 L1662.16 1213.03 L1662.75 1213.03 L1663.33 1213.03 L1663.92 1213.03 L1664.5 1213.03 L1665.09 1213.03 L1665.68 1213.03 L1666.26 1213.03 L1666.85 1213.03 L1667.44 1213.03 L1668.02 1213.03 L1668.61 1213.03 L1669.2 1213.03 L1669.78 1213.03 L1670.37 1213.03 L1670.96 1213.03 L1671.54 1213.03 L1672.13 1213.03 L1672.71 1213.03 L1673.3 1213.03 L1673.89 1213.03 L1674.47 1213.03 L1675.06 1213.03 L1675.65 1213.03 L1676.23 1213.03 L1676.82 1213.03 L1677.41 1213.03 L1677.99 1213.03 L1678.58 1213.03 L1679.17 1213.03 L1679.75 1213.03 L1680.34 1213.03 L1680.92 1213.03 L1681.51 1213.03 L1682.1 1213.03 L1682.68 1213.03 L1683.27 1213.03 L1683.86 1213.03 L1684.44 1213.03 L1685.03 1213.03 L1685.62 1213.03 L1686.2 1213.03 L1686.79 1213.03 L1687.37 1213.03 L1687.96 1213.03 L1688.55 1213.03 L1689.13 1213.03 L1689.72 1213.03 L1690.31 1213.03 L1690.89 1213.03 L1691.48 1213.03 L1692.07 1213.03 L1692.65 1213.03 L1693.24 1213.03 L1693.83 1213.03 L1694.41 1213.03 L1695 1213.03 L1695.58 1213.03 L1696.17 1213.03 L1696.76 1213.03 L1697.34 1213.03 L1697.93 1213.03 L1698.52 1213.03 L1699.1 1213.03 L1699.69 1213.03 L1700.28 1213.03 L1700.86 1213.03 L1701.45 1213.03 L1702.04 1213.03 L1702.62 1213.03 L1703.21 1213.03 L1703.79 1213.03 L1704.38 1213.03 L1704.97 1213.03 L1705.55 1213.03 L1706.14 1213.03 L1706.73 1213.03 L1707.31 1213.03 L1707.9 1213.03 L1708.49 1213.03 L1709.07 1213.03 L1709.66 1213.03 L1710.24 1213.03 L1710.83 1213.03 L1711.42 1213.03 L1712 1213.03 L1712.59 1213.03 L1713.18 1213.03 L1713.76 1213.03 L1714.35 1213.03 L1714.94 1213.03 L1715.52 1213.03 L1716.11 1213.03 L1716.7 1213.03 L1717.28 1213.03 L1717.87 1213.03 L1718.45 1213.03 L1719.04 1213.03 L1719.63 1213.03 L1720.21 1213.03 L1720.8 1213.03 L1721.39 1213.03 L1721.97 1213.03 L1722.56 1213.03 L1723.15 1213.03 L1723.73 1213.03 L1724.32 1213.03 L1724.91 1213.03 L1725.49 1213.03 L1726.08 1213.03 L1726.66 1213.03 L1727.25 1213.03 L1727.84 1213.03 L1728.42 1213.03 L1729.01 1213.03 L1729.6 1213.03 L1730.18 1213.03 L1730.77 1213.03 L1731.36 1213.03 L1731.94 1213.03 L1732.53 1213.03 L1733.11 1213.03 L1733.7 1213.03 L1734.29 1213.03 L1734.87 1213.03 L1735.46 1213.03 L1736.05 1213.03 L1736.63 1213.03 L1737.22 1213.03 L1737.81 1213.03 L1738.39 1213.03 L1738.98 1213.03 L1739.57 1213.03 L1740.15 1213.03 L1740.74 1213.03 L1741.32 1213.03 L1741.91 1213.03 L1742.5 1213.03 L1743.08 1213.03 L1743.67 1213.03 L1744.26 1213.03 L1744.84 1213.03 L1745.43 1213.03 L1746.02 1213.03 L1746.6 1213.03 L1747.19 1213.03 L1747.78 1213.03 L1748.36 1213.03 L1748.95 1213.03 L1749.53 1213.03 L1750.12 1213.03 L1750.71 1213.03 L1751.29 1213.03 L1751.88 1213.03 L1752.47 1213.03 L1753.05 1213.03 L1753.64 1213.03 L1754.23 1213.03 L1754.81 1213.03 L1755.4 1213.03 L1755.99 1213.03 L1756.57 1213.03 L1757.16 1213.03 L1757.74 1213.03 L1758.33 1213.03 L1758.92 1213.03 L1759.5 1213.03 L1760.09 1213.03 L1760.68 1213.03 L1761.26 1213.03 L1761.85 1213.03 L1762.44 1213.03 L1763.02 1213.03 L1763.61 1213.03 L1764.19 1213.03 L1764.78 1213.03 L1765.37 1213.03 L1765.95 1213.03 L1766.54 1213.03 L1767.13 1213.03 L1767.71 1213.03 L1768.3 1213.03 L1768.89 1213.03 L1769.47 1213.03 L1770.06 1213.03 L1770.65 1213.03 L1771.23 1213.03 L1771.82 1213.03 L1772.4 1213.03 L1772.99 1213.03 L1773.58 1213.03 L1774.16 1213.03 L1774.75 1213.03 L1775.34 1213.03 L1775.92 1213.03 L1776.51 1213.03 L1777.1 1213.03 L1777.68 1213.03 L1778.27 1213.03 L1778.86 1213.03 L1779.44 1213.03 L1780.03 1213.03 L1780.61 1213.03 L1781.2 1213.03 L1781.79 1213.03 L1782.37 1213.03 L1782.96 1213.03 L1783.55 1213.03 L1784.13 1213.03 L1784.72 1213.03 L1785.31 1213.03 L1785.89 1213.03 L1786.48 1213.03 L1787.06 1213.03 L1787.65 1213.03 L1788.24 1213.03 L1788.82 1213.03 L1789.41 1213.03 L1790 1213.03 L1790.58 1213.03 L1791.17 1213.03 L1791.76 1213.03 L1792.34 1213.03 L1792.93 1213.03 L1793.52 1213.03 L1794.1 1213.03 L1794.69 1213.03 L1795.27 1213.03 L1795.86 1213.03 L1796.45 1213.03 L1797.03 1213.03 L1797.62 1213.03 L1798.21 1213.03 L1798.79 1213.03 L1799.38 1213.03 L1799.97 1213.03 L1800.55 1213.03 L1801.14 1213.03 L1801.73 1213.03 L1802.31 1213.03 L1802.9 1213.03 L1803.48 1213.03 L1804.07 1213.03 L1804.66 1213.03 L1805.24 1213.03 L1805.83 1213.03 L1806.42 1213.03 L1807 1213.03 L1807.59 1213.03 L1808.18 1213.03 L1808.76 1213.03 L1809.35 1213.03 L1809.94 1213.03 L1810.52 1213.03 L1811.11 1213.03 L1811.69 1213.03 L1812.28 1213.03 L1812.87 1213.03 L1813.45 1213.03 L1814.04 1213.03 L1814.63 1213.03 L1815.21 1213.03 L1815.8 1213.03 L1816.39 1213.03 L1816.97 1213.03 L1817.56 1213.03 L1818.14 1213.03 L1818.73 1213.03 L1819.32 1213.03 L1819.9 1213.03 L1820.49 1213.03 L1821.08 1213.03 L1821.66 1213.03 L1822.25 1213.03 L1822.84 1213.03 L1823.42 1213.03 L1824.01 1213.03 L1824.6 1213.03 L1825.18 1213.03 L1825.77 1213.03 L1826.35 1213.03 L1826.94 1213.03 L1827.53 1213.03 L1828.11 1213.03 L1828.7 1213.03 L1829.29 1213.03 L1829.87 1213.03 L1830.46 1213.03 L1831.05 1213.03 L1831.63 1213.03 L1832.22 1213.03 L1832.81 1213.03 L1833.39 1213.03 L1833.98 1213.03 L1834.56 1213.03 L1835.15 1213.03 L1835.74 1213.03 L1836.32 1213.03 L1836.91 1213.03 L1837.5 1213.03 L1838.08 1213.03 L1838.67 1213.03 L1839.26 1213.03 L1839.84 1213.03 L1840.43 1213.03 L1841.01 1213.03 L1841.6 1213.03 L1842.19 1213.03 L1842.77 1213.03 L1843.36 1213.03 L1843.95 1213.03 L1844.53 1213.03 L1845.12 1213.03 L1845.71 1213.03 L1846.29 1213.03 L1846.88 1213.03 L1847.47 1213.03 L1848.05 1213.03 L1848.64 1213.03 L1849.22 1213.03 L1849.81 1213.03 L1850.4 1213.03 L1850.98 1213.03 L1851.57 1213.03 L1852.16 1213.03 L1852.74 1213.03 L1853.33 1213.03 L1853.92 1213.03 L1854.5 1213.03 L1855.09 1213.03 L1855.68 1213.03 L1856.26 1213.03 L1856.85 1213.03 L1857.43 1213.03 L1858.02 1213.03 L1858.61 1213.03 L1859.19 1213.03 L1859.78 1213.03 L1860.37 1213.03 L1860.95 1213.03 L1861.54 1213.03 L1862.13 1213.03 L1862.71 1213.03 L1863.3 1213.03 L1863.88 1213.03 L1864.47 1213.03 L1865.06 1213.03 L1865.64 1213.03 L1866.23 1213.03 L1866.82 1213.03 L1867.4 1213.03 L1867.99 1213.03 L1868.58 1213.03 L1869.16 1213.03 L1869.75 1213.03 L1870.34 1213.03 L1870.92 1213.03 L1871.51 1213.03 L1872.09 1213.03 L1872.68 1213.03 L1873.27 1213.03 L1873.85 1213.03 L1874.44 1213.03 L1875.03 1213.03 L1875.61 1213.03 L1876.2 1213.03 L1876.79 1213.03 L1877.37 1213.03 L1877.96 1213.03 L1878.55 1213.03 L1879.13 1213.03 L1879.72 1213.03 L1880.3 1213.03 L1880.89 1213.03 L1881.48 1213.03 L1882.06 1213.03 L1882.65 1213.03 L1883.24 1213.03 L1883.82 1213.03 L1884.41 1213.03 L1885 1213.03 L1885.58 1213.03 L1886.17 1213.03 L1886.76 1213.03 L1887.34 1213.03 L1887.93 1213.03 L1888.51 1213.03 L1889.1 1213.03 L1889.69 1213.03 L1890.27 1213.03 L1890.86 1213.03 L1891.45 1213.03 L1892.03 1213.03 L1892.62 1213.03 L1893.21 1213.03 L1893.79 1213.03 L1894.38 1213.03 L1894.96 1213.03 L1895.55 1213.03 L1896.14 1213.03 L1896.72 1213.03 L1897.31 1213.03 L1897.9 1213.03 L1898.48 1213.03 L1899.07 1213.03 L1899.66 1213.03 L1900.24 1213.03 L1900.83 1213.03 L1901.42 1213.03 L1902 1213.03 L1902.59 1213.03 L1903.17 1213.03 L1903.76 1213.03 L1904.35 1213.03 L1904.93 1213.03 L1905.52 1213.03 L1906.11 1213.03 L1906.69 1213.03 L1907.28 1213.03 L1907.87 1213.03 L1908.45 1213.03 L1909.04 1213.03 L1909.63 1213.03 L1910.21 1213.03 L1910.8 1213.03 L1911.38 1213.03 L1911.97 1213.03 L1912.56 1213.03 L1913.14 1213.03 L1913.73 1213.03 L1914.32 1213.03 L1914.9 1213.03 L1915.49 1213.03 L1916.08 1213.03 L1916.66 1213.03 L1917.25 1213.03 L1917.83 1213.03 L1918.42 1213.03 L1919.01 1213.03 L1919.59 1213.03 L1920.18 1213.03 L1920.77 1213.03 L1921.35 1213.03 L1921.94 1213.03 L1922.53 1213.03 L1923.11 1213.03 L1923.7 1213.03 L1924.29 1213.03 L1924.87 1213.03 L1925.46 1213.03 L1926.04 1213.03 L1926.63 1213.03 L1927.22 1213.03 L1927.8 1213.03 L1928.39 1213.03 L1928.98 1213.03 L1929.56 1213.03 L1930.15 1213.03 L1930.74 1213.03 L1931.32 1213.03 L1931.91 1213.03 L1932.5 1213.03 L1933.08 1213.03 L1933.67 1213.03 L1934.25 1213.03 L1934.84 1213.03 L1935.43 1213.03 L1936.01 1213.03 L1936.6 1213.03 L1937.19 1213.03 L1937.77 1213.03 L1938.36 1213.03 L1938.95 1213.03 L1939.53 1213.03 L1940.12 1213.03 L1940.71 1213.03 L1941.29 1213.03 L1941.88 1213.03 L1942.46 1213.03 L1943.05 1213.03 L1943.64 1213.03 L1944.22 1213.03 L1944.81 1213.03 L1945.4 1213.03 L1945.98 1213.03 L1946.57 1213.03 L1947.16 1213.03 L1947.74 1213.03 L1948.33 1213.03 L1948.91 1213.03 L1949.5 1213.03 L1950.09 1213.03 L1950.67 1213.03 L1951.26 1213.03 L1951.85 1213.03 L1952.43 1213.03 L1953.02 1213.03 L1953.61 1213.03 L1954.19 1213.03 L1954.78 1213.03 L1955.37 1213.03 L1955.95 1213.03 L1956.54 1213.03 L1957.12 1213.03 L1957.71 1213.03 L1958.3 1213.03 L1958.88 1213.03 L1959.47 1213.03 L1960.06 1213.03 L1960.64 1213.03 L1961.23 1213.03 L1961.82 1213.03 L1962.4 1213.03 L1962.99 1213.03 L1963.58 1213.03 L1964.16 1213.03 L1964.75 1213.03 L1965.33 1213.03 L1965.92 1213.03 L1966.51 1213.03 L1967.09 1213.03 L1967.68 1213.03 L1968.27 1213.03 L1968.85 1213.03 L1969.44 1213.03 L1970.03 1213.03 L1970.61 1213.03 L1971.2 1213.03 L1971.78 1213.03 L1972.37 1213.03 L1972.96 1213.03 L1973.54 1213.03 L1974.13 1213.03 L1974.72 1213.03 L1975.3 1213.03 L1975.89 1213.03 L1976.48 1213.03 L1977.06 1213.03 L1977.65 1213.03 L1978.24 1213.03 L1978.82 1213.03 L1979.41 1213.03 L1979.99 1213.03 L1980.58 1213.03 L1981.17 1213.03 L1981.75 1213.03 L1982.34 1213.03 L1982.93 1213.03 L1983.51 1213.03 L1984.1 1213.03 L1984.69 1213.03 L1985.27 1213.03 L1985.86 1213.03 L1986.45 1213.03 L1987.03 1213.03 L1987.62 1213.03 L1988.2 1213.03 L1988.79 1213.03 L1989.38 1213.03 L1989.96 1213.03 L1990.55 1213.03 L1991.14 1213.03 L1991.72 1213.03 L1992.31 1213.03 L1992.9 1213.03 L1993.48 1213.03 L1994.07 1213.03 L1994.65 1213.03 L1995.24 1213.03 L1995.83 1213.03 L1996.41 1213.03 L1997 1213.03 L1997.59 1213.03 L1998.17 1213.03 L1998.76 1213.03 L1999.35 1213.03 L1999.93 1213.03 L2000.52 1213.03 L2001.11 1213.03 L2001.69 1213.03 L2002.28 1213.03 L2002.86 1213.03 L2003.45 1213.03 L2004.04 1213.03 L2004.62 1213.03 L2005.21 1213.03 L2005.8 1213.03 L2006.38 1213.03 L2006.97 1213.03 L2007.56 1213.03 L2008.14 1213.03 L2008.73 1213.03 L2009.32 1213.03 L2009.9 1213.03 L2010.49 1213.03 L2011.07 1213.03 L2011.66 1213.03 L2012.25 1213.03 L2012.83 1213.03 L2013.42 1213.03 L2014.01 1213.03 L2014.59 1213.03 L2015.18 1213.03 L2015.77 1213.03 L2016.35 1213.03 L2016.94 1213.03 L2017.53 1213.03 L2018.11 1213.03 L2018.7 1213.03 L2019.28 1213.03 L2019.87 1213.03 L2020.46 1213.03 L2021.04 1213.03 L2021.63 1213.03 L2022.22 1213.03 L2022.8 1213.03 L2023.39 1213.03 L2023.98 1213.03 L2024.56 1213.03 L2025.15 1213.03 L2025.73 1213.03 L2026.32 1213.03 L2026.91 1213.03 L2027.49 1213.03 L2028.08 1213.03 L2028.67 1213.03 L2029.25 1213.03 L2029.84 1213.03 L2030.43 1213.03 L2031.01 1213.03 L2031.6 1213.03 L2032.19 1213.03 L2032.77 1213.03 L2033.36 1213.03 L2033.94 1213.03 L2034.53 1213.03 L2035.12 1213.03 L2035.7 1213.03 L2036.29 1213.03 L2036.88 1213.03 L2037.46 1213.03 L2038.05 1213.03 L2038.64 1213.03 L2039.22 1213.03 L2039.81 1213.03 L2040.4 1213.03 L2040.98 1213.03 L2041.57 1213.03 L2042.15 1213.03 L2042.74 1213.03 L2043.33 1213.03 L2043.91 1213.03 L2044.5 1213.03 L2045.09 1213.03 L2045.67 1213.03 L2046.26 1213.03 L2046.85 1213.03 L2047.43 1213.03 L2048.02 1213.03 L2048.6 1213.03 L2049.19 1213.03 L2049.78 1213.03 L2050.36 1213.03 L2050.95 1213.03 L2051.54 1213.03 L2052.12 1213.03 L2052.71 1213.03 L2053.3 1213.03 L2053.88 1213.03 L2054.47 1213.03 L2055.06 1213.03 L2055.64 1213.03 L2056.23 1213.03 L2056.81 1213.03 L2057.4 1213.03 L2057.99 1213.03 L2058.57 1213.03 L2059.16 1213.03 L2059.75 1213.03 L2060.33 1213.03 L2060.92 1213.03 L2061.51 1213.03 L2062.09 1213.03 L2062.68 1213.03 L2063.27 1213.03 L2063.85 1213.03 L2064.44 1213.03 L2065.02 1213.03 L2065.61 1213.03 L2066.2 1213.03 L2066.78 1213.03 L2067.37 1213.03 L2067.96 1213.03 L2068.54 1213.03 L2069.13 1213.03 L2069.72 1213.03 L2070.3 1213.03 L2070.89 1213.03 L2071.48 1213.03 L2072.06 1213.03 L2072.65 1213.03 L2073.23 1213.03 L2073.82 1213.03 L2074.41 1213.03 L2074.99 1213.03 L2075.58 1213.03 L2076.17 1213.03 L2076.75 1213.03 L2077.34 1213.03 L2077.93 1213.03 L2078.51 1213.03 L2079.1 1213.03 L2079.68 1213.03 L2080.27 1213.03 L2080.86 1213.03 L2081.44 1213.03 L2082.03 1213.03 L2082.62 1213.03 L2083.2 1213.03 L2083.79 1213.03 L2084.38 1213.03 L2084.96 1213.03 L2085.55 1213.03 L2086.14 1213.03 L2086.72 1213.03 L2087.31 1213.03 L2087.89 1213.03 L2088.48 1213.03 L2089.07 1213.03 L2089.65 1213.03 L2090.24 1213.03 L2090.83 1213.03 L2091.41 1213.03 L2092 1213.03 L2092.59 1213.03 L2093.17 1213.03 L2093.76 1213.03 L2094.35 1213.03 L2094.93 1213.03 L2095.52 1213.03 L2096.1 1213.03 L2096.69 1213.03 L2097.28 1213.03 L2097.86 1213.03 L2098.45 1213.03 L2099.04 1213.03 L2099.62 1213.03 L2100.21 1213.03 L2100.8 1213.03 L2101.38 1213.03 L2101.97 1213.03 L2102.55 1213.03 L2103.14 1213.03 L2103.73 1213.03 L2104.31 1213.03 L2104.9 1213.03 L2105.49 1213.03 L2106.07 1213.03 L2106.66 1213.03 L2107.25 1213.03 L2107.83 1213.03 L2108.42 1213.03 L2109.01 1213.03 L2109.59 1213.03 L2110.18 1213.03 L2110.76 1213.03 L2111.35 1213.03 L2111.94 1213.03 L2112.52 1213.03 L2113.11 1213.03 L2113.7 1213.03 L2114.28 1213.03 L2114.87 1213.03 L2115.46 1213.03 L2116.04 1213.03 L2116.63 1213.03 L2117.22 1213.03 L2117.8 1213.03 L2118.39 1213.03 L2118.97 1213.03 L2119.56 1213.03 L2120.15 1213.03 L2120.73 1213.03 L2121.32 1213.03 L2121.91 1213.03 L2122.49 1213.03 L2123.08 1213.03 L2123.67 1213.03 L2124.25 1213.03 L2124.84 1213.03 L2125.42 1213.03 L2126.01 1213.03 L2126.6 1213.03 L2127.18 1213.03 L2127.77 1213.03 L2128.36 1213.03 L2128.94 1213.03 L2129.53 1213.03 L2130.12 1213.03 L2130.7 1213.03 L2131.29 1213.03 L2131.88 1213.03 L2132.46 1213.03 L2133.05 1213.03 L2133.63 1213.03 L2134.22 1213.03 L2134.81 1213.03 L2135.39 1213.03 L2135.98 1213.03 L2136.57 1213.03 L2137.15 1213.03 L2137.74 1213.03 L2138.33 1213.03 L2138.91 1213.03 L2139.5 1213.03 L2140.09 1213.03 L2140.67 1213.03 L2141.26 1213.03 L2141.84 1213.03 L2142.43 1213.03 L2143.02 1213.03 L2143.6 1213.03 L2144.19 1213.03 L2144.78 1213.03 L2145.36 1213.03 L2145.95 1213.03 L2146.54 1213.03 L2147.12 1213.03 L2147.71 1213.03 L2148.3 1213.03 L2148.88 1213.03 L2149.47 1213.03 L2150.05 1213.03 L2150.64 1213.03 L2151.23 1213.03 L2151.81 1213.03 L2152.4 1213.03 L2152.99 1213.03 L2153.57 1213.03 L2154.16 1213.03 L2154.75 1213.03 L2155.33 1213.03 L2155.92 1213.03 L2156.5 1213.03 L2157.09 1213.03 L2157.68 1213.03 L2158.26 1213.03 L2158.26 1212.89 L2157.68 1212.89 L2157.09 1212.89 L2156.5 1212.89 L2155.92 1212.89 L2155.33 1212.89 L2154.75 1212.89 L2154.16 1212.89 L2153.57 1212.89 L2152.99 1212.89 L2152.4 1212.89 L2151.81 1212.89 L2151.23 1212.89 L2150.64 1212.89 L2150.05 1212.89 L2149.47 1212.89 L2148.88 1212.89 L2148.3 1212.89 L2147.71 1212.89 L2147.12 1212.89 L2146.54 1212.89 L2145.95 1212.89 L2145.36 1212.89 L2144.78 1212.89 L2144.19 1212.89 L2143.6 1212.89 L2143.02 1212.89 L2142.43 1212.89 L2141.84 1212.89 L2141.26 1212.89 L2140.67 1212.89 L2140.09 1212.89 L2139.5 1212.89 L2138.91 1212.89 L2138.33 1212.89 L2137.74 1212.89 L2137.15 1212.89 L2136.57 1212.89 L2135.98 1212.89 L2135.39 1212.89 L2134.81 1212.89 L2134.22 1212.89 L2133.63 1212.89 L2133.05 1212.89 L2132.46 1212.89 L2131.88 1212.89 L2131.29 1212.89 L2130.7 1212.89 L2130.12 1212.89 L2129.53 1212.89 L2128.94 1212.89 L2128.36 1212.89 L2127.77 1212.89 L2127.18 1212.89 L2126.6 1212.89 L2126.01 1212.89 L2125.42 1212.89 L2124.84 1212.89 L2124.25 1212.89 L2123.67 1212.89 L2123.08 1212.89 L2122.49 1212.89 L2121.91 1212.89 L2121.32 1212.89 L2120.73 1212.89 L2120.15 1212.89 L2119.56 1212.89 L2118.97 1212.89 L2118.39 1212.89 L2117.8 1212.89 L2117.22 1212.89 L2116.63 1212.89 L2116.04 1212.89 L2115.46 1212.89 L2114.87 1212.89 L2114.28 1212.89 L2113.7 1212.89 L2113.11 1212.89 L2112.52 1212.89 L2111.94 1212.89 L2111.35 1212.89 L2110.76 1212.89 L2110.18 1212.89 L2109.59 1212.89 L2109.01 1212.89 L2108.42 1212.89 L2107.83 1212.89 L2107.25 1212.89 L2106.66 1212.89 L2106.07 1212.89 L2105.49 1212.89 L2104.9 1212.89 L2104.31 1212.89 L2103.73 1212.89 L2103.14 1212.89 L2102.55 1212.89 L2101.97 1212.89 L2101.38 1212.89 L2100.8 1212.89 L2100.21 1212.89 L2099.62 1212.89 L2099.04 1212.89 L2098.45 1212.89 L2097.86 1212.89 L2097.28 1212.89 L2096.69 1212.89 L2096.1 1212.89 L2095.52 1212.89 L2094.93 1212.89 L2094.35 1212.89 L2093.76 1212.89 L2093.17 1212.89 L2092.59 1212.89 L2092 1212.89 L2091.41 1212.89 L2090.83 1212.89 L2090.24 1212.89 L2089.65 1212.89 L2089.07 1212.89 L2088.48 1212.89 L2087.89 1212.89 L2087.31 1212.89 L2086.72 1212.89 L2086.14 1212.89 L2085.55 1212.89 L2084.96 1212.89 L2084.38 1212.89 L2083.79 1212.89 L2083.2 1212.89 L2082.62 1212.89 L2082.03 1212.89 L2081.44 1212.89 L2080.86 1212.89 L2080.27 1212.89 L2079.68 1212.89 L2079.1 1212.89 L2078.51 1212.89 L2077.93 1212.89 L2077.34 1212.89 L2076.75 1212.89 L2076.17 1212.89 L2075.58 1212.89 L2074.99 1212.89 L2074.41 1212.89 L2073.82 1212.89 L2073.23 1212.89 L2072.65 1212.89 L2072.06 1212.89 L2071.48 1212.89 L2070.89 1212.89 L2070.3 1212.89 L2069.72 1212.89 L2069.13 1212.89 L2068.54 1212.89 L2067.96 1212.89 L2067.37 1212.89 L2066.78 1212.89 L2066.2 1212.89 L2065.61 1212.89 L2065.02 1212.89 L2064.44 1212.89 L2063.85 1212.89 L2063.27 1212.89 L2062.68 1212.89 L2062.09 1212.89 L2061.51 1212.89 L2060.92 1212.89 L2060.33 1212.89 L2059.75 1212.89 L2059.16 1212.89 L2058.57 1212.89 L2057.99 1212.89 L2057.4 1212.89 L2056.81 1212.89 L2056.23 1212.89 L2055.64 1212.89 L2055.06 1212.89 L2054.47 1212.89 L2053.88 1212.89 L2053.3 1212.89 L2052.71 1212.89 L2052.12 1212.89 L2051.54 1212.89 L2050.95 1212.89 L2050.36 1212.89 L2049.78 1212.89 L2049.19 1212.89 L2048.6 1212.89 L2048.02 1212.89 L2047.43 1212.89 L2046.85 1212.89 L2046.26 1212.89 L2045.67 1212.89 L2045.09 1212.89 L2044.5 1212.89 L2043.91 1212.89 L2043.33 1212.89 L2042.74 1212.89 L2042.15 1212.89 L2041.57 1212.89 L2040.98 1212.89 L2040.4 1212.89 L2039.81 1212.89 L2039.22 1212.89 L2038.64 1212.89 L2038.05 1212.89 L2037.46 1212.89 L2036.88 1212.89 L2036.29 1212.89 L2035.7 1212.89 L2035.12 1212.89 L2034.53 1212.89 L2033.94 1212.89 L2033.36 1212.89 L2032.77 1212.89 L2032.19 1212.89 L2031.6 1212.89 L2031.01 1212.89 L2030.43 1212.89 L2029.84 1212.89 L2029.25 1212.89 L2028.67 1212.89 L2028.08 1212.89 L2027.49 1212.89 L2026.91 1212.89 L2026.32 1212.89 L2025.73 1212.89 L2025.15 1212.89 L2024.56 1212.89 L2023.98 1212.89 L2023.39 1212.89 L2022.8 1212.89 L2022.22 1212.89 L2021.63 1212.89 L2021.04 1212.89 L2020.46 1212.89 L2019.87 1212.89 L2019.28 1212.89 L2018.7 1212.89 L2018.11 1212.89 L2017.53 1212.89 L2016.94 1212.89 L2016.35 1212.89 L2015.77 1212.89 L2015.18 1212.89 L2014.59 1212.89 L2014.01 1212.89 L2013.42 1212.89 L2012.83 1212.89 L2012.25 1212.89 L2011.66 1212.89 L2011.07 1212.89 L2010.49 1212.89 L2009.9 1212.89 L2009.32 1212.89 L2008.73 1212.89 L2008.14 1212.89 L2007.56 1212.89 L2006.97 1212.89 L2006.38 1212.89 L2005.8 1212.89 L2005.21 1212.89 L2004.62 1212.89 L2004.04 1212.89 L2003.45 1212.89 L2002.86 1212.89 L2002.28 1212.89 L2001.69 1212.89 L2001.11 1212.89 L2000.52 1212.89 L1999.93 1212.89 L1999.35 1212.89 L1998.76 1212.89 L1998.17 1212.89 L1997.59 1212.89 L1997 1212.89 L1996.41 1212.89 L1995.83 1212.89 L1995.24 1212.89 L1994.65 1212.89 L1994.07 1212.89 L1993.48 1212.89 L1992.9 1212.89 L1992.31 1212.89 L1991.72 1212.89 L1991.14 1212.89 L1990.55 1212.89 L1989.96 1212.89 L1989.38 1212.89 L1988.79 1212.89 L1988.2 1212.89 L1987.62 1212.89 L1987.03 1212.89 L1986.45 1212.89 L1985.86 1212.89 L1985.27 1212.89 L1984.69 1212.89 L1984.1 1212.89 L1983.51 1212.89 L1982.93 1212.89 L1982.34 1212.89 L1981.75 1212.89 L1981.17 1212.89 L1980.58 1212.89 L1979.99 1212.89 L1979.41 1212.89 L1978.82 1212.89 L1978.24 1212.89 L1977.65 1212.89 L1977.06 1212.89 L1976.48 1212.89 L1975.89 1212.89 L1975.3 1212.89 L1974.72 1212.89 L1974.13 1212.89 L1973.54 1212.89 L1972.96 1212.89 L1972.37 1212.89 L1971.78 1212.89 L1971.2 1212.89 L1970.61 1212.89 L1970.03 1212.89 L1969.44 1212.89 L1968.85 1212.89 L1968.27 1212.89 L1967.68 1212.89 L1967.09 1212.89 L1966.51 1212.89 L1965.92 1212.89 L1965.33 1212.89 L1964.75 1212.89 L1964.16 1212.89 L1963.58 1212.89 L1962.99 1212.89 L1962.4 1212.89 L1961.82 1212.89 L1961.23 1212.89 L1960.64 1212.89 L1960.06 1212.89 L1959.47 1212.89 L1958.88 1212.89 L1958.3 1212.89 L1957.71 1212.89 L1957.12 1212.89 L1956.54 1212.89 L1955.95 1212.89 L1955.37 1212.89 L1954.78 1212.89 L1954.19 1212.89 L1953.61 1212.89 L1953.02 1212.89 L1952.43 1212.89 L1951.85 1212.89 L1951.26 1212.89 L1950.67 1212.89 L1950.09 1212.89 L1949.5 1212.89 L1948.91 1212.89 L1948.33 1212.89 L1947.74 1212.89 L1947.16 1212.89 L1946.57 1212.89 L1945.98 1212.89 L1945.4 1212.89 L1944.81 1212.89 L1944.22 1212.89 L1943.64 1212.89 L1943.05 1212.89 L1942.46 1212.89 L1941.88 1212.89 L1941.29 1212.89 L1940.71 1212.89 L1940.12 1212.89 L1939.53 1212.89 L1938.95 1212.89 L1938.36 1212.89 L1937.77 1212.89 L1937.19 1212.89 L1936.6 1212.89 L1936.01 1212.89 L1935.43 1212.89 L1934.84 1212.89 L1934.25 1212.89 L1933.67 1212.89 L1933.08 1212.89 L1932.5 1212.89 L1931.91 1212.89 L1931.32 1212.89 L1930.74 1212.89 L1930.15 1212.89 L1929.56 1212.89 L1928.98 1212.89 L1928.39 1212.89 L1927.8 1212.89 L1927.22 1212.89 L1926.63 1212.89 L1926.04 1212.89 L1925.46 1212.89 L1924.87 1212.89 L1924.29 1212.89 L1923.7 1212.89 L1923.11 1212.89 L1922.53 1212.89 L1921.94 1212.89 L1921.35 1212.89 L1920.77 1212.89 L1920.18 1212.89 L1919.59 1212.89 L1919.01 1212.89 L1918.42 1212.89 L1917.83 1212.89 L1917.25 1212.89 L1916.66 1212.89 L1916.08 1212.89 L1915.49 1212.89 L1914.9 1212.89 L1914.32 1212.89 L1913.73 1212.89 L1913.14 1212.89 L1912.56 1212.89 L1911.97 1212.89 L1911.38 1212.89 L1910.8 1212.89 L1910.21 1212.89 L1909.63 1212.89 L1909.04 1212.89 L1908.45 1212.89 L1907.87 1212.89 L1907.28 1212.89 L1906.69 1212.89 L1906.11 1212.89 L1905.52 1212.89 L1904.93 1212.89 L1904.35 1212.89 L1903.76 1212.89 L1903.17 1212.89 L1902.59 1212.89 L1902 1212.89 L1901.42 1212.89 L1900.83 1212.89 L1900.24 1212.89 L1899.66 1212.89 L1899.07 1212.89 L1898.48 1212.89 L1897.9 1212.89 L1897.31 1212.89 L1896.72 1212.89 L1896.14 1212.89 L1895.55 1212.89 L1894.96 1212.89 L1894.38 1212.89 L1893.79 1212.89 L1893.21 1212.89 L1892.62 1212.89 L1892.03 1212.89 L1891.45 1212.89 L1890.86 1212.89 L1890.27 1212.89 L1889.69 1212.89 L1889.1 1212.89 L1888.51 1212.89 L1887.93 1212.89 L1887.34 1212.89 L1886.76 1212.89 L1886.17 1212.89 L1885.58 1212.89 L1885 1212.89 L1884.41 1212.89 L1883.82 1212.89 L1883.24 1212.89 L1882.65 1212.89 L1882.06 1212.89 L1881.48 1212.89 L1880.89 1212.89 L1880.3 1212.89 L1879.72 1212.89 L1879.13 1212.89 L1878.55 1212.89 L1877.96 1212.89 L1877.37 1212.89 L1876.79 1212.89 L1876.2 1212.89 L1875.61 1212.89 L1875.03 1212.89 L1874.44 1212.89 L1873.85 1212.89 L1873.27 1212.89 L1872.68 1212.89 L1872.09 1212.89 L1871.51 1212.89 L1870.92 1212.89 L1870.34 1212.89 L1869.75 1212.89 L1869.16 1212.89 L1868.58 1212.89 L1867.99 1212.89 L1867.4 1212.89 L1866.82 1212.89 L1866.23 1212.89 L1865.64 1212.89 L1865.06 1212.89 L1864.47 1212.89 L1863.88 1212.89 L1863.3 1212.89 L1862.71 1212.89 L1862.13 1212.89 L1861.54 1212.89 L1860.95 1212.89 L1860.37 1212.89 L1859.78 1212.89 L1859.19 1212.89 L1858.61 1212.89 L1858.02 1212.89 L1857.43 1212.89 L1856.85 1212.89 L1856.26 1212.89 L1855.68 1212.89 L1855.09 1212.89 L1854.5 1212.89 L1853.92 1212.89 L1853.33 1212.89 L1852.74 1212.89 L1852.16 1212.89 L1851.57 1212.89 L1850.98 1212.89 L1850.4 1212.89 L1849.81 1212.89 L1849.22 1212.89 L1848.64 1212.89 L1848.05 1212.89 L1847.47 1212.89 L1846.88 1212.89 L1846.29 1212.89 L1845.71 1212.89 L1845.12 1212.89 L1844.53 1212.89 L1843.95 1212.89 L1843.36 1212.89 L1842.77 1212.89 L1842.19 1212.89 L1841.6 1212.89 L1841.01 1212.89 L1840.43 1212.89 L1839.84 1212.89 L1839.26 1212.89 L1838.67 1212.89 L1838.08 1212.89 L1837.5 1212.89 L1836.91 1212.89 L1836.32 1212.89 L1835.74 1212.89 L1835.15 1212.89 L1834.56 1212.89 L1833.98 1212.89 L1833.39 1212.89 L1832.81 1212.89 L1832.22 1212.89 L1831.63 1212.89 L1831.05 1212.89 L1830.46 1212.89 L1829.87 1212.89 L1829.29 1212.89 L1828.7 1212.89 L1828.11 1212.89 L1827.53 1212.89 L1826.94 1212.89 L1826.35 1212.89 L1825.77 1212.89 L1825.18 1212.89 L1824.6 1212.89 L1824.01 1212.89 L1823.42 1212.89 L1822.84 1212.89 L1822.25 1212.89 L1821.66 1212.89 L1821.08 1212.89 L1820.49 1212.89 L1819.9 1212.89 L1819.32 1212.89 L1818.73 1212.89 L1818.14 1212.89 L1817.56 1212.89 L1816.97 1212.89 L1816.39 1212.89 L1815.8 1212.89 L1815.21 1212.89 L1814.63 1212.89 L1814.04 1212.89 L1813.45 1212.89 L1812.87 1212.89 L1812.28 1212.89 L1811.69 1212.89 L1811.11 1212.89 L1810.52 1212.89 L1809.94 1212.89 L1809.35 1212.89 L1808.76 1212.89 L1808.18 1212.89 L1807.59 1212.89 L1807 1212.89 L1806.42 1212.89 L1805.83 1212.89 L1805.24 1212.89 L1804.66 1212.89 L1804.07 1212.89 L1803.48 1212.89 L1802.9 1212.89 L1802.31 1212.89 L1801.73 1212.89 L1801.14 1212.89 L1800.55 1212.89 L1799.97 1212.89 L1799.38 1212.89 L1798.79 1212.89 L1798.21 1212.89 L1797.62 1212.89 L1797.03 1212.89 L1796.45 1212.89 L1795.86 1212.89 L1795.27 1212.89 L1794.69 1212.89 L1794.1 1212.89 L1793.52 1212.89 L1792.93 1212.89 L1792.34 1212.89 L1791.76 1212.89 L1791.17 1212.89 L1790.58 1212.89 L1790 1212.89 L1789.41 1212.89 L1788.82 1212.89 L1788.24 1212.89 L1787.65 1212.89 L1787.06 1212.89 L1786.48 1212.89 L1785.89 1212.89 L1785.31 1212.89 L1784.72 1212.89 L1784.13 1212.89 L1783.55 1212.89 L1782.96 1212.89 L1782.37 1212.89 L1781.79 1212.89 L1781.2 1212.89 L1780.61 1212.89 L1780.03 1212.89 L1779.44 1212.89 L1778.86 1212.89 L1778.27 1212.89 L1777.68 1212.89 L1777.1 1212.89 L1776.51 1212.89 L1775.92 1212.89 L1775.34 1212.89 L1774.75 1212.89 L1774.16 1212.89 L1773.58 1212.89 L1772.99 1212.89 L1772.4 1212.89 L1771.82 1212.89 L1771.23 1212.89 L1770.65 1212.89 L1770.06 1212.89 L1769.47 1212.89 L1768.89 1212.89 L1768.3 1212.89 L1767.71 1212.89 L1767.13 1212.89 L1766.54 1212.89 L1765.95 1212.89 L1765.37 1212.89 L1764.78 1212.89 L1764.19 1212.89 L1763.61 1212.89 L1763.02 1212.89 L1762.44 1212.89 L1761.85 1212.89 L1761.26 1212.89 L1760.68 1212.89 L1760.09 1212.89 L1759.5 1212.89 L1758.92 1212.89 L1758.33 1212.89 L1757.74 1212.89 L1757.16 1212.89 L1756.57 1212.89 L1755.99 1212.89 L1755.4 1212.89 L1754.81 1212.89 L1754.23 1212.89 L1753.64 1212.89 L1753.05 1212.89 L1752.47 1212.89 L1751.88 1212.89 L1751.29 1212.89 L1750.71 1212.89 L1750.12 1212.89 L1749.53 1212.89 L1748.95 1212.89 L1748.36 1212.89 L1747.78 1212.89 L1747.19 1212.89 L1746.6 1212.89 L1746.02 1212.89 L1745.43 1212.89 L1744.84 1212.89 L1744.26 1212.89 L1743.67 1212.89 L1743.08 1212.89 L1742.5 1212.89 L1741.91 1212.89 L1741.32 1212.89 L1740.74 1212.89 L1740.15 1212.89 L1739.57 1212.89 L1738.98 1212.89 L1738.39 1212.89 L1737.81 1212.89 L1737.22 1212.89 L1736.63 1212.89 L1736.05 1212.89 L1735.46 1212.89 L1734.87 1212.89 L1734.29 1212.89 L1733.7 1212.89 L1733.11 1212.89 L1732.53 1212.89 L1731.94 1212.89 L1731.36 1212.89 L1730.77 1212.89 L1730.18 1212.89 L1729.6 1212.89 L1729.01 1212.89 L1728.42 1212.89 L1727.84 1212.89 L1727.25 1212.89 L1726.66 1212.89 L1726.08 1212.89 L1725.49 1212.89 L1724.91 1212.89 L1724.32 1212.89 L1723.73 1212.89 L1723.15 1212.89 L1722.56 1212.89 L1721.97 1212.89 L1721.39 1212.89 L1720.8 1212.89 L1720.21 1212.89 L1719.63 1212.89 L1719.04 1212.89 L1718.45 1212.89 L1717.87 1212.89 L1717.28 1212.89 L1716.7 1212.89 L1716.11 1212.89 L1715.52 1212.89 L1714.94 1212.89 L1714.35 1212.89 L1713.76 1212.89 L1713.18 1212.89 L1712.59 1212.89 L1712 1212.89 L1711.42 1212.89 L1710.83 1212.89 L1710.24 1212.89 L1709.66 1212.89 L1709.07 1212.89 L1708.49 1212.89 L1707.9 1212.89 L1707.31 1212.89 L1706.73 1212.89 L1706.14 1212.89 L1705.55 1212.89 L1704.97 1212.89 L1704.38 1212.89 L1703.79 1212.89 L1703.21 1212.89 L1702.62 1212.89 L1702.04 1212.89 L1701.45 1212.89 L1700.86 1212.89 L1700.28 1212.89 L1699.69 1212.89 L1699.1 1212.89 L1698.52 1212.89 L1697.93 1212.89 L1697.34 1212.89 L1696.76 1212.89 L1696.17 1212.89 L1695.58 1212.89 L1695 1212.89 L1694.41 1212.89 L1693.83 1212.89 L1693.24 1212.89 L1692.65 1212.89 L1692.07 1212.89 L1691.48 1212.89 L1690.89 1212.89 L1690.31 1212.89 L1689.72 1212.89 L1689.13 1212.89 L1688.55 1212.89 L1687.96 1212.89 L1687.37 1212.89 L1686.79 1212.89 L1686.2 1212.89 L1685.62 1212.89 L1685.03 1212.89 L1684.44 1212.89 L1683.86 1212.89 L1683.27 1212.89 L1682.68 1212.89 L1682.1 1212.89 L1681.51 1212.89 L1680.92 1212.89 L1680.34 1212.89 L1679.75 1212.89 L1679.17 1212.89 L1678.58 1212.89 L1677.99 1212.89 L1677.41 1212.89 L1676.82 1212.89 L1676.23 1212.89 L1675.65 1212.89 L1675.06 1212.89 L1674.47 1212.89 L1673.89 1212.89 L1673.3 1212.89 L1672.71 1212.89 L1672.13 1212.89 L1671.54 1212.89 L1670.96 1212.89 L1670.37 1212.89 L1669.78 1212.89 L1669.2 1212.89 L1668.61 1212.89 L1668.02 1212.89 L1667.44 1212.89 L1666.85 1212.89 L1666.26 1212.89 L1665.68 1212.89 L1665.09 1212.89 L1664.5 1212.89 L1663.92 1212.89 L1663.33 1212.89 L1662.75 1212.89 L1662.16 1212.89 L1661.57 1212.89 L1660.99 1212.89 L1660.4 1212.89 L1659.81 1212.89 L1659.23 1212.89 L1658.64 1212.89 L1658.05 1212.89 L1657.47 1212.89 L1656.88 1212.89 L1656.29 1212.89 L1655.71 1212.89 L1655.12 1212.89 L1654.54 1212.89 L1653.95 1212.89 L1653.36 1212.89 L1652.78 1212.89 L1652.19 1212.89 L1651.6 1212.89 L1651.02 1212.89 L1650.43 1212.89 L1649.84 1212.89 L1649.26 1212.89 L1648.67 1212.89 L1648.09 1212.89 L1647.5 1212.89 L1646.91 1212.89 L1646.33 1212.89 L1645.74 1212.89 L1645.15 1212.89 L1644.57 1212.89 L1643.98 1212.89 L1643.39 1212.89 L1642.81 1212.89 L1642.22 1212.89 L1641.63 1212.89 L1641.05 1212.89 L1640.46 1212.89 L1639.88 1212.89 L1639.29 1212.89 L1638.7 1212.89 L1638.12 1212.89 L1637.53 1212.89 L1636.94 1212.89 L1636.36 1212.89 L1635.77 1212.89 L1635.18 1212.89 L1634.6 1212.89 L1634.01 1212.89 L1633.42 1212.89 L1632.84 1212.89 L1632.25 1212.89 L1631.67 1212.89 L1631.08 1212.89 L1630.49 1212.89 L1629.91 1212.89 L1629.32 1212.89 L1628.73 1212.89 L1628.15 1212.89 L1627.56 1212.89 L1626.97 1212.89 L1626.39 1212.89 L1625.8 1212.89 L1625.22 1212.89 L1624.63 1212.89 L1624.04 1212.89 L1623.46 1212.89 L1622.87 1212.89 L1622.28 1212.89 L1621.7 1212.89 L1621.11 1212.89 L1620.52 1212.89 L1619.94 1212.89 L1619.35 1212.89 L1618.76 1212.89 L1618.18 1212.89 L1617.59 1212.89 L1617.01 1212.89 L1616.42 1212.89 L1615.83 1212.89 L1615.25 1212.89 L1614.66 1212.89 L1614.07 1212.89 L1613.49 1212.89 L1612.9 1212.89 L1612.31 1212.89 L1611.73 1212.89 L1611.14 1212.89 L1610.55 1212.89 L1609.97 1212.89 L1609.38 1212.89 L1608.8 1212.89 L1608.21 1212.89 L1607.62 1212.89 L1607.04 1212.89 L1606.45 1212.89 L1605.86 1212.89 L1605.28 1212.89 L1604.69 1212.89 L1604.1 1212.89 L1603.52 1212.89 L1602.93 1212.89 L1602.34 1212.89 L1601.76 1212.89 L1601.17 1212.89 L1600.59 1212.89 L1600 1212.89 L1599.41 1212.89 L1598.83 1212.89 L1598.24 1212.89 L1597.65 1212.89 L1597.07 1212.89 L1596.48 1212.89 L1595.89 1212.89 L1595.31 1212.89 L1594.72 1212.89 L1594.14 1212.89 L1593.55 1212.89 L1592.96 1212.89 L1592.38 1212.89 L1591.79 1212.89 L1591.2 1212.89 L1590.62 1212.89 L1590.03 1212.89 L1589.44 1212.89 L1588.86 1212.89 L1588.27 1212.89 L1587.68 1212.89 L1587.1 1212.89 L1586.51 1212.89 L1585.93 1212.89 L1585.34 1212.89 L1584.75 1212.89 L1584.17 1212.89 L1583.58 1212.89 L1582.99 1212.89 L1582.41 1212.89 L1581.82 1212.89 L1581.23 1212.89 L1580.65 1212.89 L1580.06 1212.89 L1579.47 1212.89 L1578.89 1212.89 L1578.3 1212.89 L1577.72 1212.89 L1577.13 1212.89 L1576.54 1212.89 L1575.96 1212.89 L1575.37 1212.89 L1574.78 1212.89 L1574.2 1212.89 L1573.61 1212.89 L1573.02 1212.89 L1572.44 1212.89 L1571.85 1212.89 L1571.27 1212.89 L1570.68 1212.89 L1570.09 1212.89 L1569.51 1212.89 L1568.92 1212.89 L1568.33 1212.89 L1567.75 1212.89 L1567.16 1212.89 L1566.57 1212.89 L1565.99 1212.89 L1565.4 1212.89 L1564.81 1212.89 L1564.23 1212.89 L1563.64 1212.89 L1563.06 1212.89 L1562.47 1212.89 L1561.88 1212.89 L1561.3 1212.89 L1560.71 1212.89 L1560.12 1212.89 L1559.54 1212.89 L1558.95 1212.89 L1558.36 1212.89 L1557.78 1212.89 L1557.19 1212.89 L1556.6 1212.89 L1556.02 1212.89 L1555.43 1212.89 L1554.85 1212.89 L1554.26 1212.89 L1553.67 1212.89 L1553.09 1212.89 L1552.5 1212.89 L1551.91 1212.89 L1551.33 1212.89 L1550.74 1212.89 L1550.15 1212.89 L1549.57 1212.89 L1548.98 1212.89 L1548.4 1212.89 L1547.81 1212.89 L1547.22 1212.89 L1546.64 1212.89 L1546.05 1212.89 L1545.46 1212.89 L1544.88 1212.89 L1544.29 1212.89 L1543.7 1212.89 L1543.12 1212.89 L1542.53 1212.89 L1541.94 1212.89 L1541.36 1212.89 L1540.77 1212.89 L1540.19 1212.89 L1539.6 1212.89 L1539.01 1212.89 L1538.43 1212.89 L1537.84 1212.89 L1537.25 1212.89 L1536.67 1212.89 L1536.08 1212.89 L1535.49 1212.89 L1534.91 1212.89 L1534.32 1212.89 L1533.73 1212.89 L1533.15 1212.89 L1532.56 1212.89 L1531.98 1212.89 L1531.39 1212.89 L1530.8 1212.89 L1530.22 1212.89 L1529.63 1212.89 L1529.04 1212.89 L1528.46 1212.89 L1527.87 1212.89 L1527.28 1212.89 L1526.7 1212.89 L1526.11 1212.89 L1525.52 1212.89 L1524.94 1212.89 L1524.35 1212.89 L1523.77 1212.89 L1523.18 1212.89 L1522.59 1212.89 L1522.01 1212.89 L1521.42 1212.89 L1520.83 1212.89 L1520.25 1212.89 L1519.66 1212.89 L1519.07 1212.89 L1518.49 1212.89 L1517.9 1212.89 L1517.32 1212.89 L1516.73 1212.89 L1516.14 1212.89 L1515.56 1212.89 L1514.97 1212.89 L1514.38 1212.89 L1513.8 1212.89 L1513.21 1212.89 L1512.62 1212.89 L1512.04 1212.89 L1511.45 1212.89 L1510.86 1212.89 L1510.28 1212.89 L1509.69 1212.89 L1509.11 1212.89 L1508.52 1212.89 L1507.93 1212.89 L1507.35 1212.89 L1506.76 1212.89 L1506.17 1212.89 L1505.59 1212.89 L1505 1212.89 L1504.41 1212.89 L1503.83 1212.89 L1503.24 1212.89 L1502.65 1212.89 L1502.07 1212.89 L1501.48 1212.89 L1500.9 1212.89 L1500.31 1212.89 L1499.72 1212.89 L1499.14 1212.89 L1498.55 1212.89 L1497.96 1212.89 L1497.38 1212.89 L1496.79 1212.89 L1496.2 1212.89 L1495.62 1212.89 L1495.03 1212.89 L1494.45 1212.89 L1493.86 1212.89 L1493.27 1212.89 L1492.69 1212.89 L1492.1 1212.89 L1491.51 1212.89 L1490.93 1212.89 L1490.34 1212.89 L1489.75 1212.89 L1489.17 1212.89 L1488.58 1212.89 L1487.99 1212.89 L1487.41 1212.89 L1486.82 1212.89 L1486.24 1212.89 L1485.65 1212.89 L1485.06 1212.89 L1484.48 1212.89 L1483.89 1212.89 L1483.3 1212.89 L1482.72 1212.89 L1482.13 1212.89 L1481.54 1212.89 L1480.96 1212.89 L1480.37 1212.89 L1479.78 1212.89 L1479.2 1212.89 L1478.61 1212.89 L1478.03 1212.89 L1477.44 1212.89 L1476.85 1212.89 L1476.27 1212.89 L1475.68 1212.89 L1475.09 1212.89 L1474.51 1212.89 L1473.92 1212.89 L1473.33 1212.89 L1472.75 1212.89 L1472.16 1212.89 L1471.57 1212.89 L1470.99 1212.89 L1470.4 1212.89 L1469.82 1212.89 L1469.23 1212.89 L1468.64 1212.89 L1468.06 1212.89 L1467.47 1212.89 L1466.88 1212.89 L1466.3 1212.89 L1465.71 1212.89 L1465.12 1212.89 L1464.54 1212.89 L1463.95 1212.89 L1463.37 1212.89 L1462.78 1212.89 L1462.19 1212.89 L1461.61 1212.89 L1461.02 1212.89 L1460.43 1212.89 L1459.85 1212.89 L1459.26 1212.89 L1458.67 1212.89 L1458.09 1212.89 L1457.5 1212.89 L1456.91 1212.89 L1456.33 1212.89 L1455.74 1212.89 L1455.16 1212.89 L1454.57 1212.89 L1453.98 1212.89 L1453.4 1212.89 L1452.81 1212.89 L1452.22 1212.89 L1451.64 1212.89 L1451.05 1212.89 L1450.46 1212.89 L1449.88 1212.89 L1449.29 1212.89 L1448.7 1212.89 L1448.12 1212.89 L1447.53 1212.89 L1446.95 1212.89 L1446.36 1212.89 L1445.77 1212.89 L1445.19 1212.89 L1444.6 1212.89 L1444.01 1212.89 L1443.43 1212.89 L1442.84 1212.89 L1442.25 1212.89 L1441.67 1212.89 L1441.08 1212.89 L1440.5 1212.89 L1439.91 1212.89 L1439.32 1212.89 L1438.74 1212.89 L1438.15 1212.89 L1437.56 1212.89 L1436.98 1212.89 L1436.39 1212.89 L1435.8 1212.89 L1435.22 1212.89 L1434.63 1212.89 L1434.04 1212.89 L1433.46 1212.89 L1432.87 1212.89 L1432.29 1212.89 L1431.7 1212.89 L1431.11 1212.89 L1430.53 1212.89 L1429.94 1212.89 L1429.35 1212.89 L1428.77 1212.89 L1428.18 1212.89 L1427.59 1212.89 L1427.01 1212.89 L1426.42 1212.89 L1425.83 1212.89 L1425.25 1212.89 L1424.66 1212.89 L1424.08 1212.89 L1423.49 1212.89 L1422.9 1212.89 L1422.32 1212.89 L1421.73 1212.89 L1421.14 1212.89 L1420.56 1212.89 L1419.97 1212.89 L1419.38 1212.89 L1418.8 1212.89 L1418.21 1212.89 L1417.63 1212.89 L1417.04 1212.89 L1416.45 1212.89 L1415.87 1212.89 L1415.28 1212.89 L1414.69 1212.89 L1414.11 1212.89 L1413.52 1212.89 L1412.93 1212.89 L1412.35 1212.89 L1411.76 1212.89 L1411.17 1212.89 L1410.59 1212.89 L1410 1212.89 L1409.42 1212.89 L1408.83 1212.89 L1408.24 1212.89 L1407.66 1212.89 L1407.07 1212.89 L1406.48 1212.89 L1405.9 1212.89 L1405.31 1212.89 L1404.72 1212.89 L1404.14 1212.89 L1403.55 1212.89 L1402.96 1212.89 L1402.38 1212.89 L1401.79 1212.89 L1401.21 1212.89 L1400.62 1212.89 L1400.03 1212.89 L1399.45 1212.89 L1398.86 1212.89 L1398.27 1212.89 L1397.69 1212.89 L1397.1 1212.89 L1396.51 1212.89 L1395.93 1212.89 L1395.34 1212.89 L1394.75 1212.89 L1394.17 1212.89 L1393.58 1212.89 L1393 1212.89 L1392.41 1212.89 L1391.82 1212.89 L1391.24 1212.89 L1390.65 1212.89 L1390.06 1212.89 L1389.48 1212.89 L1388.89 1212.89 L1388.3 1212.89 L1387.72 1212.89 L1387.13 1212.89 L1386.55 1212.89 L1385.96 1212.89 L1385.37 1212.89 L1384.79 1212.89 L1384.2 1212.89 L1383.61 1212.89 L1383.03 1212.89 L1382.44 1212.89 L1381.85 1212.89 L1381.27 1212.89 L1380.68 1212.89 L1380.09 1212.89 L1379.51 1212.89 L1378.92 1212.89 L1378.34 1212.89 L1377.75 1212.89 L1377.16 1212.89 L1376.58 1212.89 L1375.99 1212.89 L1375.4 1212.89 L1374.82 1212.89 L1374.23 1212.89 L1373.64 1212.89 L1373.06 1212.89 L1372.47 1212.89 L1371.88 1212.89 L1371.3 1212.89 L1370.71 1212.89 L1370.13 1212.89 L1369.54 1212.89 L1368.95 1212.89 L1368.37 1212.89 L1367.78 1212.89 L1367.19 1212.89 L1366.61 1212.89 L1366.02 1212.89 L1365.43 1212.89 L1364.85 1212.89 L1364.26 1212.89 L1363.68 1212.89 L1363.09 1212.89 L1362.5 1212.89 L1361.92 1212.89 L1361.33 1212.89 L1360.74 1212.89 L1360.16 1212.89 L1359.57 1212.89 L1358.98 1212.89 L1358.4 1212.89 L1357.81 1212.89 L1357.22 1212.89 L1356.64 1212.89 L1356.05 1212.89 L1355.47 1212.89 L1354.88 1212.89 L1354.29 1212.89 L1353.71 1212.89 L1353.12 1212.89 L1352.53 1212.89 L1351.95 1212.89 L1351.36 1212.89 L1350.77 1212.89 L1350.19 1212.89 L1349.6 1212.89 L1349.01 1212.89 L1348.43 1212.89 L1347.84 1212.89 L1347.26 1212.89 L1346.67 1212.89 L1346.08 1212.89 L1345.5 1212.89 L1344.91 1212.89 L1344.32 1212.89 L1343.74 1212.89 L1343.15 1212.89 L1342.56 1212.89 L1341.98 1212.89 L1341.39 1212.89 L1340.8 1212.89 L1340.22 1212.89 L1339.63 1212.89 L1339.05 1212.89 L1338.46 1212.89 L1337.87 1212.89 L1337.29 1212.89 L1336.7 1212.89 L1336.11 1212.89 L1335.53 1212.89 L1334.94 1212.89 L1334.35 1212.89 L1333.77 1212.89 L1333.18 1212.89 L1332.6 1212.89 L1332.01 1212.89 L1331.42 1212.89 L1330.84 1212.89 L1330.25 1212.89 L1329.66 1212.89 L1329.08 1212.89 L1328.49 1212.89 L1327.9 1212.89 L1327.32 1212.89 L1326.73 1212.89 L1326.14 1212.89 L1325.56 1212.89 L1324.97 1212.89 L1324.39 1212.89 L1323.8 1212.89 L1323.21 1212.89 L1322.63 1212.89 L1322.04 1212.89 L1321.45 1212.89 L1320.87 1212.89 L1320.28 1212.89 L1319.69 1212.89 L1319.11 1212.89 L1318.52 1212.89 L1317.93 1212.89 L1317.35 1212.89 L1316.76 1212.89 L1316.18 1212.89 L1315.59 1212.89 L1315 1212.89 L1314.42 1212.89 L1313.83 1212.89 L1313.24 1212.89 L1312.66 1212.89 L1312.07 1212.89 L1311.48 1212.89 L1310.9 1212.89 L1310.31 1212.89 L1309.73 1212.89 L1309.14 1212.89 L1308.55 1212.89 L1307.97 1212.89 L1307.38 1212.89 L1306.79 1212.89 L1306.21 1212.89 L1305.62 1212.89 L1305.03 1212.89 L1304.45 1212.89 L1303.86 1212.89 L1303.27 1212.89 L1302.69 1212.89 L1302.1 1212.89 L1301.52 1212.89 L1300.93 1212.89 L1300.34 1212.89 L1299.76 1212.89 L1299.17 1212.89 L1298.58 1212.89 L1298 1212.89 L1297.41 1212.89 L1296.82 1212.89 L1296.24 1212.89 L1295.65 1212.89 L1295.06 1212.89 L1294.48 1212.89 L1293.89 1212.89 L1293.31 1212.89 L1292.72 1212.89 L1292.13 1212.89 L1291.55 1212.89 L1290.96 1212.89 L1290.37 1212.89 L1289.79 1212.89 L1289.2 1212.89 L1288.61 1212.89 L1288.03 1212.89 L1287.44 1212.89 L1286.86 1212.89 L1286.27 1212.89 L1285.68 1212.89 L1285.1 1212.89 L1284.51 1212.89 L1283.92 1212.89 L1283.34 1212.89 L1282.75 1212.89 L1282.16 1212.89 L1281.58 1212.89 L1280.99 1212.89 L1280.4 1212.89 L1279.82 1212.89 L1279.23 1212.89 L1278.65 1212.89 L1278.06 1212.89 L1277.47 1212.89 L1276.89 1212.89 L1276.3 1212.89 L1275.71 1212.89 L1275.13 1212.89 L1274.54 1212.89 L1273.95 1212.89 L1273.37 1212.89 L1272.78 1212.89 L1272.19 1212.89 L1271.61 1212.89 L1271.02 1212.89 L1270.44 1212.89 L1269.85 1212.89 L1269.26 1212.89 L1268.68 1212.89 L1268.09 1212.89 L1267.5 1212.89 L1266.92 1212.89 L1266.33 1212.89 L1265.74 1212.89 L1265.16 1212.89 L1264.57 1212.89 L1263.98 1212.89 L1263.4 1212.89 L1262.81 1212.89 L1262.23 1212.89 L1261.64 1212.89 L1261.05 1212.89 L1260.47 1212.89 L1259.88 1212.89 L1259.29 1212.89 L1258.71 1212.89 L1258.12 1212.89 L1257.53 1212.89 L1256.95 1212.89 L1256.36 1212.89 L1255.78 1212.89 L1255.19 1212.89 L1254.6 1212.89 L1254.02 1212.89 L1253.43 1212.89 L1252.84 1212.89 L1252.26 1212.89 L1251.67 1212.89 L1251.08 1212.89 L1250.5 1212.89 L1249.91 1212.89 L1249.32 1212.89 L1248.74 1212.89 L1248.15 1212.89 L1247.57 1212.89 L1246.98 1212.89 L1246.39 1212.89 L1245.81 1212.89 L1245.22 1212.89 L1244.63 1212.89 L1244.05 1212.89 L1243.46 1212.89 L1242.87 1212.89 L1242.29 1212.89 L1241.7 1212.89 L1241.11 1212.89 L1240.53 1212.89 L1239.94 1212.89 L1239.36 1212.89 L1238.77 1212.89 L1238.18 1212.89 L1237.6 1212.89 L1237.01 1212.89 L1236.42 1212.89 L1235.84 1212.89 L1235.25 1212.89 L1234.66 1212.89 L1234.08 1212.89 L1233.49 1212.89 L1232.91 1212.89 L1232.32 1212.89 L1231.73 1212.89 L1231.15 1212.89 L1230.56 1212.89 L1229.97 1212.89 L1229.39 1212.89 L1228.8 1212.89 L1228.21 1212.89 L1227.63 1212.89 L1227.04 1212.89 L1226.45 1212.89 L1225.87 1212.89 L1225.28 1212.89 L1224.7 1212.89 L1224.11 1212.89 L1223.52 1212.89 L1222.94 1212.89 L1222.35 1212.89 L1221.76 1212.89 L1221.18 1212.89 L1220.59 1212.89 L1220 1212.89 L1219.42 1212.89 L1218.83 1212.89 L1218.24 1212.89 L1217.66 1212.89 L1217.07 1212.89 L1216.49 1212.89 L1215.9 1212.89 L1215.31 1212.89 L1214.73 1212.89 L1214.14 1212.89 L1213.55 1212.89 L1212.97 1212.89 L1212.38 1212.89 L1211.79 1212.89 L1211.21 1212.89 L1210.62 1212.89 L1210.03 1212.89 L1209.45 1212.89 L1208.86 1212.89 L1208.28 1212.89 L1207.69 1212.89 L1207.1 1212.89 L1206.52 1212.89 L1205.93 1212.89 L1205.34 1212.89 L1204.76 1212.89 L1204.17 1212.89 L1203.58 1212.89 L1203 1212.89 L1202.41 1212.89 L1201.83 1212.89 L1201.24 1212.89 L1200.65 1212.89 L1200.07 1212.89 L1199.48 1212.89 L1198.89 1212.89 L1198.31 1212.89 L1197.72 1212.89 L1197.13 1212.89 L1196.55 1212.89 L1195.96 1212.89 L1195.37 1212.89 L1194.79 1212.89 L1194.2 1212.89 L1193.62 1212.89 L1193.03 1212.89 L1192.44 1212.89 L1191.86 1212.89 L1191.27 1212.89 L1190.68 1212.89 L1190.1 1212.89 L1189.51 1212.89 L1188.92 1212.89 L1188.34 1212.89 L1187.75 1212.89 L1187.16 1212.89 L1186.58 1212.89 L1185.99 1212.89 L1185.41 1212.89 L1184.82 1212.89 L1184.23 1212.89 L1183.65 1212.89 L1183.06 1212.89 L1182.47 1212.89 L1181.89 1212.89 L1181.3 1212.89 L1180.71 1212.89 L1180.13 1212.89 L1179.54 1212.89 L1178.96 1212.89 L1178.37 1212.89 L1177.78 1212.89 L1177.2 1212.89 L1176.61 1212.89 L1176.02 1212.89 L1175.44 1212.89 L1174.85 1212.89 L1174.26 1212.89 L1173.68 1212.89 L1173.09 1212.89 L1172.5 1212.89 L1171.92 1212.89 L1171.33 1212.89 L1170.75 1212.89 L1170.16 1212.89 L1169.57 1212.89 L1168.99 1212.89 L1168.4 1212.89 L1167.81 1212.89 L1167.23 1212.89 L1166.64 1212.89 L1166.05 1212.89 L1165.47 1212.89 L1164.88 1212.89 L1164.29 1212.89 L1163.71 1212.89 L1163.12 1212.89 L1162.54 1212.89 L1161.95 1212.89 L1161.36 1212.89 L1160.78 1212.89 L1160.19 1212.89 L1159.6 1212.89 L1159.02 1212.89 L1158.43 1212.89 L1157.84 1212.89 L1157.26 1212.89 L1156.67 1212.89 L1156.09 1212.89 L1155.5 1212.89 L1154.91 1212.89 L1154.33 1212.89 L1153.74 1212.89 L1153.15 1212.89 L1152.57 1212.89 L1151.98 1212.89 L1151.39 1212.89 L1150.81 1212.89 L1150.22 1212.89 L1149.63 1212.89 L1149.05 1212.89 L1148.46 1212.89 L1147.88 1212.89 L1147.29 1212.89 L1146.7 1212.89 L1146.12 1212.89 L1145.53 1212.89 L1144.94 1212.89 L1144.36 1212.89 L1143.77 1212.89 L1143.18 1212.89 L1142.6 1212.89 L1142.01 1212.89 L1141.42 1212.89 L1140.84 1212.89 L1140.25 1212.89 L1139.67 1212.89 L1139.08 1212.89 L1138.49 1212.89 L1137.91 1212.89 L1137.32 1212.89 L1136.73 1212.89 L1136.15 1212.89 L1135.56 1212.89 L1134.97 1212.89 L1134.39 1212.89 L1133.8 1212.89 L1133.21 1212.89 L1132.63 1212.89 L1132.04 1212.89 L1131.46 1212.89 L1130.87 1212.89 L1130.28 1212.89 L1129.7 1212.89 L1129.11 1212.89 L1128.52 1212.89 L1127.94 1212.89 L1127.35 1212.89 L1126.76 1212.89 L1126.18 1212.89 L1125.59 1212.89 L1125.01 1212.89 L1124.42 1212.89 L1123.83 1212.89 L1123.25 1212.89 L1122.66 1212.89 L1122.07 1212.89 L1121.49 1212.89 L1120.9 1212.89 L1120.31 1212.89 L1119.73 1212.89 L1119.14 1212.89 L1118.55 1212.89 L1117.97 1212.89 L1117.38 1212.89 L1116.8 1212.89 L1116.21 1212.89 L1115.62 1212.89 L1115.04 1212.89 L1114.45 1212.89 L1113.86 1212.89 L1113.28 1212.89 L1112.69 1212.89 L1112.1 1212.89 L1111.52 1212.89 L1110.93 1212.89 L1110.34 1212.89 L1109.76 1212.89 L1109.17 1212.89 L1108.59 1212.89 L1108 1212.89 L1107.41 1212.89 L1106.83 1212.89 L1106.24 1212.89 L1105.65 1212.89 L1105.07 1212.89 L1104.48 1212.89 L1103.89 1212.89 L1103.31 1212.89 L1102.72 1212.89 L1102.14 1212.89 L1101.55 1212.89 L1100.96 1212.89 L1100.38 1212.89 L1099.79 1212.89 L1099.2 1212.89 L1098.62 1212.89 L1098.03 1212.89 L1097.44 1212.89 L1096.86 1212.89 L1096.27 1212.89 L1095.68 1212.89 L1095.1 1212.89 L1094.51 1212.89 L1093.93 1212.89 L1093.34 1212.89 L1092.75 1212.89 L1092.17 1212.89 L1091.58 1212.89 L1090.99 1212.89 L1090.41 1212.89 L1089.82 1212.89 L1089.23 1212.89 L1088.65 1212.89 L1088.06 1212.89 L1087.47 1212.89 L1086.89 1212.89 L1086.3 1212.89 L1085.72 1212.89 L1085.13 1212.89 L1084.54 1212.89 L1083.96 1212.89 L1083.37 1212.89 L1082.78 1212.89 L1082.2 1212.89 L1081.61 1212.89 L1081.02 1212.89 L1080.44 1212.89 L1079.85 1212.89 L1079.26 1212.89 L1078.68 1212.89 L1078.09 1212.89 L1077.51 1212.89 L1076.92 1212.89 L1076.33 1212.89 L1075.75 1212.89 L1075.16 1212.89 L1074.57 1212.89 L1073.99 1212.89 L1073.4 1212.89 L1072.81 1212.89 L1072.23 1212.89 L1071.64 1212.89 L1071.06 1212.89 L1070.47 1212.89 L1069.88 1212.89 L1069.3 1212.89 L1068.71 1212.89 L1068.12 1212.89 L1067.54 1212.89 L1066.95 1212.89 L1066.36 1212.89 L1065.78 1212.89 L1065.19 1212.89 L1064.6 1212.89 L1064.02 1212.89 L1063.43 1212.89 L1062.85 1212.89 L1062.26 1212.89 L1061.67 1212.89 L1061.09 1212.89 L1060.5 1212.89 L1059.91 1212.89 L1059.33 1212.89 L1058.74 1212.89 L1058.15 1212.89 L1057.57 1212.89 L1056.98 1212.89 L1056.39 1212.89 L1055.81 1212.89 L1055.22 1212.89 L1054.64 1212.89 L1054.05 1212.89 L1053.46 1212.89 L1052.88 1212.89 L1052.29 1212.89 L1051.7 1212.89 L1051.12 1212.89 L1050.53 1212.89 L1049.94 1212.89 L1049.36 1212.89 L1048.77 1212.89 L1048.19 1212.89 L1047.6 1212.89 L1047.01 1212.89 L1046.43 1212.89 L1045.84 1212.89 L1045.25 1212.89 L1044.67 1212.89 L1044.08 1212.89 L1043.49 1212.89 L1042.91 1212.89 L1042.32 1212.89 L1041.73 1212.89 L1041.15 1212.89 L1040.56 1212.89 L1039.98 1212.89 L1039.39 1212.89 L1038.8 1212.89 L1038.22 1212.89 L1037.63 1212.89 L1037.04 1212.89 L1036.46 1212.89 L1035.87 1212.89 L1035.28 1212.89 L1034.7 1212.89 L1034.11 1212.89 L1033.52 1212.89 L1032.94 1212.89 L1032.35 1212.89 L1031.77 1212.89 L1031.18 1212.89 L1030.59 1212.89 L1030.01 1212.89 L1029.42 1212.89 L1028.83 1212.89 L1028.25 1212.89 L1027.66 1212.89 L1027.07 1212.89 L1026.49 1212.89 L1025.9 1212.89 L1025.32 1212.89 L1024.73 1212.89 L1024.14 1212.89 L1023.56 1212.89 L1022.97 1212.89 L1022.38 1212.89 L1021.8 1212.89 L1021.21 1212.89 L1020.62 1212.89 L1020.04 1212.89 L1019.45 1212.89 L1018.86 1212.89 L1018.28 1212.89 L1017.69 1212.89 L1017.11 1212.89 L1016.52 1212.89 L1015.93 1212.89 L1015.35 1212.89 L1014.76 1212.89 L1014.17 1212.89 L1013.59 1212.89 L1013 1212.89 L1012.41 1212.89 L1011.83 1212.89 L1011.24 1212.89 L1010.65 1212.89 L1010.07 1212.89 L1009.48 1212.89 L1008.9 1212.89 L1008.31 1212.89 L1007.72 1212.89 L1007.14 1212.89 L1006.55 1212.89 L1005.96 1212.89 L1005.38 1212.89 L1004.79 1212.89 L1004.2 1212.89 L1003.62 1212.89 L1003.03 1212.89 L1002.44 1212.89 L1001.86 1212.89 L1001.27 1212.89 L1000.69 1212.89 L1000.1 1212.89 L999.513 1212.89 L998.926 1212.89 L998.34 1212.89 L997.754 1212.89 L997.167 1212.89 L996.581 1212.89 L995.994 1212.89 L995.408 1212.89 L994.822 1212.89 L994.235 1212.89 L993.649 1212.89 L993.062 1212.89 L992.476 1212.89 L991.889 1212.89 L991.303 1212.89 L990.717 1212.89 L990.13 1212.89 L989.544 1212.89 L988.957 1212.89 L988.371 1212.89 L987.785 1212.89 L987.198 1212.89 L986.612 1212.89 L986.025 1212.89  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1212.96 986.612,1212.96 987.198,1212.96 987.785,1212.96 988.371,1212.96 988.957,1212.96 989.544,1212.96 990.13,1212.96 990.717,1212.96 991.303,1212.96 991.889,1212.96 992.476,1212.96 993.062,1212.96 993.649,1212.96 994.235,1212.96 994.822,1212.96 995.408,1212.96 995.994,1212.96 996.581,1212.96 997.167,1212.96 997.754,1212.96 998.34,1212.96 998.926,1212.96 999.513,1212.96 1000.1,1212.96 1000.69,1212.96 1001.27,1212.96 1001.86,1212.96 1002.44,1212.96 1003.03,1212.96 1003.62,1212.96 1004.2,1212.96 1004.79,1212.96 1005.38,1212.96 1005.96,1212.96 1006.55,1212.96 1007.14,1212.96 1007.72,1212.96 1008.31,1212.96 1008.9,1212.96 1009.48,1212.96 1010.07,1212.96 1010.65,1212.96 1011.24,1212.96 1011.83,1212.96 1012.41,1212.96 1013,1212.96 1013.59,1212.96 1014.17,1212.96 1014.76,1212.96 1015.35,1212.96 1015.93,1212.96 1016.52,1212.96 1017.11,1212.96 1017.69,1212.96 1018.28,1212.96 1018.86,1212.96 1019.45,1212.96 1020.04,1212.96 1020.62,1212.96 1021.21,1212.96 1021.8,1212.96 1022.38,1212.96 1022.97,1212.96 1023.56,1212.96 1024.14,1212.96 1024.73,1212.96 1025.32,1212.96 1025.9,1212.96 1026.49,1212.96 1027.07,1212.96 1027.66,1212.96 1028.25,1212.96 1028.83,1212.96 1029.42,1212.96 1030.01,1212.96 1030.59,1212.96 1031.18,1212.96 1031.77,1212.96 1032.35,1212.96 1032.94,1212.96 1033.52,1212.96 1034.11,1212.96 1034.7,1212.96 1035.28,1212.96 1035.87,1212.96 1036.46,1212.96 1037.04,1212.96 1037.63,1212.96 1038.22,1212.96 1038.8,1212.96 1039.39,1212.96 1039.98,1212.96 1040.56,1212.96 1041.15,1212.96 1041.73,1212.96 1042.32,1212.96 1042.91,1212.96 1043.49,1212.96 1044.08,1212.96 1044.67,1212.96 1045.25,1212.96 1045.84,1212.96 1046.43,1212.96 1047.01,1212.96 1047.6,1212.96 1048.19,1212.96 1048.77,1212.96 1049.36,1212.96 1049.94,1212.96 1050.53,1212.96 1051.12,1212.96 1051.7,1212.96 1052.29,1212.96 1052.88,1212.96 1053.46,1212.96 1054.05,1212.96 1054.64,1212.96 1055.22,1212.96 1055.81,1212.96 1056.39,1212.96 1056.98,1212.96 1057.57,1212.96 1058.15,1212.96 1058.74,1212.96 1059.33,1212.96 1059.91,1212.96 1060.5,1212.96 1061.09,1212.96 1061.67,1212.96 1062.26,1212.96 1062.85,1212.96 1063.43,1212.96 1064.02,1212.96 1064.6,1212.96 1065.19,1212.96 1065.78,1212.96 1066.36,1212.96 1066.95,1212.96 1067.54,1212.96 1068.12,1212.96 1068.71,1212.96 1069.3,1212.96 1069.88,1212.96 1070.47,1212.96 1071.06,1212.96 1071.64,1212.96 1072.23,1212.96 1072.81,1212.96 1073.4,1212.96 1073.99,1212.96 1074.57,1212.96 1075.16,1212.96 1075.75,1212.96 1076.33,1212.96 1076.92,1212.96 1077.51,1212.96 1078.09,1212.96 1078.68,1212.96 1079.26,1212.96 1079.85,1212.96 1080.44,1212.96 1081.02,1212.96 1081.61,1212.96 1082.2,1212.96 1082.78,1212.96 1083.37,1212.96 1083.96,1212.96 1084.54,1212.96 1085.13,1212.96 1085.72,1212.96 1086.3,1212.96 1086.89,1212.96 1087.47,1212.96 1088.06,1212.96 1088.65,1212.96 1089.23,1212.96 1089.82,1212.96 1090.41,1212.96 1090.99,1212.96 1091.58,1212.96 1092.17,1212.96 1092.75,1212.96 1093.34,1212.96 1093.93,1212.96 1094.51,1212.96 1095.1,1212.96 1095.68,1212.96 1096.27,1212.96 1096.86,1212.96 1097.44,1212.96 1098.03,1212.96 1098.62,1212.96 1099.2,1212.96 1099.79,1212.96 1100.38,1212.96 1100.96,1212.96 1101.55,1212.96 1102.14,1212.96 1102.72,1212.96 1103.31,1212.96 1103.89,1212.96 1104.48,1212.96 1105.07,1212.96 1105.65,1212.96 1106.24,1212.96 1106.83,1212.96 1107.41,1212.96 1108,1212.96 1108.59,1212.96 1109.17,1212.96 1109.76,1212.96 1110.34,1212.96 1110.93,1212.96 1111.52,1212.96 1112.1,1212.96 1112.69,1212.96 1113.28,1212.96 1113.86,1212.96 1114.45,1212.96 1115.04,1212.96 1115.62,1212.96 1116.21,1212.96 1116.8,1212.96 1117.38,1212.96 1117.97,1212.96 1118.55,1212.96 1119.14,1212.96 1119.73,1212.96 1120.31,1212.96 1120.9,1212.96 1121.49,1212.96 1122.07,1212.96 1122.66,1212.96 1123.25,1212.96 1123.83,1212.96 1124.42,1212.96 1125.01,1212.96 1125.59,1212.96 1126.18,1212.96 1126.76,1212.96 1127.35,1212.96 1127.94,1212.96 1128.52,1212.96 1129.11,1212.96 1129.7,1212.96 1130.28,1212.96 1130.87,1212.96 1131.46,1212.96 1132.04,1212.96 1132.63,1212.96 1133.21,1212.96 1133.8,1212.96 1134.39,1212.96 1134.97,1212.96 1135.56,1212.96 1136.15,1212.96 1136.73,1212.96 1137.32,1212.96 1137.91,1212.96 1138.49,1212.96 1139.08,1212.96 1139.67,1212.96 1140.25,1212.96 1140.84,1212.96 1141.42,1212.96 1142.01,1212.96 1142.6,1212.96 1143.18,1212.96 1143.77,1212.96 1144.36,1212.96 1144.94,1212.96 1145.53,1212.96 1146.12,1212.96 1146.7,1212.96 1147.29,1212.96 1147.88,1212.96 1148.46,1212.96 1149.05,1212.96 1149.63,1212.96 1150.22,1212.96 1150.81,1212.96 1151.39,1212.96 1151.98,1212.96 1152.57,1212.96 1153.15,1212.96 1153.74,1212.96 1154.33,1212.96 1154.91,1212.96 1155.5,1212.96 1156.09,1212.96 1156.67,1212.96 1157.26,1212.96 1157.84,1212.96 1158.43,1212.96 1159.02,1212.96 1159.6,1212.96 1160.19,1212.96 1160.78,1212.96 1161.36,1212.96 1161.95,1212.96 1162.54,1212.96 1163.12,1212.96 1163.71,1212.96 1164.29,1212.96 1164.88,1212.96 1165.47,1212.96 1166.05,1212.96 1166.64,1212.96 1167.23,1212.96 1167.81,1212.96 1168.4,1212.96 1168.99,1212.96 1169.57,1212.96 1170.16,1212.96 1170.75,1212.96 1171.33,1212.96 1171.92,1212.96 1172.5,1212.96 1173.09,1212.96 1173.68,1212.96 1174.26,1212.96 1174.85,1212.96 1175.44,1212.96 1176.02,1212.96 1176.61,1212.96 1177.2,1212.96 1177.78,1212.96 1178.37,1212.96 1178.96,1212.96 1179.54,1212.96 1180.13,1212.96 1180.71,1212.96 1181.3,1212.96 1181.89,1212.96 1182.47,1212.96 1183.06,1212.96 1183.65,1212.96 1184.23,1212.96 1184.82,1212.96 1185.41,1212.96 1185.99,1212.96 1186.58,1212.96 1187.16,1212.96 1187.75,1212.96 1188.34,1212.96 1188.92,1212.96 1189.51,1212.96 1190.1,1212.96 1190.68,1212.96 1191.27,1212.96 1191.86,1212.96 1192.44,1212.96 1193.03,1212.96 1193.62,1212.96 1194.2,1212.96 1194.79,1212.96 1195.37,1212.96 1195.96,1212.96 1196.55,1212.96 1197.13,1212.96 1197.72,1212.96 1198.31,1212.96 1198.89,1212.96 1199.48,1212.96 1200.07,1212.96 1200.65,1212.96 1201.24,1212.96 1201.83,1212.96 1202.41,1212.96 1203,1212.96 1203.58,1212.96 1204.17,1212.96 1204.76,1212.96 1205.34,1212.96 1205.93,1212.96 1206.52,1212.96 1207.1,1212.96 1207.69,1212.96 1208.28,1212.96 1208.86,1212.96 1209.45,1212.96 1210.03,1212.96 1210.62,1212.96 1211.21,1212.96 1211.79,1212.96 1212.38,1212.96 1212.97,1212.96 1213.55,1212.96 1214.14,1212.96 1214.73,1212.96 1215.31,1212.96 1215.9,1212.96 1216.49,1212.96 1217.07,1212.96 1217.66,1212.96 1218.24,1212.96 1218.83,1212.96 1219.42,1212.96 1220,1212.96 1220.59,1212.96 1221.18,1212.96 1221.76,1212.96 1222.35,1212.96 1222.94,1212.96 1223.52,1212.96 1224.11,1212.96 1224.7,1212.96 1225.28,1212.96 1225.87,1212.96 1226.45,1212.96 1227.04,1212.96 1227.63,1212.96 1228.21,1212.96 1228.8,1212.96 1229.39,1212.96 1229.97,1212.96 1230.56,1212.96 1231.15,1212.96 1231.73,1212.96 1232.32,1212.96 1232.91,1212.96 1233.49,1212.96 1234.08,1212.96 1234.66,1212.96 1235.25,1212.96 1235.84,1212.96 1236.42,1212.96 1237.01,1212.96 1237.6,1212.96 1238.18,1212.96 1238.77,1212.96 1239.36,1212.96 1239.94,1212.96 1240.53,1212.96 1241.11,1212.96 1241.7,1212.96 1242.29,1212.96 1242.87,1212.96 1243.46,1212.96 1244.05,1212.96 1244.63,1212.96 1245.22,1212.96 1245.81,1212.96 1246.39,1212.96 1246.98,1212.96 1247.57,1212.96 1248.15,1212.96 1248.74,1212.96 1249.32,1212.96 1249.91,1212.96 1250.5,1212.96 1251.08,1212.96 1251.67,1212.96 1252.26,1212.96 1252.84,1212.96 1253.43,1212.96 1254.02,1212.96 1254.6,1212.96 1255.19,1212.96 1255.78,1212.96 1256.36,1212.96 1256.95,1212.96 1257.53,1212.96 1258.12,1212.96 1258.71,1212.96 1259.29,1212.96 1259.88,1212.96 1260.47,1212.96 1261.05,1212.96 1261.64,1212.96 1262.23,1212.96 1262.81,1212.96 1263.4,1212.96 1263.98,1212.96 1264.57,1212.96 1265.16,1212.96 1265.74,1212.96 1266.33,1212.96 1266.92,1212.96 1267.5,1212.96 1268.09,1212.96 1268.68,1212.96 1269.26,1212.96 1269.85,1212.96 1270.44,1212.96 1271.02,1212.96 1271.61,1212.96 1272.19,1212.96 1272.78,1212.96 1273.37,1212.96 1273.95,1212.96 1274.54,1212.96 1275.13,1212.96 1275.71,1212.96 1276.3,1212.96 1276.89,1212.96 1277.47,1212.96 1278.06,1212.96 1278.65,1212.96 1279.23,1212.96 1279.82,1212.96 1280.4,1212.96 1280.99,1212.96 1281.58,1212.96 1282.16,1212.96 1282.75,1212.96 1283.34,1212.96 1283.92,1212.96 1284.51,1212.96 1285.1,1212.96 1285.68,1212.96 1286.27,1212.96 1286.86,1212.96 1287.44,1212.96 1288.03,1212.96 1288.61,1212.96 1289.2,1212.96 1289.79,1212.96 1290.37,1212.96 1290.96,1212.96 1291.55,1212.96 1292.13,1212.96 1292.72,1212.96 1293.31,1212.96 1293.89,1212.96 1294.48,1212.96 1295.06,1212.96 1295.65,1212.96 1296.24,1212.96 1296.82,1212.96 1297.41,1212.96 1298,1212.96 1298.58,1212.96 1299.17,1212.96 1299.76,1212.96 1300.34,1212.96 1300.93,1212.96 1301.52,1212.96 1302.1,1212.96 1302.69,1212.96 1303.27,1212.96 1303.86,1212.96 1304.45,1212.96 1305.03,1212.96 1305.62,1212.96 1306.21,1212.96 1306.79,1212.96 1307.38,1212.96 1307.97,1212.96 1308.55,1212.96 1309.14,1212.96 1309.73,1212.96 1310.31,1212.96 1310.9,1212.96 1311.48,1212.96 1312.07,1212.96 1312.66,1212.96 1313.24,1212.96 1313.83,1212.96 1314.42,1212.96 1315,1212.96 1315.59,1212.96 1316.18,1212.96 1316.76,1212.96 1317.35,1212.96 1317.93,1212.96 1318.52,1212.96 1319.11,1212.96 1319.69,1212.96 1320.28,1212.96 1320.87,1212.96 1321.45,1212.96 1322.04,1212.96 1322.63,1212.96 1323.21,1212.96 1323.8,1212.96 1324.39,1212.96 1324.97,1212.96 1325.56,1212.96 1326.14,1212.96 1326.73,1212.96 1327.32,1212.96 1327.9,1212.96 1328.49,1212.96 1329.08,1212.96 1329.66,1212.96 1330.25,1212.96 1330.84,1212.96 1331.42,1212.96 1332.01,1212.96 1332.6,1212.96 1333.18,1212.96 1333.77,1212.96 1334.35,1212.96 1334.94,1212.96 1335.53,1212.96 1336.11,1212.96 1336.7,1212.96 1337.29,1212.96 1337.87,1212.96 1338.46,1212.96 1339.05,1212.96 1339.63,1212.96 1340.22,1212.96 1340.8,1212.96 1341.39,1212.96 1341.98,1212.96 1342.56,1212.96 1343.15,1212.96 1343.74,1212.96 1344.32,1212.96 1344.91,1212.96 1345.5,1212.96 1346.08,1212.96 1346.67,1212.96 1347.26,1212.96 1347.84,1212.96 1348.43,1212.96 1349.01,1212.96 1349.6,1212.96 1350.19,1212.96 1350.77,1212.96 1351.36,1212.96 1351.95,1212.96 1352.53,1212.96 1353.12,1212.96 1353.71,1212.96 1354.29,1212.96 1354.88,1212.96 1355.47,1212.96 1356.05,1212.96 1356.64,1212.96 1357.22,1212.96 1357.81,1212.96 1358.4,1212.96 1358.98,1212.96 1359.57,1212.96 1360.16,1212.96 1360.74,1212.96 1361.33,1212.96 1361.92,1212.96 1362.5,1212.96 1363.09,1212.96 1363.68,1212.96 1364.26,1212.96 1364.85,1212.96 1365.43,1212.96 1366.02,1212.96 1366.61,1212.96 1367.19,1212.96 1367.78,1212.96 1368.37,1212.96 1368.95,1212.96 1369.54,1212.96 1370.13,1212.96 1370.71,1212.96 1371.3,1212.96 1371.88,1212.96 1372.47,1212.96 1373.06,1212.96 1373.64,1212.96 1374.23,1212.96 1374.82,1212.96 1375.4,1212.96 1375.99,1212.96 1376.58,1212.96 1377.16,1212.96 1377.75,1212.96 1378.34,1212.96 1378.92,1212.96 1379.51,1212.96 1380.09,1212.96 1380.68,1212.96 1381.27,1212.96 1381.85,1212.96 1382.44,1212.96 1383.03,1212.96 1383.61,1212.96 1384.2,1212.96 1384.79,1212.96 1385.37,1212.96 1385.96,1212.96 1386.55,1212.96 1387.13,1212.96 1387.72,1212.96 1388.3,1212.96 1388.89,1212.96 1389.48,1212.96 1390.06,1212.96 1390.65,1212.96 1391.24,1212.96 1391.82,1212.96 1392.41,1212.96 1393,1212.96 1393.58,1212.96 1394.17,1212.96 1394.75,1212.96 1395.34,1212.96 1395.93,1212.96 1396.51,1212.96 1397.1,1212.96 1397.69,1212.96 1398.27,1212.96 1398.86,1212.96 1399.45,1212.96 1400.03,1212.96 1400.62,1212.96 1401.21,1212.96 1401.79,1212.96 1402.38,1212.96 1402.96,1212.96 1403.55,1212.96 1404.14,1212.96 1404.72,1212.96 1405.31,1212.96 1405.9,1212.96 1406.48,1212.96 1407.07,1212.96 1407.66,1212.96 1408.24,1212.96 1408.83,1212.96 1409.42,1212.96 1410,1212.96 1410.59,1212.96 1411.17,1212.96 1411.76,1212.96 1412.35,1212.96 1412.93,1212.96 1413.52,1212.96 1414.11,1212.96 1414.69,1212.96 1415.28,1212.96 1415.87,1212.96 1416.45,1212.96 1417.04,1212.96 1417.63,1212.96 1418.21,1212.96 1418.8,1212.96 1419.38,1212.96 1419.97,1212.96 1420.56,1212.96 1421.14,1212.96 1421.73,1212.96 1422.32,1212.96 1422.9,1212.96 1423.49,1212.96 1424.08,1212.96 1424.66,1212.96 1425.25,1212.96 1425.83,1212.96 1426.42,1212.96 1427.01,1212.96 1427.59,1212.96 1428.18,1212.96 1428.77,1212.96 1429.35,1212.96 1429.94,1212.96 1430.53,1212.96 1431.11,1212.96 1431.7,1212.96 1432.29,1212.96 1432.87,1212.96 1433.46,1212.96 1434.04,1212.96 1434.63,1212.96 1435.22,1212.96 1435.8,1212.96 1436.39,1212.96 1436.98,1212.96 1437.56,1212.96 1438.15,1212.96 1438.74,1212.96 1439.32,1212.96 1439.91,1212.96 1440.5,1212.96 1441.08,1212.96 1441.67,1212.96 1442.25,1212.96 1442.84,1212.96 1443.43,1212.96 1444.01,1212.96 1444.6,1212.96 1445.19,1212.96 1445.77,1212.96 1446.36,1212.96 1446.95,1212.96 1447.53,1212.96 1448.12,1212.96 1448.7,1212.96 1449.29,1212.96 1449.88,1212.96 1450.46,1212.96 1451.05,1212.96 1451.64,1212.96 1452.22,1212.96 1452.81,1212.96 1453.4,1212.96 1453.98,1212.96 1454.57,1212.96 1455.16,1212.96 1455.74,1212.96 1456.33,1212.96 1456.91,1212.96 1457.5,1212.96 1458.09,1212.96 1458.67,1212.96 1459.26,1212.96 1459.85,1212.96 1460.43,1212.96 1461.02,1212.96 1461.61,1212.96 1462.19,1212.96 1462.78,1212.96 1463.37,1212.96 1463.95,1212.96 1464.54,1212.96 1465.12,1212.96 1465.71,1212.96 1466.3,1212.96 1466.88,1212.96 1467.47,1212.96 1468.06,1212.96 1468.64,1212.96 1469.23,1212.96 1469.82,1212.96 1470.4,1212.96 1470.99,1212.96 1471.57,1212.96 1472.16,1212.96 1472.75,1212.96 1473.33,1212.96 1473.92,1212.96 1474.51,1212.96 1475.09,1212.96 1475.68,1212.96 1476.27,1212.96 1476.85,1212.96 1477.44,1212.96 1478.03,1212.96 1478.61,1212.96 1479.2,1212.96 1479.78,1212.96 1480.37,1212.96 1480.96,1212.96 1481.54,1212.96 1482.13,1212.96 1482.72,1212.96 1483.3,1212.96 1483.89,1212.96 1484.48,1212.96 1485.06,1212.96 1485.65,1212.96 1486.24,1212.96 1486.82,1212.96 1487.41,1212.96 1487.99,1212.96 1488.58,1212.96 1489.17,1212.96 1489.75,1212.96 1490.34,1212.96 1490.93,1212.96 1491.51,1212.96 1492.1,1212.96 1492.69,1212.96 1493.27,1212.96 1493.86,1212.96 1494.45,1212.96 1495.03,1212.96 1495.62,1212.96 1496.2,1212.96 1496.79,1212.96 1497.38,1212.96 1497.96,1212.96 1498.55,1212.96 1499.14,1212.96 1499.72,1212.96 1500.31,1212.96 1500.9,1212.96 1501.48,1212.96 1502.07,1212.96 1502.65,1212.96 1503.24,1212.96 1503.83,1212.96 1504.41,1212.96 1505,1212.96 1505.59,1212.96 1506.17,1212.96 1506.76,1212.96 1507.35,1212.96 1507.93,1212.96 1508.52,1212.96 1509.11,1212.96 1509.69,1212.96 1510.28,1212.96 1510.86,1212.96 1511.45,1212.96 1512.04,1212.96 1512.62,1212.96 1513.21,1212.96 1513.8,1212.96 1514.38,1212.96 1514.97,1212.96 1515.56,1212.96 1516.14,1212.96 1516.73,1212.96 1517.32,1212.96 1517.9,1212.96 1518.49,1212.96 1519.07,1212.96 1519.66,1212.96 1520.25,1212.96 1520.83,1212.96 1521.42,1212.96 1522.01,1212.96 1522.59,1212.96 1523.18,1212.96 1523.77,1212.96 1524.35,1212.96 1524.94,1212.96 1525.52,1212.96 1526.11,1212.96 1526.7,1212.96 1527.28,1212.96 1527.87,1212.96 1528.46,1212.96 1529.04,1212.96 1529.63,1212.96 1530.22,1212.96 1530.8,1212.96 1531.39,1212.96 1531.98,1212.96 1532.56,1212.96 1533.15,1212.96 1533.73,1212.96 1534.32,1212.96 1534.91,1212.96 1535.49,1212.96 1536.08,1212.96 1536.67,1212.96 1537.25,1212.96 1537.84,1212.96 1538.43,1212.96 1539.01,1212.96 1539.6,1212.96 1540.19,1212.96 1540.77,1212.96 1541.36,1212.96 1541.94,1212.96 1542.53,1212.96 1543.12,1212.96 1543.7,1212.96 1544.29,1212.96 1544.88,1212.96 1545.46,1212.96 1546.05,1212.96 1546.64,1212.96 1547.22,1212.96 1547.81,1212.96 1548.4,1212.96 1548.98,1212.96 1549.57,1212.96 1550.15,1212.96 1550.74,1212.96 1551.33,1212.96 1551.91,1212.96 1552.5,1212.96 1553.09,1212.96 1553.67,1212.96 1554.26,1212.96 1554.85,1212.96 1555.43,1212.96 1556.02,1212.96 1556.6,1212.96 1557.19,1212.96 1557.78,1212.96 1558.36,1212.96 1558.95,1212.96 1559.54,1212.96 1560.12,1212.96 1560.71,1212.96 1561.3,1212.96 1561.88,1212.96 1562.47,1212.96 1563.06,1212.96 1563.64,1212.96 1564.23,1212.96 1564.81,1212.96 1565.4,1212.96 1565.99,1212.96 1566.57,1212.96 1567.16,1212.96 1567.75,1212.96 1568.33,1212.96 1568.92,1212.96 1569.51,1212.96 1570.09,1212.96 1570.68,1212.96 1571.27,1212.96 1571.85,1212.96 1572.44,1212.96 1573.02,1212.96 1573.61,1212.96 1574.2,1212.96 1574.78,1212.96 1575.37,1212.96 1575.96,1212.96 1576.54,1212.96 1577.13,1212.96 1577.72,1212.96 1578.3,1212.96 1578.89,1212.96 1579.47,1212.96 1580.06,1212.96 1580.65,1212.96 1581.23,1212.96 1581.82,1212.96 1582.41,1212.96 1582.99,1212.96 1583.58,1212.96 1584.17,1212.96 1584.75,1212.96 1585.34,1212.96 1585.93,1212.96 1586.51,1212.96 1587.1,1212.96 1587.68,1212.96 1588.27,1212.96 1588.86,1212.96 1589.44,1212.96 1590.03,1212.96 1590.62,1212.96 1591.2,1212.96 1591.79,1212.96 1592.38,1212.96 1592.96,1212.96 1593.55,1212.96 1594.14,1212.96 1594.72,1212.96 1595.31,1212.96 1595.89,1212.96 1596.48,1212.96 1597.07,1212.96 1597.65,1212.96 1598.24,1212.96 1598.83,1212.96 1599.41,1212.96 1600,1212.96 1600.59,1212.96 1601.17,1212.96 1601.76,1212.96 1602.34,1212.96 1602.93,1212.96 1603.52,1212.96 1604.1,1212.96 1604.69,1212.96 1605.28,1212.96 1605.86,1212.96 1606.45,1212.96 1607.04,1212.96 1607.62,1212.96 1608.21,1212.96 1608.8,1212.96 1609.38,1212.96 1609.97,1212.96 1610.55,1212.96 1611.14,1212.96 1611.73,1212.96 1612.31,1212.96 1612.9,1212.96 1613.49,1212.96 1614.07,1212.96 1614.66,1212.96 1615.25,1212.96 1615.83,1212.96 1616.42,1212.96 1617.01,1212.96 1617.59,1212.96 1618.18,1212.96 1618.76,1212.96 1619.35,1212.96 1619.94,1212.96 1620.52,1212.96 1621.11,1212.96 1621.7,1212.96 1622.28,1212.96 1622.87,1212.96 1623.46,1212.96 1624.04,1212.96 1624.63,1212.96 1625.22,1212.96 1625.8,1212.96 1626.39,1212.96 1626.97,1212.96 1627.56,1212.96 1628.15,1212.96 1628.73,1212.96 1629.32,1212.96 1629.91,1212.96 1630.49,1212.96 1631.08,1212.96 1631.67,1212.96 1632.25,1212.96 1632.84,1212.96 1633.42,1212.96 1634.01,1212.96 1634.6,1212.96 1635.18,1212.96 1635.77,1212.96 1636.36,1212.96 1636.94,1212.96 1637.53,1212.96 1638.12,1212.96 1638.7,1212.96 1639.29,1212.96 1639.88,1212.96 1640.46,1212.96 1641.05,1212.96 1641.63,1212.96 1642.22,1212.96 1642.81,1212.96 1643.39,1212.96 1643.98,1212.96 1644.57,1212.96 1645.15,1212.96 1645.74,1212.96 1646.33,1212.96 1646.91,1212.96 1647.5,1212.96 1648.09,1212.96 1648.67,1212.96 1649.26,1212.96 1649.84,1212.96 1650.43,1212.96 1651.02,1212.96 1651.6,1212.96 1652.19,1212.96 1652.78,1212.96 1653.36,1212.96 1653.95,1212.96 1654.54,1212.96 1655.12,1212.96 1655.71,1212.96 1656.29,1212.96 1656.88,1212.96 1657.47,1212.96 1658.05,1212.96 1658.64,1212.96 1659.23,1212.96 1659.81,1212.96 1660.4,1212.96 1660.99,1212.96 1661.57,1212.96 1662.16,1212.96 1662.75,1212.96 1663.33,1212.96 1663.92,1212.96 1664.5,1212.96 1665.09,1212.96 1665.68,1212.96 1666.26,1212.96 1666.85,1212.96 1667.44,1212.96 1668.02,1212.96 1668.61,1212.96 1669.2,1212.96 1669.78,1212.96 1670.37,1212.96 1670.96,1212.96 1671.54,1212.96 1672.13,1212.96 1672.71,1212.96 1673.3,1212.96 1673.89,1212.96 1674.47,1212.96 1675.06,1212.96 1675.65,1212.96 1676.23,1212.96 1676.82,1212.96 1677.41,1212.96 1677.99,1212.96 1678.58,1212.96 1679.17,1212.96 1679.75,1212.96 1680.34,1212.96 1680.92,1212.96 1681.51,1212.96 1682.1,1212.96 1682.68,1212.96 1683.27,1212.96 1683.86,1212.96 1684.44,1212.96 1685.03,1212.96 1685.62,1212.96 1686.2,1212.96 1686.79,1212.96 1687.37,1212.96 1687.96,1212.96 1688.55,1212.96 1689.13,1212.96 1689.72,1212.96 1690.31,1212.96 1690.89,1212.96 1691.48,1212.96 1692.07,1212.96 1692.65,1212.96 1693.24,1212.96 1693.83,1212.96 1694.41,1212.96 1695,1212.96 1695.58,1212.96 1696.17,1212.96 1696.76,1212.96 1697.34,1212.96 1697.93,1212.96 1698.52,1212.96 1699.1,1212.96 1699.69,1212.96 1700.28,1212.96 1700.86,1212.96 1701.45,1212.96 1702.04,1212.96 1702.62,1212.96 1703.21,1212.96 1703.79,1212.96 1704.38,1212.96 1704.97,1212.96 1705.55,1212.96 1706.14,1212.96 1706.73,1212.96 1707.31,1212.96 1707.9,1212.96 1708.49,1212.96 1709.07,1212.96 1709.66,1212.96 1710.24,1212.96 1710.83,1212.96 1711.42,1212.96 1712,1212.96 1712.59,1212.96 1713.18,1212.96 1713.76,1212.96 1714.35,1212.96 1714.94,1212.96 1715.52,1212.96 1716.11,1212.96 1716.7,1212.96 1717.28,1212.96 1717.87,1212.96 1718.45,1212.96 1719.04,1212.96 1719.63,1212.96 1720.21,1212.96 1720.8,1212.96 1721.39,1212.96 1721.97,1212.96 1722.56,1212.96 1723.15,1212.96 1723.73,1212.96 1724.32,1212.96 1724.91,1212.96 1725.49,1212.96 1726.08,1212.96 1726.66,1212.96 1727.25,1212.96 1727.84,1212.96 1728.42,1212.96 1729.01,1212.96 1729.6,1212.96 1730.18,1212.96 1730.77,1212.96 1731.36,1212.96 1731.94,1212.96 1732.53,1212.96 1733.11,1212.96 1733.7,1212.96 1734.29,1212.96 1734.87,1212.96 1735.46,1212.96 1736.05,1212.96 1736.63,1212.96 1737.22,1212.96 1737.81,1212.96 1738.39,1212.96 1738.98,1212.96 1739.57,1212.96 1740.15,1212.96 1740.74,1212.96 1741.32,1212.96 1741.91,1212.96 1742.5,1212.96 1743.08,1212.96 1743.67,1212.96 1744.26,1212.96 1744.84,1212.96 1745.43,1212.96 1746.02,1212.96 1746.6,1212.96 1747.19,1212.96 1747.78,1212.96 1748.36,1212.96 1748.95,1212.96 1749.53,1212.96 1750.12,1212.96 1750.71,1212.96 1751.29,1212.96 1751.88,1212.96 1752.47,1212.96 1753.05,1212.96 1753.64,1212.96 1754.23,1212.96 1754.81,1212.96 1755.4,1212.96 1755.99,1212.96 1756.57,1212.96 1757.16,1212.96 1757.74,1212.96 1758.33,1212.96 1758.92,1212.96 1759.5,1212.96 1760.09,1212.96 1760.68,1212.96 1761.26,1212.96 1761.85,1212.96 1762.44,1212.96 1763.02,1212.96 1763.61,1212.96 1764.19,1212.96 1764.78,1212.96 1765.37,1212.96 1765.95,1212.96 1766.54,1212.96 1767.13,1212.96 1767.71,1212.96 1768.3,1212.96 1768.89,1212.96 1769.47,1212.96 1770.06,1212.96 1770.65,1212.96 1771.23,1212.96 1771.82,1212.96 1772.4,1212.96 1772.99,1212.96 1773.58,1212.96 1774.16,1212.96 1774.75,1212.96 1775.34,1212.96 1775.92,1212.96 1776.51,1212.96 1777.1,1212.96 1777.68,1212.96 1778.27,1212.96 1778.86,1212.96 1779.44,1212.96 1780.03,1212.96 1780.61,1212.96 1781.2,1212.96 1781.79,1212.96 1782.37,1212.96 1782.96,1212.96 1783.55,1212.96 1784.13,1212.96 1784.72,1212.96 1785.31,1212.96 1785.89,1212.96 1786.48,1212.96 1787.06,1212.96 1787.65,1212.96 1788.24,1212.96 1788.82,1212.96 1789.41,1212.96 1790,1212.96 1790.58,1212.96 1791.17,1212.96 1791.76,1212.96 1792.34,1212.96 1792.93,1212.96 1793.52,1212.96 1794.1,1212.96 1794.69,1212.96 1795.27,1212.96 1795.86,1212.96 1796.45,1212.96 1797.03,1212.96 1797.62,1212.96 1798.21,1212.96 1798.79,1212.96 1799.38,1212.96 1799.97,1212.96 1800.55,1212.96 1801.14,1212.96 1801.73,1212.96 1802.31,1212.96 1802.9,1212.96 1803.48,1212.96 1804.07,1212.96 1804.66,1212.96 1805.24,1212.96 1805.83,1212.96 1806.42,1212.96 1807,1212.96 1807.59,1212.96 1808.18,1212.96 1808.76,1212.96 1809.35,1212.96 1809.94,1212.96 1810.52,1212.96 1811.11,1212.96 1811.69,1212.96 1812.28,1212.96 1812.87,1212.96 1813.45,1212.96 1814.04,1212.96 1814.63,1212.96 1815.21,1212.96 1815.8,1212.96 1816.39,1212.96 1816.97,1212.96 1817.56,1212.96 1818.14,1212.96 1818.73,1212.96 1819.32,1212.96 1819.9,1212.96 1820.49,1212.96 1821.08,1212.96 1821.66,1212.96 1822.25,1212.96 1822.84,1212.96 1823.42,1212.96 1824.01,1212.96 1824.6,1212.96 1825.18,1212.96 1825.77,1212.96 1826.35,1212.96 1826.94,1212.96 1827.53,1212.96 1828.11,1212.96 1828.7,1212.96 1829.29,1212.96 1829.87,1212.96 1830.46,1212.96 1831.05,1212.96 1831.63,1212.96 1832.22,1212.96 1832.81,1212.96 1833.39,1212.96 1833.98,1212.96 1834.56,1212.96 1835.15,1212.96 1835.74,1212.96 1836.32,1212.96 1836.91,1212.96 1837.5,1212.96 1838.08,1212.96 1838.67,1212.96 1839.26,1212.96 1839.84,1212.96 1840.43,1212.96 1841.01,1212.96 1841.6,1212.96 1842.19,1212.96 1842.77,1212.96 1843.36,1212.96 1843.95,1212.96 1844.53,1212.96 1845.12,1212.96 1845.71,1212.96 1846.29,1212.96 1846.88,1212.96 1847.47,1212.96 1848.05,1212.96 1848.64,1212.96 1849.22,1212.96 1849.81,1212.96 1850.4,1212.96 1850.98,1212.96 1851.57,1212.96 1852.16,1212.96 1852.74,1212.96 1853.33,1212.96 1853.92,1212.96 1854.5,1212.96 1855.09,1212.96 1855.68,1212.96 1856.26,1212.96 1856.85,1212.96 1857.43,1212.96 1858.02,1212.96 1858.61,1212.96 1859.19,1212.96 1859.78,1212.96 1860.37,1212.96 1860.95,1212.96 1861.54,1212.96 1862.13,1212.96 1862.71,1212.96 1863.3,1212.96 1863.88,1212.96 1864.47,1212.96 1865.06,1212.96 1865.64,1212.96 1866.23,1212.96 1866.82,1212.96 1867.4,1212.96 1867.99,1212.96 1868.58,1212.96 1869.16,1212.96 1869.75,1212.96 1870.34,1212.96 1870.92,1212.96 1871.51,1212.96 1872.09,1212.96 1872.68,1212.96 1873.27,1212.96 1873.85,1212.96 1874.44,1212.96 1875.03,1212.96 1875.61,1212.96 1876.2,1212.96 1876.79,1212.96 1877.37,1212.96 1877.96,1212.96 1878.55,1212.96 1879.13,1212.96 1879.72,1212.96 1880.3,1212.96 1880.89,1212.96 1881.48,1212.96 1882.06,1212.96 1882.65,1212.96 1883.24,1212.96 1883.82,1212.96 1884.41,1212.96 1885,1212.96 1885.58,1212.96 1886.17,1212.96 1886.76,1212.96 1887.34,1212.96 1887.93,1212.96 1888.51,1212.96 1889.1,1212.96 1889.69,1212.96 1890.27,1212.96 1890.86,1212.96 1891.45,1212.96 1892.03,1212.96 1892.62,1212.96 1893.21,1212.96 1893.79,1212.96 1894.38,1212.96 1894.96,1212.96 1895.55,1212.96 1896.14,1212.96 1896.72,1212.96 1897.31,1212.96 1897.9,1212.96 1898.48,1212.96 1899.07,1212.96 1899.66,1212.96 1900.24,1212.96 1900.83,1212.96 1901.42,1212.96 1902,1212.96 1902.59,1212.96 1903.17,1212.96 1903.76,1212.96 1904.35,1212.96 1904.93,1212.96 1905.52,1212.96 1906.11,1212.96 1906.69,1212.96 1907.28,1212.96 1907.87,1212.96 1908.45,1212.96 1909.04,1212.96 1909.63,1212.96 1910.21,1212.96 1910.8,1212.96 1911.38,1212.96 1911.97,1212.96 1912.56,1212.96 1913.14,1212.96 1913.73,1212.96 1914.32,1212.96 1914.9,1212.96 1915.49,1212.96 1916.08,1212.96 1916.66,1212.96 1917.25,1212.96 1917.83,1212.96 1918.42,1212.96 1919.01,1212.96 1919.59,1212.96 1920.18,1212.96 1920.77,1212.96 1921.35,1212.96 1921.94,1212.96 1922.53,1212.96 1923.11,1212.96 1923.7,1212.96 1924.29,1212.96 1924.87,1212.96 1925.46,1212.96 1926.04,1212.96 1926.63,1212.96 1927.22,1212.96 1927.8,1212.96 1928.39,1212.96 1928.98,1212.96 1929.56,1212.96 1930.15,1212.96 1930.74,1212.96 1931.32,1212.96 1931.91,1212.96 1932.5,1212.96 1933.08,1212.96 1933.67,1212.96 1934.25,1212.96 1934.84,1212.96 1935.43,1212.96 1936.01,1212.96 1936.6,1212.96 1937.19,1212.96 1937.77,1212.96 1938.36,1212.96 1938.95,1212.96 1939.53,1212.96 1940.12,1212.96 1940.71,1212.96 1941.29,1212.96 1941.88,1212.96 1942.46,1212.96 1943.05,1212.96 1943.64,1212.96 1944.22,1212.96 1944.81,1212.96 1945.4,1212.96 1945.98,1212.96 1946.57,1212.96 1947.16,1212.96 1947.74,1212.96 1948.33,1212.96 1948.91,1212.96 1949.5,1212.96 1950.09,1212.96 1950.67,1212.96 1951.26,1212.96 1951.85,1212.96 1952.43,1212.96 1953.02,1212.96 1953.61,1212.96 1954.19,1212.96 1954.78,1212.96 1955.37,1212.96 1955.95,1212.96 1956.54,1212.96 1957.12,1212.96 1957.71,1212.96 1958.3,1212.96 1958.88,1212.96 1959.47,1212.96 1960.06,1212.96 1960.64,1212.96 1961.23,1212.96 1961.82,1212.96 1962.4,1212.96 1962.99,1212.96 1963.58,1212.96 1964.16,1212.96 1964.75,1212.96 1965.33,1212.96 1965.92,1212.96 1966.51,1212.96 1967.09,1212.96 1967.68,1212.96 1968.27,1212.96 1968.85,1212.96 1969.44,1212.96 1970.03,1212.96 1970.61,1212.96 1971.2,1212.96 1971.78,1212.96 1972.37,1212.96 1972.96,1212.96 1973.54,1212.96 1974.13,1212.96 1974.72,1212.96 1975.3,1212.96 1975.89,1212.96 1976.48,1212.96 1977.06,1212.96 1977.65,1212.96 1978.24,1212.96 1978.82,1212.96 1979.41,1212.96 1979.99,1212.96 1980.58,1212.96 1981.17,1212.96 1981.75,1212.96 1982.34,1212.96 1982.93,1212.96 1983.51,1212.96 1984.1,1212.96 1984.69,1212.96 1985.27,1212.96 1985.86,1212.96 1986.45,1212.96 1987.03,1212.96 1987.62,1212.96 1988.2,1212.96 1988.79,1212.96 1989.38,1212.96 1989.96,1212.96 1990.55,1212.96 1991.14,1212.96 1991.72,1212.96 1992.31,1212.96 1992.9,1212.96 1993.48,1212.96 1994.07,1212.96 1994.65,1212.96 1995.24,1212.96 1995.83,1212.96 1996.41,1212.96 1997,1212.96 1997.59,1212.96 1998.17,1212.96 1998.76,1212.96 1999.35,1212.96 1999.93,1212.96 2000.52,1212.96 2001.11,1212.96 2001.69,1212.96 2002.28,1212.96 2002.86,1212.96 2003.45,1212.96 2004.04,1212.96 2004.62,1212.96 2005.21,1212.96 2005.8,1212.96 2006.38,1212.96 2006.97,1212.96 2007.56,1212.96 2008.14,1212.96 2008.73,1212.96 2009.32,1212.96 2009.9,1212.96 2010.49,1212.96 2011.07,1212.96 2011.66,1212.96 2012.25,1212.96 2012.83,1212.96 2013.42,1212.96 2014.01,1212.96 2014.59,1212.96 2015.18,1212.96 2015.77,1212.96 2016.35,1212.96 2016.94,1212.96 2017.53,1212.96 2018.11,1212.96 2018.7,1212.96 2019.28,1212.96 2019.87,1212.96 2020.46,1212.96 2021.04,1212.96 2021.63,1212.96 2022.22,1212.96 2022.8,1212.96 2023.39,1212.96 2023.98,1212.96 2024.56,1212.96 2025.15,1212.96 2025.73,1212.96 2026.32,1212.96 2026.91,1212.96 2027.49,1212.96 2028.08,1212.96 2028.67,1212.96 2029.25,1212.96 2029.84,1212.96 2030.43,1212.96 2031.01,1212.96 2031.6,1212.96 2032.19,1212.96 2032.77,1212.96 2033.36,1212.96 2033.94,1212.96 2034.53,1212.96 2035.12,1212.96 2035.7,1212.96 2036.29,1212.96 2036.88,1212.96 2037.46,1212.96 2038.05,1212.96 2038.64,1212.96 2039.22,1212.96 2039.81,1212.96 2040.4,1212.96 2040.98,1212.96 2041.57,1212.96 2042.15,1212.96 2042.74,1212.96 2043.33,1212.96 2043.91,1212.96 2044.5,1212.96 2045.09,1212.96 2045.67,1212.96 2046.26,1212.96 2046.85,1212.96 2047.43,1212.96 2048.02,1212.96 2048.6,1212.96 2049.19,1212.96 2049.78,1212.96 2050.36,1212.96 2050.95,1212.96 2051.54,1212.96 2052.12,1212.96 2052.71,1212.96 2053.3,1212.96 2053.88,1212.96 2054.47,1212.96 2055.06,1212.96 2055.64,1212.96 2056.23,1212.96 2056.81,1212.96 2057.4,1212.96 2057.99,1212.96 2058.57,1212.96 2059.16,1212.96 2059.75,1212.96 2060.33,1212.96 2060.92,1212.96 2061.51,1212.96 2062.09,1212.96 2062.68,1212.96 2063.27,1212.96 2063.85,1212.96 2064.44,1212.96 2065.02,1212.96 2065.61,1212.96 2066.2,1212.96 2066.78,1212.96 2067.37,1212.96 2067.96,1212.96 2068.54,1212.96 2069.13,1212.96 2069.72,1212.96 2070.3,1212.96 2070.89,1212.96 2071.48,1212.96 2072.06,1212.96 2072.65,1212.96 2073.23,1212.96 2073.82,1212.96 2074.41,1212.96 2074.99,1212.96 2075.58,1212.96 2076.17,1212.96 2076.75,1212.96 2077.34,1212.96 2077.93,1212.96 2078.51,1212.96 2079.1,1212.96 2079.68,1212.96 2080.27,1212.96 2080.86,1212.96 2081.44,1212.96 2082.03,1212.96 2082.62,1212.96 2083.2,1212.96 2083.79,1212.96 2084.38,1212.96 2084.96,1212.96 2085.55,1212.96 2086.14,1212.96 2086.72,1212.96 2087.31,1212.96 2087.89,1212.96 2088.48,1212.96 2089.07,1212.96 2089.65,1212.96 2090.24,1212.96 2090.83,1212.96 2091.41,1212.96 2092,1212.96 2092.59,1212.96 2093.17,1212.96 2093.76,1212.96 2094.35,1212.96 2094.93,1212.96 2095.52,1212.96 2096.1,1212.96 2096.69,1212.96 2097.28,1212.96 2097.86,1212.96 2098.45,1212.96 2099.04,1212.96 2099.62,1212.96 2100.21,1212.96 2100.8,1212.96 2101.38,1212.96 2101.97,1212.96 2102.55,1212.96 2103.14,1212.96 2103.73,1212.96 2104.31,1212.96 2104.9,1212.96 2105.49,1212.96 2106.07,1212.96 2106.66,1212.96 2107.25,1212.96 2107.83,1212.96 2108.42,1212.96 2109.01,1212.96 2109.59,1212.96 2110.18,1212.96 2110.76,1212.96 2111.35,1212.96 2111.94,1212.96 2112.52,1212.96 2113.11,1212.96 2113.7,1212.96 2114.28,1212.96 2114.87,1212.96 2115.46,1212.96 2116.04,1212.96 2116.63,1212.96 2117.22,1212.96 2117.8,1212.96 2118.39,1212.96 2118.97,1212.96 2119.56,1212.96 2120.15,1212.96 2120.73,1212.96 2121.32,1212.96 2121.91,1212.96 2122.49,1212.96 2123.08,1212.96 2123.67,1212.96 2124.25,1212.96 2124.84,1212.96 2125.42,1212.96 2126.01,1212.96 2126.6,1212.96 2127.18,1212.96 2127.77,1212.96 2128.36,1212.96 2128.94,1212.96 2129.53,1212.96 2130.12,1212.96 2130.7,1212.96 2131.29,1212.96 2131.88,1212.96 2132.46,1212.96 2133.05,1212.96 2133.63,1212.96 2134.22,1212.96 2134.81,1212.96 2135.39,1212.96 2135.98,1212.96 2136.57,1212.96 2137.15,1212.96 2137.74,1212.96 2138.33,1212.96 2138.91,1212.96 2139.5,1212.96 2140.09,1212.96 2140.67,1212.96 2141.26,1212.96 2141.84,1212.96 2142.43,1212.96 2143.02,1212.96 2143.6,1212.96 2144.19,1212.96 2144.78,1212.96 2145.36,1212.96 2145.95,1212.96 2146.54,1212.96 2147.12,1212.96 2147.71,1212.96 2148.3,1212.96 2148.88,1212.96 2149.47,1212.96 2150.05,1212.96 2150.64,1212.96 2151.23,1212.96 2151.81,1212.96 2152.4,1212.96 2152.99,1212.96 2153.57,1212.96 2154.16,1212.96 2154.75,1212.96 2155.33,1212.96 2155.92,1212.96 2156.5,1212.96 2157.09,1212.96 2157.68,1212.96 2158.26,1212.96 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.51,1195.8 1399.2,899.083 \"/>\n<polyline clip-path=\"url(#clip792)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1229.76 985.439,1195.8 2158.26,1195.8 2158.26,1229.76 985.439,1229.76 \"/>\n<path clip-path=\"url(#clip790)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip790)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip790)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip790)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip790)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip790)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip793\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip793)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip793)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip793)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip793)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip793)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip790)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip793)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip793)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip793)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip793)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip793)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip790)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip790)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip790)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip793)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-8122.62 164.91,-7593.95 165.469,-8385.02 166.029,-7958.69 166.588,-8626.12 167.147,-9244.37 167.706,-9784.58 168.266,-10284 168.825,-10714.2 169.384,-11094.4 169.943,-10691.1 170.503,-11026.6 171.062,-11304.5 171.621,-11558.1 172.18,-11774.2 172.74,-11945.2 173.299,-12094.6 173.858,-11731.4 174.417,-11836.9 174.977,-11908.1 175.536,-11570.7 176.095,-11599.7 176.655,-11614.6 177.214,-11289.4 177.773,-11289.1 178.332,-11265.3 178.892,-11223.1 179.451,-11165.8 180.01,-11087.1 180.569,-10782 181.129,-10282 181.688,-10184.1 182.247,-9890.76 182.806,-9271.67 183.366,-9019.56 183.925,-8495.47 184.484,-8404.81 185.043,-8169.8 185.603,-7826.25 186.162,-7597.18 186.721,-7487.04 187.28,-7369.11 187.84,-7241.98 188.399,-7118.1 188.958,-6909.49 189.517,-6784.74 190.077,-6579.45 190.636,-6375.3 191.195,-6259.35 191.754,-6141.59 192.314,-6022.53 192.873,-5756.9 193.432,-5511.87 193.991,-5210.61 194.551,-5044.48 195.11,-4888.05 195.669,-4622.11 196.228,-4369.26 196.788,-4285.38 197.347,-4200.82 197.906,-4065.89 198.465,-3927.91 199.025,-3797.85 199.584,-3574.7 200.143,-3451.88 200.702,-3369.98 201.262,-3290.26 201.821,-3168.58 202.38,-2935.97 202.939,-2751.9 203.499,-2577.03 204.058,-2481.95 204.617,-2386.4 205.176,-2329.72 205.736,-2233.44 206.295,-2107.38 206.854,-1955.26 207.413,-1840.1 207.973,-1726.78 208.532,-1680.31 209.091,-1628.58 209.65,-1548.39 210.21,-1502.07 210.769,-1337.33 211.328,-1232.64 211.887,-1189.52 212.447,-1089.25 213.006,-1043.48 213.565,-975.321 214.124,-936.707 214.684,-895.31 215.243,-828.447 215.802,-762.538 216.361,-704.775 216.921,-571.069 217.48,-508.352 218.039,-454.251 218.598,-426.035 219.158,-395.85 219.717,-346.12 220.276,-270.958 220.835,-246.729 221.395,-201.144 221.954,-180.734 222.513,-132.946 223.072,-84.8902 223.632,-45.6424 224.191,-25.6517 224.75,-6.54446 225.309,78.0004 225.869,158.127 226.428,170.542 226.987,247.791 227.546,281.627 228.106,392.36 228.665,419.419 229.224,444.283 229.783,449.221 230.343,449.001 230.902,474.98 231.461,541.019 232.02,559.754 232.58,621.2 233.139,639.237 233.698,618.83 234.257,635.747 234.817,655.603 235.376,692.05 235.935,693.269 236.494,731.845 237.054,726.453 237.613,708.237 238.172,779.566 238.731,812.92 239.291,809.46 239.85,824.845 240.409,877.285 240.968,872.374 241.528,852.923 242.087,884.767 242.646,878.788 243.205,943.689 243.765,938.673 244.324,914.18 244.883,909.549 245.442,924.996 246.002,937.749 246.561,934.246 247.12,963.457 247.679,957.948 248.239,953.757 248.798,930.473 249.357,922.87 249.916,951.077 250.476,945.395 251.035,956.971 251.594,953.448 252.153,1019.13 252.713,1028.75 253.272,1002.49 253.831,993.867 254.39,1020.61 254.95,1032.95 255.509,1077.69 256.068,1082.84 256.627,1055 257.187,1043.73 257.746,1031.38 258.305,1041.71 258.864,1032.41 259.424,1062.43 259.983,1072.42 260.542,1079.98 261.101,1106.83 261.661,1079.65 262.22,1101.98 262.779,1075.13 263.338,1083.43 263.898,1075.84 264.457,1083.35 265.016,1007.38 265.575,1021.47 266.135,1032.09 266.694,1010.91 267.253,1008.41 267.812,1020.54 268.372,1079.43 268.931,1087.56 269.49,1093.81 270.049,1117.43 270.609,1056.02 271.168,1082.25 271.727,1058.45 272.286,1051.34 272.846,1079.08 273.405,992.153 273.964,973.471 274.523,957.883 275.083,961.104 275.642,961.983 276.201,959.998 276.76,1026.45 277.32,1038.57 277.879,1016.93 278.438,1025.05 278.997,1019.4 279.557,1067.65 280.116,1043.36 280.675,1040.54 281.234,1019.52 281.794,1002.49 282.353,1016.63 282.912,1014.54 283.471,1026.88 284.031,1056.24 284.59,1083.55 285.149,1107.05 285.708,1097.73 286.268,1105.11 286.827,1130.01 287.386,1120.05 287.945,1142.75 288.505,1146.82 289.064,1166.26 289.623,1149.87 290.182,1124.66 290.742,1131.01 291.301,1120.6 291.86,1106.74 292.419,1144.77 292.979,1133.02 293.538,1136.68 294.097,1089.67 294.656,1079.6 295.216,1087.24 295.775,1079.29 296.334,1104.61 296.893,1093.12 297.453,1052.93 298.012,1062.35 298.571,1039.2 299.13,1047.71 299.69,1022.71 300.249,997.727 300.808,992.398 301.368,989.285 301.927,983.685 302.486,992.514 303.045,984.798 303.605,980.251 304.164,957.724 304.723,938.921 305.282,954.487 305.842,970.422 306.401,946.188 306.96,946.146 307.519,940.274 308.079,923.801 308.638,924.791 309.197,923.037 309.756,924.481 310.316,936.762 310.875,952.112 311.434,966.942 311.993,961.958 312.553,959.476 313.112,1008.42 313.671,1002.22 314.23,963.563 314.79,962.276 315.349,925.192 315.908,907.513 316.467,875.702 317.027,860.317 317.586,858.782 318.145,895.13 318.704,861.37 319.264,895.884 319.823,947.498 320.382,910.9 320.941,926.332 321.501,938.747 322.06,936.722 322.619,932.069 323.178,912.061 323.738,910.88 324.297,908.493 324.856,939.678 325.415,970.627 325.975,950.371 326.534,930.808 327.093,927.244 327.652,924.693 328.212,908.713 328.771,907.936 329.33,954.639 329.889,945.951 330.449,924.668 331.008,937.206 331.567,965.427 332.126,978.005 332.686,1005.36 333.245,964.632 333.804,956.903 334.363,968.918 334.923,963.127 335.482,958.415 336.041,953.457 336.6,945.232 337.16,952.051 337.719,948.448 338.278,962.473 338.837,961.318 339.397,938.079 339.956,918.11 340.515,946.997 341.074,958.44 341.634,982.707 342.193,959.672 342.752,951.612 343.311,962.986 343.871,941.007 344.43,921.493 344.989,931.372 345.548,930.096 346.108,879.268 346.667,929.541 347.226,923.258 347.785,919.83 348.345,930.995 348.904,910.636 349.463,935.676 350.022,911.72 350.582,888.832 351.141,869.106 351.7,899.999 352.259,944.598 352.819,953.218 353.378,944.21 353.937,923.472 354.496,920.338 355.056,976.166 355.615,952.636 356.174,963.733 356.733,955.632 357.293,930.873 357.852,894.242 358.411,870.244 358.97,880.586 359.53,904.481 360.089,900.354 360.648,931.594 361.207,976.599 361.767,970.645 362.326,976.556 362.885,934.878 363.444,881.867 364.004,909.931 364.563,956.319 365.122,916.86 365.681,879.472 366.241,875.514 366.8,871.865 367.359,869.741 367.918,865.63 368.478,844.961 369.037,863.792 369.596,843.599 370.155,824.293 370.715,807.384 371.274,839.282 371.833,819.781 372.392,804.518 372.952,837.006 373.511,837.446 374.07,804.095 374.629,817.282 375.189,817.627 375.748,819.389 376.307,832.396 376.866,832.097 377.426,845.155 377.985,859.091 378.544,842.452 379.103,872.998 379.663,884.242 380.222,862.108 380.781,888.796 381.34,863.311 381.9,874.691 382.459,851.814 383.018,866.295 383.577,863.457 384.137,844.917 384.696,842.079 385.255,838.353 385.814,884.103 386.374,909.458 386.933,884.674 387.492,896.11 388.051,938.893 388.611,912.438 389.17,872.923 389.729,884.229 390.288,880.524 390.848,879.129 391.407,871.428 391.966,863.725 392.525,855.624 393.085,853.37 393.644,866.494 394.203,895.759 394.762,890.669 395.322,881.021 395.881,858.995 396.44,870.198 396.999,864.247 397.559,876.984 398.118,887.448 398.677,883.083 399.236,891.928 399.796,887.844 400.355,897.383 400.914,895.297 401.473,858.049 402.033,854.144 402.592,863.071 403.151,856.247 403.71,850.838 404.27,813.117 404.829,795.319 405.388,825.298 405.947,787.892 406.507,803.709 407.066,800.043 407.625,828.72 408.184,842.501 408.744,805.911 409.303,820.291 409.862,819.658 410.421,788.809 410.981,773.211 411.54,822.018 412.099,836.798 412.658,835.296 413.218,817.79 413.777,817.531 414.336,797.873 414.895,798.319 415.455,861.908 416.014,841.925 416.573,852.788 417.132,831.463 417.692,827.314 418.251,776.305 418.81,772.11 419.369,771.892 419.929,787.193 420.488,783.637 421.047,767.642 421.606,764.97 422.166,782.36 422.725,778.895 423.284,778.771 423.843,797.299 424.403,799.614 424.962,795.226 425.521,795.629 426.08,809.574 426.64,824.519 427.199,803.542 427.758,784.344 428.318,800.474 428.877,801.744 429.436,835.208 429.995,864.964 430.555,855.774 431.114,834.886 431.673,833.951 432.232,814.821 432.792,796.659 433.351,796.386 433.91,813.332 434.469,808.363 435.029,837.297 435.588,852.223 436.147,878.954 436.706,870.618 437.266,846.501 437.825,840.972 438.384,849.242 438.943,811.971 439.503,828.442 440.062,776.723 440.621,791.034 441.18,785.871 441.74,785.042 442.299,784.024 442.858,784.568 443.417,800.757 443.977,781.068 444.536,779.563 445.095,777.466 445.654,788.625 446.214,788.891 446.773,753.076 447.332,752.423 447.891,751.79 448.451,701.131 449.01,671.114 449.569,675.486 450.128,664.31 450.688,684.421 451.247,670.834 451.806,643.415 452.365,683.805 452.925,701.394 453.484,703.155 454.043,689.511 454.602,729.465 455.162,728.915 455.721,731.27 456.28,729.586 456.839,745.708 457.399,727.012 457.958,727.369 458.517,760.904 459.076,758.99 459.636,759.133 460.195,742.999 460.754,744.693 461.313,746.234 461.873,762.247 462.432,775.257 462.991,808.945 463.55,818.802 464.11,784.141 464.669,785.883 465.228,809.258 465.787,788.986 466.347,754.734 466.906,787.367 467.465,804.128 468.024,818.937 468.584,815.024 469.143,811.667 469.702,776.031 470.261,809.285 470.821,773.53 471.38,756.783 471.939,759.054 472.498,743.025 473.058,775.242 473.617,775.124 474.176,775.575 474.735,790.541 475.295,790.299 475.854,786.22 476.413,748.821 476.972,743.647 477.532,726.619 478.091,758.443 478.65,772.447 479.209,786.295 479.769,798.077 480.328,811.683 480.887,791.088 481.446,770.969 482.006,766.814 482.565,767.363 483.124,783.397 483.683,793.831 484.243,789.901 484.802,757.248 485.361,791.89 485.92,819.689 486.48,786.285 487.039,785.65 487.598,783.057 488.157,797.754 488.717,809.487 489.276,807.545 489.835,806.663 490.394,752.867 490.954,733.947 491.513,733.975 492.072,747.902 492.631,747.037 493.191,749.776 493.75,748.688 494.309,733.531 494.868,764.713 495.428,794.996 495.987,789.719 496.546,803.272 497.105,816.862 497.665,813.203 498.224,795.29 498.783,790.231 499.342,833.27 499.902,859.848 500.461,853.507 501.02,833.58 501.579,811.782 502.139,806.666 502.698,801.437 503.257,782.494 503.816,761.459 504.376,776.096 504.935,744.537 505.494,746.029 506.053,717.137 506.613,717.571 507.172,703.188 507.731,724.31 508.29,724.43 508.85,723.797 509.409,725.279 509.968,705.521 510.527,705.607 511.087,675.872 511.646,665.619 512.205,637.006 512.764,626.686 513.324,649.832 513.883,639.809 514.442,658.829 515.001,675.066 515.561,665.006 516.12,682.915 516.679,737.331 517.238,737.339 517.798,751.364 518.357,734.113 518.916,779.824 519.475,793.561 520.035,806.257 520.594,803.402 521.153,781.407 521.712,793.683 522.272,807.988 522.831,803.306 523.39,797.767 523.949,793.577 524.509,791.054 525.068,740.142 525.627,724.333 526.186,724.069 526.746,740.726 527.305,726.651 527.864,744.85 528.423,725.291 528.983,758.609 529.542,744.479 530.101,715.979 530.66,684.134 531.22,734.221 531.779,767.961 532.338,764.041 532.897,730.054 533.457,711.332 534.016,713.872 534.575,699.115 535.134,686.494 535.694,685.248 536.253,703.498 536.812,701.899 537.371,716.584 537.931,731.313 538.49,716.799 539.049,719.368 539.608,717.902 540.168,722.385 540.727,755.388 541.286,754.837 541.845,801.733 542.405,765.654 542.964,780.744 543.523,774.952 544.082,754.516 544.642,767.627 545.201,795.314 545.76,792.291 546.319,788.374 546.879,785.523 547.438,795.422 547.997,809.172 548.556,836.763 549.116,798.616 549.675,793.635 550.234,806.837 550.793,786.882 551.353,800.455 551.912,795.759 552.471,776.366 553.031,724.297 553.59,690.558 554.149,679.324 554.708,649.601 555.268,685.274 555.827,703.5 556.386,722.406 556.945,704.568 557.505,690.197 558.064,691.855 558.623,680.638 559.182,700.157 559.742,699.195 560.301,730.785 560.86,746.759 561.419,709.865 561.979,695.105 562.538,630.619 563.097,653.59 563.656,655.964 564.216,641.362 564.775,645.909 565.334,678.375 565.893,666.987 566.453,636.618 567.012,672.658 567.571,678.384 568.13,670.826 568.69,627.328 569.249,663.733 569.808,665.933 570.367,702.071 570.927,699.993 571.486,702.958 572.045,721.994 572.604,704.128 573.164,721.912 573.723,720.913 574.282,733.464 574.841,717.099 575.401,748.05 575.96,747.812 576.519,744.838 577.078,726.551 577.638,759.895 578.197,756.929 578.756,770.093 579.315,767.503 579.875,779.443 580.434,791.367 580.993,786.354 581.552,815.706 582.112,824.622 582.671,813.099 583.23,823.583 583.789,765.762 584.349,763.731 584.908,747.299 585.467,749.307 586.026,734.369 586.586,731.69 587.145,746.275 587.704,760.685 588.263,744.234 588.823,743.354 589.382,741.349 589.941,673.102 590.5,708.28 591.06,727.245 591.619,727.533 592.178,712.693 592.737,706.494 593.297,721.247 593.856,685.688 594.415,702.41 594.974,688.586 595.534,720.753 596.093,740.161 596.652,737.998 597.211,774.675 597.771,754.935 598.33,781.885 598.889,741.724 599.448,770.981 600.008,768.053 600.567,782.392 601.126,747.082 601.685,757.484 602.245,771.074 602.804,734.898 603.363,714.474 603.922,712.498 604.482,713.543 605.041,710.242 605.6,711.448 606.159,691.297 606.719,688.858 607.278,671.551 607.837,693.22 608.396,728.216 608.956,728.509 609.515,723.53 610.074,721.049 610.633,684.737 611.193,703.32 611.752,704.944 612.311,689.699 612.87,671.92 613.43,706.39 613.989,723.695 614.548,723.262 615.107,740.586 615.667,707.216 616.226,690.365 616.785,690.895 617.344,689.884 617.904,675.675 618.463,695.402 619.022,681.879 619.581,653.689 620.141,669.629 620.7,668.715 621.259,685.518 621.818,676.32 622.378,657.456 622.937,674.811 623.496,661.758 624.055,646.747 624.615,615.566 625.174,599.532 625.733,619.33 626.292,621.193 626.852,654.787 627.411,671.415 627.97,689.827 628.529,689.348 629.089,690.349 629.648,688.529 630.207,704.257 630.766,720.161 631.326,734.764 631.885,733.595 632.444,732.623 633.003,715.093 633.563,712.778 634.122,729.382 634.681,711.482 635.24,695.865 635.8,697.13 636.359,748.449 636.918,731.077 637.477,729.702 638.037,714.67 638.596,685.215 639.155,684.719 639.714,701.956 640.274,714.143 640.833,697.744 641.392,680.631 641.951,679.849 642.511,680.877 643.07,702.083 643.629,730.112 644.188,727.518 644.748,729.122 645.307,757.059 645.866,736.785 646.425,720.879 646.985,717.227 647.544,699.499 648.103,715.169 648.662,728.265 649.222,712.32 649.781,693.718 650.34,674.752 650.899,676.989 651.459,628.85 652.018,612.413 652.577,585.075 653.136,642.073 653.696,661.687 654.255,667.501 654.814,650.976 655.373,641.119 655.933,641.214 656.492,660.101 657.051,644.764 657.61,651.523 658.17,654.395 658.729,605.67 659.288,611.553 659.847,616.837 660.407,623.834 660.966,628.365 661.525,631.771 662.084,618.314 662.644,622.851 663.203,613.145 663.762,665.014 664.321,665.136 664.881,667.324 665.44,684.747 665.999,666.866 666.558,701.153 667.118,703.425 667.677,737.491 668.236,753.285 668.795,704.873 669.355,719.601 669.914,733.454 670.473,749.429 671.032,749.516 671.592,762.243 672.151,761.045 672.71,777.962 673.269,760.336 673.829,790.605 674.388,770.981 674.947,799.585 675.506,794.175 676.066,810.229 676.625,805.835 677.184,787.419 677.743,797.722 678.303,794.985 678.862,788.397 679.421,770.34 679.981,733.158 680.54,729.379 681.099,714.107 681.658,714.254 682.218,728.423 682.777,709.084 683.336,705.442 683.895,702.067 684.455,684.36 685.014,664.987 685.573,663.456 686.132,636.796 686.692,624.992 687.251,642.702 687.81,643.702 688.369,646.252 688.929,666.818 689.488,647.965 690.047,648.517 690.606,652.786 691.166,672.394 691.725,656.949 692.284,661.027 692.843,610.694 693.403,632.827 693.962,683.399 694.521,700.18 695.08,714.091 695.64,716.815 696.199,732.954 696.758,730.283 697.317,726.109 697.877,674.253 698.436,656.53 698.995,658.866 699.554,660.094 700.114,664.535 700.673,665.832 701.232,666.409 701.791,688.057 702.351,693.465 702.91,725.383 703.469,728.6 704.028,709.412 704.588,689.279 705.147,657.636 705.706,661.075 706.265,709.285 706.825,694.539 707.384,693.739 707.943,693.441 708.502,708.775 709.062,712.583 709.621,680.287 710.18,698.669 710.739,713.506 711.299,714.454 711.858,700.582 712.417,718.857 712.976,747.401 713.536,711.134 714.095,728.279 714.654,742.577 715.213,740.36 715.773,736.053 716.332,722.092 716.891,703.169 717.45,716.881 718.01,697.567 718.569,713.652 719.128,725.651 719.687,722.26 720.247,721.114 720.806,685.776 721.365,700.627 721.924,699.353 722.484,684.726 723.043,698.429 723.602,727.984 724.161,725.21 724.721,724.409 725.28,690.146 725.839,704.283 726.398,720.688 726.958,702.151 727.517,688.095 728.076,691.14 728.635,688.823 729.195,706.972 729.754,687.118 730.313,697.763 730.872,665.19 731.432,651.491 731.991,684.605 732.55,684.281 733.109,732.363 733.669,750.877 734.228,766.514 734.787,778.693 735.346,822.741 735.906,785.176 736.465,813.531 737.024,804.776 737.583,828.419 738.143,815.841 738.702,856.136 739.261,799.295 739.82,773.017 740.38,749.815 740.939,762.508 741.498,712.86 742.057,695.813 742.617,711.621 743.176,710.797 743.735,693.259 744.294,693.19 744.854,694.741 745.413,694.143 745.972,678.285 746.531,665.483 747.091,667.442 747.65,684.874 748.209,719.833 748.768,733.424 749.328,717.771 749.887,700.141 750.446,717.74 751.005,699.536 751.565,697.815 752.124,713.798 752.683,695.353 753.242,678.412 753.802,695.418 754.361,727.219 754.92,690.581 755.479,720.595 756.039,716.415 756.598,682.943 757.157,703.341 757.716,701.482 758.276,700.547 758.835,718.026 759.394,701.436 759.953,731.863 760.513,763.351 761.072,742.52 761.631,722.559 762.19,718.411 762.75,654.512 763.309,670.943 763.868,688.327 764.427,703.719 764.987,702.518 765.546,700.684 766.105,698.972 766.664,679.155 767.224,662.736 767.783,648.207 768.342,650.255 768.901,701.311 769.461,717.677 770.02,731.716 770.579,727.604 771.138,711.089 771.698,729.02 772.257,708.556 772.816,739.598 773.375,705.759 773.935,723.541 774.494,720.57 775.053,718.98 775.612,687.123 776.172,670.668 776.731,656.944 777.29,674.492 777.849,677.71 778.409,630.968 778.968,645.17 779.527,661.432 780.086,714.773 780.646,695.984 781.205,678.621 781.764,679.1 782.323,662.733 782.883,651.884 783.442,638.442 784.001,672.21 784.56,686.661 785.12,703.938 785.679,688.231 786.238,687.484 786.797,687.941 787.357,718.341 787.916,735.837 788.475,719.527 789.034,701.967 789.594,698.378 790.153,694.19 790.712,660.032 791.271,646.793 791.831,648.519 792.39,666.805 792.949,668.004 793.508,701.083 794.068,716.771 794.627,715.328 795.186,695.525 795.745,712.657 796.305,730.01 796.864,729.41 797.423,762.166 797.982,730.056 798.542,725.031 799.101,708.466 799.66,709.224 800.219,692.897 800.779,695.463 801.338,712.758 801.897,728.568 802.456,724.131 803.016,737.66 803.575,755.349 804.134,736.287 804.693,718.903 805.253,687.535 805.812,687.484 806.371,686.351 806.931,685.076 807.49,686.943 808.049,685.844 808.608,671.921 809.168,669.117 809.727,652.71 810.286,651.688 810.845,669.08 811.405,671.248 811.964,656.782 812.523,690.756 813.082,704.765 813.642,708.883 814.201,671.163 814.76,673.065 815.319,675.568 815.879,693.912 816.438,697.228 816.997,701.054 817.556,700.812 818.116,695.896 818.675,696.077 819.234,667.206 819.793,635.265 820.353,622.034 820.912,592.06 821.471,583.084 822.03,589.919 822.59,627.28 823.149,614.616 823.708,585.563 824.267,607.428 824.827,595.151 825.386,585.564 825.945,572.451 826.504,579.06 827.064,573.185 827.623,599.423 828.182,623.6 828.741,611.357 829.301,598.611 829.86,620.843 830.419,625.985 830.978,648.523 831.538,636.006 832.097,654.685 832.656,658.78 833.215,644.511 833.775,664.383 834.334,681.88 834.893,699.163 835.452,686.737 836.012,655.235 836.571,676.089 837.13,659.674 837.689,643.627 838.249,644.58 838.808,663.707 839.367,666.374 839.926,686.283 840.486,698.123 841.045,712.024 841.604,663.51 842.163,681.186 842.723,665.655 843.282,654.025 843.841,671.892 844.4,655.067 844.96,659.225 845.519,691.942 846.078,725.977 846.637,737.574 847.197,687.441 847.756,704.435 848.315,683.408 848.874,654.335 849.434,661.855 849.993,632.81 850.552,606.603 851.111,628.694 851.671,665.487 852.23,669.584 852.789,705.154 853.348,737.505 853.908,752.523 854.467,733.138 855.026,716.237 855.585,715.92 856.145,682.04 856.704,682.382 857.263,698.849 857.822,696.29 858.382,692.974 858.941,711.38 859.5,741.644 860.059,723.072 860.619,735.648 861.178,702.824 861.737,717.976 862.296,750.054 862.856,764.222 863.415,746.255 863.974,727.43 864.533,727.158 865.093,740.188 865.652,721.503 866.211,703.65 866.77,735.408 867.33,749.318 867.889,745.025 868.448,739.759 869.007,733.654 869.567,732.143 870.126,712.53 870.685,746.45 871.244,758.185 871.804,754.695 872.363,767.114 872.922,794.639 873.481,803.359 874.041,813.974 874.6,804.713 875.159,781.121 875.718,744.569 876.278,758.314 876.837,755.025 877.396,753.384 877.955,734.173 878.515,749.354 879.074,715.644 879.633,715.244 880.192,682.912 880.752,698.28 881.311,681.205 881.87,696.115 882.429,712.131 882.989,714.307 883.548,696.138 884.107,694.317 884.666,695.193 885.226,694.831 885.785,727.702 886.344,725.134 886.903,723.748 887.463,707.106 888.022,691.428 888.581,675.034 889.14,677.404 889.7,696.585 890.259,694.459 890.818,677.421 891.377,674.685 891.937,690.771 892.496,677.327 893.055,648.034 893.614,649.638 894.174,684.715 894.733,702.107 895.292,715.618 895.851,762.335 896.411,756.618 896.97,782.502 897.529,778.317 898.088,771.268 898.648,753.145 899.207,715.818 899.766,682.983 900.325,684.63 900.885,686.044 901.444,650.632 902.003,653.56 902.562,671.291 903.122,658.752 903.681,661.167 904.24,678.13 904.799,680.187 905.359,680.767 905.918,696.693 906.477,711.594 907.036,643.468 907.596,645.607 908.155,666.849 908.714,665.511 909.273,649.408 909.833,652.891 910.392,670.464 910.951,684.782 911.51,700.566 912.07,700.69 912.629,667.561 913.188,650.452 913.747,653.771 914.307,669.813 914.866,669.541 915.425,650.4 915.984,666.349 916.544,669.298 917.103,684.028 917.662,686.335 918.221,703.074 918.781,703.224 919.34,684.388 919.899,683.844 920.458,698.814 921.018,681.554 921.577,713.656 922.136,713.253 922.695,693.55 923.255,693.7 923.814,691.382 924.373,706.389 924.932,722.488 925.492,736.142 926.051,717.9 926.61,714.422 927.169,731.244 927.729,729.441 928.288,713.38 928.847,696.634 929.406,696.107 929.966,696.668 930.525,695.79 931.084,664.814 931.644,679.687 932.203,714.886 932.762,713.785 933.321,714.63 933.881,714.676 934.44,647.222 934.999,651.546 935.558,638.303 936.118,638.928 936.677,657.763 937.236,658.67 937.795,662.746 938.355,664.261 938.914,665.556 939.473,648.084 940.032,649.444 940.592,620.776 941.151,623.648 941.71,595.319 942.269,614.387 942.829,604.766 943.388,610.913 943.947,615.092 944.506,617.045 945.066,605.704 945.625,630.102 946.184,619.943 946.743,622.718 947.303,656.607 947.862,653.275 948.421,672.539 948.98,674.599 949.54,691.341 950.099,675.879 950.658,690.415 951.217,689.454 951.777,688.998 952.336,655.946 952.895,660.503 953.454,681.179 954.014,680.613 954.573,680.96 955.132,683.006 955.691,714.379 956.251,692.413 956.81,738.82 957.369,749.837 957.928,763.352 958.488,741.448 959.047,754.866 959.606,735.98 960.165,732.45 960.725,745.328 961.284,741.93 961.843,755.28 962.402,750.096 962.962,712.955 963.521,724.266 964.08,688.819 964.639,702.493 965.199,700.003 965.758,704.5 966.317,721.281 966.876,704.601 967.436,690.95 967.995,687.067 968.554,718.48 969.113,716.603 969.673,731.784 970.232,712.291 970.791,711.509 971.35,661.659 971.91,659.243 972.469,594.276 973.028,565.051 973.587,567.557 974.147,586.113 974.706,576.145 975.265,615.195 975.824,636.21 976.384,607.954 976.943,626.737 977.502,608.579 978.061,611.069 978.621,629.791 979.18,645.972 979.739,646.493 980.298,634.735 980.858,604.815 981.417,642.835 981.976,609.716 982.535,632.633 983.095,650.161 983.654,652.755 984.213,655.466 984.772,692.163 985.332,691.596 985.891,689.869 986.45,703.541 987.009,674.847 987.569,639.73 988.128,639.455 988.687,644.131 989.246,649.065 989.806,634.22 990.365,635.601 990.924,604.018 991.483,622.422 992.043,623.878 992.602,626.718 993.161,633.584 993.72,618.693 994.28,639.935 994.839,655.639 995.398,673.329 995.957,690.275 996.517,705.534 997.076,708.067 997.635,707.838 998.194,688.341 998.754,687.515 999.313,684.371 999.872,666.891 1000.43,670.463 1000.99,671.046 1001.55,706.568 1002.11,705.568 1002.67,701.704 1003.23,704.066 1003.79,684.371 1004.35,671.354 1004.91,690.173 1005.46,705.918 1006.02,719.485 1006.58,684.713 1007.14,667.105 1007.7,650.083 1008.26,649.943 1008.82,685.342 1009.38,667.902 1009.94,716.22 1010.5,731.32 1011.06,747.334 1011.62,744.44 1012.18,737.867 1012.73,734.313 1013.29,732.214 1013.85,728.813 1014.41,724.816 1014.97,738.616 1015.53,719.193 1016.09,736.104 1016.65,750.518 1017.21,727.894 1017.77,757.733 1018.33,753.521 1018.89,750.784 1019.45,727.27 1020.01,692.38 1020.56,677.686 1021.12,695.379 1021.68,691.906 1022.24,723.192 1022.8,703.501 1023.36,686.56 1023.92,736.075 1024.48,783.95 1025.04,795.383 1025.6,774.193 1026.16,769.634 1026.72,765.823 1027.28,741.561 1027.83,726.724 1028.39,708.233 1028.95,703.534 1029.51,687.056 1030.07,702.242 1030.63,754.591 1031.19,719.203 1031.75,719.87 1032.31,702.243 1032.87,731.581 1033.43,727.783 1033.99,723.864 1034.55,737.68 1035.1,701.419 1035.66,704.914 1036.22,703.335 1036.78,701.018 1037.34,670.716 1037.9,690.047 1038.46,657.964 1039.02,656.676 1039.58,640.113 1040.14,657.561 1040.7,656.605 1041.26,658.871 1041.82,658.664 1042.38,708.245 1042.93,708.174 1043.49,722.474 1044.05,705.621 1044.61,657.163 1045.17,643.948 1045.73,679.553 1046.29,661.961 1046.85,677.679 1047.41,693.398 1047.97,692.202 1048.53,710.679 1049.09,680.414 1049.65,693.381 1050.2,673.745 1050.76,674.743 1051.32,680.223 1051.88,697.191 1052.44,696.623 1053,643.357 1053.56,646.121 1054.12,649.677 1054.68,649.653 1055.24,637.761 1055.8,638.865 1056.36,639.669 1056.92,659.377 1057.48,659.259 1058.03,712.606 1058.59,725.536 1059.15,691.752 1059.71,692.253 1060.27,691.514 1060.83,692.094 1061.39,723.348 1061.95,718.19 1062.51,698.736 1063.07,681.136 1063.63,648.847 1064.19,650.273 1064.75,652.208 1065.3,652.94 1065.86,654.978 1066.42,653.488 1066.98,652.54 1067.54,635.786 1068.1,607.476 1068.66,610.384 1069.22,634.401 1069.78,638.819 1070.34,641.43 1070.9,647.909 1071.46,682.115 1072.02,682.897 1072.57,681.362 1073.13,683.956 1073.69,648.488 1074.25,620.124 1074.81,606.604 1075.37,596.164 1075.93,596.902 1076.49,570.149 1077.05,563.096 1077.61,604.099 1078.17,625.27 1078.73,613.922 1079.29,602.032 1079.85,606.408 1080.4,612.44 1080.96,630.894 1081.52,631.91 1082.08,646.413 1082.64,617.499 1083.2,635.427 1083.76,636.619 1084.32,655.901 1084.88,654.537 1085.44,640.27 1086,675.41 1086.56,705.067 1087.12,704.927 1087.67,750.744 1088.23,763.509 1088.79,732.012 1089.35,698.06 1089.91,693.553 1090.47,689.373 1091.03,691.627 1091.59,704.603 1092.15,717.829 1092.71,728.845 1093.27,727.713 1093.83,774.426 1094.39,755.298 1094.94,720.888 1095.5,736.485 1096.06,748.286 1096.62,743.94 1097.18,724.666 1097.74,724.751 1098.3,674.007 1098.86,685.683 1099.42,665.662 1099.98,652.336 1100.54,672.433 1101.1,638.791 1101.66,657.018 1102.22,671.597 1102.77,657.011 1103.33,672.874 1103.89,657.943 1104.45,695.871 1105.01,652.216 1105.57,670.89 1106.13,721.327 1106.69,698.959 1107.25,681.715 1107.81,700.861 1108.37,670.358 1108.93,686.481 1109.49,707.073 1110.04,705.272 1110.6,719.043 1111.16,766.447 1111.72,778.644 1112.28,772.929 1112.84,749.855 1113.4,762.071 1113.96,741.766 1114.52,724.113 1115.08,706.982 1115.64,722.803 1116.2,715.795 1116.76,730.664 1117.31,696.529 1117.87,678.464 1118.43,677.497 1118.99,660.031 1119.55,676.539 1120.11,689.45 1120.67,719.304 1121.23,698.452 1121.79,697.878 1122.35,699.961 1122.91,682.792 1123.47,716.052 1124.03,727.112 1124.59,757.456 1125.14,803.278 1125.7,767.727 1126.26,779.181 1126.82,791.322 1127.38,753.54 1127.94,750.996 1128.5,733.182 1129.06,712.703 1129.62,709.504 1130.18,725.715 1130.74,708.564 1131.3,688.045 1131.86,702.874 1132.41,687.305 1132.97,670.285 1133.53,673.866 1134.09,655.814 1134.65,640.191 1135.21,639.341 1135.77,639.392 1136.33,624.422 1136.89,623.006 1137.45,640.068 1138.01,688.222 1138.57,683.593 1139.13,664.717 1139.68,694.763 1140.24,711.539 1140.8,680.202 1141.36,664.717 1141.92,666.274 1142.48,680.38 1143.04,646.976 1143.6,645.67 1144.16,664.531 1144.72,649.971 1145.28,668.21 1145.84,685.042 1146.4,669.18 1146.96,656.051 1147.51,643.551 1148.07,659.11 1148.63,645.713 1149.19,700.156 1149.75,698.796 1150.31,695.713 1150.87,694.839 1151.43,676.675 1151.99,674.632 1152.55,675.448 1153.11,660.022 1153.67,660.263 1154.23,679.499 1154.78,681.26 1155.34,682.979 1155.9,682.498 1156.46,695.83 1157.02,725.21 1157.58,727.438 1158.14,710.32 1158.7,677.417 1159.26,673.803 1159.82,659.365 1160.38,627.622 1160.94,630.519 1161.5,682.857 1162.05,731.208 1162.61,745.886 1163.17,726.969 1163.73,752.088 1164.29,732.038 1164.85,711.693 1165.41,711.134 1165.97,726.832 1166.53,739.668 1167.09,734.069 1167.65,716.009 1168.21,732.234 1168.77,698.977 1169.33,716.3 1169.88,700.382 1170.44,699.433 1171,715.213 1171.56,696.099 1172.12,711.998 1172.68,693.403 1173.24,660.049 1173.8,645.478 1174.36,658.643 1174.92,645.558 1175.48,679.226 1176.04,648.961 1176.6,601.598 1177.15,604.714 1177.71,593.191 1178.27,600.523 1178.83,590.832 1179.39,598.087 1179.95,618.267 1180.51,651.416 1181.07,621.244 1181.63,640.899 1182.19,641.966 1182.75,612.386 1183.31,632.302 1183.87,633.613 1184.43,668.728 1184.98,685.553 1185.54,643.283 1186.1,662.359 1186.66,667.221 1187.22,671.26 1187.78,670.54 1188.34,687.373 1188.9,687.642 1189.46,668.407 1190.02,670.349 1190.58,640.73 1191.14,642.482 1191.7,647.709 1192.25,651.818 1192.81,619.905 1193.37,626.347 1193.93,580.001 1194.49,573.508 1195.05,628.819 1195.61,635.945 1196.17,622.14 1196.73,625.824 1197.29,630.536 1197.85,682.605 1198.41,667.078 1198.97,650.929 1199.52,654.136 1200.08,655.065 1200.64,672.045 1201.2,689.865 1201.76,693.65 1202.32,714.176 1202.88,746.096 1203.44,708.72 1204,705.924 1204.56,721.167 1205.12,688.997 1205.68,687.649 1206.24,704.54 1206.8,738.184 1207.35,721.236 1207.91,702.423 1208.47,704.198 1209.03,720.595 1209.59,765.464 1210.15,777.568 1210.71,775.898 1211.27,756.062 1211.83,750.011 1212.39,731.148 1212.95,762.17 1213.51,743.127 1214.07,739.966 1214.62,770.427 1215.18,813.878 1215.74,794.392 1216.3,836.231 1216.86,813.445 1217.42,818.889 1217.98,796.737 1218.54,822.216 1219.1,797.498 1219.66,790.114 1220.22,798.806 1220.78,775.171 1221.34,771.027 1221.89,752.741 1222.45,729.432 1223.01,742.745 1223.57,724.023 1224.13,720.661 1224.69,734.682 1225.25,748.353 1225.81,743.058 1226.37,759.581 1226.93,771.162 1227.49,750.849 1228.05,779.923 1228.61,772.072 1229.17,780.101 1229.72,755.359 1230.28,752.701 1230.84,731.59 1231.4,725.107 1231.96,655.055 1232.52,638.892 1233.08,625.324 1233.64,658.314 1234.2,661.473 1234.76,613.631 1235.32,617.221 1235.88,652.632 1236.44,660.053 1236.99,658.382 1237.55,658.726 1238.11,615.25 1238.67,587.12 1239.23,591.92 1239.79,597.603 1240.35,619.731 1240.91,638.383 1241.47,658.492 1242.03,707.623 1242.59,702.707 1243.15,702.605 1243.71,719.481 1244.26,719.759 1244.82,750.15 1245.38,763.373 1245.94,727.961 1246.5,729.197 1247.06,695.725 1247.62,659.103 1248.18,597.145 1248.74,601.017 1249.3,606.29 1249.86,593.522 1250.42,580.311 1250.98,570.018 1251.54,592.869 1252.09,609.424 1252.65,632.577 1253.21,654.016 1253.77,620.512 1254.33,625.767 1254.89,629.706 1255.45,619.173 1256.01,592.854 1256.57,599.782 1257.13,621.241 1257.69,642.687 1258.25,617.062 1258.81,638.855 1259.36,640.508 1259.92,610.024 1260.48,581.142 1261.04,633.205 1261.6,602.572 1262.16,605.234 1262.72,609.389 1263.28,595.134 1263.84,616.646 1264.4,635.162 1264.96,639.147 1265.52,641.476 1266.08,641.889 1266.63,658.995 1267.19,677.782 1267.75,680.359 1268.31,697.8 1268.87,713.395 1269.43,712.893 1269.99,697.337 1270.55,697.701 1271.11,710.452 1271.67,709.132 1272.23,708.276 1272.79,706.994 1273.35,706.223 1273.91,703.629 1274.46,733.779 1275.02,731.223 1275.58,712.694 1276.14,709.767 1276.7,709.56 1277.26,753.761 1277.82,752.602 1278.38,766.271 1278.94,742.291 1279.5,738.361 1280.06,737.451 1280.62,734.35 1281.18,734.6 1281.73,748.398 1282.29,745.337 1282.85,713.409 1283.41,712.639 1283.97,695.714 1284.53,665.685 1285.09,666.054 1285.65,683.613 1286.21,682.284 1286.77,682.644 1287.33,681.524 1287.89,681.741 1288.45,682.887 1289,682.139 1289.56,670.424 1290.12,669.663 1290.68,655.27 1291.24,640.279 1291.8,656.366 1292.36,674.609 1292.92,661.355 1293.48,693.146 1294.04,691.65 1294.6,689.682 1295.16,689.73 1295.72,657.898 1296.28,642.657 1296.83,676.743 1297.39,695.611 1297.95,680.1 1298.51,663.835 1299.07,680.257 1299.63,677.785 1300.19,663.653 1300.75,650.048 1301.31,650.244 1301.87,650.795 1302.43,655.649 1302.99,640.113 1303.55,642.366 1304.1,645.949 1304.66,648.555 1305.22,615.559 1305.78,605.9 1306.34,611.944 1306.9,614.289 1307.46,651.937 1308.02,673.898 1308.58,706.88 1309.14,705.27 1309.7,704.362 1310.26,718.565 1310.82,714.282 1311.38,710.163 1311.93,674.788 1312.49,674.451 1313.05,656.302 1313.61,672.075 1314.17,690.935 1314.73,686.031 1315.29,703.23 1315.85,704.772 1316.41,705.553 1316.97,690.318 1317.53,704.909 1318.09,704.044 1318.65,699.394 1319.2,687.104 1319.76,702.606 1320.32,707.031 1320.88,705.858 1321.44,689.918 1322,673.699 1322.56,657.102 1323.12,657.335 1323.68,623.574 1324.24,641.364 1324.8,657.89 1325.36,674.662 1325.92,677.015 1326.47,663.168 1327.03,649.267 1327.59,684.15 1328.15,681.783 1328.71,650.077 1329.27,650.822 1329.83,620.15 1330.39,672.061 1330.95,625.222 1331.51,706.942 1332.07,689.193 1332.63,703.68 1333.19,700.578 1333.75,684.387 1334.3,683.556 1334.86,668.644 1335.42,670.846 1335.98,655.815 1336.54,654.5 1337.1,640.266 1337.66,660.586 1338.22,627.636 1338.78,632.923 1339.34,668.07 1339.9,684.715 1340.46,700.595 1341.02,699.971 1341.57,699.866 1342.13,696.797 1342.69,696.986 1343.25,699.033 1343.81,694.495 1344.37,675.887 1344.93,661.806 1345.49,680.416 1346.05,667.23 1346.61,670.794 1347.17,703.017 1347.73,703.877 1348.29,688.226 1348.84,670.719 1349.4,703.857 1349.96,671.902 1350.52,670.302 1351.08,702.505 1351.64,685.952 1352.2,672.062 1352.76,722.428 1353.32,720.276 1353.88,703.879 1354.44,700.525 1355,715.83 1355.56,714.753 1356.12,730.8 1356.67,743.989 1357.23,772.768 1357.79,735.042 1358.35,716.724 1358.91,683.103 1359.47,698.841 1360.03,748.732 1360.59,750.137 1361.15,748.776 1361.71,711.735 1362.27,754.121 1362.83,786.006 1363.39,764.956 1363.94,760.145 1364.5,757.157 1365.06,737.185 1365.62,762.291 1366.18,735.366 1366.74,763.724 1367.3,755.103 1367.86,721.8 1368.42,700.457 1368.98,682.132 1369.54,715.57 1370.1,712.651 1370.66,726.454 1371.21,708.049 1371.77,723.379 1372.33,703.968 1372.89,668.908 1373.45,667.24 1374.01,635.788 1374.57,653.723 1375.13,636.396 1375.69,626.703 1376.25,628.214 1376.81,630.774 1377.37,666.651 1377.93,668.961 1378.49,671.716 1379.04,684.504 1379.6,666.085 1380.16,681.141 1380.72,696.018 1381.28,711.215 1381.84,676.254 1382.4,692.989 1382.96,679.397 1383.52,682.529 1384.08,667.354 1384.64,621.415 1385.2,628.36 1385.76,597.116 1386.31,585.221 1386.87,589.02 1387.43,594.684 1387.99,600.836 1388.55,602.936 1389.11,639.963 1389.67,643.153 1390.23,626.905 1390.79,648.99 1391.35,632.817 1391.91,652.995 1392.47,651.503 1393.03,684.796 1393.58,652.753 1394.14,636.326 1394.7,624.955 1395.26,628.204 1395.82,631.956 1396.38,633.681 1396.94,620.517 1397.5,621.198 1398.06,597.599 1398.62,602.735 1399.18,588.475 1399.74,593.593 1400.3,581.278 1400.86,588.453 1401.41,591.742 1401.97,630.582 1402.53,635.121 1403.09,653.08 1403.65,638.514 1404.21,654.498 1404.77,624.711 1405.33,677.476 1405.89,694.632 1406.45,629.798 1407.01,631.202 1407.57,633.418 1408.13,632.083 1408.68,632.106 1409.24,637.304 1409.8,640.39 1410.36,657.474 1410.92,675.933 1411.48,644.101 1412.04,644.004 1412.6,675.603 1413.16,676.677 1413.72,676.045 1414.28,692.599 1414.84,674.648 1415.4,723.028 1415.95,702.471 1416.51,715.778 1417.07,714.518 1417.63,710.993 1418.19,744.998 1418.75,788.748 1419.31,783.455 1419.87,763.891 1420.43,758.191 1420.99,753.456 1421.55,782.821 1422.11,762.922 1422.67,775.091 1423.23,770.498 1423.78,765.309 1424.34,742.703 1424.9,724.606 1425.46,691.244 1426.02,707.66 1426.58,720.718 1427.14,697.049 1427.7,709.478 1428.26,693.54 1428.82,707.316 1429.38,723.726 1429.94,719.856 1430.5,720.699 1431.05,702.05 1431.61,687.889 1432.17,705.531 1432.73,737.908 1433.29,736.533 1433.85,747.848 1434.41,713.194 1434.97,696.637 1435.53,696.707 1436.09,712.95 1436.65,713.258 1437.21,713.337 1437.77,742.826 1438.33,737.812 1438.88,700.556 1439.44,687.736 1440,689.438 1440.56,672.838 1441.12,672.975 1441.68,657.114 1442.24,642.917 1442.8,631.262 1443.36,631.741 1443.92,636.227 1444.48,620.404 1445.04,592.17 1445.6,592.975 1446.15,564.844 1446.71,605.765 1447.27,595.417 1447.83,600.419 1448.39,622.781 1448.95,628.768 1449.51,614.369 1450.07,635.045 1450.63,625.557 1451.19,630.172 1451.75,676.621 1452.31,676.414 1452.87,662.591 1453.42,649.811 1453.98,619.301 1454.54,656.297 1455.1,673.536 1455.66,689.487 1456.22,702.919 1456.78,701.77 1457.34,733.692 1457.9,728.993 1458.46,693.126 1459.02,710.584 1459.58,723.765 1460.14,721.776 1460.7,733.995 1461.25,733.717 1461.81,765.589 1462.37,778.36 1462.93,770.302 1463.49,766.953 1464.05,777.787 1464.61,804.276 1465.17,795.748 1465.73,755.681 1466.29,753.345 1466.85,732.882 1467.41,759.906 1467.97,755.464 1468.52,735.909 1469.08,699.033 1469.64,713.581 1470.2,713.721 1470.76,742.284 1471.32,721.82 1471.88,719.31 1472.44,666.837 1473,620.391 1473.56,626.382 1474.12,609.619 1474.68,599.656 1475.24,569.377 1475.79,544.52 1476.35,583.518 1476.91,570.615 1477.47,578.434 1478.03,569.567 1478.59,606.644 1479.15,631.221 1479.71,649.361 1480.27,568.932 1480.83,594.921 1481.39,596.405 1481.95,597.753 1482.51,617.015 1483.07,635.582 1483.62,654.805 1484.18,689.722 1484.74,675.17 1485.3,691.524 1485.86,659.486 1486.42,658.25 1486.98,675.545 1487.54,673.857 1488.1,659.975 1488.66,676.908 1489.22,676.105 1489.78,694.342 1490.34,709.391 1490.89,710.113 1491.45,723.471 1492.01,723.251 1492.57,737.093 1493.13,702.75 1493.69,734.108 1494.25,745.549 1494.81,756.606 1495.37,749.043 1495.93,744.213 1496.49,739.939 1497.05,719.001 1497.61,713.397 1498.16,726.775 1498.72,739.371 1499.28,736.767 1499.84,734.484 1500.4,683.321 1500.96,726.073 1501.52,711.156 1502.08,694.833 1502.64,696.475 1503.2,710.73 1503.76,694.198 1504.32,691.32 1504.88,692.773 1505.44,708.322 1505.99,721.444 1506.55,738.836 1507.11,722.618 1507.67,737.347 1508.23,749.877 1508.79,730.964 1509.35,728.3 1509.91,710.295 1510.47,726.479 1511.03,726.248 1511.59,690.745 1512.15,659.345 1512.71,643.699 1513.26,647.103 1513.82,667.702 1514.38,685.11 1514.94,667.234 1515.5,699.676 1516.06,712.809 1516.62,692.503 1517.18,704.017 1517.74,735.251 1518.3,722.297 1518.86,703.317 1519.42,706.681 1519.98,689.242 1520.53,720.349 1521.09,687.506 1521.65,704.202 1522.21,604.811 1522.77,625.941 1523.33,647.246 1523.89,681.38 1524.45,647.262 1525.01,612.074 1525.57,615.524 1526.13,635.795 1526.69,621.755 1527.25,592.085 1527.81,568.337 1528.36,605.287 1528.92,592.563 1529.48,615.266 1530.04,635.543 1530.6,640.836 1531.16,662.051 1531.72,693.428 1532.28,691.711 1532.84,694.447 1533.4,644.726 1533.96,663.69 1534.52,645.921 1535.08,631.276 1535.63,600.647 1536.19,623.413 1536.75,628.991 1537.31,632.624 1537.87,637.717 1538.43,623.364 1538.99,625.276 1539.55,644.502 1540.11,647.635 1540.67,680.748 1541.23,681.819 1541.79,680.218 1542.35,694.484 1542.9,692.689 1543.46,690.796 1544.02,677.937 1544.58,695.077 1545.14,697.814 1545.7,678.197 1546.26,725.085 1546.82,754.883 1547.38,749.988 1547.94,731.491 1548.5,730.121 1549.06,778.717 1549.62,771.408 1550.18,767.635 1550.73,763.763 1551.29,756.607 1551.85,782.979 1552.41,795.018 1552.97,775.209 1553.53,768.582 1554.09,744.419 1554.65,754.89 1555.21,736.204 1555.77,655.644 1556.33,638.58 1556.89,661.099 1557.45,660.139 1558,678.515 1558.56,694.649 1559.12,694.267 1559.68,690.948 1560.24,688.045 1560.8,690.028 1561.36,688.6 1561.92,683.38 1562.48,685.415 1563.04,665.457 1563.6,666.2 1564.16,665.793 1564.72,645.441 1565.28,663.054 1565.83,662.635 1566.39,678.4 1566.95,678.706 1567.51,694.238 1568.07,707.732 1568.63,707.759 1569.19,707.199 1569.75,705.01 1570.31,685.54 1570.87,684.407 1571.43,717.67 1571.99,765.048 1572.55,746.516 1573.1,742.315 1573.66,754.543 1574.22,767.928 1574.78,732.395 1575.34,730.334 1575.9,773.562 1576.46,768.786 1577.02,731.337 1577.58,742.799 1578.14,773.428 1578.7,735.039 1579.26,735.131 1579.82,701.886 1580.37,717.796 1580.93,738.103 1581.49,769.552 1582.05,764.775 1582.61,759.001 1583.17,721.743 1583.73,748.793 1584.29,746.199 1584.85,742.351 1585.41,737.375 1585.97,748.752 1586.53,744.461 1587.09,739.82 1587.65,731.754 1588.2,694.769 1588.76,712.74 1589.32,745.345 1589.88,760.784 1590.44,759.092 1591,720.42 1591.56,713.664 1592.12,680.666 1592.68,713.794 1593.24,698.909 1593.8,730.107 1594.36,709.557 1594.92,713.359 1595.47,729.679 1596.03,695.141 1596.59,694.662 1597.15,680.175 1597.71,683.029 1598.27,667.124 1598.83,654.963 1599.39,687.205 1599.95,686.312 1600.51,666.354 1601.07,647.239 1601.63,609.778 1602.19,597.01 1602.74,619.613 1603.3,657.881 1603.86,656.042 1604.42,637.176 1604.98,616.513 1605.54,651.797 1606.1,638.371 1606.66,637.2 1607.22,642.2 1607.78,626.446 1608.34,615.35 1608.9,636.008 1609.46,639.624 1610.02,658.161 1610.57,675.52 1611.13,642.019 1611.69,612.856 1612.25,651.959 1612.81,636.606 1613.37,639.692 1613.93,643.288 1614.49,564.377 1615.05,570.602 1615.61,591.624 1616.17,611.959 1616.73,582.501 1617.29,635.463 1617.84,588.746 1618.4,610.644 1618.96,645.595 1619.52,681.708 1620.08,684.433 1620.64,685.629 1621.2,705.178 1621.76,703.539 1622.32,719.785 1622.88,701.28 1623.44,717.717 1624,712.796 1624.56,696.45 1625.11,681.042 1625.67,697.764 1626.23,731.057 1626.79,729.483 1627.35,691.939 1627.91,691.249 1628.47,659.328 1629.03,647.591 1629.59,650.956 1630.15,635.53 1630.71,655.589 1631.27,655.855 1631.83,638.792 1632.39,642.519 1632.94,662.337 1633.5,647.687 1634.06,662.881 1634.62,616.149 1635.18,633.969 1635.74,624.542 1636.3,581.905 1636.86,602.604 1637.42,604.967 1637.98,592.613 1638.54,595.916 1639.1,633.754 1639.66,638.687 1640.21,640.51 1640.77,623.12 1641.33,626.597 1641.89,629.166 1642.45,648.896 1643.01,663.502 1643.57,695.696 1644.13,661.794 1644.69,646.064 1645.25,665.881 1645.81,681.879 1646.37,665.734 1646.93,665.462 1647.48,653.658 1648.04,668.659 1648.6,670.736 1649.16,623.237 1649.72,605.618 1650.28,661.702 1650.84,662.652 1651.4,659.912 1651.96,679.199 1652.52,697.531 1653.08,698.863 1653.64,699.018 1654.2,696.572 1654.76,712.855 1655.31,663.569 1655.87,681.058 1656.43,649.297 1656.99,650.788 1657.55,671.516 1658.11,657.915 1658.67,708.289 1659.23,694.832 1659.79,744.897 1660.35,758.101 1660.91,757.493 1661.47,769.94 1662.03,782.307 1662.58,777.077 1663.14,774.38 1663.7,723.638 1664.26,754.5 1664.82,766.277 1665.38,778.917 1665.94,791.762 1666.5,770.667 1667.06,781.635 1667.62,778.695 1668.18,757.889 1668.74,800.611 1669.3,826.68 1669.85,819.751 1670.41,783.319 1670.97,779.462 1671.53,756.851 1672.09,753.703 1672.65,731.526 1673.21,666.259 1673.77,633.523 1674.33,631.59 1674.89,602.756 1675.45,621.95 1676.01,640.856 1676.57,625.642 1677.13,627.129 1677.68,628.647 1678.24,634.538 1678.8,638.428 1679.36,658.143 1679.92,677.079 1680.48,664.81 1681.04,682.08 1681.6,698.516 1682.16,679.641 1682.72,661.295 1683.28,713.483 1683.84,730.939 1684.4,727.923 1684.95,725.36 1685.51,754.967 1686.07,781.342 1686.63,743.134 1687.19,739.991 1687.75,752.449 1688.31,714.997 1688.87,682.834 1689.43,699.447 1689.99,685.287 1690.55,664.913 1691.11,666.525 1691.67,653.238 1692.23,674.014 1692.78,708.507 1693.34,723.42 1693.9,703.295 1694.46,656.042 1695.02,673.663 1695.58,643.068 1696.14,609.481 1696.7,645.102 1697.26,667.91 1697.82,685.718 1698.38,717.942 1698.94,719.097 1699.5,750.671 1700.05,749.895 1700.61,749.213 1701.17,777.082 1701.73,756.766 1702.29,772.129 1702.85,788.4 1703.41,770.085 1703.97,750.619 1704.53,746.361 1705.09,743.405 1705.65,740.892 1706.21,735.648 1706.77,731.267 1707.32,711.639 1707.88,676.009 1708.44,676.468 1709,679.763 1709.56,694.549 1710.12,691.646 1710.68,688.257 1711.24,670.807 1711.8,673.264 1712.36,677.095 1712.92,708.11 1713.48,737.524 1714.04,733.282 1714.6,715.268 1715.15,730.223 1715.71,729.092 1716.27,711.669 1716.83,711.113 1717.39,676.295 1717.95,658.474 1718.51,614.145 1719.07,603.117 1719.63,592.896 1720.19,610.406 1720.75,647.388 1721.31,647.411 1721.87,683.653 1722.42,666.682 1722.98,682.006 1723.54,666.448 1724.1,632.851 1724.66,649.02 1725.22,603.231 1725.78,594.69 1726.34,611.915 1726.9,633.458 1727.46,620.041 1728.02,622.022 1728.58,609.429 1729.14,611.003 1729.69,663.324 1730.25,694.344 1730.81,661.144 1731.37,613.014 1731.93,618.168 1732.49,622.826 1733.05,678.538 1733.61,693.586 1734.17,673.221 1734.73,658.904 1735.29,627.387 1735.85,627.409 1736.41,660.376 1736.97,630.372 1737.52,605.361 1738.08,610.366 1738.64,611.726 1739.2,651.234 1739.76,654.256 1740.32,625.333 1740.88,613.023 1741.44,633.251 1742,618.672 1742.56,606.186 1743.12,575.917 1743.68,581.824 1744.24,573.607 1744.79,566.327 1745.35,554.637 1745.91,581.027 1746.47,601.099 1747.03,620.652 1747.59,637.966 1748.15,619.115 1748.71,618.832 1749.27,623.563 1749.83,613.801 1750.39,650.523 1750.95,671.632 1751.51,721.787 1752.06,703.65 1752.62,703.27 1753.18,689.279 1753.74,674.505 1754.3,673.136 1754.86,660.9 1755.42,660.638 1755.98,664.688 1756.54,668.827 1757.1,698.18 1757.66,697.262 1758.22,645.058 1758.78,663.827 1759.34,678.526 1759.89,695.228 1760.45,712.179 1761.01,728.866 1761.57,740.944 1762.13,738.676 1762.69,750.752 1763.25,761.469 1763.81,774.252 1764.37,773.254 1764.93,783.994 1765.49,842.731 1766.05,788.106 1766.61,782.805 1767.16,794.236 1767.72,803.628 1768.28,782.689 1768.84,756.635 1769.4,736.934 1769.96,714.25 1770.52,695.145 1771.08,694.246 1771.64,708.343 1772.2,691.766 1772.76,691.641 1773.32,689.105 1773.88,687.569 1774.43,672.69 1774.99,674.048 1775.55,674.491 1776.11,656.839 1776.67,625.987 1777.23,614.644 1777.79,618.354 1778.35,604.517 1778.91,621.764 1779.47,594.511 1780.03,598.201 1780.59,618.654 1781.15,623.863 1781.71,675.28 1782.26,722.093 1782.82,707.43 1783.38,707.017 1783.94,722.214 1784.5,706.991 1785.06,692.066 1785.62,692.721 1786.18,720.582 1786.74,717.765 1787.3,702.034 1787.86,703.661 1788.42,687.897 1788.98,705.996 1789.53,719.921 1790.09,736.549 1790.65,703.645 1791.21,681.542 1791.77,683.918 1792.33,684.336 1792.89,700.719 1793.45,687.637 1794.01,673.181 1794.57,658.435 1795.13,676.005 1795.69,689.243 1796.25,706.056 1796.8,705.864 1797.36,670.62 1797.92,674.607 1798.48,659.466 1799.04,676.371 1799.6,728.658 1800.16,693.022 1800.72,678.316 1801.28,681.071 1801.84,680.374 1802.4,647.979 1802.96,697.151 1803.52,693.321 1804.08,658.787 1804.63,661.743 1805.19,658.289 1805.75,672.684 1806.31,685.956 1806.87,668.716 1807.43,670.31 1807.99,656.027 1808.55,676.889 1809.11,678.677 1809.67,645.705 1810.23,695.366 1810.79,712.982 1811.35,711.787 1811.9,694.565 1812.46,708.827 1813.02,703.46 1813.58,698.781 1814.14,699.592 1814.7,713.339 1815.26,709.842 1815.82,705.106 1816.38,705.446 1816.94,704.967 1817.5,719.953 1818.06,765.581 1818.62,745.785 1819.18,743.505 1819.73,708.493 1820.29,723.598 1820.85,721.387 1821.41,703.711 1821.97,703.644 1822.53,700.155 1823.09,697.876 1823.65,745.573 1824.21,690.493 1824.77,674.296 1825.33,659.567 1825.89,663.512 1826.45,648.13 1827,665.596 1827.56,682.622 1828.12,700.048 1828.68,683.573 1829.24,666.983 1829.8,684.409 1830.36,698.463 1830.92,684.027 1831.48,696.762 1832.04,709.383 1832.6,691.498 1833.16,678.275 1833.72,649.601 1834.27,634.535 1834.83,652.742 1835.39,670.688 1835.95,654.546 1836.51,641.82 1837.07,656.929 1837.63,625.091 1838.19,643.799 \"/>\n<path clip-path=\"url(#clip793)\" d=\"M720.247 689.882 L720.806 689.882 L721.365 689.882 L721.924 689.882 L722.484 689.882 L723.043 689.882 L723.602 689.882 L724.161 689.882 L724.721 689.882 L725.28 689.882 L725.839 689.882 L726.398 689.882 L726.958 689.882 L727.517 689.882 L728.076 689.882 L728.635 689.882 L729.195 689.882 L729.754 689.882 L730.313 689.882 L730.872 689.882 L731.432 689.882 L731.991 689.882 L732.55 689.882 L733.109 689.882 L733.669 689.882 L734.228 689.882 L734.787 689.882 L735.346 689.882 L735.906 689.882 L736.465 689.882 L737.024 689.882 L737.583 689.882 L738.143 689.882 L738.702 689.882 L739.261 689.882 L739.82 689.882 L740.38 689.882 L740.939 689.882 L741.498 689.882 L742.057 689.882 L742.617 689.882 L743.176 689.882 L743.735 689.882 L744.294 689.882 L744.854 689.882 L745.413 689.882 L745.972 689.882 L746.531 689.882 L747.091 689.882 L747.65 689.882 L748.209 689.882 L748.768 689.882 L749.328 689.882 L749.887 689.882 L750.446 689.882 L751.005 689.882 L751.565 689.882 L752.124 689.882 L752.683 689.882 L753.242 689.882 L753.802 689.882 L754.361 689.882 L754.92 689.882 L755.479 689.882 L756.039 689.882 L756.598 689.882 L757.157 689.882 L757.716 689.882 L758.276 689.882 L758.835 689.882 L759.394 689.882 L759.953 689.882 L760.513 689.882 L761.072 689.882 L761.631 689.882 L762.19 689.882 L762.75 689.882 L763.309 689.882 L763.868 689.882 L764.427 689.882 L764.987 689.882 L765.546 689.882 L766.105 689.882 L766.664 689.882 L767.224 689.882 L767.783 689.882 L768.342 689.882 L768.901 689.882 L769.461 689.882 L770.02 689.882 L770.579 689.882 L771.138 689.882 L771.698 689.882 L772.257 689.882 L772.816 689.882 L773.375 689.882 L773.935 689.882 L774.494 689.882 L775.053 689.882 L775.612 689.882 L776.172 689.882 L776.731 689.882 L777.29 689.882 L777.849 689.882 L778.409 689.882 L778.968 689.882 L779.527 689.882 L780.086 689.882 L780.646 689.882 L781.205 689.882 L781.764 689.882 L782.323 689.882 L782.883 689.882 L783.442 689.882 L784.001 689.882 L784.56 689.882 L785.12 689.882 L785.679 689.882 L786.238 689.882 L786.797 689.882 L787.357 689.882 L787.916 689.882 L788.475 689.882 L789.034 689.882 L789.594 689.882 L790.153 689.882 L790.712 689.882 L791.271 689.882 L791.831 689.882 L792.39 689.882 L792.949 689.882 L793.508 689.882 L794.068 689.882 L794.627 689.882 L795.186 689.882 L795.745 689.882 L796.305 689.882 L796.864 689.882 L797.423 689.882 L797.982 689.882 L798.542 689.882 L799.101 689.882 L799.66 689.882 L800.219 689.882 L800.779 689.882 L801.338 689.882 L801.897 689.882 L802.456 689.882 L803.016 689.882 L803.575 689.882 L804.134 689.882 L804.693 689.882 L805.253 689.882 L805.812 689.882 L806.371 689.882 L806.931 689.882 L807.49 689.882 L808.049 689.882 L808.608 689.882 L809.168 689.882 L809.727 689.882 L810.286 689.882 L810.845 689.882 L811.405 689.882 L811.964 689.882 L812.523 689.882 L813.082 689.882 L813.642 689.882 L814.201 689.882 L814.76 689.882 L815.319 689.882 L815.879 689.882 L816.438 689.882 L816.997 689.882 L817.556 689.882 L818.116 689.882 L818.675 689.882 L819.234 689.882 L819.793 689.882 L820.353 689.882 L820.912 689.882 L821.471 689.882 L822.03 689.882 L822.59 689.882 L823.149 689.882 L823.708 689.882 L824.267 689.882 L824.827 689.882 L825.386 689.882 L825.945 689.882 L826.504 689.882 L827.064 689.882 L827.623 689.882 L828.182 689.882 L828.741 689.882 L829.301 689.882 L829.86 689.882 L830.419 689.882 L830.978 689.882 L831.538 689.882 L832.097 689.882 L832.656 689.882 L833.215 689.882 L833.775 689.882 L834.334 689.882 L834.893 689.882 L835.452 689.882 L836.012 689.882 L836.571 689.882 L837.13 689.882 L837.689 689.882 L838.249 689.882 L838.808 689.882 L839.367 689.882 L839.926 689.882 L840.486 689.882 L841.045 689.882 L841.604 689.882 L842.163 689.882 L842.723 689.882 L843.282 689.882 L843.841 689.882 L844.4 689.882 L844.96 689.882 L845.519 689.882 L846.078 689.882 L846.637 689.882 L847.197 689.882 L847.756 689.882 L848.315 689.882 L848.874 689.882 L849.434 689.882 L849.993 689.882 L850.552 689.882 L851.111 689.882 L851.671 689.882 L852.23 689.882 L852.789 689.882 L853.348 689.882 L853.908 689.882 L854.467 689.882 L855.026 689.882 L855.585 689.882 L856.145 689.882 L856.704 689.882 L857.263 689.882 L857.822 689.882 L858.382 689.882 L858.941 689.882 L859.5 689.882 L860.059 689.882 L860.619 689.882 L861.178 689.882 L861.737 689.882 L862.296 689.882 L862.856 689.882 L863.415 689.882 L863.974 689.882 L864.533 689.882 L865.093 689.882 L865.652 689.882 L866.211 689.882 L866.77 689.882 L867.33 689.882 L867.889 689.882 L868.448 689.882 L869.007 689.882 L869.567 689.882 L870.126 689.882 L870.685 689.882 L871.244 689.882 L871.804 689.882 L872.363 689.882 L872.922 689.882 L873.481 689.882 L874.041 689.882 L874.6 689.882 L875.159 689.882 L875.718 689.882 L876.278 689.882 L876.837 689.882 L877.396 689.882 L877.955 689.882 L878.515 689.882 L879.074 689.882 L879.633 689.882 L880.192 689.882 L880.752 689.882 L881.311 689.882 L881.87 689.882 L882.429 689.882 L882.989 689.882 L883.548 689.882 L884.107 689.882 L884.666 689.882 L885.226 689.882 L885.785 689.882 L886.344 689.882 L886.903 689.882 L887.463 689.882 L888.022 689.882 L888.581 689.882 L889.14 689.882 L889.7 689.882 L890.259 689.882 L890.818 689.882 L891.377 689.882 L891.937 689.882 L892.496 689.882 L893.055 689.882 L893.614 689.882 L894.174 689.882 L894.733 689.882 L895.292 689.882 L895.851 689.882 L896.411 689.882 L896.97 689.882 L897.529 689.882 L898.088 689.882 L898.648 689.882 L899.207 689.882 L899.766 689.882 L900.325 689.882 L900.885 689.882 L901.444 689.882 L902.003 689.882 L902.562 689.882 L903.122 689.882 L903.681 689.882 L904.24 689.882 L904.799 689.882 L905.359 689.882 L905.918 689.882 L906.477 689.882 L907.036 689.882 L907.596 689.882 L908.155 689.882 L908.714 689.882 L909.273 689.882 L909.833 689.882 L910.392 689.882 L910.951 689.882 L911.51 689.882 L912.07 689.882 L912.629 689.882 L913.188 689.882 L913.747 689.882 L914.307 689.882 L914.866 689.882 L915.425 689.882 L915.984 689.882 L916.544 689.882 L917.103 689.882 L917.662 689.882 L918.221 689.882 L918.781 689.882 L919.34 689.882 L919.899 689.882 L920.458 689.882 L921.018 689.882 L921.577 689.882 L922.136 689.882 L922.695 689.882 L923.255 689.882 L923.814 689.882 L924.373 689.882 L924.932 689.882 L925.492 689.882 L926.051 689.882 L926.61 689.882 L927.169 689.882 L927.729 689.882 L928.288 689.882 L928.847 689.882 L929.406 689.882 L929.966 689.882 L930.525 689.882 L931.084 689.882 L931.644 689.882 L932.203 689.882 L932.762 689.882 L933.321 689.882 L933.881 689.882 L934.44 689.882 L934.999 689.882 L935.558 689.882 L936.118 689.882 L936.677 689.882 L937.236 689.882 L937.795 689.882 L938.355 689.882 L938.914 689.882 L939.473 689.882 L940.032 689.882 L940.592 689.882 L941.151 689.882 L941.71 689.882 L942.269 689.882 L942.829 689.882 L943.388 689.882 L943.947 689.882 L944.506 689.882 L945.066 689.882 L945.625 689.882 L946.184 689.882 L946.743 689.882 L947.303 689.882 L947.862 689.882 L948.421 689.882 L948.98 689.882 L949.54 689.882 L950.099 689.882 L950.658 689.882 L951.217 689.882 L951.777 689.882 L952.336 689.882 L952.895 689.882 L953.454 689.882 L954.014 689.882 L954.573 689.882 L955.132 689.882 L955.691 689.882 L956.251 689.882 L956.81 689.882 L957.369 689.882 L957.928 689.882 L958.488 689.882 L959.047 689.882 L959.606 689.882 L960.165 689.882 L960.725 689.882 L961.284 689.882 L961.843 689.882 L962.402 689.882 L962.962 689.882 L963.521 689.882 L964.08 689.882 L964.639 689.882 L965.199 689.882 L965.758 689.882 L966.317 689.882 L966.876 689.882 L967.436 689.882 L967.995 689.882 L968.554 689.882 L969.113 689.882 L969.673 689.882 L970.232 689.882 L970.791 689.882 L971.35 689.882 L971.91 689.882 L972.469 689.882 L973.028 689.882 L973.587 689.882 L974.147 689.882 L974.706 689.882 L975.265 689.882 L975.824 689.882 L976.384 689.882 L976.943 689.882 L977.502 689.882 L978.061 689.882 L978.621 689.882 L979.18 689.882 L979.739 689.882 L980.298 689.882 L980.858 689.882 L981.417 689.882 L981.976 689.882 L982.535 689.882 L983.095 689.882 L983.654 689.882 L984.213 689.882 L984.772 689.882 L985.332 689.882 L985.891 689.882 L986.45 689.882 L987.009 689.882 L987.569 689.882 L988.128 689.882 L988.687 689.882 L989.246 689.882 L989.806 689.882 L990.365 689.882 L990.924 689.882 L991.483 689.882 L992.043 689.882 L992.602 689.882 L993.161 689.882 L993.72 689.882 L994.28 689.882 L994.839 689.882 L995.398 689.882 L995.957 689.882 L996.517 689.882 L997.076 689.882 L997.635 689.882 L998.194 689.882 L998.754 689.882 L999.313 689.882 L999.872 689.882 L1000.43 689.882 L1000.99 689.882 L1001.55 689.882 L1002.11 689.882 L1002.67 689.882 L1003.23 689.882 L1003.79 689.882 L1004.35 689.882 L1004.91 689.882 L1005.46 689.882 L1006.02 689.882 L1006.58 689.882 L1007.14 689.882 L1007.7 689.882 L1008.26 689.882 L1008.82 689.882 L1009.38 689.882 L1009.94 689.882 L1010.5 689.882 L1011.06 689.882 L1011.62 689.882 L1012.18 689.882 L1012.73 689.882 L1013.29 689.882 L1013.85 689.882 L1014.41 689.882 L1014.97 689.882 L1015.53 689.882 L1016.09 689.882 L1016.65 689.882 L1017.21 689.882 L1017.77 689.882 L1018.33 689.882 L1018.89 689.882 L1019.45 689.882 L1020.01 689.882 L1020.56 689.882 L1021.12 689.882 L1021.68 689.882 L1022.24 689.882 L1022.8 689.882 L1023.36 689.882 L1023.92 689.882 L1024.48 689.882 L1025.04 689.882 L1025.6 689.882 L1026.16 689.882 L1026.72 689.882 L1027.28 689.882 L1027.83 689.882 L1028.39 689.882 L1028.95 689.882 L1029.51 689.882 L1030.07 689.882 L1030.63 689.882 L1031.19 689.882 L1031.75 689.882 L1032.31 689.882 L1032.87 689.882 L1033.43 689.882 L1033.99 689.882 L1034.55 689.882 L1035.1 689.882 L1035.66 689.882 L1036.22 689.882 L1036.78 689.882 L1037.34 689.882 L1037.9 689.882 L1038.46 689.882 L1039.02 689.882 L1039.58 689.882 L1040.14 689.882 L1040.7 689.882 L1041.26 689.882 L1041.82 689.882 L1042.38 689.882 L1042.93 689.882 L1043.49 689.882 L1044.05 689.882 L1044.61 689.882 L1045.17 689.882 L1045.73 689.882 L1046.29 689.882 L1046.85 689.882 L1047.41 689.882 L1047.97 689.882 L1048.53 689.882 L1049.09 689.882 L1049.65 689.882 L1050.2 689.882 L1050.76 689.882 L1051.32 689.882 L1051.88 689.882 L1052.44 689.882 L1053 689.882 L1053.56 689.882 L1054.12 689.882 L1054.68 689.882 L1055.24 689.882 L1055.8 689.882 L1056.36 689.882 L1056.92 689.882 L1057.48 689.882 L1058.03 689.882 L1058.59 689.882 L1059.15 689.882 L1059.71 689.882 L1060.27 689.882 L1060.83 689.882 L1061.39 689.882 L1061.95 689.882 L1062.51 689.882 L1063.07 689.882 L1063.63 689.882 L1064.19 689.882 L1064.75 689.882 L1065.3 689.882 L1065.86 689.882 L1066.42 689.882 L1066.98 689.882 L1067.54 689.882 L1068.1 689.882 L1068.66 689.882 L1069.22 689.882 L1069.78 689.882 L1070.34 689.882 L1070.9 689.882 L1071.46 689.882 L1072.02 689.882 L1072.57 689.882 L1073.13 689.882 L1073.69 689.882 L1074.25 689.882 L1074.81 689.882 L1075.37 689.882 L1075.93 689.882 L1076.49 689.882 L1077.05 689.882 L1077.61 689.882 L1078.17 689.882 L1078.73 689.882 L1079.29 689.882 L1079.85 689.882 L1080.4 689.882 L1080.96 689.882 L1081.52 689.882 L1082.08 689.882 L1082.64 689.882 L1083.2 689.882 L1083.76 689.882 L1084.32 689.882 L1084.88 689.882 L1085.44 689.882 L1086 689.882 L1086.56 689.882 L1087.12 689.882 L1087.67 689.882 L1088.23 689.882 L1088.79 689.882 L1089.35 689.882 L1089.91 689.882 L1090.47 689.882 L1091.03 689.882 L1091.59 689.882 L1092.15 689.882 L1092.71 689.882 L1093.27 689.882 L1093.83 689.882 L1094.39 689.882 L1094.94 689.882 L1095.5 689.882 L1096.06 689.882 L1096.62 689.882 L1097.18 689.882 L1097.74 689.882 L1098.3 689.882 L1098.86 689.882 L1099.42 689.882 L1099.98 689.882 L1100.54 689.882 L1101.1 689.882 L1101.66 689.882 L1102.22 689.882 L1102.77 689.882 L1103.33 689.882 L1103.89 689.882 L1104.45 689.882 L1105.01 689.882 L1105.57 689.882 L1106.13 689.882 L1106.69 689.882 L1107.25 689.882 L1107.81 689.882 L1108.37 689.882 L1108.93 689.882 L1109.49 689.882 L1110.04 689.882 L1110.6 689.882 L1111.16 689.882 L1111.72 689.882 L1112.28 689.882 L1112.84 689.882 L1113.4 689.882 L1113.96 689.882 L1114.52 689.882 L1115.08 689.882 L1115.64 689.882 L1116.2 689.882 L1116.76 689.882 L1117.31 689.882 L1117.87 689.882 L1118.43 689.882 L1118.99 689.882 L1119.55 689.882 L1120.11 689.882 L1120.67 689.882 L1121.23 689.882 L1121.79 689.882 L1122.35 689.882 L1122.91 689.882 L1123.47 689.882 L1124.03 689.882 L1124.59 689.882 L1125.14 689.882 L1125.7 689.882 L1126.26 689.882 L1126.82 689.882 L1127.38 689.882 L1127.94 689.882 L1128.5 689.882 L1129.06 689.882 L1129.62 689.882 L1130.18 689.882 L1130.74 689.882 L1131.3 689.882 L1131.86 689.882 L1132.41 689.882 L1132.97 689.882 L1133.53 689.882 L1134.09 689.882 L1134.65 689.882 L1135.21 689.882 L1135.77 689.882 L1136.33 689.882 L1136.89 689.882 L1137.45 689.882 L1138.01 689.882 L1138.57 689.882 L1139.13 689.882 L1139.68 689.882 L1140.24 689.882 L1140.8 689.882 L1141.36 689.882 L1141.92 689.882 L1142.48 689.882 L1143.04 689.882 L1143.6 689.882 L1144.16 689.882 L1144.72 689.882 L1145.28 689.882 L1145.84 689.882 L1146.4 689.882 L1146.96 689.882 L1147.51 689.882 L1148.07 689.882 L1148.63 689.882 L1149.19 689.882 L1149.75 689.882 L1150.31 689.882 L1150.87 689.882 L1151.43 689.882 L1151.99 689.882 L1152.55 689.882 L1153.11 689.882 L1153.67 689.882 L1154.23 689.882 L1154.78 689.882 L1155.34 689.882 L1155.9 689.882 L1156.46 689.882 L1157.02 689.882 L1157.58 689.882 L1158.14 689.882 L1158.7 689.882 L1159.26 689.882 L1159.82 689.882 L1160.38 689.882 L1160.94 689.882 L1161.5 689.882 L1162.05 689.882 L1162.61 689.882 L1163.17 689.882 L1163.73 689.882 L1164.29 689.882 L1164.85 689.882 L1165.41 689.882 L1165.97 689.882 L1166.53 689.882 L1167.09 689.882 L1167.65 689.882 L1168.21 689.882 L1168.77 689.882 L1169.33 689.882 L1169.88 689.882 L1170.44 689.882 L1171 689.882 L1171.56 689.882 L1172.12 689.882 L1172.68 689.882 L1173.24 689.882 L1173.8 689.882 L1174.36 689.882 L1174.92 689.882 L1175.48 689.882 L1176.04 689.882 L1176.6 689.882 L1177.15 689.882 L1177.71 689.882 L1178.27 689.882 L1178.83 689.882 L1179.39 689.882 L1179.95 689.882 L1180.51 689.882 L1181.07 689.882 L1181.63 689.882 L1182.19 689.882 L1182.75 689.882 L1183.31 689.882 L1183.87 689.882 L1184.43 689.882 L1184.98 689.882 L1185.54 689.882 L1186.1 689.882 L1186.66 689.882 L1187.22 689.882 L1187.78 689.882 L1188.34 689.882 L1188.9 689.882 L1189.46 689.882 L1190.02 689.882 L1190.58 689.882 L1191.14 689.882 L1191.7 689.882 L1192.25 689.882 L1192.81 689.882 L1193.37 689.882 L1193.93 689.882 L1194.49 689.882 L1195.05 689.882 L1195.61 689.882 L1196.17 689.882 L1196.73 689.882 L1197.29 689.882 L1197.85 689.882 L1198.41 689.882 L1198.97 689.882 L1199.52 689.882 L1200.08 689.882 L1200.64 689.882 L1201.2 689.882 L1201.76 689.882 L1202.32 689.882 L1202.88 689.882 L1203.44 689.882 L1204 689.882 L1204.56 689.882 L1205.12 689.882 L1205.68 689.882 L1206.24 689.882 L1206.8 689.882 L1207.35 689.882 L1207.91 689.882 L1208.47 689.882 L1209.03 689.882 L1209.59 689.882 L1210.15 689.882 L1210.71 689.882 L1211.27 689.882 L1211.83 689.882 L1212.39 689.882 L1212.95 689.882 L1213.51 689.882 L1214.07 689.882 L1214.62 689.882 L1215.18 689.882 L1215.74 689.882 L1216.3 689.882 L1216.86 689.882 L1217.42 689.882 L1217.98 689.882 L1218.54 689.882 L1219.1 689.882 L1219.66 689.882 L1220.22 689.882 L1220.78 689.882 L1221.34 689.882 L1221.89 689.882 L1222.45 689.882 L1223.01 689.882 L1223.57 689.882 L1224.13 689.882 L1224.69 689.882 L1225.25 689.882 L1225.81 689.882 L1226.37 689.882 L1226.93 689.882 L1227.49 689.882 L1228.05 689.882 L1228.61 689.882 L1229.17 689.882 L1229.72 689.882 L1230.28 689.882 L1230.84 689.882 L1231.4 689.882 L1231.96 689.882 L1232.52 689.882 L1233.08 689.882 L1233.64 689.882 L1234.2 689.882 L1234.76 689.882 L1235.32 689.882 L1235.88 689.882 L1236.44 689.882 L1236.99 689.882 L1237.55 689.882 L1238.11 689.882 L1238.67 689.882 L1239.23 689.882 L1239.79 689.882 L1240.35 689.882 L1240.91 689.882 L1241.47 689.882 L1242.03 689.882 L1242.59 689.882 L1243.15 689.882 L1243.71 689.882 L1244.26 689.882 L1244.82 689.882 L1245.38 689.882 L1245.94 689.882 L1246.5 689.882 L1247.06 689.882 L1247.62 689.882 L1248.18 689.882 L1248.74 689.882 L1249.3 689.882 L1249.86 689.882 L1250.42 689.882 L1250.98 689.882 L1251.54 689.882 L1252.09 689.882 L1252.65 689.882 L1253.21 689.882 L1253.77 689.882 L1254.33 689.882 L1254.89 689.882 L1255.45 689.882 L1256.01 689.882 L1256.57 689.882 L1257.13 689.882 L1257.69 689.882 L1258.25 689.882 L1258.81 689.882 L1259.36 689.882 L1259.92 689.882 L1260.48 689.882 L1261.04 689.882 L1261.6 689.882 L1262.16 689.882 L1262.72 689.882 L1263.28 689.882 L1263.84 689.882 L1264.4 689.882 L1264.96 689.882 L1265.52 689.882 L1266.08 689.882 L1266.63 689.882 L1267.19 689.882 L1267.75 689.882 L1268.31 689.882 L1268.87 689.882 L1269.43 689.882 L1269.99 689.882 L1270.55 689.882 L1271.11 689.882 L1271.67 689.882 L1272.23 689.882 L1272.79 689.882 L1273.35 689.882 L1273.91 689.882 L1274.46 689.882 L1275.02 689.882 L1275.58 689.882 L1276.14 689.882 L1276.7 689.882 L1277.26 689.882 L1277.82 689.882 L1278.38 689.882 L1278.94 689.882 L1279.5 689.882 L1280.06 689.882 L1280.62 689.882 L1281.18 689.882 L1281.73 689.882 L1282.29 689.882 L1282.85 689.882 L1283.41 689.882 L1283.97 689.882 L1284.53 689.882 L1285.09 689.882 L1285.65 689.882 L1286.21 689.882 L1286.77 689.882 L1287.33 689.882 L1287.89 689.882 L1288.45 689.882 L1289 689.882 L1289.56 689.882 L1290.12 689.882 L1290.68 689.882 L1291.24 689.882 L1291.8 689.882 L1292.36 689.882 L1292.92 689.882 L1293.48 689.882 L1294.04 689.882 L1294.6 689.882 L1295.16 689.882 L1295.72 689.882 L1296.28 689.882 L1296.83 689.882 L1297.39 689.882 L1297.95 689.882 L1298.51 689.882 L1299.07 689.882 L1299.63 689.882 L1300.19 689.882 L1300.75 689.882 L1301.31 689.882 L1301.87 689.882 L1302.43 689.882 L1302.99 689.882 L1303.55 689.882 L1304.1 689.882 L1304.66 689.882 L1305.22 689.882 L1305.78 689.882 L1306.34 689.882 L1306.9 689.882 L1307.46 689.882 L1308.02 689.882 L1308.58 689.882 L1309.14 689.882 L1309.7 689.882 L1310.26 689.882 L1310.82 689.882 L1311.38 689.882 L1311.93 689.882 L1312.49 689.882 L1313.05 689.882 L1313.61 689.882 L1314.17 689.882 L1314.73 689.882 L1315.29 689.882 L1315.85 689.882 L1316.41 689.882 L1316.97 689.882 L1317.53 689.882 L1318.09 689.882 L1318.65 689.882 L1319.2 689.882 L1319.76 689.882 L1320.32 689.882 L1320.88 689.882 L1321.44 689.882 L1322 689.882 L1322.56 689.882 L1323.12 689.882 L1323.68 689.882 L1324.24 689.882 L1324.8 689.882 L1325.36 689.882 L1325.92 689.882 L1326.47 689.882 L1327.03 689.882 L1327.59 689.882 L1328.15 689.882 L1328.71 689.882 L1329.27 689.882 L1329.83 689.882 L1330.39 689.882 L1330.95 689.882 L1331.51 689.882 L1332.07 689.882 L1332.63 689.882 L1333.19 689.882 L1333.75 689.882 L1334.3 689.882 L1334.86 689.882 L1335.42 689.882 L1335.98 689.882 L1336.54 689.882 L1337.1 689.882 L1337.66 689.882 L1338.22 689.882 L1338.78 689.882 L1339.34 689.882 L1339.9 689.882 L1340.46 689.882 L1341.02 689.882 L1341.57 689.882 L1342.13 689.882 L1342.69 689.882 L1343.25 689.882 L1343.81 689.882 L1344.37 689.882 L1344.93 689.882 L1345.49 689.882 L1346.05 689.882 L1346.61 689.882 L1347.17 689.882 L1347.73 689.882 L1348.29 689.882 L1348.84 689.882 L1349.4 689.882 L1349.96 689.882 L1350.52 689.882 L1351.08 689.882 L1351.64 689.882 L1352.2 689.882 L1352.76 689.882 L1353.32 689.882 L1353.88 689.882 L1354.44 689.882 L1355 689.882 L1355.56 689.882 L1356.12 689.882 L1356.67 689.882 L1357.23 689.882 L1357.79 689.882 L1358.35 689.882 L1358.91 689.882 L1359.47 689.882 L1360.03 689.882 L1360.59 689.882 L1361.15 689.882 L1361.71 689.882 L1362.27 689.882 L1362.83 689.882 L1363.39 689.882 L1363.94 689.882 L1364.5 689.882 L1365.06 689.882 L1365.62 689.882 L1366.18 689.882 L1366.74 689.882 L1367.3 689.882 L1367.86 689.882 L1368.42 689.882 L1368.98 689.882 L1369.54 689.882 L1370.1 689.882 L1370.66 689.882 L1371.21 689.882 L1371.77 689.882 L1372.33 689.882 L1372.89 689.882 L1373.45 689.882 L1374.01 689.882 L1374.57 689.882 L1375.13 689.882 L1375.69 689.882 L1376.25 689.882 L1376.81 689.882 L1377.37 689.882 L1377.93 689.882 L1378.49 689.882 L1379.04 689.882 L1379.6 689.882 L1380.16 689.882 L1380.72 689.882 L1381.28 689.882 L1381.84 689.882 L1382.4 689.882 L1382.96 689.882 L1383.52 689.882 L1384.08 689.882 L1384.64 689.882 L1385.2 689.882 L1385.76 689.882 L1386.31 689.882 L1386.87 689.882 L1387.43 689.882 L1387.99 689.882 L1388.55 689.882 L1389.11 689.882 L1389.67 689.882 L1390.23 689.882 L1390.79 689.882 L1391.35 689.882 L1391.91 689.882 L1392.47 689.882 L1393.03 689.882 L1393.58 689.882 L1394.14 689.882 L1394.7 689.882 L1395.26 689.882 L1395.82 689.882 L1396.38 689.882 L1396.94 689.882 L1397.5 689.882 L1398.06 689.882 L1398.62 689.882 L1399.18 689.882 L1399.74 689.882 L1400.3 689.882 L1400.86 689.882 L1401.41 689.882 L1401.97 689.882 L1402.53 689.882 L1403.09 689.882 L1403.65 689.882 L1404.21 689.882 L1404.77 689.882 L1405.33 689.882 L1405.89 689.882 L1406.45 689.882 L1407.01 689.882 L1407.57 689.882 L1408.13 689.882 L1408.68 689.882 L1409.24 689.882 L1409.8 689.882 L1410.36 689.882 L1410.92 689.882 L1411.48 689.882 L1412.04 689.882 L1412.6 689.882 L1413.16 689.882 L1413.72 689.882 L1414.28 689.882 L1414.84 689.882 L1415.4 689.882 L1415.95 689.882 L1416.51 689.882 L1417.07 689.882 L1417.63 689.882 L1418.19 689.882 L1418.75 689.882 L1419.31 689.882 L1419.87 689.882 L1420.43 689.882 L1420.99 689.882 L1421.55 689.882 L1422.11 689.882 L1422.67 689.882 L1423.23 689.882 L1423.78 689.882 L1424.34 689.882 L1424.9 689.882 L1425.46 689.882 L1426.02 689.882 L1426.58 689.882 L1427.14 689.882 L1427.7 689.882 L1428.26 689.882 L1428.82 689.882 L1429.38 689.882 L1429.94 689.882 L1430.5 689.882 L1431.05 689.882 L1431.61 689.882 L1432.17 689.882 L1432.73 689.882 L1433.29 689.882 L1433.85 689.882 L1434.41 689.882 L1434.97 689.882 L1435.53 689.882 L1436.09 689.882 L1436.65 689.882 L1437.21 689.882 L1437.77 689.882 L1438.33 689.882 L1438.88 689.882 L1439.44 689.882 L1440 689.882 L1440.56 689.882 L1441.12 689.882 L1441.68 689.882 L1442.24 689.882 L1442.8 689.882 L1443.36 689.882 L1443.92 689.882 L1444.48 689.882 L1445.04 689.882 L1445.6 689.882 L1446.15 689.882 L1446.71 689.882 L1447.27 689.882 L1447.83 689.882 L1448.39 689.882 L1448.95 689.882 L1449.51 689.882 L1450.07 689.882 L1450.63 689.882 L1451.19 689.882 L1451.75 689.882 L1452.31 689.882 L1452.87 689.882 L1453.42 689.882 L1453.98 689.882 L1454.54 689.882 L1455.1 689.882 L1455.66 689.882 L1456.22 689.882 L1456.78 689.882 L1457.34 689.882 L1457.9 689.882 L1458.46 689.882 L1459.02 689.882 L1459.58 689.882 L1460.14 689.882 L1460.7 689.882 L1461.25 689.882 L1461.81 689.882 L1462.37 689.882 L1462.93 689.882 L1463.49 689.882 L1464.05 689.882 L1464.61 689.882 L1465.17 689.882 L1465.73 689.882 L1466.29 689.882 L1466.85 689.882 L1467.41 689.882 L1467.97 689.882 L1468.52 689.882 L1469.08 689.882 L1469.64 689.882 L1470.2 689.882 L1470.76 689.882 L1471.32 689.882 L1471.88 689.882 L1472.44 689.882 L1473 689.882 L1473.56 689.882 L1474.12 689.882 L1474.68 689.882 L1475.24 689.882 L1475.79 689.882 L1476.35 689.882 L1476.91 689.882 L1477.47 689.882 L1478.03 689.882 L1478.59 689.882 L1479.15 689.882 L1479.71 689.882 L1480.27 689.882 L1480.83 689.882 L1481.39 689.882 L1481.95 689.882 L1482.51 689.882 L1483.07 689.882 L1483.62 689.882 L1484.18 689.882 L1484.74 689.882 L1485.3 689.882 L1485.86 689.882 L1486.42 689.882 L1486.98 689.882 L1487.54 689.882 L1488.1 689.882 L1488.66 689.882 L1489.22 689.882 L1489.78 689.882 L1490.34 689.882 L1490.89 689.882 L1491.45 689.882 L1492.01 689.882 L1492.57 689.882 L1493.13 689.882 L1493.69 689.882 L1494.25 689.882 L1494.81 689.882 L1495.37 689.882 L1495.93 689.882 L1496.49 689.882 L1497.05 689.882 L1497.61 689.882 L1498.16 689.882 L1498.72 689.882 L1499.28 689.882 L1499.84 689.882 L1500.4 689.882 L1500.96 689.882 L1501.52 689.882 L1502.08 689.882 L1502.64 689.882 L1503.2 689.882 L1503.76 689.882 L1504.32 689.882 L1504.88 689.882 L1505.44 689.882 L1505.99 689.882 L1506.55 689.882 L1507.11 689.882 L1507.67 689.882 L1508.23 689.882 L1508.79 689.882 L1509.35 689.882 L1509.91 689.882 L1510.47 689.882 L1511.03 689.882 L1511.59 689.882 L1512.15 689.882 L1512.71 689.882 L1513.26 689.882 L1513.82 689.882 L1514.38 689.882 L1514.94 689.882 L1515.5 689.882 L1516.06 689.882 L1516.62 689.882 L1517.18 689.882 L1517.74 689.882 L1518.3 689.882 L1518.86 689.882 L1519.42 689.882 L1519.98 689.882 L1520.53 689.882 L1521.09 689.882 L1521.65 689.882 L1522.21 689.882 L1522.77 689.882 L1523.33 689.882 L1523.89 689.882 L1524.45 689.882 L1525.01 689.882 L1525.57 689.882 L1526.13 689.882 L1526.69 689.882 L1527.25 689.882 L1527.81 689.882 L1528.36 689.882 L1528.92 689.882 L1529.48 689.882 L1530.04 689.882 L1530.6 689.882 L1531.16 689.882 L1531.72 689.882 L1532.28 689.882 L1532.84 689.882 L1533.4 689.882 L1533.96 689.882 L1534.52 689.882 L1535.08 689.882 L1535.63 689.882 L1536.19 689.882 L1536.75 689.882 L1537.31 689.882 L1537.87 689.882 L1538.43 689.882 L1538.99 689.882 L1539.55 689.882 L1540.11 689.882 L1540.67 689.882 L1541.23 689.882 L1541.79 689.882 L1542.35 689.882 L1542.9 689.882 L1543.46 689.882 L1544.02 689.882 L1544.58 689.882 L1545.14 689.882 L1545.7 689.882 L1546.26 689.882 L1546.82 689.882 L1547.38 689.882 L1547.94 689.882 L1548.5 689.882 L1549.06 689.882 L1549.62 689.882 L1550.18 689.882 L1550.73 689.882 L1551.29 689.882 L1551.85 689.882 L1552.41 689.882 L1552.97 689.882 L1553.53 689.882 L1554.09 689.882 L1554.65 689.882 L1555.21 689.882 L1555.77 689.882 L1556.33 689.882 L1556.89 689.882 L1557.45 689.882 L1558 689.882 L1558.56 689.882 L1559.12 689.882 L1559.68 689.882 L1560.24 689.882 L1560.8 689.882 L1561.36 689.882 L1561.92 689.882 L1562.48 689.882 L1563.04 689.882 L1563.6 689.882 L1564.16 689.882 L1564.72 689.882 L1565.28 689.882 L1565.83 689.882 L1566.39 689.882 L1566.95 689.882 L1567.51 689.882 L1568.07 689.882 L1568.63 689.882 L1569.19 689.882 L1569.75 689.882 L1570.31 689.882 L1570.87 689.882 L1571.43 689.882 L1571.99 689.882 L1572.55 689.882 L1573.1 689.882 L1573.66 689.882 L1574.22 689.882 L1574.78 689.882 L1575.34 689.882 L1575.9 689.882 L1576.46 689.882 L1577.02 689.882 L1577.58 689.882 L1578.14 689.882 L1578.7 689.882 L1579.26 689.882 L1579.82 689.882 L1580.37 689.882 L1580.93 689.882 L1581.49 689.882 L1582.05 689.882 L1582.61 689.882 L1583.17 689.882 L1583.73 689.882 L1584.29 689.882 L1584.85 689.882 L1585.41 689.882 L1585.97 689.882 L1586.53 689.882 L1587.09 689.882 L1587.65 689.882 L1588.2 689.882 L1588.76 689.882 L1589.32 689.882 L1589.88 689.882 L1590.44 689.882 L1591 689.882 L1591.56 689.882 L1592.12 689.882 L1592.68 689.882 L1593.24 689.882 L1593.8 689.882 L1594.36 689.882 L1594.92 689.882 L1595.47 689.882 L1596.03 689.882 L1596.59 689.882 L1597.15 689.882 L1597.71 689.882 L1598.27 689.882 L1598.83 689.882 L1599.39 689.882 L1599.95 689.882 L1600.51 689.882 L1601.07 689.882 L1601.63 689.882 L1602.19 689.882 L1602.74 689.882 L1603.3 689.882 L1603.86 689.882 L1604.42 689.882 L1604.98 689.882 L1605.54 689.882 L1606.1 689.882 L1606.66 689.882 L1607.22 689.882 L1607.78 689.882 L1608.34 689.882 L1608.9 689.882 L1609.46 689.882 L1610.02 689.882 L1610.57 689.882 L1611.13 689.882 L1611.69 689.882 L1612.25 689.882 L1612.81 689.882 L1613.37 689.882 L1613.93 689.882 L1614.49 689.882 L1615.05 689.882 L1615.61 689.882 L1616.17 689.882 L1616.73 689.882 L1617.29 689.882 L1617.84 689.882 L1618.4 689.882 L1618.96 689.882 L1619.52 689.882 L1620.08 689.882 L1620.64 689.882 L1621.2 689.882 L1621.76 689.882 L1622.32 689.882 L1622.88 689.882 L1623.44 689.882 L1624 689.882 L1624.56 689.882 L1625.11 689.882 L1625.67 689.882 L1626.23 689.882 L1626.79 689.882 L1627.35 689.882 L1627.91 689.882 L1628.47 689.882 L1629.03 689.882 L1629.59 689.882 L1630.15 689.882 L1630.71 689.882 L1631.27 689.882 L1631.83 689.882 L1632.39 689.882 L1632.94 689.882 L1633.5 689.882 L1634.06 689.882 L1634.62 689.882 L1635.18 689.882 L1635.74 689.882 L1636.3 689.882 L1636.86 689.882 L1637.42 689.882 L1637.98 689.882 L1638.54 689.882 L1639.1 689.882 L1639.66 689.882 L1640.21 689.882 L1640.77 689.882 L1641.33 689.882 L1641.89 689.882 L1642.45 689.882 L1643.01 689.882 L1643.57 689.882 L1644.13 689.882 L1644.69 689.882 L1645.25 689.882 L1645.81 689.882 L1646.37 689.882 L1646.93 689.882 L1647.48 689.882 L1648.04 689.882 L1648.6 689.882 L1649.16 689.882 L1649.72 689.882 L1650.28 689.882 L1650.84 689.882 L1651.4 689.882 L1651.96 689.882 L1652.52 689.882 L1653.08 689.882 L1653.64 689.882 L1654.2 689.882 L1654.76 689.882 L1655.31 689.882 L1655.87 689.882 L1656.43 689.882 L1656.99 689.882 L1657.55 689.882 L1658.11 689.882 L1658.67 689.882 L1659.23 689.882 L1659.79 689.882 L1660.35 689.882 L1660.91 689.882 L1661.47 689.882 L1662.03 689.882 L1662.58 689.882 L1663.14 689.882 L1663.7 689.882 L1664.26 689.882 L1664.82 689.882 L1665.38 689.882 L1665.94 689.882 L1666.5 689.882 L1667.06 689.882 L1667.62 689.882 L1668.18 689.882 L1668.74 689.882 L1669.3 689.882 L1669.85 689.882 L1670.41 689.882 L1670.97 689.882 L1671.53 689.882 L1672.09 689.882 L1672.65 689.882 L1673.21 689.882 L1673.77 689.882 L1674.33 689.882 L1674.89 689.882 L1675.45 689.882 L1676.01 689.882 L1676.57 689.882 L1677.13 689.882 L1677.68 689.882 L1678.24 689.882 L1678.8 689.882 L1679.36 689.882 L1679.92 689.882 L1680.48 689.882 L1681.04 689.882 L1681.6 689.882 L1682.16 689.882 L1682.72 689.882 L1683.28 689.882 L1683.84 689.882 L1684.4 689.882 L1684.95 689.882 L1685.51 689.882 L1686.07 689.882 L1686.63 689.882 L1687.19 689.882 L1687.75 689.882 L1688.31 689.882 L1688.87 689.882 L1689.43 689.882 L1689.99 689.882 L1690.55 689.882 L1691.11 689.882 L1691.67 689.882 L1692.23 689.882 L1692.78 689.882 L1693.34 689.882 L1693.9 689.882 L1694.46 689.882 L1695.02 689.882 L1695.58 689.882 L1696.14 689.882 L1696.7 689.882 L1697.26 689.882 L1697.82 689.882 L1698.38 689.882 L1698.94 689.882 L1699.5 689.882 L1700.05 689.882 L1700.61 689.882 L1701.17 689.882 L1701.73 689.882 L1702.29 689.882 L1702.85 689.882 L1703.41 689.882 L1703.97 689.882 L1704.53 689.882 L1705.09 689.882 L1705.65 689.882 L1706.21 689.882 L1706.77 689.882 L1707.32 689.882 L1707.88 689.882 L1708.44 689.882 L1709 689.882 L1709.56 689.882 L1710.12 689.882 L1710.68 689.882 L1711.24 689.882 L1711.8 689.882 L1712.36 689.882 L1712.92 689.882 L1713.48 689.882 L1714.04 689.882 L1714.6 689.882 L1715.15 689.882 L1715.71 689.882 L1716.27 689.882 L1716.83 689.882 L1717.39 689.882 L1717.95 689.882 L1718.51 689.882 L1719.07 689.882 L1719.63 689.882 L1720.19 689.882 L1720.75 689.882 L1721.31 689.882 L1721.87 689.882 L1722.42 689.882 L1722.98 689.882 L1723.54 689.882 L1724.1 689.882 L1724.66 689.882 L1725.22 689.882 L1725.78 689.882 L1726.34 689.882 L1726.9 689.882 L1727.46 689.882 L1728.02 689.882 L1728.58 689.882 L1729.14 689.882 L1729.69 689.882 L1730.25 689.882 L1730.81 689.882 L1731.37 689.882 L1731.93 689.882 L1732.49 689.882 L1733.05 689.882 L1733.61 689.882 L1734.17 689.882 L1734.73 689.882 L1735.29 689.882 L1735.85 689.882 L1736.41 689.882 L1736.97 689.882 L1737.52 689.882 L1738.08 689.882 L1738.64 689.882 L1739.2 689.882 L1739.76 689.882 L1740.32 689.882 L1740.88 689.882 L1741.44 689.882 L1742 689.882 L1742.56 689.882 L1743.12 689.882 L1743.68 689.882 L1744.24 689.882 L1744.79 689.882 L1745.35 689.882 L1745.91 689.882 L1746.47 689.882 L1747.03 689.882 L1747.59 689.882 L1748.15 689.882 L1748.71 689.882 L1749.27 689.882 L1749.83 689.882 L1750.39 689.882 L1750.95 689.882 L1751.51 689.882 L1752.06 689.882 L1752.62 689.882 L1753.18 689.882 L1753.74 689.882 L1754.3 689.882 L1754.86 689.882 L1755.42 689.882 L1755.98 689.882 L1756.54 689.882 L1757.1 689.882 L1757.66 689.882 L1758.22 689.882 L1758.78 689.882 L1759.34 689.882 L1759.89 689.882 L1760.45 689.882 L1761.01 689.882 L1761.57 689.882 L1762.13 689.882 L1762.69 689.882 L1763.25 689.882 L1763.81 689.882 L1764.37 689.882 L1764.93 689.882 L1765.49 689.882 L1766.05 689.882 L1766.61 689.882 L1767.16 689.882 L1767.72 689.882 L1768.28 689.882 L1768.84 689.882 L1769.4 689.882 L1769.96 689.882 L1770.52 689.882 L1771.08 689.882 L1771.64 689.882 L1772.2 689.882 L1772.76 689.882 L1773.32 689.882 L1773.88 689.882 L1774.43 689.882 L1774.99 689.882 L1775.55 689.882 L1776.11 689.882 L1776.67 689.882 L1777.23 689.882 L1777.79 689.882 L1778.35 689.882 L1778.91 689.882 L1779.47 689.882 L1780.03 689.882 L1780.59 689.882 L1781.15 689.882 L1781.71 689.882 L1782.26 689.882 L1782.82 689.882 L1783.38 689.882 L1783.94 689.882 L1784.5 689.882 L1785.06 689.882 L1785.62 689.882 L1786.18 689.882 L1786.74 689.882 L1787.3 689.882 L1787.86 689.882 L1788.42 689.882 L1788.98 689.882 L1789.53 689.882 L1790.09 689.882 L1790.65 689.882 L1791.21 689.882 L1791.77 689.882 L1792.33 689.882 L1792.89 689.882 L1793.45 689.882 L1794.01 689.882 L1794.57 689.882 L1795.13 689.882 L1795.69 689.882 L1796.25 689.882 L1796.8 689.882 L1797.36 689.882 L1797.92 689.882 L1798.48 689.882 L1799.04 689.882 L1799.6 689.882 L1800.16 689.882 L1800.72 689.882 L1801.28 689.882 L1801.84 689.882 L1802.4 689.882 L1802.96 689.882 L1803.52 689.882 L1804.08 689.882 L1804.63 689.882 L1805.19 689.882 L1805.75 689.882 L1806.31 689.882 L1806.87 689.882 L1807.43 689.882 L1807.99 689.882 L1808.55 689.882 L1809.11 689.882 L1809.67 689.882 L1810.23 689.882 L1810.79 689.882 L1811.35 689.882 L1811.9 689.882 L1812.46 689.882 L1813.02 689.882 L1813.58 689.882 L1814.14 689.882 L1814.7 689.882 L1815.26 689.882 L1815.82 689.882 L1816.38 689.882 L1816.94 689.882 L1817.5 689.882 L1818.06 689.882 L1818.62 689.882 L1819.18 689.882 L1819.73 689.882 L1820.29 689.882 L1820.85 689.882 L1821.41 689.882 L1821.97 689.882 L1822.53 689.882 L1823.09 689.882 L1823.65 689.882 L1824.21 689.882 L1824.77 689.882 L1825.33 689.882 L1825.89 689.882 L1826.45 689.882 L1827 689.882 L1827.56 689.882 L1828.12 689.882 L1828.68 689.882 L1829.24 689.882 L1829.8 689.882 L1830.36 689.882 L1830.92 689.882 L1831.48 689.882 L1832.04 689.882 L1832.6 689.882 L1833.16 689.882 L1833.72 689.882 L1834.27 689.882 L1834.83 689.882 L1835.39 689.882 L1835.95 689.882 L1836.51 689.882 L1837.07 689.882 L1837.63 689.882 L1838.19 689.882 L1838.19 681.633 L1837.63 681.633 L1837.07 681.633 L1836.51 681.633 L1835.95 681.633 L1835.39 681.633 L1834.83 681.633 L1834.27 681.633 L1833.72 681.633 L1833.16 681.633 L1832.6 681.633 L1832.04 681.633 L1831.48 681.633 L1830.92 681.633 L1830.36 681.633 L1829.8 681.633 L1829.24 681.633 L1828.68 681.633 L1828.12 681.633 L1827.56 681.633 L1827 681.633 L1826.45 681.633 L1825.89 681.633 L1825.33 681.633 L1824.77 681.633 L1824.21 681.633 L1823.65 681.633 L1823.09 681.633 L1822.53 681.633 L1821.97 681.633 L1821.41 681.633 L1820.85 681.633 L1820.29 681.633 L1819.73 681.633 L1819.18 681.633 L1818.62 681.633 L1818.06 681.633 L1817.5 681.633 L1816.94 681.633 L1816.38 681.633 L1815.82 681.633 L1815.26 681.633 L1814.7 681.633 L1814.14 681.633 L1813.58 681.633 L1813.02 681.633 L1812.46 681.633 L1811.9 681.633 L1811.35 681.633 L1810.79 681.633 L1810.23 681.633 L1809.67 681.633 L1809.11 681.633 L1808.55 681.633 L1807.99 681.633 L1807.43 681.633 L1806.87 681.633 L1806.31 681.633 L1805.75 681.633 L1805.19 681.633 L1804.63 681.633 L1804.08 681.633 L1803.52 681.633 L1802.96 681.633 L1802.4 681.633 L1801.84 681.633 L1801.28 681.633 L1800.72 681.633 L1800.16 681.633 L1799.6 681.633 L1799.04 681.633 L1798.48 681.633 L1797.92 681.633 L1797.36 681.633 L1796.8 681.633 L1796.25 681.633 L1795.69 681.633 L1795.13 681.633 L1794.57 681.633 L1794.01 681.633 L1793.45 681.633 L1792.89 681.633 L1792.33 681.633 L1791.77 681.633 L1791.21 681.633 L1790.65 681.633 L1790.09 681.633 L1789.53 681.633 L1788.98 681.633 L1788.42 681.633 L1787.86 681.633 L1787.3 681.633 L1786.74 681.633 L1786.18 681.633 L1785.62 681.633 L1785.06 681.633 L1784.5 681.633 L1783.94 681.633 L1783.38 681.633 L1782.82 681.633 L1782.26 681.633 L1781.71 681.633 L1781.15 681.633 L1780.59 681.633 L1780.03 681.633 L1779.47 681.633 L1778.91 681.633 L1778.35 681.633 L1777.79 681.633 L1777.23 681.633 L1776.67 681.633 L1776.11 681.633 L1775.55 681.633 L1774.99 681.633 L1774.43 681.633 L1773.88 681.633 L1773.32 681.633 L1772.76 681.633 L1772.2 681.633 L1771.64 681.633 L1771.08 681.633 L1770.52 681.633 L1769.96 681.633 L1769.4 681.633 L1768.84 681.633 L1768.28 681.633 L1767.72 681.633 L1767.16 681.633 L1766.61 681.633 L1766.05 681.633 L1765.49 681.633 L1764.93 681.633 L1764.37 681.633 L1763.81 681.633 L1763.25 681.633 L1762.69 681.633 L1762.13 681.633 L1761.57 681.633 L1761.01 681.633 L1760.45 681.633 L1759.89 681.633 L1759.34 681.633 L1758.78 681.633 L1758.22 681.633 L1757.66 681.633 L1757.1 681.633 L1756.54 681.633 L1755.98 681.633 L1755.42 681.633 L1754.86 681.633 L1754.3 681.633 L1753.74 681.633 L1753.18 681.633 L1752.62 681.633 L1752.06 681.633 L1751.51 681.633 L1750.95 681.633 L1750.39 681.633 L1749.83 681.633 L1749.27 681.633 L1748.71 681.633 L1748.15 681.633 L1747.59 681.633 L1747.03 681.633 L1746.47 681.633 L1745.91 681.633 L1745.35 681.633 L1744.79 681.633 L1744.24 681.633 L1743.68 681.633 L1743.12 681.633 L1742.56 681.633 L1742 681.633 L1741.44 681.633 L1740.88 681.633 L1740.32 681.633 L1739.76 681.633 L1739.2 681.633 L1738.64 681.633 L1738.08 681.633 L1737.52 681.633 L1736.97 681.633 L1736.41 681.633 L1735.85 681.633 L1735.29 681.633 L1734.73 681.633 L1734.17 681.633 L1733.61 681.633 L1733.05 681.633 L1732.49 681.633 L1731.93 681.633 L1731.37 681.633 L1730.81 681.633 L1730.25 681.633 L1729.69 681.633 L1729.14 681.633 L1728.58 681.633 L1728.02 681.633 L1727.46 681.633 L1726.9 681.633 L1726.34 681.633 L1725.78 681.633 L1725.22 681.633 L1724.66 681.633 L1724.1 681.633 L1723.54 681.633 L1722.98 681.633 L1722.42 681.633 L1721.87 681.633 L1721.31 681.633 L1720.75 681.633 L1720.19 681.633 L1719.63 681.633 L1719.07 681.633 L1718.51 681.633 L1717.95 681.633 L1717.39 681.633 L1716.83 681.633 L1716.27 681.633 L1715.71 681.633 L1715.15 681.633 L1714.6 681.633 L1714.04 681.633 L1713.48 681.633 L1712.92 681.633 L1712.36 681.633 L1711.8 681.633 L1711.24 681.633 L1710.68 681.633 L1710.12 681.633 L1709.56 681.633 L1709 681.633 L1708.44 681.633 L1707.88 681.633 L1707.32 681.633 L1706.77 681.633 L1706.21 681.633 L1705.65 681.633 L1705.09 681.633 L1704.53 681.633 L1703.97 681.633 L1703.41 681.633 L1702.85 681.633 L1702.29 681.633 L1701.73 681.633 L1701.17 681.633 L1700.61 681.633 L1700.05 681.633 L1699.5 681.633 L1698.94 681.633 L1698.38 681.633 L1697.82 681.633 L1697.26 681.633 L1696.7 681.633 L1696.14 681.633 L1695.58 681.633 L1695.02 681.633 L1694.46 681.633 L1693.9 681.633 L1693.34 681.633 L1692.78 681.633 L1692.23 681.633 L1691.67 681.633 L1691.11 681.633 L1690.55 681.633 L1689.99 681.633 L1689.43 681.633 L1688.87 681.633 L1688.31 681.633 L1687.75 681.633 L1687.19 681.633 L1686.63 681.633 L1686.07 681.633 L1685.51 681.633 L1684.95 681.633 L1684.4 681.633 L1683.84 681.633 L1683.28 681.633 L1682.72 681.633 L1682.16 681.633 L1681.6 681.633 L1681.04 681.633 L1680.48 681.633 L1679.92 681.633 L1679.36 681.633 L1678.8 681.633 L1678.24 681.633 L1677.68 681.633 L1677.13 681.633 L1676.57 681.633 L1676.01 681.633 L1675.45 681.633 L1674.89 681.633 L1674.33 681.633 L1673.77 681.633 L1673.21 681.633 L1672.65 681.633 L1672.09 681.633 L1671.53 681.633 L1670.97 681.633 L1670.41 681.633 L1669.85 681.633 L1669.3 681.633 L1668.74 681.633 L1668.18 681.633 L1667.62 681.633 L1667.06 681.633 L1666.5 681.633 L1665.94 681.633 L1665.38 681.633 L1664.82 681.633 L1664.26 681.633 L1663.7 681.633 L1663.14 681.633 L1662.58 681.633 L1662.03 681.633 L1661.47 681.633 L1660.91 681.633 L1660.35 681.633 L1659.79 681.633 L1659.23 681.633 L1658.67 681.633 L1658.11 681.633 L1657.55 681.633 L1656.99 681.633 L1656.43 681.633 L1655.87 681.633 L1655.31 681.633 L1654.76 681.633 L1654.2 681.633 L1653.64 681.633 L1653.08 681.633 L1652.52 681.633 L1651.96 681.633 L1651.4 681.633 L1650.84 681.633 L1650.28 681.633 L1649.72 681.633 L1649.16 681.633 L1648.6 681.633 L1648.04 681.633 L1647.48 681.633 L1646.93 681.633 L1646.37 681.633 L1645.81 681.633 L1645.25 681.633 L1644.69 681.633 L1644.13 681.633 L1643.57 681.633 L1643.01 681.633 L1642.45 681.633 L1641.89 681.633 L1641.33 681.633 L1640.77 681.633 L1640.21 681.633 L1639.66 681.633 L1639.1 681.633 L1638.54 681.633 L1637.98 681.633 L1637.42 681.633 L1636.86 681.633 L1636.3 681.633 L1635.74 681.633 L1635.18 681.633 L1634.62 681.633 L1634.06 681.633 L1633.5 681.633 L1632.94 681.633 L1632.39 681.633 L1631.83 681.633 L1631.27 681.633 L1630.71 681.633 L1630.15 681.633 L1629.59 681.633 L1629.03 681.633 L1628.47 681.633 L1627.91 681.633 L1627.35 681.633 L1626.79 681.633 L1626.23 681.633 L1625.67 681.633 L1625.11 681.633 L1624.56 681.633 L1624 681.633 L1623.44 681.633 L1622.88 681.633 L1622.32 681.633 L1621.76 681.633 L1621.2 681.633 L1620.64 681.633 L1620.08 681.633 L1619.52 681.633 L1618.96 681.633 L1618.4 681.633 L1617.84 681.633 L1617.29 681.633 L1616.73 681.633 L1616.17 681.633 L1615.61 681.633 L1615.05 681.633 L1614.49 681.633 L1613.93 681.633 L1613.37 681.633 L1612.81 681.633 L1612.25 681.633 L1611.69 681.633 L1611.13 681.633 L1610.57 681.633 L1610.02 681.633 L1609.46 681.633 L1608.9 681.633 L1608.34 681.633 L1607.78 681.633 L1607.22 681.633 L1606.66 681.633 L1606.1 681.633 L1605.54 681.633 L1604.98 681.633 L1604.42 681.633 L1603.86 681.633 L1603.3 681.633 L1602.74 681.633 L1602.19 681.633 L1601.63 681.633 L1601.07 681.633 L1600.51 681.633 L1599.95 681.633 L1599.39 681.633 L1598.83 681.633 L1598.27 681.633 L1597.71 681.633 L1597.15 681.633 L1596.59 681.633 L1596.03 681.633 L1595.47 681.633 L1594.92 681.633 L1594.36 681.633 L1593.8 681.633 L1593.24 681.633 L1592.68 681.633 L1592.12 681.633 L1591.56 681.633 L1591 681.633 L1590.44 681.633 L1589.88 681.633 L1589.32 681.633 L1588.76 681.633 L1588.2 681.633 L1587.65 681.633 L1587.09 681.633 L1586.53 681.633 L1585.97 681.633 L1585.41 681.633 L1584.85 681.633 L1584.29 681.633 L1583.73 681.633 L1583.17 681.633 L1582.61 681.633 L1582.05 681.633 L1581.49 681.633 L1580.93 681.633 L1580.37 681.633 L1579.82 681.633 L1579.26 681.633 L1578.7 681.633 L1578.14 681.633 L1577.58 681.633 L1577.02 681.633 L1576.46 681.633 L1575.9 681.633 L1575.34 681.633 L1574.78 681.633 L1574.22 681.633 L1573.66 681.633 L1573.1 681.633 L1572.55 681.633 L1571.99 681.633 L1571.43 681.633 L1570.87 681.633 L1570.31 681.633 L1569.75 681.633 L1569.19 681.633 L1568.63 681.633 L1568.07 681.633 L1567.51 681.633 L1566.95 681.633 L1566.39 681.633 L1565.83 681.633 L1565.28 681.633 L1564.72 681.633 L1564.16 681.633 L1563.6 681.633 L1563.04 681.633 L1562.48 681.633 L1561.92 681.633 L1561.36 681.633 L1560.8 681.633 L1560.24 681.633 L1559.68 681.633 L1559.12 681.633 L1558.56 681.633 L1558 681.633 L1557.45 681.633 L1556.89 681.633 L1556.33 681.633 L1555.77 681.633 L1555.21 681.633 L1554.65 681.633 L1554.09 681.633 L1553.53 681.633 L1552.97 681.633 L1552.41 681.633 L1551.85 681.633 L1551.29 681.633 L1550.73 681.633 L1550.18 681.633 L1549.62 681.633 L1549.06 681.633 L1548.5 681.633 L1547.94 681.633 L1547.38 681.633 L1546.82 681.633 L1546.26 681.633 L1545.7 681.633 L1545.14 681.633 L1544.58 681.633 L1544.02 681.633 L1543.46 681.633 L1542.9 681.633 L1542.35 681.633 L1541.79 681.633 L1541.23 681.633 L1540.67 681.633 L1540.11 681.633 L1539.55 681.633 L1538.99 681.633 L1538.43 681.633 L1537.87 681.633 L1537.31 681.633 L1536.75 681.633 L1536.19 681.633 L1535.63 681.633 L1535.08 681.633 L1534.52 681.633 L1533.96 681.633 L1533.4 681.633 L1532.84 681.633 L1532.28 681.633 L1531.72 681.633 L1531.16 681.633 L1530.6 681.633 L1530.04 681.633 L1529.48 681.633 L1528.92 681.633 L1528.36 681.633 L1527.81 681.633 L1527.25 681.633 L1526.69 681.633 L1526.13 681.633 L1525.57 681.633 L1525.01 681.633 L1524.45 681.633 L1523.89 681.633 L1523.33 681.633 L1522.77 681.633 L1522.21 681.633 L1521.65 681.633 L1521.09 681.633 L1520.53 681.633 L1519.98 681.633 L1519.42 681.633 L1518.86 681.633 L1518.3 681.633 L1517.74 681.633 L1517.18 681.633 L1516.62 681.633 L1516.06 681.633 L1515.5 681.633 L1514.94 681.633 L1514.38 681.633 L1513.82 681.633 L1513.26 681.633 L1512.71 681.633 L1512.15 681.633 L1511.59 681.633 L1511.03 681.633 L1510.47 681.633 L1509.91 681.633 L1509.35 681.633 L1508.79 681.633 L1508.23 681.633 L1507.67 681.633 L1507.11 681.633 L1506.55 681.633 L1505.99 681.633 L1505.44 681.633 L1504.88 681.633 L1504.32 681.633 L1503.76 681.633 L1503.2 681.633 L1502.64 681.633 L1502.08 681.633 L1501.52 681.633 L1500.96 681.633 L1500.4 681.633 L1499.84 681.633 L1499.28 681.633 L1498.72 681.633 L1498.16 681.633 L1497.61 681.633 L1497.05 681.633 L1496.49 681.633 L1495.93 681.633 L1495.37 681.633 L1494.81 681.633 L1494.25 681.633 L1493.69 681.633 L1493.13 681.633 L1492.57 681.633 L1492.01 681.633 L1491.45 681.633 L1490.89 681.633 L1490.34 681.633 L1489.78 681.633 L1489.22 681.633 L1488.66 681.633 L1488.1 681.633 L1487.54 681.633 L1486.98 681.633 L1486.42 681.633 L1485.86 681.633 L1485.3 681.633 L1484.74 681.633 L1484.18 681.633 L1483.62 681.633 L1483.07 681.633 L1482.51 681.633 L1481.95 681.633 L1481.39 681.633 L1480.83 681.633 L1480.27 681.633 L1479.71 681.633 L1479.15 681.633 L1478.59 681.633 L1478.03 681.633 L1477.47 681.633 L1476.91 681.633 L1476.35 681.633 L1475.79 681.633 L1475.24 681.633 L1474.68 681.633 L1474.12 681.633 L1473.56 681.633 L1473 681.633 L1472.44 681.633 L1471.88 681.633 L1471.32 681.633 L1470.76 681.633 L1470.2 681.633 L1469.64 681.633 L1469.08 681.633 L1468.52 681.633 L1467.97 681.633 L1467.41 681.633 L1466.85 681.633 L1466.29 681.633 L1465.73 681.633 L1465.17 681.633 L1464.61 681.633 L1464.05 681.633 L1463.49 681.633 L1462.93 681.633 L1462.37 681.633 L1461.81 681.633 L1461.25 681.633 L1460.7 681.633 L1460.14 681.633 L1459.58 681.633 L1459.02 681.633 L1458.46 681.633 L1457.9 681.633 L1457.34 681.633 L1456.78 681.633 L1456.22 681.633 L1455.66 681.633 L1455.1 681.633 L1454.54 681.633 L1453.98 681.633 L1453.42 681.633 L1452.87 681.633 L1452.31 681.633 L1451.75 681.633 L1451.19 681.633 L1450.63 681.633 L1450.07 681.633 L1449.51 681.633 L1448.95 681.633 L1448.39 681.633 L1447.83 681.633 L1447.27 681.633 L1446.71 681.633 L1446.15 681.633 L1445.6 681.633 L1445.04 681.633 L1444.48 681.633 L1443.92 681.633 L1443.36 681.633 L1442.8 681.633 L1442.24 681.633 L1441.68 681.633 L1441.12 681.633 L1440.56 681.633 L1440 681.633 L1439.44 681.633 L1438.88 681.633 L1438.33 681.633 L1437.77 681.633 L1437.21 681.633 L1436.65 681.633 L1436.09 681.633 L1435.53 681.633 L1434.97 681.633 L1434.41 681.633 L1433.85 681.633 L1433.29 681.633 L1432.73 681.633 L1432.17 681.633 L1431.61 681.633 L1431.05 681.633 L1430.5 681.633 L1429.94 681.633 L1429.38 681.633 L1428.82 681.633 L1428.26 681.633 L1427.7 681.633 L1427.14 681.633 L1426.58 681.633 L1426.02 681.633 L1425.46 681.633 L1424.9 681.633 L1424.34 681.633 L1423.78 681.633 L1423.23 681.633 L1422.67 681.633 L1422.11 681.633 L1421.55 681.633 L1420.99 681.633 L1420.43 681.633 L1419.87 681.633 L1419.31 681.633 L1418.75 681.633 L1418.19 681.633 L1417.63 681.633 L1417.07 681.633 L1416.51 681.633 L1415.95 681.633 L1415.4 681.633 L1414.84 681.633 L1414.28 681.633 L1413.72 681.633 L1413.16 681.633 L1412.6 681.633 L1412.04 681.633 L1411.48 681.633 L1410.92 681.633 L1410.36 681.633 L1409.8 681.633 L1409.24 681.633 L1408.68 681.633 L1408.13 681.633 L1407.57 681.633 L1407.01 681.633 L1406.45 681.633 L1405.89 681.633 L1405.33 681.633 L1404.77 681.633 L1404.21 681.633 L1403.65 681.633 L1403.09 681.633 L1402.53 681.633 L1401.97 681.633 L1401.41 681.633 L1400.86 681.633 L1400.3 681.633 L1399.74 681.633 L1399.18 681.633 L1398.62 681.633 L1398.06 681.633 L1397.5 681.633 L1396.94 681.633 L1396.38 681.633 L1395.82 681.633 L1395.26 681.633 L1394.7 681.633 L1394.14 681.633 L1393.58 681.633 L1393.03 681.633 L1392.47 681.633 L1391.91 681.633 L1391.35 681.633 L1390.79 681.633 L1390.23 681.633 L1389.67 681.633 L1389.11 681.633 L1388.55 681.633 L1387.99 681.633 L1387.43 681.633 L1386.87 681.633 L1386.31 681.633 L1385.76 681.633 L1385.2 681.633 L1384.64 681.633 L1384.08 681.633 L1383.52 681.633 L1382.96 681.633 L1382.4 681.633 L1381.84 681.633 L1381.28 681.633 L1380.72 681.633 L1380.16 681.633 L1379.6 681.633 L1379.04 681.633 L1378.49 681.633 L1377.93 681.633 L1377.37 681.633 L1376.81 681.633 L1376.25 681.633 L1375.69 681.633 L1375.13 681.633 L1374.57 681.633 L1374.01 681.633 L1373.45 681.633 L1372.89 681.633 L1372.33 681.633 L1371.77 681.633 L1371.21 681.633 L1370.66 681.633 L1370.1 681.633 L1369.54 681.633 L1368.98 681.633 L1368.42 681.633 L1367.86 681.633 L1367.3 681.633 L1366.74 681.633 L1366.18 681.633 L1365.62 681.633 L1365.06 681.633 L1364.5 681.633 L1363.94 681.633 L1363.39 681.633 L1362.83 681.633 L1362.27 681.633 L1361.71 681.633 L1361.15 681.633 L1360.59 681.633 L1360.03 681.633 L1359.47 681.633 L1358.91 681.633 L1358.35 681.633 L1357.79 681.633 L1357.23 681.633 L1356.67 681.633 L1356.12 681.633 L1355.56 681.633 L1355 681.633 L1354.44 681.633 L1353.88 681.633 L1353.32 681.633 L1352.76 681.633 L1352.2 681.633 L1351.64 681.633 L1351.08 681.633 L1350.52 681.633 L1349.96 681.633 L1349.4 681.633 L1348.84 681.633 L1348.29 681.633 L1347.73 681.633 L1347.17 681.633 L1346.61 681.633 L1346.05 681.633 L1345.49 681.633 L1344.93 681.633 L1344.37 681.633 L1343.81 681.633 L1343.25 681.633 L1342.69 681.633 L1342.13 681.633 L1341.57 681.633 L1341.02 681.633 L1340.46 681.633 L1339.9 681.633 L1339.34 681.633 L1338.78 681.633 L1338.22 681.633 L1337.66 681.633 L1337.1 681.633 L1336.54 681.633 L1335.98 681.633 L1335.42 681.633 L1334.86 681.633 L1334.3 681.633 L1333.75 681.633 L1333.19 681.633 L1332.63 681.633 L1332.07 681.633 L1331.51 681.633 L1330.95 681.633 L1330.39 681.633 L1329.83 681.633 L1329.27 681.633 L1328.71 681.633 L1328.15 681.633 L1327.59 681.633 L1327.03 681.633 L1326.47 681.633 L1325.92 681.633 L1325.36 681.633 L1324.8 681.633 L1324.24 681.633 L1323.68 681.633 L1323.12 681.633 L1322.56 681.633 L1322 681.633 L1321.44 681.633 L1320.88 681.633 L1320.32 681.633 L1319.76 681.633 L1319.2 681.633 L1318.65 681.633 L1318.09 681.633 L1317.53 681.633 L1316.97 681.633 L1316.41 681.633 L1315.85 681.633 L1315.29 681.633 L1314.73 681.633 L1314.17 681.633 L1313.61 681.633 L1313.05 681.633 L1312.49 681.633 L1311.93 681.633 L1311.38 681.633 L1310.82 681.633 L1310.26 681.633 L1309.7 681.633 L1309.14 681.633 L1308.58 681.633 L1308.02 681.633 L1307.46 681.633 L1306.9 681.633 L1306.34 681.633 L1305.78 681.633 L1305.22 681.633 L1304.66 681.633 L1304.1 681.633 L1303.55 681.633 L1302.99 681.633 L1302.43 681.633 L1301.87 681.633 L1301.31 681.633 L1300.75 681.633 L1300.19 681.633 L1299.63 681.633 L1299.07 681.633 L1298.51 681.633 L1297.95 681.633 L1297.39 681.633 L1296.83 681.633 L1296.28 681.633 L1295.72 681.633 L1295.16 681.633 L1294.6 681.633 L1294.04 681.633 L1293.48 681.633 L1292.92 681.633 L1292.36 681.633 L1291.8 681.633 L1291.24 681.633 L1290.68 681.633 L1290.12 681.633 L1289.56 681.633 L1289 681.633 L1288.45 681.633 L1287.89 681.633 L1287.33 681.633 L1286.77 681.633 L1286.21 681.633 L1285.65 681.633 L1285.09 681.633 L1284.53 681.633 L1283.97 681.633 L1283.41 681.633 L1282.85 681.633 L1282.29 681.633 L1281.73 681.633 L1281.18 681.633 L1280.62 681.633 L1280.06 681.633 L1279.5 681.633 L1278.94 681.633 L1278.38 681.633 L1277.82 681.633 L1277.26 681.633 L1276.7 681.633 L1276.14 681.633 L1275.58 681.633 L1275.02 681.633 L1274.46 681.633 L1273.91 681.633 L1273.35 681.633 L1272.79 681.633 L1272.23 681.633 L1271.67 681.633 L1271.11 681.633 L1270.55 681.633 L1269.99 681.633 L1269.43 681.633 L1268.87 681.633 L1268.31 681.633 L1267.75 681.633 L1267.19 681.633 L1266.63 681.633 L1266.08 681.633 L1265.52 681.633 L1264.96 681.633 L1264.4 681.633 L1263.84 681.633 L1263.28 681.633 L1262.72 681.633 L1262.16 681.633 L1261.6 681.633 L1261.04 681.633 L1260.48 681.633 L1259.92 681.633 L1259.36 681.633 L1258.81 681.633 L1258.25 681.633 L1257.69 681.633 L1257.13 681.633 L1256.57 681.633 L1256.01 681.633 L1255.45 681.633 L1254.89 681.633 L1254.33 681.633 L1253.77 681.633 L1253.21 681.633 L1252.65 681.633 L1252.09 681.633 L1251.54 681.633 L1250.98 681.633 L1250.42 681.633 L1249.86 681.633 L1249.3 681.633 L1248.74 681.633 L1248.18 681.633 L1247.62 681.633 L1247.06 681.633 L1246.5 681.633 L1245.94 681.633 L1245.38 681.633 L1244.82 681.633 L1244.26 681.633 L1243.71 681.633 L1243.15 681.633 L1242.59 681.633 L1242.03 681.633 L1241.47 681.633 L1240.91 681.633 L1240.35 681.633 L1239.79 681.633 L1239.23 681.633 L1238.67 681.633 L1238.11 681.633 L1237.55 681.633 L1236.99 681.633 L1236.44 681.633 L1235.88 681.633 L1235.32 681.633 L1234.76 681.633 L1234.2 681.633 L1233.64 681.633 L1233.08 681.633 L1232.52 681.633 L1231.96 681.633 L1231.4 681.633 L1230.84 681.633 L1230.28 681.633 L1229.72 681.633 L1229.17 681.633 L1228.61 681.633 L1228.05 681.633 L1227.49 681.633 L1226.93 681.633 L1226.37 681.633 L1225.81 681.633 L1225.25 681.633 L1224.69 681.633 L1224.13 681.633 L1223.57 681.633 L1223.01 681.633 L1222.45 681.633 L1221.89 681.633 L1221.34 681.633 L1220.78 681.633 L1220.22 681.633 L1219.66 681.633 L1219.1 681.633 L1218.54 681.633 L1217.98 681.633 L1217.42 681.633 L1216.86 681.633 L1216.3 681.633 L1215.74 681.633 L1215.18 681.633 L1214.62 681.633 L1214.07 681.633 L1213.51 681.633 L1212.95 681.633 L1212.39 681.633 L1211.83 681.633 L1211.27 681.633 L1210.71 681.633 L1210.15 681.633 L1209.59 681.633 L1209.03 681.633 L1208.47 681.633 L1207.91 681.633 L1207.35 681.633 L1206.8 681.633 L1206.24 681.633 L1205.68 681.633 L1205.12 681.633 L1204.56 681.633 L1204 681.633 L1203.44 681.633 L1202.88 681.633 L1202.32 681.633 L1201.76 681.633 L1201.2 681.633 L1200.64 681.633 L1200.08 681.633 L1199.52 681.633 L1198.97 681.633 L1198.41 681.633 L1197.85 681.633 L1197.29 681.633 L1196.73 681.633 L1196.17 681.633 L1195.61 681.633 L1195.05 681.633 L1194.49 681.633 L1193.93 681.633 L1193.37 681.633 L1192.81 681.633 L1192.25 681.633 L1191.7 681.633 L1191.14 681.633 L1190.58 681.633 L1190.02 681.633 L1189.46 681.633 L1188.9 681.633 L1188.34 681.633 L1187.78 681.633 L1187.22 681.633 L1186.66 681.633 L1186.1 681.633 L1185.54 681.633 L1184.98 681.633 L1184.43 681.633 L1183.87 681.633 L1183.31 681.633 L1182.75 681.633 L1182.19 681.633 L1181.63 681.633 L1181.07 681.633 L1180.51 681.633 L1179.95 681.633 L1179.39 681.633 L1178.83 681.633 L1178.27 681.633 L1177.71 681.633 L1177.15 681.633 L1176.6 681.633 L1176.04 681.633 L1175.48 681.633 L1174.92 681.633 L1174.36 681.633 L1173.8 681.633 L1173.24 681.633 L1172.68 681.633 L1172.12 681.633 L1171.56 681.633 L1171 681.633 L1170.44 681.633 L1169.88 681.633 L1169.33 681.633 L1168.77 681.633 L1168.21 681.633 L1167.65 681.633 L1167.09 681.633 L1166.53 681.633 L1165.97 681.633 L1165.41 681.633 L1164.85 681.633 L1164.29 681.633 L1163.73 681.633 L1163.17 681.633 L1162.61 681.633 L1162.05 681.633 L1161.5 681.633 L1160.94 681.633 L1160.38 681.633 L1159.82 681.633 L1159.26 681.633 L1158.7 681.633 L1158.14 681.633 L1157.58 681.633 L1157.02 681.633 L1156.46 681.633 L1155.9 681.633 L1155.34 681.633 L1154.78 681.633 L1154.23 681.633 L1153.67 681.633 L1153.11 681.633 L1152.55 681.633 L1151.99 681.633 L1151.43 681.633 L1150.87 681.633 L1150.31 681.633 L1149.75 681.633 L1149.19 681.633 L1148.63 681.633 L1148.07 681.633 L1147.51 681.633 L1146.96 681.633 L1146.4 681.633 L1145.84 681.633 L1145.28 681.633 L1144.72 681.633 L1144.16 681.633 L1143.6 681.633 L1143.04 681.633 L1142.48 681.633 L1141.92 681.633 L1141.36 681.633 L1140.8 681.633 L1140.24 681.633 L1139.68 681.633 L1139.13 681.633 L1138.57 681.633 L1138.01 681.633 L1137.45 681.633 L1136.89 681.633 L1136.33 681.633 L1135.77 681.633 L1135.21 681.633 L1134.65 681.633 L1134.09 681.633 L1133.53 681.633 L1132.97 681.633 L1132.41 681.633 L1131.86 681.633 L1131.3 681.633 L1130.74 681.633 L1130.18 681.633 L1129.62 681.633 L1129.06 681.633 L1128.5 681.633 L1127.94 681.633 L1127.38 681.633 L1126.82 681.633 L1126.26 681.633 L1125.7 681.633 L1125.14 681.633 L1124.59 681.633 L1124.03 681.633 L1123.47 681.633 L1122.91 681.633 L1122.35 681.633 L1121.79 681.633 L1121.23 681.633 L1120.67 681.633 L1120.11 681.633 L1119.55 681.633 L1118.99 681.633 L1118.43 681.633 L1117.87 681.633 L1117.31 681.633 L1116.76 681.633 L1116.2 681.633 L1115.64 681.633 L1115.08 681.633 L1114.52 681.633 L1113.96 681.633 L1113.4 681.633 L1112.84 681.633 L1112.28 681.633 L1111.72 681.633 L1111.16 681.633 L1110.6 681.633 L1110.04 681.633 L1109.49 681.633 L1108.93 681.633 L1108.37 681.633 L1107.81 681.633 L1107.25 681.633 L1106.69 681.633 L1106.13 681.633 L1105.57 681.633 L1105.01 681.633 L1104.45 681.633 L1103.89 681.633 L1103.33 681.633 L1102.77 681.633 L1102.22 681.633 L1101.66 681.633 L1101.1 681.633 L1100.54 681.633 L1099.98 681.633 L1099.42 681.633 L1098.86 681.633 L1098.3 681.633 L1097.74 681.633 L1097.18 681.633 L1096.62 681.633 L1096.06 681.633 L1095.5 681.633 L1094.94 681.633 L1094.39 681.633 L1093.83 681.633 L1093.27 681.633 L1092.71 681.633 L1092.15 681.633 L1091.59 681.633 L1091.03 681.633 L1090.47 681.633 L1089.91 681.633 L1089.35 681.633 L1088.79 681.633 L1088.23 681.633 L1087.67 681.633 L1087.12 681.633 L1086.56 681.633 L1086 681.633 L1085.44 681.633 L1084.88 681.633 L1084.32 681.633 L1083.76 681.633 L1083.2 681.633 L1082.64 681.633 L1082.08 681.633 L1081.52 681.633 L1080.96 681.633 L1080.4 681.633 L1079.85 681.633 L1079.29 681.633 L1078.73 681.633 L1078.17 681.633 L1077.61 681.633 L1077.05 681.633 L1076.49 681.633 L1075.93 681.633 L1075.37 681.633 L1074.81 681.633 L1074.25 681.633 L1073.69 681.633 L1073.13 681.633 L1072.57 681.633 L1072.02 681.633 L1071.46 681.633 L1070.9 681.633 L1070.34 681.633 L1069.78 681.633 L1069.22 681.633 L1068.66 681.633 L1068.1 681.633 L1067.54 681.633 L1066.98 681.633 L1066.42 681.633 L1065.86 681.633 L1065.3 681.633 L1064.75 681.633 L1064.19 681.633 L1063.63 681.633 L1063.07 681.633 L1062.51 681.633 L1061.95 681.633 L1061.39 681.633 L1060.83 681.633 L1060.27 681.633 L1059.71 681.633 L1059.15 681.633 L1058.59 681.633 L1058.03 681.633 L1057.48 681.633 L1056.92 681.633 L1056.36 681.633 L1055.8 681.633 L1055.24 681.633 L1054.68 681.633 L1054.12 681.633 L1053.56 681.633 L1053 681.633 L1052.44 681.633 L1051.88 681.633 L1051.32 681.633 L1050.76 681.633 L1050.2 681.633 L1049.65 681.633 L1049.09 681.633 L1048.53 681.633 L1047.97 681.633 L1047.41 681.633 L1046.85 681.633 L1046.29 681.633 L1045.73 681.633 L1045.17 681.633 L1044.61 681.633 L1044.05 681.633 L1043.49 681.633 L1042.93 681.633 L1042.38 681.633 L1041.82 681.633 L1041.26 681.633 L1040.7 681.633 L1040.14 681.633 L1039.58 681.633 L1039.02 681.633 L1038.46 681.633 L1037.9 681.633 L1037.34 681.633 L1036.78 681.633 L1036.22 681.633 L1035.66 681.633 L1035.1 681.633 L1034.55 681.633 L1033.99 681.633 L1033.43 681.633 L1032.87 681.633 L1032.31 681.633 L1031.75 681.633 L1031.19 681.633 L1030.63 681.633 L1030.07 681.633 L1029.51 681.633 L1028.95 681.633 L1028.39 681.633 L1027.83 681.633 L1027.28 681.633 L1026.72 681.633 L1026.16 681.633 L1025.6 681.633 L1025.04 681.633 L1024.48 681.633 L1023.92 681.633 L1023.36 681.633 L1022.8 681.633 L1022.24 681.633 L1021.68 681.633 L1021.12 681.633 L1020.56 681.633 L1020.01 681.633 L1019.45 681.633 L1018.89 681.633 L1018.33 681.633 L1017.77 681.633 L1017.21 681.633 L1016.65 681.633 L1016.09 681.633 L1015.53 681.633 L1014.97 681.633 L1014.41 681.633 L1013.85 681.633 L1013.29 681.633 L1012.73 681.633 L1012.18 681.633 L1011.62 681.633 L1011.06 681.633 L1010.5 681.633 L1009.94 681.633 L1009.38 681.633 L1008.82 681.633 L1008.26 681.633 L1007.7 681.633 L1007.14 681.633 L1006.58 681.633 L1006.02 681.633 L1005.46 681.633 L1004.91 681.633 L1004.35 681.633 L1003.79 681.633 L1003.23 681.633 L1002.67 681.633 L1002.11 681.633 L1001.55 681.633 L1000.99 681.633 L1000.43 681.633 L999.872 681.633 L999.313 681.633 L998.754 681.633 L998.194 681.633 L997.635 681.633 L997.076 681.633 L996.517 681.633 L995.957 681.633 L995.398 681.633 L994.839 681.633 L994.28 681.633 L993.72 681.633 L993.161 681.633 L992.602 681.633 L992.043 681.633 L991.483 681.633 L990.924 681.633 L990.365 681.633 L989.806 681.633 L989.246 681.633 L988.687 681.633 L988.128 681.633 L987.569 681.633 L987.009 681.633 L986.45 681.633 L985.891 681.633 L985.332 681.633 L984.772 681.633 L984.213 681.633 L983.654 681.633 L983.095 681.633 L982.535 681.633 L981.976 681.633 L981.417 681.633 L980.858 681.633 L980.298 681.633 L979.739 681.633 L979.18 681.633 L978.621 681.633 L978.061 681.633 L977.502 681.633 L976.943 681.633 L976.384 681.633 L975.824 681.633 L975.265 681.633 L974.706 681.633 L974.147 681.633 L973.587 681.633 L973.028 681.633 L972.469 681.633 L971.91 681.633 L971.35 681.633 L970.791 681.633 L970.232 681.633 L969.673 681.633 L969.113 681.633 L968.554 681.633 L967.995 681.633 L967.436 681.633 L966.876 681.633 L966.317 681.633 L965.758 681.633 L965.199 681.633 L964.639 681.633 L964.08 681.633 L963.521 681.633 L962.962 681.633 L962.402 681.633 L961.843 681.633 L961.284 681.633 L960.725 681.633 L960.165 681.633 L959.606 681.633 L959.047 681.633 L958.488 681.633 L957.928 681.633 L957.369 681.633 L956.81 681.633 L956.251 681.633 L955.691 681.633 L955.132 681.633 L954.573 681.633 L954.014 681.633 L953.454 681.633 L952.895 681.633 L952.336 681.633 L951.777 681.633 L951.217 681.633 L950.658 681.633 L950.099 681.633 L949.54 681.633 L948.98 681.633 L948.421 681.633 L947.862 681.633 L947.303 681.633 L946.743 681.633 L946.184 681.633 L945.625 681.633 L945.066 681.633 L944.506 681.633 L943.947 681.633 L943.388 681.633 L942.829 681.633 L942.269 681.633 L941.71 681.633 L941.151 681.633 L940.592 681.633 L940.032 681.633 L939.473 681.633 L938.914 681.633 L938.355 681.633 L937.795 681.633 L937.236 681.633 L936.677 681.633 L936.118 681.633 L935.558 681.633 L934.999 681.633 L934.44 681.633 L933.881 681.633 L933.321 681.633 L932.762 681.633 L932.203 681.633 L931.644 681.633 L931.084 681.633 L930.525 681.633 L929.966 681.633 L929.406 681.633 L928.847 681.633 L928.288 681.633 L927.729 681.633 L927.169 681.633 L926.61 681.633 L926.051 681.633 L925.492 681.633 L924.932 681.633 L924.373 681.633 L923.814 681.633 L923.255 681.633 L922.695 681.633 L922.136 681.633 L921.577 681.633 L921.018 681.633 L920.458 681.633 L919.899 681.633 L919.34 681.633 L918.781 681.633 L918.221 681.633 L917.662 681.633 L917.103 681.633 L916.544 681.633 L915.984 681.633 L915.425 681.633 L914.866 681.633 L914.307 681.633 L913.747 681.633 L913.188 681.633 L912.629 681.633 L912.07 681.633 L911.51 681.633 L910.951 681.633 L910.392 681.633 L909.833 681.633 L909.273 681.633 L908.714 681.633 L908.155 681.633 L907.596 681.633 L907.036 681.633 L906.477 681.633 L905.918 681.633 L905.359 681.633 L904.799 681.633 L904.24 681.633 L903.681 681.633 L903.122 681.633 L902.562 681.633 L902.003 681.633 L901.444 681.633 L900.885 681.633 L900.325 681.633 L899.766 681.633 L899.207 681.633 L898.648 681.633 L898.088 681.633 L897.529 681.633 L896.97 681.633 L896.411 681.633 L895.851 681.633 L895.292 681.633 L894.733 681.633 L894.174 681.633 L893.614 681.633 L893.055 681.633 L892.496 681.633 L891.937 681.633 L891.377 681.633 L890.818 681.633 L890.259 681.633 L889.7 681.633 L889.14 681.633 L888.581 681.633 L888.022 681.633 L887.463 681.633 L886.903 681.633 L886.344 681.633 L885.785 681.633 L885.226 681.633 L884.666 681.633 L884.107 681.633 L883.548 681.633 L882.989 681.633 L882.429 681.633 L881.87 681.633 L881.311 681.633 L880.752 681.633 L880.192 681.633 L879.633 681.633 L879.074 681.633 L878.515 681.633 L877.955 681.633 L877.396 681.633 L876.837 681.633 L876.278 681.633 L875.718 681.633 L875.159 681.633 L874.6 681.633 L874.041 681.633 L873.481 681.633 L872.922 681.633 L872.363 681.633 L871.804 681.633 L871.244 681.633 L870.685 681.633 L870.126 681.633 L869.567 681.633 L869.007 681.633 L868.448 681.633 L867.889 681.633 L867.33 681.633 L866.77 681.633 L866.211 681.633 L865.652 681.633 L865.093 681.633 L864.533 681.633 L863.974 681.633 L863.415 681.633 L862.856 681.633 L862.296 681.633 L861.737 681.633 L861.178 681.633 L860.619 681.633 L860.059 681.633 L859.5 681.633 L858.941 681.633 L858.382 681.633 L857.822 681.633 L857.263 681.633 L856.704 681.633 L856.145 681.633 L855.585 681.633 L855.026 681.633 L854.467 681.633 L853.908 681.633 L853.348 681.633 L852.789 681.633 L852.23 681.633 L851.671 681.633 L851.111 681.633 L850.552 681.633 L849.993 681.633 L849.434 681.633 L848.874 681.633 L848.315 681.633 L847.756 681.633 L847.197 681.633 L846.637 681.633 L846.078 681.633 L845.519 681.633 L844.96 681.633 L844.4 681.633 L843.841 681.633 L843.282 681.633 L842.723 681.633 L842.163 681.633 L841.604 681.633 L841.045 681.633 L840.486 681.633 L839.926 681.633 L839.367 681.633 L838.808 681.633 L838.249 681.633 L837.689 681.633 L837.13 681.633 L836.571 681.633 L836.012 681.633 L835.452 681.633 L834.893 681.633 L834.334 681.633 L833.775 681.633 L833.215 681.633 L832.656 681.633 L832.097 681.633 L831.538 681.633 L830.978 681.633 L830.419 681.633 L829.86 681.633 L829.301 681.633 L828.741 681.633 L828.182 681.633 L827.623 681.633 L827.064 681.633 L826.504 681.633 L825.945 681.633 L825.386 681.633 L824.827 681.633 L824.267 681.633 L823.708 681.633 L823.149 681.633 L822.59 681.633 L822.03 681.633 L821.471 681.633 L820.912 681.633 L820.353 681.633 L819.793 681.633 L819.234 681.633 L818.675 681.633 L818.116 681.633 L817.556 681.633 L816.997 681.633 L816.438 681.633 L815.879 681.633 L815.319 681.633 L814.76 681.633 L814.201 681.633 L813.642 681.633 L813.082 681.633 L812.523 681.633 L811.964 681.633 L811.405 681.633 L810.845 681.633 L810.286 681.633 L809.727 681.633 L809.168 681.633 L808.608 681.633 L808.049 681.633 L807.49 681.633 L806.931 681.633 L806.371 681.633 L805.812 681.633 L805.253 681.633 L804.693 681.633 L804.134 681.633 L803.575 681.633 L803.016 681.633 L802.456 681.633 L801.897 681.633 L801.338 681.633 L800.779 681.633 L800.219 681.633 L799.66 681.633 L799.101 681.633 L798.542 681.633 L797.982 681.633 L797.423 681.633 L796.864 681.633 L796.305 681.633 L795.745 681.633 L795.186 681.633 L794.627 681.633 L794.068 681.633 L793.508 681.633 L792.949 681.633 L792.39 681.633 L791.831 681.633 L791.271 681.633 L790.712 681.633 L790.153 681.633 L789.594 681.633 L789.034 681.633 L788.475 681.633 L787.916 681.633 L787.357 681.633 L786.797 681.633 L786.238 681.633 L785.679 681.633 L785.12 681.633 L784.56 681.633 L784.001 681.633 L783.442 681.633 L782.883 681.633 L782.323 681.633 L781.764 681.633 L781.205 681.633 L780.646 681.633 L780.086 681.633 L779.527 681.633 L778.968 681.633 L778.409 681.633 L777.849 681.633 L777.29 681.633 L776.731 681.633 L776.172 681.633 L775.612 681.633 L775.053 681.633 L774.494 681.633 L773.935 681.633 L773.375 681.633 L772.816 681.633 L772.257 681.633 L771.698 681.633 L771.138 681.633 L770.579 681.633 L770.02 681.633 L769.461 681.633 L768.901 681.633 L768.342 681.633 L767.783 681.633 L767.224 681.633 L766.664 681.633 L766.105 681.633 L765.546 681.633 L764.987 681.633 L764.427 681.633 L763.868 681.633 L763.309 681.633 L762.75 681.633 L762.19 681.633 L761.631 681.633 L761.072 681.633 L760.513 681.633 L759.953 681.633 L759.394 681.633 L758.835 681.633 L758.276 681.633 L757.716 681.633 L757.157 681.633 L756.598 681.633 L756.039 681.633 L755.479 681.633 L754.92 681.633 L754.361 681.633 L753.802 681.633 L753.242 681.633 L752.683 681.633 L752.124 681.633 L751.565 681.633 L751.005 681.633 L750.446 681.633 L749.887 681.633 L749.328 681.633 L748.768 681.633 L748.209 681.633 L747.65 681.633 L747.091 681.633 L746.531 681.633 L745.972 681.633 L745.413 681.633 L744.854 681.633 L744.294 681.633 L743.735 681.633 L743.176 681.633 L742.617 681.633 L742.057 681.633 L741.498 681.633 L740.939 681.633 L740.38 681.633 L739.82 681.633 L739.261 681.633 L738.702 681.633 L738.143 681.633 L737.583 681.633 L737.024 681.633 L736.465 681.633 L735.906 681.633 L735.346 681.633 L734.787 681.633 L734.228 681.633 L733.669 681.633 L733.109 681.633 L732.55 681.633 L731.991 681.633 L731.432 681.633 L730.872 681.633 L730.313 681.633 L729.754 681.633 L729.195 681.633 L728.635 681.633 L728.076 681.633 L727.517 681.633 L726.958 681.633 L726.398 681.633 L725.839 681.633 L725.28 681.633 L724.721 681.633 L724.161 681.633 L723.602 681.633 L723.043 681.633 L722.484 681.633 L721.924 681.633 L721.365 681.633 L720.806 681.633 L720.247 681.633  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip793)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,685.758 720.806,685.758 721.365,685.758 721.924,685.758 722.484,685.758 723.043,685.758 723.602,685.758 724.161,685.758 724.721,685.758 725.28,685.758 725.839,685.758 726.398,685.758 726.958,685.758 727.517,685.758 728.076,685.758 728.635,685.758 729.195,685.758 729.754,685.758 730.313,685.758 730.872,685.758 731.432,685.758 731.991,685.758 732.55,685.758 733.109,685.758 733.669,685.758 734.228,685.758 734.787,685.758 735.346,685.758 735.906,685.758 736.465,685.758 737.024,685.758 737.583,685.758 738.143,685.758 738.702,685.758 739.261,685.758 739.82,685.758 740.38,685.758 740.939,685.758 741.498,685.758 742.057,685.758 742.617,685.758 743.176,685.758 743.735,685.758 744.294,685.758 744.854,685.758 745.413,685.758 745.972,685.758 746.531,685.758 747.091,685.758 747.65,685.758 748.209,685.758 748.768,685.758 749.328,685.758 749.887,685.758 750.446,685.758 751.005,685.758 751.565,685.758 752.124,685.758 752.683,685.758 753.242,685.758 753.802,685.758 754.361,685.758 754.92,685.758 755.479,685.758 756.039,685.758 756.598,685.758 757.157,685.758 757.716,685.758 758.276,685.758 758.835,685.758 759.394,685.758 759.953,685.758 760.513,685.758 761.072,685.758 761.631,685.758 762.19,685.758 762.75,685.758 763.309,685.758 763.868,685.758 764.427,685.758 764.987,685.758 765.546,685.758 766.105,685.758 766.664,685.758 767.224,685.758 767.783,685.758 768.342,685.758 768.901,685.758 769.461,685.758 770.02,685.758 770.579,685.758 771.138,685.758 771.698,685.758 772.257,685.758 772.816,685.758 773.375,685.758 773.935,685.758 774.494,685.758 775.053,685.758 775.612,685.758 776.172,685.758 776.731,685.758 777.29,685.758 777.849,685.758 778.409,685.758 778.968,685.758 779.527,685.758 780.086,685.758 780.646,685.758 781.205,685.758 781.764,685.758 782.323,685.758 782.883,685.758 783.442,685.758 784.001,685.758 784.56,685.758 785.12,685.758 785.679,685.758 786.238,685.758 786.797,685.758 787.357,685.758 787.916,685.758 788.475,685.758 789.034,685.758 789.594,685.758 790.153,685.758 790.712,685.758 791.271,685.758 791.831,685.758 792.39,685.758 792.949,685.758 793.508,685.758 794.068,685.758 794.627,685.758 795.186,685.758 795.745,685.758 796.305,685.758 796.864,685.758 797.423,685.758 797.982,685.758 798.542,685.758 799.101,685.758 799.66,685.758 800.219,685.758 800.779,685.758 801.338,685.758 801.897,685.758 802.456,685.758 803.016,685.758 803.575,685.758 804.134,685.758 804.693,685.758 805.253,685.758 805.812,685.758 806.371,685.758 806.931,685.758 807.49,685.758 808.049,685.758 808.608,685.758 809.168,685.758 809.727,685.758 810.286,685.758 810.845,685.758 811.405,685.758 811.964,685.758 812.523,685.758 813.082,685.758 813.642,685.758 814.201,685.758 814.76,685.758 815.319,685.758 815.879,685.758 816.438,685.758 816.997,685.758 817.556,685.758 818.116,685.758 818.675,685.758 819.234,685.758 819.793,685.758 820.353,685.758 820.912,685.758 821.471,685.758 822.03,685.758 822.59,685.758 823.149,685.758 823.708,685.758 824.267,685.758 824.827,685.758 825.386,685.758 825.945,685.758 826.504,685.758 827.064,685.758 827.623,685.758 828.182,685.758 828.741,685.758 829.301,685.758 829.86,685.758 830.419,685.758 830.978,685.758 831.538,685.758 832.097,685.758 832.656,685.758 833.215,685.758 833.775,685.758 834.334,685.758 834.893,685.758 835.452,685.758 836.012,685.758 836.571,685.758 837.13,685.758 837.689,685.758 838.249,685.758 838.808,685.758 839.367,685.758 839.926,685.758 840.486,685.758 841.045,685.758 841.604,685.758 842.163,685.758 842.723,685.758 843.282,685.758 843.841,685.758 844.4,685.758 844.96,685.758 845.519,685.758 846.078,685.758 846.637,685.758 847.197,685.758 847.756,685.758 848.315,685.758 848.874,685.758 849.434,685.758 849.993,685.758 850.552,685.758 851.111,685.758 851.671,685.758 852.23,685.758 852.789,685.758 853.348,685.758 853.908,685.758 854.467,685.758 855.026,685.758 855.585,685.758 856.145,685.758 856.704,685.758 857.263,685.758 857.822,685.758 858.382,685.758 858.941,685.758 859.5,685.758 860.059,685.758 860.619,685.758 861.178,685.758 861.737,685.758 862.296,685.758 862.856,685.758 863.415,685.758 863.974,685.758 864.533,685.758 865.093,685.758 865.652,685.758 866.211,685.758 866.77,685.758 867.33,685.758 867.889,685.758 868.448,685.758 869.007,685.758 869.567,685.758 870.126,685.758 870.685,685.758 871.244,685.758 871.804,685.758 872.363,685.758 872.922,685.758 873.481,685.758 874.041,685.758 874.6,685.758 875.159,685.758 875.718,685.758 876.278,685.758 876.837,685.758 877.396,685.758 877.955,685.758 878.515,685.758 879.074,685.758 879.633,685.758 880.192,685.758 880.752,685.758 881.311,685.758 881.87,685.758 882.429,685.758 882.989,685.758 883.548,685.758 884.107,685.758 884.666,685.758 885.226,685.758 885.785,685.758 886.344,685.758 886.903,685.758 887.463,685.758 888.022,685.758 888.581,685.758 889.14,685.758 889.7,685.758 890.259,685.758 890.818,685.758 891.377,685.758 891.937,685.758 892.496,685.758 893.055,685.758 893.614,685.758 894.174,685.758 894.733,685.758 895.292,685.758 895.851,685.758 896.411,685.758 896.97,685.758 897.529,685.758 898.088,685.758 898.648,685.758 899.207,685.758 899.766,685.758 900.325,685.758 900.885,685.758 901.444,685.758 902.003,685.758 902.562,685.758 903.122,685.758 903.681,685.758 904.24,685.758 904.799,685.758 905.359,685.758 905.918,685.758 906.477,685.758 907.036,685.758 907.596,685.758 908.155,685.758 908.714,685.758 909.273,685.758 909.833,685.758 910.392,685.758 910.951,685.758 911.51,685.758 912.07,685.758 912.629,685.758 913.188,685.758 913.747,685.758 914.307,685.758 914.866,685.758 915.425,685.758 915.984,685.758 916.544,685.758 917.103,685.758 917.662,685.758 918.221,685.758 918.781,685.758 919.34,685.758 919.899,685.758 920.458,685.758 921.018,685.758 921.577,685.758 922.136,685.758 922.695,685.758 923.255,685.758 923.814,685.758 924.373,685.758 924.932,685.758 925.492,685.758 926.051,685.758 926.61,685.758 927.169,685.758 927.729,685.758 928.288,685.758 928.847,685.758 929.406,685.758 929.966,685.758 930.525,685.758 931.084,685.758 931.644,685.758 932.203,685.758 932.762,685.758 933.321,685.758 933.881,685.758 934.44,685.758 934.999,685.758 935.558,685.758 936.118,685.758 936.677,685.758 937.236,685.758 937.795,685.758 938.355,685.758 938.914,685.758 939.473,685.758 940.032,685.758 940.592,685.758 941.151,685.758 941.71,685.758 942.269,685.758 942.829,685.758 943.388,685.758 943.947,685.758 944.506,685.758 945.066,685.758 945.625,685.758 946.184,685.758 946.743,685.758 947.303,685.758 947.862,685.758 948.421,685.758 948.98,685.758 949.54,685.758 950.099,685.758 950.658,685.758 951.217,685.758 951.777,685.758 952.336,685.758 952.895,685.758 953.454,685.758 954.014,685.758 954.573,685.758 955.132,685.758 955.691,685.758 956.251,685.758 956.81,685.758 957.369,685.758 957.928,685.758 958.488,685.758 959.047,685.758 959.606,685.758 960.165,685.758 960.725,685.758 961.284,685.758 961.843,685.758 962.402,685.758 962.962,685.758 963.521,685.758 964.08,685.758 964.639,685.758 965.199,685.758 965.758,685.758 966.317,685.758 966.876,685.758 967.436,685.758 967.995,685.758 968.554,685.758 969.113,685.758 969.673,685.758 970.232,685.758 970.791,685.758 971.35,685.758 971.91,685.758 972.469,685.758 973.028,685.758 973.587,685.758 974.147,685.758 974.706,685.758 975.265,685.758 975.824,685.758 976.384,685.758 976.943,685.758 977.502,685.758 978.061,685.758 978.621,685.758 979.18,685.758 979.739,685.758 980.298,685.758 980.858,685.758 981.417,685.758 981.976,685.758 982.535,685.758 983.095,685.758 983.654,685.758 984.213,685.758 984.772,685.758 985.332,685.758 985.891,685.758 986.45,685.758 987.009,685.758 987.569,685.758 988.128,685.758 988.687,685.758 989.246,685.758 989.806,685.758 990.365,685.758 990.924,685.758 991.483,685.758 992.043,685.758 992.602,685.758 993.161,685.758 993.72,685.758 994.28,685.758 994.839,685.758 995.398,685.758 995.957,685.758 996.517,685.758 997.076,685.758 997.635,685.758 998.194,685.758 998.754,685.758 999.313,685.758 999.872,685.758 1000.43,685.758 1000.99,685.758 1001.55,685.758 1002.11,685.758 1002.67,685.758 1003.23,685.758 1003.79,685.758 1004.35,685.758 1004.91,685.758 1005.46,685.758 1006.02,685.758 1006.58,685.758 1007.14,685.758 1007.7,685.758 1008.26,685.758 1008.82,685.758 1009.38,685.758 1009.94,685.758 1010.5,685.758 1011.06,685.758 1011.62,685.758 1012.18,685.758 1012.73,685.758 1013.29,685.758 1013.85,685.758 1014.41,685.758 1014.97,685.758 1015.53,685.758 1016.09,685.758 1016.65,685.758 1017.21,685.758 1017.77,685.758 1018.33,685.758 1018.89,685.758 1019.45,685.758 1020.01,685.758 1020.56,685.758 1021.12,685.758 1021.68,685.758 1022.24,685.758 1022.8,685.758 1023.36,685.758 1023.92,685.758 1024.48,685.758 1025.04,685.758 1025.6,685.758 1026.16,685.758 1026.72,685.758 1027.28,685.758 1027.83,685.758 1028.39,685.758 1028.95,685.758 1029.51,685.758 1030.07,685.758 1030.63,685.758 1031.19,685.758 1031.75,685.758 1032.31,685.758 1032.87,685.758 1033.43,685.758 1033.99,685.758 1034.55,685.758 1035.1,685.758 1035.66,685.758 1036.22,685.758 1036.78,685.758 1037.34,685.758 1037.9,685.758 1038.46,685.758 1039.02,685.758 1039.58,685.758 1040.14,685.758 1040.7,685.758 1041.26,685.758 1041.82,685.758 1042.38,685.758 1042.93,685.758 1043.49,685.758 1044.05,685.758 1044.61,685.758 1045.17,685.758 1045.73,685.758 1046.29,685.758 1046.85,685.758 1047.41,685.758 1047.97,685.758 1048.53,685.758 1049.09,685.758 1049.65,685.758 1050.2,685.758 1050.76,685.758 1051.32,685.758 1051.88,685.758 1052.44,685.758 1053,685.758 1053.56,685.758 1054.12,685.758 1054.68,685.758 1055.24,685.758 1055.8,685.758 1056.36,685.758 1056.92,685.758 1057.48,685.758 1058.03,685.758 1058.59,685.758 1059.15,685.758 1059.71,685.758 1060.27,685.758 1060.83,685.758 1061.39,685.758 1061.95,685.758 1062.51,685.758 1063.07,685.758 1063.63,685.758 1064.19,685.758 1064.75,685.758 1065.3,685.758 1065.86,685.758 1066.42,685.758 1066.98,685.758 1067.54,685.758 1068.1,685.758 1068.66,685.758 1069.22,685.758 1069.78,685.758 1070.34,685.758 1070.9,685.758 1071.46,685.758 1072.02,685.758 1072.57,685.758 1073.13,685.758 1073.69,685.758 1074.25,685.758 1074.81,685.758 1075.37,685.758 1075.93,685.758 1076.49,685.758 1077.05,685.758 1077.61,685.758 1078.17,685.758 1078.73,685.758 1079.29,685.758 1079.85,685.758 1080.4,685.758 1080.96,685.758 1081.52,685.758 1082.08,685.758 1082.64,685.758 1083.2,685.758 1083.76,685.758 1084.32,685.758 1084.88,685.758 1085.44,685.758 1086,685.758 1086.56,685.758 1087.12,685.758 1087.67,685.758 1088.23,685.758 1088.79,685.758 1089.35,685.758 1089.91,685.758 1090.47,685.758 1091.03,685.758 1091.59,685.758 1092.15,685.758 1092.71,685.758 1093.27,685.758 1093.83,685.758 1094.39,685.758 1094.94,685.758 1095.5,685.758 1096.06,685.758 1096.62,685.758 1097.18,685.758 1097.74,685.758 1098.3,685.758 1098.86,685.758 1099.42,685.758 1099.98,685.758 1100.54,685.758 1101.1,685.758 1101.66,685.758 1102.22,685.758 1102.77,685.758 1103.33,685.758 1103.89,685.758 1104.45,685.758 1105.01,685.758 1105.57,685.758 1106.13,685.758 1106.69,685.758 1107.25,685.758 1107.81,685.758 1108.37,685.758 1108.93,685.758 1109.49,685.758 1110.04,685.758 1110.6,685.758 1111.16,685.758 1111.72,685.758 1112.28,685.758 1112.84,685.758 1113.4,685.758 1113.96,685.758 1114.52,685.758 1115.08,685.758 1115.64,685.758 1116.2,685.758 1116.76,685.758 1117.31,685.758 1117.87,685.758 1118.43,685.758 1118.99,685.758 1119.55,685.758 1120.11,685.758 1120.67,685.758 1121.23,685.758 1121.79,685.758 1122.35,685.758 1122.91,685.758 1123.47,685.758 1124.03,685.758 1124.59,685.758 1125.14,685.758 1125.7,685.758 1126.26,685.758 1126.82,685.758 1127.38,685.758 1127.94,685.758 1128.5,685.758 1129.06,685.758 1129.62,685.758 1130.18,685.758 1130.74,685.758 1131.3,685.758 1131.86,685.758 1132.41,685.758 1132.97,685.758 1133.53,685.758 1134.09,685.758 1134.65,685.758 1135.21,685.758 1135.77,685.758 1136.33,685.758 1136.89,685.758 1137.45,685.758 1138.01,685.758 1138.57,685.758 1139.13,685.758 1139.68,685.758 1140.24,685.758 1140.8,685.758 1141.36,685.758 1141.92,685.758 1142.48,685.758 1143.04,685.758 1143.6,685.758 1144.16,685.758 1144.72,685.758 1145.28,685.758 1145.84,685.758 1146.4,685.758 1146.96,685.758 1147.51,685.758 1148.07,685.758 1148.63,685.758 1149.19,685.758 1149.75,685.758 1150.31,685.758 1150.87,685.758 1151.43,685.758 1151.99,685.758 1152.55,685.758 1153.11,685.758 1153.67,685.758 1154.23,685.758 1154.78,685.758 1155.34,685.758 1155.9,685.758 1156.46,685.758 1157.02,685.758 1157.58,685.758 1158.14,685.758 1158.7,685.758 1159.26,685.758 1159.82,685.758 1160.38,685.758 1160.94,685.758 1161.5,685.758 1162.05,685.758 1162.61,685.758 1163.17,685.758 1163.73,685.758 1164.29,685.758 1164.85,685.758 1165.41,685.758 1165.97,685.758 1166.53,685.758 1167.09,685.758 1167.65,685.758 1168.21,685.758 1168.77,685.758 1169.33,685.758 1169.88,685.758 1170.44,685.758 1171,685.758 1171.56,685.758 1172.12,685.758 1172.68,685.758 1173.24,685.758 1173.8,685.758 1174.36,685.758 1174.92,685.758 1175.48,685.758 1176.04,685.758 1176.6,685.758 1177.15,685.758 1177.71,685.758 1178.27,685.758 1178.83,685.758 1179.39,685.758 1179.95,685.758 1180.51,685.758 1181.07,685.758 1181.63,685.758 1182.19,685.758 1182.75,685.758 1183.31,685.758 1183.87,685.758 1184.43,685.758 1184.98,685.758 1185.54,685.758 1186.1,685.758 1186.66,685.758 1187.22,685.758 1187.78,685.758 1188.34,685.758 1188.9,685.758 1189.46,685.758 1190.02,685.758 1190.58,685.758 1191.14,685.758 1191.7,685.758 1192.25,685.758 1192.81,685.758 1193.37,685.758 1193.93,685.758 1194.49,685.758 1195.05,685.758 1195.61,685.758 1196.17,685.758 1196.73,685.758 1197.29,685.758 1197.85,685.758 1198.41,685.758 1198.97,685.758 1199.52,685.758 1200.08,685.758 1200.64,685.758 1201.2,685.758 1201.76,685.758 1202.32,685.758 1202.88,685.758 1203.44,685.758 1204,685.758 1204.56,685.758 1205.12,685.758 1205.68,685.758 1206.24,685.758 1206.8,685.758 1207.35,685.758 1207.91,685.758 1208.47,685.758 1209.03,685.758 1209.59,685.758 1210.15,685.758 1210.71,685.758 1211.27,685.758 1211.83,685.758 1212.39,685.758 1212.95,685.758 1213.51,685.758 1214.07,685.758 1214.62,685.758 1215.18,685.758 1215.74,685.758 1216.3,685.758 1216.86,685.758 1217.42,685.758 1217.98,685.758 1218.54,685.758 1219.1,685.758 1219.66,685.758 1220.22,685.758 1220.78,685.758 1221.34,685.758 1221.89,685.758 1222.45,685.758 1223.01,685.758 1223.57,685.758 1224.13,685.758 1224.69,685.758 1225.25,685.758 1225.81,685.758 1226.37,685.758 1226.93,685.758 1227.49,685.758 1228.05,685.758 1228.61,685.758 1229.17,685.758 1229.72,685.758 1230.28,685.758 1230.84,685.758 1231.4,685.758 1231.96,685.758 1232.52,685.758 1233.08,685.758 1233.64,685.758 1234.2,685.758 1234.76,685.758 1235.32,685.758 1235.88,685.758 1236.44,685.758 1236.99,685.758 1237.55,685.758 1238.11,685.758 1238.67,685.758 1239.23,685.758 1239.79,685.758 1240.35,685.758 1240.91,685.758 1241.47,685.758 1242.03,685.758 1242.59,685.758 1243.15,685.758 1243.71,685.758 1244.26,685.758 1244.82,685.758 1245.38,685.758 1245.94,685.758 1246.5,685.758 1247.06,685.758 1247.62,685.758 1248.18,685.758 1248.74,685.758 1249.3,685.758 1249.86,685.758 1250.42,685.758 1250.98,685.758 1251.54,685.758 1252.09,685.758 1252.65,685.758 1253.21,685.758 1253.77,685.758 1254.33,685.758 1254.89,685.758 1255.45,685.758 1256.01,685.758 1256.57,685.758 1257.13,685.758 1257.69,685.758 1258.25,685.758 1258.81,685.758 1259.36,685.758 1259.92,685.758 1260.48,685.758 1261.04,685.758 1261.6,685.758 1262.16,685.758 1262.72,685.758 1263.28,685.758 1263.84,685.758 1264.4,685.758 1264.96,685.758 1265.52,685.758 1266.08,685.758 1266.63,685.758 1267.19,685.758 1267.75,685.758 1268.31,685.758 1268.87,685.758 1269.43,685.758 1269.99,685.758 1270.55,685.758 1271.11,685.758 1271.67,685.758 1272.23,685.758 1272.79,685.758 1273.35,685.758 1273.91,685.758 1274.46,685.758 1275.02,685.758 1275.58,685.758 1276.14,685.758 1276.7,685.758 1277.26,685.758 1277.82,685.758 1278.38,685.758 1278.94,685.758 1279.5,685.758 1280.06,685.758 1280.62,685.758 1281.18,685.758 1281.73,685.758 1282.29,685.758 1282.85,685.758 1283.41,685.758 1283.97,685.758 1284.53,685.758 1285.09,685.758 1285.65,685.758 1286.21,685.758 1286.77,685.758 1287.33,685.758 1287.89,685.758 1288.45,685.758 1289,685.758 1289.56,685.758 1290.12,685.758 1290.68,685.758 1291.24,685.758 1291.8,685.758 1292.36,685.758 1292.92,685.758 1293.48,685.758 1294.04,685.758 1294.6,685.758 1295.16,685.758 1295.72,685.758 1296.28,685.758 1296.83,685.758 1297.39,685.758 1297.95,685.758 1298.51,685.758 1299.07,685.758 1299.63,685.758 1300.19,685.758 1300.75,685.758 1301.31,685.758 1301.87,685.758 1302.43,685.758 1302.99,685.758 1303.55,685.758 1304.1,685.758 1304.66,685.758 1305.22,685.758 1305.78,685.758 1306.34,685.758 1306.9,685.758 1307.46,685.758 1308.02,685.758 1308.58,685.758 1309.14,685.758 1309.7,685.758 1310.26,685.758 1310.82,685.758 1311.38,685.758 1311.93,685.758 1312.49,685.758 1313.05,685.758 1313.61,685.758 1314.17,685.758 1314.73,685.758 1315.29,685.758 1315.85,685.758 1316.41,685.758 1316.97,685.758 1317.53,685.758 1318.09,685.758 1318.65,685.758 1319.2,685.758 1319.76,685.758 1320.32,685.758 1320.88,685.758 1321.44,685.758 1322,685.758 1322.56,685.758 1323.12,685.758 1323.68,685.758 1324.24,685.758 1324.8,685.758 1325.36,685.758 1325.92,685.758 1326.47,685.758 1327.03,685.758 1327.59,685.758 1328.15,685.758 1328.71,685.758 1329.27,685.758 1329.83,685.758 1330.39,685.758 1330.95,685.758 1331.51,685.758 1332.07,685.758 1332.63,685.758 1333.19,685.758 1333.75,685.758 1334.3,685.758 1334.86,685.758 1335.42,685.758 1335.98,685.758 1336.54,685.758 1337.1,685.758 1337.66,685.758 1338.22,685.758 1338.78,685.758 1339.34,685.758 1339.9,685.758 1340.46,685.758 1341.02,685.758 1341.57,685.758 1342.13,685.758 1342.69,685.758 1343.25,685.758 1343.81,685.758 1344.37,685.758 1344.93,685.758 1345.49,685.758 1346.05,685.758 1346.61,685.758 1347.17,685.758 1347.73,685.758 1348.29,685.758 1348.84,685.758 1349.4,685.758 1349.96,685.758 1350.52,685.758 1351.08,685.758 1351.64,685.758 1352.2,685.758 1352.76,685.758 1353.32,685.758 1353.88,685.758 1354.44,685.758 1355,685.758 1355.56,685.758 1356.12,685.758 1356.67,685.758 1357.23,685.758 1357.79,685.758 1358.35,685.758 1358.91,685.758 1359.47,685.758 1360.03,685.758 1360.59,685.758 1361.15,685.758 1361.71,685.758 1362.27,685.758 1362.83,685.758 1363.39,685.758 1363.94,685.758 1364.5,685.758 1365.06,685.758 1365.62,685.758 1366.18,685.758 1366.74,685.758 1367.3,685.758 1367.86,685.758 1368.42,685.758 1368.98,685.758 1369.54,685.758 1370.1,685.758 1370.66,685.758 1371.21,685.758 1371.77,685.758 1372.33,685.758 1372.89,685.758 1373.45,685.758 1374.01,685.758 1374.57,685.758 1375.13,685.758 1375.69,685.758 1376.25,685.758 1376.81,685.758 1377.37,685.758 1377.93,685.758 1378.49,685.758 1379.04,685.758 1379.6,685.758 1380.16,685.758 1380.72,685.758 1381.28,685.758 1381.84,685.758 1382.4,685.758 1382.96,685.758 1383.52,685.758 1384.08,685.758 1384.64,685.758 1385.2,685.758 1385.76,685.758 1386.31,685.758 1386.87,685.758 1387.43,685.758 1387.99,685.758 1388.55,685.758 1389.11,685.758 1389.67,685.758 1390.23,685.758 1390.79,685.758 1391.35,685.758 1391.91,685.758 1392.47,685.758 1393.03,685.758 1393.58,685.758 1394.14,685.758 1394.7,685.758 1395.26,685.758 1395.82,685.758 1396.38,685.758 1396.94,685.758 1397.5,685.758 1398.06,685.758 1398.62,685.758 1399.18,685.758 1399.74,685.758 1400.3,685.758 1400.86,685.758 1401.41,685.758 1401.97,685.758 1402.53,685.758 1403.09,685.758 1403.65,685.758 1404.21,685.758 1404.77,685.758 1405.33,685.758 1405.89,685.758 1406.45,685.758 1407.01,685.758 1407.57,685.758 1408.13,685.758 1408.68,685.758 1409.24,685.758 1409.8,685.758 1410.36,685.758 1410.92,685.758 1411.48,685.758 1412.04,685.758 1412.6,685.758 1413.16,685.758 1413.72,685.758 1414.28,685.758 1414.84,685.758 1415.4,685.758 1415.95,685.758 1416.51,685.758 1417.07,685.758 1417.63,685.758 1418.19,685.758 1418.75,685.758 1419.31,685.758 1419.87,685.758 1420.43,685.758 1420.99,685.758 1421.55,685.758 1422.11,685.758 1422.67,685.758 1423.23,685.758 1423.78,685.758 1424.34,685.758 1424.9,685.758 1425.46,685.758 1426.02,685.758 1426.58,685.758 1427.14,685.758 1427.7,685.758 1428.26,685.758 1428.82,685.758 1429.38,685.758 1429.94,685.758 1430.5,685.758 1431.05,685.758 1431.61,685.758 1432.17,685.758 1432.73,685.758 1433.29,685.758 1433.85,685.758 1434.41,685.758 1434.97,685.758 1435.53,685.758 1436.09,685.758 1436.65,685.758 1437.21,685.758 1437.77,685.758 1438.33,685.758 1438.88,685.758 1439.44,685.758 1440,685.758 1440.56,685.758 1441.12,685.758 1441.68,685.758 1442.24,685.758 1442.8,685.758 1443.36,685.758 1443.92,685.758 1444.48,685.758 1445.04,685.758 1445.6,685.758 1446.15,685.758 1446.71,685.758 1447.27,685.758 1447.83,685.758 1448.39,685.758 1448.95,685.758 1449.51,685.758 1450.07,685.758 1450.63,685.758 1451.19,685.758 1451.75,685.758 1452.31,685.758 1452.87,685.758 1453.42,685.758 1453.98,685.758 1454.54,685.758 1455.1,685.758 1455.66,685.758 1456.22,685.758 1456.78,685.758 1457.34,685.758 1457.9,685.758 1458.46,685.758 1459.02,685.758 1459.58,685.758 1460.14,685.758 1460.7,685.758 1461.25,685.758 1461.81,685.758 1462.37,685.758 1462.93,685.758 1463.49,685.758 1464.05,685.758 1464.61,685.758 1465.17,685.758 1465.73,685.758 1466.29,685.758 1466.85,685.758 1467.41,685.758 1467.97,685.758 1468.52,685.758 1469.08,685.758 1469.64,685.758 1470.2,685.758 1470.76,685.758 1471.32,685.758 1471.88,685.758 1472.44,685.758 1473,685.758 1473.56,685.758 1474.12,685.758 1474.68,685.758 1475.24,685.758 1475.79,685.758 1476.35,685.758 1476.91,685.758 1477.47,685.758 1478.03,685.758 1478.59,685.758 1479.15,685.758 1479.71,685.758 1480.27,685.758 1480.83,685.758 1481.39,685.758 1481.95,685.758 1482.51,685.758 1483.07,685.758 1483.62,685.758 1484.18,685.758 1484.74,685.758 1485.3,685.758 1485.86,685.758 1486.42,685.758 1486.98,685.758 1487.54,685.758 1488.1,685.758 1488.66,685.758 1489.22,685.758 1489.78,685.758 1490.34,685.758 1490.89,685.758 1491.45,685.758 1492.01,685.758 1492.57,685.758 1493.13,685.758 1493.69,685.758 1494.25,685.758 1494.81,685.758 1495.37,685.758 1495.93,685.758 1496.49,685.758 1497.05,685.758 1497.61,685.758 1498.16,685.758 1498.72,685.758 1499.28,685.758 1499.84,685.758 1500.4,685.758 1500.96,685.758 1501.52,685.758 1502.08,685.758 1502.64,685.758 1503.2,685.758 1503.76,685.758 1504.32,685.758 1504.88,685.758 1505.44,685.758 1505.99,685.758 1506.55,685.758 1507.11,685.758 1507.67,685.758 1508.23,685.758 1508.79,685.758 1509.35,685.758 1509.91,685.758 1510.47,685.758 1511.03,685.758 1511.59,685.758 1512.15,685.758 1512.71,685.758 1513.26,685.758 1513.82,685.758 1514.38,685.758 1514.94,685.758 1515.5,685.758 1516.06,685.758 1516.62,685.758 1517.18,685.758 1517.74,685.758 1518.3,685.758 1518.86,685.758 1519.42,685.758 1519.98,685.758 1520.53,685.758 1521.09,685.758 1521.65,685.758 1522.21,685.758 1522.77,685.758 1523.33,685.758 1523.89,685.758 1524.45,685.758 1525.01,685.758 1525.57,685.758 1526.13,685.758 1526.69,685.758 1527.25,685.758 1527.81,685.758 1528.36,685.758 1528.92,685.758 1529.48,685.758 1530.04,685.758 1530.6,685.758 1531.16,685.758 1531.72,685.758 1532.28,685.758 1532.84,685.758 1533.4,685.758 1533.96,685.758 1534.52,685.758 1535.08,685.758 1535.63,685.758 1536.19,685.758 1536.75,685.758 1537.31,685.758 1537.87,685.758 1538.43,685.758 1538.99,685.758 1539.55,685.758 1540.11,685.758 1540.67,685.758 1541.23,685.758 1541.79,685.758 1542.35,685.758 1542.9,685.758 1543.46,685.758 1544.02,685.758 1544.58,685.758 1545.14,685.758 1545.7,685.758 1546.26,685.758 1546.82,685.758 1547.38,685.758 1547.94,685.758 1548.5,685.758 1549.06,685.758 1549.62,685.758 1550.18,685.758 1550.73,685.758 1551.29,685.758 1551.85,685.758 1552.41,685.758 1552.97,685.758 1553.53,685.758 1554.09,685.758 1554.65,685.758 1555.21,685.758 1555.77,685.758 1556.33,685.758 1556.89,685.758 1557.45,685.758 1558,685.758 1558.56,685.758 1559.12,685.758 1559.68,685.758 1560.24,685.758 1560.8,685.758 1561.36,685.758 1561.92,685.758 1562.48,685.758 1563.04,685.758 1563.6,685.758 1564.16,685.758 1564.72,685.758 1565.28,685.758 1565.83,685.758 1566.39,685.758 1566.95,685.758 1567.51,685.758 1568.07,685.758 1568.63,685.758 1569.19,685.758 1569.75,685.758 1570.31,685.758 1570.87,685.758 1571.43,685.758 1571.99,685.758 1572.55,685.758 1573.1,685.758 1573.66,685.758 1574.22,685.758 1574.78,685.758 1575.34,685.758 1575.9,685.758 1576.46,685.758 1577.02,685.758 1577.58,685.758 1578.14,685.758 1578.7,685.758 1579.26,685.758 1579.82,685.758 1580.37,685.758 1580.93,685.758 1581.49,685.758 1582.05,685.758 1582.61,685.758 1583.17,685.758 1583.73,685.758 1584.29,685.758 1584.85,685.758 1585.41,685.758 1585.97,685.758 1586.53,685.758 1587.09,685.758 1587.65,685.758 1588.2,685.758 1588.76,685.758 1589.32,685.758 1589.88,685.758 1590.44,685.758 1591,685.758 1591.56,685.758 1592.12,685.758 1592.68,685.758 1593.24,685.758 1593.8,685.758 1594.36,685.758 1594.92,685.758 1595.47,685.758 1596.03,685.758 1596.59,685.758 1597.15,685.758 1597.71,685.758 1598.27,685.758 1598.83,685.758 1599.39,685.758 1599.95,685.758 1600.51,685.758 1601.07,685.758 1601.63,685.758 1602.19,685.758 1602.74,685.758 1603.3,685.758 1603.86,685.758 1604.42,685.758 1604.98,685.758 1605.54,685.758 1606.1,685.758 1606.66,685.758 1607.22,685.758 1607.78,685.758 1608.34,685.758 1608.9,685.758 1609.46,685.758 1610.02,685.758 1610.57,685.758 1611.13,685.758 1611.69,685.758 1612.25,685.758 1612.81,685.758 1613.37,685.758 1613.93,685.758 1614.49,685.758 1615.05,685.758 1615.61,685.758 1616.17,685.758 1616.73,685.758 1617.29,685.758 1617.84,685.758 1618.4,685.758 1618.96,685.758 1619.52,685.758 1620.08,685.758 1620.64,685.758 1621.2,685.758 1621.76,685.758 1622.32,685.758 1622.88,685.758 1623.44,685.758 1624,685.758 1624.56,685.758 1625.11,685.758 1625.67,685.758 1626.23,685.758 1626.79,685.758 1627.35,685.758 1627.91,685.758 1628.47,685.758 1629.03,685.758 1629.59,685.758 1630.15,685.758 1630.71,685.758 1631.27,685.758 1631.83,685.758 1632.39,685.758 1632.94,685.758 1633.5,685.758 1634.06,685.758 1634.62,685.758 1635.18,685.758 1635.74,685.758 1636.3,685.758 1636.86,685.758 1637.42,685.758 1637.98,685.758 1638.54,685.758 1639.1,685.758 1639.66,685.758 1640.21,685.758 1640.77,685.758 1641.33,685.758 1641.89,685.758 1642.45,685.758 1643.01,685.758 1643.57,685.758 1644.13,685.758 1644.69,685.758 1645.25,685.758 1645.81,685.758 1646.37,685.758 1646.93,685.758 1647.48,685.758 1648.04,685.758 1648.6,685.758 1649.16,685.758 1649.72,685.758 1650.28,685.758 1650.84,685.758 1651.4,685.758 1651.96,685.758 1652.52,685.758 1653.08,685.758 1653.64,685.758 1654.2,685.758 1654.76,685.758 1655.31,685.758 1655.87,685.758 1656.43,685.758 1656.99,685.758 1657.55,685.758 1658.11,685.758 1658.67,685.758 1659.23,685.758 1659.79,685.758 1660.35,685.758 1660.91,685.758 1661.47,685.758 1662.03,685.758 1662.58,685.758 1663.14,685.758 1663.7,685.758 1664.26,685.758 1664.82,685.758 1665.38,685.758 1665.94,685.758 1666.5,685.758 1667.06,685.758 1667.62,685.758 1668.18,685.758 1668.74,685.758 1669.3,685.758 1669.85,685.758 1670.41,685.758 1670.97,685.758 1671.53,685.758 1672.09,685.758 1672.65,685.758 1673.21,685.758 1673.77,685.758 1674.33,685.758 1674.89,685.758 1675.45,685.758 1676.01,685.758 1676.57,685.758 1677.13,685.758 1677.68,685.758 1678.24,685.758 1678.8,685.758 1679.36,685.758 1679.92,685.758 1680.48,685.758 1681.04,685.758 1681.6,685.758 1682.16,685.758 1682.72,685.758 1683.28,685.758 1683.84,685.758 1684.4,685.758 1684.95,685.758 1685.51,685.758 1686.07,685.758 1686.63,685.758 1687.19,685.758 1687.75,685.758 1688.31,685.758 1688.87,685.758 1689.43,685.758 1689.99,685.758 1690.55,685.758 1691.11,685.758 1691.67,685.758 1692.23,685.758 1692.78,685.758 1693.34,685.758 1693.9,685.758 1694.46,685.758 1695.02,685.758 1695.58,685.758 1696.14,685.758 1696.7,685.758 1697.26,685.758 1697.82,685.758 1698.38,685.758 1698.94,685.758 1699.5,685.758 1700.05,685.758 1700.61,685.758 1701.17,685.758 1701.73,685.758 1702.29,685.758 1702.85,685.758 1703.41,685.758 1703.97,685.758 1704.53,685.758 1705.09,685.758 1705.65,685.758 1706.21,685.758 1706.77,685.758 1707.32,685.758 1707.88,685.758 1708.44,685.758 1709,685.758 1709.56,685.758 1710.12,685.758 1710.68,685.758 1711.24,685.758 1711.8,685.758 1712.36,685.758 1712.92,685.758 1713.48,685.758 1714.04,685.758 1714.6,685.758 1715.15,685.758 1715.71,685.758 1716.27,685.758 1716.83,685.758 1717.39,685.758 1717.95,685.758 1718.51,685.758 1719.07,685.758 1719.63,685.758 1720.19,685.758 1720.75,685.758 1721.31,685.758 1721.87,685.758 1722.42,685.758 1722.98,685.758 1723.54,685.758 1724.1,685.758 1724.66,685.758 1725.22,685.758 1725.78,685.758 1726.34,685.758 1726.9,685.758 1727.46,685.758 1728.02,685.758 1728.58,685.758 1729.14,685.758 1729.69,685.758 1730.25,685.758 1730.81,685.758 1731.37,685.758 1731.93,685.758 1732.49,685.758 1733.05,685.758 1733.61,685.758 1734.17,685.758 1734.73,685.758 1735.29,685.758 1735.85,685.758 1736.41,685.758 1736.97,685.758 1737.52,685.758 1738.08,685.758 1738.64,685.758 1739.2,685.758 1739.76,685.758 1740.32,685.758 1740.88,685.758 1741.44,685.758 1742,685.758 1742.56,685.758 1743.12,685.758 1743.68,685.758 1744.24,685.758 1744.79,685.758 1745.35,685.758 1745.91,685.758 1746.47,685.758 1747.03,685.758 1747.59,685.758 1748.15,685.758 1748.71,685.758 1749.27,685.758 1749.83,685.758 1750.39,685.758 1750.95,685.758 1751.51,685.758 1752.06,685.758 1752.62,685.758 1753.18,685.758 1753.74,685.758 1754.3,685.758 1754.86,685.758 1755.42,685.758 1755.98,685.758 1756.54,685.758 1757.1,685.758 1757.66,685.758 1758.22,685.758 1758.78,685.758 1759.34,685.758 1759.89,685.758 1760.45,685.758 1761.01,685.758 1761.57,685.758 1762.13,685.758 1762.69,685.758 1763.25,685.758 1763.81,685.758 1764.37,685.758 1764.93,685.758 1765.49,685.758 1766.05,685.758 1766.61,685.758 1767.16,685.758 1767.72,685.758 1768.28,685.758 1768.84,685.758 1769.4,685.758 1769.96,685.758 1770.52,685.758 1771.08,685.758 1771.64,685.758 1772.2,685.758 1772.76,685.758 1773.32,685.758 1773.88,685.758 1774.43,685.758 1774.99,685.758 1775.55,685.758 1776.11,685.758 1776.67,685.758 1777.23,685.758 1777.79,685.758 1778.35,685.758 1778.91,685.758 1779.47,685.758 1780.03,685.758 1780.59,685.758 1781.15,685.758 1781.71,685.758 1782.26,685.758 1782.82,685.758 1783.38,685.758 1783.94,685.758 1784.5,685.758 1785.06,685.758 1785.62,685.758 1786.18,685.758 1786.74,685.758 1787.3,685.758 1787.86,685.758 1788.42,685.758 1788.98,685.758 1789.53,685.758 1790.09,685.758 1790.65,685.758 1791.21,685.758 1791.77,685.758 1792.33,685.758 1792.89,685.758 1793.45,685.758 1794.01,685.758 1794.57,685.758 1795.13,685.758 1795.69,685.758 1796.25,685.758 1796.8,685.758 1797.36,685.758 1797.92,685.758 1798.48,685.758 1799.04,685.758 1799.6,685.758 1800.16,685.758 1800.72,685.758 1801.28,685.758 1801.84,685.758 1802.4,685.758 1802.96,685.758 1803.52,685.758 1804.08,685.758 1804.63,685.758 1805.19,685.758 1805.75,685.758 1806.31,685.758 1806.87,685.758 1807.43,685.758 1807.99,685.758 1808.55,685.758 1809.11,685.758 1809.67,685.758 1810.23,685.758 1810.79,685.758 1811.35,685.758 1811.9,685.758 1812.46,685.758 1813.02,685.758 1813.58,685.758 1814.14,685.758 1814.7,685.758 1815.26,685.758 1815.82,685.758 1816.38,685.758 1816.94,685.758 1817.5,685.758 1818.06,685.758 1818.62,685.758 1819.18,685.758 1819.73,685.758 1820.29,685.758 1820.85,685.758 1821.41,685.758 1821.97,685.758 1822.53,685.758 1823.09,685.758 1823.65,685.758 1824.21,685.758 1824.77,685.758 1825.33,685.758 1825.89,685.758 1826.45,685.758 1827,685.758 1827.56,685.758 1828.12,685.758 1828.68,685.758 1829.24,685.758 1829.8,685.758 1830.36,685.758 1830.92,685.758 1831.48,685.758 1832.04,685.758 1832.6,685.758 1833.16,685.758 1833.72,685.758 1834.27,685.758 1834.83,685.758 1835.39,685.758 1835.95,685.758 1836.51,685.758 1837.07,685.758 1837.63,685.758 1838.19,685.758 \"/>\n<path clip-path=\"url(#clip793)\" d=\"M720.247 683.74 L720.806 683.74 L721.365 683.74 L721.924 683.74 L722.484 683.74 L723.043 683.74 L723.602 683.74 L724.161 683.74 L724.721 683.74 L725.28 683.74 L725.839 683.74 L726.398 683.74 L726.958 683.74 L727.517 683.74 L728.076 683.74 L728.635 683.74 L729.195 683.74 L729.754 683.74 L730.313 683.74 L730.872 683.74 L731.432 683.74 L731.991 683.74 L732.55 683.74 L733.109 683.74 L733.669 683.74 L734.228 683.74 L734.787 683.74 L735.346 683.74 L735.906 683.74 L736.465 683.74 L737.024 683.74 L737.583 683.74 L738.143 683.74 L738.702 683.74 L739.261 683.74 L739.82 683.74 L740.38 683.74 L740.939 683.74 L741.498 683.74 L742.057 683.74 L742.617 683.74 L743.176 683.74 L743.735 683.74 L744.294 683.74 L744.854 683.74 L745.413 683.74 L745.972 683.74 L746.531 683.74 L747.091 683.74 L747.65 683.74 L748.209 683.74 L748.768 683.74 L749.328 683.74 L749.887 683.74 L750.446 683.74 L751.005 683.74 L751.565 683.74 L752.124 683.74 L752.683 683.74 L753.242 683.74 L753.802 683.74 L754.361 683.74 L754.92 683.74 L755.479 683.74 L756.039 683.74 L756.598 683.74 L757.157 683.74 L757.716 683.74 L758.276 683.74 L758.835 683.74 L759.394 683.74 L759.953 683.74 L760.513 683.74 L761.072 683.74 L761.631 683.74 L762.19 683.74 L762.75 683.74 L763.309 683.74 L763.868 683.74 L764.427 683.74 L764.987 683.74 L765.546 683.74 L766.105 683.74 L766.664 683.74 L767.224 683.74 L767.783 683.74 L768.342 683.74 L768.901 683.74 L769.461 683.74 L770.02 683.74 L770.579 683.74 L771.138 683.74 L771.698 683.74 L772.257 683.74 L772.816 683.74 L773.375 683.74 L773.935 683.74 L774.494 683.74 L775.053 683.74 L775.612 683.74 L776.172 683.74 L776.731 683.74 L777.29 683.74 L777.849 683.74 L778.409 683.74 L778.968 683.74 L779.527 683.74 L780.086 683.74 L780.646 683.74 L781.205 683.74 L781.764 683.74 L782.323 683.74 L782.883 683.74 L783.442 683.74 L784.001 683.74 L784.56 683.74 L785.12 683.74 L785.679 683.74 L786.238 683.74 L786.797 683.74 L787.357 683.74 L787.916 683.74 L788.475 683.74 L789.034 683.74 L789.594 683.74 L790.153 683.74 L790.712 683.74 L791.271 683.74 L791.831 683.74 L792.39 683.74 L792.949 683.74 L793.508 683.74 L794.068 683.74 L794.627 683.74 L795.186 683.74 L795.745 683.74 L796.305 683.74 L796.864 683.74 L797.423 683.74 L797.982 683.74 L798.542 683.74 L799.101 683.74 L799.66 683.74 L800.219 683.74 L800.779 683.74 L801.338 683.74 L801.897 683.74 L802.456 683.74 L803.016 683.74 L803.575 683.74 L804.134 683.74 L804.693 683.74 L805.253 683.74 L805.812 683.74 L806.371 683.74 L806.931 683.74 L807.49 683.74 L808.049 683.74 L808.608 683.74 L809.168 683.74 L809.727 683.74 L810.286 683.74 L810.845 683.74 L811.405 683.74 L811.964 683.74 L812.523 683.74 L813.082 683.74 L813.642 683.74 L814.201 683.74 L814.76 683.74 L815.319 683.74 L815.879 683.74 L816.438 683.74 L816.997 683.74 L817.556 683.74 L818.116 683.74 L818.675 683.74 L819.234 683.74 L819.793 683.74 L820.353 683.74 L820.912 683.74 L821.471 683.74 L822.03 683.74 L822.59 683.74 L823.149 683.74 L823.708 683.74 L824.267 683.74 L824.827 683.74 L825.386 683.74 L825.945 683.74 L826.504 683.74 L827.064 683.74 L827.623 683.74 L828.182 683.74 L828.741 683.74 L829.301 683.74 L829.86 683.74 L830.419 683.74 L830.978 683.74 L831.538 683.74 L832.097 683.74 L832.656 683.74 L833.215 683.74 L833.775 683.74 L834.334 683.74 L834.893 683.74 L835.452 683.74 L836.012 683.74 L836.571 683.74 L837.13 683.74 L837.689 683.74 L838.249 683.74 L838.808 683.74 L839.367 683.74 L839.926 683.74 L840.486 683.74 L841.045 683.74 L841.604 683.74 L842.163 683.74 L842.723 683.74 L843.282 683.74 L843.841 683.74 L844.4 683.74 L844.96 683.74 L845.519 683.74 L846.078 683.74 L846.637 683.74 L847.197 683.74 L847.756 683.74 L848.315 683.74 L848.874 683.74 L849.434 683.74 L849.993 683.74 L850.552 683.74 L851.111 683.74 L851.671 683.74 L852.23 683.74 L852.789 683.74 L853.348 683.74 L853.908 683.74 L854.467 683.74 L855.026 683.74 L855.585 683.74 L856.145 683.74 L856.704 683.74 L857.263 683.74 L857.822 683.74 L858.382 683.74 L858.941 683.74 L859.5 683.74 L860.059 683.74 L860.619 683.74 L861.178 683.74 L861.737 683.74 L862.296 683.74 L862.856 683.74 L863.415 683.74 L863.974 683.74 L864.533 683.74 L865.093 683.74 L865.652 683.74 L866.211 683.74 L866.77 683.74 L867.33 683.74 L867.889 683.74 L868.448 683.74 L869.007 683.74 L869.567 683.74 L870.126 683.74 L870.685 683.74 L871.244 683.74 L871.804 683.74 L872.363 683.74 L872.922 683.74 L873.481 683.74 L874.041 683.74 L874.6 683.74 L875.159 683.74 L875.718 683.74 L876.278 683.74 L876.837 683.74 L877.396 683.74 L877.955 683.74 L878.515 683.74 L879.074 683.74 L879.633 683.74 L880.192 683.74 L880.752 683.74 L881.311 683.74 L881.87 683.74 L882.429 683.74 L882.989 683.74 L883.548 683.74 L884.107 683.74 L884.666 683.74 L885.226 683.74 L885.785 683.74 L886.344 683.74 L886.903 683.74 L887.463 683.74 L888.022 683.74 L888.581 683.74 L889.14 683.74 L889.7 683.74 L890.259 683.74 L890.818 683.74 L891.377 683.74 L891.937 683.74 L892.496 683.74 L893.055 683.74 L893.614 683.74 L894.174 683.74 L894.733 683.74 L895.292 683.74 L895.851 683.74 L896.411 683.74 L896.97 683.74 L897.529 683.74 L898.088 683.74 L898.648 683.74 L899.207 683.74 L899.766 683.74 L900.325 683.74 L900.885 683.74 L901.444 683.74 L902.003 683.74 L902.562 683.74 L903.122 683.74 L903.681 683.74 L904.24 683.74 L904.799 683.74 L905.359 683.74 L905.918 683.74 L906.477 683.74 L907.036 683.74 L907.596 683.74 L908.155 683.74 L908.714 683.74 L909.273 683.74 L909.833 683.74 L910.392 683.74 L910.951 683.74 L911.51 683.74 L912.07 683.74 L912.629 683.74 L913.188 683.74 L913.747 683.74 L914.307 683.74 L914.866 683.74 L915.425 683.74 L915.984 683.74 L916.544 683.74 L917.103 683.74 L917.662 683.74 L918.221 683.74 L918.781 683.74 L919.34 683.74 L919.899 683.74 L920.458 683.74 L921.018 683.74 L921.577 683.74 L922.136 683.74 L922.695 683.74 L923.255 683.74 L923.814 683.74 L924.373 683.74 L924.932 683.74 L925.492 683.74 L926.051 683.74 L926.61 683.74 L927.169 683.74 L927.729 683.74 L928.288 683.74 L928.847 683.74 L929.406 683.74 L929.966 683.74 L930.525 683.74 L931.084 683.74 L931.644 683.74 L932.203 683.74 L932.762 683.74 L933.321 683.74 L933.881 683.74 L934.44 683.74 L934.999 683.74 L935.558 683.74 L936.118 683.74 L936.677 683.74 L937.236 683.74 L937.795 683.74 L938.355 683.74 L938.914 683.74 L939.473 683.74 L940.032 683.74 L940.592 683.74 L941.151 683.74 L941.71 683.74 L942.269 683.74 L942.829 683.74 L943.388 683.74 L943.947 683.74 L944.506 683.74 L945.066 683.74 L945.625 683.74 L946.184 683.74 L946.743 683.74 L947.303 683.74 L947.862 683.74 L948.421 683.74 L948.98 683.74 L949.54 683.74 L950.099 683.74 L950.658 683.74 L951.217 683.74 L951.777 683.74 L952.336 683.74 L952.895 683.74 L953.454 683.74 L954.014 683.74 L954.573 683.74 L955.132 683.74 L955.691 683.74 L956.251 683.74 L956.81 683.74 L957.369 683.74 L957.928 683.74 L958.488 683.74 L959.047 683.74 L959.606 683.74 L960.165 683.74 L960.725 683.74 L961.284 683.74 L961.843 683.74 L962.402 683.74 L962.962 683.74 L963.521 683.74 L964.08 683.74 L964.639 683.74 L965.199 683.74 L965.758 683.74 L966.317 683.74 L966.876 683.74 L967.436 683.74 L967.995 683.74 L968.554 683.74 L969.113 683.74 L969.673 683.74 L970.232 683.74 L970.791 683.74 L971.35 683.74 L971.91 683.74 L972.469 683.74 L973.028 683.74 L973.587 683.74 L974.147 683.74 L974.706 683.74 L975.265 683.74 L975.824 683.74 L976.384 683.74 L976.943 683.74 L977.502 683.74 L978.061 683.74 L978.621 683.74 L979.18 683.74 L979.739 683.74 L980.298 683.74 L980.858 683.74 L981.417 683.74 L981.976 683.74 L982.535 683.74 L983.095 683.74 L983.654 683.74 L984.213 683.74 L984.772 683.74 L985.332 683.74 L985.891 683.74 L986.45 683.74 L987.009 683.74 L987.569 683.74 L988.128 683.74 L988.687 683.74 L989.246 683.74 L989.806 683.74 L990.365 683.74 L990.924 683.74 L991.483 683.74 L992.043 683.74 L992.602 683.74 L993.161 683.74 L993.72 683.74 L994.28 683.74 L994.839 683.74 L995.398 683.74 L995.957 683.74 L996.517 683.74 L997.076 683.74 L997.635 683.74 L998.194 683.74 L998.754 683.74 L999.313 683.74 L999.872 683.74 L1000.43 683.74 L1000.99 683.74 L1001.55 683.74 L1002.11 683.74 L1002.67 683.74 L1003.23 683.74 L1003.79 683.74 L1004.35 683.74 L1004.91 683.74 L1005.46 683.74 L1006.02 683.74 L1006.58 683.74 L1007.14 683.74 L1007.7 683.74 L1008.26 683.74 L1008.82 683.74 L1009.38 683.74 L1009.94 683.74 L1010.5 683.74 L1011.06 683.74 L1011.62 683.74 L1012.18 683.74 L1012.73 683.74 L1013.29 683.74 L1013.85 683.74 L1014.41 683.74 L1014.97 683.74 L1015.53 683.74 L1016.09 683.74 L1016.65 683.74 L1017.21 683.74 L1017.77 683.74 L1018.33 683.74 L1018.89 683.74 L1019.45 683.74 L1020.01 683.74 L1020.56 683.74 L1021.12 683.74 L1021.68 683.74 L1022.24 683.74 L1022.8 683.74 L1023.36 683.74 L1023.92 683.74 L1024.48 683.74 L1025.04 683.74 L1025.6 683.74 L1026.16 683.74 L1026.72 683.74 L1027.28 683.74 L1027.83 683.74 L1028.39 683.74 L1028.95 683.74 L1029.51 683.74 L1030.07 683.74 L1030.63 683.74 L1031.19 683.74 L1031.75 683.74 L1032.31 683.74 L1032.87 683.74 L1033.43 683.74 L1033.99 683.74 L1034.55 683.74 L1035.1 683.74 L1035.66 683.74 L1036.22 683.74 L1036.78 683.74 L1037.34 683.74 L1037.9 683.74 L1038.46 683.74 L1039.02 683.74 L1039.58 683.74 L1040.14 683.74 L1040.7 683.74 L1041.26 683.74 L1041.82 683.74 L1042.38 683.74 L1042.93 683.74 L1043.49 683.74 L1044.05 683.74 L1044.61 683.74 L1045.17 683.74 L1045.73 683.74 L1046.29 683.74 L1046.85 683.74 L1047.41 683.74 L1047.97 683.74 L1048.53 683.74 L1049.09 683.74 L1049.65 683.74 L1050.2 683.74 L1050.76 683.74 L1051.32 683.74 L1051.88 683.74 L1052.44 683.74 L1053 683.74 L1053.56 683.74 L1054.12 683.74 L1054.68 683.74 L1055.24 683.74 L1055.8 683.74 L1056.36 683.74 L1056.92 683.74 L1057.48 683.74 L1058.03 683.74 L1058.59 683.74 L1059.15 683.74 L1059.71 683.74 L1060.27 683.74 L1060.83 683.74 L1061.39 683.74 L1061.95 683.74 L1062.51 683.74 L1063.07 683.74 L1063.63 683.74 L1064.19 683.74 L1064.75 683.74 L1065.3 683.74 L1065.86 683.74 L1066.42 683.74 L1066.98 683.74 L1067.54 683.74 L1068.1 683.74 L1068.66 683.74 L1069.22 683.74 L1069.78 683.74 L1070.34 683.74 L1070.9 683.74 L1071.46 683.74 L1072.02 683.74 L1072.57 683.74 L1073.13 683.74 L1073.69 683.74 L1074.25 683.74 L1074.81 683.74 L1075.37 683.74 L1075.93 683.74 L1076.49 683.74 L1077.05 683.74 L1077.61 683.74 L1078.17 683.74 L1078.73 683.74 L1079.29 683.74 L1079.85 683.74 L1080.4 683.74 L1080.96 683.74 L1081.52 683.74 L1082.08 683.74 L1082.64 683.74 L1083.2 683.74 L1083.76 683.74 L1084.32 683.74 L1084.88 683.74 L1085.44 683.74 L1086 683.74 L1086.56 683.74 L1087.12 683.74 L1087.67 683.74 L1088.23 683.74 L1088.79 683.74 L1089.35 683.74 L1089.91 683.74 L1090.47 683.74 L1091.03 683.74 L1091.59 683.74 L1092.15 683.74 L1092.71 683.74 L1093.27 683.74 L1093.83 683.74 L1094.39 683.74 L1094.94 683.74 L1095.5 683.74 L1096.06 683.74 L1096.62 683.74 L1097.18 683.74 L1097.74 683.74 L1098.3 683.74 L1098.86 683.74 L1099.42 683.74 L1099.98 683.74 L1100.54 683.74 L1101.1 683.74 L1101.66 683.74 L1102.22 683.74 L1102.77 683.74 L1103.33 683.74 L1103.89 683.74 L1104.45 683.74 L1105.01 683.74 L1105.57 683.74 L1106.13 683.74 L1106.69 683.74 L1107.25 683.74 L1107.81 683.74 L1108.37 683.74 L1108.93 683.74 L1109.49 683.74 L1110.04 683.74 L1110.6 683.74 L1111.16 683.74 L1111.72 683.74 L1112.28 683.74 L1112.84 683.74 L1113.4 683.74 L1113.96 683.74 L1114.52 683.74 L1115.08 683.74 L1115.64 683.74 L1116.2 683.74 L1116.76 683.74 L1117.31 683.74 L1117.87 683.74 L1118.43 683.74 L1118.99 683.74 L1119.55 683.74 L1120.11 683.74 L1120.67 683.74 L1121.23 683.74 L1121.79 683.74 L1122.35 683.74 L1122.91 683.74 L1123.47 683.74 L1124.03 683.74 L1124.59 683.74 L1125.14 683.74 L1125.7 683.74 L1126.26 683.74 L1126.82 683.74 L1127.38 683.74 L1127.94 683.74 L1128.5 683.74 L1129.06 683.74 L1129.62 683.74 L1130.18 683.74 L1130.74 683.74 L1131.3 683.74 L1131.86 683.74 L1132.41 683.74 L1132.97 683.74 L1133.53 683.74 L1134.09 683.74 L1134.65 683.74 L1135.21 683.74 L1135.77 683.74 L1136.33 683.74 L1136.89 683.74 L1137.45 683.74 L1138.01 683.74 L1138.57 683.74 L1139.13 683.74 L1139.68 683.74 L1140.24 683.74 L1140.8 683.74 L1141.36 683.74 L1141.92 683.74 L1142.48 683.74 L1143.04 683.74 L1143.6 683.74 L1144.16 683.74 L1144.72 683.74 L1145.28 683.74 L1145.84 683.74 L1146.4 683.74 L1146.96 683.74 L1147.51 683.74 L1148.07 683.74 L1148.63 683.74 L1149.19 683.74 L1149.75 683.74 L1150.31 683.74 L1150.87 683.74 L1151.43 683.74 L1151.99 683.74 L1152.55 683.74 L1153.11 683.74 L1153.67 683.74 L1154.23 683.74 L1154.78 683.74 L1155.34 683.74 L1155.9 683.74 L1156.46 683.74 L1157.02 683.74 L1157.58 683.74 L1158.14 683.74 L1158.7 683.74 L1159.26 683.74 L1159.82 683.74 L1160.38 683.74 L1160.94 683.74 L1161.5 683.74 L1162.05 683.74 L1162.61 683.74 L1163.17 683.74 L1163.73 683.74 L1164.29 683.74 L1164.85 683.74 L1165.41 683.74 L1165.97 683.74 L1166.53 683.74 L1167.09 683.74 L1167.65 683.74 L1168.21 683.74 L1168.77 683.74 L1169.33 683.74 L1169.88 683.74 L1170.44 683.74 L1171 683.74 L1171.56 683.74 L1172.12 683.74 L1172.68 683.74 L1173.24 683.74 L1173.8 683.74 L1174.36 683.74 L1174.92 683.74 L1175.48 683.74 L1176.04 683.74 L1176.6 683.74 L1177.15 683.74 L1177.71 683.74 L1178.27 683.74 L1178.83 683.74 L1179.39 683.74 L1179.95 683.74 L1180.51 683.74 L1181.07 683.74 L1181.63 683.74 L1182.19 683.74 L1182.75 683.74 L1183.31 683.74 L1183.87 683.74 L1184.43 683.74 L1184.98 683.74 L1185.54 683.74 L1186.1 683.74 L1186.66 683.74 L1187.22 683.74 L1187.78 683.74 L1188.34 683.74 L1188.9 683.74 L1189.46 683.74 L1190.02 683.74 L1190.58 683.74 L1191.14 683.74 L1191.7 683.74 L1192.25 683.74 L1192.81 683.74 L1193.37 683.74 L1193.93 683.74 L1194.49 683.74 L1195.05 683.74 L1195.61 683.74 L1196.17 683.74 L1196.73 683.74 L1197.29 683.74 L1197.85 683.74 L1198.41 683.74 L1198.97 683.74 L1199.52 683.74 L1200.08 683.74 L1200.64 683.74 L1201.2 683.74 L1201.76 683.74 L1202.32 683.74 L1202.88 683.74 L1203.44 683.74 L1204 683.74 L1204.56 683.74 L1205.12 683.74 L1205.68 683.74 L1206.24 683.74 L1206.8 683.74 L1207.35 683.74 L1207.91 683.74 L1208.47 683.74 L1209.03 683.74 L1209.59 683.74 L1210.15 683.74 L1210.71 683.74 L1211.27 683.74 L1211.83 683.74 L1212.39 683.74 L1212.95 683.74 L1213.51 683.74 L1214.07 683.74 L1214.62 683.74 L1215.18 683.74 L1215.74 683.74 L1216.3 683.74 L1216.86 683.74 L1217.42 683.74 L1217.98 683.74 L1218.54 683.74 L1219.1 683.74 L1219.66 683.74 L1220.22 683.74 L1220.78 683.74 L1221.34 683.74 L1221.89 683.74 L1222.45 683.74 L1223.01 683.74 L1223.57 683.74 L1224.13 683.74 L1224.69 683.74 L1225.25 683.74 L1225.81 683.74 L1226.37 683.74 L1226.93 683.74 L1227.49 683.74 L1228.05 683.74 L1228.61 683.74 L1229.17 683.74 L1229.72 683.74 L1230.28 683.74 L1230.84 683.74 L1231.4 683.74 L1231.96 683.74 L1232.52 683.74 L1233.08 683.74 L1233.64 683.74 L1234.2 683.74 L1234.76 683.74 L1235.32 683.74 L1235.88 683.74 L1236.44 683.74 L1236.99 683.74 L1237.55 683.74 L1238.11 683.74 L1238.67 683.74 L1239.23 683.74 L1239.79 683.74 L1240.35 683.74 L1240.91 683.74 L1241.47 683.74 L1242.03 683.74 L1242.59 683.74 L1243.15 683.74 L1243.71 683.74 L1244.26 683.74 L1244.82 683.74 L1245.38 683.74 L1245.94 683.74 L1246.5 683.74 L1247.06 683.74 L1247.62 683.74 L1248.18 683.74 L1248.74 683.74 L1249.3 683.74 L1249.86 683.74 L1250.42 683.74 L1250.98 683.74 L1251.54 683.74 L1252.09 683.74 L1252.65 683.74 L1253.21 683.74 L1253.77 683.74 L1254.33 683.74 L1254.89 683.74 L1255.45 683.74 L1256.01 683.74 L1256.57 683.74 L1257.13 683.74 L1257.69 683.74 L1258.25 683.74 L1258.81 683.74 L1259.36 683.74 L1259.92 683.74 L1260.48 683.74 L1261.04 683.74 L1261.6 683.74 L1262.16 683.74 L1262.72 683.74 L1263.28 683.74 L1263.84 683.74 L1264.4 683.74 L1264.96 683.74 L1265.52 683.74 L1266.08 683.74 L1266.63 683.74 L1267.19 683.74 L1267.75 683.74 L1268.31 683.74 L1268.87 683.74 L1269.43 683.74 L1269.99 683.74 L1270.55 683.74 L1271.11 683.74 L1271.67 683.74 L1272.23 683.74 L1272.79 683.74 L1273.35 683.74 L1273.91 683.74 L1274.46 683.74 L1275.02 683.74 L1275.58 683.74 L1276.14 683.74 L1276.7 683.74 L1277.26 683.74 L1277.82 683.74 L1278.38 683.74 L1278.94 683.74 L1279.5 683.74 L1280.06 683.74 L1280.62 683.74 L1281.18 683.74 L1281.73 683.74 L1282.29 683.74 L1282.85 683.74 L1283.41 683.74 L1283.97 683.74 L1284.53 683.74 L1285.09 683.74 L1285.65 683.74 L1286.21 683.74 L1286.77 683.74 L1287.33 683.74 L1287.89 683.74 L1288.45 683.74 L1289 683.74 L1289.56 683.74 L1290.12 683.74 L1290.68 683.74 L1291.24 683.74 L1291.8 683.74 L1292.36 683.74 L1292.92 683.74 L1293.48 683.74 L1294.04 683.74 L1294.6 683.74 L1295.16 683.74 L1295.72 683.74 L1296.28 683.74 L1296.83 683.74 L1297.39 683.74 L1297.95 683.74 L1298.51 683.74 L1299.07 683.74 L1299.63 683.74 L1300.19 683.74 L1300.75 683.74 L1301.31 683.74 L1301.87 683.74 L1302.43 683.74 L1302.99 683.74 L1303.55 683.74 L1304.1 683.74 L1304.66 683.74 L1305.22 683.74 L1305.78 683.74 L1306.34 683.74 L1306.9 683.74 L1307.46 683.74 L1308.02 683.74 L1308.58 683.74 L1309.14 683.74 L1309.7 683.74 L1310.26 683.74 L1310.82 683.74 L1311.38 683.74 L1311.93 683.74 L1312.49 683.74 L1313.05 683.74 L1313.61 683.74 L1314.17 683.74 L1314.73 683.74 L1315.29 683.74 L1315.85 683.74 L1316.41 683.74 L1316.97 683.74 L1317.53 683.74 L1318.09 683.74 L1318.65 683.74 L1319.2 683.74 L1319.76 683.74 L1320.32 683.74 L1320.88 683.74 L1321.44 683.74 L1322 683.74 L1322.56 683.74 L1323.12 683.74 L1323.68 683.74 L1324.24 683.74 L1324.8 683.74 L1325.36 683.74 L1325.92 683.74 L1326.47 683.74 L1327.03 683.74 L1327.59 683.74 L1328.15 683.74 L1328.71 683.74 L1329.27 683.74 L1329.83 683.74 L1330.39 683.74 L1330.95 683.74 L1331.51 683.74 L1332.07 683.74 L1332.63 683.74 L1333.19 683.74 L1333.75 683.74 L1334.3 683.74 L1334.86 683.74 L1335.42 683.74 L1335.98 683.74 L1336.54 683.74 L1337.1 683.74 L1337.66 683.74 L1338.22 683.74 L1338.78 683.74 L1339.34 683.74 L1339.9 683.74 L1340.46 683.74 L1341.02 683.74 L1341.57 683.74 L1342.13 683.74 L1342.69 683.74 L1343.25 683.74 L1343.81 683.74 L1344.37 683.74 L1344.93 683.74 L1345.49 683.74 L1346.05 683.74 L1346.61 683.74 L1347.17 683.74 L1347.73 683.74 L1348.29 683.74 L1348.84 683.74 L1349.4 683.74 L1349.96 683.74 L1350.52 683.74 L1351.08 683.74 L1351.64 683.74 L1352.2 683.74 L1352.76 683.74 L1353.32 683.74 L1353.88 683.74 L1354.44 683.74 L1355 683.74 L1355.56 683.74 L1356.12 683.74 L1356.67 683.74 L1357.23 683.74 L1357.79 683.74 L1358.35 683.74 L1358.91 683.74 L1359.47 683.74 L1360.03 683.74 L1360.59 683.74 L1361.15 683.74 L1361.71 683.74 L1362.27 683.74 L1362.83 683.74 L1363.39 683.74 L1363.94 683.74 L1364.5 683.74 L1365.06 683.74 L1365.62 683.74 L1366.18 683.74 L1366.74 683.74 L1367.3 683.74 L1367.86 683.74 L1368.42 683.74 L1368.98 683.74 L1369.54 683.74 L1370.1 683.74 L1370.66 683.74 L1371.21 683.74 L1371.77 683.74 L1372.33 683.74 L1372.89 683.74 L1373.45 683.74 L1374.01 683.74 L1374.57 683.74 L1375.13 683.74 L1375.69 683.74 L1376.25 683.74 L1376.81 683.74 L1377.37 683.74 L1377.93 683.74 L1378.49 683.74 L1379.04 683.74 L1379.6 683.74 L1380.16 683.74 L1380.72 683.74 L1381.28 683.74 L1381.84 683.74 L1382.4 683.74 L1382.96 683.74 L1383.52 683.74 L1384.08 683.74 L1384.64 683.74 L1385.2 683.74 L1385.76 683.74 L1386.31 683.74 L1386.87 683.74 L1387.43 683.74 L1387.99 683.74 L1388.55 683.74 L1389.11 683.74 L1389.67 683.74 L1390.23 683.74 L1390.79 683.74 L1391.35 683.74 L1391.91 683.74 L1392.47 683.74 L1393.03 683.74 L1393.58 683.74 L1394.14 683.74 L1394.7 683.74 L1395.26 683.74 L1395.82 683.74 L1396.38 683.74 L1396.94 683.74 L1397.5 683.74 L1398.06 683.74 L1398.62 683.74 L1399.18 683.74 L1399.74 683.74 L1400.3 683.74 L1400.86 683.74 L1401.41 683.74 L1401.97 683.74 L1402.53 683.74 L1403.09 683.74 L1403.65 683.74 L1404.21 683.74 L1404.77 683.74 L1405.33 683.74 L1405.89 683.74 L1406.45 683.74 L1407.01 683.74 L1407.57 683.74 L1408.13 683.74 L1408.68 683.74 L1409.24 683.74 L1409.8 683.74 L1410.36 683.74 L1410.92 683.74 L1411.48 683.74 L1412.04 683.74 L1412.6 683.74 L1413.16 683.74 L1413.72 683.74 L1414.28 683.74 L1414.84 683.74 L1415.4 683.74 L1415.95 683.74 L1416.51 683.74 L1417.07 683.74 L1417.63 683.74 L1418.19 683.74 L1418.75 683.74 L1419.31 683.74 L1419.87 683.74 L1420.43 683.74 L1420.99 683.74 L1421.55 683.74 L1422.11 683.74 L1422.67 683.74 L1423.23 683.74 L1423.78 683.74 L1424.34 683.74 L1424.9 683.74 L1425.46 683.74 L1426.02 683.74 L1426.58 683.74 L1427.14 683.74 L1427.7 683.74 L1428.26 683.74 L1428.82 683.74 L1429.38 683.74 L1429.94 683.74 L1430.5 683.74 L1431.05 683.74 L1431.61 683.74 L1432.17 683.74 L1432.73 683.74 L1433.29 683.74 L1433.85 683.74 L1434.41 683.74 L1434.97 683.74 L1435.53 683.74 L1436.09 683.74 L1436.65 683.74 L1437.21 683.74 L1437.77 683.74 L1438.33 683.74 L1438.88 683.74 L1439.44 683.74 L1440 683.74 L1440.56 683.74 L1441.12 683.74 L1441.68 683.74 L1442.24 683.74 L1442.8 683.74 L1443.36 683.74 L1443.92 683.74 L1444.48 683.74 L1445.04 683.74 L1445.6 683.74 L1446.15 683.74 L1446.71 683.74 L1447.27 683.74 L1447.83 683.74 L1448.39 683.74 L1448.95 683.74 L1449.51 683.74 L1450.07 683.74 L1450.63 683.74 L1451.19 683.74 L1451.75 683.74 L1452.31 683.74 L1452.87 683.74 L1453.42 683.74 L1453.98 683.74 L1454.54 683.74 L1455.1 683.74 L1455.66 683.74 L1456.22 683.74 L1456.78 683.74 L1457.34 683.74 L1457.9 683.74 L1458.46 683.74 L1459.02 683.74 L1459.58 683.74 L1460.14 683.74 L1460.7 683.74 L1461.25 683.74 L1461.81 683.74 L1462.37 683.74 L1462.93 683.74 L1463.49 683.74 L1464.05 683.74 L1464.61 683.74 L1465.17 683.74 L1465.73 683.74 L1466.29 683.74 L1466.85 683.74 L1467.41 683.74 L1467.97 683.74 L1468.52 683.74 L1469.08 683.74 L1469.64 683.74 L1470.2 683.74 L1470.76 683.74 L1471.32 683.74 L1471.88 683.74 L1472.44 683.74 L1473 683.74 L1473.56 683.74 L1474.12 683.74 L1474.68 683.74 L1475.24 683.74 L1475.79 683.74 L1476.35 683.74 L1476.91 683.74 L1477.47 683.74 L1478.03 683.74 L1478.59 683.74 L1479.15 683.74 L1479.71 683.74 L1480.27 683.74 L1480.83 683.74 L1481.39 683.74 L1481.95 683.74 L1482.51 683.74 L1483.07 683.74 L1483.62 683.74 L1484.18 683.74 L1484.74 683.74 L1485.3 683.74 L1485.86 683.74 L1486.42 683.74 L1486.98 683.74 L1487.54 683.74 L1488.1 683.74 L1488.66 683.74 L1489.22 683.74 L1489.78 683.74 L1490.34 683.74 L1490.89 683.74 L1491.45 683.74 L1492.01 683.74 L1492.57 683.74 L1493.13 683.74 L1493.69 683.74 L1494.25 683.74 L1494.81 683.74 L1495.37 683.74 L1495.93 683.74 L1496.49 683.74 L1497.05 683.74 L1497.61 683.74 L1498.16 683.74 L1498.72 683.74 L1499.28 683.74 L1499.84 683.74 L1500.4 683.74 L1500.96 683.74 L1501.52 683.74 L1502.08 683.74 L1502.64 683.74 L1503.2 683.74 L1503.76 683.74 L1504.32 683.74 L1504.88 683.74 L1505.44 683.74 L1505.99 683.74 L1506.55 683.74 L1507.11 683.74 L1507.67 683.74 L1508.23 683.74 L1508.79 683.74 L1509.35 683.74 L1509.91 683.74 L1510.47 683.74 L1511.03 683.74 L1511.59 683.74 L1512.15 683.74 L1512.71 683.74 L1513.26 683.74 L1513.82 683.74 L1514.38 683.74 L1514.94 683.74 L1515.5 683.74 L1516.06 683.74 L1516.62 683.74 L1517.18 683.74 L1517.74 683.74 L1518.3 683.74 L1518.86 683.74 L1519.42 683.74 L1519.98 683.74 L1520.53 683.74 L1521.09 683.74 L1521.65 683.74 L1522.21 683.74 L1522.77 683.74 L1523.33 683.74 L1523.89 683.74 L1524.45 683.74 L1525.01 683.74 L1525.57 683.74 L1526.13 683.74 L1526.69 683.74 L1527.25 683.74 L1527.81 683.74 L1528.36 683.74 L1528.92 683.74 L1529.48 683.74 L1530.04 683.74 L1530.6 683.74 L1531.16 683.74 L1531.72 683.74 L1532.28 683.74 L1532.84 683.74 L1533.4 683.74 L1533.96 683.74 L1534.52 683.74 L1535.08 683.74 L1535.63 683.74 L1536.19 683.74 L1536.75 683.74 L1537.31 683.74 L1537.87 683.74 L1538.43 683.74 L1538.99 683.74 L1539.55 683.74 L1540.11 683.74 L1540.67 683.74 L1541.23 683.74 L1541.79 683.74 L1542.35 683.74 L1542.9 683.74 L1543.46 683.74 L1544.02 683.74 L1544.58 683.74 L1545.14 683.74 L1545.7 683.74 L1546.26 683.74 L1546.82 683.74 L1547.38 683.74 L1547.94 683.74 L1548.5 683.74 L1549.06 683.74 L1549.62 683.74 L1550.18 683.74 L1550.73 683.74 L1551.29 683.74 L1551.85 683.74 L1552.41 683.74 L1552.97 683.74 L1553.53 683.74 L1554.09 683.74 L1554.65 683.74 L1555.21 683.74 L1555.77 683.74 L1556.33 683.74 L1556.89 683.74 L1557.45 683.74 L1558 683.74 L1558.56 683.74 L1559.12 683.74 L1559.68 683.74 L1560.24 683.74 L1560.8 683.74 L1561.36 683.74 L1561.92 683.74 L1562.48 683.74 L1563.04 683.74 L1563.6 683.74 L1564.16 683.74 L1564.72 683.74 L1565.28 683.74 L1565.83 683.74 L1566.39 683.74 L1566.95 683.74 L1567.51 683.74 L1568.07 683.74 L1568.63 683.74 L1569.19 683.74 L1569.75 683.74 L1570.31 683.74 L1570.87 683.74 L1571.43 683.74 L1571.99 683.74 L1572.55 683.74 L1573.1 683.74 L1573.66 683.74 L1574.22 683.74 L1574.78 683.74 L1575.34 683.74 L1575.9 683.74 L1576.46 683.74 L1577.02 683.74 L1577.58 683.74 L1578.14 683.74 L1578.7 683.74 L1579.26 683.74 L1579.82 683.74 L1580.37 683.74 L1580.93 683.74 L1581.49 683.74 L1582.05 683.74 L1582.61 683.74 L1583.17 683.74 L1583.73 683.74 L1584.29 683.74 L1584.85 683.74 L1585.41 683.74 L1585.97 683.74 L1586.53 683.74 L1587.09 683.74 L1587.65 683.74 L1588.2 683.74 L1588.76 683.74 L1589.32 683.74 L1589.88 683.74 L1590.44 683.74 L1591 683.74 L1591.56 683.74 L1592.12 683.74 L1592.68 683.74 L1593.24 683.74 L1593.8 683.74 L1594.36 683.74 L1594.92 683.74 L1595.47 683.74 L1596.03 683.74 L1596.59 683.74 L1597.15 683.74 L1597.71 683.74 L1598.27 683.74 L1598.83 683.74 L1599.39 683.74 L1599.95 683.74 L1600.51 683.74 L1601.07 683.74 L1601.63 683.74 L1602.19 683.74 L1602.74 683.74 L1603.3 683.74 L1603.86 683.74 L1604.42 683.74 L1604.98 683.74 L1605.54 683.74 L1606.1 683.74 L1606.66 683.74 L1607.22 683.74 L1607.78 683.74 L1608.34 683.74 L1608.9 683.74 L1609.46 683.74 L1610.02 683.74 L1610.57 683.74 L1611.13 683.74 L1611.69 683.74 L1612.25 683.74 L1612.81 683.74 L1613.37 683.74 L1613.93 683.74 L1614.49 683.74 L1615.05 683.74 L1615.61 683.74 L1616.17 683.74 L1616.73 683.74 L1617.29 683.74 L1617.84 683.74 L1618.4 683.74 L1618.96 683.74 L1619.52 683.74 L1620.08 683.74 L1620.64 683.74 L1621.2 683.74 L1621.76 683.74 L1622.32 683.74 L1622.88 683.74 L1623.44 683.74 L1624 683.74 L1624.56 683.74 L1625.11 683.74 L1625.67 683.74 L1626.23 683.74 L1626.79 683.74 L1627.35 683.74 L1627.91 683.74 L1628.47 683.74 L1629.03 683.74 L1629.59 683.74 L1630.15 683.74 L1630.71 683.74 L1631.27 683.74 L1631.83 683.74 L1632.39 683.74 L1632.94 683.74 L1633.5 683.74 L1634.06 683.74 L1634.62 683.74 L1635.18 683.74 L1635.74 683.74 L1636.3 683.74 L1636.86 683.74 L1637.42 683.74 L1637.98 683.74 L1638.54 683.74 L1639.1 683.74 L1639.66 683.74 L1640.21 683.74 L1640.77 683.74 L1641.33 683.74 L1641.89 683.74 L1642.45 683.74 L1643.01 683.74 L1643.57 683.74 L1644.13 683.74 L1644.69 683.74 L1645.25 683.74 L1645.81 683.74 L1646.37 683.74 L1646.93 683.74 L1647.48 683.74 L1648.04 683.74 L1648.6 683.74 L1649.16 683.74 L1649.72 683.74 L1650.28 683.74 L1650.84 683.74 L1651.4 683.74 L1651.96 683.74 L1652.52 683.74 L1653.08 683.74 L1653.64 683.74 L1654.2 683.74 L1654.76 683.74 L1655.31 683.74 L1655.87 683.74 L1656.43 683.74 L1656.99 683.74 L1657.55 683.74 L1658.11 683.74 L1658.67 683.74 L1659.23 683.74 L1659.79 683.74 L1660.35 683.74 L1660.91 683.74 L1661.47 683.74 L1662.03 683.74 L1662.58 683.74 L1663.14 683.74 L1663.7 683.74 L1664.26 683.74 L1664.82 683.74 L1665.38 683.74 L1665.94 683.74 L1666.5 683.74 L1667.06 683.74 L1667.62 683.74 L1668.18 683.74 L1668.74 683.74 L1669.3 683.74 L1669.85 683.74 L1670.41 683.74 L1670.97 683.74 L1671.53 683.74 L1672.09 683.74 L1672.65 683.74 L1673.21 683.74 L1673.77 683.74 L1674.33 683.74 L1674.89 683.74 L1675.45 683.74 L1676.01 683.74 L1676.57 683.74 L1677.13 683.74 L1677.68 683.74 L1678.24 683.74 L1678.8 683.74 L1679.36 683.74 L1679.92 683.74 L1680.48 683.74 L1681.04 683.74 L1681.6 683.74 L1682.16 683.74 L1682.72 683.74 L1683.28 683.74 L1683.84 683.74 L1684.4 683.74 L1684.95 683.74 L1685.51 683.74 L1686.07 683.74 L1686.63 683.74 L1687.19 683.74 L1687.75 683.74 L1688.31 683.74 L1688.87 683.74 L1689.43 683.74 L1689.99 683.74 L1690.55 683.74 L1691.11 683.74 L1691.67 683.74 L1692.23 683.74 L1692.78 683.74 L1693.34 683.74 L1693.9 683.74 L1694.46 683.74 L1695.02 683.74 L1695.58 683.74 L1696.14 683.74 L1696.7 683.74 L1697.26 683.74 L1697.82 683.74 L1698.38 683.74 L1698.94 683.74 L1699.5 683.74 L1700.05 683.74 L1700.61 683.74 L1701.17 683.74 L1701.73 683.74 L1702.29 683.74 L1702.85 683.74 L1703.41 683.74 L1703.97 683.74 L1704.53 683.74 L1705.09 683.74 L1705.65 683.74 L1706.21 683.74 L1706.77 683.74 L1707.32 683.74 L1707.88 683.74 L1708.44 683.74 L1709 683.74 L1709.56 683.74 L1710.12 683.74 L1710.68 683.74 L1711.24 683.74 L1711.8 683.74 L1712.36 683.74 L1712.92 683.74 L1713.48 683.74 L1714.04 683.74 L1714.6 683.74 L1715.15 683.74 L1715.71 683.74 L1716.27 683.74 L1716.83 683.74 L1717.39 683.74 L1717.95 683.74 L1718.51 683.74 L1719.07 683.74 L1719.63 683.74 L1720.19 683.74 L1720.75 683.74 L1721.31 683.74 L1721.87 683.74 L1722.42 683.74 L1722.98 683.74 L1723.54 683.74 L1724.1 683.74 L1724.66 683.74 L1725.22 683.74 L1725.78 683.74 L1726.34 683.74 L1726.9 683.74 L1727.46 683.74 L1728.02 683.74 L1728.58 683.74 L1729.14 683.74 L1729.69 683.74 L1730.25 683.74 L1730.81 683.74 L1731.37 683.74 L1731.93 683.74 L1732.49 683.74 L1733.05 683.74 L1733.61 683.74 L1734.17 683.74 L1734.73 683.74 L1735.29 683.74 L1735.85 683.74 L1736.41 683.74 L1736.97 683.74 L1737.52 683.74 L1738.08 683.74 L1738.64 683.74 L1739.2 683.74 L1739.76 683.74 L1740.32 683.74 L1740.88 683.74 L1741.44 683.74 L1742 683.74 L1742.56 683.74 L1743.12 683.74 L1743.68 683.74 L1744.24 683.74 L1744.79 683.74 L1745.35 683.74 L1745.91 683.74 L1746.47 683.74 L1747.03 683.74 L1747.59 683.74 L1748.15 683.74 L1748.71 683.74 L1749.27 683.74 L1749.83 683.74 L1750.39 683.74 L1750.95 683.74 L1751.51 683.74 L1752.06 683.74 L1752.62 683.74 L1753.18 683.74 L1753.74 683.74 L1754.3 683.74 L1754.86 683.74 L1755.42 683.74 L1755.98 683.74 L1756.54 683.74 L1757.1 683.74 L1757.66 683.74 L1758.22 683.74 L1758.78 683.74 L1759.34 683.74 L1759.89 683.74 L1760.45 683.74 L1761.01 683.74 L1761.57 683.74 L1762.13 683.74 L1762.69 683.74 L1763.25 683.74 L1763.81 683.74 L1764.37 683.74 L1764.93 683.74 L1765.49 683.74 L1766.05 683.74 L1766.61 683.74 L1767.16 683.74 L1767.72 683.74 L1768.28 683.74 L1768.84 683.74 L1769.4 683.74 L1769.96 683.74 L1770.52 683.74 L1771.08 683.74 L1771.64 683.74 L1772.2 683.74 L1772.76 683.74 L1773.32 683.74 L1773.88 683.74 L1774.43 683.74 L1774.99 683.74 L1775.55 683.74 L1776.11 683.74 L1776.67 683.74 L1777.23 683.74 L1777.79 683.74 L1778.35 683.74 L1778.91 683.74 L1779.47 683.74 L1780.03 683.74 L1780.59 683.74 L1781.15 683.74 L1781.71 683.74 L1782.26 683.74 L1782.82 683.74 L1783.38 683.74 L1783.94 683.74 L1784.5 683.74 L1785.06 683.74 L1785.62 683.74 L1786.18 683.74 L1786.74 683.74 L1787.3 683.74 L1787.86 683.74 L1788.42 683.74 L1788.98 683.74 L1789.53 683.74 L1790.09 683.74 L1790.65 683.74 L1791.21 683.74 L1791.77 683.74 L1792.33 683.74 L1792.89 683.74 L1793.45 683.74 L1794.01 683.74 L1794.57 683.74 L1795.13 683.74 L1795.69 683.74 L1796.25 683.74 L1796.8 683.74 L1797.36 683.74 L1797.92 683.74 L1798.48 683.74 L1799.04 683.74 L1799.6 683.74 L1800.16 683.74 L1800.72 683.74 L1801.28 683.74 L1801.84 683.74 L1802.4 683.74 L1802.96 683.74 L1803.52 683.74 L1804.08 683.74 L1804.63 683.74 L1805.19 683.74 L1805.75 683.74 L1806.31 683.74 L1806.87 683.74 L1807.43 683.74 L1807.99 683.74 L1808.55 683.74 L1809.11 683.74 L1809.67 683.74 L1810.23 683.74 L1810.79 683.74 L1811.35 683.74 L1811.9 683.74 L1812.46 683.74 L1813.02 683.74 L1813.58 683.74 L1814.14 683.74 L1814.7 683.74 L1815.26 683.74 L1815.82 683.74 L1816.38 683.74 L1816.94 683.74 L1817.5 683.74 L1818.06 683.74 L1818.62 683.74 L1819.18 683.74 L1819.73 683.74 L1820.29 683.74 L1820.85 683.74 L1821.41 683.74 L1821.97 683.74 L1822.53 683.74 L1823.09 683.74 L1823.65 683.74 L1824.21 683.74 L1824.77 683.74 L1825.33 683.74 L1825.89 683.74 L1826.45 683.74 L1827 683.74 L1827.56 683.74 L1828.12 683.74 L1828.68 683.74 L1829.24 683.74 L1829.8 683.74 L1830.36 683.74 L1830.92 683.74 L1831.48 683.74 L1832.04 683.74 L1832.6 683.74 L1833.16 683.74 L1833.72 683.74 L1834.27 683.74 L1834.83 683.74 L1835.39 683.74 L1835.95 683.74 L1836.51 683.74 L1837.07 683.74 L1837.63 683.74 L1838.19 683.74 L1838.19 681.947 L1837.63 681.947 L1837.07 681.947 L1836.51 681.947 L1835.95 681.947 L1835.39 681.947 L1834.83 681.947 L1834.27 681.947 L1833.72 681.947 L1833.16 681.947 L1832.6 681.947 L1832.04 681.947 L1831.48 681.947 L1830.92 681.947 L1830.36 681.947 L1829.8 681.947 L1829.24 681.947 L1828.68 681.947 L1828.12 681.947 L1827.56 681.947 L1827 681.947 L1826.45 681.947 L1825.89 681.947 L1825.33 681.947 L1824.77 681.947 L1824.21 681.947 L1823.65 681.947 L1823.09 681.947 L1822.53 681.947 L1821.97 681.947 L1821.41 681.947 L1820.85 681.947 L1820.29 681.947 L1819.73 681.947 L1819.18 681.947 L1818.62 681.947 L1818.06 681.947 L1817.5 681.947 L1816.94 681.947 L1816.38 681.947 L1815.82 681.947 L1815.26 681.947 L1814.7 681.947 L1814.14 681.947 L1813.58 681.947 L1813.02 681.947 L1812.46 681.947 L1811.9 681.947 L1811.35 681.947 L1810.79 681.947 L1810.23 681.947 L1809.67 681.947 L1809.11 681.947 L1808.55 681.947 L1807.99 681.947 L1807.43 681.947 L1806.87 681.947 L1806.31 681.947 L1805.75 681.947 L1805.19 681.947 L1804.63 681.947 L1804.08 681.947 L1803.52 681.947 L1802.96 681.947 L1802.4 681.947 L1801.84 681.947 L1801.28 681.947 L1800.72 681.947 L1800.16 681.947 L1799.6 681.947 L1799.04 681.947 L1798.48 681.947 L1797.92 681.947 L1797.36 681.947 L1796.8 681.947 L1796.25 681.947 L1795.69 681.947 L1795.13 681.947 L1794.57 681.947 L1794.01 681.947 L1793.45 681.947 L1792.89 681.947 L1792.33 681.947 L1791.77 681.947 L1791.21 681.947 L1790.65 681.947 L1790.09 681.947 L1789.53 681.947 L1788.98 681.947 L1788.42 681.947 L1787.86 681.947 L1787.3 681.947 L1786.74 681.947 L1786.18 681.947 L1785.62 681.947 L1785.06 681.947 L1784.5 681.947 L1783.94 681.947 L1783.38 681.947 L1782.82 681.947 L1782.26 681.947 L1781.71 681.947 L1781.15 681.947 L1780.59 681.947 L1780.03 681.947 L1779.47 681.947 L1778.91 681.947 L1778.35 681.947 L1777.79 681.947 L1777.23 681.947 L1776.67 681.947 L1776.11 681.947 L1775.55 681.947 L1774.99 681.947 L1774.43 681.947 L1773.88 681.947 L1773.32 681.947 L1772.76 681.947 L1772.2 681.947 L1771.64 681.947 L1771.08 681.947 L1770.52 681.947 L1769.96 681.947 L1769.4 681.947 L1768.84 681.947 L1768.28 681.947 L1767.72 681.947 L1767.16 681.947 L1766.61 681.947 L1766.05 681.947 L1765.49 681.947 L1764.93 681.947 L1764.37 681.947 L1763.81 681.947 L1763.25 681.947 L1762.69 681.947 L1762.13 681.947 L1761.57 681.947 L1761.01 681.947 L1760.45 681.947 L1759.89 681.947 L1759.34 681.947 L1758.78 681.947 L1758.22 681.947 L1757.66 681.947 L1757.1 681.947 L1756.54 681.947 L1755.98 681.947 L1755.42 681.947 L1754.86 681.947 L1754.3 681.947 L1753.74 681.947 L1753.18 681.947 L1752.62 681.947 L1752.06 681.947 L1751.51 681.947 L1750.95 681.947 L1750.39 681.947 L1749.83 681.947 L1749.27 681.947 L1748.71 681.947 L1748.15 681.947 L1747.59 681.947 L1747.03 681.947 L1746.47 681.947 L1745.91 681.947 L1745.35 681.947 L1744.79 681.947 L1744.24 681.947 L1743.68 681.947 L1743.12 681.947 L1742.56 681.947 L1742 681.947 L1741.44 681.947 L1740.88 681.947 L1740.32 681.947 L1739.76 681.947 L1739.2 681.947 L1738.64 681.947 L1738.08 681.947 L1737.52 681.947 L1736.97 681.947 L1736.41 681.947 L1735.85 681.947 L1735.29 681.947 L1734.73 681.947 L1734.17 681.947 L1733.61 681.947 L1733.05 681.947 L1732.49 681.947 L1731.93 681.947 L1731.37 681.947 L1730.81 681.947 L1730.25 681.947 L1729.69 681.947 L1729.14 681.947 L1728.58 681.947 L1728.02 681.947 L1727.46 681.947 L1726.9 681.947 L1726.34 681.947 L1725.78 681.947 L1725.22 681.947 L1724.66 681.947 L1724.1 681.947 L1723.54 681.947 L1722.98 681.947 L1722.42 681.947 L1721.87 681.947 L1721.31 681.947 L1720.75 681.947 L1720.19 681.947 L1719.63 681.947 L1719.07 681.947 L1718.51 681.947 L1717.95 681.947 L1717.39 681.947 L1716.83 681.947 L1716.27 681.947 L1715.71 681.947 L1715.15 681.947 L1714.6 681.947 L1714.04 681.947 L1713.48 681.947 L1712.92 681.947 L1712.36 681.947 L1711.8 681.947 L1711.24 681.947 L1710.68 681.947 L1710.12 681.947 L1709.56 681.947 L1709 681.947 L1708.44 681.947 L1707.88 681.947 L1707.32 681.947 L1706.77 681.947 L1706.21 681.947 L1705.65 681.947 L1705.09 681.947 L1704.53 681.947 L1703.97 681.947 L1703.41 681.947 L1702.85 681.947 L1702.29 681.947 L1701.73 681.947 L1701.17 681.947 L1700.61 681.947 L1700.05 681.947 L1699.5 681.947 L1698.94 681.947 L1698.38 681.947 L1697.82 681.947 L1697.26 681.947 L1696.7 681.947 L1696.14 681.947 L1695.58 681.947 L1695.02 681.947 L1694.46 681.947 L1693.9 681.947 L1693.34 681.947 L1692.78 681.947 L1692.23 681.947 L1691.67 681.947 L1691.11 681.947 L1690.55 681.947 L1689.99 681.947 L1689.43 681.947 L1688.87 681.947 L1688.31 681.947 L1687.75 681.947 L1687.19 681.947 L1686.63 681.947 L1686.07 681.947 L1685.51 681.947 L1684.95 681.947 L1684.4 681.947 L1683.84 681.947 L1683.28 681.947 L1682.72 681.947 L1682.16 681.947 L1681.6 681.947 L1681.04 681.947 L1680.48 681.947 L1679.92 681.947 L1679.36 681.947 L1678.8 681.947 L1678.24 681.947 L1677.68 681.947 L1677.13 681.947 L1676.57 681.947 L1676.01 681.947 L1675.45 681.947 L1674.89 681.947 L1674.33 681.947 L1673.77 681.947 L1673.21 681.947 L1672.65 681.947 L1672.09 681.947 L1671.53 681.947 L1670.97 681.947 L1670.41 681.947 L1669.85 681.947 L1669.3 681.947 L1668.74 681.947 L1668.18 681.947 L1667.62 681.947 L1667.06 681.947 L1666.5 681.947 L1665.94 681.947 L1665.38 681.947 L1664.82 681.947 L1664.26 681.947 L1663.7 681.947 L1663.14 681.947 L1662.58 681.947 L1662.03 681.947 L1661.47 681.947 L1660.91 681.947 L1660.35 681.947 L1659.79 681.947 L1659.23 681.947 L1658.67 681.947 L1658.11 681.947 L1657.55 681.947 L1656.99 681.947 L1656.43 681.947 L1655.87 681.947 L1655.31 681.947 L1654.76 681.947 L1654.2 681.947 L1653.64 681.947 L1653.08 681.947 L1652.52 681.947 L1651.96 681.947 L1651.4 681.947 L1650.84 681.947 L1650.28 681.947 L1649.72 681.947 L1649.16 681.947 L1648.6 681.947 L1648.04 681.947 L1647.48 681.947 L1646.93 681.947 L1646.37 681.947 L1645.81 681.947 L1645.25 681.947 L1644.69 681.947 L1644.13 681.947 L1643.57 681.947 L1643.01 681.947 L1642.45 681.947 L1641.89 681.947 L1641.33 681.947 L1640.77 681.947 L1640.21 681.947 L1639.66 681.947 L1639.1 681.947 L1638.54 681.947 L1637.98 681.947 L1637.42 681.947 L1636.86 681.947 L1636.3 681.947 L1635.74 681.947 L1635.18 681.947 L1634.62 681.947 L1634.06 681.947 L1633.5 681.947 L1632.94 681.947 L1632.39 681.947 L1631.83 681.947 L1631.27 681.947 L1630.71 681.947 L1630.15 681.947 L1629.59 681.947 L1629.03 681.947 L1628.47 681.947 L1627.91 681.947 L1627.35 681.947 L1626.79 681.947 L1626.23 681.947 L1625.67 681.947 L1625.11 681.947 L1624.56 681.947 L1624 681.947 L1623.44 681.947 L1622.88 681.947 L1622.32 681.947 L1621.76 681.947 L1621.2 681.947 L1620.64 681.947 L1620.08 681.947 L1619.52 681.947 L1618.96 681.947 L1618.4 681.947 L1617.84 681.947 L1617.29 681.947 L1616.73 681.947 L1616.17 681.947 L1615.61 681.947 L1615.05 681.947 L1614.49 681.947 L1613.93 681.947 L1613.37 681.947 L1612.81 681.947 L1612.25 681.947 L1611.69 681.947 L1611.13 681.947 L1610.57 681.947 L1610.02 681.947 L1609.46 681.947 L1608.9 681.947 L1608.34 681.947 L1607.78 681.947 L1607.22 681.947 L1606.66 681.947 L1606.1 681.947 L1605.54 681.947 L1604.98 681.947 L1604.42 681.947 L1603.86 681.947 L1603.3 681.947 L1602.74 681.947 L1602.19 681.947 L1601.63 681.947 L1601.07 681.947 L1600.51 681.947 L1599.95 681.947 L1599.39 681.947 L1598.83 681.947 L1598.27 681.947 L1597.71 681.947 L1597.15 681.947 L1596.59 681.947 L1596.03 681.947 L1595.47 681.947 L1594.92 681.947 L1594.36 681.947 L1593.8 681.947 L1593.24 681.947 L1592.68 681.947 L1592.12 681.947 L1591.56 681.947 L1591 681.947 L1590.44 681.947 L1589.88 681.947 L1589.32 681.947 L1588.76 681.947 L1588.2 681.947 L1587.65 681.947 L1587.09 681.947 L1586.53 681.947 L1585.97 681.947 L1585.41 681.947 L1584.85 681.947 L1584.29 681.947 L1583.73 681.947 L1583.17 681.947 L1582.61 681.947 L1582.05 681.947 L1581.49 681.947 L1580.93 681.947 L1580.37 681.947 L1579.82 681.947 L1579.26 681.947 L1578.7 681.947 L1578.14 681.947 L1577.58 681.947 L1577.02 681.947 L1576.46 681.947 L1575.9 681.947 L1575.34 681.947 L1574.78 681.947 L1574.22 681.947 L1573.66 681.947 L1573.1 681.947 L1572.55 681.947 L1571.99 681.947 L1571.43 681.947 L1570.87 681.947 L1570.31 681.947 L1569.75 681.947 L1569.19 681.947 L1568.63 681.947 L1568.07 681.947 L1567.51 681.947 L1566.95 681.947 L1566.39 681.947 L1565.83 681.947 L1565.28 681.947 L1564.72 681.947 L1564.16 681.947 L1563.6 681.947 L1563.04 681.947 L1562.48 681.947 L1561.92 681.947 L1561.36 681.947 L1560.8 681.947 L1560.24 681.947 L1559.68 681.947 L1559.12 681.947 L1558.56 681.947 L1558 681.947 L1557.45 681.947 L1556.89 681.947 L1556.33 681.947 L1555.77 681.947 L1555.21 681.947 L1554.65 681.947 L1554.09 681.947 L1553.53 681.947 L1552.97 681.947 L1552.41 681.947 L1551.85 681.947 L1551.29 681.947 L1550.73 681.947 L1550.18 681.947 L1549.62 681.947 L1549.06 681.947 L1548.5 681.947 L1547.94 681.947 L1547.38 681.947 L1546.82 681.947 L1546.26 681.947 L1545.7 681.947 L1545.14 681.947 L1544.58 681.947 L1544.02 681.947 L1543.46 681.947 L1542.9 681.947 L1542.35 681.947 L1541.79 681.947 L1541.23 681.947 L1540.67 681.947 L1540.11 681.947 L1539.55 681.947 L1538.99 681.947 L1538.43 681.947 L1537.87 681.947 L1537.31 681.947 L1536.75 681.947 L1536.19 681.947 L1535.63 681.947 L1535.08 681.947 L1534.52 681.947 L1533.96 681.947 L1533.4 681.947 L1532.84 681.947 L1532.28 681.947 L1531.72 681.947 L1531.16 681.947 L1530.6 681.947 L1530.04 681.947 L1529.48 681.947 L1528.92 681.947 L1528.36 681.947 L1527.81 681.947 L1527.25 681.947 L1526.69 681.947 L1526.13 681.947 L1525.57 681.947 L1525.01 681.947 L1524.45 681.947 L1523.89 681.947 L1523.33 681.947 L1522.77 681.947 L1522.21 681.947 L1521.65 681.947 L1521.09 681.947 L1520.53 681.947 L1519.98 681.947 L1519.42 681.947 L1518.86 681.947 L1518.3 681.947 L1517.74 681.947 L1517.18 681.947 L1516.62 681.947 L1516.06 681.947 L1515.5 681.947 L1514.94 681.947 L1514.38 681.947 L1513.82 681.947 L1513.26 681.947 L1512.71 681.947 L1512.15 681.947 L1511.59 681.947 L1511.03 681.947 L1510.47 681.947 L1509.91 681.947 L1509.35 681.947 L1508.79 681.947 L1508.23 681.947 L1507.67 681.947 L1507.11 681.947 L1506.55 681.947 L1505.99 681.947 L1505.44 681.947 L1504.88 681.947 L1504.32 681.947 L1503.76 681.947 L1503.2 681.947 L1502.64 681.947 L1502.08 681.947 L1501.52 681.947 L1500.96 681.947 L1500.4 681.947 L1499.84 681.947 L1499.28 681.947 L1498.72 681.947 L1498.16 681.947 L1497.61 681.947 L1497.05 681.947 L1496.49 681.947 L1495.93 681.947 L1495.37 681.947 L1494.81 681.947 L1494.25 681.947 L1493.69 681.947 L1493.13 681.947 L1492.57 681.947 L1492.01 681.947 L1491.45 681.947 L1490.89 681.947 L1490.34 681.947 L1489.78 681.947 L1489.22 681.947 L1488.66 681.947 L1488.1 681.947 L1487.54 681.947 L1486.98 681.947 L1486.42 681.947 L1485.86 681.947 L1485.3 681.947 L1484.74 681.947 L1484.18 681.947 L1483.62 681.947 L1483.07 681.947 L1482.51 681.947 L1481.95 681.947 L1481.39 681.947 L1480.83 681.947 L1480.27 681.947 L1479.71 681.947 L1479.15 681.947 L1478.59 681.947 L1478.03 681.947 L1477.47 681.947 L1476.91 681.947 L1476.35 681.947 L1475.79 681.947 L1475.24 681.947 L1474.68 681.947 L1474.12 681.947 L1473.56 681.947 L1473 681.947 L1472.44 681.947 L1471.88 681.947 L1471.32 681.947 L1470.76 681.947 L1470.2 681.947 L1469.64 681.947 L1469.08 681.947 L1468.52 681.947 L1467.97 681.947 L1467.41 681.947 L1466.85 681.947 L1466.29 681.947 L1465.73 681.947 L1465.17 681.947 L1464.61 681.947 L1464.05 681.947 L1463.49 681.947 L1462.93 681.947 L1462.37 681.947 L1461.81 681.947 L1461.25 681.947 L1460.7 681.947 L1460.14 681.947 L1459.58 681.947 L1459.02 681.947 L1458.46 681.947 L1457.9 681.947 L1457.34 681.947 L1456.78 681.947 L1456.22 681.947 L1455.66 681.947 L1455.1 681.947 L1454.54 681.947 L1453.98 681.947 L1453.42 681.947 L1452.87 681.947 L1452.31 681.947 L1451.75 681.947 L1451.19 681.947 L1450.63 681.947 L1450.07 681.947 L1449.51 681.947 L1448.95 681.947 L1448.39 681.947 L1447.83 681.947 L1447.27 681.947 L1446.71 681.947 L1446.15 681.947 L1445.6 681.947 L1445.04 681.947 L1444.48 681.947 L1443.92 681.947 L1443.36 681.947 L1442.8 681.947 L1442.24 681.947 L1441.68 681.947 L1441.12 681.947 L1440.56 681.947 L1440 681.947 L1439.44 681.947 L1438.88 681.947 L1438.33 681.947 L1437.77 681.947 L1437.21 681.947 L1436.65 681.947 L1436.09 681.947 L1435.53 681.947 L1434.97 681.947 L1434.41 681.947 L1433.85 681.947 L1433.29 681.947 L1432.73 681.947 L1432.17 681.947 L1431.61 681.947 L1431.05 681.947 L1430.5 681.947 L1429.94 681.947 L1429.38 681.947 L1428.82 681.947 L1428.26 681.947 L1427.7 681.947 L1427.14 681.947 L1426.58 681.947 L1426.02 681.947 L1425.46 681.947 L1424.9 681.947 L1424.34 681.947 L1423.78 681.947 L1423.23 681.947 L1422.67 681.947 L1422.11 681.947 L1421.55 681.947 L1420.99 681.947 L1420.43 681.947 L1419.87 681.947 L1419.31 681.947 L1418.75 681.947 L1418.19 681.947 L1417.63 681.947 L1417.07 681.947 L1416.51 681.947 L1415.95 681.947 L1415.4 681.947 L1414.84 681.947 L1414.28 681.947 L1413.72 681.947 L1413.16 681.947 L1412.6 681.947 L1412.04 681.947 L1411.48 681.947 L1410.92 681.947 L1410.36 681.947 L1409.8 681.947 L1409.24 681.947 L1408.68 681.947 L1408.13 681.947 L1407.57 681.947 L1407.01 681.947 L1406.45 681.947 L1405.89 681.947 L1405.33 681.947 L1404.77 681.947 L1404.21 681.947 L1403.65 681.947 L1403.09 681.947 L1402.53 681.947 L1401.97 681.947 L1401.41 681.947 L1400.86 681.947 L1400.3 681.947 L1399.74 681.947 L1399.18 681.947 L1398.62 681.947 L1398.06 681.947 L1397.5 681.947 L1396.94 681.947 L1396.38 681.947 L1395.82 681.947 L1395.26 681.947 L1394.7 681.947 L1394.14 681.947 L1393.58 681.947 L1393.03 681.947 L1392.47 681.947 L1391.91 681.947 L1391.35 681.947 L1390.79 681.947 L1390.23 681.947 L1389.67 681.947 L1389.11 681.947 L1388.55 681.947 L1387.99 681.947 L1387.43 681.947 L1386.87 681.947 L1386.31 681.947 L1385.76 681.947 L1385.2 681.947 L1384.64 681.947 L1384.08 681.947 L1383.52 681.947 L1382.96 681.947 L1382.4 681.947 L1381.84 681.947 L1381.28 681.947 L1380.72 681.947 L1380.16 681.947 L1379.6 681.947 L1379.04 681.947 L1378.49 681.947 L1377.93 681.947 L1377.37 681.947 L1376.81 681.947 L1376.25 681.947 L1375.69 681.947 L1375.13 681.947 L1374.57 681.947 L1374.01 681.947 L1373.45 681.947 L1372.89 681.947 L1372.33 681.947 L1371.77 681.947 L1371.21 681.947 L1370.66 681.947 L1370.1 681.947 L1369.54 681.947 L1368.98 681.947 L1368.42 681.947 L1367.86 681.947 L1367.3 681.947 L1366.74 681.947 L1366.18 681.947 L1365.62 681.947 L1365.06 681.947 L1364.5 681.947 L1363.94 681.947 L1363.39 681.947 L1362.83 681.947 L1362.27 681.947 L1361.71 681.947 L1361.15 681.947 L1360.59 681.947 L1360.03 681.947 L1359.47 681.947 L1358.91 681.947 L1358.35 681.947 L1357.79 681.947 L1357.23 681.947 L1356.67 681.947 L1356.12 681.947 L1355.56 681.947 L1355 681.947 L1354.44 681.947 L1353.88 681.947 L1353.32 681.947 L1352.76 681.947 L1352.2 681.947 L1351.64 681.947 L1351.08 681.947 L1350.52 681.947 L1349.96 681.947 L1349.4 681.947 L1348.84 681.947 L1348.29 681.947 L1347.73 681.947 L1347.17 681.947 L1346.61 681.947 L1346.05 681.947 L1345.49 681.947 L1344.93 681.947 L1344.37 681.947 L1343.81 681.947 L1343.25 681.947 L1342.69 681.947 L1342.13 681.947 L1341.57 681.947 L1341.02 681.947 L1340.46 681.947 L1339.9 681.947 L1339.34 681.947 L1338.78 681.947 L1338.22 681.947 L1337.66 681.947 L1337.1 681.947 L1336.54 681.947 L1335.98 681.947 L1335.42 681.947 L1334.86 681.947 L1334.3 681.947 L1333.75 681.947 L1333.19 681.947 L1332.63 681.947 L1332.07 681.947 L1331.51 681.947 L1330.95 681.947 L1330.39 681.947 L1329.83 681.947 L1329.27 681.947 L1328.71 681.947 L1328.15 681.947 L1327.59 681.947 L1327.03 681.947 L1326.47 681.947 L1325.92 681.947 L1325.36 681.947 L1324.8 681.947 L1324.24 681.947 L1323.68 681.947 L1323.12 681.947 L1322.56 681.947 L1322 681.947 L1321.44 681.947 L1320.88 681.947 L1320.32 681.947 L1319.76 681.947 L1319.2 681.947 L1318.65 681.947 L1318.09 681.947 L1317.53 681.947 L1316.97 681.947 L1316.41 681.947 L1315.85 681.947 L1315.29 681.947 L1314.73 681.947 L1314.17 681.947 L1313.61 681.947 L1313.05 681.947 L1312.49 681.947 L1311.93 681.947 L1311.38 681.947 L1310.82 681.947 L1310.26 681.947 L1309.7 681.947 L1309.14 681.947 L1308.58 681.947 L1308.02 681.947 L1307.46 681.947 L1306.9 681.947 L1306.34 681.947 L1305.78 681.947 L1305.22 681.947 L1304.66 681.947 L1304.1 681.947 L1303.55 681.947 L1302.99 681.947 L1302.43 681.947 L1301.87 681.947 L1301.31 681.947 L1300.75 681.947 L1300.19 681.947 L1299.63 681.947 L1299.07 681.947 L1298.51 681.947 L1297.95 681.947 L1297.39 681.947 L1296.83 681.947 L1296.28 681.947 L1295.72 681.947 L1295.16 681.947 L1294.6 681.947 L1294.04 681.947 L1293.48 681.947 L1292.92 681.947 L1292.36 681.947 L1291.8 681.947 L1291.24 681.947 L1290.68 681.947 L1290.12 681.947 L1289.56 681.947 L1289 681.947 L1288.45 681.947 L1287.89 681.947 L1287.33 681.947 L1286.77 681.947 L1286.21 681.947 L1285.65 681.947 L1285.09 681.947 L1284.53 681.947 L1283.97 681.947 L1283.41 681.947 L1282.85 681.947 L1282.29 681.947 L1281.73 681.947 L1281.18 681.947 L1280.62 681.947 L1280.06 681.947 L1279.5 681.947 L1278.94 681.947 L1278.38 681.947 L1277.82 681.947 L1277.26 681.947 L1276.7 681.947 L1276.14 681.947 L1275.58 681.947 L1275.02 681.947 L1274.46 681.947 L1273.91 681.947 L1273.35 681.947 L1272.79 681.947 L1272.23 681.947 L1271.67 681.947 L1271.11 681.947 L1270.55 681.947 L1269.99 681.947 L1269.43 681.947 L1268.87 681.947 L1268.31 681.947 L1267.75 681.947 L1267.19 681.947 L1266.63 681.947 L1266.08 681.947 L1265.52 681.947 L1264.96 681.947 L1264.4 681.947 L1263.84 681.947 L1263.28 681.947 L1262.72 681.947 L1262.16 681.947 L1261.6 681.947 L1261.04 681.947 L1260.48 681.947 L1259.92 681.947 L1259.36 681.947 L1258.81 681.947 L1258.25 681.947 L1257.69 681.947 L1257.13 681.947 L1256.57 681.947 L1256.01 681.947 L1255.45 681.947 L1254.89 681.947 L1254.33 681.947 L1253.77 681.947 L1253.21 681.947 L1252.65 681.947 L1252.09 681.947 L1251.54 681.947 L1250.98 681.947 L1250.42 681.947 L1249.86 681.947 L1249.3 681.947 L1248.74 681.947 L1248.18 681.947 L1247.62 681.947 L1247.06 681.947 L1246.5 681.947 L1245.94 681.947 L1245.38 681.947 L1244.82 681.947 L1244.26 681.947 L1243.71 681.947 L1243.15 681.947 L1242.59 681.947 L1242.03 681.947 L1241.47 681.947 L1240.91 681.947 L1240.35 681.947 L1239.79 681.947 L1239.23 681.947 L1238.67 681.947 L1238.11 681.947 L1237.55 681.947 L1236.99 681.947 L1236.44 681.947 L1235.88 681.947 L1235.32 681.947 L1234.76 681.947 L1234.2 681.947 L1233.64 681.947 L1233.08 681.947 L1232.52 681.947 L1231.96 681.947 L1231.4 681.947 L1230.84 681.947 L1230.28 681.947 L1229.72 681.947 L1229.17 681.947 L1228.61 681.947 L1228.05 681.947 L1227.49 681.947 L1226.93 681.947 L1226.37 681.947 L1225.81 681.947 L1225.25 681.947 L1224.69 681.947 L1224.13 681.947 L1223.57 681.947 L1223.01 681.947 L1222.45 681.947 L1221.89 681.947 L1221.34 681.947 L1220.78 681.947 L1220.22 681.947 L1219.66 681.947 L1219.1 681.947 L1218.54 681.947 L1217.98 681.947 L1217.42 681.947 L1216.86 681.947 L1216.3 681.947 L1215.74 681.947 L1215.18 681.947 L1214.62 681.947 L1214.07 681.947 L1213.51 681.947 L1212.95 681.947 L1212.39 681.947 L1211.83 681.947 L1211.27 681.947 L1210.71 681.947 L1210.15 681.947 L1209.59 681.947 L1209.03 681.947 L1208.47 681.947 L1207.91 681.947 L1207.35 681.947 L1206.8 681.947 L1206.24 681.947 L1205.68 681.947 L1205.12 681.947 L1204.56 681.947 L1204 681.947 L1203.44 681.947 L1202.88 681.947 L1202.32 681.947 L1201.76 681.947 L1201.2 681.947 L1200.64 681.947 L1200.08 681.947 L1199.52 681.947 L1198.97 681.947 L1198.41 681.947 L1197.85 681.947 L1197.29 681.947 L1196.73 681.947 L1196.17 681.947 L1195.61 681.947 L1195.05 681.947 L1194.49 681.947 L1193.93 681.947 L1193.37 681.947 L1192.81 681.947 L1192.25 681.947 L1191.7 681.947 L1191.14 681.947 L1190.58 681.947 L1190.02 681.947 L1189.46 681.947 L1188.9 681.947 L1188.34 681.947 L1187.78 681.947 L1187.22 681.947 L1186.66 681.947 L1186.1 681.947 L1185.54 681.947 L1184.98 681.947 L1184.43 681.947 L1183.87 681.947 L1183.31 681.947 L1182.75 681.947 L1182.19 681.947 L1181.63 681.947 L1181.07 681.947 L1180.51 681.947 L1179.95 681.947 L1179.39 681.947 L1178.83 681.947 L1178.27 681.947 L1177.71 681.947 L1177.15 681.947 L1176.6 681.947 L1176.04 681.947 L1175.48 681.947 L1174.92 681.947 L1174.36 681.947 L1173.8 681.947 L1173.24 681.947 L1172.68 681.947 L1172.12 681.947 L1171.56 681.947 L1171 681.947 L1170.44 681.947 L1169.88 681.947 L1169.33 681.947 L1168.77 681.947 L1168.21 681.947 L1167.65 681.947 L1167.09 681.947 L1166.53 681.947 L1165.97 681.947 L1165.41 681.947 L1164.85 681.947 L1164.29 681.947 L1163.73 681.947 L1163.17 681.947 L1162.61 681.947 L1162.05 681.947 L1161.5 681.947 L1160.94 681.947 L1160.38 681.947 L1159.82 681.947 L1159.26 681.947 L1158.7 681.947 L1158.14 681.947 L1157.58 681.947 L1157.02 681.947 L1156.46 681.947 L1155.9 681.947 L1155.34 681.947 L1154.78 681.947 L1154.23 681.947 L1153.67 681.947 L1153.11 681.947 L1152.55 681.947 L1151.99 681.947 L1151.43 681.947 L1150.87 681.947 L1150.31 681.947 L1149.75 681.947 L1149.19 681.947 L1148.63 681.947 L1148.07 681.947 L1147.51 681.947 L1146.96 681.947 L1146.4 681.947 L1145.84 681.947 L1145.28 681.947 L1144.72 681.947 L1144.16 681.947 L1143.6 681.947 L1143.04 681.947 L1142.48 681.947 L1141.92 681.947 L1141.36 681.947 L1140.8 681.947 L1140.24 681.947 L1139.68 681.947 L1139.13 681.947 L1138.57 681.947 L1138.01 681.947 L1137.45 681.947 L1136.89 681.947 L1136.33 681.947 L1135.77 681.947 L1135.21 681.947 L1134.65 681.947 L1134.09 681.947 L1133.53 681.947 L1132.97 681.947 L1132.41 681.947 L1131.86 681.947 L1131.3 681.947 L1130.74 681.947 L1130.18 681.947 L1129.62 681.947 L1129.06 681.947 L1128.5 681.947 L1127.94 681.947 L1127.38 681.947 L1126.82 681.947 L1126.26 681.947 L1125.7 681.947 L1125.14 681.947 L1124.59 681.947 L1124.03 681.947 L1123.47 681.947 L1122.91 681.947 L1122.35 681.947 L1121.79 681.947 L1121.23 681.947 L1120.67 681.947 L1120.11 681.947 L1119.55 681.947 L1118.99 681.947 L1118.43 681.947 L1117.87 681.947 L1117.31 681.947 L1116.76 681.947 L1116.2 681.947 L1115.64 681.947 L1115.08 681.947 L1114.52 681.947 L1113.96 681.947 L1113.4 681.947 L1112.84 681.947 L1112.28 681.947 L1111.72 681.947 L1111.16 681.947 L1110.6 681.947 L1110.04 681.947 L1109.49 681.947 L1108.93 681.947 L1108.37 681.947 L1107.81 681.947 L1107.25 681.947 L1106.69 681.947 L1106.13 681.947 L1105.57 681.947 L1105.01 681.947 L1104.45 681.947 L1103.89 681.947 L1103.33 681.947 L1102.77 681.947 L1102.22 681.947 L1101.66 681.947 L1101.1 681.947 L1100.54 681.947 L1099.98 681.947 L1099.42 681.947 L1098.86 681.947 L1098.3 681.947 L1097.74 681.947 L1097.18 681.947 L1096.62 681.947 L1096.06 681.947 L1095.5 681.947 L1094.94 681.947 L1094.39 681.947 L1093.83 681.947 L1093.27 681.947 L1092.71 681.947 L1092.15 681.947 L1091.59 681.947 L1091.03 681.947 L1090.47 681.947 L1089.91 681.947 L1089.35 681.947 L1088.79 681.947 L1088.23 681.947 L1087.67 681.947 L1087.12 681.947 L1086.56 681.947 L1086 681.947 L1085.44 681.947 L1084.88 681.947 L1084.32 681.947 L1083.76 681.947 L1083.2 681.947 L1082.64 681.947 L1082.08 681.947 L1081.52 681.947 L1080.96 681.947 L1080.4 681.947 L1079.85 681.947 L1079.29 681.947 L1078.73 681.947 L1078.17 681.947 L1077.61 681.947 L1077.05 681.947 L1076.49 681.947 L1075.93 681.947 L1075.37 681.947 L1074.81 681.947 L1074.25 681.947 L1073.69 681.947 L1073.13 681.947 L1072.57 681.947 L1072.02 681.947 L1071.46 681.947 L1070.9 681.947 L1070.34 681.947 L1069.78 681.947 L1069.22 681.947 L1068.66 681.947 L1068.1 681.947 L1067.54 681.947 L1066.98 681.947 L1066.42 681.947 L1065.86 681.947 L1065.3 681.947 L1064.75 681.947 L1064.19 681.947 L1063.63 681.947 L1063.07 681.947 L1062.51 681.947 L1061.95 681.947 L1061.39 681.947 L1060.83 681.947 L1060.27 681.947 L1059.71 681.947 L1059.15 681.947 L1058.59 681.947 L1058.03 681.947 L1057.48 681.947 L1056.92 681.947 L1056.36 681.947 L1055.8 681.947 L1055.24 681.947 L1054.68 681.947 L1054.12 681.947 L1053.56 681.947 L1053 681.947 L1052.44 681.947 L1051.88 681.947 L1051.32 681.947 L1050.76 681.947 L1050.2 681.947 L1049.65 681.947 L1049.09 681.947 L1048.53 681.947 L1047.97 681.947 L1047.41 681.947 L1046.85 681.947 L1046.29 681.947 L1045.73 681.947 L1045.17 681.947 L1044.61 681.947 L1044.05 681.947 L1043.49 681.947 L1042.93 681.947 L1042.38 681.947 L1041.82 681.947 L1041.26 681.947 L1040.7 681.947 L1040.14 681.947 L1039.58 681.947 L1039.02 681.947 L1038.46 681.947 L1037.9 681.947 L1037.34 681.947 L1036.78 681.947 L1036.22 681.947 L1035.66 681.947 L1035.1 681.947 L1034.55 681.947 L1033.99 681.947 L1033.43 681.947 L1032.87 681.947 L1032.31 681.947 L1031.75 681.947 L1031.19 681.947 L1030.63 681.947 L1030.07 681.947 L1029.51 681.947 L1028.95 681.947 L1028.39 681.947 L1027.83 681.947 L1027.28 681.947 L1026.72 681.947 L1026.16 681.947 L1025.6 681.947 L1025.04 681.947 L1024.48 681.947 L1023.92 681.947 L1023.36 681.947 L1022.8 681.947 L1022.24 681.947 L1021.68 681.947 L1021.12 681.947 L1020.56 681.947 L1020.01 681.947 L1019.45 681.947 L1018.89 681.947 L1018.33 681.947 L1017.77 681.947 L1017.21 681.947 L1016.65 681.947 L1016.09 681.947 L1015.53 681.947 L1014.97 681.947 L1014.41 681.947 L1013.85 681.947 L1013.29 681.947 L1012.73 681.947 L1012.18 681.947 L1011.62 681.947 L1011.06 681.947 L1010.5 681.947 L1009.94 681.947 L1009.38 681.947 L1008.82 681.947 L1008.26 681.947 L1007.7 681.947 L1007.14 681.947 L1006.58 681.947 L1006.02 681.947 L1005.46 681.947 L1004.91 681.947 L1004.35 681.947 L1003.79 681.947 L1003.23 681.947 L1002.67 681.947 L1002.11 681.947 L1001.55 681.947 L1000.99 681.947 L1000.43 681.947 L999.872 681.947 L999.313 681.947 L998.754 681.947 L998.194 681.947 L997.635 681.947 L997.076 681.947 L996.517 681.947 L995.957 681.947 L995.398 681.947 L994.839 681.947 L994.28 681.947 L993.72 681.947 L993.161 681.947 L992.602 681.947 L992.043 681.947 L991.483 681.947 L990.924 681.947 L990.365 681.947 L989.806 681.947 L989.246 681.947 L988.687 681.947 L988.128 681.947 L987.569 681.947 L987.009 681.947 L986.45 681.947 L985.891 681.947 L985.332 681.947 L984.772 681.947 L984.213 681.947 L983.654 681.947 L983.095 681.947 L982.535 681.947 L981.976 681.947 L981.417 681.947 L980.858 681.947 L980.298 681.947 L979.739 681.947 L979.18 681.947 L978.621 681.947 L978.061 681.947 L977.502 681.947 L976.943 681.947 L976.384 681.947 L975.824 681.947 L975.265 681.947 L974.706 681.947 L974.147 681.947 L973.587 681.947 L973.028 681.947 L972.469 681.947 L971.91 681.947 L971.35 681.947 L970.791 681.947 L970.232 681.947 L969.673 681.947 L969.113 681.947 L968.554 681.947 L967.995 681.947 L967.436 681.947 L966.876 681.947 L966.317 681.947 L965.758 681.947 L965.199 681.947 L964.639 681.947 L964.08 681.947 L963.521 681.947 L962.962 681.947 L962.402 681.947 L961.843 681.947 L961.284 681.947 L960.725 681.947 L960.165 681.947 L959.606 681.947 L959.047 681.947 L958.488 681.947 L957.928 681.947 L957.369 681.947 L956.81 681.947 L956.251 681.947 L955.691 681.947 L955.132 681.947 L954.573 681.947 L954.014 681.947 L953.454 681.947 L952.895 681.947 L952.336 681.947 L951.777 681.947 L951.217 681.947 L950.658 681.947 L950.099 681.947 L949.54 681.947 L948.98 681.947 L948.421 681.947 L947.862 681.947 L947.303 681.947 L946.743 681.947 L946.184 681.947 L945.625 681.947 L945.066 681.947 L944.506 681.947 L943.947 681.947 L943.388 681.947 L942.829 681.947 L942.269 681.947 L941.71 681.947 L941.151 681.947 L940.592 681.947 L940.032 681.947 L939.473 681.947 L938.914 681.947 L938.355 681.947 L937.795 681.947 L937.236 681.947 L936.677 681.947 L936.118 681.947 L935.558 681.947 L934.999 681.947 L934.44 681.947 L933.881 681.947 L933.321 681.947 L932.762 681.947 L932.203 681.947 L931.644 681.947 L931.084 681.947 L930.525 681.947 L929.966 681.947 L929.406 681.947 L928.847 681.947 L928.288 681.947 L927.729 681.947 L927.169 681.947 L926.61 681.947 L926.051 681.947 L925.492 681.947 L924.932 681.947 L924.373 681.947 L923.814 681.947 L923.255 681.947 L922.695 681.947 L922.136 681.947 L921.577 681.947 L921.018 681.947 L920.458 681.947 L919.899 681.947 L919.34 681.947 L918.781 681.947 L918.221 681.947 L917.662 681.947 L917.103 681.947 L916.544 681.947 L915.984 681.947 L915.425 681.947 L914.866 681.947 L914.307 681.947 L913.747 681.947 L913.188 681.947 L912.629 681.947 L912.07 681.947 L911.51 681.947 L910.951 681.947 L910.392 681.947 L909.833 681.947 L909.273 681.947 L908.714 681.947 L908.155 681.947 L907.596 681.947 L907.036 681.947 L906.477 681.947 L905.918 681.947 L905.359 681.947 L904.799 681.947 L904.24 681.947 L903.681 681.947 L903.122 681.947 L902.562 681.947 L902.003 681.947 L901.444 681.947 L900.885 681.947 L900.325 681.947 L899.766 681.947 L899.207 681.947 L898.648 681.947 L898.088 681.947 L897.529 681.947 L896.97 681.947 L896.411 681.947 L895.851 681.947 L895.292 681.947 L894.733 681.947 L894.174 681.947 L893.614 681.947 L893.055 681.947 L892.496 681.947 L891.937 681.947 L891.377 681.947 L890.818 681.947 L890.259 681.947 L889.7 681.947 L889.14 681.947 L888.581 681.947 L888.022 681.947 L887.463 681.947 L886.903 681.947 L886.344 681.947 L885.785 681.947 L885.226 681.947 L884.666 681.947 L884.107 681.947 L883.548 681.947 L882.989 681.947 L882.429 681.947 L881.87 681.947 L881.311 681.947 L880.752 681.947 L880.192 681.947 L879.633 681.947 L879.074 681.947 L878.515 681.947 L877.955 681.947 L877.396 681.947 L876.837 681.947 L876.278 681.947 L875.718 681.947 L875.159 681.947 L874.6 681.947 L874.041 681.947 L873.481 681.947 L872.922 681.947 L872.363 681.947 L871.804 681.947 L871.244 681.947 L870.685 681.947 L870.126 681.947 L869.567 681.947 L869.007 681.947 L868.448 681.947 L867.889 681.947 L867.33 681.947 L866.77 681.947 L866.211 681.947 L865.652 681.947 L865.093 681.947 L864.533 681.947 L863.974 681.947 L863.415 681.947 L862.856 681.947 L862.296 681.947 L861.737 681.947 L861.178 681.947 L860.619 681.947 L860.059 681.947 L859.5 681.947 L858.941 681.947 L858.382 681.947 L857.822 681.947 L857.263 681.947 L856.704 681.947 L856.145 681.947 L855.585 681.947 L855.026 681.947 L854.467 681.947 L853.908 681.947 L853.348 681.947 L852.789 681.947 L852.23 681.947 L851.671 681.947 L851.111 681.947 L850.552 681.947 L849.993 681.947 L849.434 681.947 L848.874 681.947 L848.315 681.947 L847.756 681.947 L847.197 681.947 L846.637 681.947 L846.078 681.947 L845.519 681.947 L844.96 681.947 L844.4 681.947 L843.841 681.947 L843.282 681.947 L842.723 681.947 L842.163 681.947 L841.604 681.947 L841.045 681.947 L840.486 681.947 L839.926 681.947 L839.367 681.947 L838.808 681.947 L838.249 681.947 L837.689 681.947 L837.13 681.947 L836.571 681.947 L836.012 681.947 L835.452 681.947 L834.893 681.947 L834.334 681.947 L833.775 681.947 L833.215 681.947 L832.656 681.947 L832.097 681.947 L831.538 681.947 L830.978 681.947 L830.419 681.947 L829.86 681.947 L829.301 681.947 L828.741 681.947 L828.182 681.947 L827.623 681.947 L827.064 681.947 L826.504 681.947 L825.945 681.947 L825.386 681.947 L824.827 681.947 L824.267 681.947 L823.708 681.947 L823.149 681.947 L822.59 681.947 L822.03 681.947 L821.471 681.947 L820.912 681.947 L820.353 681.947 L819.793 681.947 L819.234 681.947 L818.675 681.947 L818.116 681.947 L817.556 681.947 L816.997 681.947 L816.438 681.947 L815.879 681.947 L815.319 681.947 L814.76 681.947 L814.201 681.947 L813.642 681.947 L813.082 681.947 L812.523 681.947 L811.964 681.947 L811.405 681.947 L810.845 681.947 L810.286 681.947 L809.727 681.947 L809.168 681.947 L808.608 681.947 L808.049 681.947 L807.49 681.947 L806.931 681.947 L806.371 681.947 L805.812 681.947 L805.253 681.947 L804.693 681.947 L804.134 681.947 L803.575 681.947 L803.016 681.947 L802.456 681.947 L801.897 681.947 L801.338 681.947 L800.779 681.947 L800.219 681.947 L799.66 681.947 L799.101 681.947 L798.542 681.947 L797.982 681.947 L797.423 681.947 L796.864 681.947 L796.305 681.947 L795.745 681.947 L795.186 681.947 L794.627 681.947 L794.068 681.947 L793.508 681.947 L792.949 681.947 L792.39 681.947 L791.831 681.947 L791.271 681.947 L790.712 681.947 L790.153 681.947 L789.594 681.947 L789.034 681.947 L788.475 681.947 L787.916 681.947 L787.357 681.947 L786.797 681.947 L786.238 681.947 L785.679 681.947 L785.12 681.947 L784.56 681.947 L784.001 681.947 L783.442 681.947 L782.883 681.947 L782.323 681.947 L781.764 681.947 L781.205 681.947 L780.646 681.947 L780.086 681.947 L779.527 681.947 L778.968 681.947 L778.409 681.947 L777.849 681.947 L777.29 681.947 L776.731 681.947 L776.172 681.947 L775.612 681.947 L775.053 681.947 L774.494 681.947 L773.935 681.947 L773.375 681.947 L772.816 681.947 L772.257 681.947 L771.698 681.947 L771.138 681.947 L770.579 681.947 L770.02 681.947 L769.461 681.947 L768.901 681.947 L768.342 681.947 L767.783 681.947 L767.224 681.947 L766.664 681.947 L766.105 681.947 L765.546 681.947 L764.987 681.947 L764.427 681.947 L763.868 681.947 L763.309 681.947 L762.75 681.947 L762.19 681.947 L761.631 681.947 L761.072 681.947 L760.513 681.947 L759.953 681.947 L759.394 681.947 L758.835 681.947 L758.276 681.947 L757.716 681.947 L757.157 681.947 L756.598 681.947 L756.039 681.947 L755.479 681.947 L754.92 681.947 L754.361 681.947 L753.802 681.947 L753.242 681.947 L752.683 681.947 L752.124 681.947 L751.565 681.947 L751.005 681.947 L750.446 681.947 L749.887 681.947 L749.328 681.947 L748.768 681.947 L748.209 681.947 L747.65 681.947 L747.091 681.947 L746.531 681.947 L745.972 681.947 L745.413 681.947 L744.854 681.947 L744.294 681.947 L743.735 681.947 L743.176 681.947 L742.617 681.947 L742.057 681.947 L741.498 681.947 L740.939 681.947 L740.38 681.947 L739.82 681.947 L739.261 681.947 L738.702 681.947 L738.143 681.947 L737.583 681.947 L737.024 681.947 L736.465 681.947 L735.906 681.947 L735.346 681.947 L734.787 681.947 L734.228 681.947 L733.669 681.947 L733.109 681.947 L732.55 681.947 L731.991 681.947 L731.432 681.947 L730.872 681.947 L730.313 681.947 L729.754 681.947 L729.195 681.947 L728.635 681.947 L728.076 681.947 L727.517 681.947 L726.958 681.947 L726.398 681.947 L725.839 681.947 L725.28 681.947 L724.721 681.947 L724.161 681.947 L723.602 681.947 L723.043 681.947 L722.484 681.947 L721.924 681.947 L721.365 681.947 L720.806 681.947 L720.247 681.947  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip793)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,682.856 720.806,682.856 721.365,682.856 721.924,682.856 722.484,682.856 723.043,682.856 723.602,682.856 724.161,682.856 724.721,682.856 725.28,682.856 725.839,682.856 726.398,682.856 726.958,682.856 727.517,682.856 728.076,682.856 728.635,682.856 729.195,682.856 729.754,682.856 730.313,682.856 730.872,682.856 731.432,682.856 731.991,682.856 732.55,682.856 733.109,682.856 733.669,682.856 734.228,682.856 734.787,682.856 735.346,682.856 735.906,682.856 736.465,682.856 737.024,682.856 737.583,682.856 738.143,682.856 738.702,682.856 739.261,682.856 739.82,682.856 740.38,682.856 740.939,682.856 741.498,682.856 742.057,682.856 742.617,682.856 743.176,682.856 743.735,682.856 744.294,682.856 744.854,682.856 745.413,682.856 745.972,682.856 746.531,682.856 747.091,682.856 747.65,682.856 748.209,682.856 748.768,682.856 749.328,682.856 749.887,682.856 750.446,682.856 751.005,682.856 751.565,682.856 752.124,682.856 752.683,682.856 753.242,682.856 753.802,682.856 754.361,682.856 754.92,682.856 755.479,682.856 756.039,682.856 756.598,682.856 757.157,682.856 757.716,682.856 758.276,682.856 758.835,682.856 759.394,682.856 759.953,682.856 760.513,682.856 761.072,682.856 761.631,682.856 762.19,682.856 762.75,682.856 763.309,682.856 763.868,682.856 764.427,682.856 764.987,682.856 765.546,682.856 766.105,682.856 766.664,682.856 767.224,682.856 767.783,682.856 768.342,682.856 768.901,682.856 769.461,682.856 770.02,682.856 770.579,682.856 771.138,682.856 771.698,682.856 772.257,682.856 772.816,682.856 773.375,682.856 773.935,682.856 774.494,682.856 775.053,682.856 775.612,682.856 776.172,682.856 776.731,682.856 777.29,682.856 777.849,682.856 778.409,682.856 778.968,682.856 779.527,682.856 780.086,682.856 780.646,682.856 781.205,682.856 781.764,682.856 782.323,682.856 782.883,682.856 783.442,682.856 784.001,682.856 784.56,682.856 785.12,682.856 785.679,682.856 786.238,682.856 786.797,682.856 787.357,682.856 787.916,682.856 788.475,682.856 789.034,682.856 789.594,682.856 790.153,682.856 790.712,682.856 791.271,682.856 791.831,682.856 792.39,682.856 792.949,682.856 793.508,682.856 794.068,682.856 794.627,682.856 795.186,682.856 795.745,682.856 796.305,682.856 796.864,682.856 797.423,682.856 797.982,682.856 798.542,682.856 799.101,682.856 799.66,682.856 800.219,682.856 800.779,682.856 801.338,682.856 801.897,682.856 802.456,682.856 803.016,682.856 803.575,682.856 804.134,682.856 804.693,682.856 805.253,682.856 805.812,682.856 806.371,682.856 806.931,682.856 807.49,682.856 808.049,682.856 808.608,682.856 809.168,682.856 809.727,682.856 810.286,682.856 810.845,682.856 811.405,682.856 811.964,682.856 812.523,682.856 813.082,682.856 813.642,682.856 814.201,682.856 814.76,682.856 815.319,682.856 815.879,682.856 816.438,682.856 816.997,682.856 817.556,682.856 818.116,682.856 818.675,682.856 819.234,682.856 819.793,682.856 820.353,682.856 820.912,682.856 821.471,682.856 822.03,682.856 822.59,682.856 823.149,682.856 823.708,682.856 824.267,682.856 824.827,682.856 825.386,682.856 825.945,682.856 826.504,682.856 827.064,682.856 827.623,682.856 828.182,682.856 828.741,682.856 829.301,682.856 829.86,682.856 830.419,682.856 830.978,682.856 831.538,682.856 832.097,682.856 832.656,682.856 833.215,682.856 833.775,682.856 834.334,682.856 834.893,682.856 835.452,682.856 836.012,682.856 836.571,682.856 837.13,682.856 837.689,682.856 838.249,682.856 838.808,682.856 839.367,682.856 839.926,682.856 840.486,682.856 841.045,682.856 841.604,682.856 842.163,682.856 842.723,682.856 843.282,682.856 843.841,682.856 844.4,682.856 844.96,682.856 845.519,682.856 846.078,682.856 846.637,682.856 847.197,682.856 847.756,682.856 848.315,682.856 848.874,682.856 849.434,682.856 849.993,682.856 850.552,682.856 851.111,682.856 851.671,682.856 852.23,682.856 852.789,682.856 853.348,682.856 853.908,682.856 854.467,682.856 855.026,682.856 855.585,682.856 856.145,682.856 856.704,682.856 857.263,682.856 857.822,682.856 858.382,682.856 858.941,682.856 859.5,682.856 860.059,682.856 860.619,682.856 861.178,682.856 861.737,682.856 862.296,682.856 862.856,682.856 863.415,682.856 863.974,682.856 864.533,682.856 865.093,682.856 865.652,682.856 866.211,682.856 866.77,682.856 867.33,682.856 867.889,682.856 868.448,682.856 869.007,682.856 869.567,682.856 870.126,682.856 870.685,682.856 871.244,682.856 871.804,682.856 872.363,682.856 872.922,682.856 873.481,682.856 874.041,682.856 874.6,682.856 875.159,682.856 875.718,682.856 876.278,682.856 876.837,682.856 877.396,682.856 877.955,682.856 878.515,682.856 879.074,682.856 879.633,682.856 880.192,682.856 880.752,682.856 881.311,682.856 881.87,682.856 882.429,682.856 882.989,682.856 883.548,682.856 884.107,682.856 884.666,682.856 885.226,682.856 885.785,682.856 886.344,682.856 886.903,682.856 887.463,682.856 888.022,682.856 888.581,682.856 889.14,682.856 889.7,682.856 890.259,682.856 890.818,682.856 891.377,682.856 891.937,682.856 892.496,682.856 893.055,682.856 893.614,682.856 894.174,682.856 894.733,682.856 895.292,682.856 895.851,682.856 896.411,682.856 896.97,682.856 897.529,682.856 898.088,682.856 898.648,682.856 899.207,682.856 899.766,682.856 900.325,682.856 900.885,682.856 901.444,682.856 902.003,682.856 902.562,682.856 903.122,682.856 903.681,682.856 904.24,682.856 904.799,682.856 905.359,682.856 905.918,682.856 906.477,682.856 907.036,682.856 907.596,682.856 908.155,682.856 908.714,682.856 909.273,682.856 909.833,682.856 910.392,682.856 910.951,682.856 911.51,682.856 912.07,682.856 912.629,682.856 913.188,682.856 913.747,682.856 914.307,682.856 914.866,682.856 915.425,682.856 915.984,682.856 916.544,682.856 917.103,682.856 917.662,682.856 918.221,682.856 918.781,682.856 919.34,682.856 919.899,682.856 920.458,682.856 921.018,682.856 921.577,682.856 922.136,682.856 922.695,682.856 923.255,682.856 923.814,682.856 924.373,682.856 924.932,682.856 925.492,682.856 926.051,682.856 926.61,682.856 927.169,682.856 927.729,682.856 928.288,682.856 928.847,682.856 929.406,682.856 929.966,682.856 930.525,682.856 931.084,682.856 931.644,682.856 932.203,682.856 932.762,682.856 933.321,682.856 933.881,682.856 934.44,682.856 934.999,682.856 935.558,682.856 936.118,682.856 936.677,682.856 937.236,682.856 937.795,682.856 938.355,682.856 938.914,682.856 939.473,682.856 940.032,682.856 940.592,682.856 941.151,682.856 941.71,682.856 942.269,682.856 942.829,682.856 943.388,682.856 943.947,682.856 944.506,682.856 945.066,682.856 945.625,682.856 946.184,682.856 946.743,682.856 947.303,682.856 947.862,682.856 948.421,682.856 948.98,682.856 949.54,682.856 950.099,682.856 950.658,682.856 951.217,682.856 951.777,682.856 952.336,682.856 952.895,682.856 953.454,682.856 954.014,682.856 954.573,682.856 955.132,682.856 955.691,682.856 956.251,682.856 956.81,682.856 957.369,682.856 957.928,682.856 958.488,682.856 959.047,682.856 959.606,682.856 960.165,682.856 960.725,682.856 961.284,682.856 961.843,682.856 962.402,682.856 962.962,682.856 963.521,682.856 964.08,682.856 964.639,682.856 965.199,682.856 965.758,682.856 966.317,682.856 966.876,682.856 967.436,682.856 967.995,682.856 968.554,682.856 969.113,682.856 969.673,682.856 970.232,682.856 970.791,682.856 971.35,682.856 971.91,682.856 972.469,682.856 973.028,682.856 973.587,682.856 974.147,682.856 974.706,682.856 975.265,682.856 975.824,682.856 976.384,682.856 976.943,682.856 977.502,682.856 978.061,682.856 978.621,682.856 979.18,682.856 979.739,682.856 980.298,682.856 980.858,682.856 981.417,682.856 981.976,682.856 982.535,682.856 983.095,682.856 983.654,682.856 984.213,682.856 984.772,682.856 985.332,682.856 985.891,682.856 986.45,682.856 987.009,682.856 987.569,682.856 988.128,682.856 988.687,682.856 989.246,682.856 989.806,682.856 990.365,682.856 990.924,682.856 991.483,682.856 992.043,682.856 992.602,682.856 993.161,682.856 993.72,682.856 994.28,682.856 994.839,682.856 995.398,682.856 995.957,682.856 996.517,682.856 997.076,682.856 997.635,682.856 998.194,682.856 998.754,682.856 999.313,682.856 999.872,682.856 1000.43,682.856 1000.99,682.856 1001.55,682.856 1002.11,682.856 1002.67,682.856 1003.23,682.856 1003.79,682.856 1004.35,682.856 1004.91,682.856 1005.46,682.856 1006.02,682.856 1006.58,682.856 1007.14,682.856 1007.7,682.856 1008.26,682.856 1008.82,682.856 1009.38,682.856 1009.94,682.856 1010.5,682.856 1011.06,682.856 1011.62,682.856 1012.18,682.856 1012.73,682.856 1013.29,682.856 1013.85,682.856 1014.41,682.856 1014.97,682.856 1015.53,682.856 1016.09,682.856 1016.65,682.856 1017.21,682.856 1017.77,682.856 1018.33,682.856 1018.89,682.856 1019.45,682.856 1020.01,682.856 1020.56,682.856 1021.12,682.856 1021.68,682.856 1022.24,682.856 1022.8,682.856 1023.36,682.856 1023.92,682.856 1024.48,682.856 1025.04,682.856 1025.6,682.856 1026.16,682.856 1026.72,682.856 1027.28,682.856 1027.83,682.856 1028.39,682.856 1028.95,682.856 1029.51,682.856 1030.07,682.856 1030.63,682.856 1031.19,682.856 1031.75,682.856 1032.31,682.856 1032.87,682.856 1033.43,682.856 1033.99,682.856 1034.55,682.856 1035.1,682.856 1035.66,682.856 1036.22,682.856 1036.78,682.856 1037.34,682.856 1037.9,682.856 1038.46,682.856 1039.02,682.856 1039.58,682.856 1040.14,682.856 1040.7,682.856 1041.26,682.856 1041.82,682.856 1042.38,682.856 1042.93,682.856 1043.49,682.856 1044.05,682.856 1044.61,682.856 1045.17,682.856 1045.73,682.856 1046.29,682.856 1046.85,682.856 1047.41,682.856 1047.97,682.856 1048.53,682.856 1049.09,682.856 1049.65,682.856 1050.2,682.856 1050.76,682.856 1051.32,682.856 1051.88,682.856 1052.44,682.856 1053,682.856 1053.56,682.856 1054.12,682.856 1054.68,682.856 1055.24,682.856 1055.8,682.856 1056.36,682.856 1056.92,682.856 1057.48,682.856 1058.03,682.856 1058.59,682.856 1059.15,682.856 1059.71,682.856 1060.27,682.856 1060.83,682.856 1061.39,682.856 1061.95,682.856 1062.51,682.856 1063.07,682.856 1063.63,682.856 1064.19,682.856 1064.75,682.856 1065.3,682.856 1065.86,682.856 1066.42,682.856 1066.98,682.856 1067.54,682.856 1068.1,682.856 1068.66,682.856 1069.22,682.856 1069.78,682.856 1070.34,682.856 1070.9,682.856 1071.46,682.856 1072.02,682.856 1072.57,682.856 1073.13,682.856 1073.69,682.856 1074.25,682.856 1074.81,682.856 1075.37,682.856 1075.93,682.856 1076.49,682.856 1077.05,682.856 1077.61,682.856 1078.17,682.856 1078.73,682.856 1079.29,682.856 1079.85,682.856 1080.4,682.856 1080.96,682.856 1081.52,682.856 1082.08,682.856 1082.64,682.856 1083.2,682.856 1083.76,682.856 1084.32,682.856 1084.88,682.856 1085.44,682.856 1086,682.856 1086.56,682.856 1087.12,682.856 1087.67,682.856 1088.23,682.856 1088.79,682.856 1089.35,682.856 1089.91,682.856 1090.47,682.856 1091.03,682.856 1091.59,682.856 1092.15,682.856 1092.71,682.856 1093.27,682.856 1093.83,682.856 1094.39,682.856 1094.94,682.856 1095.5,682.856 1096.06,682.856 1096.62,682.856 1097.18,682.856 1097.74,682.856 1098.3,682.856 1098.86,682.856 1099.42,682.856 1099.98,682.856 1100.54,682.856 1101.1,682.856 1101.66,682.856 1102.22,682.856 1102.77,682.856 1103.33,682.856 1103.89,682.856 1104.45,682.856 1105.01,682.856 1105.57,682.856 1106.13,682.856 1106.69,682.856 1107.25,682.856 1107.81,682.856 1108.37,682.856 1108.93,682.856 1109.49,682.856 1110.04,682.856 1110.6,682.856 1111.16,682.856 1111.72,682.856 1112.28,682.856 1112.84,682.856 1113.4,682.856 1113.96,682.856 1114.52,682.856 1115.08,682.856 1115.64,682.856 1116.2,682.856 1116.76,682.856 1117.31,682.856 1117.87,682.856 1118.43,682.856 1118.99,682.856 1119.55,682.856 1120.11,682.856 1120.67,682.856 1121.23,682.856 1121.79,682.856 1122.35,682.856 1122.91,682.856 1123.47,682.856 1124.03,682.856 1124.59,682.856 1125.14,682.856 1125.7,682.856 1126.26,682.856 1126.82,682.856 1127.38,682.856 1127.94,682.856 1128.5,682.856 1129.06,682.856 1129.62,682.856 1130.18,682.856 1130.74,682.856 1131.3,682.856 1131.86,682.856 1132.41,682.856 1132.97,682.856 1133.53,682.856 1134.09,682.856 1134.65,682.856 1135.21,682.856 1135.77,682.856 1136.33,682.856 1136.89,682.856 1137.45,682.856 1138.01,682.856 1138.57,682.856 1139.13,682.856 1139.68,682.856 1140.24,682.856 1140.8,682.856 1141.36,682.856 1141.92,682.856 1142.48,682.856 1143.04,682.856 1143.6,682.856 1144.16,682.856 1144.72,682.856 1145.28,682.856 1145.84,682.856 1146.4,682.856 1146.96,682.856 1147.51,682.856 1148.07,682.856 1148.63,682.856 1149.19,682.856 1149.75,682.856 1150.31,682.856 1150.87,682.856 1151.43,682.856 1151.99,682.856 1152.55,682.856 1153.11,682.856 1153.67,682.856 1154.23,682.856 1154.78,682.856 1155.34,682.856 1155.9,682.856 1156.46,682.856 1157.02,682.856 1157.58,682.856 1158.14,682.856 1158.7,682.856 1159.26,682.856 1159.82,682.856 1160.38,682.856 1160.94,682.856 1161.5,682.856 1162.05,682.856 1162.61,682.856 1163.17,682.856 1163.73,682.856 1164.29,682.856 1164.85,682.856 1165.41,682.856 1165.97,682.856 1166.53,682.856 1167.09,682.856 1167.65,682.856 1168.21,682.856 1168.77,682.856 1169.33,682.856 1169.88,682.856 1170.44,682.856 1171,682.856 1171.56,682.856 1172.12,682.856 1172.68,682.856 1173.24,682.856 1173.8,682.856 1174.36,682.856 1174.92,682.856 1175.48,682.856 1176.04,682.856 1176.6,682.856 1177.15,682.856 1177.71,682.856 1178.27,682.856 1178.83,682.856 1179.39,682.856 1179.95,682.856 1180.51,682.856 1181.07,682.856 1181.63,682.856 1182.19,682.856 1182.75,682.856 1183.31,682.856 1183.87,682.856 1184.43,682.856 1184.98,682.856 1185.54,682.856 1186.1,682.856 1186.66,682.856 1187.22,682.856 1187.78,682.856 1188.34,682.856 1188.9,682.856 1189.46,682.856 1190.02,682.856 1190.58,682.856 1191.14,682.856 1191.7,682.856 1192.25,682.856 1192.81,682.856 1193.37,682.856 1193.93,682.856 1194.49,682.856 1195.05,682.856 1195.61,682.856 1196.17,682.856 1196.73,682.856 1197.29,682.856 1197.85,682.856 1198.41,682.856 1198.97,682.856 1199.52,682.856 1200.08,682.856 1200.64,682.856 1201.2,682.856 1201.76,682.856 1202.32,682.856 1202.88,682.856 1203.44,682.856 1204,682.856 1204.56,682.856 1205.12,682.856 1205.68,682.856 1206.24,682.856 1206.8,682.856 1207.35,682.856 1207.91,682.856 1208.47,682.856 1209.03,682.856 1209.59,682.856 1210.15,682.856 1210.71,682.856 1211.27,682.856 1211.83,682.856 1212.39,682.856 1212.95,682.856 1213.51,682.856 1214.07,682.856 1214.62,682.856 1215.18,682.856 1215.74,682.856 1216.3,682.856 1216.86,682.856 1217.42,682.856 1217.98,682.856 1218.54,682.856 1219.1,682.856 1219.66,682.856 1220.22,682.856 1220.78,682.856 1221.34,682.856 1221.89,682.856 1222.45,682.856 1223.01,682.856 1223.57,682.856 1224.13,682.856 1224.69,682.856 1225.25,682.856 1225.81,682.856 1226.37,682.856 1226.93,682.856 1227.49,682.856 1228.05,682.856 1228.61,682.856 1229.17,682.856 1229.72,682.856 1230.28,682.856 1230.84,682.856 1231.4,682.856 1231.96,682.856 1232.52,682.856 1233.08,682.856 1233.64,682.856 1234.2,682.856 1234.76,682.856 1235.32,682.856 1235.88,682.856 1236.44,682.856 1236.99,682.856 1237.55,682.856 1238.11,682.856 1238.67,682.856 1239.23,682.856 1239.79,682.856 1240.35,682.856 1240.91,682.856 1241.47,682.856 1242.03,682.856 1242.59,682.856 1243.15,682.856 1243.71,682.856 1244.26,682.856 1244.82,682.856 1245.38,682.856 1245.94,682.856 1246.5,682.856 1247.06,682.856 1247.62,682.856 1248.18,682.856 1248.74,682.856 1249.3,682.856 1249.86,682.856 1250.42,682.856 1250.98,682.856 1251.54,682.856 1252.09,682.856 1252.65,682.856 1253.21,682.856 1253.77,682.856 1254.33,682.856 1254.89,682.856 1255.45,682.856 1256.01,682.856 1256.57,682.856 1257.13,682.856 1257.69,682.856 1258.25,682.856 1258.81,682.856 1259.36,682.856 1259.92,682.856 1260.48,682.856 1261.04,682.856 1261.6,682.856 1262.16,682.856 1262.72,682.856 1263.28,682.856 1263.84,682.856 1264.4,682.856 1264.96,682.856 1265.52,682.856 1266.08,682.856 1266.63,682.856 1267.19,682.856 1267.75,682.856 1268.31,682.856 1268.87,682.856 1269.43,682.856 1269.99,682.856 1270.55,682.856 1271.11,682.856 1271.67,682.856 1272.23,682.856 1272.79,682.856 1273.35,682.856 1273.91,682.856 1274.46,682.856 1275.02,682.856 1275.58,682.856 1276.14,682.856 1276.7,682.856 1277.26,682.856 1277.82,682.856 1278.38,682.856 1278.94,682.856 1279.5,682.856 1280.06,682.856 1280.62,682.856 1281.18,682.856 1281.73,682.856 1282.29,682.856 1282.85,682.856 1283.41,682.856 1283.97,682.856 1284.53,682.856 1285.09,682.856 1285.65,682.856 1286.21,682.856 1286.77,682.856 1287.33,682.856 1287.89,682.856 1288.45,682.856 1289,682.856 1289.56,682.856 1290.12,682.856 1290.68,682.856 1291.24,682.856 1291.8,682.856 1292.36,682.856 1292.92,682.856 1293.48,682.856 1294.04,682.856 1294.6,682.856 1295.16,682.856 1295.72,682.856 1296.28,682.856 1296.83,682.856 1297.39,682.856 1297.95,682.856 1298.51,682.856 1299.07,682.856 1299.63,682.856 1300.19,682.856 1300.75,682.856 1301.31,682.856 1301.87,682.856 1302.43,682.856 1302.99,682.856 1303.55,682.856 1304.1,682.856 1304.66,682.856 1305.22,682.856 1305.78,682.856 1306.34,682.856 1306.9,682.856 1307.46,682.856 1308.02,682.856 1308.58,682.856 1309.14,682.856 1309.7,682.856 1310.26,682.856 1310.82,682.856 1311.38,682.856 1311.93,682.856 1312.49,682.856 1313.05,682.856 1313.61,682.856 1314.17,682.856 1314.73,682.856 1315.29,682.856 1315.85,682.856 1316.41,682.856 1316.97,682.856 1317.53,682.856 1318.09,682.856 1318.65,682.856 1319.2,682.856 1319.76,682.856 1320.32,682.856 1320.88,682.856 1321.44,682.856 1322,682.856 1322.56,682.856 1323.12,682.856 1323.68,682.856 1324.24,682.856 1324.8,682.856 1325.36,682.856 1325.92,682.856 1326.47,682.856 1327.03,682.856 1327.59,682.856 1328.15,682.856 1328.71,682.856 1329.27,682.856 1329.83,682.856 1330.39,682.856 1330.95,682.856 1331.51,682.856 1332.07,682.856 1332.63,682.856 1333.19,682.856 1333.75,682.856 1334.3,682.856 1334.86,682.856 1335.42,682.856 1335.98,682.856 1336.54,682.856 1337.1,682.856 1337.66,682.856 1338.22,682.856 1338.78,682.856 1339.34,682.856 1339.9,682.856 1340.46,682.856 1341.02,682.856 1341.57,682.856 1342.13,682.856 1342.69,682.856 1343.25,682.856 1343.81,682.856 1344.37,682.856 1344.93,682.856 1345.49,682.856 1346.05,682.856 1346.61,682.856 1347.17,682.856 1347.73,682.856 1348.29,682.856 1348.84,682.856 1349.4,682.856 1349.96,682.856 1350.52,682.856 1351.08,682.856 1351.64,682.856 1352.2,682.856 1352.76,682.856 1353.32,682.856 1353.88,682.856 1354.44,682.856 1355,682.856 1355.56,682.856 1356.12,682.856 1356.67,682.856 1357.23,682.856 1357.79,682.856 1358.35,682.856 1358.91,682.856 1359.47,682.856 1360.03,682.856 1360.59,682.856 1361.15,682.856 1361.71,682.856 1362.27,682.856 1362.83,682.856 1363.39,682.856 1363.94,682.856 1364.5,682.856 1365.06,682.856 1365.62,682.856 1366.18,682.856 1366.74,682.856 1367.3,682.856 1367.86,682.856 1368.42,682.856 1368.98,682.856 1369.54,682.856 1370.1,682.856 1370.66,682.856 1371.21,682.856 1371.77,682.856 1372.33,682.856 1372.89,682.856 1373.45,682.856 1374.01,682.856 1374.57,682.856 1375.13,682.856 1375.69,682.856 1376.25,682.856 1376.81,682.856 1377.37,682.856 1377.93,682.856 1378.49,682.856 1379.04,682.856 1379.6,682.856 1380.16,682.856 1380.72,682.856 1381.28,682.856 1381.84,682.856 1382.4,682.856 1382.96,682.856 1383.52,682.856 1384.08,682.856 1384.64,682.856 1385.2,682.856 1385.76,682.856 1386.31,682.856 1386.87,682.856 1387.43,682.856 1387.99,682.856 1388.55,682.856 1389.11,682.856 1389.67,682.856 1390.23,682.856 1390.79,682.856 1391.35,682.856 1391.91,682.856 1392.47,682.856 1393.03,682.856 1393.58,682.856 1394.14,682.856 1394.7,682.856 1395.26,682.856 1395.82,682.856 1396.38,682.856 1396.94,682.856 1397.5,682.856 1398.06,682.856 1398.62,682.856 1399.18,682.856 1399.74,682.856 1400.3,682.856 1400.86,682.856 1401.41,682.856 1401.97,682.856 1402.53,682.856 1403.09,682.856 1403.65,682.856 1404.21,682.856 1404.77,682.856 1405.33,682.856 1405.89,682.856 1406.45,682.856 1407.01,682.856 1407.57,682.856 1408.13,682.856 1408.68,682.856 1409.24,682.856 1409.8,682.856 1410.36,682.856 1410.92,682.856 1411.48,682.856 1412.04,682.856 1412.6,682.856 1413.16,682.856 1413.72,682.856 1414.28,682.856 1414.84,682.856 1415.4,682.856 1415.95,682.856 1416.51,682.856 1417.07,682.856 1417.63,682.856 1418.19,682.856 1418.75,682.856 1419.31,682.856 1419.87,682.856 1420.43,682.856 1420.99,682.856 1421.55,682.856 1422.11,682.856 1422.67,682.856 1423.23,682.856 1423.78,682.856 1424.34,682.856 1424.9,682.856 1425.46,682.856 1426.02,682.856 1426.58,682.856 1427.14,682.856 1427.7,682.856 1428.26,682.856 1428.82,682.856 1429.38,682.856 1429.94,682.856 1430.5,682.856 1431.05,682.856 1431.61,682.856 1432.17,682.856 1432.73,682.856 1433.29,682.856 1433.85,682.856 1434.41,682.856 1434.97,682.856 1435.53,682.856 1436.09,682.856 1436.65,682.856 1437.21,682.856 1437.77,682.856 1438.33,682.856 1438.88,682.856 1439.44,682.856 1440,682.856 1440.56,682.856 1441.12,682.856 1441.68,682.856 1442.24,682.856 1442.8,682.856 1443.36,682.856 1443.92,682.856 1444.48,682.856 1445.04,682.856 1445.6,682.856 1446.15,682.856 1446.71,682.856 1447.27,682.856 1447.83,682.856 1448.39,682.856 1448.95,682.856 1449.51,682.856 1450.07,682.856 1450.63,682.856 1451.19,682.856 1451.75,682.856 1452.31,682.856 1452.87,682.856 1453.42,682.856 1453.98,682.856 1454.54,682.856 1455.1,682.856 1455.66,682.856 1456.22,682.856 1456.78,682.856 1457.34,682.856 1457.9,682.856 1458.46,682.856 1459.02,682.856 1459.58,682.856 1460.14,682.856 1460.7,682.856 1461.25,682.856 1461.81,682.856 1462.37,682.856 1462.93,682.856 1463.49,682.856 1464.05,682.856 1464.61,682.856 1465.17,682.856 1465.73,682.856 1466.29,682.856 1466.85,682.856 1467.41,682.856 1467.97,682.856 1468.52,682.856 1469.08,682.856 1469.64,682.856 1470.2,682.856 1470.76,682.856 1471.32,682.856 1471.88,682.856 1472.44,682.856 1473,682.856 1473.56,682.856 1474.12,682.856 1474.68,682.856 1475.24,682.856 1475.79,682.856 1476.35,682.856 1476.91,682.856 1477.47,682.856 1478.03,682.856 1478.59,682.856 1479.15,682.856 1479.71,682.856 1480.27,682.856 1480.83,682.856 1481.39,682.856 1481.95,682.856 1482.51,682.856 1483.07,682.856 1483.62,682.856 1484.18,682.856 1484.74,682.856 1485.3,682.856 1485.86,682.856 1486.42,682.856 1486.98,682.856 1487.54,682.856 1488.1,682.856 1488.66,682.856 1489.22,682.856 1489.78,682.856 1490.34,682.856 1490.89,682.856 1491.45,682.856 1492.01,682.856 1492.57,682.856 1493.13,682.856 1493.69,682.856 1494.25,682.856 1494.81,682.856 1495.37,682.856 1495.93,682.856 1496.49,682.856 1497.05,682.856 1497.61,682.856 1498.16,682.856 1498.72,682.856 1499.28,682.856 1499.84,682.856 1500.4,682.856 1500.96,682.856 1501.52,682.856 1502.08,682.856 1502.64,682.856 1503.2,682.856 1503.76,682.856 1504.32,682.856 1504.88,682.856 1505.44,682.856 1505.99,682.856 1506.55,682.856 1507.11,682.856 1507.67,682.856 1508.23,682.856 1508.79,682.856 1509.35,682.856 1509.91,682.856 1510.47,682.856 1511.03,682.856 1511.59,682.856 1512.15,682.856 1512.71,682.856 1513.26,682.856 1513.82,682.856 1514.38,682.856 1514.94,682.856 1515.5,682.856 1516.06,682.856 1516.62,682.856 1517.18,682.856 1517.74,682.856 1518.3,682.856 1518.86,682.856 1519.42,682.856 1519.98,682.856 1520.53,682.856 1521.09,682.856 1521.65,682.856 1522.21,682.856 1522.77,682.856 1523.33,682.856 1523.89,682.856 1524.45,682.856 1525.01,682.856 1525.57,682.856 1526.13,682.856 1526.69,682.856 1527.25,682.856 1527.81,682.856 1528.36,682.856 1528.92,682.856 1529.48,682.856 1530.04,682.856 1530.6,682.856 1531.16,682.856 1531.72,682.856 1532.28,682.856 1532.84,682.856 1533.4,682.856 1533.96,682.856 1534.52,682.856 1535.08,682.856 1535.63,682.856 1536.19,682.856 1536.75,682.856 1537.31,682.856 1537.87,682.856 1538.43,682.856 1538.99,682.856 1539.55,682.856 1540.11,682.856 1540.67,682.856 1541.23,682.856 1541.79,682.856 1542.35,682.856 1542.9,682.856 1543.46,682.856 1544.02,682.856 1544.58,682.856 1545.14,682.856 1545.7,682.856 1546.26,682.856 1546.82,682.856 1547.38,682.856 1547.94,682.856 1548.5,682.856 1549.06,682.856 1549.62,682.856 1550.18,682.856 1550.73,682.856 1551.29,682.856 1551.85,682.856 1552.41,682.856 1552.97,682.856 1553.53,682.856 1554.09,682.856 1554.65,682.856 1555.21,682.856 1555.77,682.856 1556.33,682.856 1556.89,682.856 1557.45,682.856 1558,682.856 1558.56,682.856 1559.12,682.856 1559.68,682.856 1560.24,682.856 1560.8,682.856 1561.36,682.856 1561.92,682.856 1562.48,682.856 1563.04,682.856 1563.6,682.856 1564.16,682.856 1564.72,682.856 1565.28,682.856 1565.83,682.856 1566.39,682.856 1566.95,682.856 1567.51,682.856 1568.07,682.856 1568.63,682.856 1569.19,682.856 1569.75,682.856 1570.31,682.856 1570.87,682.856 1571.43,682.856 1571.99,682.856 1572.55,682.856 1573.1,682.856 1573.66,682.856 1574.22,682.856 1574.78,682.856 1575.34,682.856 1575.9,682.856 1576.46,682.856 1577.02,682.856 1577.58,682.856 1578.14,682.856 1578.7,682.856 1579.26,682.856 1579.82,682.856 1580.37,682.856 1580.93,682.856 1581.49,682.856 1582.05,682.856 1582.61,682.856 1583.17,682.856 1583.73,682.856 1584.29,682.856 1584.85,682.856 1585.41,682.856 1585.97,682.856 1586.53,682.856 1587.09,682.856 1587.65,682.856 1588.2,682.856 1588.76,682.856 1589.32,682.856 1589.88,682.856 1590.44,682.856 1591,682.856 1591.56,682.856 1592.12,682.856 1592.68,682.856 1593.24,682.856 1593.8,682.856 1594.36,682.856 1594.92,682.856 1595.47,682.856 1596.03,682.856 1596.59,682.856 1597.15,682.856 1597.71,682.856 1598.27,682.856 1598.83,682.856 1599.39,682.856 1599.95,682.856 1600.51,682.856 1601.07,682.856 1601.63,682.856 1602.19,682.856 1602.74,682.856 1603.3,682.856 1603.86,682.856 1604.42,682.856 1604.98,682.856 1605.54,682.856 1606.1,682.856 1606.66,682.856 1607.22,682.856 1607.78,682.856 1608.34,682.856 1608.9,682.856 1609.46,682.856 1610.02,682.856 1610.57,682.856 1611.13,682.856 1611.69,682.856 1612.25,682.856 1612.81,682.856 1613.37,682.856 1613.93,682.856 1614.49,682.856 1615.05,682.856 1615.61,682.856 1616.17,682.856 1616.73,682.856 1617.29,682.856 1617.84,682.856 1618.4,682.856 1618.96,682.856 1619.52,682.856 1620.08,682.856 1620.64,682.856 1621.2,682.856 1621.76,682.856 1622.32,682.856 1622.88,682.856 1623.44,682.856 1624,682.856 1624.56,682.856 1625.11,682.856 1625.67,682.856 1626.23,682.856 1626.79,682.856 1627.35,682.856 1627.91,682.856 1628.47,682.856 1629.03,682.856 1629.59,682.856 1630.15,682.856 1630.71,682.856 1631.27,682.856 1631.83,682.856 1632.39,682.856 1632.94,682.856 1633.5,682.856 1634.06,682.856 1634.62,682.856 1635.18,682.856 1635.74,682.856 1636.3,682.856 1636.86,682.856 1637.42,682.856 1637.98,682.856 1638.54,682.856 1639.1,682.856 1639.66,682.856 1640.21,682.856 1640.77,682.856 1641.33,682.856 1641.89,682.856 1642.45,682.856 1643.01,682.856 1643.57,682.856 1644.13,682.856 1644.69,682.856 1645.25,682.856 1645.81,682.856 1646.37,682.856 1646.93,682.856 1647.48,682.856 1648.04,682.856 1648.6,682.856 1649.16,682.856 1649.72,682.856 1650.28,682.856 1650.84,682.856 1651.4,682.856 1651.96,682.856 1652.52,682.856 1653.08,682.856 1653.64,682.856 1654.2,682.856 1654.76,682.856 1655.31,682.856 1655.87,682.856 1656.43,682.856 1656.99,682.856 1657.55,682.856 1658.11,682.856 1658.67,682.856 1659.23,682.856 1659.79,682.856 1660.35,682.856 1660.91,682.856 1661.47,682.856 1662.03,682.856 1662.58,682.856 1663.14,682.856 1663.7,682.856 1664.26,682.856 1664.82,682.856 1665.38,682.856 1665.94,682.856 1666.5,682.856 1667.06,682.856 1667.62,682.856 1668.18,682.856 1668.74,682.856 1669.3,682.856 1669.85,682.856 1670.41,682.856 1670.97,682.856 1671.53,682.856 1672.09,682.856 1672.65,682.856 1673.21,682.856 1673.77,682.856 1674.33,682.856 1674.89,682.856 1675.45,682.856 1676.01,682.856 1676.57,682.856 1677.13,682.856 1677.68,682.856 1678.24,682.856 1678.8,682.856 1679.36,682.856 1679.92,682.856 1680.48,682.856 1681.04,682.856 1681.6,682.856 1682.16,682.856 1682.72,682.856 1683.28,682.856 1683.84,682.856 1684.4,682.856 1684.95,682.856 1685.51,682.856 1686.07,682.856 1686.63,682.856 1687.19,682.856 1687.75,682.856 1688.31,682.856 1688.87,682.856 1689.43,682.856 1689.99,682.856 1690.55,682.856 1691.11,682.856 1691.67,682.856 1692.23,682.856 1692.78,682.856 1693.34,682.856 1693.9,682.856 1694.46,682.856 1695.02,682.856 1695.58,682.856 1696.14,682.856 1696.7,682.856 1697.26,682.856 1697.82,682.856 1698.38,682.856 1698.94,682.856 1699.5,682.856 1700.05,682.856 1700.61,682.856 1701.17,682.856 1701.73,682.856 1702.29,682.856 1702.85,682.856 1703.41,682.856 1703.97,682.856 1704.53,682.856 1705.09,682.856 1705.65,682.856 1706.21,682.856 1706.77,682.856 1707.32,682.856 1707.88,682.856 1708.44,682.856 1709,682.856 1709.56,682.856 1710.12,682.856 1710.68,682.856 1711.24,682.856 1711.8,682.856 1712.36,682.856 1712.92,682.856 1713.48,682.856 1714.04,682.856 1714.6,682.856 1715.15,682.856 1715.71,682.856 1716.27,682.856 1716.83,682.856 1717.39,682.856 1717.95,682.856 1718.51,682.856 1719.07,682.856 1719.63,682.856 1720.19,682.856 1720.75,682.856 1721.31,682.856 1721.87,682.856 1722.42,682.856 1722.98,682.856 1723.54,682.856 1724.1,682.856 1724.66,682.856 1725.22,682.856 1725.78,682.856 1726.34,682.856 1726.9,682.856 1727.46,682.856 1728.02,682.856 1728.58,682.856 1729.14,682.856 1729.69,682.856 1730.25,682.856 1730.81,682.856 1731.37,682.856 1731.93,682.856 1732.49,682.856 1733.05,682.856 1733.61,682.856 1734.17,682.856 1734.73,682.856 1735.29,682.856 1735.85,682.856 1736.41,682.856 1736.97,682.856 1737.52,682.856 1738.08,682.856 1738.64,682.856 1739.2,682.856 1739.76,682.856 1740.32,682.856 1740.88,682.856 1741.44,682.856 1742,682.856 1742.56,682.856 1743.12,682.856 1743.68,682.856 1744.24,682.856 1744.79,682.856 1745.35,682.856 1745.91,682.856 1746.47,682.856 1747.03,682.856 1747.59,682.856 1748.15,682.856 1748.71,682.856 1749.27,682.856 1749.83,682.856 1750.39,682.856 1750.95,682.856 1751.51,682.856 1752.06,682.856 1752.62,682.856 1753.18,682.856 1753.74,682.856 1754.3,682.856 1754.86,682.856 1755.42,682.856 1755.98,682.856 1756.54,682.856 1757.1,682.856 1757.66,682.856 1758.22,682.856 1758.78,682.856 1759.34,682.856 1759.89,682.856 1760.45,682.856 1761.01,682.856 1761.57,682.856 1762.13,682.856 1762.69,682.856 1763.25,682.856 1763.81,682.856 1764.37,682.856 1764.93,682.856 1765.49,682.856 1766.05,682.856 1766.61,682.856 1767.16,682.856 1767.72,682.856 1768.28,682.856 1768.84,682.856 1769.4,682.856 1769.96,682.856 1770.52,682.856 1771.08,682.856 1771.64,682.856 1772.2,682.856 1772.76,682.856 1773.32,682.856 1773.88,682.856 1774.43,682.856 1774.99,682.856 1775.55,682.856 1776.11,682.856 1776.67,682.856 1777.23,682.856 1777.79,682.856 1778.35,682.856 1778.91,682.856 1779.47,682.856 1780.03,682.856 1780.59,682.856 1781.15,682.856 1781.71,682.856 1782.26,682.856 1782.82,682.856 1783.38,682.856 1783.94,682.856 1784.5,682.856 1785.06,682.856 1785.62,682.856 1786.18,682.856 1786.74,682.856 1787.3,682.856 1787.86,682.856 1788.42,682.856 1788.98,682.856 1789.53,682.856 1790.09,682.856 1790.65,682.856 1791.21,682.856 1791.77,682.856 1792.33,682.856 1792.89,682.856 1793.45,682.856 1794.01,682.856 1794.57,682.856 1795.13,682.856 1795.69,682.856 1796.25,682.856 1796.8,682.856 1797.36,682.856 1797.92,682.856 1798.48,682.856 1799.04,682.856 1799.6,682.856 1800.16,682.856 1800.72,682.856 1801.28,682.856 1801.84,682.856 1802.4,682.856 1802.96,682.856 1803.52,682.856 1804.08,682.856 1804.63,682.856 1805.19,682.856 1805.75,682.856 1806.31,682.856 1806.87,682.856 1807.43,682.856 1807.99,682.856 1808.55,682.856 1809.11,682.856 1809.67,682.856 1810.23,682.856 1810.79,682.856 1811.35,682.856 1811.9,682.856 1812.46,682.856 1813.02,682.856 1813.58,682.856 1814.14,682.856 1814.7,682.856 1815.26,682.856 1815.82,682.856 1816.38,682.856 1816.94,682.856 1817.5,682.856 1818.06,682.856 1818.62,682.856 1819.18,682.856 1819.73,682.856 1820.29,682.856 1820.85,682.856 1821.41,682.856 1821.97,682.856 1822.53,682.856 1823.09,682.856 1823.65,682.856 1824.21,682.856 1824.77,682.856 1825.33,682.856 1825.89,682.856 1826.45,682.856 1827,682.856 1827.56,682.856 1828.12,682.856 1828.68,682.856 1829.24,682.856 1829.8,682.856 1830.36,682.856 1830.92,682.856 1831.48,682.856 1832.04,682.856 1832.6,682.856 1833.16,682.856 1833.72,682.856 1834.27,682.856 1834.83,682.856 1835.39,682.856 1835.95,682.856 1836.51,682.856 1837.07,682.856 1837.63,682.856 1838.19,682.856 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.026024000414825 ± 0.020764462369562878\nProjected Energy: -4.011414081270581 ± (0.004450693493045499, 0.004576155790546821)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.657666</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.3465e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">1.0059e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">9.558e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.293e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.595e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">8.405e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
