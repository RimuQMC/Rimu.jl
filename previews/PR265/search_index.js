var documenterSearchIndex = {"docs":
[{"location":"mpi.html#Working-with-MPI","page":"Using MPI","title":"Working with MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If you are using PDVecs to store your vectors, working with MPI should be fairly straightforward. Generally, PDVec will work with MPI automatically, as long as MPI is set up correctly and a few common pitfalls are avoided.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Rimu includes an unexported module RMPI, which must be imported to access additional MPI-related functionality.","category":"page"},{"location":"mpi.html#Configuring-MPI","page":"Using MPI","title":"Configuring MPI","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When running on a cluster, ensure that MPI.jl is using the system binary. See the MPI.jl documentation for more information.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"It is always a good idea to start your script with a quick test that ensures the MPI is set up correctly. One way to do this is to open with","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"using Rimu.RMPI\nmpi_allprintln(\"hello\")","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"which should print something like","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"[ rank 0: hello\n[ rank 1: hello\n[ rank 2: hello\n[ rank 3: hello","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"If it prints rank 0 several times, the code will run, but ranks will not communicate.","category":"page"},{"location":"mpi.html#Using-Slurm","page":"Using MPI","title":"Using Slurm","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using PDVec, the recommended setup is to use threads to parallelise the computation within a node, and to only use MPI for inter-node communication. In a slurm script, this is done as follows:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"...\n#SBATCH --ntasks-per-node=1\n#SBATCH --nodes=4            # replace 4 with the desired number of nodes\n#SBATCH --cpus-per-task=28   # replace 28 with the number of cores available in a node\n#SBATCH --hint=nomultithread # don't use hyperthreading\n...\n\nsrun julia --project -tauto script.jl","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"On some clusters, additional settings must be used with srun, for example the CTCP cluster requires the following.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"srun mpi=pmi2 julia --project -tauto script.jl","category":"page"},{"location":"mpi.html#Common-pitfalls-with-reducing-functions","page":"Using MPI","title":"Common pitfalls with reducing functions","text":"","category":"section"},{"location":"mpi.html#Using-@mpi_root","page":"Using MPI","title":"Using @mpi_root","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Take care to not use reducing functions (such as length, sum, norm, ...) inside @mpi_root blocks. Doing so will only initiate the distributed reduction on one rank only, which will cause the code to go out of sync and freeze. As an example, to report the current length of a vector, calculate the length before the @mpi_root block:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\n@mpi_root println(\"vector length is $len\")","category":"page"},{"location":"mpi.html#Threaded-operations-and-reductions","page":"Using MPI","title":"Threaded operations and reductions","text":"","category":"section"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"When using functions that take anonymous functions, such as map(!), sum, or mapreduce, it is important that the anonymous functions passed to them do not perform any MPI-reducing operations (length, norm, sum, etc.). These anonymous functions are executed on multiple threads and initiating MPI communication from multiple threads may cause issues.","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"As an example, suppose we want to scale a vector by its length by using map!. The correct way to write this code is as","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"len = length(pdvec)\nmap!(values(pdvec)) do x\n\tx / len\nend","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"Similar to the previous example, len is calculated first and not within the body of map!. In this specific case, an even better option is to use the scale! function from VectorInterface.jl:","category":"page"},{"location":"mpi.html","page":"Using MPI","title":"Using MPI","text":"scale!(pdvec, 1 / length(pdvec))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"EditURL = \"../../../scripts/G2-example.jl\"","category":"page"},{"location":"generated/G2-example.html#Example-3:-Calculating-observables","page":"Calculating observables","title":"Example 3: Calculating observables","text":"","category":"section"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is an example calculation of the two-body correlation function G_2.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"A runnable script for this example is located here. Run it with julia G2-example.jl.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"First, we load the reqired packages. Rimu for FCIQMC calculation, and DataFrames for maniplating the output.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"using Rimu\nusing Random\nusing DataFrames","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the same Hamiltonian as the first example, a Bose-Hubbard model with 6 particles in 6 sites, with strong interactions (we expect a Mott insulating state).","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"m = n = 6\ninitial_address = near_uniform(BoseFS{n,m})\nH = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we define the operators for the observables we wish to calculate.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"dvals = 0:m-1\nG2list = ((G2RealCorrelator(d) for d in dvals)...,)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"(G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This is a tuple of G2RealCorrelators, subtypes of AbstractHamiltonian. It calculates the density-density correlation function on a lattice","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"with normalisation","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Observables that are defined by expectation values are calculated using the \"replica trick\". Thereby several independent copies or \"replicas\" of the state vector are propagated simultaneously. The reason is to have two (or more) stochastically independent copies of the state vector available such that we can calculate bias-free overlaps. We enable this by defining a ReplicaStrategy. Each replica has its own state and FCIQMC is effectively performed independently on each one.  For calculating observables, we use AllOverlaps for the ReplicaStrategy. At each timestep, after the FCIQMC step is performed on, this strategy calculates the overlaps of every operator with the wavefunctions from each pair of replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"To obtain an unbiased result, at least two replicas should be used. One can also use more than two to improve the statistics. This is particularly helpful when the walker number is low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"num_replicas = 3\nreplica_strategy = AllOverlaps(num_replicas; operator = G2list)","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"AllOverlaps{3, 6, Tuple{G2RealCorrelator{0}, G2RealCorrelator{1}, G2RealCorrelator{2}, G2RealCorrelator{3}, G2RealCorrelator{4}, G2RealCorrelator{5}}, true}((G2RealCorrelator(0), G2RealCorrelator(1), G2RealCorrelator(2), G2RealCorrelator(3), G2RealCorrelator(4), G2RealCorrelator(5)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Other FCIQMC parameters and strategies can be set in the same way as before.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"steps_equilibrate = 1_000\nsteps_measure = 5_000\ntargetwalkers = 100;\ndτ = 0.001\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we run FCIQMC. Note that passing an initial vector is optional - if we only pass the style, a vector with the appropriate style is created automatically.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"df, state = lomc!(\n    H; style=IsDynamicSemistochastic(),\n    dτ,\n    laststep = steps_equilibrate + steps_measure,\n    targetwalkers,\n    replica_strategy,\n);","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The output DataFrame has FCIQMC statistics for each replica (e.g. shift, norm),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(startswith(\"shift_\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"shift_1\", \"shift_2\", \"shift_3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"as well as vector-vector overlaps (e.g. c1_dot_c2),","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"dot\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_dot_c2\", \"c1_dot_c3\", \"c2_dot_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"and operator overlaps (e.g. c1_Op1_c2) between the replicas.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(filter(contains(\"Op\"), names(df)))","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"[\"c1_Op1_c2\", \"c1_Op2_c2\", \"c1_Op3_c2\", \"c1_Op4_c2\", \"c1_Op5_c2\", \"c1_Op6_c2\", \"c1_Op1_c3\", \"c1_Op2_c3\", \"c1_Op3_c3\", \"c1_Op4_c3\", \"c1_Op5_c3\", \"c1_Op6_c3\", \"c2_Op1_c3\", \"c2_Op2_c3\", \"c2_Op3_c3\", \"c2_Op4_c3\", \"c2_Op5_c3\", \"c2_Op6_c3\"]\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The vector-vector and operator overlaps go into calculating the Rayleigh quotient for an observable","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"    langle hatG^(2)(d) rangle = fracsum_ab mathbfc_a^dagger cdot hatG^(2)(d) cdot mathbfc_bsum_ab mathbfc_a^dagger cdot mathbfc_b ","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"The sum over all replica pairs (a,b), especially in the denominator, helps to avoid errors from poor sampling if the number of walkers is too low.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"We use the function rayleigh_replica_estimator to calculate the Rayleigh quotient using all replicas in df, returning a RatioBlockingResult. Using the keyword skip will ignore the initial equilibration steps.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Now, we can calculate the correlation function for each value of d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Two-body correlator from $num_replicas replicas:\")\nfor d in dvals\n    r = rayleigh_replica_estimator(df; op_name = \"Op$(d+1)\", skip=steps_equilibrate)\n    println(\"   G2($d) = $(r.f) ± $(r.σ_f)\")\nend","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Two-body correlator from 3 replicas:\n   G2(0) = 0.210397630724869 ± 0.002945411560125692\n   G2(1) = 0.9179375998196901 ± 0.0014487882545570095\n   G2(2) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(3) = 0.9888034965386578 ± 0.0012000192916385307\n   G2(4) = 0.9824618365485462 ± 0.0008078855891765099\n   G2(5) = 0.9179375998196901 ± 0.0014487882545570095\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"As expected, the onsite correlation at d=0 is low since this is a Mott insulating state with unit filling fraction, and is close to 10 for all other values of the displacement d.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Since we ran multiple independent replicas, we also have multiple estimates of the shift energy.","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"println(\"Shift energy from $num_replicas replicas:\")\nfor i in 1:num_replicas\n    se = shift_estimator(df; shift=\"shift_$i\", skip=steps_equilibrate)\n    println(\"   Replica $i: $(se.mean) ± $(se.err)\")\nend\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"Shift energy from 3 replicas:\n   Replica 1: -3.982824328882403 ± 0.13748856752861724\n   Replica 2: -3.974753826250174 ± 0.12466355058904417\n   Replica 3: -4.011054302602586 ± 0.12438161612595747\n","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"","category":"page"},{"location":"generated/G2-example.html","page":"Calculating observables","title":"Calculating observables","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"EditURL = \"../../../scripts/BHM-example.jl\"","category":"page"},{"location":"generated/BHM-example.html#Example-1:-1D-Bose-Hubbard-Model","page":"1D Bose-Hubbard Model","title":"Example 1: 1D Bose-Hubbard Model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is an example calculation finding the ground state of a 1D Bose-Hubbard chain with 6 particles in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"A runnable script for this example is located here. Run it with julia BHM-example.jl.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"First, we load Rimu and Plots.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"using Rimu\nusing Plots","category":"page"},{"location":"generated/BHM-example.html#Setting-up-the-model","page":"1D Bose-Hubbard Model","title":"Setting up the model","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We start by defining the physical problem. First, we generate an initial configuration which will be used as a starting point of our computation. In this example, we use a bosonic Fock state with 6 particles evenly distributed in 6 lattice sites.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_address = near_uniform(BoseFS{6,6})","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BoseFS{6,6}(1, 1, 1, 1, 1, 1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The Hamiltonian is constructed by initializing a struct with an initial address and model parameters. Here, we use the Bose Hubbard model in one-dimensional real space.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"H = HubbardReal1D(initial_address; u = 6.0, t = 1.0)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example.html#Parameters-of-the-calculation","page":"1D Bose-Hubbard Model","title":"Parameters of the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's setup the Monte Carlo calculation. We need to decide the number of walkers to use in this Monte Carlo run, which is equivalent to the average one-norm of the coefficient vector. Higher values will result in better statistics, but require more memory and computing power.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"targetwalkers = 1_000;","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"FCIQMC takes a certain number of steps to equllibrate, after which the observables will fluctuate around a mean value. In this example, we will devote 1000 steps to equilibration and take an additional 2000 steps for measurement.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"steps_equilibrate = 1_000;\nsteps_measure = 2_000;\nlast_step = steps_equilibrate + steps_measure","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"3000","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Next, we pick a time step size. FCIQMC does not have a time step error, but the time step needs to be small enough, or the computation might diverge. If the time step is too small, however, the computation might take a long time to equilibrate. The appropriate time step size is problem-dependent and is best determined through experimentation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"time_step = 0.001;","category":"page"},{"location":"generated/BHM-example.html#Defining-an-observable","page":"1D Bose-Hubbard Model","title":"Defining an observable","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's set up an observable to measure. Here we will measure the projected energy. In additon to the shift, the projected energy is a second estimator for the energy. It usually produces better statistics than the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We first need to define a projector. Here, we use the function default_starting_vector to generate a vector with only a single occupied configuration. We will use the same vector as the starting vector for the FCIQMC calculation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"initial_vector = default_starting_vector(initial_address; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"DVec{BoseFS{6, 6, BitString{11, 1, UInt16}},Float64} with 1 entry, style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|1 1 1 1 1 1⟩\" => 10.0","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The choice of the style argument already determines the FCIQMC algorithm to use. IsDynamicSemistochastic is usually the best choice as it reduces noise and improves the sign problem.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Observables that can be calculated by projection of the fluctuating quantum state onto a constant vector are passed into the ProjectorMonteCarloProblem with the post_step_strategy keyword argument.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"post_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"ProjectedEnergy{HubbardReal1D{Float64, BoseFS{6, 6, BitString{11, 1, UInt16}}, 6.0, 1.0}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}, Rimu.DictVectors.FrozenDVec{BoseFS{6, 6, BitString{11, 1, UInt16}}, Float64}}(:vproj, :hproj, HubbardReal1D(BoseFS{6,6}(1, 1, 1, 1, 1, 1); u=6.0, t=1.0), Rimu.FrozenDVec([fs\"|1 1 1 1 1 1⟩\"=>10.0]), Rimu.FrozenDVec([fs\"|1 1 1 1 2 0⟩\"=>-14.1421, fs\"|0 2 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 1 0 2⟩\"=>-14.1421, fs\"|1 2 0 1 1 1⟩\"=>-14.1421, fs\"|2 0 1 1 1 1⟩\"=>-14.1421, fs\"|1 1 1 2 0 1⟩\"=>-14.1421, fs\"|1 1 2 0 1 1⟩\"=>-14.1421, fs\"|1 1 0 2 1 1⟩\"=>-14.1421, fs\"|1 1 1 0 2 1⟩\"=>-14.1421, fs\"|1 0 2 1 1 1⟩\"=>-14.1421, fs\"|2 1 1 1 1 0⟩\"=>-14.1421, fs\"|0 1 1 1 1 2⟩\"=>-14.1421]))","category":"page"},{"location":"generated/BHM-example.html#Running-the-calculation","page":"1D Bose-Hubbard Model","title":"Running the calculation","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This is a two-step process: First we define a ProjectorMonteCarloProblem with all the parameters needed for the simulation","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"problem = ProjectorMonteCarloProblem(\n    H;\n    start_at = initial_vector,\n    last_step,\n    time_step,\n    targetwalkers,\n    post_step_strategy\n);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"To run the simulation we simply call solve on the problem","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"simulation = solve(problem);","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The simulation object contains the results of the simulation as well as state vectors and strategies. We can extract the time series data for further analysis:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"df = DataFrame(simulation);","category":"page"},{"location":"generated/BHM-example.html#Analysing-the-results","page":"1D Bose-Hubbard Model","title":"Analysing the results","text":"","category":"section"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We can plot the norm of the coefficient vector as a function of the number of steps.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"hline(\n    [targetwalkers];\n    label=\"targetwalkers\", xlabel=\"steps\", ylabel=\"norm\",\n    color=2, linestyle=:dash, margin = 1Plots.cm\n)\nplot!(df.steps, df.norm, label=\"norm\", color=1)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip680\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip680)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip681\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip680)\" d=\"M404.284 1281.45 L2211.02 1281.45 L2211.02 188.976 L404.284 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip682\">\n    <rect x=\"404\" y=\"188\" width=\"1808\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip682)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"454.849,1281.45 454.849,188.976 \"/>\n<polyline clip-path=\"url(#clip682)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1023.2,1281.45 1023.2,188.976 \"/>\n<polyline clip-path=\"url(#clip682)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1591.54,1281.45 1591.54,188.976 \"/>\n<polyline clip-path=\"url(#clip682)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2159.89,1281.45 2159.89,188.976 \"/>\n<polyline clip-path=\"url(#clip680)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip680)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"454.849,1281.45 454.849,1262.55 \"/>\n<polyline clip-path=\"url(#clip680)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1023.2,1281.45 1023.2,1262.55 \"/>\n<polyline clip-path=\"url(#clip680)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1591.54,1281.45 1591.54,1262.55 \"/>\n<polyline clip-path=\"url(#clip680)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2159.89,1281.45 2159.89,1262.55 \"/>\n<path clip-path=\"url(#clip680)\" d=\"M454.849 1312.37 Q451.238 1312.37 449.41 1315.93 Q447.604 1319.47 447.604 1326.6 Q447.604 1333.71 449.41 1337.27 Q451.238 1340.82 454.849 1340.82 Q458.484 1340.82 460.289 1337.27 Q462.118 1333.71 462.118 1326.6 Q462.118 1319.47 460.289 1315.93 Q458.484 1312.37 454.849 1312.37 M454.849 1308.66 Q460.659 1308.66 463.715 1313.27 Q466.794 1317.85 466.794 1326.6 Q466.794 1335.33 463.715 1339.94 Q460.659 1344.52 454.849 1344.52 Q449.039 1344.52 445.96 1339.94 Q442.905 1335.33 442.905 1326.6 Q442.905 1317.85 445.96 1313.27 Q449.039 1308.66 454.849 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M967.722 1339.91 L975.361 1339.91 L975.361 1313.55 L967.05 1315.21 L967.05 1310.95 L975.314 1309.29 L979.99 1309.29 L979.99 1339.91 L987.629 1339.91 L987.629 1343.85 L967.722 1343.85 L967.722 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1007.07 1312.37 Q1003.46 1312.37 1001.63 1315.93 Q999.828 1319.47 999.828 1326.6 Q999.828 1333.71 1001.63 1337.27 Q1003.46 1340.82 1007.07 1340.82 Q1010.71 1340.82 1012.51 1337.27 Q1014.34 1333.71 1014.34 1326.6 Q1014.34 1319.47 1012.51 1315.93 Q1010.71 1312.37 1007.07 1312.37 M1007.07 1308.66 Q1012.88 1308.66 1015.94 1313.27 Q1019.02 1317.85 1019.02 1326.6 Q1019.02 1335.33 1015.94 1339.94 Q1012.88 1344.52 1007.07 1344.52 Q1001.26 1344.52 998.185 1339.94 Q995.129 1335.33 995.129 1326.6 Q995.129 1317.85 998.185 1313.27 Q1001.26 1308.66 1007.07 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1037.24 1312.37 Q1033.62 1312.37 1031.8 1315.93 Q1029.99 1319.47 1029.99 1326.6 Q1029.99 1333.71 1031.8 1337.27 Q1033.62 1340.82 1037.24 1340.82 Q1040.87 1340.82 1042.68 1337.27 Q1044.5 1333.71 1044.5 1326.6 Q1044.5 1319.47 1042.68 1315.93 Q1040.87 1312.37 1037.24 1312.37 M1037.24 1308.66 Q1043.05 1308.66 1046.1 1313.27 Q1049.18 1317.85 1049.18 1326.6 Q1049.18 1335.33 1046.1 1339.94 Q1043.05 1344.52 1037.24 1344.52 Q1031.43 1344.52 1028.35 1339.94 Q1025.29 1335.33 1025.29 1326.6 Q1025.29 1317.85 1028.35 1313.27 Q1031.43 1308.66 1037.24 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1067.4 1312.37 Q1063.79 1312.37 1061.96 1315.93 Q1060.15 1319.47 1060.15 1326.6 Q1060.15 1333.71 1061.96 1337.27 Q1063.79 1340.82 1067.4 1340.82 Q1071.03 1340.82 1072.84 1337.27 Q1074.67 1333.71 1074.67 1326.6 Q1074.67 1319.47 1072.84 1315.93 Q1071.03 1312.37 1067.4 1312.37 M1067.4 1308.66 Q1073.21 1308.66 1076.26 1313.27 Q1079.34 1317.85 1079.34 1326.6 Q1079.34 1335.33 1076.26 1339.94 Q1073.21 1344.52 1067.4 1344.52 Q1061.59 1344.52 1058.51 1339.94 Q1055.45 1335.33 1055.45 1326.6 Q1055.45 1317.85 1058.51 1313.27 Q1061.59 1308.66 1067.4 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1540.15 1339.91 L1556.47 1339.91 L1556.47 1343.85 L1534.53 1343.85 L1534.53 1339.91 Q1537.19 1337.16 1541.77 1332.53 Q1546.38 1327.88 1547.56 1326.53 Q1549.81 1324.01 1550.69 1322.27 Q1551.59 1320.51 1551.59 1318.82 Q1551.59 1316.07 1549.64 1314.33 Q1547.72 1312.6 1544.62 1312.6 Q1542.42 1312.6 1539.97 1313.36 Q1537.54 1314.13 1534.76 1315.68 L1534.76 1310.95 Q1537.58 1309.82 1540.04 1309.24 Q1542.49 1308.66 1544.53 1308.66 Q1549.9 1308.66 1553.09 1311.35 Q1556.29 1314.03 1556.29 1318.52 Q1556.29 1320.65 1555.48 1322.57 Q1554.69 1324.47 1552.58 1327.07 Q1552.01 1327.74 1548.9 1330.95 Q1545.8 1334.15 1540.15 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1576.29 1312.37 Q1572.68 1312.37 1570.85 1315.93 Q1569.04 1319.47 1569.04 1326.6 Q1569.04 1333.71 1570.85 1337.27 Q1572.68 1340.82 1576.29 1340.82 Q1579.92 1340.82 1581.73 1337.27 Q1583.56 1333.71 1583.56 1326.6 Q1583.56 1319.47 1581.73 1315.93 Q1579.92 1312.37 1576.29 1312.37 M1576.29 1308.66 Q1582.1 1308.66 1585.15 1313.27 Q1588.23 1317.85 1588.23 1326.6 Q1588.23 1335.33 1585.15 1339.94 Q1582.1 1344.52 1576.29 1344.52 Q1570.48 1344.52 1567.4 1339.94 Q1564.34 1335.33 1564.34 1326.6 Q1564.34 1317.85 1567.4 1313.27 Q1570.48 1308.66 1576.29 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1606.45 1312.37 Q1602.84 1312.37 1601.01 1315.93 Q1599.2 1319.47 1599.2 1326.6 Q1599.2 1333.71 1601.01 1337.27 Q1602.84 1340.82 1606.45 1340.82 Q1610.08 1340.82 1611.89 1337.27 Q1613.72 1333.71 1613.72 1326.6 Q1613.72 1319.47 1611.89 1315.93 Q1610.08 1312.37 1606.45 1312.37 M1606.45 1308.66 Q1612.26 1308.66 1615.32 1313.27 Q1618.39 1317.85 1618.39 1326.6 Q1618.39 1335.33 1615.32 1339.94 Q1612.26 1344.52 1606.45 1344.52 Q1600.64 1344.52 1597.56 1339.94 Q1594.51 1335.33 1594.51 1326.6 Q1594.51 1317.85 1597.56 1313.27 Q1600.64 1308.66 1606.45 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1636.61 1312.37 Q1633 1312.37 1631.17 1315.93 Q1629.37 1319.47 1629.37 1326.6 Q1629.37 1333.71 1631.17 1337.27 Q1633 1340.82 1636.61 1340.82 Q1640.25 1340.82 1642.05 1337.27 Q1643.88 1333.71 1643.88 1326.6 Q1643.88 1319.47 1642.05 1315.93 Q1640.25 1312.37 1636.61 1312.37 M1636.61 1308.66 Q1642.42 1308.66 1645.48 1313.27 Q1648.56 1317.85 1648.56 1326.6 Q1648.56 1335.33 1645.48 1339.94 Q1642.42 1344.52 1636.61 1344.52 Q1630.8 1344.52 1627.72 1339.94 Q1624.67 1335.33 1624.67 1326.6 Q1624.67 1317.85 1627.72 1313.27 Q1630.8 1308.66 1636.61 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M2118.57 1325.21 Q2121.93 1325.93 2123.8 1328.2 Q2125.7 1330.47 2125.7 1333.8 Q2125.7 1338.92 2122.18 1341.72 Q2118.66 1344.52 2112.18 1344.52 Q2110.01 1344.52 2107.69 1344.08 Q2105.4 1343.66 2102.95 1342.81 L2102.95 1338.29 Q2104.89 1339.43 2107.2 1340 Q2109.52 1340.58 2112.04 1340.58 Q2116.44 1340.58 2118.73 1338.85 Q2121.05 1337.11 2121.05 1333.8 Q2121.05 1330.75 2118.89 1329.03 Q2116.76 1327.3 2112.95 1327.3 L2108.92 1327.3 L2108.92 1323.45 L2113.13 1323.45 Q2116.58 1323.45 2118.41 1322.09 Q2120.24 1320.7 2120.24 1318.11 Q2120.24 1315.44 2118.34 1314.03 Q2116.46 1312.6 2112.95 1312.6 Q2111.02 1312.6 2108.82 1313.01 Q2106.63 1313.43 2103.99 1314.31 L2103.99 1310.14 Q2106.65 1309.4 2108.96 1309.03 Q2111.3 1308.66 2113.36 1308.66 Q2118.69 1308.66 2121.79 1311.09 Q2124.89 1313.5 2124.89 1317.62 Q2124.89 1320.49 2123.25 1322.48 Q2121.6 1324.45 2118.57 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M2144.57 1312.37 Q2140.95 1312.37 2139.13 1315.93 Q2137.32 1319.47 2137.32 1326.6 Q2137.32 1333.71 2139.13 1337.27 Q2140.95 1340.82 2144.57 1340.82 Q2148.2 1340.82 2150.01 1337.27 Q2151.83 1333.71 2151.83 1326.6 Q2151.83 1319.47 2150.01 1315.93 Q2148.2 1312.37 2144.57 1312.37 M2144.57 1308.66 Q2150.38 1308.66 2153.43 1313.27 Q2156.51 1317.85 2156.51 1326.6 Q2156.51 1335.33 2153.43 1339.94 Q2150.38 1344.52 2144.57 1344.52 Q2138.76 1344.52 2135.68 1339.94 Q2132.62 1335.33 2132.62 1326.6 Q2132.62 1317.85 2135.68 1313.27 Q2138.76 1308.66 2144.57 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M2174.73 1312.37 Q2171.12 1312.37 2169.29 1315.93 Q2167.48 1319.47 2167.48 1326.6 Q2167.48 1333.71 2169.29 1337.27 Q2171.12 1340.82 2174.73 1340.82 Q2178.36 1340.82 2180.17 1337.27 Q2182 1333.71 2182 1326.6 Q2182 1319.47 2180.17 1315.93 Q2178.36 1312.37 2174.73 1312.37 M2174.73 1308.66 Q2180.54 1308.66 2183.59 1313.27 Q2186.67 1317.85 2186.67 1326.6 Q2186.67 1335.33 2183.59 1339.94 Q2180.54 1344.52 2174.73 1344.52 Q2168.92 1344.52 2165.84 1339.94 Q2162.78 1335.33 2162.78 1326.6 Q2162.78 1317.85 2165.84 1313.27 Q2168.92 1308.66 2174.73 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M2204.89 1312.37 Q2201.28 1312.37 2199.45 1315.93 Q2197.64 1319.47 2197.64 1326.6 Q2197.64 1333.71 2199.45 1337.27 Q2201.28 1340.82 2204.89 1340.82 Q2208.52 1340.82 2210.33 1337.27 Q2212.16 1333.71 2212.16 1326.6 Q2212.16 1319.47 2210.33 1315.93 Q2208.52 1312.37 2204.89 1312.37 M2204.89 1308.66 Q2210.7 1308.66 2213.75 1313.27 Q2216.83 1317.85 2216.83 1326.6 Q2216.83 1335.33 2213.75 1339.94 Q2210.7 1344.52 2204.89 1344.52 Q2199.08 1344.52 2196 1339.94 Q2192.94 1335.33 2192.94 1326.6 Q2192.94 1317.85 2196 1313.27 Q2199.08 1308.66 2204.89 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1248.87 1391.71 L1248.87 1397.25 Q1246.38 1395.98 1243.71 1395.34 Q1241.04 1394.71 1238.17 1394.71 Q1233.81 1394.71 1231.62 1396.04 Q1229.45 1397.38 1229.45 1400.05 Q1229.45 1402.09 1231.01 1403.27 Q1232.57 1404.41 1237.28 1405.46 L1239.29 1405.91 Q1245.52 1407.25 1248.13 1409.7 Q1250.78 1412.12 1250.78 1416.48 Q1250.78 1421.44 1246.83 1424.34 Q1242.91 1427.23 1236.04 1427.23 Q1233.17 1427.23 1230.06 1426.66 Q1226.97 1426.12 1223.53 1425.01 L1223.53 1418.96 Q1226.78 1420.65 1229.93 1421.51 Q1233.08 1422.33 1236.17 1422.33 Q1240.3 1422.33 1242.53 1420.93 Q1244.76 1419.5 1244.76 1416.92 Q1244.76 1414.54 1243.14 1413.26 Q1241.55 1411.99 1236.1 1410.81 L1234.07 1410.33 Q1228.62 1409.19 1226.2 1406.83 Q1223.79 1404.45 1223.79 1400.31 Q1223.79 1395.28 1227.35 1392.54 Q1230.91 1389.8 1237.47 1389.8 Q1240.72 1389.8 1243.58 1390.28 Q1246.45 1390.76 1248.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1265.89 1380.54 L1265.89 1390.66 L1277.96 1390.66 L1277.96 1395.22 L1265.89 1395.22 L1265.89 1414.57 Q1265.89 1418.93 1267.07 1420.17 Q1268.28 1421.41 1271.94 1421.41 L1277.96 1421.41 L1277.96 1426.31 L1271.94 1426.31 Q1265.16 1426.31 1262.58 1423.8 Q1260.01 1421.25 1260.01 1414.57 L1260.01 1395.22 L1255.71 1395.22 L1255.71 1390.66 L1260.01 1390.66 L1260.01 1380.54 L1265.89 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1316.15 1407.02 L1316.15 1409.89 L1289.22 1409.89 Q1289.61 1415.94 1292.85 1419.12 Q1296.13 1422.27 1301.96 1422.27 Q1305.33 1422.27 1308.48 1421.44 Q1311.66 1420.61 1314.78 1418.96 L1314.78 1424.5 Q1311.63 1425.83 1308.32 1426.53 Q1305.01 1427.23 1301.61 1427.23 Q1293.08 1427.23 1288.08 1422.27 Q1283.11 1417.3 1283.11 1408.84 Q1283.11 1400.08 1287.82 1394.96 Q1292.57 1389.8 1300.59 1389.8 Q1307.78 1389.8 1311.95 1394.45 Q1316.15 1399.07 1316.15 1407.02 M1310.3 1405.3 Q1310.23 1400.5 1307.59 1397.63 Q1304.98 1394.77 1300.65 1394.77 Q1295.75 1394.77 1292.79 1397.54 Q1289.86 1400.31 1289.42 1405.34 L1310.3 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1331.43 1420.96 L1331.43 1439.87 L1325.54 1439.87 L1325.54 1390.66 L1331.43 1390.66 L1331.43 1396.07 Q1333.28 1392.89 1336.08 1391.36 Q1338.91 1389.8 1342.82 1389.8 Q1349.32 1389.8 1353.36 1394.96 Q1357.43 1400.12 1357.43 1408.52 Q1357.43 1416.92 1353.36 1422.08 Q1349.32 1427.23 1342.82 1427.23 Q1338.91 1427.23 1336.08 1425.71 Q1333.28 1424.15 1331.43 1420.96 M1351.35 1408.52 Q1351.35 1402.06 1348.68 1398.4 Q1346.04 1394.71 1341.39 1394.71 Q1336.74 1394.71 1334.07 1398.4 Q1331.43 1402.06 1331.43 1408.52 Q1331.43 1414.98 1334.07 1418.67 Q1336.74 1422.33 1341.39 1422.33 Q1346.04 1422.33 1348.68 1418.67 Q1351.35 1414.98 1351.35 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1389.87 1391.71 L1389.87 1397.25 Q1387.38 1395.98 1384.71 1395.34 Q1382.04 1394.71 1379.17 1394.71 Q1374.81 1394.71 1372.62 1396.04 Q1370.45 1397.38 1370.45 1400.05 Q1370.45 1402.09 1372.01 1403.27 Q1373.57 1404.41 1378.28 1405.46 L1380.29 1405.91 Q1386.52 1407.25 1389.13 1409.7 Q1391.78 1412.12 1391.78 1416.48 Q1391.78 1421.44 1387.83 1424.34 Q1383.91 1427.23 1377.04 1427.23 Q1374.18 1427.23 1371.06 1426.66 Q1367.97 1426.12 1364.53 1425.01 L1364.53 1418.96 Q1367.78 1420.65 1370.93 1421.51 Q1374.08 1422.33 1377.17 1422.33 Q1381.3 1422.33 1383.53 1420.93 Q1385.76 1419.5 1385.76 1416.92 Q1385.76 1414.54 1384.14 1413.26 Q1382.55 1411.99 1377.1 1410.81 L1375.07 1410.33 Q1369.62 1409.19 1367.2 1406.83 Q1364.79 1404.45 1364.79 1400.31 Q1364.79 1395.28 1368.35 1392.54 Q1371.92 1389.8 1378.47 1389.8 Q1381.72 1389.8 1384.58 1390.28 Q1387.45 1390.76 1389.87 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip682)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1260.82 2211.02,1260.82 \"/>\n<polyline clip-path=\"url(#clip682)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,1003.48 2211.02,1003.48 \"/>\n<polyline clip-path=\"url(#clip682)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,746.134 2211.02,746.134 \"/>\n<polyline clip-path=\"url(#clip682)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,488.79 2211.02,488.79 \"/>\n<polyline clip-path=\"url(#clip682)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"404.284,231.446 2211.02,231.446 \"/>\n<polyline clip-path=\"url(#clip680)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1281.45 404.284,188.976 \"/>\n<polyline clip-path=\"url(#clip680)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1260.82 423.181,1260.82 \"/>\n<polyline clip-path=\"url(#clip680)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,1003.48 423.181,1003.48 \"/>\n<polyline clip-path=\"url(#clip680)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,746.134 423.181,746.134 \"/>\n<polyline clip-path=\"url(#clip680)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,488.79 423.181,488.79 \"/>\n<polyline clip-path=\"url(#clip680)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"404.284,231.446 423.181,231.446 \"/>\n<path clip-path=\"url(#clip680)\" d=\"M356.339 1246.62 Q352.728 1246.62 350.899 1250.19 Q349.094 1253.73 349.094 1260.86 Q349.094 1267.96 350.899 1271.53 Q352.728 1275.07 356.339 1275.07 Q359.973 1275.07 361.779 1271.53 Q363.608 1267.96 363.608 1260.86 Q363.608 1253.73 361.779 1250.19 Q359.973 1246.62 356.339 1246.62 M356.339 1242.92 Q362.149 1242.92 365.205 1247.52 Q368.284 1252.11 368.284 1260.86 Q368.284 1269.58 365.205 1274.19 Q362.149 1278.77 356.339 1278.77 Q350.529 1278.77 347.45 1274.19 Q344.395 1269.58 344.395 1260.86 Q344.395 1252.11 347.45 1247.52 Q350.529 1242.92 356.339 1242.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M290.043 1016.82 L306.363 1016.82 L306.363 1020.76 L284.418 1020.76 L284.418 1016.82 Q287.08 1014.07 291.664 1009.44 Q296.27 1004.79 297.451 1003.44 Q299.696 1000.92 300.576 999.184 Q301.478 997.425 301.478 995.735 Q301.478 992.981 299.534 991.245 Q297.613 989.508 294.511 989.508 Q292.312 989.508 289.858 990.272 Q287.427 991.036 284.65 992.587 L284.65 987.865 Q287.474 986.731 289.927 986.152 Q292.381 985.573 294.418 985.573 Q299.789 985.573 302.983 988.258 Q306.177 990.944 306.177 995.434 Q306.177 997.564 305.367 999.485 Q304.58 1001.38 302.474 1003.98 Q301.895 1004.65 298.793 1007.86 Q295.691 1011.06 290.043 1016.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M316.224 986.198 L334.58 986.198 L334.58 990.133 L320.506 990.133 L320.506 998.606 Q321.524 998.258 322.543 998.096 Q323.562 997.911 324.58 997.911 Q330.367 997.911 333.747 1001.08 Q337.126 1004.25 337.126 1009.67 Q337.126 1015.25 333.654 1018.35 Q330.182 1021.43 323.862 1021.43 Q321.687 1021.43 319.418 1021.06 Q317.173 1020.69 314.765 1019.95 L314.765 1015.25 Q316.849 1016.38 319.071 1016.94 Q321.293 1017.49 323.77 1017.49 Q327.774 1017.49 330.112 1015.39 Q332.45 1013.28 332.45 1009.67 Q332.45 1006.06 330.112 1003.95 Q327.774 1001.85 323.77 1001.85 Q321.895 1001.85 320.02 1002.26 Q318.168 1002.68 316.224 1003.56 L316.224 986.198 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M356.339 989.277 Q352.728 989.277 350.899 992.842 Q349.094 996.383 349.094 1003.51 Q349.094 1010.62 350.899 1014.18 Q352.728 1017.73 356.339 1017.73 Q359.973 1017.73 361.779 1014.18 Q363.608 1010.62 363.608 1003.51 Q363.608 996.383 361.779 992.842 Q359.973 989.277 356.339 989.277 M356.339 985.573 Q362.149 985.573 365.205 990.18 Q368.284 994.763 368.284 1003.51 Q368.284 1012.24 365.205 1016.85 Q362.149 1021.43 356.339 1021.43 Q350.529 1021.43 347.45 1016.85 Q344.395 1012.24 344.395 1003.51 Q344.395 994.763 347.45 990.18 Q350.529 985.573 356.339 985.573 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M286.062 728.854 L304.418 728.854 L304.418 732.789 L290.344 732.789 L290.344 741.262 Q291.363 740.914 292.381 740.752 Q293.4 740.567 294.418 740.567 Q300.205 740.567 303.585 743.738 Q306.964 746.91 306.964 752.326 Q306.964 757.905 303.492 761.007 Q300.02 764.085 293.701 764.085 Q291.525 764.085 289.256 763.715 Q287.011 763.345 284.603 762.604 L284.603 757.905 Q286.687 759.039 288.909 759.595 Q291.131 760.15 293.608 760.15 Q297.613 760.15 299.951 758.044 Q302.288 755.937 302.288 752.326 Q302.288 748.715 299.951 746.609 Q297.613 744.502 293.608 744.502 Q291.733 744.502 289.858 744.919 Q288.006 745.336 286.062 746.215 L286.062 728.854 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M326.177 731.933 Q322.566 731.933 320.737 735.498 Q318.932 739.039 318.932 746.169 Q318.932 753.275 320.737 756.84 Q322.566 760.382 326.177 760.382 Q329.811 760.382 331.617 756.84 Q333.446 753.275 333.446 746.169 Q333.446 739.039 331.617 735.498 Q329.811 731.933 326.177 731.933 M326.177 728.229 Q331.987 728.229 335.043 732.836 Q338.122 737.419 338.122 746.169 Q338.122 754.896 335.043 759.502 Q331.987 764.085 326.177 764.085 Q320.367 764.085 317.288 759.502 Q314.233 754.896 314.233 746.169 Q314.233 737.419 317.288 732.836 Q320.367 728.229 326.177 728.229 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M356.339 731.933 Q352.728 731.933 350.899 735.498 Q349.094 739.039 349.094 746.169 Q349.094 753.275 350.899 756.84 Q352.728 760.382 356.339 760.382 Q359.973 760.382 361.779 756.84 Q363.608 753.275 363.608 746.169 Q363.608 739.039 361.779 735.498 Q359.973 731.933 356.339 731.933 M356.339 728.229 Q362.149 728.229 365.205 732.836 Q368.284 737.419 368.284 746.169 Q368.284 754.896 365.205 759.502 Q362.149 764.085 356.339 764.085 Q350.529 764.085 347.45 759.502 Q344.395 754.896 344.395 746.169 Q344.395 737.419 347.45 732.836 Q350.529 728.229 356.339 728.229 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M284.835 471.51 L307.057 471.51 L307.057 473.501 L294.511 506.07 L289.627 506.07 L301.432 475.445 L284.835 475.445 L284.835 471.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M316.224 471.51 L334.58 471.51 L334.58 475.445 L320.506 475.445 L320.506 483.917 Q321.524 483.57 322.543 483.408 Q323.562 483.223 324.58 483.223 Q330.367 483.223 333.747 486.394 Q337.126 489.566 337.126 494.982 Q337.126 500.561 333.654 503.663 Q330.182 506.741 323.862 506.741 Q321.687 506.741 319.418 506.371 Q317.173 506.001 314.765 505.26 L314.765 500.561 Q316.849 501.695 319.071 502.251 Q321.293 502.806 323.77 502.806 Q327.774 502.806 330.112 500.7 Q332.45 498.593 332.45 494.982 Q332.45 491.371 330.112 489.265 Q327.774 487.158 323.77 487.158 Q321.895 487.158 320.02 487.575 Q318.168 487.991 316.224 488.871 L316.224 471.51 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M356.339 474.589 Q352.728 474.589 350.899 478.154 Q349.094 481.695 349.094 488.825 Q349.094 495.931 350.899 499.496 Q352.728 503.038 356.339 503.038 Q359.973 503.038 361.779 499.496 Q363.608 495.931 363.608 488.825 Q363.608 481.695 361.779 478.154 Q359.973 474.589 356.339 474.589 M356.339 470.885 Q362.149 470.885 365.205 475.492 Q368.284 480.075 368.284 488.825 Q368.284 497.552 365.205 502.158 Q362.149 506.741 356.339 506.741 Q350.529 506.741 347.45 502.158 Q344.395 497.552 344.395 488.825 Q344.395 480.075 347.45 475.492 Q350.529 470.885 356.339 470.885 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M256.664 244.791 L264.303 244.791 L264.303 218.425 L255.992 220.092 L255.992 215.833 L264.256 214.166 L268.932 214.166 L268.932 244.791 L276.571 244.791 L276.571 248.726 L256.664 248.726 L256.664 244.791 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M296.015 217.245 Q292.404 217.245 290.576 220.809 Q288.77 224.351 288.77 231.481 Q288.77 238.587 290.576 242.152 Q292.404 245.694 296.015 245.694 Q299.65 245.694 301.455 242.152 Q303.284 238.587 303.284 231.481 Q303.284 224.351 301.455 220.809 Q299.65 217.245 296.015 217.245 M296.015 213.541 Q301.826 213.541 304.881 218.147 Q307.96 222.731 307.96 231.481 Q307.96 240.208 304.881 244.814 Q301.826 249.397 296.015 249.397 Q290.205 249.397 287.127 244.814 Q284.071 240.208 284.071 231.481 Q284.071 222.731 287.127 218.147 Q290.205 213.541 296.015 213.541 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M326.177 217.245 Q322.566 217.245 320.737 220.809 Q318.932 224.351 318.932 231.481 Q318.932 238.587 320.737 242.152 Q322.566 245.694 326.177 245.694 Q329.811 245.694 331.617 242.152 Q333.446 238.587 333.446 231.481 Q333.446 224.351 331.617 220.809 Q329.811 217.245 326.177 217.245 M326.177 213.541 Q331.987 213.541 335.043 218.147 Q338.122 222.731 338.122 231.481 Q338.122 240.208 335.043 244.814 Q331.987 249.397 326.177 249.397 Q320.367 249.397 317.288 244.814 Q314.233 240.208 314.233 231.481 Q314.233 222.731 317.288 218.147 Q320.367 213.541 326.177 213.541 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M356.339 217.245 Q352.728 217.245 350.899 220.809 Q349.094 224.351 349.094 231.481 Q349.094 238.587 350.899 242.152 Q352.728 245.694 356.339 245.694 Q359.973 245.694 361.779 242.152 Q363.608 238.587 363.608 231.481 Q363.608 224.351 361.779 220.809 Q359.973 217.245 356.339 217.245 M356.339 213.541 Q362.149 213.541 365.205 218.147 Q368.284 222.731 368.284 231.481 Q368.284 240.208 365.205 244.814 Q362.149 249.397 356.339 249.397 Q350.529 249.397 347.45 244.814 Q344.395 240.208 344.395 231.481 Q344.395 222.731 347.45 218.147 Q350.529 213.541 356.339 213.541 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M184.22 784.801 L205.736 784.801 L205.736 790.657 L184.411 790.657 Q179.351 790.657 176.836 792.631 Q174.322 794.604 174.322 798.551 Q174.322 803.293 177.345 806.03 Q180.369 808.768 185.589 808.768 L205.736 808.768 L205.736 814.656 L170.088 814.656 L170.088 808.768 L175.627 808.768 Q172.412 806.667 170.821 803.834 Q169.229 800.97 169.229 797.246 Q169.229 791.103 173.049 787.952 Q176.836 784.801 184.22 784.801 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M174.194 759.306 Q174.194 764.017 177.886 766.754 Q181.547 769.491 187.944 769.491 Q194.342 769.491 198.034 766.786 Q201.694 764.049 201.694 759.306 Q201.694 754.627 198.002 751.89 Q194.31 749.153 187.944 749.153 Q181.61 749.153 177.918 751.89 Q174.194 754.627 174.194 759.306 M169.229 759.306 Q169.229 751.667 174.194 747.307 Q179.16 742.946 187.944 742.946 Q196.697 742.946 201.694 747.307 Q206.659 751.667 206.659 759.306 Q206.659 766.977 201.694 771.337 Q196.697 775.666 187.944 775.666 Q179.16 775.666 174.194 771.337 Q169.229 766.977 169.229 759.306 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M175.563 712.582 Q174.99 713.569 174.735 714.746 Q174.449 715.892 174.449 717.293 Q174.449 722.258 177.696 724.931 Q180.91 727.573 186.958 727.573 L205.736 727.573 L205.736 733.461 L170.088 733.461 L170.088 727.573 L175.627 727.573 Q172.38 725.727 170.821 722.767 Q169.229 719.807 169.229 715.574 Q169.229 714.969 169.325 714.237 Q169.388 713.505 169.547 712.614 L175.563 712.582 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M176.932 679.83 Q172.985 677.634 171.107 674.579 Q169.229 671.523 169.229 667.385 Q169.229 661.815 173.144 658.792 Q177.027 655.768 184.22 655.768 L205.736 655.768 L205.736 661.656 L184.411 661.656 Q179.287 661.656 176.804 663.47 Q174.322 665.285 174.322 669.009 Q174.322 673.56 177.345 676.202 Q180.369 678.844 185.589 678.844 L205.736 678.844 L205.736 684.732 L184.411 684.732 Q179.255 684.732 176.804 686.546 Q174.322 688.36 174.322 692.148 Q174.322 696.636 177.377 699.278 Q180.401 701.919 185.589 701.919 L205.736 701.919 L205.736 707.808 L170.088 707.808 L170.088 701.919 L175.627 701.919 Q172.348 699.914 170.789 697.113 Q169.229 694.312 169.229 690.461 Q169.229 686.578 171.202 683.873 Q173.176 681.135 176.932 679.83 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip682)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"-1402.46,231.446 4017.76,231.446 \"/>\n<polyline clip-path=\"url(#clip682)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"455.418,1250.53 455.986,1250.45 456.554,1250.31 457.123,1250.09 457.691,1249.81 458.259,1249.47 458.828,1249.06 459.396,1248.59 459.964,1248.04 460.533,1247.43 461.101,1246.75 461.669,1244.96 462.238,1244.12 462.806,1243.22 463.375,1241.19 463.943,1240.1 464.511,1238.92 465.08,1237.63 465.648,1236.23 466.216,1234.72 466.785,1233.09 467.353,1231.32 467.921,1228.4 468.49,1226.33 469.058,1224.13 469.626,1221.78 470.195,1219.27 470.763,1215.57 471.331,1211.62 471.9,1208.53 472.468,1204.21 473.036,1200.72 473.605,1197.04 474.173,1192.12 474.741,1186.96 475.31,1180.57 475.878,1173.98 476.446,1168.11 477.015,1162.08 477.583,1156.97 478.152,1150.58 478.72,1144.98 479.288,1138.04 479.857,1131.97 480.425,1122.57 480.993,1115.05 481.562,1107.37 482.13,1098.44 482.698,1091.38 483.267,1082.23 483.835,1073.83 484.403,1066.37 484.972,1058.76 485.54,1049.96 486.108,1041.95 486.677,1032.71 487.245,1022.21 487.813,1013.72 488.382,1004.02 488.95,995.113 489.518,986.072 490.087,976.889 490.655,964.525 491.224,953.186 491.792,943.872 492.36,933.496 492.929,922.999 493.497,911.406 494.065,899.904 494.634,888.247 495.202,876.701 495.77,866.28 496.339,856.757 496.907,847.38 497.475,836.845 498.044,825.317 498.612,813.955 499.18,802.756 499.749,790.602 500.317,780.595 500.885,771.691 501.454,760.588 502.022,748.729 502.59,737.041 503.159,727.434 503.727,715.989 504.295,706.677 504.864,698.472 505.432,689.223 506.001,678.972 506.569,667.909 507.137,659.049 507.706,648.318 508.274,640.717 508.842,631.351 509.411,621.981 509.979,611.547 510.547,605.448 511.116,598.341 511.684,590.205 512.252,583.285 512.821,575.39 513.389,568.619 513.957,561.792 514.526,552.18 515.094,547.849 515.662,538.25 516.231,532.053 516.799,525.962 517.367,519.82 517.936,511.701 518.504,503.819 519.072,497.214 519.641,491.598 520.209,486.037 520.778,479.751 521.346,474.508 521.914,468.294 522.483,464.161 523.051,458.106 523.619,449.941 524.188,443.24 524.756,438.069 525.324,433.812 525.893,425.64 526.461,419.732 527.029,415.039 527.598,409.258 528.166,404.799 528.734,402.46 529.303,399.09 529.871,394.698 530.439,391.486 531.008,388.371 531.576,384.319 532.144,379.246 532.713,376.495 533.281,370.634 533.85,365.081 534.418,359.836 534.986,356.703 535.555,355.767 536.123,350.593 536.691,347.598 537.26,343.748 537.828,338.929 538.396,337.313 538.965,334.632 539.533,335.259 540.101,333.711 540.67,327.755 541.238,325.572 541.806,323.187 542.375,321.715 542.943,320.363 543.511,317.889 544.08,314.462 544.648,312.306 545.216,309.12 545.785,308.868 546.353,306.776 546.921,305.894 547.49,305.986 548.058,302.888 548.627,302.797 549.195,298.897 549.763,295.273 550.332,292.728 550.9,290.253 551.468,286.843 552.037,286.572 552.605,287.418 553.173,288.135 553.742,287.628 554.31,286.213 554.878,285.895 555.447,284.489 556.015,283.929 556.583,282.518 557.152,281.972 557.72,279.358 558.288,279.22 558.857,280.11 559.425,278.658 559.993,276.146 560.562,272.918 561.13,273.937 561.698,272.881 562.267,271.79 562.835,268.691 563.404,267.771 563.972,266.846 564.54,265.869 565.109,266.079 565.677,265.171 566.245,264.146 566.814,264.35 567.382,264.368 567.95,265.385 568.519,265.321 569.087,263.201 569.655,261.323 570.224,262.642 570.792,261.841 571.36,260.956 571.929,259.874 572.497,260.239 573.065,261.498 573.634,260.581 574.202,262.548 574.77,263.367 575.339,264.19 575.907,262.778 576.476,262.399 577.044,261.06 577.612,260.808 578.181,259.495 578.749,260.436 579.317,260.168 579.886,259.939 580.454,258.746 581.022,258.596 581.591,258.488 582.159,255.225 582.727,255.904 583.296,253.881 583.864,254.93 584.432,253.838 585.001,253.755 585.569,253.74 586.137,252.602 586.706,251.523 587.274,251.483 587.842,251.456 588.411,254.558 588.979,255.472 589.547,253.975 590.116,253.872 590.684,252.681 591.253,250.448 591.821,249.445 592.389,251.464 592.958,252.587 593.526,250.281 594.094,249.092 594.663,248.295 595.231,247.232 595.799,248.597 596.368,248.667 596.936,248.734 597.504,247.697 598.073,248.65 598.641,245.507 599.209,247.866 599.778,248.931 600.346,247.905 600.914,246.949 601.483,244.102 602.051,243.442 602.619,242.599 603.188,241.862 603.756,244.379 604.325,243.511 604.893,245.932 605.461,246.162 606.03,247.318 606.598,246.886 607.166,246.904 607.735,247.838 608.303,245.619 608.871,244.583 609.44,245.68 610.008,245.704 610.576,244.543 611.145,242.365 611.713,241.362 612.281,240.653 612.85,240.011 613.418,239.434 613.986,240.973 614.555,239.17 615.123,241.721 615.691,240.619 616.26,239.816 616.828,239.826 617.396,241.195 617.965,239.139 618.533,240.416 619.102,240.702 619.67,239.968 620.238,239.113 620.807,240.497 621.375,240.656 621.943,239.756 622.512,238.074 623.08,240.556 623.648,240.732 624.217,240.779 624.785,238.778 625.353,239.035 625.922,238.43 626.49,238.662 627.058,240.99 627.627,239.153 628.195,238.236 628.763,238.705 629.332,241.071 629.9,241.079 630.468,241.237 631.037,240.267 631.605,236.473 632.173,236.415 632.742,236.676 633.31,238.202 633.879,239.438 634.447,241.463 635.015,240.612 635.584,241.719 636.152,239.666 636.72,237.731 637.289,239.963 637.857,238.782 638.425,237.977 638.994,239.01 639.562,239.179 640.13,238.149 640.699,238.366 641.267,237.647 641.835,238.882 642.404,240.961 642.972,239.875 643.54,240.123 644.109,240.328 644.677,239.307 645.245,239.467 645.814,238.522 646.382,241.645 646.951,240.701 647.519,240.553 648.087,240.364 648.656,240.27 649.224,240.358 649.792,241.461 650.361,240.942 650.929,241.68 651.497,241.583 652.066,240.444 652.634,239.257 653.202,239.246 653.771,240.12 654.339,239.701 654.907,237.678 655.476,239.774 656.044,239.44 656.612,239.22 657.181,240.073 657.749,239.884 658.317,238.695 658.886,237.5 659.454,235.382 660.022,235.589 660.591,234.861 661.159,236.064 661.728,235.108 662.296,235.089 662.864,232.007 663.433,232.394 664.001,232.873 664.569,233.415 665.138,234.877 665.706,237.093 666.274,238.508 666.843,237.315 667.411,236.215 667.979,235.186 668.548,236.46 669.116,234.417 669.684,235.683 670.253,234.823 670.821,235.958 671.389,235.905 671.958,233.727 672.526,234.124 673.094,234.397 673.663,233.512 674.231,233.598 674.799,232.917 675.368,232.139 675.936,233.482 676.505,232.64 677.073,230.952 677.641,231.395 678.21,232.89 678.778,233.132 679.346,233.575 679.915,231.845 680.483,233.197 681.051,232.491 681.62,232.824 682.188,233.189 682.756,232.594 683.325,229.861 683.893,231.556 684.461,232.048 685.03,232.665 685.598,230.82 686.166,232.463 686.735,230.802 687.303,232.346 687.871,230.748 688.44,229.033 689.008,229.833 689.577,229.617 690.145,228.34 690.713,227.056 691.282,226.925 691.85,229.096 692.418,229.605 692.987,229.409 693.555,229.85 694.123,233.468 694.692,233.713 695.26,237.081 695.828,238.171 696.397,239.253 696.965,239.132 697.533,238.159 698.102,239.103 698.67,240.216 699.238,237.829 699.807,236.66 700.375,235.619 700.943,236.726 701.512,236.833 702.08,237.814 702.648,237.83 703.217,236.959 703.785,237.01 704.354,237.088 704.922,237.116 705.49,236.056 706.059,235.99 706.627,233.137 707.195,233.378 707.764,232.588 708.332,234.058 708.9,232.09 709.469,231.343 710.037,231.94 710.605,231.174 711.174,231.618 711.742,232.955 712.31,232.411 712.879,233.922 713.447,234.152 714.015,234.185 714.584,235.231 715.152,233.371 715.72,235.513 716.289,236.388 716.857,240.473 717.425,239.201 717.994,239.072 718.562,239.049 719.131,237.963 719.699,237.907 720.267,237.818 720.836,240.722 721.404,241.203 721.972,239.614 722.541,238.282 723.109,238.026 723.677,236.802 724.246,239.023 724.814,241.9 725.382,241.426 725.951,240.881 726.519,238.37 727.087,236.95 727.656,237.702 728.224,237.673 728.792,237.567 729.361,237.284 729.929,235.929 730.497,238.854 731.066,233.355 731.634,233.534 732.203,232.657 732.771,233.852 733.339,233.703 733.908,233.681 734.476,234.898 735.044,235.826 735.613,235.725 736.181,231.45 736.749,232.334 737.318,232.285 737.886,230.356 738.454,230.573 739.023,230.937 739.591,230.212 740.159,233.69 740.728,232.534 741.296,231.364 741.864,230.527 742.433,229.726 743.001,227.89 743.569,231.323 744.138,231.389 744.706,231.58 745.274,230.602 745.843,231.788 746.411,233.215 746.98,231.45 747.548,231.715 748.116,231.792 748.685,232.798 749.253,229.888 749.821,229.092 750.39,229.414 750.958,231.73 751.526,227.771 752.095,227.208 752.663,231.024 753.231,230.198 753.8,232.57 754.368,233.939 754.936,233.086 755.505,230.137 756.073,230.565 756.641,228.876 757.21,229.49 757.778,228.889 758.346,231.357 758.915,231.501 759.483,227.572 760.052,226.965 760.62,226.538 761.188,229.378 761.757,229.83 762.325,230.167 762.893,229.66 763.462,230.192 764.03,231.614 764.598,234.016 765.167,234.208 765.735,235.347 766.303,235.338 766.872,235.387 767.44,234.524 768.008,235.566 768.577,239.927 769.145,242.619 769.713,241.164 770.282,242.468 770.85,241.858 771.418,240.375 771.987,241.005 772.555,239.58 773.123,239.173 773.692,238.722 774.26,237.477 774.829,237.201 775.397,240.126 775.965,241.606 776.534,241.827 777.102,242.212 777.67,241.823 778.239,241.555 778.807,239.827 779.375,238.352 779.944,239.063 780.512,238.46 781.08,235.679 781.649,233.493 782.217,234.585 782.785,235.462 783.354,235.152 783.922,234.085 784.49,234.902 785.059,233.647 785.627,233.593 786.195,232.332 786.764,229.115 787.332,228.281 787.9,230.407 788.469,231.519 789.037,230.322 789.606,228.371 790.174,228.582 790.742,227.85 791.311,227.047 791.879,229.554 792.447,230.984 793.016,231.11 793.584,232.31 794.152,231.529 794.721,231.358 795.289,231.639 795.857,230.661 796.426,228.825 796.994,228.161 797.562,229.414 798.131,229.595 798.699,228.747 799.267,226.087 799.836,228.653 800.404,229.044 800.972,229.225 801.541,230.705 802.109,231.093 802.678,231.313 803.246,230.465 803.814,228.437 804.383,230.817 804.951,231.057 805.519,230.321 806.088,229.334 806.656,230.574 807.224,230.751 807.793,229.805 808.361,230.274 808.929,229.662 809.498,229.99 810.066,229.091 810.634,228.429 811.203,230.729 811.771,235.253 812.339,234.249 812.908,234.36 813.476,235.447 814.044,235.236 814.613,238.081 815.181,235.55 815.749,237.408 816.318,239.194 816.886,239.809 817.455,239.403 818.023,240.023 818.591,239.553 819.16,239.124 819.728,238.625 820.296,240.234 820.865,240.671 821.433,240.967 822.001,239.299 822.57,237.592 823.138,237.211 823.706,237.835 824.275,236.434 824.843,236.092 825.411,236.683 825.98,236.409 826.548,237.01 827.116,237.636 827.685,237.206 828.253,237.617 828.821,239.125 829.39,237.403 829.958,234.834 830.526,235.492 831.095,233.905 831.663,233.579 832.232,233.433 832.8,234.062 833.368,232.627 833.937,231.472 834.505,230.365 835.073,230.186 835.642,231.171 836.21,229.822 836.778,229.826 837.347,230.02 837.915,228.997 838.483,228.18 839.052,227.27 839.62,226.635 840.188,227.884 840.757,229.279 841.325,227.329 841.893,223.704 842.462,224.407 843.03,223.918 843.598,224.523 844.167,225.061 844.735,224.583 845.304,226.252 845.872,230.025 846.44,231.272 847.009,233.388 847.577,234.226 848.145,232.902 848.714,233.86 849.282,233.592 849.85,233.429 850.419,232.289 850.987,232.985 851.555,232.931 852.124,234.957 852.692,235.913 853.26,234.69 853.829,235.195 854.397,232.052 854.965,233.009 855.534,234.026 856.102,232.771 856.67,232.66 857.239,232.287 857.807,231.27 858.375,231.347 858.944,230.498 859.512,230.807 860.081,230.787 860.649,230.99 861.217,231.016 861.786,231.377 862.354,231.001 862.922,231.033 863.491,230.071 864.059,230.147 864.627,228.102 865.196,228.289 865.764,228.839 866.332,228.975 866.901,228.089 867.469,228.283 868.037,228.619 868.606,229.927 869.174,229.173 869.742,230.288 870.311,231.607 870.879,230.653 871.447,231.739 872.016,229.658 872.584,232.122 873.152,231.068 873.721,229.965 874.289,229.838 874.858,228.943 875.426,227.987 875.994,229.306 876.563,230.712 877.131,231.862 877.699,231.747 878.268,231.905 878.836,233.009 879.404,233.989 879.973,231.672 880.541,231.836 881.109,231.731 881.678,231.412 882.246,232.615 882.814,231.567 883.383,230.583 883.951,229.824 884.519,229.048 885.088,227.327 885.656,225.659 886.224,226.204 886.793,228.569 887.361,229.986 887.93,230.316 888.498,230.778 889.066,232.212 889.635,232.403 890.203,232.467 890.771,231.271 891.34,232.477 891.908,231.362 892.476,231.466 893.045,229.623 893.613,230.922 894.181,230.991 894.75,232.05 895.318,233.072 895.886,234.016 896.455,232.91 897.023,232.906 897.591,230.909 898.16,230.154 898.728,228.404 899.296,229.832 899.865,231.164 900.433,230.263 901.001,231.611 901.57,234.732 902.138,234.535 902.707,234.468 903.275,236.713 903.843,236.412 904.412,234.068 904.98,232.92 905.548,232.774 906.117,230.739 906.685,227.885 907.253,226.076 907.822,226.527 908.39,231.088 908.958,231.341 909.527,233.477 910.095,232.52 910.663,235.503 911.232,235.287 911.8,236.069 912.368,233.579 912.937,233.37 913.505,234.519 914.073,235.252 914.642,233.978 915.21,233.006 915.779,233.337 916.347,233.423 916.915,232.698 917.484,232.686 918.052,232.727 918.62,232.741 919.189,230.877 919.757,231.175 920.325,231.243 920.894,232.392 921.462,233.335 922.03,234.201 922.599,234.26 923.167,231.067 923.735,231.218 924.304,229.359 924.872,229.69 925.44,231.023 926.009,234.018 926.577,231.9 927.145,234.307 927.714,233.783 928.282,232.807 928.85,232.861 929.419,234.831 929.987,231.735 930.556,232.933 931.124,232.951 931.692,236.014 932.261,235.867 932.829,235.659 933.397,235.45 933.966,237.16 934.534,236.964 935.102,235.479 935.671,234.281 936.239,233.157 936.807,234.034 937.376,233.977 937.944,233.818 938.512,233.464 939.081,234.466 939.649,234.099 940.217,233.017 940.786,231.87 941.354,231.071 941.922,232.332 942.491,232.313 943.059,233.408 943.627,235.328 944.196,237.188 944.764,238.749 945.333,239.17 945.901,239.551 946.469,240.966 947.038,242.146 947.606,241.137 948.174,238.434 948.743,237.733 949.311,238.403 949.879,237.631 950.448,235.04 951.016,233.83 951.584,234.627 952.153,234.322 952.721,234.886 953.289,235.529 953.858,234.943 954.426,234.453 954.994,234.024 955.563,233.659 956.131,232.283 956.699,230.9 957.268,228.743 957.836,232.01 958.405,230.843 958.973,232.758 959.541,232.187 960.11,231.952 960.678,232.99 961.246,231.668 961.815,230.523 962.383,231.346 962.951,231.186 963.52,231.114 964.088,233.277 964.656,232.994 965.225,232.668 965.793,232.605 966.361,233.388 966.93,232.257 967.498,233.978 968.066,233.615 968.635,233.432 969.203,234.242 969.771,236.173 970.34,235.761 970.908,236.605 971.476,237.074 972.045,236.41 972.613,236.788 973.182,236.119 973.75,235.486 974.318,235.051 974.887,234.574 975.455,232.849 976.023,231.555 976.592,229.341 977.16,228.173 977.728,229.299 978.297,230.226 978.865,229.095 979.433,228.923 980.002,229.06 980.57,227.946 981.138,224.789 981.707,224.043 982.275,222.498 982.843,220.839 983.412,222.651 983.98,225.033 984.548,225.329 985.117,223.667 985.685,225.116 986.253,223.573 986.822,224.082 987.39,227.679 987.959,227.013 988.527,228.368 989.095,227.568 989.664,224.721 990.232,225.288 990.8,224.806 991.369,225.441 991.937,225.783 992.505,228.318 993.074,229.381 993.642,229.373 994.21,229.609 994.779,228.673 995.347,229.995 995.915,231.233 996.484,231.468 997.052,230.38 997.62,229.574 998.189,229.845 998.757,226.877 999.325,228.5 999.894,230.847 1000.46,230.793 1001.03,231.884 1001.6,231.913 1002.17,231.893 1002.74,229.644 1003.3,232.887 1003.87,231.881 1004.44,231.86 1005.01,230.823 1005.58,228.966 1006.15,229.227 1006.71,228.317 1007.28,228.55 1007.85,229.961 1008.42,229.049 1008.99,228.405 1009.56,228.645 1010.12,228.827 1010.69,229.148 1011.26,228.159 1011.83,229.552 1012.4,229.734 1012.97,231.968 1013.53,234.942 1014.1,234.64 1014.67,234.268 1015.24,233.995 1015.81,233.718 1016.38,232.657 1016.94,232.61 1017.51,232.698 1018.08,233.696 1018.65,233.883 1019.22,233.715 1019.79,235.626 1020.35,236.315 1020.92,235.77 1021.49,236.537 1022.06,235.282 1022.63,234.085 1023.2,232.912 1023.76,233.105 1024.33,231.931 1024.9,233.298 1025.47,233.249 1026.04,234.182 1026.61,232.941 1027.17,232.79 1027.74,231.843 1028.31,232.835 1028.88,233.745 1029.45,231.597 1030.02,230.589 1030.58,227.498 1031.15,228.596 1031.72,228.644 1032.29,230.718 1032.86,229.761 1033.43,228.903 1033.99,226.79 1034.56,226.12 1035.13,226.59 1035.7,226.832 1036.27,228.228 1036.84,227.62 1037.4,227.937 1037.97,227.063 1038.54,226.312 1039.11,227.733 1039.68,227.11 1040.25,228.344 1040.81,227.565 1041.38,230.045 1041.95,229.166 1042.52,228.533 1043.09,227.736 1043.66,225.895 1044.22,226.428 1044.79,225.885 1045.36,227.405 1045.93,230.904 1046.5,231.228 1047.07,231.298 1047.63,232.372 1048.2,232.455 1048.77,232.306 1049.34,228.32 1049.91,228.452 1050.48,229.614 1051.05,229.834 1051.61,229.97 1052.18,230.957 1052.75,227.905 1053.32,227.143 1053.89,227.442 1054.46,231.105 1055.02,229.053 1055.59,229.391 1056.16,229.703 1056.73,228.907 1057.3,229.207 1057.87,230.662 1058.43,231.949 1059,233.129 1059.57,236.071 1060.14,236.139 1060.71,231.828 1061.28,233.283 1061.84,232.283 1062.41,231.275 1062.98,231.467 1063.55,230.59 1064.12,232.782 1064.69,233.845 1065.25,234.639 1065.82,232.518 1066.39,234.481 1066.96,234.335 1067.53,233.307 1068.1,234.248 1068.66,236.229 1069.23,237.012 1069.8,236.877 1070.37,237.605 1070.94,238.253 1071.51,239.797 1072.07,239.293 1072.64,237.85 1073.21,236.258 1073.78,236.944 1074.35,238.404 1074.92,237.031 1075.48,236.677 1076.05,239.497 1076.62,236.917 1077.19,239.631 1077.76,238.082 1078.33,237.783 1078.89,237.232 1079.46,235.754 1080.03,236.324 1080.6,233.947 1081.17,231.654 1081.74,233.382 1082.3,232.083 1082.87,232.984 1083.44,231.784 1084.01,232.672 1084.58,232.323 1085.15,232.279 1085.71,233.124 1086.28,233.043 1086.85,227.754 1087.42,226.032 1087.99,227.316 1088.56,228.674 1089.12,225.728 1089.69,223.079 1090.26,224.753 1090.83,225.022 1091.4,228.505 1091.97,228.498 1092.53,228.807 1093.1,230.305 1093.67,228.339 1094.24,227.422 1094.81,226.623 1095.38,227.737 1095.94,231.087 1096.51,232.256 1097.08,234.496 1097.65,228.353 1098.22,229.599 1098.79,231.621 1099.35,229.59 1099.92,230.817 1100.49,228.889 1101.06,231.121 1101.63,229.263 1102.2,230.601 1102.76,229.534 1103.33,230.646 1103.9,230.913 1104.47,230.998 1105.04,229.945 1105.61,231.146 1106.17,233.437 1106.74,233.42 1107.31,233.451 1107.88,234.419 1108.45,234.276 1109.02,236.299 1109.58,236.22 1110.15,234.025 1110.72,233.826 1111.29,233.509 1111.86,234.232 1112.43,234.238 1112.99,235.209 1113.56,234.882 1114.13,233.589 1114.7,235.389 1115.27,235.08 1115.84,236.806 1116.4,239.37 1116.97,240.839 1117.54,239.038 1118.11,239.573 1118.68,239.063 1119.25,235.186 1119.81,234.915 1120.38,234.5 1120.95,234.218 1121.52,235.908 1122.09,233.808 1122.66,234.562 1123.23,233.284 1123.79,231.917 1124.36,231.848 1124.93,234.78 1125.5,234.192 1126.07,232.04 1126.64,231.916 1127.2,229.95 1127.77,229.874 1128.34,228.913 1128.91,230.092 1129.48,229.897 1130.05,233.125 1130.61,231.992 1131.18,231.067 1131.75,230.972 1132.32,230.998 1132.89,232.973 1133.46,233.876 1134.02,233.586 1134.59,231.728 1135.16,229.579 1135.73,228.397 1136.3,225.69 1136.87,227.841 1137.43,227.992 1138,228.299 1138.57,228.447 1139.14,228.543 1139.71,229.726 1140.28,227.655 1140.84,226.855 1141.41,225.25 1141.98,227.786 1142.55,225.929 1143.12,227.26 1143.69,226.402 1144.25,223.744 1144.82,223.497 1145.39,225.016 1145.96,226.279 1146.53,225.769 1147.1,224.886 1147.66,226.429 1148.23,227.934 1148.8,228.305 1149.37,229.611 1149.94,228.764 1150.51,229.186 1151.07,228.542 1151.64,230.017 1152.21,230.879 1152.78,229.967 1153.35,231.361 1153.92,229.244 1154.48,230.369 1155.05,231.54 1155.62,232.749 1156.19,233.724 1156.76,233.463 1157.33,235.527 1157.89,233.187 1158.46,231.936 1159.03,230.941 1159.6,232.117 1160.17,234.276 1160.74,237.175 1161.3,236.138 1161.87,235.807 1162.44,234.708 1163.01,234.576 1163.58,234.331 1164.15,234.078 1164.71,232.712 1165.28,232.378 1165.85,232.079 1166.42,232.829 1166.99,233.731 1167.56,233.551 1168.12,233.582 1168.69,233.581 1169.26,231.308 1169.83,230.248 1170.4,231.546 1170.97,231.405 1171.53,234.565 1172.1,233.283 1172.67,234.322 1173.24,234.05 1173.81,232.718 1174.38,231.494 1174.94,230.664 1175.51,231.64 1176.08,231.784 1176.65,230.685 1177.22,226.541 1177.79,226.903 1178.35,228.357 1178.92,227.518 1179.49,229.017 1180.06,229.139 1180.63,228.076 1181.2,228.135 1181.76,230.348 1182.33,229.477 1182.9,228.566 1183.47,227.721 1184.04,229.079 1184.61,232.375 1185.17,233.422 1185.74,232.415 1186.31,231.273 1186.88,231.27 1187.45,231.689 1188.02,230.822 1188.58,230.78 1189.15,230.822 1189.72,231.881 1190.29,233.179 1190.86,233.116 1191.43,233.04 1192,232.963 1192.56,233.781 1193.13,231.608 1193.7,230.612 1194.27,231.753 1194.84,230.608 1195.41,231.84 1195.97,230.611 1196.54,230.507 1197.11,229.517 1197.68,230.375 1198.25,230.442 1198.82,231.534 1199.38,230.701 1199.95,231.928 1200.52,232.863 1201.09,231.742 1201.66,232.824 1202.23,233.686 1202.79,233.542 1203.36,234.529 1203.93,236.459 1204.5,234.996 1205.07,233.856 1205.64,234.821 1206.2,236.712 1206.77,237.402 1207.34,234.879 1207.91,233.782 1208.48,234.639 1209.05,232.4 1209.61,231.384 1210.18,231.349 1210.75,230.334 1211.32,230.553 1211.89,231.614 1212.46,228.379 1213.02,228.536 1213.59,224.61 1214.16,226.02 1214.73,226.504 1215.3,226.616 1215.87,227.914 1216.43,230.262 1217,229.258 1217.57,230.226 1218.14,230.18 1218.71,232.464 1219.28,233.575 1219.84,235.454 1220.41,237.222 1220.98,237.061 1221.55,237.914 1222.12,238.476 1222.69,238.057 1223.25,237.494 1223.82,238.076 1224.39,235.471 1224.96,235.358 1225.53,237.111 1226.1,237.686 1226.66,237.349 1227.23,235.838 1227.8,235.382 1228.37,235.988 1228.94,233.461 1229.51,232.177 1230.07,232.032 1230.64,231.997 1231.21,231.721 1231.78,230.632 1232.35,229.61 1232.92,229.662 1233.48,233.75 1234.05,234.351 1234.62,234.096 1235.19,233.83 1235.76,232.482 1236.33,232.221 1236.89,231.11 1237.46,231.018 1238.03,231.105 1238.6,232.282 1239.17,232.811 1239.74,230.698 1240.3,230.32 1240.87,229.257 1241.44,226.231 1242.01,227.62 1242.58,227.842 1243.15,230.336 1243.71,231.189 1244.28,231.165 1244.85,231.234 1245.42,232.321 1245.99,232.126 1246.56,229.822 1247.12,230.026 1247.69,229.118 1248.26,229.224 1248.83,228.407 1249.4,228.592 1249.97,228.568 1250.53,228.797 1251.1,229.945 1251.67,231.029 1252.24,228.917 1252.81,228.984 1253.38,226.159 1253.94,227.633 1254.51,227.901 1255.08,229.072 1255.65,232.393 1256.22,232.469 1256.79,233.354 1257.35,232.269 1257.92,232.193 1258.49,232.142 1259.06,230.959 1259.63,231.892 1260.2,230.721 1260.76,231.916 1261.33,231.977 1261.9,231.94 1262.47,233.033 1263.04,233.829 1263.61,233.675 1264.18,233.548 1264.74,232.397 1265.31,233.291 1265.88,235.328 1266.45,233.983 1267.02,232.718 1267.59,233.414 1268.15,232.07 1268.72,232.827 1269.29,230.389 1269.86,229.27 1270.43,228.043 1271,229.04 1271.56,228.266 1272.13,228.612 1272.7,228.846 1273.27,228.093 1273.84,226.204 1274.41,226.478 1274.97,226.724 1275.54,227.982 1276.11,225.046 1276.68,226.542 1277.25,222.563 1277.82,219.895 1278.38,221.513 1278.95,223.309 1279.52,225.177 1280.09,225.77 1280.66,225.317 1281.23,226.897 1281.79,229.361 1282.36,229.501 1282.93,229.887 1283.5,230.996 1284.07,232.144 1284.64,232.26 1285.2,234.254 1285.77,236.36 1286.34,236.075 1286.91,236.785 1287.48,236.622 1288.05,235.368 1288.61,235.034 1289.18,233.962 1289.75,232.932 1290.32,232.994 1290.89,229.775 1291.46,228.84 1292.02,230.165 1292.59,229.36 1293.16,230.642 1293.73,231.741 1294.3,229.686 1294.87,228.805 1295.43,227.983 1296,228.235 1296.57,228.7 1297.14,229.059 1297.71,230.125 1298.28,231.256 1298.84,230.486 1299.41,231.583 1299.98,230.471 1300.55,230.564 1301.12,233.989 1301.69,233.896 1302.25,233.83 1302.82,233.91 1303.39,231.665 1303.96,232.819 1304.53,232.597 1305.1,232.646 1305.66,232.579 1306.23,234.651 1306.8,234.536 1307.37,233.538 1307.94,235.445 1308.51,236.501 1309.07,234.114 1309.64,232.922 1310.21,233.882 1310.78,232.678 1311.35,234.721 1311.92,235.464 1312.48,235.132 1313.05,234.912 1313.62,232.734 1314.19,233.596 1314.76,233.589 1315.33,232.351 1315.89,231.42 1316.46,230.503 1317.03,231.541 1317.6,232.477 1318.17,233.425 1318.74,235.358 1319.3,234.078 1319.87,233.772 1320.44,234.751 1321.01,236.505 1321.58,237.181 1322.15,236.766 1322.71,236.436 1323.28,233.299 1323.85,233.272 1324.42,232.87 1324.99,233.819 1325.56,233.567 1326.12,233.049 1326.69,230.002 1327.26,233.542 1327.83,234.527 1328.4,234.366 1328.97,232.95 1329.53,230.718 1330.1,229.778 1330.67,230.057 1331.24,229.111 1331.81,229.311 1332.38,230.411 1332.94,231.358 1333.51,231.249 1334.08,232.144 1334.65,231.952 1335.22,230.82 1335.79,229.83 1336.36,232.949 1336.92,233.808 1337.49,232.356 1338.06,232.235 1338.63,232.161 1339.2,232.992 1339.77,231.798 1340.33,230.585 1340.9,229.569 1341.47,229.758 1342.04,228.758 1342.61,229.828 1343.18,233.003 1343.74,232.919 1344.31,232.742 1344.88,233.621 1345.45,234.249 1346.02,233.861 1346.59,233.759 1347.15,234.446 1347.72,232.962 1348.29,232.818 1348.86,227.56 1349.43,228.501 1350,227.536 1350.56,225.946 1351.13,228.337 1351.7,229.434 1352.27,230.325 1352.84,230.336 1353.41,229.246 1353.97,229.392 1354.54,230.597 1355.11,231.82 1355.68,231.803 1356.25,230.839 1356.82,228.874 1357.38,227.125 1357.95,226.729 1358.52,227.19 1359.09,227.658 1359.66,227.761 1360.23,224.807 1360.79,227.275 1361.36,227.367 1361.93,225.543 1362.5,226.11 1363.07,225.306 1363.64,223.72 1364.2,225.377 1364.77,226.177 1365.34,227.585 1365.91,226.015 1366.48,227.367 1367.05,226.989 1367.61,228.342 1368.18,230.742 1368.75,230.936 1369.32,231.938 1369.89,230.764 1370.46,229.672 1371.02,229.952 1371.59,230.067 1372.16,229.043 1372.73,231.601 1373.3,233.755 1373.87,232.717 1374.43,232.773 1375,232.771 1375.57,230.625 1376.14,230.81 1376.71,228.77 1377.28,231.092 1377.84,230.14 1378.41,231.281 1378.98,233.484 1379.55,235.438 1380.12,234.267 1380.69,232.078 1381.25,234.206 1381.82,233.943 1382.39,231.917 1382.96,232.848 1383.53,233.617 1384.1,232.579 1384.66,232.564 1385.23,231.502 1385.8,231.695 1386.37,230.725 1386.94,228.883 1387.51,231.245 1388.07,231.202 1388.64,232.317 1389.21,234.156 1389.78,236.076 1390.35,234.736 1390.92,233.528 1391.48,230.303 1392.05,227.523 1392.62,226.807 1393.19,227.162 1393.76,227.521 1394.33,225.924 1394.89,228.68 1395.46,230.028 1396.03,229.335 1396.6,232.595 1397.17,234.66 1397.74,234.665 1398.3,231.554 1398.87,232.465 1399.44,233.482 1400.01,231.376 1400.58,230.392 1401.15,231.62 1401.71,231.699 1402.28,230.677 1402.85,231.807 1403.42,234.94 1403.99,232.717 1404.56,234.792 1405.13,236.762 1405.69,236.406 1406.26,235.002 1406.83,235.748 1407.4,235.473 1407.97,236.461 1408.54,236.309 1409.1,238.196 1409.67,237.864 1410.24,236.334 1410.81,234.779 1411.38,234.428 1411.95,234.335 1412.51,233.978 1413.08,233.803 1413.65,233.503 1414.22,233.207 1414.79,233.173 1415.36,233.007 1415.92,231.89 1416.49,232.905 1417.06,233.658 1417.63,236.537 1418.2,239.403 1418.77,236.729 1419.33,235.08 1419.9,236.682 1420.47,232.248 1421.04,232.223 1421.61,231.042 1422.18,230.055 1422.74,229.732 1423.31,229.973 1423.88,230.063 1424.45,231.036 1425.02,231.987 1425.59,229.921 1426.15,228.88 1426.72,228.026 1427.29,228.162 1427.86,228.223 1428.43,228.549 1429,228.814 1429.56,229.166 1430.13,229.37 1430.7,229.493 1431.27,230.559 1431.84,230.704 1432.41,229.55 1432.97,231.585 1433.54,233.79 1434.11,232.642 1434.68,229.423 1435.25,229.43 1435.82,230.566 1436.38,229.435 1436.95,230.548 1437.52,230.767 1438.09,229.816 1438.66,229.874 1439.23,226.918 1439.79,226.036 1440.36,226.739 1440.93,228.397 1441.5,227.641 1442.07,229.016 1442.64,229.288 1443.2,230.816 1443.77,231.892 1444.34,230.978 1444.91,229.942 1445.48,228.997 1446.05,231.11 1446.61,229.024 1447.18,227.164 1447.75,227.267 1448.32,227.605 1448.89,228.064 1449.46,231.244 1450.02,230.229 1450.59,229.086 1451.16,230.321 1451.73,231.691 1452.3,230.906 1452.87,231.963 1453.43,232.059 1454,232.167 1454.57,232.295 1455.14,231.502 1455.71,234.489 1456.28,234.294 1456.84,233.024 1457.41,231.945 1457.98,236.203 1458.55,236.054 1459.12,238.679 1459.69,239.324 1460.25,238.798 1460.82,237.964 1461.39,237.441 1461.96,237.047 1462.53,236.853 1463.1,238.455 1463.66,238.111 1464.23,236.505 1464.8,239.235 1465.37,240.582 1465.94,239.671 1466.51,238.927 1467.07,237.337 1467.64,233.539 1468.21,232.191 1468.78,234.071 1469.35,234.864 1469.92,234.375 1470.48,234.216 1471.05,233.732 1471.62,234.474 1472.19,231.783 1472.76,232.74 1473.33,233.337 1473.89,234.267 1474.46,233.177 1475.03,228.82 1475.6,227.857 1476.17,228.006 1476.74,229.132 1477.31,228.356 1477.87,228.36 1478.44,229.488 1479.01,227.246 1479.58,228.595 1480.15,228.801 1480.72,228.856 1481.28,226.753 1481.85,226.875 1482.42,226.98 1482.99,228.242 1483.56,228.481 1484.13,230.658 1484.69,231.821 1485.26,233.812 1485.83,233.542 1486.4,235.252 1486.97,232.991 1487.54,232.807 1488.1,231.711 1488.67,230.437 1489.24,230.486 1489.81,230.451 1490.38,229.399 1490.95,229.423 1491.51,229.52 1492.08,228.691 1492.65,226.644 1493.22,227.958 1493.79,226.931 1494.36,227.191 1494.92,226.591 1495.49,224.752 1496.06,227.377 1496.63,226.499 1497.2,226.964 1497.77,228.28 1498.33,226.378 1498.9,229.701 1499.47,228.816 1500.04,230.138 1500.61,231.075 1501.18,231.102 1501.74,231.205 1502.31,232.016 1502.88,232.048 1503.45,230.85 1504.02,230.957 1504.59,229.837 1505.15,231.064 1505.72,228.95 1506.29,231.196 1506.86,231.199 1507.43,232.163 1508,234.12 1508.56,233.917 1509.13,231.651 1509.7,230.785 1510.27,230.742 1510.84,229.83 1511.41,230.169 1511.97,230.246 1512.54,230.319 1513.11,230.466 1513.68,229.758 1514.25,230.923 1514.82,231.028 1515.38,231.35 1515.95,231.286 1516.52,230.286 1517.09,230.219 1517.66,230.203 1518.23,230.259 1518.79,230.258 1519.36,228.123 1519.93,227.384 1520.5,227.67 1521.07,229.121 1521.64,228.262 1522.2,230.524 1522.77,229.321 1523.34,230.646 1523.91,232.003 1524.48,232.049 1525.05,233.059 1525.61,233.902 1526.18,233.818 1526.75,235.655 1527.32,233.389 1527.89,233.445 1528.46,235.478 1529.02,235.253 1529.59,235.114 1530.16,233.753 1530.73,235.762 1531.3,237.914 1531.87,236.32 1532.43,239.107 1533,237.677 1533.57,239.317 1534.14,236.658 1534.71,237.429 1535.28,236.891 1535.84,238.391 1536.41,237.692 1536.98,237.525 1537.55,235.293 1538.12,234.877 1538.69,232.403 1539.25,232.124 1539.82,231.023 1540.39,230.936 1540.96,230.786 1541.53,230.86 1542.1,229.968 1542.66,232.186 1543.23,229.975 1543.8,230.78 1544.37,230.655 1544.94,232.509 1545.51,232.41 1546.08,232.137 1546.64,231.048 1547.21,230.017 1547.78,228.864 1548.35,228.92 1548.92,227.922 1549.49,226.106 1550.05,224.361 1550.62,224.797 1551.19,225.114 1551.76,227.394 1552.33,226.595 1552.9,225.849 1553.46,226.241 1554.03,227.552 1554.6,229.034 1555.17,224.961 1555.74,223.303 1556.31,223.87 1556.87,223.359 1557.44,223.922 1558.01,224.524 1558.58,226.071 1559.15,226.619 1559.72,228.091 1560.28,229.435 1560.85,229.654 1561.42,230.673 1561.99,230.767 1562.56,230.002 1563.13,231.168 1563.69,230.069 1564.26,230.209 1564.83,232.431 1565.4,233.391 1565.97,232.147 1566.54,231.236 1567.1,229.205 1567.67,231.363 1568.24,229.284 1568.81,229.451 1569.38,227.656 1569.95,227.725 1570.51,228.272 1571.08,228.344 1571.65,229.513 1572.22,228.672 1572.79,230.048 1573.36,229.124 1573.92,229.458 1574.49,230.838 1575.06,232.849 1575.63,231.83 1576.2,231.982 1576.77,233.057 1577.33,231.963 1577.9,232.061 1578.47,233.266 1579.04,233.142 1579.61,234.24 1580.18,229.835 1580.74,229.836 1581.31,229.848 1581.88,230.06 1582.45,228.172 1583.02,228.365 1583.59,227.706 1584.15,227.11 1584.72,228.85 1585.29,229.091 1585.86,228.228 1586.43,227.545 1587,228.918 1587.56,228.077 1588.13,227.371 1588.7,226.713 1589.27,228.163 1589.84,228.503 1590.41,227.801 1590.97,229.296 1591.54,228.685 1592.11,231.976 1592.68,231.181 1593.25,232.308 1593.82,230.442 1594.38,231.643 1594.95,231.056 1595.52,231.337 1596.09,231.461 1596.66,229.416 1597.23,230.849 1597.79,233.054 1598.36,233.139 1598.93,234.252 1599.5,234.151 1600.07,234.082 1600.64,234.117 1601.2,236.115 1601.77,235.017 1602.34,234.884 1602.91,236.659 1603.48,237.399 1604.05,236.243 1604.61,236.004 1605.18,235.645 1605.75,236.592 1606.32,236.349 1606.89,236.022 1607.46,235.725 1608.02,235.6 1608.59,233.55 1609.16,230.563 1609.73,232.892 1610.3,231.018 1610.87,229.083 1611.43,228.279 1612,228.574 1612.57,229.869 1613.14,230.093 1613.71,231.35 1614.28,229.374 1614.84,230.628 1615.41,229.732 1615.98,229.106 1616.55,230.358 1617.12,229.65 1617.69,229.96 1618.26,231.176 1618.82,230.28 1619.39,231.615 1619.96,232.63 1620.53,234.637 1621.1,235.566 1621.67,236.397 1622.23,235.032 1622.8,235.015 1623.37,233.647 1623.94,234.426 1624.51,236.431 1625.08,236.138 1625.64,235.976 1626.21,234.789 1626.78,234.503 1627.35,235.449 1627.92,237.394 1628.49,236.859 1629.05,236.536 1629.62,236.212 1630.19,236.044 1630.76,237.007 1631.33,234.473 1631.9,234.195 1632.46,233.974 1633.03,233.959 1633.6,232.716 1634.17,232.483 1634.74,231.683 1635.31,228.683 1635.87,228.946 1636.44,227.253 1637.01,228.59 1637.58,228.722 1638.15,226.847 1638.72,227.279 1639.28,226.581 1639.85,225.942 1640.42,228.308 1640.99,228.744 1641.56,224.994 1642.13,223.478 1642.69,227.015 1643.26,231.35 1643.83,233.564 1644.4,233.573 1644.97,231.477 1645.54,233.531 1646.1,234.594 1646.67,234.455 1647.24,233.322 1647.81,235.251 1648.38,234.941 1648.95,235.806 1649.51,235.354 1650.08,233.924 1650.65,233.752 1651.22,231.511 1651.79,230.374 1652.36,231.538 1652.92,233.505 1653.49,234.405 1654.06,233.118 1654.63,233.094 1655.2,233.049 1655.77,231.755 1656.33,230.724 1656.9,233.013 1657.47,231.887 1658.04,229.055 1658.61,231.37 1659.18,233.327 1659.74,232.123 1660.31,232.966 1660.88,232.987 1661.45,228.572 1662.02,226.672 1662.59,229.969 1663.15,230.027 1663.72,230.069 1664.29,230.033 1664.86,226.977 1665.43,229.308 1666,231.614 1666.56,230.497 1667.13,231.789 1667.7,231.842 1668.27,231.768 1668.84,232.102 1669.41,233.125 1669.97,233.03 1670.54,232.866 1671.11,233.763 1671.68,232.63 1672.25,233.539 1672.82,233.509 1673.38,231.283 1673.95,231.449 1674.52,230.462 1675.09,229.539 1675.66,228.466 1676.23,228.567 1676.79,233.039 1677.36,231.864 1677.93,231.852 1678.5,231.909 1679.07,230.842 1679.64,230.662 1680.2,229.512 1680.77,230.709 1681.34,232.815 1681.91,228.8 1682.48,230.23 1683.05,231.15 1683.61,228.507 1684.18,228.861 1684.75,227.223 1685.32,224.662 1685.89,227.181 1686.46,225.57 1687.02,226.818 1687.59,226.298 1688.16,226.642 1688.73,227.8 1689.3,227.362 1689.87,228.694 1690.44,229.826 1691,230.854 1691.57,231.979 1692.14,234.074 1692.71,234.987 1693.28,236.749 1693.85,236.287 1694.41,235.098 1694.98,232.699 1695.55,232.89 1696.12,234.262 1696.69,234.3 1697.26,235.298 1697.82,234.258 1698.39,232.762 1698.96,231.807 1699.53,233.027 1700.1,232.871 1700.67,232.985 1701.23,234.959 1701.8,233.73 1702.37,235.49 1702.94,236.242 1703.51,235.852 1704.08,236.458 1704.64,238.182 1705.21,236.695 1705.78,234.296 1706.35,235.28 1706.92,235.98 1707.49,235.696 1708.05,235.414 1708.62,236.077 1709.19,234.663 1709.76,235.418 1710.33,233.875 1710.9,231.683 1711.46,231.694 1712.03,232.569 1712.6,231.49 1713.17,231.208 1713.74,231.233 1714.31,232.296 1714.87,230.954 1715.44,231.796 1716.01,229.65 1716.58,229.673 1717.15,229.736 1717.72,229.739 1718.28,230.944 1718.85,232.219 1719.42,231.235 1719.99,231.097 1720.56,232.053 1721.13,232.783 1721.69,234.639 1722.26,235.451 1722.83,236.152 1723.4,237.749 1723.97,234.212 1724.54,233.96 1725.1,234.774 1725.67,235.266 1726.24,235.995 1726.81,233.449 1727.38,233.18 1727.95,233.893 1728.51,233.675 1729.08,233.349 1729.65,235.051 1730.22,233.554 1730.79,233.311 1731.36,234.194 1731.92,234.794 1732.49,234.309 1733.06,233.86 1733.63,233.607 1734.2,234.566 1734.77,235.228 1735.33,236.027 1735.9,235.497 1736.47,233.095 1737.04,232.868 1737.61,232.578 1738.18,231.584 1738.74,231.381 1739.31,229.544 1739.88,232.524 1740.45,232.238 1741.02,233.147 1741.59,231.607 1742.15,232.085 1742.72,234.979 1743.29,233.654 1743.86,235.536 1744.43,237.294 1745,236.578 1745.56,237.05 1746.13,232.432 1746.7,231.126 1747.27,226.79 1747.84,226.923 1748.41,225.145 1748.97,224.233 1749.54,225.662 1750.11,226.021 1750.68,225.998 1751.25,228.413 1751.82,228.432 1752.38,228.479 1752.95,226.739 1753.52,228.027 1754.09,229.268 1754.66,232.255 1755.23,231.962 1755.79,229.781 1756.36,229.643 1756.93,229.572 1757.5,229.377 1758.07,230.103 1758.64,229.988 1759.21,226.747 1759.77,225.877 1760.34,225.161 1760.91,225.507 1761.48,224.907 1762.05,224.284 1762.62,225.648 1763.18,225.926 1763.75,226.255 1764.32,224.564 1764.89,228.159 1765.46,230.65 1766.03,228.39 1766.59,226.465 1767.16,225.786 1767.73,228.236 1768.3,229.203 1768.87,228.475 1769.44,228.636 1770,230.749 1770.57,231.895 1771.14,232.768 1771.71,234.687 1772.28,232.298 1772.85,231.091 1773.41,232.279 1773.98,233.51 1774.55,233.198 1775.12,231.926 1775.69,230.846 1776.26,232.988 1776.82,233.131 1777.39,232.889 1777.96,231.722 1778.53,231.57 1779.1,228.544 1779.67,229.841 1780.23,231.413 1780.8,231.333 1781.37,230.357 1781.94,232.615 1782.51,233.584 1783.08,232.449 1783.64,232.135 1784.21,229.963 1784.78,231.192 1785.35,231.211 1785.92,234.266 1786.49,235.98 1787.05,238.964 1787.62,238.309 1788.19,236.934 1788.76,236.546 1789.33,237.232 1789.9,237.711 1790.46,240.224 1791.03,239.463 1791.6,239.663 1792.17,240.946 1792.74,240.064 1793.31,238.287 1793.87,235.557 1794.44,234.96 1795.01,233.519 1795.58,235.231 1796.15,234.961 1796.72,234.513 1797.28,233.172 1797.85,231.891 1798.42,231.693 1798.99,230.446 1799.56,231.261 1800.13,231.289 1800.69,228.121 1801.26,227.249 1801.83,228.535 1802.4,226.643 1802.97,226.515 1803.54,227.714 1804.1,227.789 1804.67,228.877 1805.24,227.894 1805.81,227.066 1806.38,227.245 1806.95,227.512 1807.51,228.684 1808.08,227.676 1808.65,227.81 1809.22,227.854 1809.79,228.174 1810.36,227.203 1810.92,227.388 1811.49,227.474 1812.06,226.494 1812.63,227.801 1813.2,227.988 1813.77,229.165 1814.33,230.368 1814.9,231.454 1815.47,232.51 1816.04,232.36 1816.61,230.351 1817.18,231.367 1817.74,231.462 1818.31,231.751 1818.88,230.658 1819.45,229.882 1820.02,228.091 1820.59,227.127 1821.15,229.356 1821.72,228.424 1822.29,229.527 1822.86,228.498 1823.43,227.595 1824,227.908 1824.56,227.164 1825.13,227.489 1825.7,227.872 1826.27,229.169 1826.84,228.97 1827.41,230.349 1827.97,230.424 1828.54,231.368 1829.11,229.304 1829.68,233.474 1830.25,233.359 1830.82,232.459 1831.39,232.6 1831.95,232.659 1832.52,231.488 1833.09,229.429 1833.66,228.502 1834.23,228.531 1834.8,226.509 1835.36,224.648 1835.93,227.352 1836.5,229.674 1837.07,227.985 1837.64,228.249 1838.21,231.661 1838.77,231.711 1839.34,229.691 1839.91,227.633 1840.48,231.083 1841.05,231.075 1841.62,233.297 1842.18,234.266 1842.75,235.292 1843.32,236.108 1843.89,234.692 1844.46,234.734 1845.03,233.4 1845.59,234.281 1846.16,234.044 1846.73,232.705 1847.3,232.618 1847.87,233.44 1848.44,233.199 1849,233.011 1849.57,231.967 1850.14,232.002 1850.71,231.069 1851.28,231.303 1851.85,229.26 1852.41,229.307 1852.98,228.585 1853.55,228.864 1854.12,229.033 1854.69,230.179 1855.26,230.055 1855.82,232.228 1856.39,232.27 1856.96,231.03 1857.53,229.114 1858.1,229.401 1858.67,232.758 1859.23,231.617 1859.8,230.508 1860.37,231.68 1860.94,229.569 1861.51,229.758 1862.08,231.038 1862.64,232.292 1863.21,233.416 1863.78,232.346 1864.35,231.098 1864.92,232.165 1865.49,233.304 1866.05,234.222 1866.62,235.012 1867.19,235.972 1867.76,235.868 1868.33,232.504 1868.9,231.232 1869.46,230.38 1870.03,230.474 1870.6,230.661 1871.17,230.657 1871.74,229.687 1872.31,228.876 1872.87,229.113 1873.44,230.447 1874.01,231.545 1874.58,231.446 1875.15,231.599 1875.72,229.691 1876.28,229.676 1876.85,229.797 1877.42,228.888 1877.99,226.048 1878.56,226.706 1879.13,230.96 1879.69,230.967 1880.26,229.906 1880.83,229.164 1881.4,229.536 1881.97,228.73 1882.54,225.841 1883.1,227.315 1883.67,227.632 1884.24,228.95 1884.81,229.29 1885.38,229.376 1885.95,228.485 1886.51,228.919 1887.08,230.277 1887.65,227.565 1888.22,227.955 1888.79,230.441 1889.36,229.536 1889.92,229.826 1890.49,227.934 1891.06,226.05 1891.63,225.444 1892.2,223.978 1892.77,224.565 1893.33,224.196 1893.9,223.78 1894.47,224.298 1895.04,223.001 1895.61,222.624 1896.18,226.258 1896.74,225.804 1897.31,226.356 1897.88,225.917 1898.45,226.842 1899.02,226.641 1899.59,227.23 1900.16,229.773 1900.72,233.203 1901.29,235.28 1901.86,237.355 1902.43,236.464 1903,236.308 1903.57,235.298 1904.13,234.162 1904.7,234.281 1905.27,234.187 1905.84,236.219 1906.41,235.201 1906.98,236.333 1907.54,236.173 1908.11,234.996 1908.68,237.926 1909.25,238.649 1909.82,238.989 1910.39,236.737 1910.95,238.561 1911.52,238.248 1912.09,238.966 1912.66,239.731 1913.23,239.258 1913.8,239.849 1914.36,240.513 1914.93,240.908 1915.5,242.307 1916.07,241.452 1916.64,240.703 1917.21,239.842 1917.77,240.13 1918.34,239.69 1918.91,239.141 1919.48,237.486 1920.05,235.91 1920.62,235.613 1921.18,237.159 1921.75,236.667 1922.32,238.226 1922.89,235.689 1923.46,237.432 1924.03,237.817 1924.59,236.289 1925.16,234.655 1925.73,232.233 1926.3,234.008 1926.87,232.814 1927.44,233.861 1928,232.439 1928.57,231.214 1929.14,235.124 1929.71,235.808 1930.28,234.403 1930.85,234.122 1931.41,233.87 1931.98,232.629 1932.55,232.318 1933.12,232.136 1933.69,229.923 1934.26,229.077 1934.82,232.169 1935.39,231.075 1935.96,230.91 1936.53,229.696 1937.1,228.517 1937.67,228.671 1938.23,227.767 1938.8,230.757 1939.37,230.611 1939.94,231.478 1940.51,231.267 1941.08,232.234 1941.64,235.89 1942.21,235.373 1942.78,234.972 1943.35,234.7 1943.92,234.35 1944.49,234.217 1945.05,234.048 1945.62,231.618 1946.19,231.609 1946.76,231.495 1947.33,229.316 1947.9,230.476 1948.46,228.501 1949.03,227.723 1949.6,226.719 1950.17,226.185 1950.74,226.368 1951.31,226.764 1951.87,227.988 1952.44,230.256 1953.01,229.217 1953.58,228.14 1954.15,229.403 1954.72,228.556 1955.28,229.902 1955.85,229.966 1956.42,227.981 1956.99,230.381 1957.56,231.512 1958.13,231.596 1958.69,231.641 1959.26,231.779 1959.83,229.569 1960.4,230.642 1960.97,231.359 1961.54,233.286 1962.1,231.76 1962.67,230.431 1963.24,229.481 1963.81,229.525 1964.38,230.586 1964.95,229.444 1965.51,228.467 1966.08,227.627 1966.65,230.741 1967.22,229.638 1967.79,232.867 1968.36,233.766 1968.92,233.513 1969.49,231.183 1970.06,231.148 1970.63,229.089 1971.2,229.247 1971.77,227.336 1972.34,228.202 1972.9,229.563 1973.47,232.759 1974.04,231.695 1974.61,231.627 1975.18,233.531 1975.75,233.35 1976.31,233.046 1976.88,232.748 1977.45,231.45 1978.02,231.377 1978.59,233.466 1979.16,231.213 1979.72,230.375 1980.29,229.372 1980.86,227.546 1981.43,227.952 1982,227.373 1982.57,226.473 1983.13,227.789 1983.7,225.886 1984.27,226.289 1984.84,227.654 1985.41,226.677 1985.98,229.018 1986.54,229.063 1987.11,229.272 1987.68,230.741 1988.25,230.775 1988.82,232.803 1989.39,233.781 1989.95,231.526 1990.52,230.611 1991.09,229.716 1991.66,229.936 1992.23,230.071 1992.8,230.212 1993.36,230.431 1993.93,229.608 1994.5,230.569 1995.07,233.836 1995.64,233.698 1996.21,232.389 1996.77,232.265 1997.34,232.371 1997.91,232.416 1998.48,234.402 1999.05,233.158 1999.62,233.102 2000.18,232.015 2000.75,232.951 2001.32,232.813 2001.89,231.531 2002.46,233.548 2003.03,234.458 2003.59,233.206 2004.16,232.063 2004.73,233.011 2005.3,232.871 2005.87,231.652 2006.44,230.65 2007,233.574 2007.57,231.331 2008.14,233.296 2008.71,231.11 2009.28,232.209 2009.85,232 2010.41,230.784 2010.98,230.827 2011.55,226.944 2012.12,225.11 2012.69,226.573 2013.26,228.936 2013.82,226.12 2014.39,227.498 2014.96,226.696 2015.53,224.924 2016.1,227.491 2016.67,229.046 2017.23,227.155 2017.8,230.517 2018.37,230.565 2018.94,229.654 2019.51,228.814 2020.08,229.962 2020.64,232.216 2021.21,231.881 2021.78,230.943 2022.35,230.907 2022.92,230.992 2023.49,233.11 2024.05,233.952 2024.62,235.949 2025.19,238.826 2025.76,236.286 2026.33,235.803 2026.9,235.718 2027.46,236.525 2028.03,233.214 2028.6,233.198 2029.17,233.902 2029.74,233.89 2030.31,232.806 2030.87,233.487 2031.44,233.145 2032.01,233.096 2032.58,231.749 2033.15,231.859 2033.72,232.706 2034.28,231.571 2034.85,231.278 2035.42,231.312 2035.99,229.588 2036.56,229.809 2037.13,228.837 2037.69,228.061 2038.26,230.295 2038.83,228.403 2039.4,228.663 2039.97,228.93 2040.54,226.928 2041.11,230.428 2041.67,231.583 2042.24,231.657 2042.81,231.711 2043.38,232.782 2043.95,232.664 2044.52,232.542 2045.08,231.57 2045.65,231.247 2046.22,230.88 2046.79,228.823 2047.36,228.969 2047.93,231.264 2048.49,228.323 2049.06,227.538 2049.63,230.924 2050.2,231.132 2050.77,232.294 2051.34,231.302 2051.9,232.646 2052.47,233.54 2053.04,234.034 2053.61,235.014 2054.18,234.893 2054.75,234.637 2055.31,231.308 2055.88,231.401 2056.45,232.535 2057.02,233.548 2057.59,231.513 2058.16,231.661 2058.72,231.525 2059.29,230.495 2059.86,232.417 2060.43,231.496 2061,231.332 2061.57,231.487 2062.13,231.468 2062.7,232.679 2063.27,230.708 2063.84,232.651 2064.41,232.413 2064.98,234.327 2065.54,231.961 2066.11,230.879 2066.68,232.111 2067.25,233.094 2067.82,232.91 2068.39,230.803 2068.95,231.031 2069.52,229.93 2070.09,230.08 2070.66,234.208 2071.23,232.132 2071.8,232.831 2072.36,231.714 2072.93,231.477 2073.5,232.468 2074.07,230.322 2074.64,228.469 2075.21,228.521 2075.77,228.528 2076.34,232.759 2076.91,231.708 2077.48,231.532 2078.05,231.534 2078.62,230.38 2079.18,228.365 2079.75,228.554 2080.32,227.723 2080.89,228.1 2081.46,227.403 2082.03,227.657 2082.59,227.861 2083.16,227.066 2083.73,228.32 2084.3,228.572 2084.87,228.815 2085.44,228.074 2086,229.398 2086.57,229.676 2087.14,228.744 2087.71,228.99 2088.28,229.227 2088.85,230.528 2089.41,229.387 2089.98,229.515 2090.55,228.782 2091.12,230.035 2091.69,229.187 2092.26,229.441 2092.82,228.54 2093.39,227.982 2093.96,228.314 2094.53,229.809 2095.1,230.093 2095.67,230.357 2096.23,230.528 2096.8,233.014 2097.37,232.859 2097.94,234.064 2098.51,234.861 2099.08,233.916 2099.64,234.834 2100.21,234.632 2100.78,234.295 2101.35,235.22 2101.92,234.914 2102.49,234.626 2103.05,234.391 2103.62,236.292 2104.19,234.061 2104.76,233.987 2105.33,233.796 2105.9,232.635 2106.46,232.807 2107.03,233.735 2107.6,236.821 2108.17,237.437 2108.74,236.114 2109.31,235.933 2109.87,234.734 2110.44,234.545 2111.01,233.436 2111.58,234.182 2112.15,237.074 2112.72,237.578 2113.29,236.809 2113.85,239.457 2114.42,237.688 2114.99,237.277 2115.56,236.967 2116.13,237.62 2116.7,238.159 2117.26,236.347 2117.83,235.911 2118.4,235.623 2118.97,236.043 2119.54,234.564 2120.11,232.127 2120.67,230.835 2121.24,230.679 2121.81,228.815 2122.38,229.74 2122.95,231.029 2123.52,230.842 2124.08,230.99 2124.65,230.845 2125.22,228.899 2125.79,229.793 2126.36,230.823 2126.93,230.963 2127.49,231.89 2128.06,230.822 2128.63,230.717 2129.2,230.72 2129.77,231.656 2130.34,230.327 2130.9,230.35 2131.47,228.39 2132.04,229.499 2132.61,230.543 2133.18,231.572 2133.75,231.559 2134.31,232.584 2134.88,231.56 2135.45,231.271 2136.02,231.194 2136.59,231.17 2137.16,230.108 2137.72,229.164 2138.29,231.317 2138.86,231.352 2139.43,230.335 2140,230.379 2140.57,229.285 2141.13,229.61 2141.7,229.805 2142.27,228.006 2142.84,228.197 2143.41,226.569 2143.98,226.997 2144.54,226.279 2145.11,226.597 2145.68,224.772 2146.25,225.298 2146.82,226.832 2147.39,226.139 2147.95,226.524 2148.52,226.729 2149.09,228.253 2149.66,229.424 2150.23,227.49 2150.8,226.992 2151.36,227.462 2151.93,227.869 2152.5,229.062 2153.07,228.217 2153.64,229.597 2154.21,228.696 2154.77,230.816 2155.34,231.867 2155.91,236.969 2156.48,237.576 2157.05,236.02 2157.62,236.631 2158.18,237.268 2158.75,239.02 2159.32,239.397 2159.89,238.982 \"/>\n<path clip-path=\"url(#clip680)\" d=\"M1649.46 1245.03 L2150.8 1245.03 L2150.8 1089.51 L1649.46 1089.51  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip680)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1649.46,1245.03 2150.8,1245.03 2150.8,1089.51 1649.46,1089.51 1649.46,1245.03 \"/>\n<polyline clip-path=\"url(#clip680)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" stroke-dasharray=\"16, 10\" points=\"1669.53,1141.35 1789.98,1141.35 \"/>\n<path clip-path=\"url(#clip680)\" d=\"M1817.46 1125.34 L1817.46 1132.71 L1826.23 1132.71 L1826.23 1136.02 L1817.46 1136.02 L1817.46 1150.09 Q1817.46 1153.26 1818.32 1154.16 Q1819.2 1155.07 1821.86 1155.07 L1826.23 1155.07 L1826.23 1158.63 L1821.86 1158.63 Q1816.93 1158.63 1815.05 1156.8 Q1813.18 1154.95 1813.18 1150.09 L1813.18 1136.02 L1810.05 1136.02 L1810.05 1132.71 L1813.18 1132.71 L1813.18 1125.34 L1817.46 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1843.62 1145.6 Q1838.46 1145.6 1836.47 1146.78 Q1834.48 1147.96 1834.48 1150.81 Q1834.48 1153.08 1835.96 1154.42 Q1837.46 1155.74 1840.03 1155.74 Q1843.57 1155.74 1845.7 1153.24 Q1847.86 1150.72 1847.86 1146.55 L1847.86 1145.6 L1843.62 1145.6 M1852.11 1143.84 L1852.11 1158.63 L1847.86 1158.63 L1847.86 1154.7 Q1846.4 1157.06 1844.22 1158.19 Q1842.05 1159.3 1838.9 1159.3 Q1834.92 1159.3 1832.55 1157.08 Q1830.22 1154.84 1830.22 1151.09 Q1830.22 1146.71 1833.13 1144.49 Q1836.07 1142.27 1841.88 1142.27 L1847.86 1142.27 L1847.86 1141.85 Q1847.86 1138.91 1845.91 1137.31 Q1843.99 1135.69 1840.49 1135.69 Q1838.27 1135.69 1836.17 1136.22 Q1834.06 1136.76 1832.11 1137.82 L1832.11 1133.89 Q1834.45 1132.98 1836.65 1132.54 Q1838.85 1132.08 1840.93 1132.08 Q1846.56 1132.08 1849.34 1135 Q1852.11 1137.91 1852.11 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1875.91 1136.69 Q1875.19 1136.27 1874.34 1136.09 Q1873.5 1135.88 1872.48 1135.88 Q1868.87 1135.88 1866.93 1138.24 Q1865.01 1140.58 1865.01 1144.97 L1865.01 1158.63 L1860.73 1158.63 L1860.73 1132.71 L1865.01 1132.71 L1865.01 1136.73 Q1866.35 1134.37 1868.5 1133.24 Q1870.66 1132.08 1873.73 1132.08 Q1874.17 1132.08 1874.71 1132.15 Q1875.24 1132.2 1875.89 1132.31 L1875.91 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1896.6 1145.37 Q1896.6 1140.74 1894.68 1138.19 Q1892.79 1135.65 1889.34 1135.65 Q1885.91 1135.65 1883.99 1138.19 Q1882.09 1140.74 1882.09 1145.37 Q1882.09 1149.97 1883.99 1152.52 Q1885.91 1155.07 1889.34 1155.07 Q1892.79 1155.07 1894.68 1152.52 Q1896.6 1149.97 1896.6 1145.37 M1900.86 1155.41 Q1900.86 1162.03 1897.92 1165.25 Q1894.98 1168.49 1888.92 1168.49 Q1886.67 1168.49 1884.68 1168.15 Q1882.69 1167.82 1880.82 1167.13 L1880.82 1162.98 Q1882.69 1164 1884.52 1164.49 Q1886.35 1164.97 1888.25 1164.97 Q1892.44 1164.97 1894.52 1162.78 Q1896.6 1160.6 1896.6 1156.18 L1896.6 1154.07 Q1895.29 1156.36 1893.23 1157.5 Q1891.17 1158.63 1888.29 1158.63 Q1883.53 1158.63 1880.61 1155 Q1877.69 1151.36 1877.69 1145.37 Q1877.69 1139.35 1880.61 1135.72 Q1883.53 1132.08 1888.29 1132.08 Q1891.17 1132.08 1893.23 1133.22 Q1895.29 1134.35 1896.6 1136.64 L1896.6 1132.71 L1900.86 1132.71 L1900.86 1155.41 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1931.81 1144.6 L1931.81 1146.69 L1912.23 1146.69 Q1912.51 1151.09 1914.87 1153.4 Q1917.25 1155.69 1921.49 1155.69 Q1923.94 1155.69 1926.23 1155.09 Q1928.55 1154.49 1930.82 1153.28 L1930.82 1157.31 Q1928.53 1158.28 1926.12 1158.79 Q1923.71 1159.3 1921.23 1159.3 Q1915.03 1159.3 1911.4 1155.69 Q1907.79 1152.08 1907.79 1145.92 Q1907.79 1139.56 1911.21 1135.83 Q1914.66 1132.08 1920.49 1132.08 Q1925.73 1132.08 1928.76 1135.46 Q1931.81 1138.82 1931.81 1144.6 M1927.55 1143.35 Q1927.51 1139.86 1925.59 1137.78 Q1923.69 1135.69 1920.54 1135.69 Q1916.98 1135.69 1914.82 1137.71 Q1912.69 1139.72 1912.37 1143.38 L1927.55 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1943.02 1125.34 L1943.02 1132.71 L1951.79 1132.71 L1951.79 1136.02 L1943.02 1136.02 L1943.02 1150.09 Q1943.02 1153.26 1943.87 1154.16 Q1944.75 1155.07 1947.41 1155.07 L1951.79 1155.07 L1951.79 1158.63 L1947.41 1158.63 Q1942.48 1158.63 1940.61 1156.8 Q1938.73 1154.95 1938.73 1150.09 L1938.73 1136.02 L1935.61 1136.02 L1935.61 1132.71 L1938.73 1132.71 L1938.73 1125.34 L1943.02 1125.34 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1954.91 1132.71 L1959.17 1132.71 L1964.5 1152.94 L1969.8 1132.71 L1974.82 1132.71 L1980.15 1152.94 L1985.45 1132.71 L1989.71 1132.71 L1982.92 1158.63 L1977.9 1158.63 L1972.32 1137.38 L1966.72 1158.63 L1961.7 1158.63 L1954.91 1132.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M2007.95 1145.6 Q2002.78 1145.6 2000.79 1146.78 Q1998.8 1147.96 1998.8 1150.81 Q1998.8 1153.08 2000.28 1154.42 Q2001.79 1155.74 2004.36 1155.74 Q2007.9 1155.74 2010.03 1153.24 Q2012.18 1150.72 2012.18 1146.55 L2012.18 1145.6 L2007.95 1145.6 M2016.44 1143.84 L2016.44 1158.63 L2012.18 1158.63 L2012.18 1154.7 Q2010.72 1157.06 2008.55 1158.19 Q2006.37 1159.3 2003.22 1159.3 Q1999.24 1159.3 1996.88 1157.08 Q1994.54 1154.84 1994.54 1151.09 Q1994.54 1146.71 1997.46 1144.49 Q2000.4 1142.27 2006.21 1142.27 L2012.18 1142.27 L2012.18 1141.85 Q2012.18 1138.91 2010.24 1137.31 Q2008.32 1135.69 2004.82 1135.69 Q2002.6 1135.69 2000.49 1136.22 Q1998.39 1136.76 1996.44 1137.82 L1996.44 1133.89 Q1998.78 1132.98 2000.98 1132.54 Q2003.18 1132.08 2005.26 1132.08 Q2010.89 1132.08 2013.66 1135 Q2016.44 1137.91 2016.44 1143.84 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M2025.22 1122.61 L2029.47 1122.61 L2029.47 1158.63 L2025.22 1158.63 L2025.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M2038.22 1122.61 L2042.51 1122.61 L2042.51 1143.89 L2055.22 1132.71 L2060.65 1132.71 L2046.91 1144.84 L2061.23 1158.63 L2055.68 1158.63 L2042.51 1145.97 L2042.51 1158.63 L2038.22 1158.63 L2038.22 1122.61 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M2086.33 1144.6 L2086.33 1146.69 L2066.74 1146.69 Q2067.02 1151.09 2069.38 1153.4 Q2071.77 1155.69 2076 1155.69 Q2078.46 1155.69 2080.75 1155.09 Q2083.06 1154.49 2085.33 1153.28 L2085.33 1157.31 Q2083.04 1158.28 2080.63 1158.79 Q2078.22 1159.3 2075.75 1159.3 Q2069.54 1159.3 2065.91 1155.69 Q2062.3 1152.08 2062.3 1145.92 Q2062.3 1139.56 2065.72 1135.83 Q2069.17 1132.08 2075.01 1132.08 Q2080.24 1132.08 2083.27 1135.46 Q2086.33 1138.82 2086.33 1144.6 M2082.07 1143.35 Q2082.02 1139.86 2080.1 1137.78 Q2078.2 1135.69 2075.05 1135.69 Q2071.49 1135.69 2069.34 1137.71 Q2067.21 1139.72 2066.88 1143.38 L2082.07 1143.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M2108.34 1136.69 Q2107.62 1136.27 2106.77 1136.09 Q2105.93 1135.88 2104.91 1135.88 Q2101.3 1135.88 2099.36 1138.24 Q2097.44 1140.58 2097.44 1144.97 L2097.44 1158.63 L2093.15 1158.63 L2093.15 1132.71 L2097.44 1132.71 L2097.44 1136.73 Q2098.78 1134.37 2100.93 1133.24 Q2103.09 1132.08 2106.16 1132.08 Q2106.6 1132.08 2107.14 1132.15 Q2107.67 1132.2 2108.32 1132.31 L2108.34 1136.69 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M2129.34 1133.47 L2129.34 1137.5 Q2127.53 1136.57 2125.59 1136.11 Q2123.64 1135.65 2121.56 1135.65 Q2118.39 1135.65 2116.79 1136.62 Q2115.21 1137.59 2115.21 1139.53 Q2115.21 1141.02 2116.35 1141.87 Q2117.48 1142.71 2120.91 1143.47 L2122.37 1143.79 Q2126.9 1144.77 2128.8 1146.55 Q2130.72 1148.31 2130.72 1151.48 Q2130.72 1155.09 2127.85 1157.2 Q2125.01 1159.3 2120.01 1159.3 Q2117.92 1159.3 2115.65 1158.89 Q2113.41 1158.49 2110.91 1157.68 L2110.91 1153.28 Q2113.27 1154.51 2115.56 1155.14 Q2117.85 1155.74 2120.1 1155.74 Q2123.11 1155.74 2124.73 1154.72 Q2126.35 1153.68 2126.35 1151.8 Q2126.35 1150.07 2125.17 1149.14 Q2124.01 1148.22 2120.05 1147.36 L2118.57 1147.01 Q2114.61 1146.18 2112.85 1144.47 Q2111.09 1142.73 2111.09 1139.72 Q2111.09 1136.06 2113.69 1134.07 Q2116.28 1132.08 2121.05 1132.08 Q2123.41 1132.08 2125.49 1132.43 Q2127.58 1132.78 2129.34 1133.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip680)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1669.53,1193.19 1789.98,1193.19 \"/>\n<path clip-path=\"url(#clip680)\" d=\"M1831.77 1194.82 L1831.77 1210.47 L1827.51 1210.47 L1827.51 1194.96 Q1827.51 1191.28 1826.07 1189.45 Q1824.64 1187.62 1821.77 1187.62 Q1818.32 1187.62 1816.33 1189.82 Q1814.34 1192.02 1814.34 1195.82 L1814.34 1210.47 L1810.05 1210.47 L1810.05 1184.55 L1814.34 1184.55 L1814.34 1188.57 Q1815.86 1186.24 1817.92 1185.08 Q1820.01 1183.92 1822.72 1183.92 Q1827.18 1183.92 1829.48 1186.7 Q1831.77 1189.45 1831.77 1194.82 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1850.31 1187.53 Q1846.88 1187.53 1844.89 1190.22 Q1842.9 1192.88 1842.9 1197.53 Q1842.9 1202.18 1844.87 1204.87 Q1846.86 1207.53 1850.31 1207.53 Q1853.71 1207.53 1855.7 1204.85 Q1857.69 1202.16 1857.69 1197.53 Q1857.69 1192.93 1855.7 1190.24 Q1853.71 1187.53 1850.31 1187.53 M1850.31 1183.92 Q1855.86 1183.92 1859.04 1187.53 Q1862.21 1191.14 1862.21 1197.53 Q1862.21 1203.9 1859.04 1207.53 Q1855.86 1211.14 1850.31 1211.14 Q1844.73 1211.14 1841.56 1207.53 Q1838.41 1203.9 1838.41 1197.53 Q1838.41 1191.14 1841.56 1187.53 Q1844.73 1183.92 1850.31 1183.92 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1884.29 1188.53 Q1883.57 1188.11 1882.72 1187.93 Q1881.88 1187.72 1880.86 1187.72 Q1877.25 1187.72 1875.31 1190.08 Q1873.39 1192.42 1873.39 1196.81 L1873.39 1210.47 L1869.11 1210.47 L1869.11 1184.55 L1873.39 1184.55 L1873.39 1188.57 Q1874.73 1186.21 1876.88 1185.08 Q1879.04 1183.92 1882.11 1183.92 Q1882.55 1183.92 1883.09 1183.99 Q1883.62 1184.04 1884.27 1184.15 L1884.29 1188.53 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip680)\" d=\"M1908.11 1189.52 Q1909.71 1186.65 1911.93 1185.29 Q1914.15 1183.92 1917.16 1183.92 Q1921.21 1183.92 1923.41 1186.77 Q1925.61 1189.59 1925.61 1194.82 L1925.61 1210.47 L1921.33 1210.47 L1921.33 1194.96 Q1921.33 1191.24 1920.01 1189.43 Q1918.69 1187.62 1915.98 1187.62 Q1912.67 1187.62 1910.75 1189.82 Q1908.83 1192.02 1908.83 1195.82 L1908.83 1210.47 L1904.54 1210.47 L1904.54 1194.96 Q1904.54 1191.21 1903.23 1189.43 Q1901.91 1187.62 1899.15 1187.62 Q1895.89 1187.62 1893.97 1189.85 Q1892.04 1192.05 1892.04 1195.82 L1892.04 1210.47 L1887.76 1210.47 L1887.76 1184.55 L1892.04 1184.55 L1892.04 1188.57 Q1893.5 1186.19 1895.54 1185.06 Q1897.58 1183.92 1900.38 1183.92 Q1903.2 1183.92 1905.17 1185.36 Q1907.16 1186.79 1908.11 1189.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"After an initial equilibriation period, the norm fluctuates around the target number of walkers.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Now, let's look at using the shift to estimate the ground state energy of H. The mean of the shift is a useful estimator of the energy. Calculating the error bars is a bit more involved as autocorrelations have to be removed from the time series. This can be done with the function shift_estimator, which performs a blocking analysis on the shift column of the dataframe.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"se = shift_estimator(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"BlockingResult{Float64}\n  mean = -4.028 ± 0.023\n  with uncertainty of ± 0.0020425036068537307\n  from 62 blocks after 5 transformations (k = 6).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Here, se contains the calculated mean and standard errors of the shift, as well as some additional information related to the blocking analysis.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Computing the error of the projected energy is a bit more complicated, as it's a ratio of fluctuating variables contained in the hproj and vproj columns in the dataframe. Thankfully, the complications are handled by the function projected_energy.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"pe = projected_energy(df; skip=steps_equilibrate)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"RatioBlockingResult{Float64,MonteCarloMeasurements.Particles{Float64, 2000}}\n  ratio = -4.01456 ± (0.00229867, 0.00209143) (MC)\n  95% confidence interval: [-4.01858, -4.01017]) (MC)\n  linear error propagation: -4.01449 ± 0.00220263\n  |δ_y| = |0.0014508| (≤ 0.1 for normal approx)\n  Blocking successful with 31 blocks after 6 transformations (k = 7).\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The result is a ratio distribution. We extract its median and the edges of the 95% confidence interval.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"v = val_and_errs(pe; p=0.95)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"(val = -4.01456289249185, val_l = 0.004016308045760475, val_u = 0.004390811879886769)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Let's visualise these estimators together with the time series of the shift.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"plot(df.steps, df.shift, ylabel=\"energy\", xlabel=\"steps\", label=\"shift\", margin = 1Plots.cm)\n\nplot!(x->se.mean, df.steps[steps_equilibrate+1:end], ribbon=se.err, label=\"shift mean\")\nplot!(\n    x -> v.val, df.steps[steps_equilibrate+1:end], ribbon=(v.val_l,v.val_u),\n    label=\"projected energy\",\n)\nlens!([steps_equilibrate, last_step], [-5.1, -2.9]; inset=(1, bbox(0.2, 0.25, 0.6, 0.4)))","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n<defs>\n  <clipPath id=\"clip710\">\n    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip710)\" d=\"M0 1600 L2400 1600 L2400 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip711\">\n    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip710)\" d=\"M346.853 1281.45 L2211.02 1281.45 L2211.02 188.976 L346.853 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip712\">\n    <rect x=\"346\" y=\"188\" width=\"1865\" height=\"1093\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip712)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"399.026,1281.45 399.026,188.976 \"/>\n<polyline clip-path=\"url(#clip712)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"985.439,1281.45 985.439,188.976 \"/>\n<polyline clip-path=\"url(#clip712)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1571.85,1281.45 1571.85,188.976 \"/>\n<polyline clip-path=\"url(#clip712)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2158.26,1281.45 2158.26,188.976 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 2211.02,1281.45 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.026,1281.45 399.026,1262.55 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1281.45 985.439,1262.55 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1571.85,1281.45 1571.85,1262.55 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2158.26,1281.45 2158.26,1262.55 \"/>\n<path clip-path=\"url(#clip710)\" d=\"M399.026 1312.37 Q395.415 1312.37 393.587 1315.93 Q391.781 1319.47 391.781 1326.6 Q391.781 1333.71 393.587 1337.27 Q395.415 1340.82 399.026 1340.82 Q402.661 1340.82 404.466 1337.27 Q406.295 1333.71 406.295 1326.6 Q406.295 1319.47 404.466 1315.93 Q402.661 1312.37 399.026 1312.37 M399.026 1308.66 Q404.837 1308.66 407.892 1313.27 Q410.971 1317.85 410.971 1326.6 Q410.971 1335.33 407.892 1339.94 Q404.837 1344.52 399.026 1344.52 Q393.216 1344.52 390.138 1339.94 Q387.082 1335.33 387.082 1326.6 Q387.082 1317.85 390.138 1313.27 Q393.216 1308.66 399.026 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M929.965 1339.91 L937.604 1339.91 L937.604 1313.55 L929.293 1315.21 L929.293 1310.95 L937.557 1309.29 L942.233 1309.29 L942.233 1339.91 L949.872 1339.91 L949.872 1343.85 L929.965 1343.85 L929.965 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M969.316 1312.37 Q965.705 1312.37 963.877 1315.93 Q962.071 1319.47 962.071 1326.6 Q962.071 1333.71 963.877 1337.27 Q965.705 1340.82 969.316 1340.82 Q972.951 1340.82 974.756 1337.27 Q976.585 1333.71 976.585 1326.6 Q976.585 1319.47 974.756 1315.93 Q972.951 1312.37 969.316 1312.37 M969.316 1308.66 Q975.127 1308.66 978.182 1313.27 Q981.261 1317.85 981.261 1326.6 Q981.261 1335.33 978.182 1339.94 Q975.127 1344.52 969.316 1344.52 Q963.506 1344.52 960.428 1339.94 Q957.372 1335.33 957.372 1326.6 Q957.372 1317.85 960.428 1313.27 Q963.506 1308.66 969.316 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M999.478 1312.37 Q995.867 1312.37 994.038 1315.93 Q992.233 1319.47 992.233 1326.6 Q992.233 1333.71 994.038 1337.27 Q995.867 1340.82 999.478 1340.82 Q1003.11 1340.82 1004.92 1337.27 Q1006.75 1333.71 1006.75 1326.6 Q1006.75 1319.47 1004.92 1315.93 Q1003.11 1312.37 999.478 1312.37 M999.478 1308.66 Q1005.29 1308.66 1008.34 1313.27 Q1011.42 1317.85 1011.42 1326.6 Q1011.42 1335.33 1008.34 1339.94 Q1005.29 1344.52 999.478 1344.52 Q993.668 1344.52 990.589 1339.94 Q987.534 1335.33 987.534 1326.6 Q987.534 1317.85 990.589 1313.27 Q993.668 1308.66 999.478 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1029.64 1312.37 Q1026.03 1312.37 1024.2 1315.93 Q1022.39 1319.47 1022.39 1326.6 Q1022.39 1333.71 1024.2 1337.27 Q1026.03 1340.82 1029.64 1340.82 Q1033.27 1340.82 1035.08 1337.27 Q1036.91 1333.71 1036.91 1326.6 Q1036.91 1319.47 1035.08 1315.93 Q1033.27 1312.37 1029.64 1312.37 M1029.64 1308.66 Q1035.45 1308.66 1038.51 1313.27 Q1041.58 1317.85 1041.58 1326.6 Q1041.58 1335.33 1038.51 1339.94 Q1035.45 1344.52 1029.64 1344.52 Q1023.83 1344.52 1020.75 1339.94 Q1017.7 1335.33 1017.7 1326.6 Q1017.7 1317.85 1020.75 1313.27 Q1023.83 1308.66 1029.64 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1520.46 1339.91 L1536.78 1339.91 L1536.78 1343.85 L1514.84 1343.85 L1514.84 1339.91 Q1517.5 1337.16 1522.08 1332.53 Q1526.69 1327.88 1527.87 1326.53 Q1530.12 1324.01 1531 1322.27 Q1531.9 1320.51 1531.9 1318.82 Q1531.9 1316.07 1529.95 1314.33 Q1528.03 1312.6 1524.93 1312.6 Q1522.73 1312.6 1520.28 1313.36 Q1517.85 1314.13 1515.07 1315.68 L1515.07 1310.95 Q1517.89 1309.82 1520.35 1309.24 Q1522.8 1308.66 1524.84 1308.66 Q1530.21 1308.66 1533.4 1311.35 Q1536.6 1314.03 1536.6 1318.52 Q1536.6 1320.65 1535.79 1322.57 Q1535 1324.47 1532.89 1327.07 Q1532.31 1327.74 1529.21 1330.95 Q1526.11 1334.15 1520.46 1339.91 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1556.6 1312.37 Q1552.99 1312.37 1551.16 1315.93 Q1549.35 1319.47 1549.35 1326.6 Q1549.35 1333.71 1551.16 1337.27 Q1552.99 1340.82 1556.6 1340.82 Q1560.23 1340.82 1562.04 1337.27 Q1563.87 1333.71 1563.87 1326.6 Q1563.87 1319.47 1562.04 1315.93 Q1560.23 1312.37 1556.6 1312.37 M1556.6 1308.66 Q1562.41 1308.66 1565.46 1313.27 Q1568.54 1317.85 1568.54 1326.6 Q1568.54 1335.33 1565.46 1339.94 Q1562.41 1344.52 1556.6 1344.52 Q1550.79 1344.52 1547.71 1339.94 Q1544.65 1335.33 1544.65 1326.6 Q1544.65 1317.85 1547.71 1313.27 Q1550.79 1308.66 1556.6 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1586.76 1312.37 Q1583.15 1312.37 1581.32 1315.93 Q1579.51 1319.47 1579.51 1326.6 Q1579.51 1333.71 1581.32 1337.27 Q1583.15 1340.82 1586.76 1340.82 Q1590.39 1340.82 1592.2 1337.27 Q1594.03 1333.71 1594.03 1326.6 Q1594.03 1319.47 1592.2 1315.93 Q1590.39 1312.37 1586.76 1312.37 M1586.76 1308.66 Q1592.57 1308.66 1595.62 1313.27 Q1598.7 1317.85 1598.7 1326.6 Q1598.7 1335.33 1595.62 1339.94 Q1592.57 1344.52 1586.76 1344.52 Q1580.95 1344.52 1577.87 1339.94 Q1574.81 1335.33 1574.81 1326.6 Q1574.81 1317.85 1577.87 1313.27 Q1580.95 1308.66 1586.76 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1616.92 1312.37 Q1613.31 1312.37 1611.48 1315.93 Q1609.68 1319.47 1609.68 1326.6 Q1609.68 1333.71 1611.48 1337.27 Q1613.31 1340.82 1616.92 1340.82 Q1620.55 1340.82 1622.36 1337.27 Q1624.19 1333.71 1624.19 1326.6 Q1624.19 1319.47 1622.36 1315.93 Q1620.55 1312.37 1616.92 1312.37 M1616.92 1308.66 Q1622.73 1308.66 1625.79 1313.27 Q1628.87 1317.85 1628.87 1326.6 Q1628.87 1335.33 1625.79 1339.94 Q1622.73 1344.52 1616.92 1344.52 Q1611.11 1344.52 1608.03 1339.94 Q1604.98 1335.33 1604.98 1326.6 Q1604.98 1317.85 1608.03 1313.27 Q1611.11 1308.66 1616.92 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M2116.94 1325.21 Q2120.3 1325.93 2122.18 1328.2 Q2124.07 1330.47 2124.07 1333.8 Q2124.07 1338.92 2120.56 1341.72 Q2117.04 1344.52 2110.56 1344.52 Q2108.38 1344.52 2106.07 1344.08 Q2103.77 1343.66 2101.32 1342.81 L2101.32 1338.29 Q2103.26 1339.43 2105.58 1340 Q2107.89 1340.58 2110.42 1340.58 Q2114.82 1340.58 2117.11 1338.85 Q2119.42 1337.11 2119.42 1333.8 Q2119.42 1330.75 2117.27 1329.03 Q2115.14 1327.3 2111.32 1327.3 L2107.29 1327.3 L2107.29 1323.45 L2111.51 1323.45 Q2114.95 1323.45 2116.78 1322.09 Q2118.61 1320.7 2118.61 1318.11 Q2118.61 1315.44 2116.71 1314.03 Q2114.84 1312.6 2111.32 1312.6 Q2109.4 1312.6 2107.2 1313.01 Q2105 1313.43 2102.36 1314.31 L2102.36 1310.14 Q2105.02 1309.4 2107.34 1309.03 Q2109.68 1308.66 2111.74 1308.66 Q2117.06 1308.66 2120.16 1311.09 Q2123.26 1313.5 2123.26 1317.62 Q2123.26 1320.49 2121.62 1322.48 Q2119.98 1324.45 2116.94 1325.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M2142.94 1312.37 Q2139.33 1312.37 2137.5 1315.93 Q2135.69 1319.47 2135.69 1326.6 Q2135.69 1333.71 2137.5 1337.27 Q2139.33 1340.82 2142.94 1340.82 Q2146.57 1340.82 2148.38 1337.27 Q2150.21 1333.71 2150.21 1326.6 Q2150.21 1319.47 2148.38 1315.93 Q2146.57 1312.37 2142.94 1312.37 M2142.94 1308.66 Q2148.75 1308.66 2151.81 1313.27 Q2154.88 1317.85 2154.88 1326.6 Q2154.88 1335.33 2151.81 1339.94 Q2148.75 1344.52 2142.94 1344.52 Q2137.13 1344.52 2134.05 1339.94 Q2131 1335.33 2131 1326.6 Q2131 1317.85 2134.05 1313.27 Q2137.13 1308.66 2142.94 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M2173.1 1312.37 Q2169.49 1312.37 2167.66 1315.93 Q2165.86 1319.47 2165.86 1326.6 Q2165.86 1333.71 2167.66 1337.27 Q2169.49 1340.82 2173.1 1340.82 Q2176.74 1340.82 2178.54 1337.27 Q2180.37 1333.71 2180.37 1326.6 Q2180.37 1319.47 2178.54 1315.93 Q2176.74 1312.37 2173.1 1312.37 M2173.1 1308.66 Q2178.91 1308.66 2181.97 1313.27 Q2185.05 1317.85 2185.05 1326.6 Q2185.05 1335.33 2181.97 1339.94 Q2178.91 1344.52 2173.1 1344.52 Q2167.29 1344.52 2164.21 1339.94 Q2161.16 1335.33 2161.16 1326.6 Q2161.16 1317.85 2164.21 1313.27 Q2167.29 1308.66 2173.1 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M2203.26 1312.37 Q2199.65 1312.37 2197.82 1315.93 Q2196.02 1319.47 2196.02 1326.6 Q2196.02 1333.71 2197.82 1337.27 Q2199.65 1340.82 2203.26 1340.82 Q2206.9 1340.82 2208.7 1337.27 Q2210.53 1333.71 2210.53 1326.6 Q2210.53 1319.47 2208.7 1315.93 Q2206.9 1312.37 2203.26 1312.37 M2203.26 1308.66 Q2209.07 1308.66 2212.13 1313.27 Q2215.21 1317.85 2215.21 1326.6 Q2215.21 1335.33 2212.13 1339.94 Q2209.07 1344.52 2203.26 1344.52 Q2197.45 1344.52 2194.38 1339.94 Q2191.32 1335.33 2191.32 1326.6 Q2191.32 1317.85 2194.38 1313.27 Q2197.45 1308.66 2203.26 1308.66 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1220.15 1391.71 L1220.15 1397.25 Q1217.67 1395.98 1214.99 1395.34 Q1212.32 1394.71 1209.46 1394.71 Q1205.1 1394.71 1202.9 1396.04 Q1200.74 1397.38 1200.74 1400.05 Q1200.74 1402.09 1202.3 1403.27 Q1203.85 1404.41 1208.57 1405.46 L1210.57 1405.91 Q1216.81 1407.25 1219.42 1409.7 Q1222.06 1412.12 1222.06 1416.48 Q1222.06 1421.44 1218.11 1424.34 Q1214.2 1427.23 1207.32 1427.23 Q1204.46 1427.23 1201.34 1426.66 Q1198.25 1426.12 1194.82 1425.01 L1194.82 1418.96 Q1198.06 1420.65 1201.21 1421.51 Q1204.36 1422.33 1207.45 1422.33 Q1211.59 1422.33 1213.82 1420.93 Q1216.05 1419.5 1216.05 1416.92 Q1216.05 1414.54 1214.42 1413.26 Q1212.83 1411.99 1207.39 1410.81 L1205.35 1410.33 Q1199.91 1409.19 1197.49 1406.83 Q1195.07 1404.45 1195.07 1400.31 Q1195.07 1395.28 1198.64 1392.54 Q1202.2 1389.8 1208.76 1389.8 Q1212 1389.8 1214.87 1390.28 Q1217.73 1390.76 1220.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1237.18 1380.54 L1237.18 1390.66 L1249.24 1390.66 L1249.24 1395.22 L1237.18 1395.22 L1237.18 1414.57 Q1237.18 1418.93 1238.36 1420.17 Q1239.57 1421.41 1243.23 1421.41 L1249.24 1421.41 L1249.24 1426.31 L1243.23 1426.31 Q1236.45 1426.31 1233.87 1423.8 Q1231.29 1421.25 1231.29 1414.57 L1231.29 1395.22 L1226.99 1395.22 L1226.99 1390.66 L1231.29 1390.66 L1231.29 1380.54 L1237.18 1380.54 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1287.44 1407.02 L1287.44 1409.89 L1260.51 1409.89 Q1260.89 1415.94 1264.14 1419.12 Q1267.42 1422.27 1273.24 1422.27 Q1276.61 1422.27 1279.77 1421.44 Q1282.95 1420.61 1286.07 1418.96 L1286.07 1424.5 Q1282.92 1425.83 1279.61 1426.53 Q1276.3 1427.23 1272.89 1427.23 Q1264.36 1427.23 1259.36 1422.27 Q1254.4 1417.3 1254.4 1408.84 Q1254.4 1400.08 1259.11 1394.96 Q1263.85 1389.8 1271.87 1389.8 Q1279.07 1389.8 1283.24 1394.45 Q1287.44 1399.07 1287.44 1407.02 M1281.58 1405.3 Q1281.52 1400.5 1278.87 1397.63 Q1276.26 1394.77 1271.94 1394.77 Q1267.03 1394.77 1264.07 1397.54 Q1261.15 1400.31 1260.7 1405.34 L1281.58 1405.3 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1302.71 1420.96 L1302.71 1439.87 L1296.83 1439.87 L1296.83 1390.66 L1302.71 1390.66 L1302.71 1396.07 Q1304.56 1392.89 1307.36 1391.36 Q1310.19 1389.8 1314.11 1389.8 Q1320.6 1389.8 1324.64 1394.96 Q1328.72 1400.12 1328.72 1408.52 Q1328.72 1416.92 1324.64 1422.08 Q1320.6 1427.23 1314.11 1427.23 Q1310.19 1427.23 1307.36 1425.71 Q1304.56 1424.15 1302.71 1420.96 M1322.64 1408.52 Q1322.64 1402.06 1319.97 1398.4 Q1317.32 1394.71 1312.68 1394.71 Q1308.03 1394.71 1305.36 1398.4 Q1302.71 1402.06 1302.71 1408.52 Q1302.71 1414.98 1305.36 1418.67 Q1308.03 1422.33 1312.68 1422.33 Q1317.32 1422.33 1319.97 1418.67 Q1322.64 1414.98 1322.64 1408.52 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1361.15 1391.71 L1361.15 1397.25 Q1358.67 1395.98 1356 1395.34 Q1353.32 1394.71 1350.46 1394.71 Q1346.1 1394.71 1343.9 1396.04 Q1341.74 1397.38 1341.74 1400.05 Q1341.74 1402.09 1343.3 1403.27 Q1344.86 1404.41 1349.57 1405.46 L1351.57 1405.91 Q1357.81 1407.25 1360.42 1409.7 Q1363.06 1412.12 1363.06 1416.48 Q1363.06 1421.44 1359.11 1424.34 Q1355.2 1427.23 1348.32 1427.23 Q1345.46 1427.23 1342.34 1426.66 Q1339.25 1426.12 1335.82 1425.01 L1335.82 1418.96 Q1339.06 1420.65 1342.21 1421.51 Q1345.36 1422.33 1348.45 1422.33 Q1352.59 1422.33 1354.82 1420.93 Q1357.05 1419.5 1357.05 1416.92 Q1357.05 1414.54 1355.42 1413.26 Q1353.83 1411.99 1348.39 1410.81 L1346.35 1410.33 Q1340.91 1409.19 1338.49 1406.83 Q1336.07 1404.45 1336.07 1400.31 Q1336.07 1395.28 1339.64 1392.54 Q1343.2 1389.8 1349.76 1389.8 Q1353 1389.8 1355.87 1390.28 Q1358.73 1390.76 1361.15 1391.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip712)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1151.12 2211.02,1151.12 \"/>\n<polyline clip-path=\"url(#clip712)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,1002.37 2211.02,1002.37 \"/>\n<polyline clip-path=\"url(#clip712)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,853.617 2211.02,853.617 \"/>\n<polyline clip-path=\"url(#clip712)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,704.864 2211.02,704.864 \"/>\n<polyline clip-path=\"url(#clip712)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,556.111 2211.02,556.111 \"/>\n<polyline clip-path=\"url(#clip712)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,407.358 2211.02,407.358 \"/>\n<polyline clip-path=\"url(#clip712)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"346.853,258.604 2211.02,258.604 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1281.45 346.853,188.976 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1151.12 365.751,1151.12 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,1002.37 365.751,1002.37 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,853.617 365.751,853.617 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,704.864 365.751,704.864 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,556.111 365.751,556.111 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,407.358 365.751,407.358 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"346.853,258.604 365.751,258.604 \"/>\n<path clip-path=\"url(#clip710)\" d=\"M298.909 1136.92 Q295.298 1136.92 293.469 1140.49 Q291.664 1144.03 291.664 1151.16 Q291.664 1158.26 293.469 1161.83 Q295.298 1165.37 298.909 1165.37 Q302.543 1165.37 304.349 1161.83 Q306.177 1158.26 306.177 1151.16 Q306.177 1144.03 304.349 1140.49 Q302.543 1136.92 298.909 1136.92 M298.909 1133.22 Q304.719 1133.22 307.775 1137.82 Q310.853 1142.41 310.853 1151.16 Q310.853 1159.88 307.775 1164.49 Q304.719 1169.07 298.909 1169.07 Q293.099 1169.07 290.02 1164.49 Q286.964 1159.88 286.964 1151.16 Q286.964 1142.41 290.02 1137.82 Q293.099 1133.22 298.909 1133.22 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M259.557 1015.71 L267.196 1015.71 L267.196 989.349 L258.886 991.016 L258.886 986.756 L267.15 985.09 L271.826 985.09 L271.826 1015.71 L279.465 1015.71 L279.465 1019.65 L259.557 1019.65 L259.557 1015.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M298.909 988.168 Q295.298 988.168 293.469 991.733 Q291.664 995.275 291.664 1002.4 Q291.664 1009.51 293.469 1013.08 Q295.298 1016.62 298.909 1016.62 Q302.543 1016.62 304.349 1013.08 Q306.177 1009.51 306.177 1002.4 Q306.177 995.275 304.349 991.733 Q302.543 988.168 298.909 988.168 M298.909 984.465 Q304.719 984.465 307.775 989.071 Q310.853 993.655 310.853 1002.4 Q310.853 1011.13 307.775 1015.74 Q304.719 1020.32 298.909 1020.32 Q293.099 1020.32 290.02 1015.74 Q286.964 1011.13 286.964 1002.4 Q286.964 993.655 290.02 989.071 Q293.099 984.465 298.909 984.465 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M262.775 866.962 L279.094 866.962 L279.094 870.897 L257.15 870.897 L257.15 866.962 Q259.812 864.207 264.395 859.577 Q269.002 854.925 270.182 853.582 Q272.428 851.059 273.307 849.323 Q274.21 847.564 274.21 845.874 Q274.21 843.119 272.266 841.383 Q270.344 839.647 267.242 839.647 Q265.043 839.647 262.59 840.411 Q260.159 841.175 257.381 842.726 L257.381 838.003 Q260.205 836.869 262.659 836.29 Q265.113 835.712 267.15 835.712 Q272.52 835.712 275.715 838.397 Q278.909 841.082 278.909 845.573 Q278.909 847.702 278.099 849.624 Q277.312 851.522 275.205 854.114 Q274.627 854.786 271.525 858.003 Q268.423 861.198 262.775 866.962 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M298.909 839.415 Q295.298 839.415 293.469 842.98 Q291.664 846.522 291.664 853.651 Q291.664 860.758 293.469 864.323 Q295.298 867.864 298.909 867.864 Q302.543 867.864 304.349 864.323 Q306.177 860.758 306.177 853.651 Q306.177 846.522 304.349 842.98 Q302.543 839.415 298.909 839.415 M298.909 835.712 Q304.719 835.712 307.775 840.318 Q310.853 844.901 310.853 853.651 Q310.853 862.378 307.775 866.985 Q304.719 871.568 298.909 871.568 Q293.099 871.568 290.02 866.985 Q286.964 862.378 286.964 853.651 Q286.964 844.901 290.02 840.318 Q293.099 835.712 298.909 835.712 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M272.914 703.509 Q276.27 704.227 278.145 706.496 Q280.043 708.764 280.043 712.097 Q280.043 717.213 276.525 720.014 Q273.006 722.815 266.525 722.815 Q264.349 722.815 262.034 722.375 Q259.742 721.958 257.289 721.102 L257.289 716.588 Q259.233 717.722 261.548 718.301 Q263.863 718.88 266.386 718.88 Q270.784 718.88 273.076 717.144 Q275.39 715.408 275.39 712.097 Q275.39 709.042 273.238 707.329 Q271.108 705.593 267.289 705.593 L263.261 705.593 L263.261 701.75 L267.474 701.75 Q270.923 701.75 272.752 700.385 Q274.58 698.996 274.58 696.403 Q274.58 693.741 272.682 692.329 Q270.807 690.894 267.289 690.894 Q265.367 690.894 263.168 691.31 Q260.969 691.727 258.33 692.607 L258.33 688.44 Q260.992 687.699 263.307 687.329 Q265.645 686.959 267.705 686.959 Q273.029 686.959 276.131 689.389 Q279.233 691.797 279.233 695.917 Q279.233 698.787 277.59 700.778 Q275.946 702.746 272.914 703.509 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M298.909 690.662 Q295.298 690.662 293.469 694.227 Q291.664 697.769 291.664 704.898 Q291.664 712.005 293.469 715.57 Q295.298 719.111 298.909 719.111 Q302.543 719.111 304.349 715.57 Q306.177 712.005 306.177 704.898 Q306.177 697.769 304.349 694.227 Q302.543 690.662 298.909 690.662 M298.909 686.959 Q304.719 686.959 307.775 691.565 Q310.853 696.148 310.853 704.898 Q310.853 713.625 307.775 718.232 Q304.719 722.815 298.909 722.815 Q293.099 722.815 290.02 718.232 Q286.964 713.625 286.964 704.898 Q286.964 696.148 290.02 691.565 Q293.099 686.959 298.909 686.959 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M271.594 542.905 L259.789 561.354 L271.594 561.354 L271.594 542.905 M270.367 538.831 L276.247 538.831 L276.247 561.354 L281.177 561.354 L281.177 565.242 L276.247 565.242 L276.247 573.391 L271.594 573.391 L271.594 565.242 L255.992 565.242 L255.992 560.729 L270.367 538.831 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M298.909 541.909 Q295.298 541.909 293.469 545.474 Q291.664 549.016 291.664 556.145 Q291.664 563.252 293.469 566.817 Q295.298 570.358 298.909 570.358 Q302.543 570.358 304.349 566.817 Q306.177 563.252 306.177 556.145 Q306.177 549.016 304.349 545.474 Q302.543 541.909 298.909 541.909 M298.909 538.206 Q304.719 538.206 307.775 542.812 Q310.853 547.395 310.853 556.145 Q310.853 564.872 307.775 569.479 Q304.719 574.062 298.909 574.062 Q293.099 574.062 290.02 569.479 Q286.964 564.872 286.964 556.145 Q286.964 547.395 290.02 542.812 Q293.099 538.206 298.909 538.206 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M258.793 390.078 L277.15 390.078 L277.15 394.013 L263.076 394.013 L263.076 402.485 Q264.094 402.138 265.113 401.976 Q266.131 401.79 267.15 401.79 Q272.937 401.79 276.316 404.962 Q279.696 408.133 279.696 413.55 Q279.696 419.128 276.224 422.23 Q272.752 425.309 266.432 425.309 Q264.256 425.309 261.988 424.938 Q259.742 424.568 257.335 423.827 L257.335 419.128 Q259.418 420.263 261.641 420.818 Q263.863 421.374 266.34 421.374 Q270.344 421.374 272.682 419.267 Q275.02 417.161 275.02 413.55 Q275.02 409.939 272.682 407.832 Q270.344 405.726 266.34 405.726 Q264.465 405.726 262.59 406.142 Q260.738 406.559 258.793 407.439 L258.793 390.078 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M298.909 393.156 Q295.298 393.156 293.469 396.721 Q291.664 400.263 291.664 407.392 Q291.664 414.499 293.469 418.063 Q295.298 421.605 298.909 421.605 Q302.543 421.605 304.349 418.063 Q306.177 414.499 306.177 407.392 Q306.177 400.263 304.349 396.721 Q302.543 393.156 298.909 393.156 M298.909 389.453 Q304.719 389.453 307.775 394.059 Q310.853 398.642 310.853 407.392 Q310.853 416.119 307.775 420.726 Q304.719 425.309 298.909 425.309 Q293.099 425.309 290.02 420.726 Q286.964 416.119 286.964 407.392 Q286.964 398.642 290.02 394.059 Q293.099 389.453 298.909 389.453 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M269.326 256.741 Q266.178 256.741 264.326 258.894 Q262.497 261.047 262.497 264.797 Q262.497 268.523 264.326 270.699 Q266.178 272.852 269.326 272.852 Q272.474 272.852 274.303 270.699 Q276.154 268.523 276.154 264.797 Q276.154 261.047 274.303 258.894 Q272.474 256.741 269.326 256.741 M278.608 242.088 L278.608 246.348 Q276.849 245.514 275.043 245.074 Q273.261 244.635 271.502 244.635 Q266.872 244.635 264.418 247.76 Q261.988 250.885 261.641 257.204 Q263.006 255.19 265.066 254.125 Q267.127 253.037 269.603 253.037 Q274.812 253.037 277.821 256.209 Q280.853 259.357 280.853 264.797 Q280.853 270.121 277.705 273.338 Q274.557 276.556 269.326 276.556 Q263.33 276.556 260.159 271.972 Q256.988 267.366 256.988 258.639 Q256.988 250.445 260.877 245.584 Q264.766 240.699 271.316 240.699 Q273.076 240.699 274.858 241.047 Q276.664 241.394 278.608 242.088 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M298.909 244.403 Q295.298 244.403 293.469 247.968 Q291.664 251.51 291.664 258.639 Q291.664 265.746 293.469 269.31 Q295.298 272.852 298.909 272.852 Q302.543 272.852 304.349 269.31 Q306.177 265.746 306.177 258.639 Q306.177 251.51 304.349 247.968 Q302.543 244.403 298.909 244.403 M298.909 240.699 Q304.719 240.699 307.775 245.306 Q310.853 249.889 310.853 258.639 Q310.853 267.366 307.775 271.972 Q304.719 276.556 298.909 276.556 Q293.099 276.556 290.02 271.972 Q286.964 267.366 286.964 258.639 Q286.964 249.889 290.02 245.306 Q293.099 240.699 298.909 240.699 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M186.448 812.969 L189.313 812.969 L189.313 839.896 Q195.36 839.514 198.543 836.268 Q201.694 832.989 201.694 827.165 Q201.694 823.791 200.867 820.64 Q200.039 817.457 198.384 814.338 L203.922 814.338 Q205.259 817.489 205.959 820.799 Q206.659 824.109 206.659 827.515 Q206.659 836.045 201.694 841.042 Q196.729 846.007 188.263 846.007 Q179.51 846.007 174.385 841.296 Q169.229 836.554 169.229 828.533 Q169.229 821.34 173.876 817.17 Q178.491 812.969 186.448 812.969 M184.73 818.826 Q179.924 818.889 177.059 821.531 Q174.194 824.141 174.194 828.47 Q174.194 833.371 176.963 836.331 Q179.733 839.259 184.761 839.705 L184.73 818.826 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M184.22 773.724 L205.736 773.724 L205.736 779.581 L184.411 779.581 Q179.351 779.581 176.836 781.554 Q174.322 783.528 174.322 787.474 Q174.322 792.217 177.345 794.954 Q180.369 797.691 185.589 797.691 L205.736 797.691 L205.736 803.58 L170.088 803.58 L170.088 797.691 L175.627 797.691 Q172.412 795.591 170.821 792.758 Q169.229 789.893 169.229 786.169 Q169.229 780.027 173.049 776.876 Q176.836 773.724 184.22 773.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M186.448 731.552 L189.313 731.552 L189.313 758.479 Q195.36 758.097 198.543 754.85 Q201.694 751.572 201.694 745.747 Q201.694 742.373 200.867 739.222 Q200.039 736.04 198.384 732.92 L203.922 732.92 Q205.259 736.071 205.959 739.382 Q206.659 742.692 206.659 746.097 Q206.659 754.627 201.694 759.624 Q196.729 764.59 188.263 764.59 Q179.51 764.59 174.385 759.879 Q169.229 755.137 169.229 747.116 Q169.229 739.923 173.876 735.753 Q178.491 731.552 186.448 731.552 M184.73 737.408 Q179.924 737.472 177.059 740.114 Q174.194 742.724 174.194 747.052 Q174.194 751.954 176.963 754.914 Q179.733 757.842 184.761 758.288 L184.73 737.408 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M175.563 701.283 Q174.99 702.269 174.735 703.447 Q174.449 704.593 174.449 705.993 Q174.449 710.959 177.696 713.632 Q180.91 716.274 186.958 716.274 L205.736 716.274 L205.736 722.162 L170.088 722.162 L170.088 716.274 L175.627 716.274 Q172.38 714.428 170.821 711.468 Q169.229 708.508 169.229 704.275 Q169.229 703.67 169.325 702.938 Q169.388 702.206 169.547 701.315 L175.563 701.283 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M187.499 672.828 Q181.133 672.828 177.632 675.47 Q174.131 678.08 174.131 682.822 Q174.131 687.533 177.632 690.175 Q181.133 692.785 187.499 692.785 Q193.833 692.785 197.334 690.175 Q200.835 687.533 200.835 682.822 Q200.835 678.08 197.334 675.47 Q193.833 672.828 187.499 672.828 M201.312 666.972 Q210.415 666.972 214.839 671.014 Q219.295 675.056 219.295 683.395 Q219.295 686.482 218.818 689.22 Q218.372 691.957 217.418 694.535 L211.72 694.535 Q213.121 691.957 213.789 689.443 Q214.457 686.928 214.457 684.318 Q214.457 678.557 211.434 675.693 Q208.442 672.828 202.363 672.828 L199.466 672.828 Q202.617 674.642 204.177 677.475 Q205.736 680.308 205.736 684.254 Q205.736 690.811 200.739 694.822 Q195.742 698.832 187.499 698.832 Q179.223 698.832 174.226 694.822 Q169.229 690.811 169.229 684.254 Q169.229 680.308 170.789 677.475 Q172.348 674.642 175.499 672.828 L170.088 672.828 L170.088 666.972 L201.312 666.972 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M209.047 640.076 Q215.412 642.559 217.354 644.914 Q219.295 647.27 219.295 651.216 L219.295 655.895 L214.394 655.895 L214.394 652.458 Q214.394 650.039 213.248 648.702 Q212.102 647.365 207.837 645.742 L205.164 644.692 L170.088 659.11 L170.088 652.903 L197.97 641.763 L170.088 630.623 L170.088 624.417 L209.047 640.076 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip712)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"399.613,1041.52 400.199,940.823 400.786,848.433 401.372,763.788 401.958,686.373 402.545,615.711 403.131,551.36 403.718,492.908 404.304,439.973 404.891,392.199 405.477,349.25 406.063,392.272 406.65,355.485 407.236,321.708 407.823,357.164 408.409,328.12 408.995,302.583 409.582,280.323 410.168,261.122 410.755,244.777 411.341,231.095 411.927,219.895 412.514,250.164 413.1,242.788 413.687,236.91 414.273,232.929 414.86,230.706 415.446,258.042 416.032,285.068 416.619,286.795 417.205,312.082 417.792,315.641 418.378,320.288 418.964,344.256 419.551,367.706 420.137,405.777 420.724,440.864 421.31,461.336 421.896,480.493 422.483,486.004 423.069,503.903 423.656,510.884 424.242,529.457 424.829,537.401 425.415,573.411 426.001,589.958 426.588,605.762 427.174,629.13 427.761,636.811 428.347,657.728 428.933,671.829 429.52,678.699 430.106,685.675 430.693,698.614 431.279,706.144 431.865,719.518 432.452,738.243 433.038,745.927 433.625,758.679 434.211,767.028 434.798,775.409 435.384,783.878 435.97,804.963 436.557,820.908 437.143,828.367 437.73,839.431 438.316,850.476 438.902,864.913 439.489,878.51 440.075,892.15 440.662,905.008 441.248,914.04 441.835,920.165 442.421,925.756 443.007,934.587 443.594,946.038 444.18,956.827 444.767,967.011 445.353,979.527 445.939,986.441 446.526,990.593 447.112,1000.13 447.699,1011.39 448.285,1022.17 448.871,1028.15 449.458,1038.27 450.044,1043.7 450.631,1046.8 451.217,1052.21 451.804,1059.79 452.39,1069.07 452.976,1073.95 453.563,1082.63 454.149,1085.24 454.736,1091.37 455.322,1097.6 455.908,1105.91 456.495,1106.29 457.081,1108.64 457.668,1112.97 458.254,1115.23 458.84,1119.34 459.427,1121.59 460.013,1124.06 460.6,1131.43 461.186,1129.94 461.773,1137.43 462.359,1139.37 462.945,1141.25 463.532,1143.33 464.118,1148.74 464.705,1153.88 465.291,1157.11 465.877,1158.9 466.464,1160.71 467.05,1163.75 467.637,1165.3 468.223,1168.45 468.809,1168.54 469.396,1171.63 469.982,1177.99 470.569,1182.3 471.155,1184.48 471.742,1185.41 472.328,1192.13 472.914,1195.71 473.501,1197.66 474.087,1201.25 474.674,1203.08 475.26,1202 475.846,1202.43 476.433,1204.37 477.019,1204.76 477.606,1205.08 478.192,1206.76 478.778,1209.94 479.365,1210.03 479.951,1214.44 480.538,1218.53 481.124,1222.31 481.711,1223.35 482.297,1221.52 482.883,1225.37 483.47,1226.43 484.056,1228.69 484.643,1232.3 485.229,1231.8 485.815,1232.74 486.402,1229.4 486.988,1228.9 487.575,1234.18 488.161,1234.68 488.748,1235.49 489.334,1235.17 489.92,1234.74 490.507,1235.78 491.093,1238.09 491.68,1238.85 492.266,1240.97 492.852,1239.43 493.439,1240.23 494.025,1239.55 494.612,1237.64 495.198,1239.78 495.784,1238.19 496.371,1241.41 496.957,1244.36 497.544,1246.03 498.13,1247.67 498.717,1250.53 499.303,1249.55 499.889,1247.18 500.476,1244.96 501.062,1244.24 501.649,1244.67 502.235,1243.77 502.821,1244.22 503.408,1243.66 503.994,1244.17 504.581,1243.63 505.167,1245.67 505.753,1244.71 506.34,1242.48 506.926,1243.12 507.513,1245.1 508.099,1248.02 508.686,1245.79 509.272,1246.08 509.858,1246.44 510.445,1249.29 511.031,1249.54 511.618,1249.81 512.204,1250.17 512.79,1249.11 513.377,1249.4 513.963,1249.85 514.55,1248.84 515.136,1248.04 515.722,1246.03 516.309,1245.31 516.895,1247.1 517.482,1248.63 518.068,1246.33 518.655,1246.57 519.241,1246.93 519.827,1247.55 520.414,1246.44 521,1244.24 521.587,1244.65 522.173,1241.57 522.759,1239.85 523.346,1238.1 523.932,1239.05 524.519,1238.77 525.105,1239.67 525.691,1239.28 526.278,1240.19 526.864,1238.39 527.451,1238.03 528.037,1237.64 528.624,1238.41 529.21,1237.96 529.796,1237.45 530.383,1240.76 530.969,1239.39 531.556,1241.26 532.142,1239.47 532.728,1240.23 533.315,1239.81 533.901,1239.31 534.488,1240.16 535.074,1240.96 535.661,1240.54 536.247,1240.1 536.833,1235.9 537.42,1234.26 538.006,1235.5 538.593,1235.1 539.179,1236.01 539.765,1238.2 540.352,1238.96 540.938,1236.11 541.525,1234.3 542.111,1236.58 542.697,1237.56 543.284,1238.11 543.87,1238.99 544.457,1236.98 545.043,1236.5 545.63,1236.02 546.216,1236.86 546.802,1235.34 547.389,1238.7 547.975,1235.55 548.562,1233.89 549.148,1234.71 549.734,1235.47 550.321,1238.52 550.907,1239.01 551.494,1239.74 552.08,1240.35 552.666,1237.11 553.253,1237.85 553.839,1234.67 554.426,1234.06 555.012,1232.33 555.599,1232.48 556.185,1232.1 556.771,1230.62 557.358,1232.9 557.944,1233.8 558.531,1232.19 559.117,1231.83 559.703,1232.88 560.29,1235.18 560.876,1236.12 561.463,1236.73 562.049,1237.28 562.635,1237.77 563.222,1235.75 563.808,1237.67 564.395,1234.46 564.981,1235.53 565.568,1236.28 566.154,1236.07 566.74,1234.25 567.327,1236.46 567.913,1234.77 568.5,1234.22 569.086,1234.88 569.672,1235.7 570.259,1233.87 570.845,1233.47 571.432,1234.33 572.018,1236.14 572.605,1233.03 573.191,1232.61 573.777,1232.34 574.364,1234.5 574.95,1234.03 575.537,1234.57 576.123,1234.13 576.709,1231.2 577.296,1233.16 577.882,1234.07 578.469,1233.35 579.055,1230.37 579.641,1230.14 580.228,1229.73 580.814,1230.65 581.401,1234.95 581.987,1234.91 582.574,1234.48 583.16,1232.55 583.746,1230.93 584.333,1228.33 584.919,1229.11 585.506,1227.58 586.092,1229.78 586.678,1231.89 587.265,1229.09 587.851,1230.3 588.438,1231.09 589.024,1229.71 589.61,1229.33 590.197,1230.38 590.783,1229.96 591.37,1230.66 591.956,1229.05 592.543,1226.4 593.129,1227.47 593.715,1226.98 594.302,1226.54 594.888,1227.54 595.475,1227.17 596.061,1228.11 596.647,1224.23 597.234,1225.12 597.82,1225.08 598.407,1225.09 598.993,1225 599.579,1224.69 600.166,1223.17 600.752,1223.55 601.339,1222.45 601.925,1222.33 602.512,1223.45 603.098,1224.65 603.684,1224.48 604.271,1223.26 604.857,1223.56 605.444,1225.77 606.03,1223.14 606.616,1223.34 607.203,1223.42 607.789,1222.22 608.376,1222.25 608.962,1223.46 609.548,1224.71 610.135,1227.08 610.721,1226.75 611.308,1227.51 611.894,1226.01 612.481,1227.04 613.067,1226.97 613.653,1230.53 614.24,1230.06 614.826,1229.47 615.413,1228.8 615.999,1227.03 616.585,1224.32 617.172,1222.51 617.758,1223.76 618.345,1224.93 618.931,1226.04 619.518,1224.44 620.104,1226.75 620.69,1225.18 621.277,1226.1 621.863,1224.68 622.45,1224.64 623.036,1227.11 623.622,1226.59 624.209,1226.2 624.795,1227.18 625.382,1227.03 625.968,1227.78 626.554,1228.67 627.141,1227.07 627.727,1228.01 628.314,1229.98 628.9,1229.47 629.487,1227.7 630.073,1227.39 630.659,1226.82 631.246,1228.82 631.832,1227.21 632.419,1228 633.005,1227.59 633.591,1227.12 634.178,1227.79 634.764,1230.98 635.351,1229.02 635.937,1228.44 636.523,1227.7 637.11,1229.84 637.696,1227.92 638.283,1229.86 638.869,1228.05 639.456,1229.91 640.042,1231.95 640.628,1231.06 641.215,1231.35 641.801,1232.9 642.388,1234.48 642.974,1234.73 643.56,1232.29 644.147,1231.74 644.733,1232.02 645.32,1231.54 645.906,1227.31 646.492,1226.98 647.079,1222.94 647.665,1221.51 648.252,1220.07 648.838,1220.04 649.425,1221.01 650.011,1219.74 650.597,1218.24 651.184,1220.87 651.77,1222.11 652.357,1223.22 652.943,1221.81 653.529,1221.56 654.116,1220.27 654.702,1220.11 655.289,1220.99 655.875,1220.8 656.462,1220.58 657.048,1220.42 657.634,1221.54 658.221,1221.51 658.807,1224.78 659.394,1224.46 659.98,1225.35 660.566,1223.58 661.153,1225.85 661.739,1226.71 662.326,1226.01 662.912,1226.9 663.498,1226.39 664.085,1224.81 664.671,1225.41 665.258,1223.6 665.844,1223.28 666.431,1223.17 667.017,1221.87 667.603,1223.99 668.19,1221.41 668.776,1220.28 669.363,1215.31 669.949,1216.62 670.535,1216.59 671.122,1216.44 671.708,1217.55 672.295,1217.47 672.881,1217.42 673.467,1213.82 674.054,1213.04 674.64,1214.7 675.227,1216.09 675.813,1216.24 676.4,1217.54 676.986,1214.78 677.572,1211.18 678.159,1211.5 678.745,1211.92 679.332,1214.68 679.918,1216.21 680.504,1215.19 681.091,1215.08 681.677,1215.06 682.264,1215.25 682.85,1216.72 683.436,1213.15 684.023,1219.49 684.609,1219.24 685.196,1220.22 685.782,1218.78 686.369,1218.9 686.955,1218.88 687.541,1217.39 688.128,1216.21 688.714,1216.23 689.301,1221.18 689.887,1220.14 690.473,1220.17 691.06,1222.43 691.646,1222.2 692.233,1221.79 692.819,1222.65 693.405,1218.58 693.992,1219.89 694.578,1221.25 695.165,1222.24 695.751,1223.2 696.338,1225.4 696.924,1221.44 697.51,1221.37 698.097,1221.14 698.683,1222.29 699.27,1220.91 699.856,1219.22 700.442,1221.26 701.029,1220.95 701.615,1220.85 702.202,1219.66 702.788,1223.06 703.375,1224.03 703.961,1223.71 704.547,1221.03 705.134,1225.68 705.72,1226.43 706.307,1222.03 706.893,1223.02 707.479,1220.25 708.066,1218.61 708.652,1219.56 709.239,1223 709.825,1222.52 710.411,1224.53 710.998,1223.87 711.584,1224.62 712.171,1221.77 712.757,1221.61 713.344,1226.23 713.93,1227.03 714.516,1227.64 715.103,1224.41 715.689,1223.93 716.276,1223.57 716.862,1224.19 717.448,1223.61 718.035,1221.96 718.621,1219.12 719.208,1218.83 719.794,1217.42 720.38,1217.34 720.967,1217.2 721.553,1218.13 722.14,1216.82 722.726,1211.55 723.313,1208.15 723.899,1209.62 724.485,1207.84 725.072,1208.31 725.658,1209.84 726.245,1208.88 726.831,1210.35 727.417,1210.65 728.004,1211.01 728.59,1212.31 729.177,1212.5 729.763,1208.89 730.349,1206.93 730.936,1206.43 731.522,1205.73 732.109,1205.95 732.695,1206.02 733.282,1207.85 733.868,1209.4 734.454,1208.4 735.041,1208.94 735.627,1212.07 736.214,1214.56 736.8,1213.22 737.386,1212.11 737.973,1212.38 738.559,1213.56 739.146,1212.53 739.732,1213.94 740.318,1213.95 740.905,1215.39 741.491,1219.16 742.078,1220.2 742.664,1217.77 743.251,1216.48 743.837,1217.89 744.423,1220.21 745.01,1220.03 745.596,1220.96 746.183,1221.99 746.769,1219.14 747.355,1217.5 747.942,1217.36 748.528,1215.95 749.115,1216.86 749.701,1217.05 750.288,1216.73 750.874,1217.87 751.46,1220.05 752.047,1220.9 752.633,1219.5 753.22,1219.33 753.806,1220.37 754.392,1223.56 754.979,1220.67 755.565,1220.27 756.152,1220.12 756.738,1218.42 757.324,1217.98 757.911,1217.73 758.497,1218.73 759.084,1221.14 759.67,1218.41 760.257,1218.14 760.843,1219.02 761.429,1220.21 762.016,1218.8 762.602,1218.61 763.189,1219.74 763.775,1219.22 764.361,1219.97 764.948,1219.63 765.534,1220.72 766.121,1221.55 766.707,1218.92 767.293,1213.59 767.88,1214.69 768.466,1214.49 769.053,1213.14 769.639,1213.3 770.226,1209.84 770.812,1212.68 771.398,1210.39 771.985,1208.13 772.571,1207.22 773.158,1207.51 773.744,1206.58 774.33,1206.94 774.917,1207.26 775.503,1207.68 776.09,1205.6 776.676,1204.88 777.262,1204.31 777.849,1206.07 778.435,1207.92 779.022,1208.23 779.608,1207.35 780.195,1208.86 780.781,1209.15 781.367,1208.35 781.954,1208.55 782.54,1207.72 783.127,1206.85 783.713,1207.22 784.299,1206.6 784.886,1204.66 785.472,1206.53 786.059,1209.43 786.645,1208.58 787.232,1210.36 787.818,1210.69 788.404,1210.81 788.991,1210.02 789.577,1211.66 790.164,1212.99 790.75,1214.3 791.336,1214.53 791.923,1213.4 792.509,1215 793.096,1215.03 793.682,1214.84 794.268,1216.08 794.855,1217.09 795.441,1218.24 796.028,1219.08 796.614,1217.72 797.201,1216.17 797.787,1218.51 798.373,1222.85 798.96,1222.21 799.546,1222.94 800.133,1222.41 800.719,1221.94 801.305,1222.64 801.892,1220.85 802.478,1216.53 803.065,1215.09 803.651,1212.6 804.237,1211.57 804.824,1213.07 805.41,1211.9 805.997,1212.16 806.583,1212.3 807.17,1213.6 807.756,1212.76 808.342,1212.79 808.929,1210.36 809.515,1209.15 810.102,1210.49 810.688,1209.82 811.274,1213.45 811.861,1212.3 812.447,1211.07 813.034,1212.49 813.62,1212.59 814.206,1213 814.793,1214.18 815.379,1214.1 815.966,1215.1 816.552,1214.76 817.139,1214.79 817.725,1214.57 818.311,1214.55 818.898,1214.13 819.484,1214.58 820.071,1214.55 820.657,1215.69 821.243,1215.64 821.83,1218.07 822.416,1217.93 823.003,1217.36 823.589,1217.26 824.175,1218.36 824.762,1218.21 825.348,1217.88 825.935,1216.41 826.521,1217.33 827.108,1216.07 827.694,1214.54 828.28,1215.67 828.867,1214.4 829.453,1216.85 830.04,1213.99 830.626,1215.21 831.212,1216.52 831.799,1216.71 832.385,1217.8 832.972,1218.98 833.558,1217.51 834.145,1215.9 834.731,1214.56 835.317,1214.69 835.904,1214.49 836.49,1213.18 837.077,1211.99 837.663,1214.66 838.249,1214.46 838.836,1214.58 839.422,1214.95 840.009,1213.53 840.595,1214.74 841.181,1215.9 841.768,1216.81 842.354,1217.76 842.941,1219.84 843.527,1221.89 844.114,1221.39 844.7,1218.73 845.286,1217.13 845.873,1216.77 846.459,1216.25 847.046,1214.58 847.632,1214.34 848.218,1214.24 848.805,1215.63 849.391,1214.21 849.978,1215.5 850.564,1215.38 851.15,1217.55 851.737,1216.06 852.323,1215.99 852.91,1214.75 853.496,1213.53 854.083,1212.38 854.669,1213.63 855.255,1213.6 855.842,1215.92 856.428,1216.82 857.015,1218.91 857.601,1217.3 858.187,1215.77 858.774,1216.84 859.36,1215.28 859.947,1211.59 860.533,1211.74 861.119,1211.75 861.706,1209.02 862.292,1209.26 862.879,1211.92 863.465,1213.21 864.052,1213.35 864.638,1215.72 865.224,1219.1 865.811,1221.3 866.397,1220.9 866.984,1215.65 867.57,1215.35 868.156,1212.84 868.743,1213.92 869.329,1210.37 869.916,1210.53 870.502,1209.51 871.089,1212.35 871.675,1212.55 872.261,1211.15 872.848,1210.21 873.434,1211.63 874.021,1212.72 874.607,1212.29 875.193,1212.15 875.78,1212.96 876.366,1212.94 876.953,1212.86 877.539,1212.82 878.125,1214.99 878.712,1214.65 879.298,1214.58 879.885,1213.23 880.471,1212.09 881.058,1211.02 881.644,1210.89 882.23,1214.59 882.817,1214.42 883.403,1216.62 883.99,1216.28 884.576,1214.75 885.162,1211.22 885.749,1213.66 886.335,1210.81 886.922,1211.36 887.508,1212.46 888.094,1212.37 888.681,1210.01 889.267,1213.59 889.854,1212.16 890.44,1212.11 891.027,1208.45 891.613,1208.52 892.199,1208.66 892.786,1208.81 893.372,1206.69 893.959,1206.8 894.545,1208.43 895.131,1209.75 895.718,1211.01 896.304,1209.94 896.891,1209.94 897.477,1210.07 898.063,1210.44 898.65,1209.21 899.236,1209.57 899.823,1210.79 900.409,1212.1 900.996,1213.04 901.582,1211.56 902.168,1211.56 902.755,1210.25 903.341,1207.93 903.928,1205.64 904.514,1203.65 905.1,1202.98 905.687,1202.35 906.273,1200.48 906.86,1198.85 907.446,1199.81 908.032,1202.79 908.619,1203.46 909.205,1202.52 909.792,1203.28 910.378,1206.2 910.965,1207.55 911.551,1206.55 912.137,1206.84 912.724,1206.11 913.31,1205.27 913.897,1205.87 914.483,1206.36 915.069,1206.8 915.656,1207.17 916.242,1208.75 916.829,1210.36 917.415,1212.91 918.002,1209.13 918.588,1210.49 919.174,1208.24 919.761,1208.89 920.347,1209.15 920.934,1207.91 921.52,1209.44 922.106,1210.78 922.693,1209.83 923.279,1210.02 923.866,1210.11 924.452,1207.57 925.038,1207.86 925.625,1208.21 926.211,1208.25 926.798,1207.3 927.384,1208.59 927.971,1206.54 928.557,1206.91 929.143,1207.08 929.73,1206.08 930.316,1203.73 930.903,1204.1 931.489,1203 932.075,1202.33 932.662,1202.99 933.248,1202.42 933.835,1203.09 934.421,1203.73 935.007,1204.15 935.594,1204.63 936.18,1206.6 936.767,1208.1 937.353,1210.7 937.94,1212.12 938.526,1210.87 939.112,1209.83 939.699,1211.19 940.285,1211.45 940.872,1211.35 941.458,1212.71 942.044,1216.5 942.631,1217.52 943.217,1219.5 943.804,1221.65 944.39,1219.77 944.976,1217.19 945.563,1216.99 946.149,1219.08 946.736,1217.56 947.322,1219.51 947.909,1219.1 948.495,1215.05 949.081,1215.92 949.668,1214.43 950.254,1215.44 950.841,1218.87 951.427,1218.36 952.013,1219.07 952.6,1218.47 953.186,1218.21 953.773,1215.36 954.359,1214.19 954.945,1214.24 955.532,1214.01 956.118,1215.16 956.705,1213.67 957.291,1212.24 957.878,1211.97 958.464,1213.25 959.05,1214.22 959.637,1213.95 960.223,1217.47 960.81,1215.67 961.396,1212.98 961.982,1213.06 962.569,1211.79 963.155,1211.74 963.742,1211.75 964.328,1214.39 964.915,1210.61 965.501,1211.77 966.087,1211.78 966.674,1212.99 967.26,1215.19 967.847,1214.94 968.433,1216.07 969.019,1215.86 969.606,1214.27 970.192,1215.38 970.779,1216.19 971.365,1215.98 971.951,1215.83 972.538,1215.51 973.124,1216.73 973.711,1215.17 974.297,1215 974.884,1212.4 975.47,1208.88 976.056,1209.15 976.643,1209.52 977.229,1209.78 977.816,1210.04 978.402,1211.25 978.988,1211.27 979.575,1211.14 980.161,1209.93 980.748,1209.66 981.334,1209.8 981.92,1207.49 982.507,1206.58 983.093,1207.11 983.68,1206.1 984.266,1207.47 984.853,1208.8 985.439,1210.12 986.025,1209.86 986.612,1211.21 987.198,1209.58 987.785,1209.6 988.371,1208.45 988.957,1209.86 989.544,1210 990.13,1211.09 990.717,1209.91 991.303,1208.8 991.889,1211.28 992.476,1212.47 993.062,1216.12 993.649,1214.92 994.235,1214.93 994.822,1212.56 995.408,1213.7 995.994,1214.75 996.581,1217.29 997.167,1218.18 997.754,1217.76 998.34,1217.58 998.926,1216.05 999.513,1216.84 1000.1,1216.55 1000.69,1217.66 1001.27,1218.64 1001.86,1217.09 1002.44,1217.91 1003.03,1216.56 1003.62,1217.55 1004.2,1214.72 1004.79,1215.79 1005.38,1216.59 1005.96,1217.59 1006.55,1219.84 1007.14,1219.34 1007.72,1220.09 1008.31,1218.44 1008.9,1214.41 1009.48,1214.04 1010.07,1213.97 1010.65,1212.7 1011.24,1212.58 1011.83,1212.74 1012.41,1217.41 1013,1217.33 1013.59,1216.03 1014.17,1215.81 1014.76,1215.69 1015.35,1214.56 1015.93,1218.17 1016.52,1219.14 1017.11,1218.89 1017.69,1214.67 1018.28,1217.1 1018.86,1216.75 1019.45,1216.43 1020.04,1217.41 1020.62,1217.12 1021.21,1215.46 1021.8,1213.96 1022.38,1212.55 1022.97,1209.03 1023.56,1208.84 1024.14,1213.83 1024.73,1212.11 1025.32,1213.24 1025.9,1214.41 1026.49,1214.19 1027.07,1215.22 1027.66,1212.66 1028.25,1211.37 1028.83,1210.38 1029.42,1212.81 1030.01,1210.47 1030.59,1210.57 1031.18,1211.72 1031.77,1210.56 1032.35,1208.15 1032.94,1207.11 1033.52,1207.14 1034.11,1206.15 1034.7,1205.24 1035.28,1203.25 1035.87,1203.66 1036.46,1205.19 1037.04,1206.93 1037.63,1206 1038.22,1204.14 1038.8,1205.61 1039.39,1205.9 1039.98,1202.43 1040.56,1205.31 1041.15,1201.96 1041.73,1203.61 1042.32,1203.81 1042.91,1204.32 1043.49,1205.93 1044.08,1205.16 1044.67,1207.86 1045.25,1210.51 1045.84,1208.46 1046.43,1209.95 1047.01,1208.87 1047.6,1210.26 1048.19,1209.2 1048.77,1209.58 1049.36,1209.61 1049.94,1208.6 1050.53,1208.65 1051.12,1214.85 1051.7,1216.95 1052.29,1215.57 1052.88,1214.07 1053.46,1217.6 1054.05,1220.83 1054.64,1219.06 1055.22,1218.9 1055.81,1214.96 1056.39,1215.04 1056.98,1214.74 1057.57,1213.04 1058.15,1215.38 1058.74,1216.53 1059.33,1217.56 1059.91,1216.36 1060.5,1212.51 1061.09,1211.14 1061.67,1208.47 1062.26,1215.64 1062.85,1214.25 1063.43,1211.91 1064.02,1214.3 1064.6,1212.9 1065.19,1215.18 1065.78,1212.61 1066.36,1214.81 1066.95,1213.28 1067.54,1214.56 1068.12,1213.29 1068.71,1213 1069.3,1212.91 1069.88,1214.16 1070.47,1212.78 1071.06,1210.08 1071.64,1210.06 1072.23,1209.97 1072.81,1208.78 1073.4,1208.88 1073.99,1206.42 1074.57,1206.41 1075.16,1208.89 1075.75,1209.07 1076.33,1209.39 1076.92,1208.49 1077.51,1208.41 1078.09,1207.2 1078.68,1207.5 1079.26,1208.95 1079.85,1206.77 1080.44,1207.05 1081.02,1204.92 1081.61,1201.75 1082.2,1199.82 1082.78,1201.74 1083.37,1200.93 1083.96,1201.35 1084.54,1205.77 1085.13,1206 1085.72,1206.41 1086.3,1206.68 1086.89,1204.61 1087.47,1206.99 1088.06,1206.05 1088.65,1207.48 1089.23,1209.06 1089.82,1209.13 1090.41,1205.65 1090.99,1206.27 1091.58,1208.75 1092.17,1208.88 1092.75,1211.19 1093.34,1211.31 1093.93,1212.48 1094.51,1211.15 1095.1,1211.41 1095.68,1207.64 1096.27,1208.94 1096.86,1210.02 1097.44,1210.14 1098.03,1210.12 1098.62,1207.8 1099.2,1206.7 1099.79,1206.98 1100.38,1209.13 1100.96,1211.65 1101.55,1213.09 1102.14,1216.33 1102.72,1213.94 1103.31,1213.85 1103.89,1213.57 1104.48,1213.47 1105.07,1213.42 1105.65,1212.1 1106.24,1214.57 1106.83,1215.6 1107.41,1217.59 1108,1214.75 1108.59,1217.02 1109.17,1215.59 1109.76,1216.69 1110.34,1219.92 1110.93,1220.39 1111.52,1218.79 1112.1,1217.46 1112.69,1218.18 1113.28,1219.34 1113.86,1217.68 1114.45,1216.03 1115.04,1215.68 1115.62,1214.21 1116.21,1215.25 1116.8,1214.82 1117.38,1215.63 1117.97,1213.96 1118.55,1212.98 1119.14,1214.06 1119.73,1212.45 1120.31,1214.95 1120.9,1213.68 1121.49,1212.32 1122.07,1210.89 1122.66,1209.71 1123.25,1209.97 1123.83,1207.48 1124.42,1210.15 1125.01,1211.59 1125.59,1212.75 1126.18,1211.37 1126.76,1208.81 1127.35,1205.31 1127.94,1206.41 1128.52,1206.69 1129.11,1207.89 1129.7,1207.97 1130.28,1208.19 1130.87,1208.42 1131.46,1209.97 1132.04,1210.34 1132.63,1210.67 1133.21,1209.77 1133.8,1208.67 1134.39,1208.83 1134.97,1208.75 1135.56,1208.7 1136.15,1211.33 1136.73,1212.58 1137.32,1211.08 1137.91,1211.25 1138.49,1207.51 1139.08,1208.96 1139.67,1207.69 1140.25,1207.94 1140.84,1209.46 1141.42,1210.87 1142.01,1211.85 1142.6,1210.72 1143.18,1210.54 1143.77,1211.83 1144.36,1216.72 1144.94,1216.41 1145.53,1214.8 1146.12,1215.86 1146.7,1214.19 1147.29,1214.1 1147.88,1215.41 1148.46,1215.41 1149.05,1212.89 1149.63,1213.94 1150.22,1215.06 1150.81,1216.12 1151.39,1214.6 1151.98,1210.78 1152.57,1209.52 1153.15,1210.66 1153.74,1211.99 1154.33,1211.99 1154.91,1211.5 1155.5,1212.52 1156.09,1212.58 1156.67,1212.55 1157.26,1211.32 1157.84,1209.77 1158.43,1209.81 1159.02,1209.86 1159.6,1209.91 1160.19,1208.91 1160.78,1211.42 1161.36,1212.59 1161.95,1211.27 1162.54,1212.61 1163.12,1211.18 1163.71,1212.62 1164.29,1212.76 1164.88,1213.95 1165.47,1212.98 1166.05,1212.93 1166.64,1211.66 1167.23,1212.64 1167.81,1211.21 1168.4,1210.1 1168.99,1211.39 1169.57,1210.1 1170.16,1209.05 1170.75,1209.17 1171.33,1207.96 1171.92,1205.6 1172.5,1207.22 1173.09,1208.48 1173.68,1207.29 1174.26,1204.97 1174.85,1204.03 1175.44,1206.88 1176.02,1208.1 1176.61,1207.03 1177.2,1209.6 1177.78,1210.78 1178.37,1210.82 1178.96,1212.02 1179.54,1211.79 1180.13,1210.56 1180.71,1214.36 1181.3,1214.25 1181.89,1218.92 1182.47,1217.43 1183.06,1216.98 1183.65,1216.97 1184.23,1215.55 1184.82,1212.87 1185.41,1214.08 1185.99,1212.99 1186.58,1213.08 1187.16,1210.41 1187.75,1209.08 1188.34,1206.8 1188.92,1204.62 1189.51,1204.67 1190.1,1203.53 1190.68,1202.72 1191.27,1203.05 1191.86,1203.56 1192.44,1202.73 1193.03,1205.67 1193.62,1205.71 1194.2,1203.54 1194.79,1202.73 1195.37,1202.98 1195.96,1204.64 1196.55,1205.07 1197.13,1204.27 1197.72,1207.15 1198.31,1208.62 1198.89,1208.77 1199.48,1208.8 1200.07,1209.11 1200.65,1210.39 1201.24,1211.61 1201.83,1211.6 1202.41,1206.81 1203,1206.05 1203.58,1206.28 1204.17,1206.54 1204.76,1208.07 1205.34,1208.36 1205.93,1209.65 1206.52,1209.77 1207.1,1209.67 1207.69,1208.29 1208.28,1207.65 1208.86,1210.11 1209.45,1210.57 1210.03,1211.85 1210.62,1215.46 1211.21,1213.95 1211.79,1213.77 1212.38,1210.92 1212.97,1209.94 1213.55,1209.98 1214.14,1209.9 1214.73,1208.63 1215.31,1208.84 1215.9,1211.54 1216.49,1211.33 1217.07,1212.43 1217.66,1212.36 1218.24,1213.38 1218.83,1213.23 1219.42,1213.32 1220,1213.12 1220.59,1211.83 1221.18,1210.59 1221.76,1213.08 1222.35,1213.06 1222.94,1216.44 1223.52,1214.83 1224.11,1214.6 1224.7,1213.31 1225.28,1209.45 1225.87,1209.34 1226.45,1208.27 1227.04,1209.51 1227.63,1209.58 1228.21,1209.62 1228.8,1211 1229.39,1209.91 1229.97,1211.28 1230.56,1209.89 1231.15,1209.81 1231.73,1209.84 1232.32,1208.54 1232.91,1207.56 1233.49,1207.69 1234.08,1207.78 1234.66,1209.09 1235.25,1208.02 1235.84,1205.57 1236.42,1207.07 1237.01,1208.5 1237.6,1207.65 1238.18,1209.19 1238.77,1208.28 1239.36,1211.13 1239.94,1212.47 1240.53,1213.96 1241.11,1212.87 1241.7,1213.83 1242.29,1213.5 1242.87,1213.29 1243.46,1214.24 1244.05,1216.53 1244.63,1216.33 1245.22,1216.16 1245.81,1214.79 1246.39,1218.31 1246.98,1216.71 1247.57,1221.48 1248.15,1224.8 1248.74,1223.18 1249.32,1221.31 1249.91,1219.31 1250.5,1218.76 1251.08,1219.42 1251.67,1217.71 1252.26,1214.92 1252.84,1214.8 1253.43,1214.39 1254.02,1213.12 1254.6,1211.78 1255.19,1211.62 1255.78,1209.25 1256.36,1206.69 1256.95,1206.91 1257.53,1205.97 1258.12,1206.04 1258.71,1207.4 1259.29,1207.71 1259.88,1208.89 1260.47,1210.05 1261.05,1209.94 1261.64,1213.7 1262.23,1214.84 1262.81,1213.34 1263.4,1214.32 1263.98,1212.86 1264.57,1211.58 1265.16,1213.99 1265.74,1215.07 1266.33,1216.1 1266.92,1215.88 1267.5,1215.41 1268.09,1215.05 1268.68,1213.85 1269.26,1212.55 1269.85,1213.46 1270.44,1212.19 1271.02,1213.5 1271.61,1213.41 1272.19,1209.39 1272.78,1209.44 1273.37,1209.46 1273.95,1209.31 1274.54,1211.91 1275.13,1210.54 1275.71,1210.77 1276.3,1210.68 1276.89,1210.74 1277.47,1208.26 1278.06,1208.32 1278.65,1209.43 1279.23,1207.13 1279.82,1205.78 1280.4,1208.49 1280.99,1209.84 1281.58,1208.67 1282.16,1210.04 1282.75,1207.59 1283.34,1206.64 1283.92,1206.94 1284.51,1207.11 1285.1,1209.61 1285.68,1208.56 1286.27,1208.52 1286.86,1209.93 1287.44,1211.01 1288.03,1212.09 1288.61,1210.89 1289.2,1209.78 1289.79,1208.64 1290.37,1206.31 1290.96,1207.73 1291.55,1208.03 1292.13,1206.82 1292.72,1204.66 1293.31,1203.75 1293.89,1204.11 1294.48,1204.37 1295.06,1207.97 1295.65,1207.96 1296.24,1208.39 1296.82,1207.24 1297.41,1207.48 1298,1208.04 1298.58,1211.6 1299.17,1207.46 1299.76,1206.24 1300.34,1206.36 1300.93,1207.97 1301.52,1210.57 1302.1,1211.69 1302.69,1211.4 1303.27,1212.54 1303.86,1212.36 1304.45,1211.12 1305.03,1210.03 1305.62,1210.16 1306.21,1209.11 1306.79,1209.32 1307.38,1210.64 1307.97,1211.82 1308.55,1208.18 1309.14,1207.13 1309.73,1208.79 1310.31,1208.91 1310.9,1208.98 1311.48,1207.98 1312.07,1209.36 1312.66,1210.78 1313.24,1211.99 1313.83,1211.82 1314.42,1213.03 1315,1211.83 1315.59,1208.13 1316.18,1208.19 1316.76,1208.37 1317.35,1207.3 1317.93,1206.51 1318.52,1206.9 1319.11,1206.96 1319.69,1206.1 1320.28,1207.78 1320.87,1207.92 1321.45,1214.08 1322.04,1213.06 1322.63,1214.26 1323.21,1216.22 1323.8,1213.54 1324.39,1212.32 1324.97,1211.32 1325.56,1211.33 1326.14,1212.64 1326.73,1212.52 1327.32,1211.15 1327.9,1209.73 1328.49,1209.74 1329.08,1210.87 1329.66,1213.19 1330.25,1215.31 1330.84,1215.87 1331.42,1215.44 1332.01,1214.99 1332.6,1214.95 1333.18,1218.51 1333.77,1215.76 1334.35,1215.75 1334.94,1217.99 1335.53,1217.46 1336.11,1218.52 1336.7,1220.52 1337.29,1218.76 1337.87,1217.96 1338.46,1216.43 1339.05,1218.36 1339.63,1216.9 1340.22,1217.44 1340.8,1215.95 1341.39,1213.2 1341.98,1212.99 1342.56,1211.82 1343.15,1213.19 1343.74,1214.49 1344.32,1214.2 1344.91,1214.1 1345.5,1215.34 1346.08,1212.38 1346.67,1209.83 1347.26,1211.01 1347.84,1210.91 1348.43,1210.88 1349.01,1213.38 1349.6,1213.18 1350.19,1215.6 1350.77,1212.93 1351.36,1214.06 1351.95,1212.74 1352.53,1210.15 1353.12,1207.79 1353.71,1209.08 1354.29,1211.6 1354.88,1209.08 1355.47,1209.32 1356.05,1211.66 1356.64,1210.55 1357.22,1209.61 1357.81,1210.78 1358.4,1210.77 1358.98,1212 1359.57,1211.77 1360.16,1212.91 1360.74,1215.1 1361.33,1212.37 1361.92,1212.43 1362.5,1211.12 1363.09,1208.93 1363.68,1206.59 1364.26,1208.07 1364.85,1209.42 1365.43,1213.18 1366.02,1216.48 1366.61,1217.41 1367.19,1217.1 1367.78,1216.77 1368.37,1218.74 1368.95,1215.63 1369.54,1214.11 1370.13,1214.96 1370.71,1211.16 1371.3,1208.7 1371.88,1208.61 1372.47,1212.21 1373.06,1211.14 1373.64,1209.91 1374.23,1212.35 1374.82,1213.51 1375.4,1212.09 1375.99,1211.99 1376.58,1213.19 1377.16,1211.88 1377.75,1208.17 1378.34,1210.71 1378.92,1208.23 1379.51,1205.82 1380.09,1206.12 1380.68,1207.67 1381.27,1206.7 1381.85,1206.93 1382.44,1205.66 1383.03,1205.73 1383.61,1203.38 1384.2,1203.62 1384.79,1205.28 1385.37,1207.01 1385.96,1207.35 1386.55,1207.39 1387.13,1207.74 1387.72,1207.89 1388.3,1208.19 1388.89,1208.49 1389.48,1208.49 1390.06,1208.65 1390.65,1209.93 1391.24,1208.72 1391.82,1207.8 1392.41,1204.34 1393,1200.82 1393.58,1203.81 1394.17,1205.64 1394.75,1203.66 1395.34,1208.78 1395.93,1208.79 1396.51,1210.17 1397.1,1211.34 1397.69,1211.75 1398.27,1211.51 1398.86,1211.44 1399.45,1210.32 1400.03,1209.21 1400.62,1211.63 1401.21,1212.89 1401.79,1213.96 1402.38,1213.88 1402.96,1213.88 1403.55,1213.57 1404.14,1213.33 1404.72,1212.97 1405.31,1212.79 1405.9,1212.69 1406.48,1211.48 1407.07,1211.33 1407.66,1212.7 1408.24,1210.35 1408.83,1207.74 1409.42,1209.05 1410,1212.81 1410.59,1212.85 1411.17,1211.56 1411.76,1212.91 1412.35,1211.65 1412.93,1211.41 1413.52,1212.55 1414.11,1212.52 1414.69,1216.03 1415.28,1217.17 1415.87,1216.47 1416.45,1214.63 1417.04,1215.59 1417.63,1214.06 1418.21,1213.79 1418.8,1212.04 1419.38,1210.79 1419.97,1211.86 1420.56,1213.09 1421.14,1214.24 1421.73,1211.8 1422.32,1214.27 1422.9,1216.51 1423.49,1216.49 1424.08,1216.19 1424.66,1215.74 1425.25,1212.07 1425.83,1213.27 1426.42,1214.65 1427.01,1213.25 1427.59,1211.66 1428.18,1212.58 1428.77,1211.34 1429.35,1211.22 1429.94,1211.08 1430.53,1210.91 1431.11,1211.83 1431.7,1208.3 1432.29,1208.46 1432.87,1209.89 1433.46,1211.13 1434.04,1206.08 1434.63,1206.15 1435.22,1202.93 1435.8,1202 1436.39,1202.44 1436.98,1203.26 1437.56,1203.73 1438.15,1204.05 1438.74,1204.16 1439.32,1202.13 1439.91,1202.37 1440.5,1204.13 1441.08,1200.77 1441.67,1198.99 1442.25,1199.86 1442.84,1200.55 1443.43,1202.26 1444.01,1206.62 1444.6,1208.17 1445.19,1205.93 1445.77,1204.93 1446.36,1205.43 1446.95,1205.55 1447.53,1206.06 1448.12,1205.13 1448.7,1208.24 1449.29,1207.1 1449.88,1206.36 1450.46,1205.22 1451.05,1206.44 1451.64,1211.54 1452.22,1212.73 1452.81,1212.64 1453.4,1211.39 1453.98,1212.36 1454.57,1212.43 1455.16,1211.17 1455.74,1213.85 1456.33,1212.36 1456.91,1212.19 1457.5,1212.18 1458.09,1214.72 1458.67,1214.68 1459.26,1214.66 1459.85,1213.28 1460.43,1213.08 1461.02,1210.58 1461.61,1209.23 1462.19,1206.87 1462.78,1207.13 1463.37,1205.06 1463.95,1207.65 1464.54,1207.83 1465.12,1209.09 1465.71,1210.59 1466.3,1210.55 1466.88,1210.62 1467.47,1211.88 1468.06,1211.9 1468.64,1211.83 1469.23,1212.85 1469.82,1215.32 1470.4,1213.89 1470.99,1215.17 1471.57,1214.97 1472.16,1215.77 1472.75,1218.04 1473.33,1215.12 1473.92,1216.24 1474.51,1215.81 1475.09,1214.37 1475.68,1216.67 1476.27,1212.89 1476.85,1213.97 1477.44,1212.47 1478.03,1211.4 1478.61,1211.38 1479.2,1211.26 1479.78,1210.31 1480.37,1210.26 1480.96,1211.66 1481.54,1211.55 1482.13,1212.88 1482.72,1211.47 1483.3,1213.97 1483.89,1211.38 1484.48,1211.38 1485.06,1210.25 1485.65,1207.92 1486.24,1208.1 1486.82,1210.72 1487.41,1211.74 1487.99,1211.8 1488.58,1212.89 1489.17,1212.53 1489.75,1212.47 1490.34,1212.41 1490.93,1212.26 1491.51,1213.12 1492.1,1211.79 1492.69,1211.68 1493.27,1211.31 1493.86,1211.38 1494.45,1212.56 1495.03,1212.67 1495.62,1212.72 1496.2,1212.68 1496.79,1212.71 1497.38,1215.25 1497.96,1216.19 1498.55,1215.95 1499.14,1214.33 1499.72,1215.4 1500.31,1212.81 1500.9,1214.25 1501.48,1212.73 1502.07,1211.15 1502.65,1211.09 1503.24,1209.88 1503.83,1208.85 1504.41,1208.89 1505,1206.66 1505.59,1209.24 1506.17,1209.13 1506.76,1206.68 1507.35,1206.85 1507.93,1206.93 1508.52,1208.46 1509.11,1206.02 1509.69,1203.37 1510.28,1205.11 1510.86,1201.69 1511.45,1203.21 1512.04,1201.12 1512.62,1204.1 1513.21,1203.06 1513.8,1203.56 1514.38,1201.65 1514.97,1202.32 1515.56,1202.38 1516.14,1204.88 1516.73,1205.28 1517.32,1208.13 1517.9,1208.43 1518.49,1209.72 1519.07,1209.83 1519.66,1210.02 1520.25,1209.95 1520.83,1211.01 1521.42,1208.43 1522.01,1211.02 1522.59,1210.1 1523.18,1210.27 1523.77,1208.1 1524.35,1208.19 1524.94,1208.49 1525.52,1209.76 1526.11,1210.98 1526.7,1212.37 1527.28,1212.37 1527.87,1213.6 1528.46,1215.81 1529.04,1217.98 1529.63,1217.63 1530.22,1217.42 1530.8,1214.89 1531.39,1215.92 1531.98,1216.9 1532.56,1216.57 1533.15,1215.15 1533.73,1213.5 1534.32,1218.34 1534.91,1220.43 1535.49,1219.96 1536.08,1220.73 1536.67,1220.26 1537.25,1219.72 1537.84,1218.07 1538.43,1217.55 1539.01,1215.93 1539.6,1214.43 1540.19,1214.22 1540.77,1213.06 1541.36,1212.97 1541.94,1213.88 1542.53,1212.54 1543.12,1213.84 1543.7,1213.71 1544.29,1211.12 1544.88,1209.96 1545.46,1211.39 1546.05,1212.45 1546.64,1214.84 1547.22,1212.35 1547.81,1214.8 1548.4,1214.66 1548.98,1216.81 1549.57,1216.82 1550.15,1216.26 1550.74,1216.25 1551.33,1214.95 1551.91,1215.98 1552.5,1214.43 1553.09,1215.55 1553.67,1215.21 1554.26,1213.63 1554.85,1211.27 1555.43,1212.44 1556.02,1212.25 1556.6,1210.97 1557.19,1212.22 1557.78,1212.1 1558.36,1210.66 1558.95,1210.76 1559.54,1209.43 1560.12,1214.56 1560.71,1214.6 1561.3,1214.62 1561.88,1214.41 1562.47,1216.66 1563.06,1216.51 1563.64,1217.35 1564.23,1218.14 1564.81,1216.2 1565.4,1215.97 1565.99,1217.04 1566.57,1217.92 1567.16,1216.4 1567.75,1217.44 1568.33,1218.35 1568.92,1219.22 1569.51,1217.62 1570.09,1217.3 1570.68,1218.19 1571.27,1216.52 1571.85,1217.29 1572.44,1213.47 1573.02,1214.4 1573.61,1213.08 1574.2,1215.26 1574.78,1213.86 1575.37,1214.55 1575.96,1214.23 1576.54,1214.08 1577.13,1216.49 1577.72,1214.85 1578.3,1212.27 1578.89,1212.13 1579.47,1210.77 1580.06,1210.83 1580.65,1210.85 1581.23,1210.74 1581.82,1208.32 1582.41,1209.51 1582.99,1209.58 1583.58,1207.4 1584.17,1206.4 1584.75,1207.64 1585.34,1207.81 1585.93,1208.13 1586.51,1206.91 1587.1,1207.08 1587.68,1207.35 1588.27,1207.6 1588.86,1207.65 1589.44,1209.97 1590.03,1213.45 1590.62,1210.72 1591.2,1212.9 1591.79,1215.19 1592.38,1216.19 1592.96,1215.92 1593.55,1214.46 1594.14,1214.23 1594.72,1212.78 1595.31,1215.11 1595.89,1213.68 1596.48,1214.76 1597.07,1215.53 1597.65,1214.11 1598.24,1214.97 1598.83,1214.65 1599.41,1213.25 1600,1214.31 1600.59,1212.77 1601.17,1211.56 1601.76,1209.17 1602.34,1207.99 1602.93,1206.91 1603.52,1208.41 1604.1,1208.35 1604.69,1209.89 1605.28,1208.91 1605.86,1206.47 1606.45,1206.7 1607.04,1206.79 1607.62,1208.09 1608.21,1208.35 1608.8,1207.16 1609.38,1204.76 1609.97,1205.26 1610.55,1205.51 1611.14,1205.78 1611.73,1205.87 1612.31,1204.62 1612.9,1207.49 1613.49,1207.75 1614.07,1207.95 1614.66,1207.91 1615.25,1209.32 1615.83,1209.56 1616.42,1210.48 1617.01,1214.01 1617.59,1213.77 1618.18,1215.81 1618.76,1214.34 1619.35,1214.25 1619.94,1216.52 1620.52,1216.11 1621.11,1217.03 1621.7,1217.89 1622.28,1215.24 1622.87,1214.8 1623.46,1219.26 1624.04,1221.19 1624.63,1217.23 1625.22,1212.23 1625.8,1209.62 1626.39,1209.56 1626.97,1211.98 1627.56,1209.56 1628.15,1208.25 1628.73,1208.34 1629.32,1209.61 1629.91,1207.29 1630.49,1207.57 1631.08,1206.46 1631.67,1206.9 1632.25,1208.5 1632.84,1208.64 1633.42,1211.24 1634.01,1212.57 1634.6,1211.23 1635.18,1208.9 1635.77,1207.79 1636.36,1209.24 1636.94,1209.23 1637.53,1209.25 1638.12,1210.74 1638.7,1211.95 1639.29,1209.26 1639.88,1210.56 1640.46,1213.88 1641.05,1211.21 1641.63,1208.9 1642.22,1210.28 1642.81,1209.27 1643.39,1209.21 1643.98,1214.38 1644.57,1216.68 1645.15,1212.91 1645.74,1212.88 1646.33,1212.86 1646.91,1212.93 1647.5,1216.56 1648.09,1213.92 1648.67,1211.26 1649.26,1212.57 1649.84,1211.07 1650.43,1211 1651.02,1211.07 1651.6,1210.67 1652.19,1209.45 1652.78,1209.52 1653.36,1209.68 1653.95,1208.59 1654.54,1209.87 1655.12,1208.77 1655.71,1208.76 1656.29,1211.34 1656.88,1211.15 1657.47,1212.31 1658.05,1213.42 1658.64,1214.73 1659.23,1214.68 1659.81,1209.47 1660.4,1210.82 1660.99,1210.83 1661.57,1210.75 1662.16,1212 1662.75,1212.22 1663.33,1213.6 1663.92,1212.23 1664.5,1209.76 1665.09,1214.46 1665.68,1212.84 1666.26,1211.79 1666.85,1214.9 1667.44,1214.56 1668.02,1216.54 1668.61,1219.64 1669.2,1216.84 1669.78,1218.83 1670.37,1217.5 1670.96,1218.22 1671.54,1217.94 1672.13,1216.69 1672.71,1217.29 1673.3,1215.81 1673.89,1214.55 1674.47,1213.37 1675.06,1212.06 1675.65,1209.57 1676.23,1208.43 1676.82,1206.26 1677.41,1206.69 1677.99,1207.98 1678.58,1210.74 1679.17,1210.48 1679.75,1208.83 1680.34,1208.72 1680.92,1207.47 1681.51,1208.61 1682.1,1210.31 1682.68,1211.41 1683.27,1209.96 1683.86,1210.11 1684.44,1209.94 1685.03,1207.57 1685.62,1208.94 1686.2,1206.81 1686.79,1205.82 1687.37,1206.18 1687.96,1205.36 1688.55,1203.2 1689.13,1204.8 1689.72,1207.52 1690.31,1206.29 1690.89,1205.37 1691.48,1205.6 1692.07,1205.84 1692.65,1204.96 1693.24,1206.53 1693.83,1205.56 1694.41,1207.29 1695,1209.83 1695.58,1209.81 1696.17,1208.77 1696.76,1210.02 1697.34,1210.35 1697.93,1210.32 1698.52,1209.08 1699.1,1210.64 1699.69,1209.66 1700.28,1212.18 1700.86,1212.19 1701.45,1212.16 1702.04,1212.2 1702.62,1210.81 1703.21,1209.32 1703.79,1210.47 1704.38,1210.63 1704.97,1209.51 1705.55,1208.64 1706.14,1206.41 1706.73,1205.38 1707.31,1204.46 1707.9,1202.45 1708.49,1206.5 1709.07,1206.73 1709.66,1205.71 1710.24,1205.05 1710.83,1204.1 1711.42,1207.01 1712,1207.28 1712.59,1206.39 1713.18,1206.6 1713.76,1206.93 1714.35,1204.87 1714.94,1206.56 1715.52,1206.8 1716.11,1205.71 1716.7,1204.94 1717.28,1205.43 1717.87,1205.9 1718.45,1206.14 1719.04,1204.96 1719.63,1204.1 1720.21,1203.07 1720.8,1203.59 1721.39,1206.34 1721.97,1206.57 1722.56,1206.88 1723.15,1208.02 1723.73,1208.26 1724.32,1210.42 1724.91,1206.96 1725.49,1207.27 1726.08,1206.18 1726.66,1207.96 1727.25,1207.39 1727.84,1203.95 1728.42,1205.44 1729.01,1203.16 1729.6,1200.98 1730.18,1201.7 1730.77,1201.02 1731.36,1206.35 1731.94,1207.87 1732.53,1212.98 1733.11,1212.93 1733.7,1215.12 1734.29,1216.33 1734.87,1214.82 1735.46,1214.54 1736.05,1214.69 1736.63,1211.98 1737.22,1212.03 1737.81,1212.04 1738.39,1214.15 1738.98,1212.75 1739.57,1211.37 1740.15,1207.9 1740.74,1208.22 1741.32,1210.78 1741.91,1210.98 1742.5,1211.11 1743.08,1211.38 1743.67,1210.58 1744.26,1210.74 1744.84,1214.59 1745.43,1215.71 1746.02,1216.68 1746.6,1216.42 1747.19,1217.26 1747.78,1218.14 1748.36,1216.71 1748.95,1216.52 1749.53,1216.26 1750.12,1218.36 1750.71,1214.3 1751.29,1211.45 1751.88,1214.12 1752.47,1216.46 1753.05,1217.37 1753.64,1214.62 1754.23,1213.56 1754.81,1214.47 1755.4,1214.34 1755.99,1211.92 1756.57,1210.59 1757.16,1209.55 1757.74,1207.25 1758.33,1210 1758.92,1211.4 1759.5,1210.01 1760.09,1208.53 1760.68,1208.85 1761.26,1210.32 1761.85,1211.58 1762.44,1209.07 1763.02,1208.86 1763.61,1209.11 1764.19,1210.45 1764.78,1210.62 1765.37,1214.18 1765.95,1212.73 1766.54,1210.91 1767.13,1211 1767.71,1212.16 1768.3,1209.52 1768.89,1208.35 1769.47,1209.64 1770.06,1209.99 1770.65,1212.53 1771.23,1211.12 1771.82,1211.1 1772.4,1207.5 1772.99,1205.41 1773.58,1201.76 1774.16,1202.36 1774.75,1203.84 1775.34,1204.17 1775.92,1203.24 1776.51,1202.54 1777.1,1199.41 1777.68,1200.11 1778.27,1199.68 1778.86,1197.97 1779.44,1198.79 1780.03,1200.7 1780.61,1203.78 1781.2,1204.39 1781.79,1206.02 1782.37,1203.94 1782.96,1204.18 1783.55,1204.62 1784.13,1206.14 1784.72,1207.61 1785.31,1207.83 1785.89,1209.3 1786.48,1208.36 1787.06,1208.33 1787.65,1212.07 1788.24,1213.17 1788.82,1211.75 1789.41,1214.04 1790,1214.3 1790.58,1213.01 1791.17,1213.01 1791.76,1211.81 1792.34,1213.03 1792.93,1214.08 1793.52,1213.97 1794.1,1213.76 1794.69,1212.47 1795.27,1213.72 1795.86,1213.65 1796.45,1213.68 1797.03,1213.39 1797.62,1214.6 1798.21,1214.48 1798.79,1214.48 1799.38,1215.72 1799.97,1214.3 1800.55,1214.16 1801.14,1212.86 1801.73,1211.49 1802.31,1210.24 1802.9,1208.99 1803.48,1209.15 1804.07,1211.49 1804.66,1210.32 1805.24,1210.21 1805.83,1209.87 1806.42,1211.15 1807,1212.08 1807.59,1214.23 1808.18,1215.44 1808.76,1212.92 1809.35,1214.06 1809.94,1212.83 1810.52,1214.09 1811.11,1215.22 1811.69,1214.94 1812.28,1215.89 1812.87,1215.61 1813.45,1215.25 1814.04,1213.81 1814.63,1214.1 1815.21,1212.53 1815.8,1212.47 1816.39,1211.38 1816.97,1213.81 1817.56,1208.94 1818.14,1209.03 1818.73,1210.05 1819.32,1209.86 1819.9,1209.76 1820.49,1211.12 1821.08,1213.54 1821.66,1214.68 1822.25,1214.71 1822.84,1217.16 1823.42,1219.45 1824.01,1216.44 1824.6,1213.8 1825.18,1215.83 1825.77,1215.6 1826.35,1211.66 1826.94,1211.59 1827.53,1213.97 1828.11,1216.43 1828.7,1212.45 1829.29,1212.47 1829.87,1209.86 1830.46,1208.67 1831.05,1207.39 1831.63,1206.34 1832.22,1207.9 1832.81,1207.78 1833.39,1209.28 1833.98,1208.19 1834.56,1208.41 1835.15,1209.93 1835.74,1210 1836.32,1209.01 1836.91,1209.24 1837.5,1209.43 1838.08,1210.62 1838.67,1210.57 1839.26,1211.66 1839.84,1211.39 1840.43,1213.8 1841.01,1213.79 1841.6,1214.69 1842.19,1214.43 1842.77,1214.29 1843.36,1213 1843.95,1213.17 1844.53,1210.64 1845.12,1210.58 1845.71,1212.02 1846.29,1214.29 1846.88,1214 1847.47,1210.09 1848.05,1211.41 1848.64,1212.71 1849.22,1211.35 1849.81,1213.83 1850.4,1213.65 1850.98,1212.19 1851.57,1210.72 1852.16,1209.37 1852.74,1210.59 1853.33,1212.04 1853.92,1210.79 1854.5,1209.43 1855.09,1208.3 1855.68,1207.3 1856.26,1206.08 1856.85,1206.1 1857.43,1209.97 1858.02,1211.45 1858.61,1212.46 1859.19,1212.37 1859.78,1212.17 1860.37,1212.2 1860.95,1213.36 1861.54,1214.35 1862.13,1214.13 1862.71,1212.62 1863.3,1211.35 1863.88,1211.46 1864.47,1211.28 1865.06,1213.52 1865.64,1213.58 1866.23,1213.48 1866.82,1214.59 1867.4,1217.98 1867.99,1217.34 1868.58,1212.44 1869.16,1212.45 1869.75,1213.71 1870.34,1214.62 1870.92,1214.23 1871.51,1215.22 1872.09,1218.68 1872.68,1217.08 1873.27,1216.8 1873.85,1215.34 1874.44,1215 1875.03,1214.95 1875.61,1216.04 1876.2,1215.6 1876.79,1214.06 1877.37,1217.28 1877.96,1216.91 1878.55,1214.06 1879.13,1215.15 1879.72,1214.86 1880.3,1217.12 1880.89,1219.41 1881.48,1220.25 1882.06,1222.1 1882.65,1221.59 1883.24,1222.18 1883.82,1222.83 1884.41,1222.4 1885,1224.08 1885.58,1224.72 1886.17,1220.67 1886.76,1221.32 1887.34,1220.8 1887.93,1221.43 1888.51,1220.48 1889.1,1220.82 1889.69,1220.24 1890.27,1217.34 1890.86,1213.34 1891.45,1210.84 1892.03,1208.29 1892.62,1209.21 1893.21,1209.28 1893.79,1210.37 1894.38,1211.62 1894.96,1211.42 1895.55,1211.46 1896.14,1208.99 1896.72,1210.09 1897.31,1208.66 1897.9,1208.74 1898.48,1210.02 1899.07,1206.47 1899.66,1205.46 1900.24,1204.89 1900.83,1207.38 1901.42,1205.1 1902,1205.3 1902.59,1204.29 1903.17,1203.21 1903.76,1203.58 1904.35,1202.7 1904.93,1201.71 1905.52,1201.03 1906.11,1199.15 1906.69,1199.91 1907.28,1200.57 1907.87,1201.38 1908.45,1200.84 1909.04,1201.16 1909.63,1201.63 1910.21,1203.41 1910.8,1205.14 1911.38,1205.39 1911.97,1203.46 1912.56,1203.91 1913.14,1201.94 1913.73,1204.79 1914.32,1202.63 1914.9,1202.03 1915.49,1203.69 1916.08,1205.52 1916.66,1208.3 1917.25,1206.19 1917.83,1207.54 1918.42,1206.27 1919.01,1207.89 1919.59,1209.32 1920.18,1204.7 1920.77,1203.81 1921.35,1205.37 1921.94,1205.63 1922.53,1205.87 1923.11,1207.28 1923.7,1207.62 1924.29,1207.81 1924.87,1210.41 1925.46,1211.44 1926.04,1207.85 1926.63,1209.12 1927.22,1209.33 1927.8,1210.77 1928.39,1212.2 1928.98,1212.08 1929.56,1213.21 1930.15,1209.78 1930.74,1209.96 1931.32,1208.96 1931.91,1209.21 1932.5,1208.07 1933.08,1203.73 1933.67,1204.24 1934.25,1204.63 1934.84,1204.87 1935.43,1205.2 1936.01,1205.29 1936.6,1205.43 1937.19,1208.24 1937.77,1208.25 1938.36,1208.38 1938.95,1210.94 1939.53,1209.63 1940.12,1211.97 1940.71,1212.95 1941.29,1214.22 1941.88,1214.96 1942.46,1214.86 1943.05,1214.51 1943.64,1213.19 1944.22,1210.6 1944.81,1211.85 1945.4,1213.16 1945.98,1211.76 1946.57,1212.8 1947.16,1211.28 1947.74,1211.24 1948.33,1213.61 1948.91,1210.87 1949.5,1209.56 1950.09,1209.46 1950.67,1209.4 1951.26,1209.23 1951.85,1211.83 1952.43,1210.61 1953.02,1209.79 1953.61,1207.51 1954.19,1209.27 1954.78,1210.83 1955.37,1211.97 1955.95,1211.97 1956.54,1210.76 1957.12,1212.13 1957.71,1213.32 1958.3,1214.38 1958.88,1210.8 1959.47,1212.12 1960.06,1208.35 1960.64,1207.26 1961.23,1207.5 1961.82,1210.2 1962.4,1210.25 1962.99,1212.68 1963.58,1212.55 1964.16,1214.85 1964.75,1213.93 1965.33,1212.4 1965.92,1208.68 1966.51,1209.9 1967.09,1209.98 1967.68,1207.72 1968.27,1207.89 1968.85,1208.21 1969.44,1208.52 1970.03,1210.02 1970.61,1210.11 1971.2,1207.64 1971.78,1210.26 1972.37,1211.25 1972.96,1212.45 1973.54,1214.65 1974.13,1214.26 1974.72,1215.02 1975.3,1216.17 1975.89,1214.74 1976.48,1217.06 1977.06,1216.72 1977.65,1215.23 1978.24,1216.47 1978.82,1213.83 1979.41,1213.83 1979.99,1213.64 1980.58,1211.96 1981.17,1211.94 1981.75,1209.56 1982.34,1208.37 1982.93,1210.98 1983.51,1212.06 1984.1,1213.13 1984.69,1212.91 1985.27,1212.79 1985.86,1212.65 1986.45,1212.42 1987.03,1213.42 1987.62,1212.33 1988.2,1208.49 1988.79,1208.6 1989.38,1210.09 1989.96,1210.22 1990.55,1210.07 1991.14,1210 1991.72,1207.63 1992.31,1209.03 1992.9,1209.06 1993.48,1210.3 1994.07,1209.19 1994.65,1209.31 1995.24,1210.8 1995.83,1208.41 1996.41,1207.29 1997,1208.7 1997.59,1210.01 1998.17,1208.87 1998.76,1209 1999.35,1210.41 1999.93,1211.59 2000.52,1208.15 2001.11,1210.75 2001.69,1208.43 2002.28,1210.97 2002.86,1209.68 2003.45,1209.91 2004.04,1211.33 2004.62,1211.3 2005.21,1215.88 2005.8,1218.13 2006.38,1216.56 2006.97,1213.9 2007.56,1217.27 2008.14,1215.77 2008.73,1216.8 2009.32,1218.99 2009.9,1216.13 2010.49,1214.39 2011.07,1216.67 2011.66,1212.82 2012.25,1212.78 2012.83,1213.88 2013.42,1214.9 2014.01,1213.61 2014.59,1210.99 2015.18,1211.37 2015.77,1212.47 2016.35,1212.52 2016.94,1212.43 2017.53,1209.94 2018.11,1208.91 2018.7,1206.49 2019.28,1202.97 2019.87,1205.81 2020.46,1206.27 2021.04,1206.27 2021.63,1205.22 2022.22,1209.02 2022.8,1209 2023.39,1208.12 2023.98,1208.08 2024.56,1209.31 2025.15,1208.47 2025.73,1208.83 2026.32,1208.85 2026.91,1210.4 2027.49,1210.26 2028.08,1209.25 2028.67,1210.56 2029.25,1210.9 2029.84,1210.87 2030.43,1212.9 2031.01,1212.68 2031.6,1213.87 2032.19,1214.84 2032.77,1212.29 2033.36,1214.54 2033.94,1214.31 2034.53,1214.06 2035.12,1216.47 2035.7,1212.45 2036.29,1211.12 2036.88,1211.03 2037.46,1210.96 2038.05,1209.69 2038.64,1209.8 2039.22,1209.91 2039.81,1211.03 2040.4,1211.41 2040.98,1211.85 2041.57,1214.28 2042.15,1214.17 2042.74,1211.53 2043.33,1214.99 2043.91,1215.99 2044.5,1212.09 2045.09,1211.86 2045.67,1210.5 2046.26,1211.65 2046.85,1210.07 2047.43,1208.98 2048.02,1208.35 2048.6,1207.13 2049.19,1207.19 2049.78,1207.42 2050.36,1211.27 2050.95,1211.17 2051.54,1209.83 2052.12,1208.61 2052.71,1210.96 2053.3,1210.78 2053.88,1210.94 2054.47,1212.15 2055.06,1209.91 2055.64,1210.97 2056.23,1211.16 2056.81,1210.98 2057.4,1211.01 2057.99,1209.58 2058.57,1211.87 2059.16,1209.6 2059.75,1209.85 2060.33,1207.57 2060.92,1210.3 2061.51,1211.56 2062.09,1210.12 2062.68,1208.94 2063.27,1209.12 2063.85,1211.57 2064.44,1211.32 2065.02,1212.63 2065.61,1212.49 2066.2,1207.65 2066.78,1210.03 2067.37,1209.19 2067.96,1210.48 2068.54,1210.75 2069.13,1209.58 2069.72,1212.09 2070.3,1214.3 2070.89,1214.3 2071.48,1214.36 2072.06,1209.45 2072.65,1210.66 2073.23,1210.86 2073.82,1210.85 2074.41,1212.21 2074.99,1214.61 2075.58,1214.46 2076.17,1215.5 2076.75,1215.14 2077.34,1216.04 2077.93,1215.83 2078.51,1215.68 2079.1,1216.7 2079.68,1215.32 2080.27,1215.1 2080.86,1214.88 2081.44,1215.81 2082.03,1214.33 2082.62,1214.05 2083.2,1215.19 2083.79,1214.97 2084.38,1214.74 2084.96,1213.26 2085.55,1214.63 2086.14,1214.52 2086.72,1215.43 2087.31,1214.02 2087.89,1215.05 2088.48,1214.8 2089.07,1215.91 2089.65,1216.63 2090.24,1216.32 2090.83,1214.63 2091.41,1214.34 2092,1214.06 2092.59,1213.88 2093.17,1210.97 2093.76,1211.12 2094.35,1209.66 2094.93,1208.66 2095.52,1209.7 2096.1,1208.55 2096.69,1208.71 2097.28,1209.04 2097.86,1207.88 2098.45,1208.15 2099.04,1208.41 2099.62,1208.62 2100.21,1206.3 2100.8,1208.83 2101.38,1208.86 2101.97,1209.02 2102.55,1210.34 2103.14,1210.11 2103.73,1208.98 2104.31,1205.27 2104.9,1204.42 2105.49,1205.85 2106.07,1205.95 2106.66,1207.27 2107.25,1207.42 2107.83,1208.66 2108.42,1207.73 2109.01,1204.24 2109.59,1203.51 2110.18,1204.28 2110.76,1201.02 2111.35,1202.93 2111.94,1203.27 2112.52,1203.51 2113.11,1202.6 2113.7,1201.82 2114.28,1203.81 2114.87,1204.22 2115.46,1204.45 2116.04,1203.86 2116.63,1205.5 2117.22,1208.31 2117.8,1209.82 2118.39,1210.02 2118.97,1212.23 2119.56,1211.2 2120.15,1209.72 2120.73,1209.95 2121.32,1209.79 2121.91,1209.97 2122.49,1212.28 2123.08,1211.28 2123.67,1210.11 2124.25,1209.96 2124.84,1208.88 2125.42,1210.13 2126.01,1210.26 2126.6,1210.28 2127.18,1209.19 2127.77,1210.75 2128.36,1210.75 2128.94,1213.08 2129.53,1211.85 2130.12,1210.67 2130.7,1209.47 2131.29,1209.49 2131.88,1208.27 2132.46,1209.46 2133.05,1209.79 2133.63,1209.89 2134.22,1209.92 2134.81,1211.18 2135.39,1212.32 2135.98,1209.84 2136.57,1209.8 2137.15,1211 2137.74,1210.97 2138.33,1212.29 2138.91,1211.95 2139.5,1211.77 2140.09,1213.92 2140.67,1213.78 2141.26,1215.76 2141.84,1215.37 2142.43,1216.32 2143.02,1216.07 2143.6,1218.32 2144.19,1217.86 2144.78,1216.2 2145.36,1217.12 2145.95,1216.79 2146.54,1216.66 2147.12,1214.98 2147.71,1213.68 2148.3,1216 2148.88,1216.67 2149.47,1216.22 2150.05,1215.84 2150.64,1214.52 2151.23,1215.57 2151.81,1214.02 2152.4,1215.12 2152.99,1212.69 2153.57,1211.46 2154.16,1205.42 2154.75,1204.57 2155.33,1206.27 2155.92,1205.44 2156.5,1204.57 2157.09,1202.35 2157.68,1201.73 2158.26,1202.04 \"/>\n<path clip-path=\"url(#clip712)\" d=\"M986.025 1211.38 L986.612 1211.38 L987.198 1211.38 L987.785 1211.38 L988.371 1211.38 L988.957 1211.38 L989.544 1211.38 L990.13 1211.38 L990.717 1211.38 L991.303 1211.38 L991.889 1211.38 L992.476 1211.38 L993.062 1211.38 L993.649 1211.38 L994.235 1211.38 L994.822 1211.38 L995.408 1211.38 L995.994 1211.38 L996.581 1211.38 L997.167 1211.38 L997.754 1211.38 L998.34 1211.38 L998.926 1211.38 L999.513 1211.38 L1000.1 1211.38 L1000.69 1211.38 L1001.27 1211.38 L1001.86 1211.38 L1002.44 1211.38 L1003.03 1211.38 L1003.62 1211.38 L1004.2 1211.38 L1004.79 1211.38 L1005.38 1211.38 L1005.96 1211.38 L1006.55 1211.38 L1007.14 1211.38 L1007.72 1211.38 L1008.31 1211.38 L1008.9 1211.38 L1009.48 1211.38 L1010.07 1211.38 L1010.65 1211.38 L1011.24 1211.38 L1011.83 1211.38 L1012.41 1211.38 L1013 1211.38 L1013.59 1211.38 L1014.17 1211.38 L1014.76 1211.38 L1015.35 1211.38 L1015.93 1211.38 L1016.52 1211.38 L1017.11 1211.38 L1017.69 1211.38 L1018.28 1211.38 L1018.86 1211.38 L1019.45 1211.38 L1020.04 1211.38 L1020.62 1211.38 L1021.21 1211.38 L1021.8 1211.38 L1022.38 1211.38 L1022.97 1211.38 L1023.56 1211.38 L1024.14 1211.38 L1024.73 1211.38 L1025.32 1211.38 L1025.9 1211.38 L1026.49 1211.38 L1027.07 1211.38 L1027.66 1211.38 L1028.25 1211.38 L1028.83 1211.38 L1029.42 1211.38 L1030.01 1211.38 L1030.59 1211.38 L1031.18 1211.38 L1031.77 1211.38 L1032.35 1211.38 L1032.94 1211.38 L1033.52 1211.38 L1034.11 1211.38 L1034.7 1211.38 L1035.28 1211.38 L1035.87 1211.38 L1036.46 1211.38 L1037.04 1211.38 L1037.63 1211.38 L1038.22 1211.38 L1038.8 1211.38 L1039.39 1211.38 L1039.98 1211.38 L1040.56 1211.38 L1041.15 1211.38 L1041.73 1211.38 L1042.32 1211.38 L1042.91 1211.38 L1043.49 1211.38 L1044.08 1211.38 L1044.67 1211.38 L1045.25 1211.38 L1045.84 1211.38 L1046.43 1211.38 L1047.01 1211.38 L1047.6 1211.38 L1048.19 1211.38 L1048.77 1211.38 L1049.36 1211.38 L1049.94 1211.38 L1050.53 1211.38 L1051.12 1211.38 L1051.7 1211.38 L1052.29 1211.38 L1052.88 1211.38 L1053.46 1211.38 L1054.05 1211.38 L1054.64 1211.38 L1055.22 1211.38 L1055.81 1211.38 L1056.39 1211.38 L1056.98 1211.38 L1057.57 1211.38 L1058.15 1211.38 L1058.74 1211.38 L1059.33 1211.38 L1059.91 1211.38 L1060.5 1211.38 L1061.09 1211.38 L1061.67 1211.38 L1062.26 1211.38 L1062.85 1211.38 L1063.43 1211.38 L1064.02 1211.38 L1064.6 1211.38 L1065.19 1211.38 L1065.78 1211.38 L1066.36 1211.38 L1066.95 1211.38 L1067.54 1211.38 L1068.12 1211.38 L1068.71 1211.38 L1069.3 1211.38 L1069.88 1211.38 L1070.47 1211.38 L1071.06 1211.38 L1071.64 1211.38 L1072.23 1211.38 L1072.81 1211.38 L1073.4 1211.38 L1073.99 1211.38 L1074.57 1211.38 L1075.16 1211.38 L1075.75 1211.38 L1076.33 1211.38 L1076.92 1211.38 L1077.51 1211.38 L1078.09 1211.38 L1078.68 1211.38 L1079.26 1211.38 L1079.85 1211.38 L1080.44 1211.38 L1081.02 1211.38 L1081.61 1211.38 L1082.2 1211.38 L1082.78 1211.38 L1083.37 1211.38 L1083.96 1211.38 L1084.54 1211.38 L1085.13 1211.38 L1085.72 1211.38 L1086.3 1211.38 L1086.89 1211.38 L1087.47 1211.38 L1088.06 1211.38 L1088.65 1211.38 L1089.23 1211.38 L1089.82 1211.38 L1090.41 1211.38 L1090.99 1211.38 L1091.58 1211.38 L1092.17 1211.38 L1092.75 1211.38 L1093.34 1211.38 L1093.93 1211.38 L1094.51 1211.38 L1095.1 1211.38 L1095.68 1211.38 L1096.27 1211.38 L1096.86 1211.38 L1097.44 1211.38 L1098.03 1211.38 L1098.62 1211.38 L1099.2 1211.38 L1099.79 1211.38 L1100.38 1211.38 L1100.96 1211.38 L1101.55 1211.38 L1102.14 1211.38 L1102.72 1211.38 L1103.31 1211.38 L1103.89 1211.38 L1104.48 1211.38 L1105.07 1211.38 L1105.65 1211.38 L1106.24 1211.38 L1106.83 1211.38 L1107.41 1211.38 L1108 1211.38 L1108.59 1211.38 L1109.17 1211.38 L1109.76 1211.38 L1110.34 1211.38 L1110.93 1211.38 L1111.52 1211.38 L1112.1 1211.38 L1112.69 1211.38 L1113.28 1211.38 L1113.86 1211.38 L1114.45 1211.38 L1115.04 1211.38 L1115.62 1211.38 L1116.21 1211.38 L1116.8 1211.38 L1117.38 1211.38 L1117.97 1211.38 L1118.55 1211.38 L1119.14 1211.38 L1119.73 1211.38 L1120.31 1211.38 L1120.9 1211.38 L1121.49 1211.38 L1122.07 1211.38 L1122.66 1211.38 L1123.25 1211.38 L1123.83 1211.38 L1124.42 1211.38 L1125.01 1211.38 L1125.59 1211.38 L1126.18 1211.38 L1126.76 1211.38 L1127.35 1211.38 L1127.94 1211.38 L1128.52 1211.38 L1129.11 1211.38 L1129.7 1211.38 L1130.28 1211.38 L1130.87 1211.38 L1131.46 1211.38 L1132.04 1211.38 L1132.63 1211.38 L1133.21 1211.38 L1133.8 1211.38 L1134.39 1211.38 L1134.97 1211.38 L1135.56 1211.38 L1136.15 1211.38 L1136.73 1211.38 L1137.32 1211.38 L1137.91 1211.38 L1138.49 1211.38 L1139.08 1211.38 L1139.67 1211.38 L1140.25 1211.38 L1140.84 1211.38 L1141.42 1211.38 L1142.01 1211.38 L1142.6 1211.38 L1143.18 1211.38 L1143.77 1211.38 L1144.36 1211.38 L1144.94 1211.38 L1145.53 1211.38 L1146.12 1211.38 L1146.7 1211.38 L1147.29 1211.38 L1147.88 1211.38 L1148.46 1211.38 L1149.05 1211.38 L1149.63 1211.38 L1150.22 1211.38 L1150.81 1211.38 L1151.39 1211.38 L1151.98 1211.38 L1152.57 1211.38 L1153.15 1211.38 L1153.74 1211.38 L1154.33 1211.38 L1154.91 1211.38 L1155.5 1211.38 L1156.09 1211.38 L1156.67 1211.38 L1157.26 1211.38 L1157.84 1211.38 L1158.43 1211.38 L1159.02 1211.38 L1159.6 1211.38 L1160.19 1211.38 L1160.78 1211.38 L1161.36 1211.38 L1161.95 1211.38 L1162.54 1211.38 L1163.12 1211.38 L1163.71 1211.38 L1164.29 1211.38 L1164.88 1211.38 L1165.47 1211.38 L1166.05 1211.38 L1166.64 1211.38 L1167.23 1211.38 L1167.81 1211.38 L1168.4 1211.38 L1168.99 1211.38 L1169.57 1211.38 L1170.16 1211.38 L1170.75 1211.38 L1171.33 1211.38 L1171.92 1211.38 L1172.5 1211.38 L1173.09 1211.38 L1173.68 1211.38 L1174.26 1211.38 L1174.85 1211.38 L1175.44 1211.38 L1176.02 1211.38 L1176.61 1211.38 L1177.2 1211.38 L1177.78 1211.38 L1178.37 1211.38 L1178.96 1211.38 L1179.54 1211.38 L1180.13 1211.38 L1180.71 1211.38 L1181.3 1211.38 L1181.89 1211.38 L1182.47 1211.38 L1183.06 1211.38 L1183.65 1211.38 L1184.23 1211.38 L1184.82 1211.38 L1185.41 1211.38 L1185.99 1211.38 L1186.58 1211.38 L1187.16 1211.38 L1187.75 1211.38 L1188.34 1211.38 L1188.92 1211.38 L1189.51 1211.38 L1190.1 1211.38 L1190.68 1211.38 L1191.27 1211.38 L1191.86 1211.38 L1192.44 1211.38 L1193.03 1211.38 L1193.62 1211.38 L1194.2 1211.38 L1194.79 1211.38 L1195.37 1211.38 L1195.96 1211.38 L1196.55 1211.38 L1197.13 1211.38 L1197.72 1211.38 L1198.31 1211.38 L1198.89 1211.38 L1199.48 1211.38 L1200.07 1211.38 L1200.65 1211.38 L1201.24 1211.38 L1201.83 1211.38 L1202.41 1211.38 L1203 1211.38 L1203.58 1211.38 L1204.17 1211.38 L1204.76 1211.38 L1205.34 1211.38 L1205.93 1211.38 L1206.52 1211.38 L1207.1 1211.38 L1207.69 1211.38 L1208.28 1211.38 L1208.86 1211.38 L1209.45 1211.38 L1210.03 1211.38 L1210.62 1211.38 L1211.21 1211.38 L1211.79 1211.38 L1212.38 1211.38 L1212.97 1211.38 L1213.55 1211.38 L1214.14 1211.38 L1214.73 1211.38 L1215.31 1211.38 L1215.9 1211.38 L1216.49 1211.38 L1217.07 1211.38 L1217.66 1211.38 L1218.24 1211.38 L1218.83 1211.38 L1219.42 1211.38 L1220 1211.38 L1220.59 1211.38 L1221.18 1211.38 L1221.76 1211.38 L1222.35 1211.38 L1222.94 1211.38 L1223.52 1211.38 L1224.11 1211.38 L1224.7 1211.38 L1225.28 1211.38 L1225.87 1211.38 L1226.45 1211.38 L1227.04 1211.38 L1227.63 1211.38 L1228.21 1211.38 L1228.8 1211.38 L1229.39 1211.38 L1229.97 1211.38 L1230.56 1211.38 L1231.15 1211.38 L1231.73 1211.38 L1232.32 1211.38 L1232.91 1211.38 L1233.49 1211.38 L1234.08 1211.38 L1234.66 1211.38 L1235.25 1211.38 L1235.84 1211.38 L1236.42 1211.38 L1237.01 1211.38 L1237.6 1211.38 L1238.18 1211.38 L1238.77 1211.38 L1239.36 1211.38 L1239.94 1211.38 L1240.53 1211.38 L1241.11 1211.38 L1241.7 1211.38 L1242.29 1211.38 L1242.87 1211.38 L1243.46 1211.38 L1244.05 1211.38 L1244.63 1211.38 L1245.22 1211.38 L1245.81 1211.38 L1246.39 1211.38 L1246.98 1211.38 L1247.57 1211.38 L1248.15 1211.38 L1248.74 1211.38 L1249.32 1211.38 L1249.91 1211.38 L1250.5 1211.38 L1251.08 1211.38 L1251.67 1211.38 L1252.26 1211.38 L1252.84 1211.38 L1253.43 1211.38 L1254.02 1211.38 L1254.6 1211.38 L1255.19 1211.38 L1255.78 1211.38 L1256.36 1211.38 L1256.95 1211.38 L1257.53 1211.38 L1258.12 1211.38 L1258.71 1211.38 L1259.29 1211.38 L1259.88 1211.38 L1260.47 1211.38 L1261.05 1211.38 L1261.64 1211.38 L1262.23 1211.38 L1262.81 1211.38 L1263.4 1211.38 L1263.98 1211.38 L1264.57 1211.38 L1265.16 1211.38 L1265.74 1211.38 L1266.33 1211.38 L1266.92 1211.38 L1267.5 1211.38 L1268.09 1211.38 L1268.68 1211.38 L1269.26 1211.38 L1269.85 1211.38 L1270.44 1211.38 L1271.02 1211.38 L1271.61 1211.38 L1272.19 1211.38 L1272.78 1211.38 L1273.37 1211.38 L1273.95 1211.38 L1274.54 1211.38 L1275.13 1211.38 L1275.71 1211.38 L1276.3 1211.38 L1276.89 1211.38 L1277.47 1211.38 L1278.06 1211.38 L1278.65 1211.38 L1279.23 1211.38 L1279.82 1211.38 L1280.4 1211.38 L1280.99 1211.38 L1281.58 1211.38 L1282.16 1211.38 L1282.75 1211.38 L1283.34 1211.38 L1283.92 1211.38 L1284.51 1211.38 L1285.1 1211.38 L1285.68 1211.38 L1286.27 1211.38 L1286.86 1211.38 L1287.44 1211.38 L1288.03 1211.38 L1288.61 1211.38 L1289.2 1211.38 L1289.79 1211.38 L1290.37 1211.38 L1290.96 1211.38 L1291.55 1211.38 L1292.13 1211.38 L1292.72 1211.38 L1293.31 1211.38 L1293.89 1211.38 L1294.48 1211.38 L1295.06 1211.38 L1295.65 1211.38 L1296.24 1211.38 L1296.82 1211.38 L1297.41 1211.38 L1298 1211.38 L1298.58 1211.38 L1299.17 1211.38 L1299.76 1211.38 L1300.34 1211.38 L1300.93 1211.38 L1301.52 1211.38 L1302.1 1211.38 L1302.69 1211.38 L1303.27 1211.38 L1303.86 1211.38 L1304.45 1211.38 L1305.03 1211.38 L1305.62 1211.38 L1306.21 1211.38 L1306.79 1211.38 L1307.38 1211.38 L1307.97 1211.38 L1308.55 1211.38 L1309.14 1211.38 L1309.73 1211.38 L1310.31 1211.38 L1310.9 1211.38 L1311.48 1211.38 L1312.07 1211.38 L1312.66 1211.38 L1313.24 1211.38 L1313.83 1211.38 L1314.42 1211.38 L1315 1211.38 L1315.59 1211.38 L1316.18 1211.38 L1316.76 1211.38 L1317.35 1211.38 L1317.93 1211.38 L1318.52 1211.38 L1319.11 1211.38 L1319.69 1211.38 L1320.28 1211.38 L1320.87 1211.38 L1321.45 1211.38 L1322.04 1211.38 L1322.63 1211.38 L1323.21 1211.38 L1323.8 1211.38 L1324.39 1211.38 L1324.97 1211.38 L1325.56 1211.38 L1326.14 1211.38 L1326.73 1211.38 L1327.32 1211.38 L1327.9 1211.38 L1328.49 1211.38 L1329.08 1211.38 L1329.66 1211.38 L1330.25 1211.38 L1330.84 1211.38 L1331.42 1211.38 L1332.01 1211.38 L1332.6 1211.38 L1333.18 1211.38 L1333.77 1211.38 L1334.35 1211.38 L1334.94 1211.38 L1335.53 1211.38 L1336.11 1211.38 L1336.7 1211.38 L1337.29 1211.38 L1337.87 1211.38 L1338.46 1211.38 L1339.05 1211.38 L1339.63 1211.38 L1340.22 1211.38 L1340.8 1211.38 L1341.39 1211.38 L1341.98 1211.38 L1342.56 1211.38 L1343.15 1211.38 L1343.74 1211.38 L1344.32 1211.38 L1344.91 1211.38 L1345.5 1211.38 L1346.08 1211.38 L1346.67 1211.38 L1347.26 1211.38 L1347.84 1211.38 L1348.43 1211.38 L1349.01 1211.38 L1349.6 1211.38 L1350.19 1211.38 L1350.77 1211.38 L1351.36 1211.38 L1351.95 1211.38 L1352.53 1211.38 L1353.12 1211.38 L1353.71 1211.38 L1354.29 1211.38 L1354.88 1211.38 L1355.47 1211.38 L1356.05 1211.38 L1356.64 1211.38 L1357.22 1211.38 L1357.81 1211.38 L1358.4 1211.38 L1358.98 1211.38 L1359.57 1211.38 L1360.16 1211.38 L1360.74 1211.38 L1361.33 1211.38 L1361.92 1211.38 L1362.5 1211.38 L1363.09 1211.38 L1363.68 1211.38 L1364.26 1211.38 L1364.85 1211.38 L1365.43 1211.38 L1366.02 1211.38 L1366.61 1211.38 L1367.19 1211.38 L1367.78 1211.38 L1368.37 1211.38 L1368.95 1211.38 L1369.54 1211.38 L1370.13 1211.38 L1370.71 1211.38 L1371.3 1211.38 L1371.88 1211.38 L1372.47 1211.38 L1373.06 1211.38 L1373.64 1211.38 L1374.23 1211.38 L1374.82 1211.38 L1375.4 1211.38 L1375.99 1211.38 L1376.58 1211.38 L1377.16 1211.38 L1377.75 1211.38 L1378.34 1211.38 L1378.92 1211.38 L1379.51 1211.38 L1380.09 1211.38 L1380.68 1211.38 L1381.27 1211.38 L1381.85 1211.38 L1382.44 1211.38 L1383.03 1211.38 L1383.61 1211.38 L1384.2 1211.38 L1384.79 1211.38 L1385.37 1211.38 L1385.96 1211.38 L1386.55 1211.38 L1387.13 1211.38 L1387.72 1211.38 L1388.3 1211.38 L1388.89 1211.38 L1389.48 1211.38 L1390.06 1211.38 L1390.65 1211.38 L1391.24 1211.38 L1391.82 1211.38 L1392.41 1211.38 L1393 1211.38 L1393.58 1211.38 L1394.17 1211.38 L1394.75 1211.38 L1395.34 1211.38 L1395.93 1211.38 L1396.51 1211.38 L1397.1 1211.38 L1397.69 1211.38 L1398.27 1211.38 L1398.86 1211.38 L1399.45 1211.38 L1400.03 1211.38 L1400.62 1211.38 L1401.21 1211.38 L1401.79 1211.38 L1402.38 1211.38 L1402.96 1211.38 L1403.55 1211.38 L1404.14 1211.38 L1404.72 1211.38 L1405.31 1211.38 L1405.9 1211.38 L1406.48 1211.38 L1407.07 1211.38 L1407.66 1211.38 L1408.24 1211.38 L1408.83 1211.38 L1409.42 1211.38 L1410 1211.38 L1410.59 1211.38 L1411.17 1211.38 L1411.76 1211.38 L1412.35 1211.38 L1412.93 1211.38 L1413.52 1211.38 L1414.11 1211.38 L1414.69 1211.38 L1415.28 1211.38 L1415.87 1211.38 L1416.45 1211.38 L1417.04 1211.38 L1417.63 1211.38 L1418.21 1211.38 L1418.8 1211.38 L1419.38 1211.38 L1419.97 1211.38 L1420.56 1211.38 L1421.14 1211.38 L1421.73 1211.38 L1422.32 1211.38 L1422.9 1211.38 L1423.49 1211.38 L1424.08 1211.38 L1424.66 1211.38 L1425.25 1211.38 L1425.83 1211.38 L1426.42 1211.38 L1427.01 1211.38 L1427.59 1211.38 L1428.18 1211.38 L1428.77 1211.38 L1429.35 1211.38 L1429.94 1211.38 L1430.53 1211.38 L1431.11 1211.38 L1431.7 1211.38 L1432.29 1211.38 L1432.87 1211.38 L1433.46 1211.38 L1434.04 1211.38 L1434.63 1211.38 L1435.22 1211.38 L1435.8 1211.38 L1436.39 1211.38 L1436.98 1211.38 L1437.56 1211.38 L1438.15 1211.38 L1438.74 1211.38 L1439.32 1211.38 L1439.91 1211.38 L1440.5 1211.38 L1441.08 1211.38 L1441.67 1211.38 L1442.25 1211.38 L1442.84 1211.38 L1443.43 1211.38 L1444.01 1211.38 L1444.6 1211.38 L1445.19 1211.38 L1445.77 1211.38 L1446.36 1211.38 L1446.95 1211.38 L1447.53 1211.38 L1448.12 1211.38 L1448.7 1211.38 L1449.29 1211.38 L1449.88 1211.38 L1450.46 1211.38 L1451.05 1211.38 L1451.64 1211.38 L1452.22 1211.38 L1452.81 1211.38 L1453.4 1211.38 L1453.98 1211.38 L1454.57 1211.38 L1455.16 1211.38 L1455.74 1211.38 L1456.33 1211.38 L1456.91 1211.38 L1457.5 1211.38 L1458.09 1211.38 L1458.67 1211.38 L1459.26 1211.38 L1459.85 1211.38 L1460.43 1211.38 L1461.02 1211.38 L1461.61 1211.38 L1462.19 1211.38 L1462.78 1211.38 L1463.37 1211.38 L1463.95 1211.38 L1464.54 1211.38 L1465.12 1211.38 L1465.71 1211.38 L1466.3 1211.38 L1466.88 1211.38 L1467.47 1211.38 L1468.06 1211.38 L1468.64 1211.38 L1469.23 1211.38 L1469.82 1211.38 L1470.4 1211.38 L1470.99 1211.38 L1471.57 1211.38 L1472.16 1211.38 L1472.75 1211.38 L1473.33 1211.38 L1473.92 1211.38 L1474.51 1211.38 L1475.09 1211.38 L1475.68 1211.38 L1476.27 1211.38 L1476.85 1211.38 L1477.44 1211.38 L1478.03 1211.38 L1478.61 1211.38 L1479.2 1211.38 L1479.78 1211.38 L1480.37 1211.38 L1480.96 1211.38 L1481.54 1211.38 L1482.13 1211.38 L1482.72 1211.38 L1483.3 1211.38 L1483.89 1211.38 L1484.48 1211.38 L1485.06 1211.38 L1485.65 1211.38 L1486.24 1211.38 L1486.82 1211.38 L1487.41 1211.38 L1487.99 1211.38 L1488.58 1211.38 L1489.17 1211.38 L1489.75 1211.38 L1490.34 1211.38 L1490.93 1211.38 L1491.51 1211.38 L1492.1 1211.38 L1492.69 1211.38 L1493.27 1211.38 L1493.86 1211.38 L1494.45 1211.38 L1495.03 1211.38 L1495.62 1211.38 L1496.2 1211.38 L1496.79 1211.38 L1497.38 1211.38 L1497.96 1211.38 L1498.55 1211.38 L1499.14 1211.38 L1499.72 1211.38 L1500.31 1211.38 L1500.9 1211.38 L1501.48 1211.38 L1502.07 1211.38 L1502.65 1211.38 L1503.24 1211.38 L1503.83 1211.38 L1504.41 1211.38 L1505 1211.38 L1505.59 1211.38 L1506.17 1211.38 L1506.76 1211.38 L1507.35 1211.38 L1507.93 1211.38 L1508.52 1211.38 L1509.11 1211.38 L1509.69 1211.38 L1510.28 1211.38 L1510.86 1211.38 L1511.45 1211.38 L1512.04 1211.38 L1512.62 1211.38 L1513.21 1211.38 L1513.8 1211.38 L1514.38 1211.38 L1514.97 1211.38 L1515.56 1211.38 L1516.14 1211.38 L1516.73 1211.38 L1517.32 1211.38 L1517.9 1211.38 L1518.49 1211.38 L1519.07 1211.38 L1519.66 1211.38 L1520.25 1211.38 L1520.83 1211.38 L1521.42 1211.38 L1522.01 1211.38 L1522.59 1211.38 L1523.18 1211.38 L1523.77 1211.38 L1524.35 1211.38 L1524.94 1211.38 L1525.52 1211.38 L1526.11 1211.38 L1526.7 1211.38 L1527.28 1211.38 L1527.87 1211.38 L1528.46 1211.38 L1529.04 1211.38 L1529.63 1211.38 L1530.22 1211.38 L1530.8 1211.38 L1531.39 1211.38 L1531.98 1211.38 L1532.56 1211.38 L1533.15 1211.38 L1533.73 1211.38 L1534.32 1211.38 L1534.91 1211.38 L1535.49 1211.38 L1536.08 1211.38 L1536.67 1211.38 L1537.25 1211.38 L1537.84 1211.38 L1538.43 1211.38 L1539.01 1211.38 L1539.6 1211.38 L1540.19 1211.38 L1540.77 1211.38 L1541.36 1211.38 L1541.94 1211.38 L1542.53 1211.38 L1543.12 1211.38 L1543.7 1211.38 L1544.29 1211.38 L1544.88 1211.38 L1545.46 1211.38 L1546.05 1211.38 L1546.64 1211.38 L1547.22 1211.38 L1547.81 1211.38 L1548.4 1211.38 L1548.98 1211.38 L1549.57 1211.38 L1550.15 1211.38 L1550.74 1211.38 L1551.33 1211.38 L1551.91 1211.38 L1552.5 1211.38 L1553.09 1211.38 L1553.67 1211.38 L1554.26 1211.38 L1554.85 1211.38 L1555.43 1211.38 L1556.02 1211.38 L1556.6 1211.38 L1557.19 1211.38 L1557.78 1211.38 L1558.36 1211.38 L1558.95 1211.38 L1559.54 1211.38 L1560.12 1211.38 L1560.71 1211.38 L1561.3 1211.38 L1561.88 1211.38 L1562.47 1211.38 L1563.06 1211.38 L1563.64 1211.38 L1564.23 1211.38 L1564.81 1211.38 L1565.4 1211.38 L1565.99 1211.38 L1566.57 1211.38 L1567.16 1211.38 L1567.75 1211.38 L1568.33 1211.38 L1568.92 1211.38 L1569.51 1211.38 L1570.09 1211.38 L1570.68 1211.38 L1571.27 1211.38 L1571.85 1211.38 L1572.44 1211.38 L1573.02 1211.38 L1573.61 1211.38 L1574.2 1211.38 L1574.78 1211.38 L1575.37 1211.38 L1575.96 1211.38 L1576.54 1211.38 L1577.13 1211.38 L1577.72 1211.38 L1578.3 1211.38 L1578.89 1211.38 L1579.47 1211.38 L1580.06 1211.38 L1580.65 1211.38 L1581.23 1211.38 L1581.82 1211.38 L1582.41 1211.38 L1582.99 1211.38 L1583.58 1211.38 L1584.17 1211.38 L1584.75 1211.38 L1585.34 1211.38 L1585.93 1211.38 L1586.51 1211.38 L1587.1 1211.38 L1587.68 1211.38 L1588.27 1211.38 L1588.86 1211.38 L1589.44 1211.38 L1590.03 1211.38 L1590.62 1211.38 L1591.2 1211.38 L1591.79 1211.38 L1592.38 1211.38 L1592.96 1211.38 L1593.55 1211.38 L1594.14 1211.38 L1594.72 1211.38 L1595.31 1211.38 L1595.89 1211.38 L1596.48 1211.38 L1597.07 1211.38 L1597.65 1211.38 L1598.24 1211.38 L1598.83 1211.38 L1599.41 1211.38 L1600 1211.38 L1600.59 1211.38 L1601.17 1211.38 L1601.76 1211.38 L1602.34 1211.38 L1602.93 1211.38 L1603.52 1211.38 L1604.1 1211.38 L1604.69 1211.38 L1605.28 1211.38 L1605.86 1211.38 L1606.45 1211.38 L1607.04 1211.38 L1607.62 1211.38 L1608.21 1211.38 L1608.8 1211.38 L1609.38 1211.38 L1609.97 1211.38 L1610.55 1211.38 L1611.14 1211.38 L1611.73 1211.38 L1612.31 1211.38 L1612.9 1211.38 L1613.49 1211.38 L1614.07 1211.38 L1614.66 1211.38 L1615.25 1211.38 L1615.83 1211.38 L1616.42 1211.38 L1617.01 1211.38 L1617.59 1211.38 L1618.18 1211.38 L1618.76 1211.38 L1619.35 1211.38 L1619.94 1211.38 L1620.52 1211.38 L1621.11 1211.38 L1621.7 1211.38 L1622.28 1211.38 L1622.87 1211.38 L1623.46 1211.38 L1624.04 1211.38 L1624.63 1211.38 L1625.22 1211.38 L1625.8 1211.38 L1626.39 1211.38 L1626.97 1211.38 L1627.56 1211.38 L1628.15 1211.38 L1628.73 1211.38 L1629.32 1211.38 L1629.91 1211.38 L1630.49 1211.38 L1631.08 1211.38 L1631.67 1211.38 L1632.25 1211.38 L1632.84 1211.38 L1633.42 1211.38 L1634.01 1211.38 L1634.6 1211.38 L1635.18 1211.38 L1635.77 1211.38 L1636.36 1211.38 L1636.94 1211.38 L1637.53 1211.38 L1638.12 1211.38 L1638.7 1211.38 L1639.29 1211.38 L1639.88 1211.38 L1640.46 1211.38 L1641.05 1211.38 L1641.63 1211.38 L1642.22 1211.38 L1642.81 1211.38 L1643.39 1211.38 L1643.98 1211.38 L1644.57 1211.38 L1645.15 1211.38 L1645.74 1211.38 L1646.33 1211.38 L1646.91 1211.38 L1647.5 1211.38 L1648.09 1211.38 L1648.67 1211.38 L1649.26 1211.38 L1649.84 1211.38 L1650.43 1211.38 L1651.02 1211.38 L1651.6 1211.38 L1652.19 1211.38 L1652.78 1211.38 L1653.36 1211.38 L1653.95 1211.38 L1654.54 1211.38 L1655.12 1211.38 L1655.71 1211.38 L1656.29 1211.38 L1656.88 1211.38 L1657.47 1211.38 L1658.05 1211.38 L1658.64 1211.38 L1659.23 1211.38 L1659.81 1211.38 L1660.4 1211.38 L1660.99 1211.38 L1661.57 1211.38 L1662.16 1211.38 L1662.75 1211.38 L1663.33 1211.38 L1663.92 1211.38 L1664.5 1211.38 L1665.09 1211.38 L1665.68 1211.38 L1666.26 1211.38 L1666.85 1211.38 L1667.44 1211.38 L1668.02 1211.38 L1668.61 1211.38 L1669.2 1211.38 L1669.78 1211.38 L1670.37 1211.38 L1670.96 1211.38 L1671.54 1211.38 L1672.13 1211.38 L1672.71 1211.38 L1673.3 1211.38 L1673.89 1211.38 L1674.47 1211.38 L1675.06 1211.38 L1675.65 1211.38 L1676.23 1211.38 L1676.82 1211.38 L1677.41 1211.38 L1677.99 1211.38 L1678.58 1211.38 L1679.17 1211.38 L1679.75 1211.38 L1680.34 1211.38 L1680.92 1211.38 L1681.51 1211.38 L1682.1 1211.38 L1682.68 1211.38 L1683.27 1211.38 L1683.86 1211.38 L1684.44 1211.38 L1685.03 1211.38 L1685.62 1211.38 L1686.2 1211.38 L1686.79 1211.38 L1687.37 1211.38 L1687.96 1211.38 L1688.55 1211.38 L1689.13 1211.38 L1689.72 1211.38 L1690.31 1211.38 L1690.89 1211.38 L1691.48 1211.38 L1692.07 1211.38 L1692.65 1211.38 L1693.24 1211.38 L1693.83 1211.38 L1694.41 1211.38 L1695 1211.38 L1695.58 1211.38 L1696.17 1211.38 L1696.76 1211.38 L1697.34 1211.38 L1697.93 1211.38 L1698.52 1211.38 L1699.1 1211.38 L1699.69 1211.38 L1700.28 1211.38 L1700.86 1211.38 L1701.45 1211.38 L1702.04 1211.38 L1702.62 1211.38 L1703.21 1211.38 L1703.79 1211.38 L1704.38 1211.38 L1704.97 1211.38 L1705.55 1211.38 L1706.14 1211.38 L1706.73 1211.38 L1707.31 1211.38 L1707.9 1211.38 L1708.49 1211.38 L1709.07 1211.38 L1709.66 1211.38 L1710.24 1211.38 L1710.83 1211.38 L1711.42 1211.38 L1712 1211.38 L1712.59 1211.38 L1713.18 1211.38 L1713.76 1211.38 L1714.35 1211.38 L1714.94 1211.38 L1715.52 1211.38 L1716.11 1211.38 L1716.7 1211.38 L1717.28 1211.38 L1717.87 1211.38 L1718.45 1211.38 L1719.04 1211.38 L1719.63 1211.38 L1720.21 1211.38 L1720.8 1211.38 L1721.39 1211.38 L1721.97 1211.38 L1722.56 1211.38 L1723.15 1211.38 L1723.73 1211.38 L1724.32 1211.38 L1724.91 1211.38 L1725.49 1211.38 L1726.08 1211.38 L1726.66 1211.38 L1727.25 1211.38 L1727.84 1211.38 L1728.42 1211.38 L1729.01 1211.38 L1729.6 1211.38 L1730.18 1211.38 L1730.77 1211.38 L1731.36 1211.38 L1731.94 1211.38 L1732.53 1211.38 L1733.11 1211.38 L1733.7 1211.38 L1734.29 1211.38 L1734.87 1211.38 L1735.46 1211.38 L1736.05 1211.38 L1736.63 1211.38 L1737.22 1211.38 L1737.81 1211.38 L1738.39 1211.38 L1738.98 1211.38 L1739.57 1211.38 L1740.15 1211.38 L1740.74 1211.38 L1741.32 1211.38 L1741.91 1211.38 L1742.5 1211.38 L1743.08 1211.38 L1743.67 1211.38 L1744.26 1211.38 L1744.84 1211.38 L1745.43 1211.38 L1746.02 1211.38 L1746.6 1211.38 L1747.19 1211.38 L1747.78 1211.38 L1748.36 1211.38 L1748.95 1211.38 L1749.53 1211.38 L1750.12 1211.38 L1750.71 1211.38 L1751.29 1211.38 L1751.88 1211.38 L1752.47 1211.38 L1753.05 1211.38 L1753.64 1211.38 L1754.23 1211.38 L1754.81 1211.38 L1755.4 1211.38 L1755.99 1211.38 L1756.57 1211.38 L1757.16 1211.38 L1757.74 1211.38 L1758.33 1211.38 L1758.92 1211.38 L1759.5 1211.38 L1760.09 1211.38 L1760.68 1211.38 L1761.26 1211.38 L1761.85 1211.38 L1762.44 1211.38 L1763.02 1211.38 L1763.61 1211.38 L1764.19 1211.38 L1764.78 1211.38 L1765.37 1211.38 L1765.95 1211.38 L1766.54 1211.38 L1767.13 1211.38 L1767.71 1211.38 L1768.3 1211.38 L1768.89 1211.38 L1769.47 1211.38 L1770.06 1211.38 L1770.65 1211.38 L1771.23 1211.38 L1771.82 1211.38 L1772.4 1211.38 L1772.99 1211.38 L1773.58 1211.38 L1774.16 1211.38 L1774.75 1211.38 L1775.34 1211.38 L1775.92 1211.38 L1776.51 1211.38 L1777.1 1211.38 L1777.68 1211.38 L1778.27 1211.38 L1778.86 1211.38 L1779.44 1211.38 L1780.03 1211.38 L1780.61 1211.38 L1781.2 1211.38 L1781.79 1211.38 L1782.37 1211.38 L1782.96 1211.38 L1783.55 1211.38 L1784.13 1211.38 L1784.72 1211.38 L1785.31 1211.38 L1785.89 1211.38 L1786.48 1211.38 L1787.06 1211.38 L1787.65 1211.38 L1788.24 1211.38 L1788.82 1211.38 L1789.41 1211.38 L1790 1211.38 L1790.58 1211.38 L1791.17 1211.38 L1791.76 1211.38 L1792.34 1211.38 L1792.93 1211.38 L1793.52 1211.38 L1794.1 1211.38 L1794.69 1211.38 L1795.27 1211.38 L1795.86 1211.38 L1796.45 1211.38 L1797.03 1211.38 L1797.62 1211.38 L1798.21 1211.38 L1798.79 1211.38 L1799.38 1211.38 L1799.97 1211.38 L1800.55 1211.38 L1801.14 1211.38 L1801.73 1211.38 L1802.31 1211.38 L1802.9 1211.38 L1803.48 1211.38 L1804.07 1211.38 L1804.66 1211.38 L1805.24 1211.38 L1805.83 1211.38 L1806.42 1211.38 L1807 1211.38 L1807.59 1211.38 L1808.18 1211.38 L1808.76 1211.38 L1809.35 1211.38 L1809.94 1211.38 L1810.52 1211.38 L1811.11 1211.38 L1811.69 1211.38 L1812.28 1211.38 L1812.87 1211.38 L1813.45 1211.38 L1814.04 1211.38 L1814.63 1211.38 L1815.21 1211.38 L1815.8 1211.38 L1816.39 1211.38 L1816.97 1211.38 L1817.56 1211.38 L1818.14 1211.38 L1818.73 1211.38 L1819.32 1211.38 L1819.9 1211.38 L1820.49 1211.38 L1821.08 1211.38 L1821.66 1211.38 L1822.25 1211.38 L1822.84 1211.38 L1823.42 1211.38 L1824.01 1211.38 L1824.6 1211.38 L1825.18 1211.38 L1825.77 1211.38 L1826.35 1211.38 L1826.94 1211.38 L1827.53 1211.38 L1828.11 1211.38 L1828.7 1211.38 L1829.29 1211.38 L1829.87 1211.38 L1830.46 1211.38 L1831.05 1211.38 L1831.63 1211.38 L1832.22 1211.38 L1832.81 1211.38 L1833.39 1211.38 L1833.98 1211.38 L1834.56 1211.38 L1835.15 1211.38 L1835.74 1211.38 L1836.32 1211.38 L1836.91 1211.38 L1837.5 1211.38 L1838.08 1211.38 L1838.67 1211.38 L1839.26 1211.38 L1839.84 1211.38 L1840.43 1211.38 L1841.01 1211.38 L1841.6 1211.38 L1842.19 1211.38 L1842.77 1211.38 L1843.36 1211.38 L1843.95 1211.38 L1844.53 1211.38 L1845.12 1211.38 L1845.71 1211.38 L1846.29 1211.38 L1846.88 1211.38 L1847.47 1211.38 L1848.05 1211.38 L1848.64 1211.38 L1849.22 1211.38 L1849.81 1211.38 L1850.4 1211.38 L1850.98 1211.38 L1851.57 1211.38 L1852.16 1211.38 L1852.74 1211.38 L1853.33 1211.38 L1853.92 1211.38 L1854.5 1211.38 L1855.09 1211.38 L1855.68 1211.38 L1856.26 1211.38 L1856.85 1211.38 L1857.43 1211.38 L1858.02 1211.38 L1858.61 1211.38 L1859.19 1211.38 L1859.78 1211.38 L1860.37 1211.38 L1860.95 1211.38 L1861.54 1211.38 L1862.13 1211.38 L1862.71 1211.38 L1863.3 1211.38 L1863.88 1211.38 L1864.47 1211.38 L1865.06 1211.38 L1865.64 1211.38 L1866.23 1211.38 L1866.82 1211.38 L1867.4 1211.38 L1867.99 1211.38 L1868.58 1211.38 L1869.16 1211.38 L1869.75 1211.38 L1870.34 1211.38 L1870.92 1211.38 L1871.51 1211.38 L1872.09 1211.38 L1872.68 1211.38 L1873.27 1211.38 L1873.85 1211.38 L1874.44 1211.38 L1875.03 1211.38 L1875.61 1211.38 L1876.2 1211.38 L1876.79 1211.38 L1877.37 1211.38 L1877.96 1211.38 L1878.55 1211.38 L1879.13 1211.38 L1879.72 1211.38 L1880.3 1211.38 L1880.89 1211.38 L1881.48 1211.38 L1882.06 1211.38 L1882.65 1211.38 L1883.24 1211.38 L1883.82 1211.38 L1884.41 1211.38 L1885 1211.38 L1885.58 1211.38 L1886.17 1211.38 L1886.76 1211.38 L1887.34 1211.38 L1887.93 1211.38 L1888.51 1211.38 L1889.1 1211.38 L1889.69 1211.38 L1890.27 1211.38 L1890.86 1211.38 L1891.45 1211.38 L1892.03 1211.38 L1892.62 1211.38 L1893.21 1211.38 L1893.79 1211.38 L1894.38 1211.38 L1894.96 1211.38 L1895.55 1211.38 L1896.14 1211.38 L1896.72 1211.38 L1897.31 1211.38 L1897.9 1211.38 L1898.48 1211.38 L1899.07 1211.38 L1899.66 1211.38 L1900.24 1211.38 L1900.83 1211.38 L1901.42 1211.38 L1902 1211.38 L1902.59 1211.38 L1903.17 1211.38 L1903.76 1211.38 L1904.35 1211.38 L1904.93 1211.38 L1905.52 1211.38 L1906.11 1211.38 L1906.69 1211.38 L1907.28 1211.38 L1907.87 1211.38 L1908.45 1211.38 L1909.04 1211.38 L1909.63 1211.38 L1910.21 1211.38 L1910.8 1211.38 L1911.38 1211.38 L1911.97 1211.38 L1912.56 1211.38 L1913.14 1211.38 L1913.73 1211.38 L1914.32 1211.38 L1914.9 1211.38 L1915.49 1211.38 L1916.08 1211.38 L1916.66 1211.38 L1917.25 1211.38 L1917.83 1211.38 L1918.42 1211.38 L1919.01 1211.38 L1919.59 1211.38 L1920.18 1211.38 L1920.77 1211.38 L1921.35 1211.38 L1921.94 1211.38 L1922.53 1211.38 L1923.11 1211.38 L1923.7 1211.38 L1924.29 1211.38 L1924.87 1211.38 L1925.46 1211.38 L1926.04 1211.38 L1926.63 1211.38 L1927.22 1211.38 L1927.8 1211.38 L1928.39 1211.38 L1928.98 1211.38 L1929.56 1211.38 L1930.15 1211.38 L1930.74 1211.38 L1931.32 1211.38 L1931.91 1211.38 L1932.5 1211.38 L1933.08 1211.38 L1933.67 1211.38 L1934.25 1211.38 L1934.84 1211.38 L1935.43 1211.38 L1936.01 1211.38 L1936.6 1211.38 L1937.19 1211.38 L1937.77 1211.38 L1938.36 1211.38 L1938.95 1211.38 L1939.53 1211.38 L1940.12 1211.38 L1940.71 1211.38 L1941.29 1211.38 L1941.88 1211.38 L1942.46 1211.38 L1943.05 1211.38 L1943.64 1211.38 L1944.22 1211.38 L1944.81 1211.38 L1945.4 1211.38 L1945.98 1211.38 L1946.57 1211.38 L1947.16 1211.38 L1947.74 1211.38 L1948.33 1211.38 L1948.91 1211.38 L1949.5 1211.38 L1950.09 1211.38 L1950.67 1211.38 L1951.26 1211.38 L1951.85 1211.38 L1952.43 1211.38 L1953.02 1211.38 L1953.61 1211.38 L1954.19 1211.38 L1954.78 1211.38 L1955.37 1211.38 L1955.95 1211.38 L1956.54 1211.38 L1957.12 1211.38 L1957.71 1211.38 L1958.3 1211.38 L1958.88 1211.38 L1959.47 1211.38 L1960.06 1211.38 L1960.64 1211.38 L1961.23 1211.38 L1961.82 1211.38 L1962.4 1211.38 L1962.99 1211.38 L1963.58 1211.38 L1964.16 1211.38 L1964.75 1211.38 L1965.33 1211.38 L1965.92 1211.38 L1966.51 1211.38 L1967.09 1211.38 L1967.68 1211.38 L1968.27 1211.38 L1968.85 1211.38 L1969.44 1211.38 L1970.03 1211.38 L1970.61 1211.38 L1971.2 1211.38 L1971.78 1211.38 L1972.37 1211.38 L1972.96 1211.38 L1973.54 1211.38 L1974.13 1211.38 L1974.72 1211.38 L1975.3 1211.38 L1975.89 1211.38 L1976.48 1211.38 L1977.06 1211.38 L1977.65 1211.38 L1978.24 1211.38 L1978.82 1211.38 L1979.41 1211.38 L1979.99 1211.38 L1980.58 1211.38 L1981.17 1211.38 L1981.75 1211.38 L1982.34 1211.38 L1982.93 1211.38 L1983.51 1211.38 L1984.1 1211.38 L1984.69 1211.38 L1985.27 1211.38 L1985.86 1211.38 L1986.45 1211.38 L1987.03 1211.38 L1987.62 1211.38 L1988.2 1211.38 L1988.79 1211.38 L1989.38 1211.38 L1989.96 1211.38 L1990.55 1211.38 L1991.14 1211.38 L1991.72 1211.38 L1992.31 1211.38 L1992.9 1211.38 L1993.48 1211.38 L1994.07 1211.38 L1994.65 1211.38 L1995.24 1211.38 L1995.83 1211.38 L1996.41 1211.38 L1997 1211.38 L1997.59 1211.38 L1998.17 1211.38 L1998.76 1211.38 L1999.35 1211.38 L1999.93 1211.38 L2000.52 1211.38 L2001.11 1211.38 L2001.69 1211.38 L2002.28 1211.38 L2002.86 1211.38 L2003.45 1211.38 L2004.04 1211.38 L2004.62 1211.38 L2005.21 1211.38 L2005.8 1211.38 L2006.38 1211.38 L2006.97 1211.38 L2007.56 1211.38 L2008.14 1211.38 L2008.73 1211.38 L2009.32 1211.38 L2009.9 1211.38 L2010.49 1211.38 L2011.07 1211.38 L2011.66 1211.38 L2012.25 1211.38 L2012.83 1211.38 L2013.42 1211.38 L2014.01 1211.38 L2014.59 1211.38 L2015.18 1211.38 L2015.77 1211.38 L2016.35 1211.38 L2016.94 1211.38 L2017.53 1211.38 L2018.11 1211.38 L2018.7 1211.38 L2019.28 1211.38 L2019.87 1211.38 L2020.46 1211.38 L2021.04 1211.38 L2021.63 1211.38 L2022.22 1211.38 L2022.8 1211.38 L2023.39 1211.38 L2023.98 1211.38 L2024.56 1211.38 L2025.15 1211.38 L2025.73 1211.38 L2026.32 1211.38 L2026.91 1211.38 L2027.49 1211.38 L2028.08 1211.38 L2028.67 1211.38 L2029.25 1211.38 L2029.84 1211.38 L2030.43 1211.38 L2031.01 1211.38 L2031.6 1211.38 L2032.19 1211.38 L2032.77 1211.38 L2033.36 1211.38 L2033.94 1211.38 L2034.53 1211.38 L2035.12 1211.38 L2035.7 1211.38 L2036.29 1211.38 L2036.88 1211.38 L2037.46 1211.38 L2038.05 1211.38 L2038.64 1211.38 L2039.22 1211.38 L2039.81 1211.38 L2040.4 1211.38 L2040.98 1211.38 L2041.57 1211.38 L2042.15 1211.38 L2042.74 1211.38 L2043.33 1211.38 L2043.91 1211.38 L2044.5 1211.38 L2045.09 1211.38 L2045.67 1211.38 L2046.26 1211.38 L2046.85 1211.38 L2047.43 1211.38 L2048.02 1211.38 L2048.6 1211.38 L2049.19 1211.38 L2049.78 1211.38 L2050.36 1211.38 L2050.95 1211.38 L2051.54 1211.38 L2052.12 1211.38 L2052.71 1211.38 L2053.3 1211.38 L2053.88 1211.38 L2054.47 1211.38 L2055.06 1211.38 L2055.64 1211.38 L2056.23 1211.38 L2056.81 1211.38 L2057.4 1211.38 L2057.99 1211.38 L2058.57 1211.38 L2059.16 1211.38 L2059.75 1211.38 L2060.33 1211.38 L2060.92 1211.38 L2061.51 1211.38 L2062.09 1211.38 L2062.68 1211.38 L2063.27 1211.38 L2063.85 1211.38 L2064.44 1211.38 L2065.02 1211.38 L2065.61 1211.38 L2066.2 1211.38 L2066.78 1211.38 L2067.37 1211.38 L2067.96 1211.38 L2068.54 1211.38 L2069.13 1211.38 L2069.72 1211.38 L2070.3 1211.38 L2070.89 1211.38 L2071.48 1211.38 L2072.06 1211.38 L2072.65 1211.38 L2073.23 1211.38 L2073.82 1211.38 L2074.41 1211.38 L2074.99 1211.38 L2075.58 1211.38 L2076.17 1211.38 L2076.75 1211.38 L2077.34 1211.38 L2077.93 1211.38 L2078.51 1211.38 L2079.1 1211.38 L2079.68 1211.38 L2080.27 1211.38 L2080.86 1211.38 L2081.44 1211.38 L2082.03 1211.38 L2082.62 1211.38 L2083.2 1211.38 L2083.79 1211.38 L2084.38 1211.38 L2084.96 1211.38 L2085.55 1211.38 L2086.14 1211.38 L2086.72 1211.38 L2087.31 1211.38 L2087.89 1211.38 L2088.48 1211.38 L2089.07 1211.38 L2089.65 1211.38 L2090.24 1211.38 L2090.83 1211.38 L2091.41 1211.38 L2092 1211.38 L2092.59 1211.38 L2093.17 1211.38 L2093.76 1211.38 L2094.35 1211.38 L2094.93 1211.38 L2095.52 1211.38 L2096.1 1211.38 L2096.69 1211.38 L2097.28 1211.38 L2097.86 1211.38 L2098.45 1211.38 L2099.04 1211.38 L2099.62 1211.38 L2100.21 1211.38 L2100.8 1211.38 L2101.38 1211.38 L2101.97 1211.38 L2102.55 1211.38 L2103.14 1211.38 L2103.73 1211.38 L2104.31 1211.38 L2104.9 1211.38 L2105.49 1211.38 L2106.07 1211.38 L2106.66 1211.38 L2107.25 1211.38 L2107.83 1211.38 L2108.42 1211.38 L2109.01 1211.38 L2109.59 1211.38 L2110.18 1211.38 L2110.76 1211.38 L2111.35 1211.38 L2111.94 1211.38 L2112.52 1211.38 L2113.11 1211.38 L2113.7 1211.38 L2114.28 1211.38 L2114.87 1211.38 L2115.46 1211.38 L2116.04 1211.38 L2116.63 1211.38 L2117.22 1211.38 L2117.8 1211.38 L2118.39 1211.38 L2118.97 1211.38 L2119.56 1211.38 L2120.15 1211.38 L2120.73 1211.38 L2121.32 1211.38 L2121.91 1211.38 L2122.49 1211.38 L2123.08 1211.38 L2123.67 1211.38 L2124.25 1211.38 L2124.84 1211.38 L2125.42 1211.38 L2126.01 1211.38 L2126.6 1211.38 L2127.18 1211.38 L2127.77 1211.38 L2128.36 1211.38 L2128.94 1211.38 L2129.53 1211.38 L2130.12 1211.38 L2130.7 1211.38 L2131.29 1211.38 L2131.88 1211.38 L2132.46 1211.38 L2133.05 1211.38 L2133.63 1211.38 L2134.22 1211.38 L2134.81 1211.38 L2135.39 1211.38 L2135.98 1211.38 L2136.57 1211.38 L2137.15 1211.38 L2137.74 1211.38 L2138.33 1211.38 L2138.91 1211.38 L2139.5 1211.38 L2140.09 1211.38 L2140.67 1211.38 L2141.26 1211.38 L2141.84 1211.38 L2142.43 1211.38 L2143.02 1211.38 L2143.6 1211.38 L2144.19 1211.38 L2144.78 1211.38 L2145.36 1211.38 L2145.95 1211.38 L2146.54 1211.38 L2147.12 1211.38 L2147.71 1211.38 L2148.3 1211.38 L2148.88 1211.38 L2149.47 1211.38 L2150.05 1211.38 L2150.64 1211.38 L2151.23 1211.38 L2151.81 1211.38 L2152.4 1211.38 L2152.99 1211.38 L2153.57 1211.38 L2154.16 1211.38 L2154.75 1211.38 L2155.33 1211.38 L2155.92 1211.38 L2156.5 1211.38 L2157.09 1211.38 L2157.68 1211.38 L2158.26 1211.38 L2158.26 1210.71 L2157.68 1210.71 L2157.09 1210.71 L2156.5 1210.71 L2155.92 1210.71 L2155.33 1210.71 L2154.75 1210.71 L2154.16 1210.71 L2153.57 1210.71 L2152.99 1210.71 L2152.4 1210.71 L2151.81 1210.71 L2151.23 1210.71 L2150.64 1210.71 L2150.05 1210.71 L2149.47 1210.71 L2148.88 1210.71 L2148.3 1210.71 L2147.71 1210.71 L2147.12 1210.71 L2146.54 1210.71 L2145.95 1210.71 L2145.36 1210.71 L2144.78 1210.71 L2144.19 1210.71 L2143.6 1210.71 L2143.02 1210.71 L2142.43 1210.71 L2141.84 1210.71 L2141.26 1210.71 L2140.67 1210.71 L2140.09 1210.71 L2139.5 1210.71 L2138.91 1210.71 L2138.33 1210.71 L2137.74 1210.71 L2137.15 1210.71 L2136.57 1210.71 L2135.98 1210.71 L2135.39 1210.71 L2134.81 1210.71 L2134.22 1210.71 L2133.63 1210.71 L2133.05 1210.71 L2132.46 1210.71 L2131.88 1210.71 L2131.29 1210.71 L2130.7 1210.71 L2130.12 1210.71 L2129.53 1210.71 L2128.94 1210.71 L2128.36 1210.71 L2127.77 1210.71 L2127.18 1210.71 L2126.6 1210.71 L2126.01 1210.71 L2125.42 1210.71 L2124.84 1210.71 L2124.25 1210.71 L2123.67 1210.71 L2123.08 1210.71 L2122.49 1210.71 L2121.91 1210.71 L2121.32 1210.71 L2120.73 1210.71 L2120.15 1210.71 L2119.56 1210.71 L2118.97 1210.71 L2118.39 1210.71 L2117.8 1210.71 L2117.22 1210.71 L2116.63 1210.71 L2116.04 1210.71 L2115.46 1210.71 L2114.87 1210.71 L2114.28 1210.71 L2113.7 1210.71 L2113.11 1210.71 L2112.52 1210.71 L2111.94 1210.71 L2111.35 1210.71 L2110.76 1210.71 L2110.18 1210.71 L2109.59 1210.71 L2109.01 1210.71 L2108.42 1210.71 L2107.83 1210.71 L2107.25 1210.71 L2106.66 1210.71 L2106.07 1210.71 L2105.49 1210.71 L2104.9 1210.71 L2104.31 1210.71 L2103.73 1210.71 L2103.14 1210.71 L2102.55 1210.71 L2101.97 1210.71 L2101.38 1210.71 L2100.8 1210.71 L2100.21 1210.71 L2099.62 1210.71 L2099.04 1210.71 L2098.45 1210.71 L2097.86 1210.71 L2097.28 1210.71 L2096.69 1210.71 L2096.1 1210.71 L2095.52 1210.71 L2094.93 1210.71 L2094.35 1210.71 L2093.76 1210.71 L2093.17 1210.71 L2092.59 1210.71 L2092 1210.71 L2091.41 1210.71 L2090.83 1210.71 L2090.24 1210.71 L2089.65 1210.71 L2089.07 1210.71 L2088.48 1210.71 L2087.89 1210.71 L2087.31 1210.71 L2086.72 1210.71 L2086.14 1210.71 L2085.55 1210.71 L2084.96 1210.71 L2084.38 1210.71 L2083.79 1210.71 L2083.2 1210.71 L2082.62 1210.71 L2082.03 1210.71 L2081.44 1210.71 L2080.86 1210.71 L2080.27 1210.71 L2079.68 1210.71 L2079.1 1210.71 L2078.51 1210.71 L2077.93 1210.71 L2077.34 1210.71 L2076.75 1210.71 L2076.17 1210.71 L2075.58 1210.71 L2074.99 1210.71 L2074.41 1210.71 L2073.82 1210.71 L2073.23 1210.71 L2072.65 1210.71 L2072.06 1210.71 L2071.48 1210.71 L2070.89 1210.71 L2070.3 1210.71 L2069.72 1210.71 L2069.13 1210.71 L2068.54 1210.71 L2067.96 1210.71 L2067.37 1210.71 L2066.78 1210.71 L2066.2 1210.71 L2065.61 1210.71 L2065.02 1210.71 L2064.44 1210.71 L2063.85 1210.71 L2063.27 1210.71 L2062.68 1210.71 L2062.09 1210.71 L2061.51 1210.71 L2060.92 1210.71 L2060.33 1210.71 L2059.75 1210.71 L2059.16 1210.71 L2058.57 1210.71 L2057.99 1210.71 L2057.4 1210.71 L2056.81 1210.71 L2056.23 1210.71 L2055.64 1210.71 L2055.06 1210.71 L2054.47 1210.71 L2053.88 1210.71 L2053.3 1210.71 L2052.71 1210.71 L2052.12 1210.71 L2051.54 1210.71 L2050.95 1210.71 L2050.36 1210.71 L2049.78 1210.71 L2049.19 1210.71 L2048.6 1210.71 L2048.02 1210.71 L2047.43 1210.71 L2046.85 1210.71 L2046.26 1210.71 L2045.67 1210.71 L2045.09 1210.71 L2044.5 1210.71 L2043.91 1210.71 L2043.33 1210.71 L2042.74 1210.71 L2042.15 1210.71 L2041.57 1210.71 L2040.98 1210.71 L2040.4 1210.71 L2039.81 1210.71 L2039.22 1210.71 L2038.64 1210.71 L2038.05 1210.71 L2037.46 1210.71 L2036.88 1210.71 L2036.29 1210.71 L2035.7 1210.71 L2035.12 1210.71 L2034.53 1210.71 L2033.94 1210.71 L2033.36 1210.71 L2032.77 1210.71 L2032.19 1210.71 L2031.6 1210.71 L2031.01 1210.71 L2030.43 1210.71 L2029.84 1210.71 L2029.25 1210.71 L2028.67 1210.71 L2028.08 1210.71 L2027.49 1210.71 L2026.91 1210.71 L2026.32 1210.71 L2025.73 1210.71 L2025.15 1210.71 L2024.56 1210.71 L2023.98 1210.71 L2023.39 1210.71 L2022.8 1210.71 L2022.22 1210.71 L2021.63 1210.71 L2021.04 1210.71 L2020.46 1210.71 L2019.87 1210.71 L2019.28 1210.71 L2018.7 1210.71 L2018.11 1210.71 L2017.53 1210.71 L2016.94 1210.71 L2016.35 1210.71 L2015.77 1210.71 L2015.18 1210.71 L2014.59 1210.71 L2014.01 1210.71 L2013.42 1210.71 L2012.83 1210.71 L2012.25 1210.71 L2011.66 1210.71 L2011.07 1210.71 L2010.49 1210.71 L2009.9 1210.71 L2009.32 1210.71 L2008.73 1210.71 L2008.14 1210.71 L2007.56 1210.71 L2006.97 1210.71 L2006.38 1210.71 L2005.8 1210.71 L2005.21 1210.71 L2004.62 1210.71 L2004.04 1210.71 L2003.45 1210.71 L2002.86 1210.71 L2002.28 1210.71 L2001.69 1210.71 L2001.11 1210.71 L2000.52 1210.71 L1999.93 1210.71 L1999.35 1210.71 L1998.76 1210.71 L1998.17 1210.71 L1997.59 1210.71 L1997 1210.71 L1996.41 1210.71 L1995.83 1210.71 L1995.24 1210.71 L1994.65 1210.71 L1994.07 1210.71 L1993.48 1210.71 L1992.9 1210.71 L1992.31 1210.71 L1991.72 1210.71 L1991.14 1210.71 L1990.55 1210.71 L1989.96 1210.71 L1989.38 1210.71 L1988.79 1210.71 L1988.2 1210.71 L1987.62 1210.71 L1987.03 1210.71 L1986.45 1210.71 L1985.86 1210.71 L1985.27 1210.71 L1984.69 1210.71 L1984.1 1210.71 L1983.51 1210.71 L1982.93 1210.71 L1982.34 1210.71 L1981.75 1210.71 L1981.17 1210.71 L1980.58 1210.71 L1979.99 1210.71 L1979.41 1210.71 L1978.82 1210.71 L1978.24 1210.71 L1977.65 1210.71 L1977.06 1210.71 L1976.48 1210.71 L1975.89 1210.71 L1975.3 1210.71 L1974.72 1210.71 L1974.13 1210.71 L1973.54 1210.71 L1972.96 1210.71 L1972.37 1210.71 L1971.78 1210.71 L1971.2 1210.71 L1970.61 1210.71 L1970.03 1210.71 L1969.44 1210.71 L1968.85 1210.71 L1968.27 1210.71 L1967.68 1210.71 L1967.09 1210.71 L1966.51 1210.71 L1965.92 1210.71 L1965.33 1210.71 L1964.75 1210.71 L1964.16 1210.71 L1963.58 1210.71 L1962.99 1210.71 L1962.4 1210.71 L1961.82 1210.71 L1961.23 1210.71 L1960.64 1210.71 L1960.06 1210.71 L1959.47 1210.71 L1958.88 1210.71 L1958.3 1210.71 L1957.71 1210.71 L1957.12 1210.71 L1956.54 1210.71 L1955.95 1210.71 L1955.37 1210.71 L1954.78 1210.71 L1954.19 1210.71 L1953.61 1210.71 L1953.02 1210.71 L1952.43 1210.71 L1951.85 1210.71 L1951.26 1210.71 L1950.67 1210.71 L1950.09 1210.71 L1949.5 1210.71 L1948.91 1210.71 L1948.33 1210.71 L1947.74 1210.71 L1947.16 1210.71 L1946.57 1210.71 L1945.98 1210.71 L1945.4 1210.71 L1944.81 1210.71 L1944.22 1210.71 L1943.64 1210.71 L1943.05 1210.71 L1942.46 1210.71 L1941.88 1210.71 L1941.29 1210.71 L1940.71 1210.71 L1940.12 1210.71 L1939.53 1210.71 L1938.95 1210.71 L1938.36 1210.71 L1937.77 1210.71 L1937.19 1210.71 L1936.6 1210.71 L1936.01 1210.71 L1935.43 1210.71 L1934.84 1210.71 L1934.25 1210.71 L1933.67 1210.71 L1933.08 1210.71 L1932.5 1210.71 L1931.91 1210.71 L1931.32 1210.71 L1930.74 1210.71 L1930.15 1210.71 L1929.56 1210.71 L1928.98 1210.71 L1928.39 1210.71 L1927.8 1210.71 L1927.22 1210.71 L1926.63 1210.71 L1926.04 1210.71 L1925.46 1210.71 L1924.87 1210.71 L1924.29 1210.71 L1923.7 1210.71 L1923.11 1210.71 L1922.53 1210.71 L1921.94 1210.71 L1921.35 1210.71 L1920.77 1210.71 L1920.18 1210.71 L1919.59 1210.71 L1919.01 1210.71 L1918.42 1210.71 L1917.83 1210.71 L1917.25 1210.71 L1916.66 1210.71 L1916.08 1210.71 L1915.49 1210.71 L1914.9 1210.71 L1914.32 1210.71 L1913.73 1210.71 L1913.14 1210.71 L1912.56 1210.71 L1911.97 1210.71 L1911.38 1210.71 L1910.8 1210.71 L1910.21 1210.71 L1909.63 1210.71 L1909.04 1210.71 L1908.45 1210.71 L1907.87 1210.71 L1907.28 1210.71 L1906.69 1210.71 L1906.11 1210.71 L1905.52 1210.71 L1904.93 1210.71 L1904.35 1210.71 L1903.76 1210.71 L1903.17 1210.71 L1902.59 1210.71 L1902 1210.71 L1901.42 1210.71 L1900.83 1210.71 L1900.24 1210.71 L1899.66 1210.71 L1899.07 1210.71 L1898.48 1210.71 L1897.9 1210.71 L1897.31 1210.71 L1896.72 1210.71 L1896.14 1210.71 L1895.55 1210.71 L1894.96 1210.71 L1894.38 1210.71 L1893.79 1210.71 L1893.21 1210.71 L1892.62 1210.71 L1892.03 1210.71 L1891.45 1210.71 L1890.86 1210.71 L1890.27 1210.71 L1889.69 1210.71 L1889.1 1210.71 L1888.51 1210.71 L1887.93 1210.71 L1887.34 1210.71 L1886.76 1210.71 L1886.17 1210.71 L1885.58 1210.71 L1885 1210.71 L1884.41 1210.71 L1883.82 1210.71 L1883.24 1210.71 L1882.65 1210.71 L1882.06 1210.71 L1881.48 1210.71 L1880.89 1210.71 L1880.3 1210.71 L1879.72 1210.71 L1879.13 1210.71 L1878.55 1210.71 L1877.96 1210.71 L1877.37 1210.71 L1876.79 1210.71 L1876.2 1210.71 L1875.61 1210.71 L1875.03 1210.71 L1874.44 1210.71 L1873.85 1210.71 L1873.27 1210.71 L1872.68 1210.71 L1872.09 1210.71 L1871.51 1210.71 L1870.92 1210.71 L1870.34 1210.71 L1869.75 1210.71 L1869.16 1210.71 L1868.58 1210.71 L1867.99 1210.71 L1867.4 1210.71 L1866.82 1210.71 L1866.23 1210.71 L1865.64 1210.71 L1865.06 1210.71 L1864.47 1210.71 L1863.88 1210.71 L1863.3 1210.71 L1862.71 1210.71 L1862.13 1210.71 L1861.54 1210.71 L1860.95 1210.71 L1860.37 1210.71 L1859.78 1210.71 L1859.19 1210.71 L1858.61 1210.71 L1858.02 1210.71 L1857.43 1210.71 L1856.85 1210.71 L1856.26 1210.71 L1855.68 1210.71 L1855.09 1210.71 L1854.5 1210.71 L1853.92 1210.71 L1853.33 1210.71 L1852.74 1210.71 L1852.16 1210.71 L1851.57 1210.71 L1850.98 1210.71 L1850.4 1210.71 L1849.81 1210.71 L1849.22 1210.71 L1848.64 1210.71 L1848.05 1210.71 L1847.47 1210.71 L1846.88 1210.71 L1846.29 1210.71 L1845.71 1210.71 L1845.12 1210.71 L1844.53 1210.71 L1843.95 1210.71 L1843.36 1210.71 L1842.77 1210.71 L1842.19 1210.71 L1841.6 1210.71 L1841.01 1210.71 L1840.43 1210.71 L1839.84 1210.71 L1839.26 1210.71 L1838.67 1210.71 L1838.08 1210.71 L1837.5 1210.71 L1836.91 1210.71 L1836.32 1210.71 L1835.74 1210.71 L1835.15 1210.71 L1834.56 1210.71 L1833.98 1210.71 L1833.39 1210.71 L1832.81 1210.71 L1832.22 1210.71 L1831.63 1210.71 L1831.05 1210.71 L1830.46 1210.71 L1829.87 1210.71 L1829.29 1210.71 L1828.7 1210.71 L1828.11 1210.71 L1827.53 1210.71 L1826.94 1210.71 L1826.35 1210.71 L1825.77 1210.71 L1825.18 1210.71 L1824.6 1210.71 L1824.01 1210.71 L1823.42 1210.71 L1822.84 1210.71 L1822.25 1210.71 L1821.66 1210.71 L1821.08 1210.71 L1820.49 1210.71 L1819.9 1210.71 L1819.32 1210.71 L1818.73 1210.71 L1818.14 1210.71 L1817.56 1210.71 L1816.97 1210.71 L1816.39 1210.71 L1815.8 1210.71 L1815.21 1210.71 L1814.63 1210.71 L1814.04 1210.71 L1813.45 1210.71 L1812.87 1210.71 L1812.28 1210.71 L1811.69 1210.71 L1811.11 1210.71 L1810.52 1210.71 L1809.94 1210.71 L1809.35 1210.71 L1808.76 1210.71 L1808.18 1210.71 L1807.59 1210.71 L1807 1210.71 L1806.42 1210.71 L1805.83 1210.71 L1805.24 1210.71 L1804.66 1210.71 L1804.07 1210.71 L1803.48 1210.71 L1802.9 1210.71 L1802.31 1210.71 L1801.73 1210.71 L1801.14 1210.71 L1800.55 1210.71 L1799.97 1210.71 L1799.38 1210.71 L1798.79 1210.71 L1798.21 1210.71 L1797.62 1210.71 L1797.03 1210.71 L1796.45 1210.71 L1795.86 1210.71 L1795.27 1210.71 L1794.69 1210.71 L1794.1 1210.71 L1793.52 1210.71 L1792.93 1210.71 L1792.34 1210.71 L1791.76 1210.71 L1791.17 1210.71 L1790.58 1210.71 L1790 1210.71 L1789.41 1210.71 L1788.82 1210.71 L1788.24 1210.71 L1787.65 1210.71 L1787.06 1210.71 L1786.48 1210.71 L1785.89 1210.71 L1785.31 1210.71 L1784.72 1210.71 L1784.13 1210.71 L1783.55 1210.71 L1782.96 1210.71 L1782.37 1210.71 L1781.79 1210.71 L1781.2 1210.71 L1780.61 1210.71 L1780.03 1210.71 L1779.44 1210.71 L1778.86 1210.71 L1778.27 1210.71 L1777.68 1210.71 L1777.1 1210.71 L1776.51 1210.71 L1775.92 1210.71 L1775.34 1210.71 L1774.75 1210.71 L1774.16 1210.71 L1773.58 1210.71 L1772.99 1210.71 L1772.4 1210.71 L1771.82 1210.71 L1771.23 1210.71 L1770.65 1210.71 L1770.06 1210.71 L1769.47 1210.71 L1768.89 1210.71 L1768.3 1210.71 L1767.71 1210.71 L1767.13 1210.71 L1766.54 1210.71 L1765.95 1210.71 L1765.37 1210.71 L1764.78 1210.71 L1764.19 1210.71 L1763.61 1210.71 L1763.02 1210.71 L1762.44 1210.71 L1761.85 1210.71 L1761.26 1210.71 L1760.68 1210.71 L1760.09 1210.71 L1759.5 1210.71 L1758.92 1210.71 L1758.33 1210.71 L1757.74 1210.71 L1757.16 1210.71 L1756.57 1210.71 L1755.99 1210.71 L1755.4 1210.71 L1754.81 1210.71 L1754.23 1210.71 L1753.64 1210.71 L1753.05 1210.71 L1752.47 1210.71 L1751.88 1210.71 L1751.29 1210.71 L1750.71 1210.71 L1750.12 1210.71 L1749.53 1210.71 L1748.95 1210.71 L1748.36 1210.71 L1747.78 1210.71 L1747.19 1210.71 L1746.6 1210.71 L1746.02 1210.71 L1745.43 1210.71 L1744.84 1210.71 L1744.26 1210.71 L1743.67 1210.71 L1743.08 1210.71 L1742.5 1210.71 L1741.91 1210.71 L1741.32 1210.71 L1740.74 1210.71 L1740.15 1210.71 L1739.57 1210.71 L1738.98 1210.71 L1738.39 1210.71 L1737.81 1210.71 L1737.22 1210.71 L1736.63 1210.71 L1736.05 1210.71 L1735.46 1210.71 L1734.87 1210.71 L1734.29 1210.71 L1733.7 1210.71 L1733.11 1210.71 L1732.53 1210.71 L1731.94 1210.71 L1731.36 1210.71 L1730.77 1210.71 L1730.18 1210.71 L1729.6 1210.71 L1729.01 1210.71 L1728.42 1210.71 L1727.84 1210.71 L1727.25 1210.71 L1726.66 1210.71 L1726.08 1210.71 L1725.49 1210.71 L1724.91 1210.71 L1724.32 1210.71 L1723.73 1210.71 L1723.15 1210.71 L1722.56 1210.71 L1721.97 1210.71 L1721.39 1210.71 L1720.8 1210.71 L1720.21 1210.71 L1719.63 1210.71 L1719.04 1210.71 L1718.45 1210.71 L1717.87 1210.71 L1717.28 1210.71 L1716.7 1210.71 L1716.11 1210.71 L1715.52 1210.71 L1714.94 1210.71 L1714.35 1210.71 L1713.76 1210.71 L1713.18 1210.71 L1712.59 1210.71 L1712 1210.71 L1711.42 1210.71 L1710.83 1210.71 L1710.24 1210.71 L1709.66 1210.71 L1709.07 1210.71 L1708.49 1210.71 L1707.9 1210.71 L1707.31 1210.71 L1706.73 1210.71 L1706.14 1210.71 L1705.55 1210.71 L1704.97 1210.71 L1704.38 1210.71 L1703.79 1210.71 L1703.21 1210.71 L1702.62 1210.71 L1702.04 1210.71 L1701.45 1210.71 L1700.86 1210.71 L1700.28 1210.71 L1699.69 1210.71 L1699.1 1210.71 L1698.52 1210.71 L1697.93 1210.71 L1697.34 1210.71 L1696.76 1210.71 L1696.17 1210.71 L1695.58 1210.71 L1695 1210.71 L1694.41 1210.71 L1693.83 1210.71 L1693.24 1210.71 L1692.65 1210.71 L1692.07 1210.71 L1691.48 1210.71 L1690.89 1210.71 L1690.31 1210.71 L1689.72 1210.71 L1689.13 1210.71 L1688.55 1210.71 L1687.96 1210.71 L1687.37 1210.71 L1686.79 1210.71 L1686.2 1210.71 L1685.62 1210.71 L1685.03 1210.71 L1684.44 1210.71 L1683.86 1210.71 L1683.27 1210.71 L1682.68 1210.71 L1682.1 1210.71 L1681.51 1210.71 L1680.92 1210.71 L1680.34 1210.71 L1679.75 1210.71 L1679.17 1210.71 L1678.58 1210.71 L1677.99 1210.71 L1677.41 1210.71 L1676.82 1210.71 L1676.23 1210.71 L1675.65 1210.71 L1675.06 1210.71 L1674.47 1210.71 L1673.89 1210.71 L1673.3 1210.71 L1672.71 1210.71 L1672.13 1210.71 L1671.54 1210.71 L1670.96 1210.71 L1670.37 1210.71 L1669.78 1210.71 L1669.2 1210.71 L1668.61 1210.71 L1668.02 1210.71 L1667.44 1210.71 L1666.85 1210.71 L1666.26 1210.71 L1665.68 1210.71 L1665.09 1210.71 L1664.5 1210.71 L1663.92 1210.71 L1663.33 1210.71 L1662.75 1210.71 L1662.16 1210.71 L1661.57 1210.71 L1660.99 1210.71 L1660.4 1210.71 L1659.81 1210.71 L1659.23 1210.71 L1658.64 1210.71 L1658.05 1210.71 L1657.47 1210.71 L1656.88 1210.71 L1656.29 1210.71 L1655.71 1210.71 L1655.12 1210.71 L1654.54 1210.71 L1653.95 1210.71 L1653.36 1210.71 L1652.78 1210.71 L1652.19 1210.71 L1651.6 1210.71 L1651.02 1210.71 L1650.43 1210.71 L1649.84 1210.71 L1649.26 1210.71 L1648.67 1210.71 L1648.09 1210.71 L1647.5 1210.71 L1646.91 1210.71 L1646.33 1210.71 L1645.74 1210.71 L1645.15 1210.71 L1644.57 1210.71 L1643.98 1210.71 L1643.39 1210.71 L1642.81 1210.71 L1642.22 1210.71 L1641.63 1210.71 L1641.05 1210.71 L1640.46 1210.71 L1639.88 1210.71 L1639.29 1210.71 L1638.7 1210.71 L1638.12 1210.71 L1637.53 1210.71 L1636.94 1210.71 L1636.36 1210.71 L1635.77 1210.71 L1635.18 1210.71 L1634.6 1210.71 L1634.01 1210.71 L1633.42 1210.71 L1632.84 1210.71 L1632.25 1210.71 L1631.67 1210.71 L1631.08 1210.71 L1630.49 1210.71 L1629.91 1210.71 L1629.32 1210.71 L1628.73 1210.71 L1628.15 1210.71 L1627.56 1210.71 L1626.97 1210.71 L1626.39 1210.71 L1625.8 1210.71 L1625.22 1210.71 L1624.63 1210.71 L1624.04 1210.71 L1623.46 1210.71 L1622.87 1210.71 L1622.28 1210.71 L1621.7 1210.71 L1621.11 1210.71 L1620.52 1210.71 L1619.94 1210.71 L1619.35 1210.71 L1618.76 1210.71 L1618.18 1210.71 L1617.59 1210.71 L1617.01 1210.71 L1616.42 1210.71 L1615.83 1210.71 L1615.25 1210.71 L1614.66 1210.71 L1614.07 1210.71 L1613.49 1210.71 L1612.9 1210.71 L1612.31 1210.71 L1611.73 1210.71 L1611.14 1210.71 L1610.55 1210.71 L1609.97 1210.71 L1609.38 1210.71 L1608.8 1210.71 L1608.21 1210.71 L1607.62 1210.71 L1607.04 1210.71 L1606.45 1210.71 L1605.86 1210.71 L1605.28 1210.71 L1604.69 1210.71 L1604.1 1210.71 L1603.52 1210.71 L1602.93 1210.71 L1602.34 1210.71 L1601.76 1210.71 L1601.17 1210.71 L1600.59 1210.71 L1600 1210.71 L1599.41 1210.71 L1598.83 1210.71 L1598.24 1210.71 L1597.65 1210.71 L1597.07 1210.71 L1596.48 1210.71 L1595.89 1210.71 L1595.31 1210.71 L1594.72 1210.71 L1594.14 1210.71 L1593.55 1210.71 L1592.96 1210.71 L1592.38 1210.71 L1591.79 1210.71 L1591.2 1210.71 L1590.62 1210.71 L1590.03 1210.71 L1589.44 1210.71 L1588.86 1210.71 L1588.27 1210.71 L1587.68 1210.71 L1587.1 1210.71 L1586.51 1210.71 L1585.93 1210.71 L1585.34 1210.71 L1584.75 1210.71 L1584.17 1210.71 L1583.58 1210.71 L1582.99 1210.71 L1582.41 1210.71 L1581.82 1210.71 L1581.23 1210.71 L1580.65 1210.71 L1580.06 1210.71 L1579.47 1210.71 L1578.89 1210.71 L1578.3 1210.71 L1577.72 1210.71 L1577.13 1210.71 L1576.54 1210.71 L1575.96 1210.71 L1575.37 1210.71 L1574.78 1210.71 L1574.2 1210.71 L1573.61 1210.71 L1573.02 1210.71 L1572.44 1210.71 L1571.85 1210.71 L1571.27 1210.71 L1570.68 1210.71 L1570.09 1210.71 L1569.51 1210.71 L1568.92 1210.71 L1568.33 1210.71 L1567.75 1210.71 L1567.16 1210.71 L1566.57 1210.71 L1565.99 1210.71 L1565.4 1210.71 L1564.81 1210.71 L1564.23 1210.71 L1563.64 1210.71 L1563.06 1210.71 L1562.47 1210.71 L1561.88 1210.71 L1561.3 1210.71 L1560.71 1210.71 L1560.12 1210.71 L1559.54 1210.71 L1558.95 1210.71 L1558.36 1210.71 L1557.78 1210.71 L1557.19 1210.71 L1556.6 1210.71 L1556.02 1210.71 L1555.43 1210.71 L1554.85 1210.71 L1554.26 1210.71 L1553.67 1210.71 L1553.09 1210.71 L1552.5 1210.71 L1551.91 1210.71 L1551.33 1210.71 L1550.74 1210.71 L1550.15 1210.71 L1549.57 1210.71 L1548.98 1210.71 L1548.4 1210.71 L1547.81 1210.71 L1547.22 1210.71 L1546.64 1210.71 L1546.05 1210.71 L1545.46 1210.71 L1544.88 1210.71 L1544.29 1210.71 L1543.7 1210.71 L1543.12 1210.71 L1542.53 1210.71 L1541.94 1210.71 L1541.36 1210.71 L1540.77 1210.71 L1540.19 1210.71 L1539.6 1210.71 L1539.01 1210.71 L1538.43 1210.71 L1537.84 1210.71 L1537.25 1210.71 L1536.67 1210.71 L1536.08 1210.71 L1535.49 1210.71 L1534.91 1210.71 L1534.32 1210.71 L1533.73 1210.71 L1533.15 1210.71 L1532.56 1210.71 L1531.98 1210.71 L1531.39 1210.71 L1530.8 1210.71 L1530.22 1210.71 L1529.63 1210.71 L1529.04 1210.71 L1528.46 1210.71 L1527.87 1210.71 L1527.28 1210.71 L1526.7 1210.71 L1526.11 1210.71 L1525.52 1210.71 L1524.94 1210.71 L1524.35 1210.71 L1523.77 1210.71 L1523.18 1210.71 L1522.59 1210.71 L1522.01 1210.71 L1521.42 1210.71 L1520.83 1210.71 L1520.25 1210.71 L1519.66 1210.71 L1519.07 1210.71 L1518.49 1210.71 L1517.9 1210.71 L1517.32 1210.71 L1516.73 1210.71 L1516.14 1210.71 L1515.56 1210.71 L1514.97 1210.71 L1514.38 1210.71 L1513.8 1210.71 L1513.21 1210.71 L1512.62 1210.71 L1512.04 1210.71 L1511.45 1210.71 L1510.86 1210.71 L1510.28 1210.71 L1509.69 1210.71 L1509.11 1210.71 L1508.52 1210.71 L1507.93 1210.71 L1507.35 1210.71 L1506.76 1210.71 L1506.17 1210.71 L1505.59 1210.71 L1505 1210.71 L1504.41 1210.71 L1503.83 1210.71 L1503.24 1210.71 L1502.65 1210.71 L1502.07 1210.71 L1501.48 1210.71 L1500.9 1210.71 L1500.31 1210.71 L1499.72 1210.71 L1499.14 1210.71 L1498.55 1210.71 L1497.96 1210.71 L1497.38 1210.71 L1496.79 1210.71 L1496.2 1210.71 L1495.62 1210.71 L1495.03 1210.71 L1494.45 1210.71 L1493.86 1210.71 L1493.27 1210.71 L1492.69 1210.71 L1492.1 1210.71 L1491.51 1210.71 L1490.93 1210.71 L1490.34 1210.71 L1489.75 1210.71 L1489.17 1210.71 L1488.58 1210.71 L1487.99 1210.71 L1487.41 1210.71 L1486.82 1210.71 L1486.24 1210.71 L1485.65 1210.71 L1485.06 1210.71 L1484.48 1210.71 L1483.89 1210.71 L1483.3 1210.71 L1482.72 1210.71 L1482.13 1210.71 L1481.54 1210.71 L1480.96 1210.71 L1480.37 1210.71 L1479.78 1210.71 L1479.2 1210.71 L1478.61 1210.71 L1478.03 1210.71 L1477.44 1210.71 L1476.85 1210.71 L1476.27 1210.71 L1475.68 1210.71 L1475.09 1210.71 L1474.51 1210.71 L1473.92 1210.71 L1473.33 1210.71 L1472.75 1210.71 L1472.16 1210.71 L1471.57 1210.71 L1470.99 1210.71 L1470.4 1210.71 L1469.82 1210.71 L1469.23 1210.71 L1468.64 1210.71 L1468.06 1210.71 L1467.47 1210.71 L1466.88 1210.71 L1466.3 1210.71 L1465.71 1210.71 L1465.12 1210.71 L1464.54 1210.71 L1463.95 1210.71 L1463.37 1210.71 L1462.78 1210.71 L1462.19 1210.71 L1461.61 1210.71 L1461.02 1210.71 L1460.43 1210.71 L1459.85 1210.71 L1459.26 1210.71 L1458.67 1210.71 L1458.09 1210.71 L1457.5 1210.71 L1456.91 1210.71 L1456.33 1210.71 L1455.74 1210.71 L1455.16 1210.71 L1454.57 1210.71 L1453.98 1210.71 L1453.4 1210.71 L1452.81 1210.71 L1452.22 1210.71 L1451.64 1210.71 L1451.05 1210.71 L1450.46 1210.71 L1449.88 1210.71 L1449.29 1210.71 L1448.7 1210.71 L1448.12 1210.71 L1447.53 1210.71 L1446.95 1210.71 L1446.36 1210.71 L1445.77 1210.71 L1445.19 1210.71 L1444.6 1210.71 L1444.01 1210.71 L1443.43 1210.71 L1442.84 1210.71 L1442.25 1210.71 L1441.67 1210.71 L1441.08 1210.71 L1440.5 1210.71 L1439.91 1210.71 L1439.32 1210.71 L1438.74 1210.71 L1438.15 1210.71 L1437.56 1210.71 L1436.98 1210.71 L1436.39 1210.71 L1435.8 1210.71 L1435.22 1210.71 L1434.63 1210.71 L1434.04 1210.71 L1433.46 1210.71 L1432.87 1210.71 L1432.29 1210.71 L1431.7 1210.71 L1431.11 1210.71 L1430.53 1210.71 L1429.94 1210.71 L1429.35 1210.71 L1428.77 1210.71 L1428.18 1210.71 L1427.59 1210.71 L1427.01 1210.71 L1426.42 1210.71 L1425.83 1210.71 L1425.25 1210.71 L1424.66 1210.71 L1424.08 1210.71 L1423.49 1210.71 L1422.9 1210.71 L1422.32 1210.71 L1421.73 1210.71 L1421.14 1210.71 L1420.56 1210.71 L1419.97 1210.71 L1419.38 1210.71 L1418.8 1210.71 L1418.21 1210.71 L1417.63 1210.71 L1417.04 1210.71 L1416.45 1210.71 L1415.87 1210.71 L1415.28 1210.71 L1414.69 1210.71 L1414.11 1210.71 L1413.52 1210.71 L1412.93 1210.71 L1412.35 1210.71 L1411.76 1210.71 L1411.17 1210.71 L1410.59 1210.71 L1410 1210.71 L1409.42 1210.71 L1408.83 1210.71 L1408.24 1210.71 L1407.66 1210.71 L1407.07 1210.71 L1406.48 1210.71 L1405.9 1210.71 L1405.31 1210.71 L1404.72 1210.71 L1404.14 1210.71 L1403.55 1210.71 L1402.96 1210.71 L1402.38 1210.71 L1401.79 1210.71 L1401.21 1210.71 L1400.62 1210.71 L1400.03 1210.71 L1399.45 1210.71 L1398.86 1210.71 L1398.27 1210.71 L1397.69 1210.71 L1397.1 1210.71 L1396.51 1210.71 L1395.93 1210.71 L1395.34 1210.71 L1394.75 1210.71 L1394.17 1210.71 L1393.58 1210.71 L1393 1210.71 L1392.41 1210.71 L1391.82 1210.71 L1391.24 1210.71 L1390.65 1210.71 L1390.06 1210.71 L1389.48 1210.71 L1388.89 1210.71 L1388.3 1210.71 L1387.72 1210.71 L1387.13 1210.71 L1386.55 1210.71 L1385.96 1210.71 L1385.37 1210.71 L1384.79 1210.71 L1384.2 1210.71 L1383.61 1210.71 L1383.03 1210.71 L1382.44 1210.71 L1381.85 1210.71 L1381.27 1210.71 L1380.68 1210.71 L1380.09 1210.71 L1379.51 1210.71 L1378.92 1210.71 L1378.34 1210.71 L1377.75 1210.71 L1377.16 1210.71 L1376.58 1210.71 L1375.99 1210.71 L1375.4 1210.71 L1374.82 1210.71 L1374.23 1210.71 L1373.64 1210.71 L1373.06 1210.71 L1372.47 1210.71 L1371.88 1210.71 L1371.3 1210.71 L1370.71 1210.71 L1370.13 1210.71 L1369.54 1210.71 L1368.95 1210.71 L1368.37 1210.71 L1367.78 1210.71 L1367.19 1210.71 L1366.61 1210.71 L1366.02 1210.71 L1365.43 1210.71 L1364.85 1210.71 L1364.26 1210.71 L1363.68 1210.71 L1363.09 1210.71 L1362.5 1210.71 L1361.92 1210.71 L1361.33 1210.71 L1360.74 1210.71 L1360.16 1210.71 L1359.57 1210.71 L1358.98 1210.71 L1358.4 1210.71 L1357.81 1210.71 L1357.22 1210.71 L1356.64 1210.71 L1356.05 1210.71 L1355.47 1210.71 L1354.88 1210.71 L1354.29 1210.71 L1353.71 1210.71 L1353.12 1210.71 L1352.53 1210.71 L1351.95 1210.71 L1351.36 1210.71 L1350.77 1210.71 L1350.19 1210.71 L1349.6 1210.71 L1349.01 1210.71 L1348.43 1210.71 L1347.84 1210.71 L1347.26 1210.71 L1346.67 1210.71 L1346.08 1210.71 L1345.5 1210.71 L1344.91 1210.71 L1344.32 1210.71 L1343.74 1210.71 L1343.15 1210.71 L1342.56 1210.71 L1341.98 1210.71 L1341.39 1210.71 L1340.8 1210.71 L1340.22 1210.71 L1339.63 1210.71 L1339.05 1210.71 L1338.46 1210.71 L1337.87 1210.71 L1337.29 1210.71 L1336.7 1210.71 L1336.11 1210.71 L1335.53 1210.71 L1334.94 1210.71 L1334.35 1210.71 L1333.77 1210.71 L1333.18 1210.71 L1332.6 1210.71 L1332.01 1210.71 L1331.42 1210.71 L1330.84 1210.71 L1330.25 1210.71 L1329.66 1210.71 L1329.08 1210.71 L1328.49 1210.71 L1327.9 1210.71 L1327.32 1210.71 L1326.73 1210.71 L1326.14 1210.71 L1325.56 1210.71 L1324.97 1210.71 L1324.39 1210.71 L1323.8 1210.71 L1323.21 1210.71 L1322.63 1210.71 L1322.04 1210.71 L1321.45 1210.71 L1320.87 1210.71 L1320.28 1210.71 L1319.69 1210.71 L1319.11 1210.71 L1318.52 1210.71 L1317.93 1210.71 L1317.35 1210.71 L1316.76 1210.71 L1316.18 1210.71 L1315.59 1210.71 L1315 1210.71 L1314.42 1210.71 L1313.83 1210.71 L1313.24 1210.71 L1312.66 1210.71 L1312.07 1210.71 L1311.48 1210.71 L1310.9 1210.71 L1310.31 1210.71 L1309.73 1210.71 L1309.14 1210.71 L1308.55 1210.71 L1307.97 1210.71 L1307.38 1210.71 L1306.79 1210.71 L1306.21 1210.71 L1305.62 1210.71 L1305.03 1210.71 L1304.45 1210.71 L1303.86 1210.71 L1303.27 1210.71 L1302.69 1210.71 L1302.1 1210.71 L1301.52 1210.71 L1300.93 1210.71 L1300.34 1210.71 L1299.76 1210.71 L1299.17 1210.71 L1298.58 1210.71 L1298 1210.71 L1297.41 1210.71 L1296.82 1210.71 L1296.24 1210.71 L1295.65 1210.71 L1295.06 1210.71 L1294.48 1210.71 L1293.89 1210.71 L1293.31 1210.71 L1292.72 1210.71 L1292.13 1210.71 L1291.55 1210.71 L1290.96 1210.71 L1290.37 1210.71 L1289.79 1210.71 L1289.2 1210.71 L1288.61 1210.71 L1288.03 1210.71 L1287.44 1210.71 L1286.86 1210.71 L1286.27 1210.71 L1285.68 1210.71 L1285.1 1210.71 L1284.51 1210.71 L1283.92 1210.71 L1283.34 1210.71 L1282.75 1210.71 L1282.16 1210.71 L1281.58 1210.71 L1280.99 1210.71 L1280.4 1210.71 L1279.82 1210.71 L1279.23 1210.71 L1278.65 1210.71 L1278.06 1210.71 L1277.47 1210.71 L1276.89 1210.71 L1276.3 1210.71 L1275.71 1210.71 L1275.13 1210.71 L1274.54 1210.71 L1273.95 1210.71 L1273.37 1210.71 L1272.78 1210.71 L1272.19 1210.71 L1271.61 1210.71 L1271.02 1210.71 L1270.44 1210.71 L1269.85 1210.71 L1269.26 1210.71 L1268.68 1210.71 L1268.09 1210.71 L1267.5 1210.71 L1266.92 1210.71 L1266.33 1210.71 L1265.74 1210.71 L1265.16 1210.71 L1264.57 1210.71 L1263.98 1210.71 L1263.4 1210.71 L1262.81 1210.71 L1262.23 1210.71 L1261.64 1210.71 L1261.05 1210.71 L1260.47 1210.71 L1259.88 1210.71 L1259.29 1210.71 L1258.71 1210.71 L1258.12 1210.71 L1257.53 1210.71 L1256.95 1210.71 L1256.36 1210.71 L1255.78 1210.71 L1255.19 1210.71 L1254.6 1210.71 L1254.02 1210.71 L1253.43 1210.71 L1252.84 1210.71 L1252.26 1210.71 L1251.67 1210.71 L1251.08 1210.71 L1250.5 1210.71 L1249.91 1210.71 L1249.32 1210.71 L1248.74 1210.71 L1248.15 1210.71 L1247.57 1210.71 L1246.98 1210.71 L1246.39 1210.71 L1245.81 1210.71 L1245.22 1210.71 L1244.63 1210.71 L1244.05 1210.71 L1243.46 1210.71 L1242.87 1210.71 L1242.29 1210.71 L1241.7 1210.71 L1241.11 1210.71 L1240.53 1210.71 L1239.94 1210.71 L1239.36 1210.71 L1238.77 1210.71 L1238.18 1210.71 L1237.6 1210.71 L1237.01 1210.71 L1236.42 1210.71 L1235.84 1210.71 L1235.25 1210.71 L1234.66 1210.71 L1234.08 1210.71 L1233.49 1210.71 L1232.91 1210.71 L1232.32 1210.71 L1231.73 1210.71 L1231.15 1210.71 L1230.56 1210.71 L1229.97 1210.71 L1229.39 1210.71 L1228.8 1210.71 L1228.21 1210.71 L1227.63 1210.71 L1227.04 1210.71 L1226.45 1210.71 L1225.87 1210.71 L1225.28 1210.71 L1224.7 1210.71 L1224.11 1210.71 L1223.52 1210.71 L1222.94 1210.71 L1222.35 1210.71 L1221.76 1210.71 L1221.18 1210.71 L1220.59 1210.71 L1220 1210.71 L1219.42 1210.71 L1218.83 1210.71 L1218.24 1210.71 L1217.66 1210.71 L1217.07 1210.71 L1216.49 1210.71 L1215.9 1210.71 L1215.31 1210.71 L1214.73 1210.71 L1214.14 1210.71 L1213.55 1210.71 L1212.97 1210.71 L1212.38 1210.71 L1211.79 1210.71 L1211.21 1210.71 L1210.62 1210.71 L1210.03 1210.71 L1209.45 1210.71 L1208.86 1210.71 L1208.28 1210.71 L1207.69 1210.71 L1207.1 1210.71 L1206.52 1210.71 L1205.93 1210.71 L1205.34 1210.71 L1204.76 1210.71 L1204.17 1210.71 L1203.58 1210.71 L1203 1210.71 L1202.41 1210.71 L1201.83 1210.71 L1201.24 1210.71 L1200.65 1210.71 L1200.07 1210.71 L1199.48 1210.71 L1198.89 1210.71 L1198.31 1210.71 L1197.72 1210.71 L1197.13 1210.71 L1196.55 1210.71 L1195.96 1210.71 L1195.37 1210.71 L1194.79 1210.71 L1194.2 1210.71 L1193.62 1210.71 L1193.03 1210.71 L1192.44 1210.71 L1191.86 1210.71 L1191.27 1210.71 L1190.68 1210.71 L1190.1 1210.71 L1189.51 1210.71 L1188.92 1210.71 L1188.34 1210.71 L1187.75 1210.71 L1187.16 1210.71 L1186.58 1210.71 L1185.99 1210.71 L1185.41 1210.71 L1184.82 1210.71 L1184.23 1210.71 L1183.65 1210.71 L1183.06 1210.71 L1182.47 1210.71 L1181.89 1210.71 L1181.3 1210.71 L1180.71 1210.71 L1180.13 1210.71 L1179.54 1210.71 L1178.96 1210.71 L1178.37 1210.71 L1177.78 1210.71 L1177.2 1210.71 L1176.61 1210.71 L1176.02 1210.71 L1175.44 1210.71 L1174.85 1210.71 L1174.26 1210.71 L1173.68 1210.71 L1173.09 1210.71 L1172.5 1210.71 L1171.92 1210.71 L1171.33 1210.71 L1170.75 1210.71 L1170.16 1210.71 L1169.57 1210.71 L1168.99 1210.71 L1168.4 1210.71 L1167.81 1210.71 L1167.23 1210.71 L1166.64 1210.71 L1166.05 1210.71 L1165.47 1210.71 L1164.88 1210.71 L1164.29 1210.71 L1163.71 1210.71 L1163.12 1210.71 L1162.54 1210.71 L1161.95 1210.71 L1161.36 1210.71 L1160.78 1210.71 L1160.19 1210.71 L1159.6 1210.71 L1159.02 1210.71 L1158.43 1210.71 L1157.84 1210.71 L1157.26 1210.71 L1156.67 1210.71 L1156.09 1210.71 L1155.5 1210.71 L1154.91 1210.71 L1154.33 1210.71 L1153.74 1210.71 L1153.15 1210.71 L1152.57 1210.71 L1151.98 1210.71 L1151.39 1210.71 L1150.81 1210.71 L1150.22 1210.71 L1149.63 1210.71 L1149.05 1210.71 L1148.46 1210.71 L1147.88 1210.71 L1147.29 1210.71 L1146.7 1210.71 L1146.12 1210.71 L1145.53 1210.71 L1144.94 1210.71 L1144.36 1210.71 L1143.77 1210.71 L1143.18 1210.71 L1142.6 1210.71 L1142.01 1210.71 L1141.42 1210.71 L1140.84 1210.71 L1140.25 1210.71 L1139.67 1210.71 L1139.08 1210.71 L1138.49 1210.71 L1137.91 1210.71 L1137.32 1210.71 L1136.73 1210.71 L1136.15 1210.71 L1135.56 1210.71 L1134.97 1210.71 L1134.39 1210.71 L1133.8 1210.71 L1133.21 1210.71 L1132.63 1210.71 L1132.04 1210.71 L1131.46 1210.71 L1130.87 1210.71 L1130.28 1210.71 L1129.7 1210.71 L1129.11 1210.71 L1128.52 1210.71 L1127.94 1210.71 L1127.35 1210.71 L1126.76 1210.71 L1126.18 1210.71 L1125.59 1210.71 L1125.01 1210.71 L1124.42 1210.71 L1123.83 1210.71 L1123.25 1210.71 L1122.66 1210.71 L1122.07 1210.71 L1121.49 1210.71 L1120.9 1210.71 L1120.31 1210.71 L1119.73 1210.71 L1119.14 1210.71 L1118.55 1210.71 L1117.97 1210.71 L1117.38 1210.71 L1116.8 1210.71 L1116.21 1210.71 L1115.62 1210.71 L1115.04 1210.71 L1114.45 1210.71 L1113.86 1210.71 L1113.28 1210.71 L1112.69 1210.71 L1112.1 1210.71 L1111.52 1210.71 L1110.93 1210.71 L1110.34 1210.71 L1109.76 1210.71 L1109.17 1210.71 L1108.59 1210.71 L1108 1210.71 L1107.41 1210.71 L1106.83 1210.71 L1106.24 1210.71 L1105.65 1210.71 L1105.07 1210.71 L1104.48 1210.71 L1103.89 1210.71 L1103.31 1210.71 L1102.72 1210.71 L1102.14 1210.71 L1101.55 1210.71 L1100.96 1210.71 L1100.38 1210.71 L1099.79 1210.71 L1099.2 1210.71 L1098.62 1210.71 L1098.03 1210.71 L1097.44 1210.71 L1096.86 1210.71 L1096.27 1210.71 L1095.68 1210.71 L1095.1 1210.71 L1094.51 1210.71 L1093.93 1210.71 L1093.34 1210.71 L1092.75 1210.71 L1092.17 1210.71 L1091.58 1210.71 L1090.99 1210.71 L1090.41 1210.71 L1089.82 1210.71 L1089.23 1210.71 L1088.65 1210.71 L1088.06 1210.71 L1087.47 1210.71 L1086.89 1210.71 L1086.3 1210.71 L1085.72 1210.71 L1085.13 1210.71 L1084.54 1210.71 L1083.96 1210.71 L1083.37 1210.71 L1082.78 1210.71 L1082.2 1210.71 L1081.61 1210.71 L1081.02 1210.71 L1080.44 1210.71 L1079.85 1210.71 L1079.26 1210.71 L1078.68 1210.71 L1078.09 1210.71 L1077.51 1210.71 L1076.92 1210.71 L1076.33 1210.71 L1075.75 1210.71 L1075.16 1210.71 L1074.57 1210.71 L1073.99 1210.71 L1073.4 1210.71 L1072.81 1210.71 L1072.23 1210.71 L1071.64 1210.71 L1071.06 1210.71 L1070.47 1210.71 L1069.88 1210.71 L1069.3 1210.71 L1068.71 1210.71 L1068.12 1210.71 L1067.54 1210.71 L1066.95 1210.71 L1066.36 1210.71 L1065.78 1210.71 L1065.19 1210.71 L1064.6 1210.71 L1064.02 1210.71 L1063.43 1210.71 L1062.85 1210.71 L1062.26 1210.71 L1061.67 1210.71 L1061.09 1210.71 L1060.5 1210.71 L1059.91 1210.71 L1059.33 1210.71 L1058.74 1210.71 L1058.15 1210.71 L1057.57 1210.71 L1056.98 1210.71 L1056.39 1210.71 L1055.81 1210.71 L1055.22 1210.71 L1054.64 1210.71 L1054.05 1210.71 L1053.46 1210.71 L1052.88 1210.71 L1052.29 1210.71 L1051.7 1210.71 L1051.12 1210.71 L1050.53 1210.71 L1049.94 1210.71 L1049.36 1210.71 L1048.77 1210.71 L1048.19 1210.71 L1047.6 1210.71 L1047.01 1210.71 L1046.43 1210.71 L1045.84 1210.71 L1045.25 1210.71 L1044.67 1210.71 L1044.08 1210.71 L1043.49 1210.71 L1042.91 1210.71 L1042.32 1210.71 L1041.73 1210.71 L1041.15 1210.71 L1040.56 1210.71 L1039.98 1210.71 L1039.39 1210.71 L1038.8 1210.71 L1038.22 1210.71 L1037.63 1210.71 L1037.04 1210.71 L1036.46 1210.71 L1035.87 1210.71 L1035.28 1210.71 L1034.7 1210.71 L1034.11 1210.71 L1033.52 1210.71 L1032.94 1210.71 L1032.35 1210.71 L1031.77 1210.71 L1031.18 1210.71 L1030.59 1210.71 L1030.01 1210.71 L1029.42 1210.71 L1028.83 1210.71 L1028.25 1210.71 L1027.66 1210.71 L1027.07 1210.71 L1026.49 1210.71 L1025.9 1210.71 L1025.32 1210.71 L1024.73 1210.71 L1024.14 1210.71 L1023.56 1210.71 L1022.97 1210.71 L1022.38 1210.71 L1021.8 1210.71 L1021.21 1210.71 L1020.62 1210.71 L1020.04 1210.71 L1019.45 1210.71 L1018.86 1210.71 L1018.28 1210.71 L1017.69 1210.71 L1017.11 1210.71 L1016.52 1210.71 L1015.93 1210.71 L1015.35 1210.71 L1014.76 1210.71 L1014.17 1210.71 L1013.59 1210.71 L1013 1210.71 L1012.41 1210.71 L1011.83 1210.71 L1011.24 1210.71 L1010.65 1210.71 L1010.07 1210.71 L1009.48 1210.71 L1008.9 1210.71 L1008.31 1210.71 L1007.72 1210.71 L1007.14 1210.71 L1006.55 1210.71 L1005.96 1210.71 L1005.38 1210.71 L1004.79 1210.71 L1004.2 1210.71 L1003.62 1210.71 L1003.03 1210.71 L1002.44 1210.71 L1001.86 1210.71 L1001.27 1210.71 L1000.69 1210.71 L1000.1 1210.71 L999.513 1210.71 L998.926 1210.71 L998.34 1210.71 L997.754 1210.71 L997.167 1210.71 L996.581 1210.71 L995.994 1210.71 L995.408 1210.71 L994.822 1210.71 L994.235 1210.71 L993.649 1210.71 L993.062 1210.71 L992.476 1210.71 L991.889 1210.71 L991.303 1210.71 L990.717 1210.71 L990.13 1210.71 L989.544 1210.71 L988.957 1210.71 L988.371 1210.71 L987.785 1210.71 L987.198 1210.71 L986.612 1210.71 L986.025 1210.71  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip712)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1211.04 986.612,1211.04 987.198,1211.04 987.785,1211.04 988.371,1211.04 988.957,1211.04 989.544,1211.04 990.13,1211.04 990.717,1211.04 991.303,1211.04 991.889,1211.04 992.476,1211.04 993.062,1211.04 993.649,1211.04 994.235,1211.04 994.822,1211.04 995.408,1211.04 995.994,1211.04 996.581,1211.04 997.167,1211.04 997.754,1211.04 998.34,1211.04 998.926,1211.04 999.513,1211.04 1000.1,1211.04 1000.69,1211.04 1001.27,1211.04 1001.86,1211.04 1002.44,1211.04 1003.03,1211.04 1003.62,1211.04 1004.2,1211.04 1004.79,1211.04 1005.38,1211.04 1005.96,1211.04 1006.55,1211.04 1007.14,1211.04 1007.72,1211.04 1008.31,1211.04 1008.9,1211.04 1009.48,1211.04 1010.07,1211.04 1010.65,1211.04 1011.24,1211.04 1011.83,1211.04 1012.41,1211.04 1013,1211.04 1013.59,1211.04 1014.17,1211.04 1014.76,1211.04 1015.35,1211.04 1015.93,1211.04 1016.52,1211.04 1017.11,1211.04 1017.69,1211.04 1018.28,1211.04 1018.86,1211.04 1019.45,1211.04 1020.04,1211.04 1020.62,1211.04 1021.21,1211.04 1021.8,1211.04 1022.38,1211.04 1022.97,1211.04 1023.56,1211.04 1024.14,1211.04 1024.73,1211.04 1025.32,1211.04 1025.9,1211.04 1026.49,1211.04 1027.07,1211.04 1027.66,1211.04 1028.25,1211.04 1028.83,1211.04 1029.42,1211.04 1030.01,1211.04 1030.59,1211.04 1031.18,1211.04 1031.77,1211.04 1032.35,1211.04 1032.94,1211.04 1033.52,1211.04 1034.11,1211.04 1034.7,1211.04 1035.28,1211.04 1035.87,1211.04 1036.46,1211.04 1037.04,1211.04 1037.63,1211.04 1038.22,1211.04 1038.8,1211.04 1039.39,1211.04 1039.98,1211.04 1040.56,1211.04 1041.15,1211.04 1041.73,1211.04 1042.32,1211.04 1042.91,1211.04 1043.49,1211.04 1044.08,1211.04 1044.67,1211.04 1045.25,1211.04 1045.84,1211.04 1046.43,1211.04 1047.01,1211.04 1047.6,1211.04 1048.19,1211.04 1048.77,1211.04 1049.36,1211.04 1049.94,1211.04 1050.53,1211.04 1051.12,1211.04 1051.7,1211.04 1052.29,1211.04 1052.88,1211.04 1053.46,1211.04 1054.05,1211.04 1054.64,1211.04 1055.22,1211.04 1055.81,1211.04 1056.39,1211.04 1056.98,1211.04 1057.57,1211.04 1058.15,1211.04 1058.74,1211.04 1059.33,1211.04 1059.91,1211.04 1060.5,1211.04 1061.09,1211.04 1061.67,1211.04 1062.26,1211.04 1062.85,1211.04 1063.43,1211.04 1064.02,1211.04 1064.6,1211.04 1065.19,1211.04 1065.78,1211.04 1066.36,1211.04 1066.95,1211.04 1067.54,1211.04 1068.12,1211.04 1068.71,1211.04 1069.3,1211.04 1069.88,1211.04 1070.47,1211.04 1071.06,1211.04 1071.64,1211.04 1072.23,1211.04 1072.81,1211.04 1073.4,1211.04 1073.99,1211.04 1074.57,1211.04 1075.16,1211.04 1075.75,1211.04 1076.33,1211.04 1076.92,1211.04 1077.51,1211.04 1078.09,1211.04 1078.68,1211.04 1079.26,1211.04 1079.85,1211.04 1080.44,1211.04 1081.02,1211.04 1081.61,1211.04 1082.2,1211.04 1082.78,1211.04 1083.37,1211.04 1083.96,1211.04 1084.54,1211.04 1085.13,1211.04 1085.72,1211.04 1086.3,1211.04 1086.89,1211.04 1087.47,1211.04 1088.06,1211.04 1088.65,1211.04 1089.23,1211.04 1089.82,1211.04 1090.41,1211.04 1090.99,1211.04 1091.58,1211.04 1092.17,1211.04 1092.75,1211.04 1093.34,1211.04 1093.93,1211.04 1094.51,1211.04 1095.1,1211.04 1095.68,1211.04 1096.27,1211.04 1096.86,1211.04 1097.44,1211.04 1098.03,1211.04 1098.62,1211.04 1099.2,1211.04 1099.79,1211.04 1100.38,1211.04 1100.96,1211.04 1101.55,1211.04 1102.14,1211.04 1102.72,1211.04 1103.31,1211.04 1103.89,1211.04 1104.48,1211.04 1105.07,1211.04 1105.65,1211.04 1106.24,1211.04 1106.83,1211.04 1107.41,1211.04 1108,1211.04 1108.59,1211.04 1109.17,1211.04 1109.76,1211.04 1110.34,1211.04 1110.93,1211.04 1111.52,1211.04 1112.1,1211.04 1112.69,1211.04 1113.28,1211.04 1113.86,1211.04 1114.45,1211.04 1115.04,1211.04 1115.62,1211.04 1116.21,1211.04 1116.8,1211.04 1117.38,1211.04 1117.97,1211.04 1118.55,1211.04 1119.14,1211.04 1119.73,1211.04 1120.31,1211.04 1120.9,1211.04 1121.49,1211.04 1122.07,1211.04 1122.66,1211.04 1123.25,1211.04 1123.83,1211.04 1124.42,1211.04 1125.01,1211.04 1125.59,1211.04 1126.18,1211.04 1126.76,1211.04 1127.35,1211.04 1127.94,1211.04 1128.52,1211.04 1129.11,1211.04 1129.7,1211.04 1130.28,1211.04 1130.87,1211.04 1131.46,1211.04 1132.04,1211.04 1132.63,1211.04 1133.21,1211.04 1133.8,1211.04 1134.39,1211.04 1134.97,1211.04 1135.56,1211.04 1136.15,1211.04 1136.73,1211.04 1137.32,1211.04 1137.91,1211.04 1138.49,1211.04 1139.08,1211.04 1139.67,1211.04 1140.25,1211.04 1140.84,1211.04 1141.42,1211.04 1142.01,1211.04 1142.6,1211.04 1143.18,1211.04 1143.77,1211.04 1144.36,1211.04 1144.94,1211.04 1145.53,1211.04 1146.12,1211.04 1146.7,1211.04 1147.29,1211.04 1147.88,1211.04 1148.46,1211.04 1149.05,1211.04 1149.63,1211.04 1150.22,1211.04 1150.81,1211.04 1151.39,1211.04 1151.98,1211.04 1152.57,1211.04 1153.15,1211.04 1153.74,1211.04 1154.33,1211.04 1154.91,1211.04 1155.5,1211.04 1156.09,1211.04 1156.67,1211.04 1157.26,1211.04 1157.84,1211.04 1158.43,1211.04 1159.02,1211.04 1159.6,1211.04 1160.19,1211.04 1160.78,1211.04 1161.36,1211.04 1161.95,1211.04 1162.54,1211.04 1163.12,1211.04 1163.71,1211.04 1164.29,1211.04 1164.88,1211.04 1165.47,1211.04 1166.05,1211.04 1166.64,1211.04 1167.23,1211.04 1167.81,1211.04 1168.4,1211.04 1168.99,1211.04 1169.57,1211.04 1170.16,1211.04 1170.75,1211.04 1171.33,1211.04 1171.92,1211.04 1172.5,1211.04 1173.09,1211.04 1173.68,1211.04 1174.26,1211.04 1174.85,1211.04 1175.44,1211.04 1176.02,1211.04 1176.61,1211.04 1177.2,1211.04 1177.78,1211.04 1178.37,1211.04 1178.96,1211.04 1179.54,1211.04 1180.13,1211.04 1180.71,1211.04 1181.3,1211.04 1181.89,1211.04 1182.47,1211.04 1183.06,1211.04 1183.65,1211.04 1184.23,1211.04 1184.82,1211.04 1185.41,1211.04 1185.99,1211.04 1186.58,1211.04 1187.16,1211.04 1187.75,1211.04 1188.34,1211.04 1188.92,1211.04 1189.51,1211.04 1190.1,1211.04 1190.68,1211.04 1191.27,1211.04 1191.86,1211.04 1192.44,1211.04 1193.03,1211.04 1193.62,1211.04 1194.2,1211.04 1194.79,1211.04 1195.37,1211.04 1195.96,1211.04 1196.55,1211.04 1197.13,1211.04 1197.72,1211.04 1198.31,1211.04 1198.89,1211.04 1199.48,1211.04 1200.07,1211.04 1200.65,1211.04 1201.24,1211.04 1201.83,1211.04 1202.41,1211.04 1203,1211.04 1203.58,1211.04 1204.17,1211.04 1204.76,1211.04 1205.34,1211.04 1205.93,1211.04 1206.52,1211.04 1207.1,1211.04 1207.69,1211.04 1208.28,1211.04 1208.86,1211.04 1209.45,1211.04 1210.03,1211.04 1210.62,1211.04 1211.21,1211.04 1211.79,1211.04 1212.38,1211.04 1212.97,1211.04 1213.55,1211.04 1214.14,1211.04 1214.73,1211.04 1215.31,1211.04 1215.9,1211.04 1216.49,1211.04 1217.07,1211.04 1217.66,1211.04 1218.24,1211.04 1218.83,1211.04 1219.42,1211.04 1220,1211.04 1220.59,1211.04 1221.18,1211.04 1221.76,1211.04 1222.35,1211.04 1222.94,1211.04 1223.52,1211.04 1224.11,1211.04 1224.7,1211.04 1225.28,1211.04 1225.87,1211.04 1226.45,1211.04 1227.04,1211.04 1227.63,1211.04 1228.21,1211.04 1228.8,1211.04 1229.39,1211.04 1229.97,1211.04 1230.56,1211.04 1231.15,1211.04 1231.73,1211.04 1232.32,1211.04 1232.91,1211.04 1233.49,1211.04 1234.08,1211.04 1234.66,1211.04 1235.25,1211.04 1235.84,1211.04 1236.42,1211.04 1237.01,1211.04 1237.6,1211.04 1238.18,1211.04 1238.77,1211.04 1239.36,1211.04 1239.94,1211.04 1240.53,1211.04 1241.11,1211.04 1241.7,1211.04 1242.29,1211.04 1242.87,1211.04 1243.46,1211.04 1244.05,1211.04 1244.63,1211.04 1245.22,1211.04 1245.81,1211.04 1246.39,1211.04 1246.98,1211.04 1247.57,1211.04 1248.15,1211.04 1248.74,1211.04 1249.32,1211.04 1249.91,1211.04 1250.5,1211.04 1251.08,1211.04 1251.67,1211.04 1252.26,1211.04 1252.84,1211.04 1253.43,1211.04 1254.02,1211.04 1254.6,1211.04 1255.19,1211.04 1255.78,1211.04 1256.36,1211.04 1256.95,1211.04 1257.53,1211.04 1258.12,1211.04 1258.71,1211.04 1259.29,1211.04 1259.88,1211.04 1260.47,1211.04 1261.05,1211.04 1261.64,1211.04 1262.23,1211.04 1262.81,1211.04 1263.4,1211.04 1263.98,1211.04 1264.57,1211.04 1265.16,1211.04 1265.74,1211.04 1266.33,1211.04 1266.92,1211.04 1267.5,1211.04 1268.09,1211.04 1268.68,1211.04 1269.26,1211.04 1269.85,1211.04 1270.44,1211.04 1271.02,1211.04 1271.61,1211.04 1272.19,1211.04 1272.78,1211.04 1273.37,1211.04 1273.95,1211.04 1274.54,1211.04 1275.13,1211.04 1275.71,1211.04 1276.3,1211.04 1276.89,1211.04 1277.47,1211.04 1278.06,1211.04 1278.65,1211.04 1279.23,1211.04 1279.82,1211.04 1280.4,1211.04 1280.99,1211.04 1281.58,1211.04 1282.16,1211.04 1282.75,1211.04 1283.34,1211.04 1283.92,1211.04 1284.51,1211.04 1285.1,1211.04 1285.68,1211.04 1286.27,1211.04 1286.86,1211.04 1287.44,1211.04 1288.03,1211.04 1288.61,1211.04 1289.2,1211.04 1289.79,1211.04 1290.37,1211.04 1290.96,1211.04 1291.55,1211.04 1292.13,1211.04 1292.72,1211.04 1293.31,1211.04 1293.89,1211.04 1294.48,1211.04 1295.06,1211.04 1295.65,1211.04 1296.24,1211.04 1296.82,1211.04 1297.41,1211.04 1298,1211.04 1298.58,1211.04 1299.17,1211.04 1299.76,1211.04 1300.34,1211.04 1300.93,1211.04 1301.52,1211.04 1302.1,1211.04 1302.69,1211.04 1303.27,1211.04 1303.86,1211.04 1304.45,1211.04 1305.03,1211.04 1305.62,1211.04 1306.21,1211.04 1306.79,1211.04 1307.38,1211.04 1307.97,1211.04 1308.55,1211.04 1309.14,1211.04 1309.73,1211.04 1310.31,1211.04 1310.9,1211.04 1311.48,1211.04 1312.07,1211.04 1312.66,1211.04 1313.24,1211.04 1313.83,1211.04 1314.42,1211.04 1315,1211.04 1315.59,1211.04 1316.18,1211.04 1316.76,1211.04 1317.35,1211.04 1317.93,1211.04 1318.52,1211.04 1319.11,1211.04 1319.69,1211.04 1320.28,1211.04 1320.87,1211.04 1321.45,1211.04 1322.04,1211.04 1322.63,1211.04 1323.21,1211.04 1323.8,1211.04 1324.39,1211.04 1324.97,1211.04 1325.56,1211.04 1326.14,1211.04 1326.73,1211.04 1327.32,1211.04 1327.9,1211.04 1328.49,1211.04 1329.08,1211.04 1329.66,1211.04 1330.25,1211.04 1330.84,1211.04 1331.42,1211.04 1332.01,1211.04 1332.6,1211.04 1333.18,1211.04 1333.77,1211.04 1334.35,1211.04 1334.94,1211.04 1335.53,1211.04 1336.11,1211.04 1336.7,1211.04 1337.29,1211.04 1337.87,1211.04 1338.46,1211.04 1339.05,1211.04 1339.63,1211.04 1340.22,1211.04 1340.8,1211.04 1341.39,1211.04 1341.98,1211.04 1342.56,1211.04 1343.15,1211.04 1343.74,1211.04 1344.32,1211.04 1344.91,1211.04 1345.5,1211.04 1346.08,1211.04 1346.67,1211.04 1347.26,1211.04 1347.84,1211.04 1348.43,1211.04 1349.01,1211.04 1349.6,1211.04 1350.19,1211.04 1350.77,1211.04 1351.36,1211.04 1351.95,1211.04 1352.53,1211.04 1353.12,1211.04 1353.71,1211.04 1354.29,1211.04 1354.88,1211.04 1355.47,1211.04 1356.05,1211.04 1356.64,1211.04 1357.22,1211.04 1357.81,1211.04 1358.4,1211.04 1358.98,1211.04 1359.57,1211.04 1360.16,1211.04 1360.74,1211.04 1361.33,1211.04 1361.92,1211.04 1362.5,1211.04 1363.09,1211.04 1363.68,1211.04 1364.26,1211.04 1364.85,1211.04 1365.43,1211.04 1366.02,1211.04 1366.61,1211.04 1367.19,1211.04 1367.78,1211.04 1368.37,1211.04 1368.95,1211.04 1369.54,1211.04 1370.13,1211.04 1370.71,1211.04 1371.3,1211.04 1371.88,1211.04 1372.47,1211.04 1373.06,1211.04 1373.64,1211.04 1374.23,1211.04 1374.82,1211.04 1375.4,1211.04 1375.99,1211.04 1376.58,1211.04 1377.16,1211.04 1377.75,1211.04 1378.34,1211.04 1378.92,1211.04 1379.51,1211.04 1380.09,1211.04 1380.68,1211.04 1381.27,1211.04 1381.85,1211.04 1382.44,1211.04 1383.03,1211.04 1383.61,1211.04 1384.2,1211.04 1384.79,1211.04 1385.37,1211.04 1385.96,1211.04 1386.55,1211.04 1387.13,1211.04 1387.72,1211.04 1388.3,1211.04 1388.89,1211.04 1389.48,1211.04 1390.06,1211.04 1390.65,1211.04 1391.24,1211.04 1391.82,1211.04 1392.41,1211.04 1393,1211.04 1393.58,1211.04 1394.17,1211.04 1394.75,1211.04 1395.34,1211.04 1395.93,1211.04 1396.51,1211.04 1397.1,1211.04 1397.69,1211.04 1398.27,1211.04 1398.86,1211.04 1399.45,1211.04 1400.03,1211.04 1400.62,1211.04 1401.21,1211.04 1401.79,1211.04 1402.38,1211.04 1402.96,1211.04 1403.55,1211.04 1404.14,1211.04 1404.72,1211.04 1405.31,1211.04 1405.9,1211.04 1406.48,1211.04 1407.07,1211.04 1407.66,1211.04 1408.24,1211.04 1408.83,1211.04 1409.42,1211.04 1410,1211.04 1410.59,1211.04 1411.17,1211.04 1411.76,1211.04 1412.35,1211.04 1412.93,1211.04 1413.52,1211.04 1414.11,1211.04 1414.69,1211.04 1415.28,1211.04 1415.87,1211.04 1416.45,1211.04 1417.04,1211.04 1417.63,1211.04 1418.21,1211.04 1418.8,1211.04 1419.38,1211.04 1419.97,1211.04 1420.56,1211.04 1421.14,1211.04 1421.73,1211.04 1422.32,1211.04 1422.9,1211.04 1423.49,1211.04 1424.08,1211.04 1424.66,1211.04 1425.25,1211.04 1425.83,1211.04 1426.42,1211.04 1427.01,1211.04 1427.59,1211.04 1428.18,1211.04 1428.77,1211.04 1429.35,1211.04 1429.94,1211.04 1430.53,1211.04 1431.11,1211.04 1431.7,1211.04 1432.29,1211.04 1432.87,1211.04 1433.46,1211.04 1434.04,1211.04 1434.63,1211.04 1435.22,1211.04 1435.8,1211.04 1436.39,1211.04 1436.98,1211.04 1437.56,1211.04 1438.15,1211.04 1438.74,1211.04 1439.32,1211.04 1439.91,1211.04 1440.5,1211.04 1441.08,1211.04 1441.67,1211.04 1442.25,1211.04 1442.84,1211.04 1443.43,1211.04 1444.01,1211.04 1444.6,1211.04 1445.19,1211.04 1445.77,1211.04 1446.36,1211.04 1446.95,1211.04 1447.53,1211.04 1448.12,1211.04 1448.7,1211.04 1449.29,1211.04 1449.88,1211.04 1450.46,1211.04 1451.05,1211.04 1451.64,1211.04 1452.22,1211.04 1452.81,1211.04 1453.4,1211.04 1453.98,1211.04 1454.57,1211.04 1455.16,1211.04 1455.74,1211.04 1456.33,1211.04 1456.91,1211.04 1457.5,1211.04 1458.09,1211.04 1458.67,1211.04 1459.26,1211.04 1459.85,1211.04 1460.43,1211.04 1461.02,1211.04 1461.61,1211.04 1462.19,1211.04 1462.78,1211.04 1463.37,1211.04 1463.95,1211.04 1464.54,1211.04 1465.12,1211.04 1465.71,1211.04 1466.3,1211.04 1466.88,1211.04 1467.47,1211.04 1468.06,1211.04 1468.64,1211.04 1469.23,1211.04 1469.82,1211.04 1470.4,1211.04 1470.99,1211.04 1471.57,1211.04 1472.16,1211.04 1472.75,1211.04 1473.33,1211.04 1473.92,1211.04 1474.51,1211.04 1475.09,1211.04 1475.68,1211.04 1476.27,1211.04 1476.85,1211.04 1477.44,1211.04 1478.03,1211.04 1478.61,1211.04 1479.2,1211.04 1479.78,1211.04 1480.37,1211.04 1480.96,1211.04 1481.54,1211.04 1482.13,1211.04 1482.72,1211.04 1483.3,1211.04 1483.89,1211.04 1484.48,1211.04 1485.06,1211.04 1485.65,1211.04 1486.24,1211.04 1486.82,1211.04 1487.41,1211.04 1487.99,1211.04 1488.58,1211.04 1489.17,1211.04 1489.75,1211.04 1490.34,1211.04 1490.93,1211.04 1491.51,1211.04 1492.1,1211.04 1492.69,1211.04 1493.27,1211.04 1493.86,1211.04 1494.45,1211.04 1495.03,1211.04 1495.62,1211.04 1496.2,1211.04 1496.79,1211.04 1497.38,1211.04 1497.96,1211.04 1498.55,1211.04 1499.14,1211.04 1499.72,1211.04 1500.31,1211.04 1500.9,1211.04 1501.48,1211.04 1502.07,1211.04 1502.65,1211.04 1503.24,1211.04 1503.83,1211.04 1504.41,1211.04 1505,1211.04 1505.59,1211.04 1506.17,1211.04 1506.76,1211.04 1507.35,1211.04 1507.93,1211.04 1508.52,1211.04 1509.11,1211.04 1509.69,1211.04 1510.28,1211.04 1510.86,1211.04 1511.45,1211.04 1512.04,1211.04 1512.62,1211.04 1513.21,1211.04 1513.8,1211.04 1514.38,1211.04 1514.97,1211.04 1515.56,1211.04 1516.14,1211.04 1516.73,1211.04 1517.32,1211.04 1517.9,1211.04 1518.49,1211.04 1519.07,1211.04 1519.66,1211.04 1520.25,1211.04 1520.83,1211.04 1521.42,1211.04 1522.01,1211.04 1522.59,1211.04 1523.18,1211.04 1523.77,1211.04 1524.35,1211.04 1524.94,1211.04 1525.52,1211.04 1526.11,1211.04 1526.7,1211.04 1527.28,1211.04 1527.87,1211.04 1528.46,1211.04 1529.04,1211.04 1529.63,1211.04 1530.22,1211.04 1530.8,1211.04 1531.39,1211.04 1531.98,1211.04 1532.56,1211.04 1533.15,1211.04 1533.73,1211.04 1534.32,1211.04 1534.91,1211.04 1535.49,1211.04 1536.08,1211.04 1536.67,1211.04 1537.25,1211.04 1537.84,1211.04 1538.43,1211.04 1539.01,1211.04 1539.6,1211.04 1540.19,1211.04 1540.77,1211.04 1541.36,1211.04 1541.94,1211.04 1542.53,1211.04 1543.12,1211.04 1543.7,1211.04 1544.29,1211.04 1544.88,1211.04 1545.46,1211.04 1546.05,1211.04 1546.64,1211.04 1547.22,1211.04 1547.81,1211.04 1548.4,1211.04 1548.98,1211.04 1549.57,1211.04 1550.15,1211.04 1550.74,1211.04 1551.33,1211.04 1551.91,1211.04 1552.5,1211.04 1553.09,1211.04 1553.67,1211.04 1554.26,1211.04 1554.85,1211.04 1555.43,1211.04 1556.02,1211.04 1556.6,1211.04 1557.19,1211.04 1557.78,1211.04 1558.36,1211.04 1558.95,1211.04 1559.54,1211.04 1560.12,1211.04 1560.71,1211.04 1561.3,1211.04 1561.88,1211.04 1562.47,1211.04 1563.06,1211.04 1563.64,1211.04 1564.23,1211.04 1564.81,1211.04 1565.4,1211.04 1565.99,1211.04 1566.57,1211.04 1567.16,1211.04 1567.75,1211.04 1568.33,1211.04 1568.92,1211.04 1569.51,1211.04 1570.09,1211.04 1570.68,1211.04 1571.27,1211.04 1571.85,1211.04 1572.44,1211.04 1573.02,1211.04 1573.61,1211.04 1574.2,1211.04 1574.78,1211.04 1575.37,1211.04 1575.96,1211.04 1576.54,1211.04 1577.13,1211.04 1577.72,1211.04 1578.3,1211.04 1578.89,1211.04 1579.47,1211.04 1580.06,1211.04 1580.65,1211.04 1581.23,1211.04 1581.82,1211.04 1582.41,1211.04 1582.99,1211.04 1583.58,1211.04 1584.17,1211.04 1584.75,1211.04 1585.34,1211.04 1585.93,1211.04 1586.51,1211.04 1587.1,1211.04 1587.68,1211.04 1588.27,1211.04 1588.86,1211.04 1589.44,1211.04 1590.03,1211.04 1590.62,1211.04 1591.2,1211.04 1591.79,1211.04 1592.38,1211.04 1592.96,1211.04 1593.55,1211.04 1594.14,1211.04 1594.72,1211.04 1595.31,1211.04 1595.89,1211.04 1596.48,1211.04 1597.07,1211.04 1597.65,1211.04 1598.24,1211.04 1598.83,1211.04 1599.41,1211.04 1600,1211.04 1600.59,1211.04 1601.17,1211.04 1601.76,1211.04 1602.34,1211.04 1602.93,1211.04 1603.52,1211.04 1604.1,1211.04 1604.69,1211.04 1605.28,1211.04 1605.86,1211.04 1606.45,1211.04 1607.04,1211.04 1607.62,1211.04 1608.21,1211.04 1608.8,1211.04 1609.38,1211.04 1609.97,1211.04 1610.55,1211.04 1611.14,1211.04 1611.73,1211.04 1612.31,1211.04 1612.9,1211.04 1613.49,1211.04 1614.07,1211.04 1614.66,1211.04 1615.25,1211.04 1615.83,1211.04 1616.42,1211.04 1617.01,1211.04 1617.59,1211.04 1618.18,1211.04 1618.76,1211.04 1619.35,1211.04 1619.94,1211.04 1620.52,1211.04 1621.11,1211.04 1621.7,1211.04 1622.28,1211.04 1622.87,1211.04 1623.46,1211.04 1624.04,1211.04 1624.63,1211.04 1625.22,1211.04 1625.8,1211.04 1626.39,1211.04 1626.97,1211.04 1627.56,1211.04 1628.15,1211.04 1628.73,1211.04 1629.32,1211.04 1629.91,1211.04 1630.49,1211.04 1631.08,1211.04 1631.67,1211.04 1632.25,1211.04 1632.84,1211.04 1633.42,1211.04 1634.01,1211.04 1634.6,1211.04 1635.18,1211.04 1635.77,1211.04 1636.36,1211.04 1636.94,1211.04 1637.53,1211.04 1638.12,1211.04 1638.7,1211.04 1639.29,1211.04 1639.88,1211.04 1640.46,1211.04 1641.05,1211.04 1641.63,1211.04 1642.22,1211.04 1642.81,1211.04 1643.39,1211.04 1643.98,1211.04 1644.57,1211.04 1645.15,1211.04 1645.74,1211.04 1646.33,1211.04 1646.91,1211.04 1647.5,1211.04 1648.09,1211.04 1648.67,1211.04 1649.26,1211.04 1649.84,1211.04 1650.43,1211.04 1651.02,1211.04 1651.6,1211.04 1652.19,1211.04 1652.78,1211.04 1653.36,1211.04 1653.95,1211.04 1654.54,1211.04 1655.12,1211.04 1655.71,1211.04 1656.29,1211.04 1656.88,1211.04 1657.47,1211.04 1658.05,1211.04 1658.64,1211.04 1659.23,1211.04 1659.81,1211.04 1660.4,1211.04 1660.99,1211.04 1661.57,1211.04 1662.16,1211.04 1662.75,1211.04 1663.33,1211.04 1663.92,1211.04 1664.5,1211.04 1665.09,1211.04 1665.68,1211.04 1666.26,1211.04 1666.85,1211.04 1667.44,1211.04 1668.02,1211.04 1668.61,1211.04 1669.2,1211.04 1669.78,1211.04 1670.37,1211.04 1670.96,1211.04 1671.54,1211.04 1672.13,1211.04 1672.71,1211.04 1673.3,1211.04 1673.89,1211.04 1674.47,1211.04 1675.06,1211.04 1675.65,1211.04 1676.23,1211.04 1676.82,1211.04 1677.41,1211.04 1677.99,1211.04 1678.58,1211.04 1679.17,1211.04 1679.75,1211.04 1680.34,1211.04 1680.92,1211.04 1681.51,1211.04 1682.1,1211.04 1682.68,1211.04 1683.27,1211.04 1683.86,1211.04 1684.44,1211.04 1685.03,1211.04 1685.62,1211.04 1686.2,1211.04 1686.79,1211.04 1687.37,1211.04 1687.96,1211.04 1688.55,1211.04 1689.13,1211.04 1689.72,1211.04 1690.31,1211.04 1690.89,1211.04 1691.48,1211.04 1692.07,1211.04 1692.65,1211.04 1693.24,1211.04 1693.83,1211.04 1694.41,1211.04 1695,1211.04 1695.58,1211.04 1696.17,1211.04 1696.76,1211.04 1697.34,1211.04 1697.93,1211.04 1698.52,1211.04 1699.1,1211.04 1699.69,1211.04 1700.28,1211.04 1700.86,1211.04 1701.45,1211.04 1702.04,1211.04 1702.62,1211.04 1703.21,1211.04 1703.79,1211.04 1704.38,1211.04 1704.97,1211.04 1705.55,1211.04 1706.14,1211.04 1706.73,1211.04 1707.31,1211.04 1707.9,1211.04 1708.49,1211.04 1709.07,1211.04 1709.66,1211.04 1710.24,1211.04 1710.83,1211.04 1711.42,1211.04 1712,1211.04 1712.59,1211.04 1713.18,1211.04 1713.76,1211.04 1714.35,1211.04 1714.94,1211.04 1715.52,1211.04 1716.11,1211.04 1716.7,1211.04 1717.28,1211.04 1717.87,1211.04 1718.45,1211.04 1719.04,1211.04 1719.63,1211.04 1720.21,1211.04 1720.8,1211.04 1721.39,1211.04 1721.97,1211.04 1722.56,1211.04 1723.15,1211.04 1723.73,1211.04 1724.32,1211.04 1724.91,1211.04 1725.49,1211.04 1726.08,1211.04 1726.66,1211.04 1727.25,1211.04 1727.84,1211.04 1728.42,1211.04 1729.01,1211.04 1729.6,1211.04 1730.18,1211.04 1730.77,1211.04 1731.36,1211.04 1731.94,1211.04 1732.53,1211.04 1733.11,1211.04 1733.7,1211.04 1734.29,1211.04 1734.87,1211.04 1735.46,1211.04 1736.05,1211.04 1736.63,1211.04 1737.22,1211.04 1737.81,1211.04 1738.39,1211.04 1738.98,1211.04 1739.57,1211.04 1740.15,1211.04 1740.74,1211.04 1741.32,1211.04 1741.91,1211.04 1742.5,1211.04 1743.08,1211.04 1743.67,1211.04 1744.26,1211.04 1744.84,1211.04 1745.43,1211.04 1746.02,1211.04 1746.6,1211.04 1747.19,1211.04 1747.78,1211.04 1748.36,1211.04 1748.95,1211.04 1749.53,1211.04 1750.12,1211.04 1750.71,1211.04 1751.29,1211.04 1751.88,1211.04 1752.47,1211.04 1753.05,1211.04 1753.64,1211.04 1754.23,1211.04 1754.81,1211.04 1755.4,1211.04 1755.99,1211.04 1756.57,1211.04 1757.16,1211.04 1757.74,1211.04 1758.33,1211.04 1758.92,1211.04 1759.5,1211.04 1760.09,1211.04 1760.68,1211.04 1761.26,1211.04 1761.85,1211.04 1762.44,1211.04 1763.02,1211.04 1763.61,1211.04 1764.19,1211.04 1764.78,1211.04 1765.37,1211.04 1765.95,1211.04 1766.54,1211.04 1767.13,1211.04 1767.71,1211.04 1768.3,1211.04 1768.89,1211.04 1769.47,1211.04 1770.06,1211.04 1770.65,1211.04 1771.23,1211.04 1771.82,1211.04 1772.4,1211.04 1772.99,1211.04 1773.58,1211.04 1774.16,1211.04 1774.75,1211.04 1775.34,1211.04 1775.92,1211.04 1776.51,1211.04 1777.1,1211.04 1777.68,1211.04 1778.27,1211.04 1778.86,1211.04 1779.44,1211.04 1780.03,1211.04 1780.61,1211.04 1781.2,1211.04 1781.79,1211.04 1782.37,1211.04 1782.96,1211.04 1783.55,1211.04 1784.13,1211.04 1784.72,1211.04 1785.31,1211.04 1785.89,1211.04 1786.48,1211.04 1787.06,1211.04 1787.65,1211.04 1788.24,1211.04 1788.82,1211.04 1789.41,1211.04 1790,1211.04 1790.58,1211.04 1791.17,1211.04 1791.76,1211.04 1792.34,1211.04 1792.93,1211.04 1793.52,1211.04 1794.1,1211.04 1794.69,1211.04 1795.27,1211.04 1795.86,1211.04 1796.45,1211.04 1797.03,1211.04 1797.62,1211.04 1798.21,1211.04 1798.79,1211.04 1799.38,1211.04 1799.97,1211.04 1800.55,1211.04 1801.14,1211.04 1801.73,1211.04 1802.31,1211.04 1802.9,1211.04 1803.48,1211.04 1804.07,1211.04 1804.66,1211.04 1805.24,1211.04 1805.83,1211.04 1806.42,1211.04 1807,1211.04 1807.59,1211.04 1808.18,1211.04 1808.76,1211.04 1809.35,1211.04 1809.94,1211.04 1810.52,1211.04 1811.11,1211.04 1811.69,1211.04 1812.28,1211.04 1812.87,1211.04 1813.45,1211.04 1814.04,1211.04 1814.63,1211.04 1815.21,1211.04 1815.8,1211.04 1816.39,1211.04 1816.97,1211.04 1817.56,1211.04 1818.14,1211.04 1818.73,1211.04 1819.32,1211.04 1819.9,1211.04 1820.49,1211.04 1821.08,1211.04 1821.66,1211.04 1822.25,1211.04 1822.84,1211.04 1823.42,1211.04 1824.01,1211.04 1824.6,1211.04 1825.18,1211.04 1825.77,1211.04 1826.35,1211.04 1826.94,1211.04 1827.53,1211.04 1828.11,1211.04 1828.7,1211.04 1829.29,1211.04 1829.87,1211.04 1830.46,1211.04 1831.05,1211.04 1831.63,1211.04 1832.22,1211.04 1832.81,1211.04 1833.39,1211.04 1833.98,1211.04 1834.56,1211.04 1835.15,1211.04 1835.74,1211.04 1836.32,1211.04 1836.91,1211.04 1837.5,1211.04 1838.08,1211.04 1838.67,1211.04 1839.26,1211.04 1839.84,1211.04 1840.43,1211.04 1841.01,1211.04 1841.6,1211.04 1842.19,1211.04 1842.77,1211.04 1843.36,1211.04 1843.95,1211.04 1844.53,1211.04 1845.12,1211.04 1845.71,1211.04 1846.29,1211.04 1846.88,1211.04 1847.47,1211.04 1848.05,1211.04 1848.64,1211.04 1849.22,1211.04 1849.81,1211.04 1850.4,1211.04 1850.98,1211.04 1851.57,1211.04 1852.16,1211.04 1852.74,1211.04 1853.33,1211.04 1853.92,1211.04 1854.5,1211.04 1855.09,1211.04 1855.68,1211.04 1856.26,1211.04 1856.85,1211.04 1857.43,1211.04 1858.02,1211.04 1858.61,1211.04 1859.19,1211.04 1859.78,1211.04 1860.37,1211.04 1860.95,1211.04 1861.54,1211.04 1862.13,1211.04 1862.71,1211.04 1863.3,1211.04 1863.88,1211.04 1864.47,1211.04 1865.06,1211.04 1865.64,1211.04 1866.23,1211.04 1866.82,1211.04 1867.4,1211.04 1867.99,1211.04 1868.58,1211.04 1869.16,1211.04 1869.75,1211.04 1870.34,1211.04 1870.92,1211.04 1871.51,1211.04 1872.09,1211.04 1872.68,1211.04 1873.27,1211.04 1873.85,1211.04 1874.44,1211.04 1875.03,1211.04 1875.61,1211.04 1876.2,1211.04 1876.79,1211.04 1877.37,1211.04 1877.96,1211.04 1878.55,1211.04 1879.13,1211.04 1879.72,1211.04 1880.3,1211.04 1880.89,1211.04 1881.48,1211.04 1882.06,1211.04 1882.65,1211.04 1883.24,1211.04 1883.82,1211.04 1884.41,1211.04 1885,1211.04 1885.58,1211.04 1886.17,1211.04 1886.76,1211.04 1887.34,1211.04 1887.93,1211.04 1888.51,1211.04 1889.1,1211.04 1889.69,1211.04 1890.27,1211.04 1890.86,1211.04 1891.45,1211.04 1892.03,1211.04 1892.62,1211.04 1893.21,1211.04 1893.79,1211.04 1894.38,1211.04 1894.96,1211.04 1895.55,1211.04 1896.14,1211.04 1896.72,1211.04 1897.31,1211.04 1897.9,1211.04 1898.48,1211.04 1899.07,1211.04 1899.66,1211.04 1900.24,1211.04 1900.83,1211.04 1901.42,1211.04 1902,1211.04 1902.59,1211.04 1903.17,1211.04 1903.76,1211.04 1904.35,1211.04 1904.93,1211.04 1905.52,1211.04 1906.11,1211.04 1906.69,1211.04 1907.28,1211.04 1907.87,1211.04 1908.45,1211.04 1909.04,1211.04 1909.63,1211.04 1910.21,1211.04 1910.8,1211.04 1911.38,1211.04 1911.97,1211.04 1912.56,1211.04 1913.14,1211.04 1913.73,1211.04 1914.32,1211.04 1914.9,1211.04 1915.49,1211.04 1916.08,1211.04 1916.66,1211.04 1917.25,1211.04 1917.83,1211.04 1918.42,1211.04 1919.01,1211.04 1919.59,1211.04 1920.18,1211.04 1920.77,1211.04 1921.35,1211.04 1921.94,1211.04 1922.53,1211.04 1923.11,1211.04 1923.7,1211.04 1924.29,1211.04 1924.87,1211.04 1925.46,1211.04 1926.04,1211.04 1926.63,1211.04 1927.22,1211.04 1927.8,1211.04 1928.39,1211.04 1928.98,1211.04 1929.56,1211.04 1930.15,1211.04 1930.74,1211.04 1931.32,1211.04 1931.91,1211.04 1932.5,1211.04 1933.08,1211.04 1933.67,1211.04 1934.25,1211.04 1934.84,1211.04 1935.43,1211.04 1936.01,1211.04 1936.6,1211.04 1937.19,1211.04 1937.77,1211.04 1938.36,1211.04 1938.95,1211.04 1939.53,1211.04 1940.12,1211.04 1940.71,1211.04 1941.29,1211.04 1941.88,1211.04 1942.46,1211.04 1943.05,1211.04 1943.64,1211.04 1944.22,1211.04 1944.81,1211.04 1945.4,1211.04 1945.98,1211.04 1946.57,1211.04 1947.16,1211.04 1947.74,1211.04 1948.33,1211.04 1948.91,1211.04 1949.5,1211.04 1950.09,1211.04 1950.67,1211.04 1951.26,1211.04 1951.85,1211.04 1952.43,1211.04 1953.02,1211.04 1953.61,1211.04 1954.19,1211.04 1954.78,1211.04 1955.37,1211.04 1955.95,1211.04 1956.54,1211.04 1957.12,1211.04 1957.71,1211.04 1958.3,1211.04 1958.88,1211.04 1959.47,1211.04 1960.06,1211.04 1960.64,1211.04 1961.23,1211.04 1961.82,1211.04 1962.4,1211.04 1962.99,1211.04 1963.58,1211.04 1964.16,1211.04 1964.75,1211.04 1965.33,1211.04 1965.92,1211.04 1966.51,1211.04 1967.09,1211.04 1967.68,1211.04 1968.27,1211.04 1968.85,1211.04 1969.44,1211.04 1970.03,1211.04 1970.61,1211.04 1971.2,1211.04 1971.78,1211.04 1972.37,1211.04 1972.96,1211.04 1973.54,1211.04 1974.13,1211.04 1974.72,1211.04 1975.3,1211.04 1975.89,1211.04 1976.48,1211.04 1977.06,1211.04 1977.65,1211.04 1978.24,1211.04 1978.82,1211.04 1979.41,1211.04 1979.99,1211.04 1980.58,1211.04 1981.17,1211.04 1981.75,1211.04 1982.34,1211.04 1982.93,1211.04 1983.51,1211.04 1984.1,1211.04 1984.69,1211.04 1985.27,1211.04 1985.86,1211.04 1986.45,1211.04 1987.03,1211.04 1987.62,1211.04 1988.2,1211.04 1988.79,1211.04 1989.38,1211.04 1989.96,1211.04 1990.55,1211.04 1991.14,1211.04 1991.72,1211.04 1992.31,1211.04 1992.9,1211.04 1993.48,1211.04 1994.07,1211.04 1994.65,1211.04 1995.24,1211.04 1995.83,1211.04 1996.41,1211.04 1997,1211.04 1997.59,1211.04 1998.17,1211.04 1998.76,1211.04 1999.35,1211.04 1999.93,1211.04 2000.52,1211.04 2001.11,1211.04 2001.69,1211.04 2002.28,1211.04 2002.86,1211.04 2003.45,1211.04 2004.04,1211.04 2004.62,1211.04 2005.21,1211.04 2005.8,1211.04 2006.38,1211.04 2006.97,1211.04 2007.56,1211.04 2008.14,1211.04 2008.73,1211.04 2009.32,1211.04 2009.9,1211.04 2010.49,1211.04 2011.07,1211.04 2011.66,1211.04 2012.25,1211.04 2012.83,1211.04 2013.42,1211.04 2014.01,1211.04 2014.59,1211.04 2015.18,1211.04 2015.77,1211.04 2016.35,1211.04 2016.94,1211.04 2017.53,1211.04 2018.11,1211.04 2018.7,1211.04 2019.28,1211.04 2019.87,1211.04 2020.46,1211.04 2021.04,1211.04 2021.63,1211.04 2022.22,1211.04 2022.8,1211.04 2023.39,1211.04 2023.98,1211.04 2024.56,1211.04 2025.15,1211.04 2025.73,1211.04 2026.32,1211.04 2026.91,1211.04 2027.49,1211.04 2028.08,1211.04 2028.67,1211.04 2029.25,1211.04 2029.84,1211.04 2030.43,1211.04 2031.01,1211.04 2031.6,1211.04 2032.19,1211.04 2032.77,1211.04 2033.36,1211.04 2033.94,1211.04 2034.53,1211.04 2035.12,1211.04 2035.7,1211.04 2036.29,1211.04 2036.88,1211.04 2037.46,1211.04 2038.05,1211.04 2038.64,1211.04 2039.22,1211.04 2039.81,1211.04 2040.4,1211.04 2040.98,1211.04 2041.57,1211.04 2042.15,1211.04 2042.74,1211.04 2043.33,1211.04 2043.91,1211.04 2044.5,1211.04 2045.09,1211.04 2045.67,1211.04 2046.26,1211.04 2046.85,1211.04 2047.43,1211.04 2048.02,1211.04 2048.6,1211.04 2049.19,1211.04 2049.78,1211.04 2050.36,1211.04 2050.95,1211.04 2051.54,1211.04 2052.12,1211.04 2052.71,1211.04 2053.3,1211.04 2053.88,1211.04 2054.47,1211.04 2055.06,1211.04 2055.64,1211.04 2056.23,1211.04 2056.81,1211.04 2057.4,1211.04 2057.99,1211.04 2058.57,1211.04 2059.16,1211.04 2059.75,1211.04 2060.33,1211.04 2060.92,1211.04 2061.51,1211.04 2062.09,1211.04 2062.68,1211.04 2063.27,1211.04 2063.85,1211.04 2064.44,1211.04 2065.02,1211.04 2065.61,1211.04 2066.2,1211.04 2066.78,1211.04 2067.37,1211.04 2067.96,1211.04 2068.54,1211.04 2069.13,1211.04 2069.72,1211.04 2070.3,1211.04 2070.89,1211.04 2071.48,1211.04 2072.06,1211.04 2072.65,1211.04 2073.23,1211.04 2073.82,1211.04 2074.41,1211.04 2074.99,1211.04 2075.58,1211.04 2076.17,1211.04 2076.75,1211.04 2077.34,1211.04 2077.93,1211.04 2078.51,1211.04 2079.1,1211.04 2079.68,1211.04 2080.27,1211.04 2080.86,1211.04 2081.44,1211.04 2082.03,1211.04 2082.62,1211.04 2083.2,1211.04 2083.79,1211.04 2084.38,1211.04 2084.96,1211.04 2085.55,1211.04 2086.14,1211.04 2086.72,1211.04 2087.31,1211.04 2087.89,1211.04 2088.48,1211.04 2089.07,1211.04 2089.65,1211.04 2090.24,1211.04 2090.83,1211.04 2091.41,1211.04 2092,1211.04 2092.59,1211.04 2093.17,1211.04 2093.76,1211.04 2094.35,1211.04 2094.93,1211.04 2095.52,1211.04 2096.1,1211.04 2096.69,1211.04 2097.28,1211.04 2097.86,1211.04 2098.45,1211.04 2099.04,1211.04 2099.62,1211.04 2100.21,1211.04 2100.8,1211.04 2101.38,1211.04 2101.97,1211.04 2102.55,1211.04 2103.14,1211.04 2103.73,1211.04 2104.31,1211.04 2104.9,1211.04 2105.49,1211.04 2106.07,1211.04 2106.66,1211.04 2107.25,1211.04 2107.83,1211.04 2108.42,1211.04 2109.01,1211.04 2109.59,1211.04 2110.18,1211.04 2110.76,1211.04 2111.35,1211.04 2111.94,1211.04 2112.52,1211.04 2113.11,1211.04 2113.7,1211.04 2114.28,1211.04 2114.87,1211.04 2115.46,1211.04 2116.04,1211.04 2116.63,1211.04 2117.22,1211.04 2117.8,1211.04 2118.39,1211.04 2118.97,1211.04 2119.56,1211.04 2120.15,1211.04 2120.73,1211.04 2121.32,1211.04 2121.91,1211.04 2122.49,1211.04 2123.08,1211.04 2123.67,1211.04 2124.25,1211.04 2124.84,1211.04 2125.42,1211.04 2126.01,1211.04 2126.6,1211.04 2127.18,1211.04 2127.77,1211.04 2128.36,1211.04 2128.94,1211.04 2129.53,1211.04 2130.12,1211.04 2130.7,1211.04 2131.29,1211.04 2131.88,1211.04 2132.46,1211.04 2133.05,1211.04 2133.63,1211.04 2134.22,1211.04 2134.81,1211.04 2135.39,1211.04 2135.98,1211.04 2136.57,1211.04 2137.15,1211.04 2137.74,1211.04 2138.33,1211.04 2138.91,1211.04 2139.5,1211.04 2140.09,1211.04 2140.67,1211.04 2141.26,1211.04 2141.84,1211.04 2142.43,1211.04 2143.02,1211.04 2143.6,1211.04 2144.19,1211.04 2144.78,1211.04 2145.36,1211.04 2145.95,1211.04 2146.54,1211.04 2147.12,1211.04 2147.71,1211.04 2148.3,1211.04 2148.88,1211.04 2149.47,1211.04 2150.05,1211.04 2150.64,1211.04 2151.23,1211.04 2151.81,1211.04 2152.4,1211.04 2152.99,1211.04 2153.57,1211.04 2154.16,1211.04 2154.75,1211.04 2155.33,1211.04 2155.92,1211.04 2156.5,1211.04 2157.09,1211.04 2157.68,1211.04 2158.26,1211.04 \"/>\n<path clip-path=\"url(#clip712)\" d=\"M986.025 1210.9 L986.612 1210.9 L987.198 1210.9 L987.785 1210.9 L988.371 1210.9 L988.957 1210.9 L989.544 1210.9 L990.13 1210.9 L990.717 1210.9 L991.303 1210.9 L991.889 1210.9 L992.476 1210.9 L993.062 1210.9 L993.649 1210.9 L994.235 1210.9 L994.822 1210.9 L995.408 1210.9 L995.994 1210.9 L996.581 1210.9 L997.167 1210.9 L997.754 1210.9 L998.34 1210.9 L998.926 1210.9 L999.513 1210.9 L1000.1 1210.9 L1000.69 1210.9 L1001.27 1210.9 L1001.86 1210.9 L1002.44 1210.9 L1003.03 1210.9 L1003.62 1210.9 L1004.2 1210.9 L1004.79 1210.9 L1005.38 1210.9 L1005.96 1210.9 L1006.55 1210.9 L1007.14 1210.9 L1007.72 1210.9 L1008.31 1210.9 L1008.9 1210.9 L1009.48 1210.9 L1010.07 1210.9 L1010.65 1210.9 L1011.24 1210.9 L1011.83 1210.9 L1012.41 1210.9 L1013 1210.9 L1013.59 1210.9 L1014.17 1210.9 L1014.76 1210.9 L1015.35 1210.9 L1015.93 1210.9 L1016.52 1210.9 L1017.11 1210.9 L1017.69 1210.9 L1018.28 1210.9 L1018.86 1210.9 L1019.45 1210.9 L1020.04 1210.9 L1020.62 1210.9 L1021.21 1210.9 L1021.8 1210.9 L1022.38 1210.9 L1022.97 1210.9 L1023.56 1210.9 L1024.14 1210.9 L1024.73 1210.9 L1025.32 1210.9 L1025.9 1210.9 L1026.49 1210.9 L1027.07 1210.9 L1027.66 1210.9 L1028.25 1210.9 L1028.83 1210.9 L1029.42 1210.9 L1030.01 1210.9 L1030.59 1210.9 L1031.18 1210.9 L1031.77 1210.9 L1032.35 1210.9 L1032.94 1210.9 L1033.52 1210.9 L1034.11 1210.9 L1034.7 1210.9 L1035.28 1210.9 L1035.87 1210.9 L1036.46 1210.9 L1037.04 1210.9 L1037.63 1210.9 L1038.22 1210.9 L1038.8 1210.9 L1039.39 1210.9 L1039.98 1210.9 L1040.56 1210.9 L1041.15 1210.9 L1041.73 1210.9 L1042.32 1210.9 L1042.91 1210.9 L1043.49 1210.9 L1044.08 1210.9 L1044.67 1210.9 L1045.25 1210.9 L1045.84 1210.9 L1046.43 1210.9 L1047.01 1210.9 L1047.6 1210.9 L1048.19 1210.9 L1048.77 1210.9 L1049.36 1210.9 L1049.94 1210.9 L1050.53 1210.9 L1051.12 1210.9 L1051.7 1210.9 L1052.29 1210.9 L1052.88 1210.9 L1053.46 1210.9 L1054.05 1210.9 L1054.64 1210.9 L1055.22 1210.9 L1055.81 1210.9 L1056.39 1210.9 L1056.98 1210.9 L1057.57 1210.9 L1058.15 1210.9 L1058.74 1210.9 L1059.33 1210.9 L1059.91 1210.9 L1060.5 1210.9 L1061.09 1210.9 L1061.67 1210.9 L1062.26 1210.9 L1062.85 1210.9 L1063.43 1210.9 L1064.02 1210.9 L1064.6 1210.9 L1065.19 1210.9 L1065.78 1210.9 L1066.36 1210.9 L1066.95 1210.9 L1067.54 1210.9 L1068.12 1210.9 L1068.71 1210.9 L1069.3 1210.9 L1069.88 1210.9 L1070.47 1210.9 L1071.06 1210.9 L1071.64 1210.9 L1072.23 1210.9 L1072.81 1210.9 L1073.4 1210.9 L1073.99 1210.9 L1074.57 1210.9 L1075.16 1210.9 L1075.75 1210.9 L1076.33 1210.9 L1076.92 1210.9 L1077.51 1210.9 L1078.09 1210.9 L1078.68 1210.9 L1079.26 1210.9 L1079.85 1210.9 L1080.44 1210.9 L1081.02 1210.9 L1081.61 1210.9 L1082.2 1210.9 L1082.78 1210.9 L1083.37 1210.9 L1083.96 1210.9 L1084.54 1210.9 L1085.13 1210.9 L1085.72 1210.9 L1086.3 1210.9 L1086.89 1210.9 L1087.47 1210.9 L1088.06 1210.9 L1088.65 1210.9 L1089.23 1210.9 L1089.82 1210.9 L1090.41 1210.9 L1090.99 1210.9 L1091.58 1210.9 L1092.17 1210.9 L1092.75 1210.9 L1093.34 1210.9 L1093.93 1210.9 L1094.51 1210.9 L1095.1 1210.9 L1095.68 1210.9 L1096.27 1210.9 L1096.86 1210.9 L1097.44 1210.9 L1098.03 1210.9 L1098.62 1210.9 L1099.2 1210.9 L1099.79 1210.9 L1100.38 1210.9 L1100.96 1210.9 L1101.55 1210.9 L1102.14 1210.9 L1102.72 1210.9 L1103.31 1210.9 L1103.89 1210.9 L1104.48 1210.9 L1105.07 1210.9 L1105.65 1210.9 L1106.24 1210.9 L1106.83 1210.9 L1107.41 1210.9 L1108 1210.9 L1108.59 1210.9 L1109.17 1210.9 L1109.76 1210.9 L1110.34 1210.9 L1110.93 1210.9 L1111.52 1210.9 L1112.1 1210.9 L1112.69 1210.9 L1113.28 1210.9 L1113.86 1210.9 L1114.45 1210.9 L1115.04 1210.9 L1115.62 1210.9 L1116.21 1210.9 L1116.8 1210.9 L1117.38 1210.9 L1117.97 1210.9 L1118.55 1210.9 L1119.14 1210.9 L1119.73 1210.9 L1120.31 1210.9 L1120.9 1210.9 L1121.49 1210.9 L1122.07 1210.9 L1122.66 1210.9 L1123.25 1210.9 L1123.83 1210.9 L1124.42 1210.9 L1125.01 1210.9 L1125.59 1210.9 L1126.18 1210.9 L1126.76 1210.9 L1127.35 1210.9 L1127.94 1210.9 L1128.52 1210.9 L1129.11 1210.9 L1129.7 1210.9 L1130.28 1210.9 L1130.87 1210.9 L1131.46 1210.9 L1132.04 1210.9 L1132.63 1210.9 L1133.21 1210.9 L1133.8 1210.9 L1134.39 1210.9 L1134.97 1210.9 L1135.56 1210.9 L1136.15 1210.9 L1136.73 1210.9 L1137.32 1210.9 L1137.91 1210.9 L1138.49 1210.9 L1139.08 1210.9 L1139.67 1210.9 L1140.25 1210.9 L1140.84 1210.9 L1141.42 1210.9 L1142.01 1210.9 L1142.6 1210.9 L1143.18 1210.9 L1143.77 1210.9 L1144.36 1210.9 L1144.94 1210.9 L1145.53 1210.9 L1146.12 1210.9 L1146.7 1210.9 L1147.29 1210.9 L1147.88 1210.9 L1148.46 1210.9 L1149.05 1210.9 L1149.63 1210.9 L1150.22 1210.9 L1150.81 1210.9 L1151.39 1210.9 L1151.98 1210.9 L1152.57 1210.9 L1153.15 1210.9 L1153.74 1210.9 L1154.33 1210.9 L1154.91 1210.9 L1155.5 1210.9 L1156.09 1210.9 L1156.67 1210.9 L1157.26 1210.9 L1157.84 1210.9 L1158.43 1210.9 L1159.02 1210.9 L1159.6 1210.9 L1160.19 1210.9 L1160.78 1210.9 L1161.36 1210.9 L1161.95 1210.9 L1162.54 1210.9 L1163.12 1210.9 L1163.71 1210.9 L1164.29 1210.9 L1164.88 1210.9 L1165.47 1210.9 L1166.05 1210.9 L1166.64 1210.9 L1167.23 1210.9 L1167.81 1210.9 L1168.4 1210.9 L1168.99 1210.9 L1169.57 1210.9 L1170.16 1210.9 L1170.75 1210.9 L1171.33 1210.9 L1171.92 1210.9 L1172.5 1210.9 L1173.09 1210.9 L1173.68 1210.9 L1174.26 1210.9 L1174.85 1210.9 L1175.44 1210.9 L1176.02 1210.9 L1176.61 1210.9 L1177.2 1210.9 L1177.78 1210.9 L1178.37 1210.9 L1178.96 1210.9 L1179.54 1210.9 L1180.13 1210.9 L1180.71 1210.9 L1181.3 1210.9 L1181.89 1210.9 L1182.47 1210.9 L1183.06 1210.9 L1183.65 1210.9 L1184.23 1210.9 L1184.82 1210.9 L1185.41 1210.9 L1185.99 1210.9 L1186.58 1210.9 L1187.16 1210.9 L1187.75 1210.9 L1188.34 1210.9 L1188.92 1210.9 L1189.51 1210.9 L1190.1 1210.9 L1190.68 1210.9 L1191.27 1210.9 L1191.86 1210.9 L1192.44 1210.9 L1193.03 1210.9 L1193.62 1210.9 L1194.2 1210.9 L1194.79 1210.9 L1195.37 1210.9 L1195.96 1210.9 L1196.55 1210.9 L1197.13 1210.9 L1197.72 1210.9 L1198.31 1210.9 L1198.89 1210.9 L1199.48 1210.9 L1200.07 1210.9 L1200.65 1210.9 L1201.24 1210.9 L1201.83 1210.9 L1202.41 1210.9 L1203 1210.9 L1203.58 1210.9 L1204.17 1210.9 L1204.76 1210.9 L1205.34 1210.9 L1205.93 1210.9 L1206.52 1210.9 L1207.1 1210.9 L1207.69 1210.9 L1208.28 1210.9 L1208.86 1210.9 L1209.45 1210.9 L1210.03 1210.9 L1210.62 1210.9 L1211.21 1210.9 L1211.79 1210.9 L1212.38 1210.9 L1212.97 1210.9 L1213.55 1210.9 L1214.14 1210.9 L1214.73 1210.9 L1215.31 1210.9 L1215.9 1210.9 L1216.49 1210.9 L1217.07 1210.9 L1217.66 1210.9 L1218.24 1210.9 L1218.83 1210.9 L1219.42 1210.9 L1220 1210.9 L1220.59 1210.9 L1221.18 1210.9 L1221.76 1210.9 L1222.35 1210.9 L1222.94 1210.9 L1223.52 1210.9 L1224.11 1210.9 L1224.7 1210.9 L1225.28 1210.9 L1225.87 1210.9 L1226.45 1210.9 L1227.04 1210.9 L1227.63 1210.9 L1228.21 1210.9 L1228.8 1210.9 L1229.39 1210.9 L1229.97 1210.9 L1230.56 1210.9 L1231.15 1210.9 L1231.73 1210.9 L1232.32 1210.9 L1232.91 1210.9 L1233.49 1210.9 L1234.08 1210.9 L1234.66 1210.9 L1235.25 1210.9 L1235.84 1210.9 L1236.42 1210.9 L1237.01 1210.9 L1237.6 1210.9 L1238.18 1210.9 L1238.77 1210.9 L1239.36 1210.9 L1239.94 1210.9 L1240.53 1210.9 L1241.11 1210.9 L1241.7 1210.9 L1242.29 1210.9 L1242.87 1210.9 L1243.46 1210.9 L1244.05 1210.9 L1244.63 1210.9 L1245.22 1210.9 L1245.81 1210.9 L1246.39 1210.9 L1246.98 1210.9 L1247.57 1210.9 L1248.15 1210.9 L1248.74 1210.9 L1249.32 1210.9 L1249.91 1210.9 L1250.5 1210.9 L1251.08 1210.9 L1251.67 1210.9 L1252.26 1210.9 L1252.84 1210.9 L1253.43 1210.9 L1254.02 1210.9 L1254.6 1210.9 L1255.19 1210.9 L1255.78 1210.9 L1256.36 1210.9 L1256.95 1210.9 L1257.53 1210.9 L1258.12 1210.9 L1258.71 1210.9 L1259.29 1210.9 L1259.88 1210.9 L1260.47 1210.9 L1261.05 1210.9 L1261.64 1210.9 L1262.23 1210.9 L1262.81 1210.9 L1263.4 1210.9 L1263.98 1210.9 L1264.57 1210.9 L1265.16 1210.9 L1265.74 1210.9 L1266.33 1210.9 L1266.92 1210.9 L1267.5 1210.9 L1268.09 1210.9 L1268.68 1210.9 L1269.26 1210.9 L1269.85 1210.9 L1270.44 1210.9 L1271.02 1210.9 L1271.61 1210.9 L1272.19 1210.9 L1272.78 1210.9 L1273.37 1210.9 L1273.95 1210.9 L1274.54 1210.9 L1275.13 1210.9 L1275.71 1210.9 L1276.3 1210.9 L1276.89 1210.9 L1277.47 1210.9 L1278.06 1210.9 L1278.65 1210.9 L1279.23 1210.9 L1279.82 1210.9 L1280.4 1210.9 L1280.99 1210.9 L1281.58 1210.9 L1282.16 1210.9 L1282.75 1210.9 L1283.34 1210.9 L1283.92 1210.9 L1284.51 1210.9 L1285.1 1210.9 L1285.68 1210.9 L1286.27 1210.9 L1286.86 1210.9 L1287.44 1210.9 L1288.03 1210.9 L1288.61 1210.9 L1289.2 1210.9 L1289.79 1210.9 L1290.37 1210.9 L1290.96 1210.9 L1291.55 1210.9 L1292.13 1210.9 L1292.72 1210.9 L1293.31 1210.9 L1293.89 1210.9 L1294.48 1210.9 L1295.06 1210.9 L1295.65 1210.9 L1296.24 1210.9 L1296.82 1210.9 L1297.41 1210.9 L1298 1210.9 L1298.58 1210.9 L1299.17 1210.9 L1299.76 1210.9 L1300.34 1210.9 L1300.93 1210.9 L1301.52 1210.9 L1302.1 1210.9 L1302.69 1210.9 L1303.27 1210.9 L1303.86 1210.9 L1304.45 1210.9 L1305.03 1210.9 L1305.62 1210.9 L1306.21 1210.9 L1306.79 1210.9 L1307.38 1210.9 L1307.97 1210.9 L1308.55 1210.9 L1309.14 1210.9 L1309.73 1210.9 L1310.31 1210.9 L1310.9 1210.9 L1311.48 1210.9 L1312.07 1210.9 L1312.66 1210.9 L1313.24 1210.9 L1313.83 1210.9 L1314.42 1210.9 L1315 1210.9 L1315.59 1210.9 L1316.18 1210.9 L1316.76 1210.9 L1317.35 1210.9 L1317.93 1210.9 L1318.52 1210.9 L1319.11 1210.9 L1319.69 1210.9 L1320.28 1210.9 L1320.87 1210.9 L1321.45 1210.9 L1322.04 1210.9 L1322.63 1210.9 L1323.21 1210.9 L1323.8 1210.9 L1324.39 1210.9 L1324.97 1210.9 L1325.56 1210.9 L1326.14 1210.9 L1326.73 1210.9 L1327.32 1210.9 L1327.9 1210.9 L1328.49 1210.9 L1329.08 1210.9 L1329.66 1210.9 L1330.25 1210.9 L1330.84 1210.9 L1331.42 1210.9 L1332.01 1210.9 L1332.6 1210.9 L1333.18 1210.9 L1333.77 1210.9 L1334.35 1210.9 L1334.94 1210.9 L1335.53 1210.9 L1336.11 1210.9 L1336.7 1210.9 L1337.29 1210.9 L1337.87 1210.9 L1338.46 1210.9 L1339.05 1210.9 L1339.63 1210.9 L1340.22 1210.9 L1340.8 1210.9 L1341.39 1210.9 L1341.98 1210.9 L1342.56 1210.9 L1343.15 1210.9 L1343.74 1210.9 L1344.32 1210.9 L1344.91 1210.9 L1345.5 1210.9 L1346.08 1210.9 L1346.67 1210.9 L1347.26 1210.9 L1347.84 1210.9 L1348.43 1210.9 L1349.01 1210.9 L1349.6 1210.9 L1350.19 1210.9 L1350.77 1210.9 L1351.36 1210.9 L1351.95 1210.9 L1352.53 1210.9 L1353.12 1210.9 L1353.71 1210.9 L1354.29 1210.9 L1354.88 1210.9 L1355.47 1210.9 L1356.05 1210.9 L1356.64 1210.9 L1357.22 1210.9 L1357.81 1210.9 L1358.4 1210.9 L1358.98 1210.9 L1359.57 1210.9 L1360.16 1210.9 L1360.74 1210.9 L1361.33 1210.9 L1361.92 1210.9 L1362.5 1210.9 L1363.09 1210.9 L1363.68 1210.9 L1364.26 1210.9 L1364.85 1210.9 L1365.43 1210.9 L1366.02 1210.9 L1366.61 1210.9 L1367.19 1210.9 L1367.78 1210.9 L1368.37 1210.9 L1368.95 1210.9 L1369.54 1210.9 L1370.13 1210.9 L1370.71 1210.9 L1371.3 1210.9 L1371.88 1210.9 L1372.47 1210.9 L1373.06 1210.9 L1373.64 1210.9 L1374.23 1210.9 L1374.82 1210.9 L1375.4 1210.9 L1375.99 1210.9 L1376.58 1210.9 L1377.16 1210.9 L1377.75 1210.9 L1378.34 1210.9 L1378.92 1210.9 L1379.51 1210.9 L1380.09 1210.9 L1380.68 1210.9 L1381.27 1210.9 L1381.85 1210.9 L1382.44 1210.9 L1383.03 1210.9 L1383.61 1210.9 L1384.2 1210.9 L1384.79 1210.9 L1385.37 1210.9 L1385.96 1210.9 L1386.55 1210.9 L1387.13 1210.9 L1387.72 1210.9 L1388.3 1210.9 L1388.89 1210.9 L1389.48 1210.9 L1390.06 1210.9 L1390.65 1210.9 L1391.24 1210.9 L1391.82 1210.9 L1392.41 1210.9 L1393 1210.9 L1393.58 1210.9 L1394.17 1210.9 L1394.75 1210.9 L1395.34 1210.9 L1395.93 1210.9 L1396.51 1210.9 L1397.1 1210.9 L1397.69 1210.9 L1398.27 1210.9 L1398.86 1210.9 L1399.45 1210.9 L1400.03 1210.9 L1400.62 1210.9 L1401.21 1210.9 L1401.79 1210.9 L1402.38 1210.9 L1402.96 1210.9 L1403.55 1210.9 L1404.14 1210.9 L1404.72 1210.9 L1405.31 1210.9 L1405.9 1210.9 L1406.48 1210.9 L1407.07 1210.9 L1407.66 1210.9 L1408.24 1210.9 L1408.83 1210.9 L1409.42 1210.9 L1410 1210.9 L1410.59 1210.9 L1411.17 1210.9 L1411.76 1210.9 L1412.35 1210.9 L1412.93 1210.9 L1413.52 1210.9 L1414.11 1210.9 L1414.69 1210.9 L1415.28 1210.9 L1415.87 1210.9 L1416.45 1210.9 L1417.04 1210.9 L1417.63 1210.9 L1418.21 1210.9 L1418.8 1210.9 L1419.38 1210.9 L1419.97 1210.9 L1420.56 1210.9 L1421.14 1210.9 L1421.73 1210.9 L1422.32 1210.9 L1422.9 1210.9 L1423.49 1210.9 L1424.08 1210.9 L1424.66 1210.9 L1425.25 1210.9 L1425.83 1210.9 L1426.42 1210.9 L1427.01 1210.9 L1427.59 1210.9 L1428.18 1210.9 L1428.77 1210.9 L1429.35 1210.9 L1429.94 1210.9 L1430.53 1210.9 L1431.11 1210.9 L1431.7 1210.9 L1432.29 1210.9 L1432.87 1210.9 L1433.46 1210.9 L1434.04 1210.9 L1434.63 1210.9 L1435.22 1210.9 L1435.8 1210.9 L1436.39 1210.9 L1436.98 1210.9 L1437.56 1210.9 L1438.15 1210.9 L1438.74 1210.9 L1439.32 1210.9 L1439.91 1210.9 L1440.5 1210.9 L1441.08 1210.9 L1441.67 1210.9 L1442.25 1210.9 L1442.84 1210.9 L1443.43 1210.9 L1444.01 1210.9 L1444.6 1210.9 L1445.19 1210.9 L1445.77 1210.9 L1446.36 1210.9 L1446.95 1210.9 L1447.53 1210.9 L1448.12 1210.9 L1448.7 1210.9 L1449.29 1210.9 L1449.88 1210.9 L1450.46 1210.9 L1451.05 1210.9 L1451.64 1210.9 L1452.22 1210.9 L1452.81 1210.9 L1453.4 1210.9 L1453.98 1210.9 L1454.57 1210.9 L1455.16 1210.9 L1455.74 1210.9 L1456.33 1210.9 L1456.91 1210.9 L1457.5 1210.9 L1458.09 1210.9 L1458.67 1210.9 L1459.26 1210.9 L1459.85 1210.9 L1460.43 1210.9 L1461.02 1210.9 L1461.61 1210.9 L1462.19 1210.9 L1462.78 1210.9 L1463.37 1210.9 L1463.95 1210.9 L1464.54 1210.9 L1465.12 1210.9 L1465.71 1210.9 L1466.3 1210.9 L1466.88 1210.9 L1467.47 1210.9 L1468.06 1210.9 L1468.64 1210.9 L1469.23 1210.9 L1469.82 1210.9 L1470.4 1210.9 L1470.99 1210.9 L1471.57 1210.9 L1472.16 1210.9 L1472.75 1210.9 L1473.33 1210.9 L1473.92 1210.9 L1474.51 1210.9 L1475.09 1210.9 L1475.68 1210.9 L1476.27 1210.9 L1476.85 1210.9 L1477.44 1210.9 L1478.03 1210.9 L1478.61 1210.9 L1479.2 1210.9 L1479.78 1210.9 L1480.37 1210.9 L1480.96 1210.9 L1481.54 1210.9 L1482.13 1210.9 L1482.72 1210.9 L1483.3 1210.9 L1483.89 1210.9 L1484.48 1210.9 L1485.06 1210.9 L1485.65 1210.9 L1486.24 1210.9 L1486.82 1210.9 L1487.41 1210.9 L1487.99 1210.9 L1488.58 1210.9 L1489.17 1210.9 L1489.75 1210.9 L1490.34 1210.9 L1490.93 1210.9 L1491.51 1210.9 L1492.1 1210.9 L1492.69 1210.9 L1493.27 1210.9 L1493.86 1210.9 L1494.45 1210.9 L1495.03 1210.9 L1495.62 1210.9 L1496.2 1210.9 L1496.79 1210.9 L1497.38 1210.9 L1497.96 1210.9 L1498.55 1210.9 L1499.14 1210.9 L1499.72 1210.9 L1500.31 1210.9 L1500.9 1210.9 L1501.48 1210.9 L1502.07 1210.9 L1502.65 1210.9 L1503.24 1210.9 L1503.83 1210.9 L1504.41 1210.9 L1505 1210.9 L1505.59 1210.9 L1506.17 1210.9 L1506.76 1210.9 L1507.35 1210.9 L1507.93 1210.9 L1508.52 1210.9 L1509.11 1210.9 L1509.69 1210.9 L1510.28 1210.9 L1510.86 1210.9 L1511.45 1210.9 L1512.04 1210.9 L1512.62 1210.9 L1513.21 1210.9 L1513.8 1210.9 L1514.38 1210.9 L1514.97 1210.9 L1515.56 1210.9 L1516.14 1210.9 L1516.73 1210.9 L1517.32 1210.9 L1517.9 1210.9 L1518.49 1210.9 L1519.07 1210.9 L1519.66 1210.9 L1520.25 1210.9 L1520.83 1210.9 L1521.42 1210.9 L1522.01 1210.9 L1522.59 1210.9 L1523.18 1210.9 L1523.77 1210.9 L1524.35 1210.9 L1524.94 1210.9 L1525.52 1210.9 L1526.11 1210.9 L1526.7 1210.9 L1527.28 1210.9 L1527.87 1210.9 L1528.46 1210.9 L1529.04 1210.9 L1529.63 1210.9 L1530.22 1210.9 L1530.8 1210.9 L1531.39 1210.9 L1531.98 1210.9 L1532.56 1210.9 L1533.15 1210.9 L1533.73 1210.9 L1534.32 1210.9 L1534.91 1210.9 L1535.49 1210.9 L1536.08 1210.9 L1536.67 1210.9 L1537.25 1210.9 L1537.84 1210.9 L1538.43 1210.9 L1539.01 1210.9 L1539.6 1210.9 L1540.19 1210.9 L1540.77 1210.9 L1541.36 1210.9 L1541.94 1210.9 L1542.53 1210.9 L1543.12 1210.9 L1543.7 1210.9 L1544.29 1210.9 L1544.88 1210.9 L1545.46 1210.9 L1546.05 1210.9 L1546.64 1210.9 L1547.22 1210.9 L1547.81 1210.9 L1548.4 1210.9 L1548.98 1210.9 L1549.57 1210.9 L1550.15 1210.9 L1550.74 1210.9 L1551.33 1210.9 L1551.91 1210.9 L1552.5 1210.9 L1553.09 1210.9 L1553.67 1210.9 L1554.26 1210.9 L1554.85 1210.9 L1555.43 1210.9 L1556.02 1210.9 L1556.6 1210.9 L1557.19 1210.9 L1557.78 1210.9 L1558.36 1210.9 L1558.95 1210.9 L1559.54 1210.9 L1560.12 1210.9 L1560.71 1210.9 L1561.3 1210.9 L1561.88 1210.9 L1562.47 1210.9 L1563.06 1210.9 L1563.64 1210.9 L1564.23 1210.9 L1564.81 1210.9 L1565.4 1210.9 L1565.99 1210.9 L1566.57 1210.9 L1567.16 1210.9 L1567.75 1210.9 L1568.33 1210.9 L1568.92 1210.9 L1569.51 1210.9 L1570.09 1210.9 L1570.68 1210.9 L1571.27 1210.9 L1571.85 1210.9 L1572.44 1210.9 L1573.02 1210.9 L1573.61 1210.9 L1574.2 1210.9 L1574.78 1210.9 L1575.37 1210.9 L1575.96 1210.9 L1576.54 1210.9 L1577.13 1210.9 L1577.72 1210.9 L1578.3 1210.9 L1578.89 1210.9 L1579.47 1210.9 L1580.06 1210.9 L1580.65 1210.9 L1581.23 1210.9 L1581.82 1210.9 L1582.41 1210.9 L1582.99 1210.9 L1583.58 1210.9 L1584.17 1210.9 L1584.75 1210.9 L1585.34 1210.9 L1585.93 1210.9 L1586.51 1210.9 L1587.1 1210.9 L1587.68 1210.9 L1588.27 1210.9 L1588.86 1210.9 L1589.44 1210.9 L1590.03 1210.9 L1590.62 1210.9 L1591.2 1210.9 L1591.79 1210.9 L1592.38 1210.9 L1592.96 1210.9 L1593.55 1210.9 L1594.14 1210.9 L1594.72 1210.9 L1595.31 1210.9 L1595.89 1210.9 L1596.48 1210.9 L1597.07 1210.9 L1597.65 1210.9 L1598.24 1210.9 L1598.83 1210.9 L1599.41 1210.9 L1600 1210.9 L1600.59 1210.9 L1601.17 1210.9 L1601.76 1210.9 L1602.34 1210.9 L1602.93 1210.9 L1603.52 1210.9 L1604.1 1210.9 L1604.69 1210.9 L1605.28 1210.9 L1605.86 1210.9 L1606.45 1210.9 L1607.04 1210.9 L1607.62 1210.9 L1608.21 1210.9 L1608.8 1210.9 L1609.38 1210.9 L1609.97 1210.9 L1610.55 1210.9 L1611.14 1210.9 L1611.73 1210.9 L1612.31 1210.9 L1612.9 1210.9 L1613.49 1210.9 L1614.07 1210.9 L1614.66 1210.9 L1615.25 1210.9 L1615.83 1210.9 L1616.42 1210.9 L1617.01 1210.9 L1617.59 1210.9 L1618.18 1210.9 L1618.76 1210.9 L1619.35 1210.9 L1619.94 1210.9 L1620.52 1210.9 L1621.11 1210.9 L1621.7 1210.9 L1622.28 1210.9 L1622.87 1210.9 L1623.46 1210.9 L1624.04 1210.9 L1624.63 1210.9 L1625.22 1210.9 L1625.8 1210.9 L1626.39 1210.9 L1626.97 1210.9 L1627.56 1210.9 L1628.15 1210.9 L1628.73 1210.9 L1629.32 1210.9 L1629.91 1210.9 L1630.49 1210.9 L1631.08 1210.9 L1631.67 1210.9 L1632.25 1210.9 L1632.84 1210.9 L1633.42 1210.9 L1634.01 1210.9 L1634.6 1210.9 L1635.18 1210.9 L1635.77 1210.9 L1636.36 1210.9 L1636.94 1210.9 L1637.53 1210.9 L1638.12 1210.9 L1638.7 1210.9 L1639.29 1210.9 L1639.88 1210.9 L1640.46 1210.9 L1641.05 1210.9 L1641.63 1210.9 L1642.22 1210.9 L1642.81 1210.9 L1643.39 1210.9 L1643.98 1210.9 L1644.57 1210.9 L1645.15 1210.9 L1645.74 1210.9 L1646.33 1210.9 L1646.91 1210.9 L1647.5 1210.9 L1648.09 1210.9 L1648.67 1210.9 L1649.26 1210.9 L1649.84 1210.9 L1650.43 1210.9 L1651.02 1210.9 L1651.6 1210.9 L1652.19 1210.9 L1652.78 1210.9 L1653.36 1210.9 L1653.95 1210.9 L1654.54 1210.9 L1655.12 1210.9 L1655.71 1210.9 L1656.29 1210.9 L1656.88 1210.9 L1657.47 1210.9 L1658.05 1210.9 L1658.64 1210.9 L1659.23 1210.9 L1659.81 1210.9 L1660.4 1210.9 L1660.99 1210.9 L1661.57 1210.9 L1662.16 1210.9 L1662.75 1210.9 L1663.33 1210.9 L1663.92 1210.9 L1664.5 1210.9 L1665.09 1210.9 L1665.68 1210.9 L1666.26 1210.9 L1666.85 1210.9 L1667.44 1210.9 L1668.02 1210.9 L1668.61 1210.9 L1669.2 1210.9 L1669.78 1210.9 L1670.37 1210.9 L1670.96 1210.9 L1671.54 1210.9 L1672.13 1210.9 L1672.71 1210.9 L1673.3 1210.9 L1673.89 1210.9 L1674.47 1210.9 L1675.06 1210.9 L1675.65 1210.9 L1676.23 1210.9 L1676.82 1210.9 L1677.41 1210.9 L1677.99 1210.9 L1678.58 1210.9 L1679.17 1210.9 L1679.75 1210.9 L1680.34 1210.9 L1680.92 1210.9 L1681.51 1210.9 L1682.1 1210.9 L1682.68 1210.9 L1683.27 1210.9 L1683.86 1210.9 L1684.44 1210.9 L1685.03 1210.9 L1685.62 1210.9 L1686.2 1210.9 L1686.79 1210.9 L1687.37 1210.9 L1687.96 1210.9 L1688.55 1210.9 L1689.13 1210.9 L1689.72 1210.9 L1690.31 1210.9 L1690.89 1210.9 L1691.48 1210.9 L1692.07 1210.9 L1692.65 1210.9 L1693.24 1210.9 L1693.83 1210.9 L1694.41 1210.9 L1695 1210.9 L1695.58 1210.9 L1696.17 1210.9 L1696.76 1210.9 L1697.34 1210.9 L1697.93 1210.9 L1698.52 1210.9 L1699.1 1210.9 L1699.69 1210.9 L1700.28 1210.9 L1700.86 1210.9 L1701.45 1210.9 L1702.04 1210.9 L1702.62 1210.9 L1703.21 1210.9 L1703.79 1210.9 L1704.38 1210.9 L1704.97 1210.9 L1705.55 1210.9 L1706.14 1210.9 L1706.73 1210.9 L1707.31 1210.9 L1707.9 1210.9 L1708.49 1210.9 L1709.07 1210.9 L1709.66 1210.9 L1710.24 1210.9 L1710.83 1210.9 L1711.42 1210.9 L1712 1210.9 L1712.59 1210.9 L1713.18 1210.9 L1713.76 1210.9 L1714.35 1210.9 L1714.94 1210.9 L1715.52 1210.9 L1716.11 1210.9 L1716.7 1210.9 L1717.28 1210.9 L1717.87 1210.9 L1718.45 1210.9 L1719.04 1210.9 L1719.63 1210.9 L1720.21 1210.9 L1720.8 1210.9 L1721.39 1210.9 L1721.97 1210.9 L1722.56 1210.9 L1723.15 1210.9 L1723.73 1210.9 L1724.32 1210.9 L1724.91 1210.9 L1725.49 1210.9 L1726.08 1210.9 L1726.66 1210.9 L1727.25 1210.9 L1727.84 1210.9 L1728.42 1210.9 L1729.01 1210.9 L1729.6 1210.9 L1730.18 1210.9 L1730.77 1210.9 L1731.36 1210.9 L1731.94 1210.9 L1732.53 1210.9 L1733.11 1210.9 L1733.7 1210.9 L1734.29 1210.9 L1734.87 1210.9 L1735.46 1210.9 L1736.05 1210.9 L1736.63 1210.9 L1737.22 1210.9 L1737.81 1210.9 L1738.39 1210.9 L1738.98 1210.9 L1739.57 1210.9 L1740.15 1210.9 L1740.74 1210.9 L1741.32 1210.9 L1741.91 1210.9 L1742.5 1210.9 L1743.08 1210.9 L1743.67 1210.9 L1744.26 1210.9 L1744.84 1210.9 L1745.43 1210.9 L1746.02 1210.9 L1746.6 1210.9 L1747.19 1210.9 L1747.78 1210.9 L1748.36 1210.9 L1748.95 1210.9 L1749.53 1210.9 L1750.12 1210.9 L1750.71 1210.9 L1751.29 1210.9 L1751.88 1210.9 L1752.47 1210.9 L1753.05 1210.9 L1753.64 1210.9 L1754.23 1210.9 L1754.81 1210.9 L1755.4 1210.9 L1755.99 1210.9 L1756.57 1210.9 L1757.16 1210.9 L1757.74 1210.9 L1758.33 1210.9 L1758.92 1210.9 L1759.5 1210.9 L1760.09 1210.9 L1760.68 1210.9 L1761.26 1210.9 L1761.85 1210.9 L1762.44 1210.9 L1763.02 1210.9 L1763.61 1210.9 L1764.19 1210.9 L1764.78 1210.9 L1765.37 1210.9 L1765.95 1210.9 L1766.54 1210.9 L1767.13 1210.9 L1767.71 1210.9 L1768.3 1210.9 L1768.89 1210.9 L1769.47 1210.9 L1770.06 1210.9 L1770.65 1210.9 L1771.23 1210.9 L1771.82 1210.9 L1772.4 1210.9 L1772.99 1210.9 L1773.58 1210.9 L1774.16 1210.9 L1774.75 1210.9 L1775.34 1210.9 L1775.92 1210.9 L1776.51 1210.9 L1777.1 1210.9 L1777.68 1210.9 L1778.27 1210.9 L1778.86 1210.9 L1779.44 1210.9 L1780.03 1210.9 L1780.61 1210.9 L1781.2 1210.9 L1781.79 1210.9 L1782.37 1210.9 L1782.96 1210.9 L1783.55 1210.9 L1784.13 1210.9 L1784.72 1210.9 L1785.31 1210.9 L1785.89 1210.9 L1786.48 1210.9 L1787.06 1210.9 L1787.65 1210.9 L1788.24 1210.9 L1788.82 1210.9 L1789.41 1210.9 L1790 1210.9 L1790.58 1210.9 L1791.17 1210.9 L1791.76 1210.9 L1792.34 1210.9 L1792.93 1210.9 L1793.52 1210.9 L1794.1 1210.9 L1794.69 1210.9 L1795.27 1210.9 L1795.86 1210.9 L1796.45 1210.9 L1797.03 1210.9 L1797.62 1210.9 L1798.21 1210.9 L1798.79 1210.9 L1799.38 1210.9 L1799.97 1210.9 L1800.55 1210.9 L1801.14 1210.9 L1801.73 1210.9 L1802.31 1210.9 L1802.9 1210.9 L1803.48 1210.9 L1804.07 1210.9 L1804.66 1210.9 L1805.24 1210.9 L1805.83 1210.9 L1806.42 1210.9 L1807 1210.9 L1807.59 1210.9 L1808.18 1210.9 L1808.76 1210.9 L1809.35 1210.9 L1809.94 1210.9 L1810.52 1210.9 L1811.11 1210.9 L1811.69 1210.9 L1812.28 1210.9 L1812.87 1210.9 L1813.45 1210.9 L1814.04 1210.9 L1814.63 1210.9 L1815.21 1210.9 L1815.8 1210.9 L1816.39 1210.9 L1816.97 1210.9 L1817.56 1210.9 L1818.14 1210.9 L1818.73 1210.9 L1819.32 1210.9 L1819.9 1210.9 L1820.49 1210.9 L1821.08 1210.9 L1821.66 1210.9 L1822.25 1210.9 L1822.84 1210.9 L1823.42 1210.9 L1824.01 1210.9 L1824.6 1210.9 L1825.18 1210.9 L1825.77 1210.9 L1826.35 1210.9 L1826.94 1210.9 L1827.53 1210.9 L1828.11 1210.9 L1828.7 1210.9 L1829.29 1210.9 L1829.87 1210.9 L1830.46 1210.9 L1831.05 1210.9 L1831.63 1210.9 L1832.22 1210.9 L1832.81 1210.9 L1833.39 1210.9 L1833.98 1210.9 L1834.56 1210.9 L1835.15 1210.9 L1835.74 1210.9 L1836.32 1210.9 L1836.91 1210.9 L1837.5 1210.9 L1838.08 1210.9 L1838.67 1210.9 L1839.26 1210.9 L1839.84 1210.9 L1840.43 1210.9 L1841.01 1210.9 L1841.6 1210.9 L1842.19 1210.9 L1842.77 1210.9 L1843.36 1210.9 L1843.95 1210.9 L1844.53 1210.9 L1845.12 1210.9 L1845.71 1210.9 L1846.29 1210.9 L1846.88 1210.9 L1847.47 1210.9 L1848.05 1210.9 L1848.64 1210.9 L1849.22 1210.9 L1849.81 1210.9 L1850.4 1210.9 L1850.98 1210.9 L1851.57 1210.9 L1852.16 1210.9 L1852.74 1210.9 L1853.33 1210.9 L1853.92 1210.9 L1854.5 1210.9 L1855.09 1210.9 L1855.68 1210.9 L1856.26 1210.9 L1856.85 1210.9 L1857.43 1210.9 L1858.02 1210.9 L1858.61 1210.9 L1859.19 1210.9 L1859.78 1210.9 L1860.37 1210.9 L1860.95 1210.9 L1861.54 1210.9 L1862.13 1210.9 L1862.71 1210.9 L1863.3 1210.9 L1863.88 1210.9 L1864.47 1210.9 L1865.06 1210.9 L1865.64 1210.9 L1866.23 1210.9 L1866.82 1210.9 L1867.4 1210.9 L1867.99 1210.9 L1868.58 1210.9 L1869.16 1210.9 L1869.75 1210.9 L1870.34 1210.9 L1870.92 1210.9 L1871.51 1210.9 L1872.09 1210.9 L1872.68 1210.9 L1873.27 1210.9 L1873.85 1210.9 L1874.44 1210.9 L1875.03 1210.9 L1875.61 1210.9 L1876.2 1210.9 L1876.79 1210.9 L1877.37 1210.9 L1877.96 1210.9 L1878.55 1210.9 L1879.13 1210.9 L1879.72 1210.9 L1880.3 1210.9 L1880.89 1210.9 L1881.48 1210.9 L1882.06 1210.9 L1882.65 1210.9 L1883.24 1210.9 L1883.82 1210.9 L1884.41 1210.9 L1885 1210.9 L1885.58 1210.9 L1886.17 1210.9 L1886.76 1210.9 L1887.34 1210.9 L1887.93 1210.9 L1888.51 1210.9 L1889.1 1210.9 L1889.69 1210.9 L1890.27 1210.9 L1890.86 1210.9 L1891.45 1210.9 L1892.03 1210.9 L1892.62 1210.9 L1893.21 1210.9 L1893.79 1210.9 L1894.38 1210.9 L1894.96 1210.9 L1895.55 1210.9 L1896.14 1210.9 L1896.72 1210.9 L1897.31 1210.9 L1897.9 1210.9 L1898.48 1210.9 L1899.07 1210.9 L1899.66 1210.9 L1900.24 1210.9 L1900.83 1210.9 L1901.42 1210.9 L1902 1210.9 L1902.59 1210.9 L1903.17 1210.9 L1903.76 1210.9 L1904.35 1210.9 L1904.93 1210.9 L1905.52 1210.9 L1906.11 1210.9 L1906.69 1210.9 L1907.28 1210.9 L1907.87 1210.9 L1908.45 1210.9 L1909.04 1210.9 L1909.63 1210.9 L1910.21 1210.9 L1910.8 1210.9 L1911.38 1210.9 L1911.97 1210.9 L1912.56 1210.9 L1913.14 1210.9 L1913.73 1210.9 L1914.32 1210.9 L1914.9 1210.9 L1915.49 1210.9 L1916.08 1210.9 L1916.66 1210.9 L1917.25 1210.9 L1917.83 1210.9 L1918.42 1210.9 L1919.01 1210.9 L1919.59 1210.9 L1920.18 1210.9 L1920.77 1210.9 L1921.35 1210.9 L1921.94 1210.9 L1922.53 1210.9 L1923.11 1210.9 L1923.7 1210.9 L1924.29 1210.9 L1924.87 1210.9 L1925.46 1210.9 L1926.04 1210.9 L1926.63 1210.9 L1927.22 1210.9 L1927.8 1210.9 L1928.39 1210.9 L1928.98 1210.9 L1929.56 1210.9 L1930.15 1210.9 L1930.74 1210.9 L1931.32 1210.9 L1931.91 1210.9 L1932.5 1210.9 L1933.08 1210.9 L1933.67 1210.9 L1934.25 1210.9 L1934.84 1210.9 L1935.43 1210.9 L1936.01 1210.9 L1936.6 1210.9 L1937.19 1210.9 L1937.77 1210.9 L1938.36 1210.9 L1938.95 1210.9 L1939.53 1210.9 L1940.12 1210.9 L1940.71 1210.9 L1941.29 1210.9 L1941.88 1210.9 L1942.46 1210.9 L1943.05 1210.9 L1943.64 1210.9 L1944.22 1210.9 L1944.81 1210.9 L1945.4 1210.9 L1945.98 1210.9 L1946.57 1210.9 L1947.16 1210.9 L1947.74 1210.9 L1948.33 1210.9 L1948.91 1210.9 L1949.5 1210.9 L1950.09 1210.9 L1950.67 1210.9 L1951.26 1210.9 L1951.85 1210.9 L1952.43 1210.9 L1953.02 1210.9 L1953.61 1210.9 L1954.19 1210.9 L1954.78 1210.9 L1955.37 1210.9 L1955.95 1210.9 L1956.54 1210.9 L1957.12 1210.9 L1957.71 1210.9 L1958.3 1210.9 L1958.88 1210.9 L1959.47 1210.9 L1960.06 1210.9 L1960.64 1210.9 L1961.23 1210.9 L1961.82 1210.9 L1962.4 1210.9 L1962.99 1210.9 L1963.58 1210.9 L1964.16 1210.9 L1964.75 1210.9 L1965.33 1210.9 L1965.92 1210.9 L1966.51 1210.9 L1967.09 1210.9 L1967.68 1210.9 L1968.27 1210.9 L1968.85 1210.9 L1969.44 1210.9 L1970.03 1210.9 L1970.61 1210.9 L1971.2 1210.9 L1971.78 1210.9 L1972.37 1210.9 L1972.96 1210.9 L1973.54 1210.9 L1974.13 1210.9 L1974.72 1210.9 L1975.3 1210.9 L1975.89 1210.9 L1976.48 1210.9 L1977.06 1210.9 L1977.65 1210.9 L1978.24 1210.9 L1978.82 1210.9 L1979.41 1210.9 L1979.99 1210.9 L1980.58 1210.9 L1981.17 1210.9 L1981.75 1210.9 L1982.34 1210.9 L1982.93 1210.9 L1983.51 1210.9 L1984.1 1210.9 L1984.69 1210.9 L1985.27 1210.9 L1985.86 1210.9 L1986.45 1210.9 L1987.03 1210.9 L1987.62 1210.9 L1988.2 1210.9 L1988.79 1210.9 L1989.38 1210.9 L1989.96 1210.9 L1990.55 1210.9 L1991.14 1210.9 L1991.72 1210.9 L1992.31 1210.9 L1992.9 1210.9 L1993.48 1210.9 L1994.07 1210.9 L1994.65 1210.9 L1995.24 1210.9 L1995.83 1210.9 L1996.41 1210.9 L1997 1210.9 L1997.59 1210.9 L1998.17 1210.9 L1998.76 1210.9 L1999.35 1210.9 L1999.93 1210.9 L2000.52 1210.9 L2001.11 1210.9 L2001.69 1210.9 L2002.28 1210.9 L2002.86 1210.9 L2003.45 1210.9 L2004.04 1210.9 L2004.62 1210.9 L2005.21 1210.9 L2005.8 1210.9 L2006.38 1210.9 L2006.97 1210.9 L2007.56 1210.9 L2008.14 1210.9 L2008.73 1210.9 L2009.32 1210.9 L2009.9 1210.9 L2010.49 1210.9 L2011.07 1210.9 L2011.66 1210.9 L2012.25 1210.9 L2012.83 1210.9 L2013.42 1210.9 L2014.01 1210.9 L2014.59 1210.9 L2015.18 1210.9 L2015.77 1210.9 L2016.35 1210.9 L2016.94 1210.9 L2017.53 1210.9 L2018.11 1210.9 L2018.7 1210.9 L2019.28 1210.9 L2019.87 1210.9 L2020.46 1210.9 L2021.04 1210.9 L2021.63 1210.9 L2022.22 1210.9 L2022.8 1210.9 L2023.39 1210.9 L2023.98 1210.9 L2024.56 1210.9 L2025.15 1210.9 L2025.73 1210.9 L2026.32 1210.9 L2026.91 1210.9 L2027.49 1210.9 L2028.08 1210.9 L2028.67 1210.9 L2029.25 1210.9 L2029.84 1210.9 L2030.43 1210.9 L2031.01 1210.9 L2031.6 1210.9 L2032.19 1210.9 L2032.77 1210.9 L2033.36 1210.9 L2033.94 1210.9 L2034.53 1210.9 L2035.12 1210.9 L2035.7 1210.9 L2036.29 1210.9 L2036.88 1210.9 L2037.46 1210.9 L2038.05 1210.9 L2038.64 1210.9 L2039.22 1210.9 L2039.81 1210.9 L2040.4 1210.9 L2040.98 1210.9 L2041.57 1210.9 L2042.15 1210.9 L2042.74 1210.9 L2043.33 1210.9 L2043.91 1210.9 L2044.5 1210.9 L2045.09 1210.9 L2045.67 1210.9 L2046.26 1210.9 L2046.85 1210.9 L2047.43 1210.9 L2048.02 1210.9 L2048.6 1210.9 L2049.19 1210.9 L2049.78 1210.9 L2050.36 1210.9 L2050.95 1210.9 L2051.54 1210.9 L2052.12 1210.9 L2052.71 1210.9 L2053.3 1210.9 L2053.88 1210.9 L2054.47 1210.9 L2055.06 1210.9 L2055.64 1210.9 L2056.23 1210.9 L2056.81 1210.9 L2057.4 1210.9 L2057.99 1210.9 L2058.57 1210.9 L2059.16 1210.9 L2059.75 1210.9 L2060.33 1210.9 L2060.92 1210.9 L2061.51 1210.9 L2062.09 1210.9 L2062.68 1210.9 L2063.27 1210.9 L2063.85 1210.9 L2064.44 1210.9 L2065.02 1210.9 L2065.61 1210.9 L2066.2 1210.9 L2066.78 1210.9 L2067.37 1210.9 L2067.96 1210.9 L2068.54 1210.9 L2069.13 1210.9 L2069.72 1210.9 L2070.3 1210.9 L2070.89 1210.9 L2071.48 1210.9 L2072.06 1210.9 L2072.65 1210.9 L2073.23 1210.9 L2073.82 1210.9 L2074.41 1210.9 L2074.99 1210.9 L2075.58 1210.9 L2076.17 1210.9 L2076.75 1210.9 L2077.34 1210.9 L2077.93 1210.9 L2078.51 1210.9 L2079.1 1210.9 L2079.68 1210.9 L2080.27 1210.9 L2080.86 1210.9 L2081.44 1210.9 L2082.03 1210.9 L2082.62 1210.9 L2083.2 1210.9 L2083.79 1210.9 L2084.38 1210.9 L2084.96 1210.9 L2085.55 1210.9 L2086.14 1210.9 L2086.72 1210.9 L2087.31 1210.9 L2087.89 1210.9 L2088.48 1210.9 L2089.07 1210.9 L2089.65 1210.9 L2090.24 1210.9 L2090.83 1210.9 L2091.41 1210.9 L2092 1210.9 L2092.59 1210.9 L2093.17 1210.9 L2093.76 1210.9 L2094.35 1210.9 L2094.93 1210.9 L2095.52 1210.9 L2096.1 1210.9 L2096.69 1210.9 L2097.28 1210.9 L2097.86 1210.9 L2098.45 1210.9 L2099.04 1210.9 L2099.62 1210.9 L2100.21 1210.9 L2100.8 1210.9 L2101.38 1210.9 L2101.97 1210.9 L2102.55 1210.9 L2103.14 1210.9 L2103.73 1210.9 L2104.31 1210.9 L2104.9 1210.9 L2105.49 1210.9 L2106.07 1210.9 L2106.66 1210.9 L2107.25 1210.9 L2107.83 1210.9 L2108.42 1210.9 L2109.01 1210.9 L2109.59 1210.9 L2110.18 1210.9 L2110.76 1210.9 L2111.35 1210.9 L2111.94 1210.9 L2112.52 1210.9 L2113.11 1210.9 L2113.7 1210.9 L2114.28 1210.9 L2114.87 1210.9 L2115.46 1210.9 L2116.04 1210.9 L2116.63 1210.9 L2117.22 1210.9 L2117.8 1210.9 L2118.39 1210.9 L2118.97 1210.9 L2119.56 1210.9 L2120.15 1210.9 L2120.73 1210.9 L2121.32 1210.9 L2121.91 1210.9 L2122.49 1210.9 L2123.08 1210.9 L2123.67 1210.9 L2124.25 1210.9 L2124.84 1210.9 L2125.42 1210.9 L2126.01 1210.9 L2126.6 1210.9 L2127.18 1210.9 L2127.77 1210.9 L2128.36 1210.9 L2128.94 1210.9 L2129.53 1210.9 L2130.12 1210.9 L2130.7 1210.9 L2131.29 1210.9 L2131.88 1210.9 L2132.46 1210.9 L2133.05 1210.9 L2133.63 1210.9 L2134.22 1210.9 L2134.81 1210.9 L2135.39 1210.9 L2135.98 1210.9 L2136.57 1210.9 L2137.15 1210.9 L2137.74 1210.9 L2138.33 1210.9 L2138.91 1210.9 L2139.5 1210.9 L2140.09 1210.9 L2140.67 1210.9 L2141.26 1210.9 L2141.84 1210.9 L2142.43 1210.9 L2143.02 1210.9 L2143.6 1210.9 L2144.19 1210.9 L2144.78 1210.9 L2145.36 1210.9 L2145.95 1210.9 L2146.54 1210.9 L2147.12 1210.9 L2147.71 1210.9 L2148.3 1210.9 L2148.88 1210.9 L2149.47 1210.9 L2150.05 1210.9 L2150.64 1210.9 L2151.23 1210.9 L2151.81 1210.9 L2152.4 1210.9 L2152.99 1210.9 L2153.57 1210.9 L2154.16 1210.9 L2154.75 1210.9 L2155.33 1210.9 L2155.92 1210.9 L2156.5 1210.9 L2157.09 1210.9 L2157.68 1210.9 L2158.26 1210.9 L2158.26 1210.78 L2157.68 1210.78 L2157.09 1210.78 L2156.5 1210.78 L2155.92 1210.78 L2155.33 1210.78 L2154.75 1210.78 L2154.16 1210.78 L2153.57 1210.78 L2152.99 1210.78 L2152.4 1210.78 L2151.81 1210.78 L2151.23 1210.78 L2150.64 1210.78 L2150.05 1210.78 L2149.47 1210.78 L2148.88 1210.78 L2148.3 1210.78 L2147.71 1210.78 L2147.12 1210.78 L2146.54 1210.78 L2145.95 1210.78 L2145.36 1210.78 L2144.78 1210.78 L2144.19 1210.78 L2143.6 1210.78 L2143.02 1210.78 L2142.43 1210.78 L2141.84 1210.78 L2141.26 1210.78 L2140.67 1210.78 L2140.09 1210.78 L2139.5 1210.78 L2138.91 1210.78 L2138.33 1210.78 L2137.74 1210.78 L2137.15 1210.78 L2136.57 1210.78 L2135.98 1210.78 L2135.39 1210.78 L2134.81 1210.78 L2134.22 1210.78 L2133.63 1210.78 L2133.05 1210.78 L2132.46 1210.78 L2131.88 1210.78 L2131.29 1210.78 L2130.7 1210.78 L2130.12 1210.78 L2129.53 1210.78 L2128.94 1210.78 L2128.36 1210.78 L2127.77 1210.78 L2127.18 1210.78 L2126.6 1210.78 L2126.01 1210.78 L2125.42 1210.78 L2124.84 1210.78 L2124.25 1210.78 L2123.67 1210.78 L2123.08 1210.78 L2122.49 1210.78 L2121.91 1210.78 L2121.32 1210.78 L2120.73 1210.78 L2120.15 1210.78 L2119.56 1210.78 L2118.97 1210.78 L2118.39 1210.78 L2117.8 1210.78 L2117.22 1210.78 L2116.63 1210.78 L2116.04 1210.78 L2115.46 1210.78 L2114.87 1210.78 L2114.28 1210.78 L2113.7 1210.78 L2113.11 1210.78 L2112.52 1210.78 L2111.94 1210.78 L2111.35 1210.78 L2110.76 1210.78 L2110.18 1210.78 L2109.59 1210.78 L2109.01 1210.78 L2108.42 1210.78 L2107.83 1210.78 L2107.25 1210.78 L2106.66 1210.78 L2106.07 1210.78 L2105.49 1210.78 L2104.9 1210.78 L2104.31 1210.78 L2103.73 1210.78 L2103.14 1210.78 L2102.55 1210.78 L2101.97 1210.78 L2101.38 1210.78 L2100.8 1210.78 L2100.21 1210.78 L2099.62 1210.78 L2099.04 1210.78 L2098.45 1210.78 L2097.86 1210.78 L2097.28 1210.78 L2096.69 1210.78 L2096.1 1210.78 L2095.52 1210.78 L2094.93 1210.78 L2094.35 1210.78 L2093.76 1210.78 L2093.17 1210.78 L2092.59 1210.78 L2092 1210.78 L2091.41 1210.78 L2090.83 1210.78 L2090.24 1210.78 L2089.65 1210.78 L2089.07 1210.78 L2088.48 1210.78 L2087.89 1210.78 L2087.31 1210.78 L2086.72 1210.78 L2086.14 1210.78 L2085.55 1210.78 L2084.96 1210.78 L2084.38 1210.78 L2083.79 1210.78 L2083.2 1210.78 L2082.62 1210.78 L2082.03 1210.78 L2081.44 1210.78 L2080.86 1210.78 L2080.27 1210.78 L2079.68 1210.78 L2079.1 1210.78 L2078.51 1210.78 L2077.93 1210.78 L2077.34 1210.78 L2076.75 1210.78 L2076.17 1210.78 L2075.58 1210.78 L2074.99 1210.78 L2074.41 1210.78 L2073.82 1210.78 L2073.23 1210.78 L2072.65 1210.78 L2072.06 1210.78 L2071.48 1210.78 L2070.89 1210.78 L2070.3 1210.78 L2069.72 1210.78 L2069.13 1210.78 L2068.54 1210.78 L2067.96 1210.78 L2067.37 1210.78 L2066.78 1210.78 L2066.2 1210.78 L2065.61 1210.78 L2065.02 1210.78 L2064.44 1210.78 L2063.85 1210.78 L2063.27 1210.78 L2062.68 1210.78 L2062.09 1210.78 L2061.51 1210.78 L2060.92 1210.78 L2060.33 1210.78 L2059.75 1210.78 L2059.16 1210.78 L2058.57 1210.78 L2057.99 1210.78 L2057.4 1210.78 L2056.81 1210.78 L2056.23 1210.78 L2055.64 1210.78 L2055.06 1210.78 L2054.47 1210.78 L2053.88 1210.78 L2053.3 1210.78 L2052.71 1210.78 L2052.12 1210.78 L2051.54 1210.78 L2050.95 1210.78 L2050.36 1210.78 L2049.78 1210.78 L2049.19 1210.78 L2048.6 1210.78 L2048.02 1210.78 L2047.43 1210.78 L2046.85 1210.78 L2046.26 1210.78 L2045.67 1210.78 L2045.09 1210.78 L2044.5 1210.78 L2043.91 1210.78 L2043.33 1210.78 L2042.74 1210.78 L2042.15 1210.78 L2041.57 1210.78 L2040.98 1210.78 L2040.4 1210.78 L2039.81 1210.78 L2039.22 1210.78 L2038.64 1210.78 L2038.05 1210.78 L2037.46 1210.78 L2036.88 1210.78 L2036.29 1210.78 L2035.7 1210.78 L2035.12 1210.78 L2034.53 1210.78 L2033.94 1210.78 L2033.36 1210.78 L2032.77 1210.78 L2032.19 1210.78 L2031.6 1210.78 L2031.01 1210.78 L2030.43 1210.78 L2029.84 1210.78 L2029.25 1210.78 L2028.67 1210.78 L2028.08 1210.78 L2027.49 1210.78 L2026.91 1210.78 L2026.32 1210.78 L2025.73 1210.78 L2025.15 1210.78 L2024.56 1210.78 L2023.98 1210.78 L2023.39 1210.78 L2022.8 1210.78 L2022.22 1210.78 L2021.63 1210.78 L2021.04 1210.78 L2020.46 1210.78 L2019.87 1210.78 L2019.28 1210.78 L2018.7 1210.78 L2018.11 1210.78 L2017.53 1210.78 L2016.94 1210.78 L2016.35 1210.78 L2015.77 1210.78 L2015.18 1210.78 L2014.59 1210.78 L2014.01 1210.78 L2013.42 1210.78 L2012.83 1210.78 L2012.25 1210.78 L2011.66 1210.78 L2011.07 1210.78 L2010.49 1210.78 L2009.9 1210.78 L2009.32 1210.78 L2008.73 1210.78 L2008.14 1210.78 L2007.56 1210.78 L2006.97 1210.78 L2006.38 1210.78 L2005.8 1210.78 L2005.21 1210.78 L2004.62 1210.78 L2004.04 1210.78 L2003.45 1210.78 L2002.86 1210.78 L2002.28 1210.78 L2001.69 1210.78 L2001.11 1210.78 L2000.52 1210.78 L1999.93 1210.78 L1999.35 1210.78 L1998.76 1210.78 L1998.17 1210.78 L1997.59 1210.78 L1997 1210.78 L1996.41 1210.78 L1995.83 1210.78 L1995.24 1210.78 L1994.65 1210.78 L1994.07 1210.78 L1993.48 1210.78 L1992.9 1210.78 L1992.31 1210.78 L1991.72 1210.78 L1991.14 1210.78 L1990.55 1210.78 L1989.96 1210.78 L1989.38 1210.78 L1988.79 1210.78 L1988.2 1210.78 L1987.62 1210.78 L1987.03 1210.78 L1986.45 1210.78 L1985.86 1210.78 L1985.27 1210.78 L1984.69 1210.78 L1984.1 1210.78 L1983.51 1210.78 L1982.93 1210.78 L1982.34 1210.78 L1981.75 1210.78 L1981.17 1210.78 L1980.58 1210.78 L1979.99 1210.78 L1979.41 1210.78 L1978.82 1210.78 L1978.24 1210.78 L1977.65 1210.78 L1977.06 1210.78 L1976.48 1210.78 L1975.89 1210.78 L1975.3 1210.78 L1974.72 1210.78 L1974.13 1210.78 L1973.54 1210.78 L1972.96 1210.78 L1972.37 1210.78 L1971.78 1210.78 L1971.2 1210.78 L1970.61 1210.78 L1970.03 1210.78 L1969.44 1210.78 L1968.85 1210.78 L1968.27 1210.78 L1967.68 1210.78 L1967.09 1210.78 L1966.51 1210.78 L1965.92 1210.78 L1965.33 1210.78 L1964.75 1210.78 L1964.16 1210.78 L1963.58 1210.78 L1962.99 1210.78 L1962.4 1210.78 L1961.82 1210.78 L1961.23 1210.78 L1960.64 1210.78 L1960.06 1210.78 L1959.47 1210.78 L1958.88 1210.78 L1958.3 1210.78 L1957.71 1210.78 L1957.12 1210.78 L1956.54 1210.78 L1955.95 1210.78 L1955.37 1210.78 L1954.78 1210.78 L1954.19 1210.78 L1953.61 1210.78 L1953.02 1210.78 L1952.43 1210.78 L1951.85 1210.78 L1951.26 1210.78 L1950.67 1210.78 L1950.09 1210.78 L1949.5 1210.78 L1948.91 1210.78 L1948.33 1210.78 L1947.74 1210.78 L1947.16 1210.78 L1946.57 1210.78 L1945.98 1210.78 L1945.4 1210.78 L1944.81 1210.78 L1944.22 1210.78 L1943.64 1210.78 L1943.05 1210.78 L1942.46 1210.78 L1941.88 1210.78 L1941.29 1210.78 L1940.71 1210.78 L1940.12 1210.78 L1939.53 1210.78 L1938.95 1210.78 L1938.36 1210.78 L1937.77 1210.78 L1937.19 1210.78 L1936.6 1210.78 L1936.01 1210.78 L1935.43 1210.78 L1934.84 1210.78 L1934.25 1210.78 L1933.67 1210.78 L1933.08 1210.78 L1932.5 1210.78 L1931.91 1210.78 L1931.32 1210.78 L1930.74 1210.78 L1930.15 1210.78 L1929.56 1210.78 L1928.98 1210.78 L1928.39 1210.78 L1927.8 1210.78 L1927.22 1210.78 L1926.63 1210.78 L1926.04 1210.78 L1925.46 1210.78 L1924.87 1210.78 L1924.29 1210.78 L1923.7 1210.78 L1923.11 1210.78 L1922.53 1210.78 L1921.94 1210.78 L1921.35 1210.78 L1920.77 1210.78 L1920.18 1210.78 L1919.59 1210.78 L1919.01 1210.78 L1918.42 1210.78 L1917.83 1210.78 L1917.25 1210.78 L1916.66 1210.78 L1916.08 1210.78 L1915.49 1210.78 L1914.9 1210.78 L1914.32 1210.78 L1913.73 1210.78 L1913.14 1210.78 L1912.56 1210.78 L1911.97 1210.78 L1911.38 1210.78 L1910.8 1210.78 L1910.21 1210.78 L1909.63 1210.78 L1909.04 1210.78 L1908.45 1210.78 L1907.87 1210.78 L1907.28 1210.78 L1906.69 1210.78 L1906.11 1210.78 L1905.52 1210.78 L1904.93 1210.78 L1904.35 1210.78 L1903.76 1210.78 L1903.17 1210.78 L1902.59 1210.78 L1902 1210.78 L1901.42 1210.78 L1900.83 1210.78 L1900.24 1210.78 L1899.66 1210.78 L1899.07 1210.78 L1898.48 1210.78 L1897.9 1210.78 L1897.31 1210.78 L1896.72 1210.78 L1896.14 1210.78 L1895.55 1210.78 L1894.96 1210.78 L1894.38 1210.78 L1893.79 1210.78 L1893.21 1210.78 L1892.62 1210.78 L1892.03 1210.78 L1891.45 1210.78 L1890.86 1210.78 L1890.27 1210.78 L1889.69 1210.78 L1889.1 1210.78 L1888.51 1210.78 L1887.93 1210.78 L1887.34 1210.78 L1886.76 1210.78 L1886.17 1210.78 L1885.58 1210.78 L1885 1210.78 L1884.41 1210.78 L1883.82 1210.78 L1883.24 1210.78 L1882.65 1210.78 L1882.06 1210.78 L1881.48 1210.78 L1880.89 1210.78 L1880.3 1210.78 L1879.72 1210.78 L1879.13 1210.78 L1878.55 1210.78 L1877.96 1210.78 L1877.37 1210.78 L1876.79 1210.78 L1876.2 1210.78 L1875.61 1210.78 L1875.03 1210.78 L1874.44 1210.78 L1873.85 1210.78 L1873.27 1210.78 L1872.68 1210.78 L1872.09 1210.78 L1871.51 1210.78 L1870.92 1210.78 L1870.34 1210.78 L1869.75 1210.78 L1869.16 1210.78 L1868.58 1210.78 L1867.99 1210.78 L1867.4 1210.78 L1866.82 1210.78 L1866.23 1210.78 L1865.64 1210.78 L1865.06 1210.78 L1864.47 1210.78 L1863.88 1210.78 L1863.3 1210.78 L1862.71 1210.78 L1862.13 1210.78 L1861.54 1210.78 L1860.95 1210.78 L1860.37 1210.78 L1859.78 1210.78 L1859.19 1210.78 L1858.61 1210.78 L1858.02 1210.78 L1857.43 1210.78 L1856.85 1210.78 L1856.26 1210.78 L1855.68 1210.78 L1855.09 1210.78 L1854.5 1210.78 L1853.92 1210.78 L1853.33 1210.78 L1852.74 1210.78 L1852.16 1210.78 L1851.57 1210.78 L1850.98 1210.78 L1850.4 1210.78 L1849.81 1210.78 L1849.22 1210.78 L1848.64 1210.78 L1848.05 1210.78 L1847.47 1210.78 L1846.88 1210.78 L1846.29 1210.78 L1845.71 1210.78 L1845.12 1210.78 L1844.53 1210.78 L1843.95 1210.78 L1843.36 1210.78 L1842.77 1210.78 L1842.19 1210.78 L1841.6 1210.78 L1841.01 1210.78 L1840.43 1210.78 L1839.84 1210.78 L1839.26 1210.78 L1838.67 1210.78 L1838.08 1210.78 L1837.5 1210.78 L1836.91 1210.78 L1836.32 1210.78 L1835.74 1210.78 L1835.15 1210.78 L1834.56 1210.78 L1833.98 1210.78 L1833.39 1210.78 L1832.81 1210.78 L1832.22 1210.78 L1831.63 1210.78 L1831.05 1210.78 L1830.46 1210.78 L1829.87 1210.78 L1829.29 1210.78 L1828.7 1210.78 L1828.11 1210.78 L1827.53 1210.78 L1826.94 1210.78 L1826.35 1210.78 L1825.77 1210.78 L1825.18 1210.78 L1824.6 1210.78 L1824.01 1210.78 L1823.42 1210.78 L1822.84 1210.78 L1822.25 1210.78 L1821.66 1210.78 L1821.08 1210.78 L1820.49 1210.78 L1819.9 1210.78 L1819.32 1210.78 L1818.73 1210.78 L1818.14 1210.78 L1817.56 1210.78 L1816.97 1210.78 L1816.39 1210.78 L1815.8 1210.78 L1815.21 1210.78 L1814.63 1210.78 L1814.04 1210.78 L1813.45 1210.78 L1812.87 1210.78 L1812.28 1210.78 L1811.69 1210.78 L1811.11 1210.78 L1810.52 1210.78 L1809.94 1210.78 L1809.35 1210.78 L1808.76 1210.78 L1808.18 1210.78 L1807.59 1210.78 L1807 1210.78 L1806.42 1210.78 L1805.83 1210.78 L1805.24 1210.78 L1804.66 1210.78 L1804.07 1210.78 L1803.48 1210.78 L1802.9 1210.78 L1802.31 1210.78 L1801.73 1210.78 L1801.14 1210.78 L1800.55 1210.78 L1799.97 1210.78 L1799.38 1210.78 L1798.79 1210.78 L1798.21 1210.78 L1797.62 1210.78 L1797.03 1210.78 L1796.45 1210.78 L1795.86 1210.78 L1795.27 1210.78 L1794.69 1210.78 L1794.1 1210.78 L1793.52 1210.78 L1792.93 1210.78 L1792.34 1210.78 L1791.76 1210.78 L1791.17 1210.78 L1790.58 1210.78 L1790 1210.78 L1789.41 1210.78 L1788.82 1210.78 L1788.24 1210.78 L1787.65 1210.78 L1787.06 1210.78 L1786.48 1210.78 L1785.89 1210.78 L1785.31 1210.78 L1784.72 1210.78 L1784.13 1210.78 L1783.55 1210.78 L1782.96 1210.78 L1782.37 1210.78 L1781.79 1210.78 L1781.2 1210.78 L1780.61 1210.78 L1780.03 1210.78 L1779.44 1210.78 L1778.86 1210.78 L1778.27 1210.78 L1777.68 1210.78 L1777.1 1210.78 L1776.51 1210.78 L1775.92 1210.78 L1775.34 1210.78 L1774.75 1210.78 L1774.16 1210.78 L1773.58 1210.78 L1772.99 1210.78 L1772.4 1210.78 L1771.82 1210.78 L1771.23 1210.78 L1770.65 1210.78 L1770.06 1210.78 L1769.47 1210.78 L1768.89 1210.78 L1768.3 1210.78 L1767.71 1210.78 L1767.13 1210.78 L1766.54 1210.78 L1765.95 1210.78 L1765.37 1210.78 L1764.78 1210.78 L1764.19 1210.78 L1763.61 1210.78 L1763.02 1210.78 L1762.44 1210.78 L1761.85 1210.78 L1761.26 1210.78 L1760.68 1210.78 L1760.09 1210.78 L1759.5 1210.78 L1758.92 1210.78 L1758.33 1210.78 L1757.74 1210.78 L1757.16 1210.78 L1756.57 1210.78 L1755.99 1210.78 L1755.4 1210.78 L1754.81 1210.78 L1754.23 1210.78 L1753.64 1210.78 L1753.05 1210.78 L1752.47 1210.78 L1751.88 1210.78 L1751.29 1210.78 L1750.71 1210.78 L1750.12 1210.78 L1749.53 1210.78 L1748.95 1210.78 L1748.36 1210.78 L1747.78 1210.78 L1747.19 1210.78 L1746.6 1210.78 L1746.02 1210.78 L1745.43 1210.78 L1744.84 1210.78 L1744.26 1210.78 L1743.67 1210.78 L1743.08 1210.78 L1742.5 1210.78 L1741.91 1210.78 L1741.32 1210.78 L1740.74 1210.78 L1740.15 1210.78 L1739.57 1210.78 L1738.98 1210.78 L1738.39 1210.78 L1737.81 1210.78 L1737.22 1210.78 L1736.63 1210.78 L1736.05 1210.78 L1735.46 1210.78 L1734.87 1210.78 L1734.29 1210.78 L1733.7 1210.78 L1733.11 1210.78 L1732.53 1210.78 L1731.94 1210.78 L1731.36 1210.78 L1730.77 1210.78 L1730.18 1210.78 L1729.6 1210.78 L1729.01 1210.78 L1728.42 1210.78 L1727.84 1210.78 L1727.25 1210.78 L1726.66 1210.78 L1726.08 1210.78 L1725.49 1210.78 L1724.91 1210.78 L1724.32 1210.78 L1723.73 1210.78 L1723.15 1210.78 L1722.56 1210.78 L1721.97 1210.78 L1721.39 1210.78 L1720.8 1210.78 L1720.21 1210.78 L1719.63 1210.78 L1719.04 1210.78 L1718.45 1210.78 L1717.87 1210.78 L1717.28 1210.78 L1716.7 1210.78 L1716.11 1210.78 L1715.52 1210.78 L1714.94 1210.78 L1714.35 1210.78 L1713.76 1210.78 L1713.18 1210.78 L1712.59 1210.78 L1712 1210.78 L1711.42 1210.78 L1710.83 1210.78 L1710.24 1210.78 L1709.66 1210.78 L1709.07 1210.78 L1708.49 1210.78 L1707.9 1210.78 L1707.31 1210.78 L1706.73 1210.78 L1706.14 1210.78 L1705.55 1210.78 L1704.97 1210.78 L1704.38 1210.78 L1703.79 1210.78 L1703.21 1210.78 L1702.62 1210.78 L1702.04 1210.78 L1701.45 1210.78 L1700.86 1210.78 L1700.28 1210.78 L1699.69 1210.78 L1699.1 1210.78 L1698.52 1210.78 L1697.93 1210.78 L1697.34 1210.78 L1696.76 1210.78 L1696.17 1210.78 L1695.58 1210.78 L1695 1210.78 L1694.41 1210.78 L1693.83 1210.78 L1693.24 1210.78 L1692.65 1210.78 L1692.07 1210.78 L1691.48 1210.78 L1690.89 1210.78 L1690.31 1210.78 L1689.72 1210.78 L1689.13 1210.78 L1688.55 1210.78 L1687.96 1210.78 L1687.37 1210.78 L1686.79 1210.78 L1686.2 1210.78 L1685.62 1210.78 L1685.03 1210.78 L1684.44 1210.78 L1683.86 1210.78 L1683.27 1210.78 L1682.68 1210.78 L1682.1 1210.78 L1681.51 1210.78 L1680.92 1210.78 L1680.34 1210.78 L1679.75 1210.78 L1679.17 1210.78 L1678.58 1210.78 L1677.99 1210.78 L1677.41 1210.78 L1676.82 1210.78 L1676.23 1210.78 L1675.65 1210.78 L1675.06 1210.78 L1674.47 1210.78 L1673.89 1210.78 L1673.3 1210.78 L1672.71 1210.78 L1672.13 1210.78 L1671.54 1210.78 L1670.96 1210.78 L1670.37 1210.78 L1669.78 1210.78 L1669.2 1210.78 L1668.61 1210.78 L1668.02 1210.78 L1667.44 1210.78 L1666.85 1210.78 L1666.26 1210.78 L1665.68 1210.78 L1665.09 1210.78 L1664.5 1210.78 L1663.92 1210.78 L1663.33 1210.78 L1662.75 1210.78 L1662.16 1210.78 L1661.57 1210.78 L1660.99 1210.78 L1660.4 1210.78 L1659.81 1210.78 L1659.23 1210.78 L1658.64 1210.78 L1658.05 1210.78 L1657.47 1210.78 L1656.88 1210.78 L1656.29 1210.78 L1655.71 1210.78 L1655.12 1210.78 L1654.54 1210.78 L1653.95 1210.78 L1653.36 1210.78 L1652.78 1210.78 L1652.19 1210.78 L1651.6 1210.78 L1651.02 1210.78 L1650.43 1210.78 L1649.84 1210.78 L1649.26 1210.78 L1648.67 1210.78 L1648.09 1210.78 L1647.5 1210.78 L1646.91 1210.78 L1646.33 1210.78 L1645.74 1210.78 L1645.15 1210.78 L1644.57 1210.78 L1643.98 1210.78 L1643.39 1210.78 L1642.81 1210.78 L1642.22 1210.78 L1641.63 1210.78 L1641.05 1210.78 L1640.46 1210.78 L1639.88 1210.78 L1639.29 1210.78 L1638.7 1210.78 L1638.12 1210.78 L1637.53 1210.78 L1636.94 1210.78 L1636.36 1210.78 L1635.77 1210.78 L1635.18 1210.78 L1634.6 1210.78 L1634.01 1210.78 L1633.42 1210.78 L1632.84 1210.78 L1632.25 1210.78 L1631.67 1210.78 L1631.08 1210.78 L1630.49 1210.78 L1629.91 1210.78 L1629.32 1210.78 L1628.73 1210.78 L1628.15 1210.78 L1627.56 1210.78 L1626.97 1210.78 L1626.39 1210.78 L1625.8 1210.78 L1625.22 1210.78 L1624.63 1210.78 L1624.04 1210.78 L1623.46 1210.78 L1622.87 1210.78 L1622.28 1210.78 L1621.7 1210.78 L1621.11 1210.78 L1620.52 1210.78 L1619.94 1210.78 L1619.35 1210.78 L1618.76 1210.78 L1618.18 1210.78 L1617.59 1210.78 L1617.01 1210.78 L1616.42 1210.78 L1615.83 1210.78 L1615.25 1210.78 L1614.66 1210.78 L1614.07 1210.78 L1613.49 1210.78 L1612.9 1210.78 L1612.31 1210.78 L1611.73 1210.78 L1611.14 1210.78 L1610.55 1210.78 L1609.97 1210.78 L1609.38 1210.78 L1608.8 1210.78 L1608.21 1210.78 L1607.62 1210.78 L1607.04 1210.78 L1606.45 1210.78 L1605.86 1210.78 L1605.28 1210.78 L1604.69 1210.78 L1604.1 1210.78 L1603.52 1210.78 L1602.93 1210.78 L1602.34 1210.78 L1601.76 1210.78 L1601.17 1210.78 L1600.59 1210.78 L1600 1210.78 L1599.41 1210.78 L1598.83 1210.78 L1598.24 1210.78 L1597.65 1210.78 L1597.07 1210.78 L1596.48 1210.78 L1595.89 1210.78 L1595.31 1210.78 L1594.72 1210.78 L1594.14 1210.78 L1593.55 1210.78 L1592.96 1210.78 L1592.38 1210.78 L1591.79 1210.78 L1591.2 1210.78 L1590.62 1210.78 L1590.03 1210.78 L1589.44 1210.78 L1588.86 1210.78 L1588.27 1210.78 L1587.68 1210.78 L1587.1 1210.78 L1586.51 1210.78 L1585.93 1210.78 L1585.34 1210.78 L1584.75 1210.78 L1584.17 1210.78 L1583.58 1210.78 L1582.99 1210.78 L1582.41 1210.78 L1581.82 1210.78 L1581.23 1210.78 L1580.65 1210.78 L1580.06 1210.78 L1579.47 1210.78 L1578.89 1210.78 L1578.3 1210.78 L1577.72 1210.78 L1577.13 1210.78 L1576.54 1210.78 L1575.96 1210.78 L1575.37 1210.78 L1574.78 1210.78 L1574.2 1210.78 L1573.61 1210.78 L1573.02 1210.78 L1572.44 1210.78 L1571.85 1210.78 L1571.27 1210.78 L1570.68 1210.78 L1570.09 1210.78 L1569.51 1210.78 L1568.92 1210.78 L1568.33 1210.78 L1567.75 1210.78 L1567.16 1210.78 L1566.57 1210.78 L1565.99 1210.78 L1565.4 1210.78 L1564.81 1210.78 L1564.23 1210.78 L1563.64 1210.78 L1563.06 1210.78 L1562.47 1210.78 L1561.88 1210.78 L1561.3 1210.78 L1560.71 1210.78 L1560.12 1210.78 L1559.54 1210.78 L1558.95 1210.78 L1558.36 1210.78 L1557.78 1210.78 L1557.19 1210.78 L1556.6 1210.78 L1556.02 1210.78 L1555.43 1210.78 L1554.85 1210.78 L1554.26 1210.78 L1553.67 1210.78 L1553.09 1210.78 L1552.5 1210.78 L1551.91 1210.78 L1551.33 1210.78 L1550.74 1210.78 L1550.15 1210.78 L1549.57 1210.78 L1548.98 1210.78 L1548.4 1210.78 L1547.81 1210.78 L1547.22 1210.78 L1546.64 1210.78 L1546.05 1210.78 L1545.46 1210.78 L1544.88 1210.78 L1544.29 1210.78 L1543.7 1210.78 L1543.12 1210.78 L1542.53 1210.78 L1541.94 1210.78 L1541.36 1210.78 L1540.77 1210.78 L1540.19 1210.78 L1539.6 1210.78 L1539.01 1210.78 L1538.43 1210.78 L1537.84 1210.78 L1537.25 1210.78 L1536.67 1210.78 L1536.08 1210.78 L1535.49 1210.78 L1534.91 1210.78 L1534.32 1210.78 L1533.73 1210.78 L1533.15 1210.78 L1532.56 1210.78 L1531.98 1210.78 L1531.39 1210.78 L1530.8 1210.78 L1530.22 1210.78 L1529.63 1210.78 L1529.04 1210.78 L1528.46 1210.78 L1527.87 1210.78 L1527.28 1210.78 L1526.7 1210.78 L1526.11 1210.78 L1525.52 1210.78 L1524.94 1210.78 L1524.35 1210.78 L1523.77 1210.78 L1523.18 1210.78 L1522.59 1210.78 L1522.01 1210.78 L1521.42 1210.78 L1520.83 1210.78 L1520.25 1210.78 L1519.66 1210.78 L1519.07 1210.78 L1518.49 1210.78 L1517.9 1210.78 L1517.32 1210.78 L1516.73 1210.78 L1516.14 1210.78 L1515.56 1210.78 L1514.97 1210.78 L1514.38 1210.78 L1513.8 1210.78 L1513.21 1210.78 L1512.62 1210.78 L1512.04 1210.78 L1511.45 1210.78 L1510.86 1210.78 L1510.28 1210.78 L1509.69 1210.78 L1509.11 1210.78 L1508.52 1210.78 L1507.93 1210.78 L1507.35 1210.78 L1506.76 1210.78 L1506.17 1210.78 L1505.59 1210.78 L1505 1210.78 L1504.41 1210.78 L1503.83 1210.78 L1503.24 1210.78 L1502.65 1210.78 L1502.07 1210.78 L1501.48 1210.78 L1500.9 1210.78 L1500.31 1210.78 L1499.72 1210.78 L1499.14 1210.78 L1498.55 1210.78 L1497.96 1210.78 L1497.38 1210.78 L1496.79 1210.78 L1496.2 1210.78 L1495.62 1210.78 L1495.03 1210.78 L1494.45 1210.78 L1493.86 1210.78 L1493.27 1210.78 L1492.69 1210.78 L1492.1 1210.78 L1491.51 1210.78 L1490.93 1210.78 L1490.34 1210.78 L1489.75 1210.78 L1489.17 1210.78 L1488.58 1210.78 L1487.99 1210.78 L1487.41 1210.78 L1486.82 1210.78 L1486.24 1210.78 L1485.65 1210.78 L1485.06 1210.78 L1484.48 1210.78 L1483.89 1210.78 L1483.3 1210.78 L1482.72 1210.78 L1482.13 1210.78 L1481.54 1210.78 L1480.96 1210.78 L1480.37 1210.78 L1479.78 1210.78 L1479.2 1210.78 L1478.61 1210.78 L1478.03 1210.78 L1477.44 1210.78 L1476.85 1210.78 L1476.27 1210.78 L1475.68 1210.78 L1475.09 1210.78 L1474.51 1210.78 L1473.92 1210.78 L1473.33 1210.78 L1472.75 1210.78 L1472.16 1210.78 L1471.57 1210.78 L1470.99 1210.78 L1470.4 1210.78 L1469.82 1210.78 L1469.23 1210.78 L1468.64 1210.78 L1468.06 1210.78 L1467.47 1210.78 L1466.88 1210.78 L1466.3 1210.78 L1465.71 1210.78 L1465.12 1210.78 L1464.54 1210.78 L1463.95 1210.78 L1463.37 1210.78 L1462.78 1210.78 L1462.19 1210.78 L1461.61 1210.78 L1461.02 1210.78 L1460.43 1210.78 L1459.85 1210.78 L1459.26 1210.78 L1458.67 1210.78 L1458.09 1210.78 L1457.5 1210.78 L1456.91 1210.78 L1456.33 1210.78 L1455.74 1210.78 L1455.16 1210.78 L1454.57 1210.78 L1453.98 1210.78 L1453.4 1210.78 L1452.81 1210.78 L1452.22 1210.78 L1451.64 1210.78 L1451.05 1210.78 L1450.46 1210.78 L1449.88 1210.78 L1449.29 1210.78 L1448.7 1210.78 L1448.12 1210.78 L1447.53 1210.78 L1446.95 1210.78 L1446.36 1210.78 L1445.77 1210.78 L1445.19 1210.78 L1444.6 1210.78 L1444.01 1210.78 L1443.43 1210.78 L1442.84 1210.78 L1442.25 1210.78 L1441.67 1210.78 L1441.08 1210.78 L1440.5 1210.78 L1439.91 1210.78 L1439.32 1210.78 L1438.74 1210.78 L1438.15 1210.78 L1437.56 1210.78 L1436.98 1210.78 L1436.39 1210.78 L1435.8 1210.78 L1435.22 1210.78 L1434.63 1210.78 L1434.04 1210.78 L1433.46 1210.78 L1432.87 1210.78 L1432.29 1210.78 L1431.7 1210.78 L1431.11 1210.78 L1430.53 1210.78 L1429.94 1210.78 L1429.35 1210.78 L1428.77 1210.78 L1428.18 1210.78 L1427.59 1210.78 L1427.01 1210.78 L1426.42 1210.78 L1425.83 1210.78 L1425.25 1210.78 L1424.66 1210.78 L1424.08 1210.78 L1423.49 1210.78 L1422.9 1210.78 L1422.32 1210.78 L1421.73 1210.78 L1421.14 1210.78 L1420.56 1210.78 L1419.97 1210.78 L1419.38 1210.78 L1418.8 1210.78 L1418.21 1210.78 L1417.63 1210.78 L1417.04 1210.78 L1416.45 1210.78 L1415.87 1210.78 L1415.28 1210.78 L1414.69 1210.78 L1414.11 1210.78 L1413.52 1210.78 L1412.93 1210.78 L1412.35 1210.78 L1411.76 1210.78 L1411.17 1210.78 L1410.59 1210.78 L1410 1210.78 L1409.42 1210.78 L1408.83 1210.78 L1408.24 1210.78 L1407.66 1210.78 L1407.07 1210.78 L1406.48 1210.78 L1405.9 1210.78 L1405.31 1210.78 L1404.72 1210.78 L1404.14 1210.78 L1403.55 1210.78 L1402.96 1210.78 L1402.38 1210.78 L1401.79 1210.78 L1401.21 1210.78 L1400.62 1210.78 L1400.03 1210.78 L1399.45 1210.78 L1398.86 1210.78 L1398.27 1210.78 L1397.69 1210.78 L1397.1 1210.78 L1396.51 1210.78 L1395.93 1210.78 L1395.34 1210.78 L1394.75 1210.78 L1394.17 1210.78 L1393.58 1210.78 L1393 1210.78 L1392.41 1210.78 L1391.82 1210.78 L1391.24 1210.78 L1390.65 1210.78 L1390.06 1210.78 L1389.48 1210.78 L1388.89 1210.78 L1388.3 1210.78 L1387.72 1210.78 L1387.13 1210.78 L1386.55 1210.78 L1385.96 1210.78 L1385.37 1210.78 L1384.79 1210.78 L1384.2 1210.78 L1383.61 1210.78 L1383.03 1210.78 L1382.44 1210.78 L1381.85 1210.78 L1381.27 1210.78 L1380.68 1210.78 L1380.09 1210.78 L1379.51 1210.78 L1378.92 1210.78 L1378.34 1210.78 L1377.75 1210.78 L1377.16 1210.78 L1376.58 1210.78 L1375.99 1210.78 L1375.4 1210.78 L1374.82 1210.78 L1374.23 1210.78 L1373.64 1210.78 L1373.06 1210.78 L1372.47 1210.78 L1371.88 1210.78 L1371.3 1210.78 L1370.71 1210.78 L1370.13 1210.78 L1369.54 1210.78 L1368.95 1210.78 L1368.37 1210.78 L1367.78 1210.78 L1367.19 1210.78 L1366.61 1210.78 L1366.02 1210.78 L1365.43 1210.78 L1364.85 1210.78 L1364.26 1210.78 L1363.68 1210.78 L1363.09 1210.78 L1362.5 1210.78 L1361.92 1210.78 L1361.33 1210.78 L1360.74 1210.78 L1360.16 1210.78 L1359.57 1210.78 L1358.98 1210.78 L1358.4 1210.78 L1357.81 1210.78 L1357.22 1210.78 L1356.64 1210.78 L1356.05 1210.78 L1355.47 1210.78 L1354.88 1210.78 L1354.29 1210.78 L1353.71 1210.78 L1353.12 1210.78 L1352.53 1210.78 L1351.95 1210.78 L1351.36 1210.78 L1350.77 1210.78 L1350.19 1210.78 L1349.6 1210.78 L1349.01 1210.78 L1348.43 1210.78 L1347.84 1210.78 L1347.26 1210.78 L1346.67 1210.78 L1346.08 1210.78 L1345.5 1210.78 L1344.91 1210.78 L1344.32 1210.78 L1343.74 1210.78 L1343.15 1210.78 L1342.56 1210.78 L1341.98 1210.78 L1341.39 1210.78 L1340.8 1210.78 L1340.22 1210.78 L1339.63 1210.78 L1339.05 1210.78 L1338.46 1210.78 L1337.87 1210.78 L1337.29 1210.78 L1336.7 1210.78 L1336.11 1210.78 L1335.53 1210.78 L1334.94 1210.78 L1334.35 1210.78 L1333.77 1210.78 L1333.18 1210.78 L1332.6 1210.78 L1332.01 1210.78 L1331.42 1210.78 L1330.84 1210.78 L1330.25 1210.78 L1329.66 1210.78 L1329.08 1210.78 L1328.49 1210.78 L1327.9 1210.78 L1327.32 1210.78 L1326.73 1210.78 L1326.14 1210.78 L1325.56 1210.78 L1324.97 1210.78 L1324.39 1210.78 L1323.8 1210.78 L1323.21 1210.78 L1322.63 1210.78 L1322.04 1210.78 L1321.45 1210.78 L1320.87 1210.78 L1320.28 1210.78 L1319.69 1210.78 L1319.11 1210.78 L1318.52 1210.78 L1317.93 1210.78 L1317.35 1210.78 L1316.76 1210.78 L1316.18 1210.78 L1315.59 1210.78 L1315 1210.78 L1314.42 1210.78 L1313.83 1210.78 L1313.24 1210.78 L1312.66 1210.78 L1312.07 1210.78 L1311.48 1210.78 L1310.9 1210.78 L1310.31 1210.78 L1309.73 1210.78 L1309.14 1210.78 L1308.55 1210.78 L1307.97 1210.78 L1307.38 1210.78 L1306.79 1210.78 L1306.21 1210.78 L1305.62 1210.78 L1305.03 1210.78 L1304.45 1210.78 L1303.86 1210.78 L1303.27 1210.78 L1302.69 1210.78 L1302.1 1210.78 L1301.52 1210.78 L1300.93 1210.78 L1300.34 1210.78 L1299.76 1210.78 L1299.17 1210.78 L1298.58 1210.78 L1298 1210.78 L1297.41 1210.78 L1296.82 1210.78 L1296.24 1210.78 L1295.65 1210.78 L1295.06 1210.78 L1294.48 1210.78 L1293.89 1210.78 L1293.31 1210.78 L1292.72 1210.78 L1292.13 1210.78 L1291.55 1210.78 L1290.96 1210.78 L1290.37 1210.78 L1289.79 1210.78 L1289.2 1210.78 L1288.61 1210.78 L1288.03 1210.78 L1287.44 1210.78 L1286.86 1210.78 L1286.27 1210.78 L1285.68 1210.78 L1285.1 1210.78 L1284.51 1210.78 L1283.92 1210.78 L1283.34 1210.78 L1282.75 1210.78 L1282.16 1210.78 L1281.58 1210.78 L1280.99 1210.78 L1280.4 1210.78 L1279.82 1210.78 L1279.23 1210.78 L1278.65 1210.78 L1278.06 1210.78 L1277.47 1210.78 L1276.89 1210.78 L1276.3 1210.78 L1275.71 1210.78 L1275.13 1210.78 L1274.54 1210.78 L1273.95 1210.78 L1273.37 1210.78 L1272.78 1210.78 L1272.19 1210.78 L1271.61 1210.78 L1271.02 1210.78 L1270.44 1210.78 L1269.85 1210.78 L1269.26 1210.78 L1268.68 1210.78 L1268.09 1210.78 L1267.5 1210.78 L1266.92 1210.78 L1266.33 1210.78 L1265.74 1210.78 L1265.16 1210.78 L1264.57 1210.78 L1263.98 1210.78 L1263.4 1210.78 L1262.81 1210.78 L1262.23 1210.78 L1261.64 1210.78 L1261.05 1210.78 L1260.47 1210.78 L1259.88 1210.78 L1259.29 1210.78 L1258.71 1210.78 L1258.12 1210.78 L1257.53 1210.78 L1256.95 1210.78 L1256.36 1210.78 L1255.78 1210.78 L1255.19 1210.78 L1254.6 1210.78 L1254.02 1210.78 L1253.43 1210.78 L1252.84 1210.78 L1252.26 1210.78 L1251.67 1210.78 L1251.08 1210.78 L1250.5 1210.78 L1249.91 1210.78 L1249.32 1210.78 L1248.74 1210.78 L1248.15 1210.78 L1247.57 1210.78 L1246.98 1210.78 L1246.39 1210.78 L1245.81 1210.78 L1245.22 1210.78 L1244.63 1210.78 L1244.05 1210.78 L1243.46 1210.78 L1242.87 1210.78 L1242.29 1210.78 L1241.7 1210.78 L1241.11 1210.78 L1240.53 1210.78 L1239.94 1210.78 L1239.36 1210.78 L1238.77 1210.78 L1238.18 1210.78 L1237.6 1210.78 L1237.01 1210.78 L1236.42 1210.78 L1235.84 1210.78 L1235.25 1210.78 L1234.66 1210.78 L1234.08 1210.78 L1233.49 1210.78 L1232.91 1210.78 L1232.32 1210.78 L1231.73 1210.78 L1231.15 1210.78 L1230.56 1210.78 L1229.97 1210.78 L1229.39 1210.78 L1228.8 1210.78 L1228.21 1210.78 L1227.63 1210.78 L1227.04 1210.78 L1226.45 1210.78 L1225.87 1210.78 L1225.28 1210.78 L1224.7 1210.78 L1224.11 1210.78 L1223.52 1210.78 L1222.94 1210.78 L1222.35 1210.78 L1221.76 1210.78 L1221.18 1210.78 L1220.59 1210.78 L1220 1210.78 L1219.42 1210.78 L1218.83 1210.78 L1218.24 1210.78 L1217.66 1210.78 L1217.07 1210.78 L1216.49 1210.78 L1215.9 1210.78 L1215.31 1210.78 L1214.73 1210.78 L1214.14 1210.78 L1213.55 1210.78 L1212.97 1210.78 L1212.38 1210.78 L1211.79 1210.78 L1211.21 1210.78 L1210.62 1210.78 L1210.03 1210.78 L1209.45 1210.78 L1208.86 1210.78 L1208.28 1210.78 L1207.69 1210.78 L1207.1 1210.78 L1206.52 1210.78 L1205.93 1210.78 L1205.34 1210.78 L1204.76 1210.78 L1204.17 1210.78 L1203.58 1210.78 L1203 1210.78 L1202.41 1210.78 L1201.83 1210.78 L1201.24 1210.78 L1200.65 1210.78 L1200.07 1210.78 L1199.48 1210.78 L1198.89 1210.78 L1198.31 1210.78 L1197.72 1210.78 L1197.13 1210.78 L1196.55 1210.78 L1195.96 1210.78 L1195.37 1210.78 L1194.79 1210.78 L1194.2 1210.78 L1193.62 1210.78 L1193.03 1210.78 L1192.44 1210.78 L1191.86 1210.78 L1191.27 1210.78 L1190.68 1210.78 L1190.1 1210.78 L1189.51 1210.78 L1188.92 1210.78 L1188.34 1210.78 L1187.75 1210.78 L1187.16 1210.78 L1186.58 1210.78 L1185.99 1210.78 L1185.41 1210.78 L1184.82 1210.78 L1184.23 1210.78 L1183.65 1210.78 L1183.06 1210.78 L1182.47 1210.78 L1181.89 1210.78 L1181.3 1210.78 L1180.71 1210.78 L1180.13 1210.78 L1179.54 1210.78 L1178.96 1210.78 L1178.37 1210.78 L1177.78 1210.78 L1177.2 1210.78 L1176.61 1210.78 L1176.02 1210.78 L1175.44 1210.78 L1174.85 1210.78 L1174.26 1210.78 L1173.68 1210.78 L1173.09 1210.78 L1172.5 1210.78 L1171.92 1210.78 L1171.33 1210.78 L1170.75 1210.78 L1170.16 1210.78 L1169.57 1210.78 L1168.99 1210.78 L1168.4 1210.78 L1167.81 1210.78 L1167.23 1210.78 L1166.64 1210.78 L1166.05 1210.78 L1165.47 1210.78 L1164.88 1210.78 L1164.29 1210.78 L1163.71 1210.78 L1163.12 1210.78 L1162.54 1210.78 L1161.95 1210.78 L1161.36 1210.78 L1160.78 1210.78 L1160.19 1210.78 L1159.6 1210.78 L1159.02 1210.78 L1158.43 1210.78 L1157.84 1210.78 L1157.26 1210.78 L1156.67 1210.78 L1156.09 1210.78 L1155.5 1210.78 L1154.91 1210.78 L1154.33 1210.78 L1153.74 1210.78 L1153.15 1210.78 L1152.57 1210.78 L1151.98 1210.78 L1151.39 1210.78 L1150.81 1210.78 L1150.22 1210.78 L1149.63 1210.78 L1149.05 1210.78 L1148.46 1210.78 L1147.88 1210.78 L1147.29 1210.78 L1146.7 1210.78 L1146.12 1210.78 L1145.53 1210.78 L1144.94 1210.78 L1144.36 1210.78 L1143.77 1210.78 L1143.18 1210.78 L1142.6 1210.78 L1142.01 1210.78 L1141.42 1210.78 L1140.84 1210.78 L1140.25 1210.78 L1139.67 1210.78 L1139.08 1210.78 L1138.49 1210.78 L1137.91 1210.78 L1137.32 1210.78 L1136.73 1210.78 L1136.15 1210.78 L1135.56 1210.78 L1134.97 1210.78 L1134.39 1210.78 L1133.8 1210.78 L1133.21 1210.78 L1132.63 1210.78 L1132.04 1210.78 L1131.46 1210.78 L1130.87 1210.78 L1130.28 1210.78 L1129.7 1210.78 L1129.11 1210.78 L1128.52 1210.78 L1127.94 1210.78 L1127.35 1210.78 L1126.76 1210.78 L1126.18 1210.78 L1125.59 1210.78 L1125.01 1210.78 L1124.42 1210.78 L1123.83 1210.78 L1123.25 1210.78 L1122.66 1210.78 L1122.07 1210.78 L1121.49 1210.78 L1120.9 1210.78 L1120.31 1210.78 L1119.73 1210.78 L1119.14 1210.78 L1118.55 1210.78 L1117.97 1210.78 L1117.38 1210.78 L1116.8 1210.78 L1116.21 1210.78 L1115.62 1210.78 L1115.04 1210.78 L1114.45 1210.78 L1113.86 1210.78 L1113.28 1210.78 L1112.69 1210.78 L1112.1 1210.78 L1111.52 1210.78 L1110.93 1210.78 L1110.34 1210.78 L1109.76 1210.78 L1109.17 1210.78 L1108.59 1210.78 L1108 1210.78 L1107.41 1210.78 L1106.83 1210.78 L1106.24 1210.78 L1105.65 1210.78 L1105.07 1210.78 L1104.48 1210.78 L1103.89 1210.78 L1103.31 1210.78 L1102.72 1210.78 L1102.14 1210.78 L1101.55 1210.78 L1100.96 1210.78 L1100.38 1210.78 L1099.79 1210.78 L1099.2 1210.78 L1098.62 1210.78 L1098.03 1210.78 L1097.44 1210.78 L1096.86 1210.78 L1096.27 1210.78 L1095.68 1210.78 L1095.1 1210.78 L1094.51 1210.78 L1093.93 1210.78 L1093.34 1210.78 L1092.75 1210.78 L1092.17 1210.78 L1091.58 1210.78 L1090.99 1210.78 L1090.41 1210.78 L1089.82 1210.78 L1089.23 1210.78 L1088.65 1210.78 L1088.06 1210.78 L1087.47 1210.78 L1086.89 1210.78 L1086.3 1210.78 L1085.72 1210.78 L1085.13 1210.78 L1084.54 1210.78 L1083.96 1210.78 L1083.37 1210.78 L1082.78 1210.78 L1082.2 1210.78 L1081.61 1210.78 L1081.02 1210.78 L1080.44 1210.78 L1079.85 1210.78 L1079.26 1210.78 L1078.68 1210.78 L1078.09 1210.78 L1077.51 1210.78 L1076.92 1210.78 L1076.33 1210.78 L1075.75 1210.78 L1075.16 1210.78 L1074.57 1210.78 L1073.99 1210.78 L1073.4 1210.78 L1072.81 1210.78 L1072.23 1210.78 L1071.64 1210.78 L1071.06 1210.78 L1070.47 1210.78 L1069.88 1210.78 L1069.3 1210.78 L1068.71 1210.78 L1068.12 1210.78 L1067.54 1210.78 L1066.95 1210.78 L1066.36 1210.78 L1065.78 1210.78 L1065.19 1210.78 L1064.6 1210.78 L1064.02 1210.78 L1063.43 1210.78 L1062.85 1210.78 L1062.26 1210.78 L1061.67 1210.78 L1061.09 1210.78 L1060.5 1210.78 L1059.91 1210.78 L1059.33 1210.78 L1058.74 1210.78 L1058.15 1210.78 L1057.57 1210.78 L1056.98 1210.78 L1056.39 1210.78 L1055.81 1210.78 L1055.22 1210.78 L1054.64 1210.78 L1054.05 1210.78 L1053.46 1210.78 L1052.88 1210.78 L1052.29 1210.78 L1051.7 1210.78 L1051.12 1210.78 L1050.53 1210.78 L1049.94 1210.78 L1049.36 1210.78 L1048.77 1210.78 L1048.19 1210.78 L1047.6 1210.78 L1047.01 1210.78 L1046.43 1210.78 L1045.84 1210.78 L1045.25 1210.78 L1044.67 1210.78 L1044.08 1210.78 L1043.49 1210.78 L1042.91 1210.78 L1042.32 1210.78 L1041.73 1210.78 L1041.15 1210.78 L1040.56 1210.78 L1039.98 1210.78 L1039.39 1210.78 L1038.8 1210.78 L1038.22 1210.78 L1037.63 1210.78 L1037.04 1210.78 L1036.46 1210.78 L1035.87 1210.78 L1035.28 1210.78 L1034.7 1210.78 L1034.11 1210.78 L1033.52 1210.78 L1032.94 1210.78 L1032.35 1210.78 L1031.77 1210.78 L1031.18 1210.78 L1030.59 1210.78 L1030.01 1210.78 L1029.42 1210.78 L1028.83 1210.78 L1028.25 1210.78 L1027.66 1210.78 L1027.07 1210.78 L1026.49 1210.78 L1025.9 1210.78 L1025.32 1210.78 L1024.73 1210.78 L1024.14 1210.78 L1023.56 1210.78 L1022.97 1210.78 L1022.38 1210.78 L1021.8 1210.78 L1021.21 1210.78 L1020.62 1210.78 L1020.04 1210.78 L1019.45 1210.78 L1018.86 1210.78 L1018.28 1210.78 L1017.69 1210.78 L1017.11 1210.78 L1016.52 1210.78 L1015.93 1210.78 L1015.35 1210.78 L1014.76 1210.78 L1014.17 1210.78 L1013.59 1210.78 L1013 1210.78 L1012.41 1210.78 L1011.83 1210.78 L1011.24 1210.78 L1010.65 1210.78 L1010.07 1210.78 L1009.48 1210.78 L1008.9 1210.78 L1008.31 1210.78 L1007.72 1210.78 L1007.14 1210.78 L1006.55 1210.78 L1005.96 1210.78 L1005.38 1210.78 L1004.79 1210.78 L1004.2 1210.78 L1003.62 1210.78 L1003.03 1210.78 L1002.44 1210.78 L1001.86 1210.78 L1001.27 1210.78 L1000.69 1210.78 L1000.1 1210.78 L999.513 1210.78 L998.926 1210.78 L998.34 1210.78 L997.754 1210.78 L997.167 1210.78 L996.581 1210.78 L995.994 1210.78 L995.408 1210.78 L994.822 1210.78 L994.235 1210.78 L993.649 1210.78 L993.062 1210.78 L992.476 1210.78 L991.889 1210.78 L991.303 1210.78 L990.717 1210.78 L990.13 1210.78 L989.544 1210.78 L988.957 1210.78 L988.371 1210.78 L987.785 1210.78 L987.198 1210.78 L986.612 1210.78 L986.025 1210.78  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip712)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"986.025,1210.84 986.612,1210.84 987.198,1210.84 987.785,1210.84 988.371,1210.84 988.957,1210.84 989.544,1210.84 990.13,1210.84 990.717,1210.84 991.303,1210.84 991.889,1210.84 992.476,1210.84 993.062,1210.84 993.649,1210.84 994.235,1210.84 994.822,1210.84 995.408,1210.84 995.994,1210.84 996.581,1210.84 997.167,1210.84 997.754,1210.84 998.34,1210.84 998.926,1210.84 999.513,1210.84 1000.1,1210.84 1000.69,1210.84 1001.27,1210.84 1001.86,1210.84 1002.44,1210.84 1003.03,1210.84 1003.62,1210.84 1004.2,1210.84 1004.79,1210.84 1005.38,1210.84 1005.96,1210.84 1006.55,1210.84 1007.14,1210.84 1007.72,1210.84 1008.31,1210.84 1008.9,1210.84 1009.48,1210.84 1010.07,1210.84 1010.65,1210.84 1011.24,1210.84 1011.83,1210.84 1012.41,1210.84 1013,1210.84 1013.59,1210.84 1014.17,1210.84 1014.76,1210.84 1015.35,1210.84 1015.93,1210.84 1016.52,1210.84 1017.11,1210.84 1017.69,1210.84 1018.28,1210.84 1018.86,1210.84 1019.45,1210.84 1020.04,1210.84 1020.62,1210.84 1021.21,1210.84 1021.8,1210.84 1022.38,1210.84 1022.97,1210.84 1023.56,1210.84 1024.14,1210.84 1024.73,1210.84 1025.32,1210.84 1025.9,1210.84 1026.49,1210.84 1027.07,1210.84 1027.66,1210.84 1028.25,1210.84 1028.83,1210.84 1029.42,1210.84 1030.01,1210.84 1030.59,1210.84 1031.18,1210.84 1031.77,1210.84 1032.35,1210.84 1032.94,1210.84 1033.52,1210.84 1034.11,1210.84 1034.7,1210.84 1035.28,1210.84 1035.87,1210.84 1036.46,1210.84 1037.04,1210.84 1037.63,1210.84 1038.22,1210.84 1038.8,1210.84 1039.39,1210.84 1039.98,1210.84 1040.56,1210.84 1041.15,1210.84 1041.73,1210.84 1042.32,1210.84 1042.91,1210.84 1043.49,1210.84 1044.08,1210.84 1044.67,1210.84 1045.25,1210.84 1045.84,1210.84 1046.43,1210.84 1047.01,1210.84 1047.6,1210.84 1048.19,1210.84 1048.77,1210.84 1049.36,1210.84 1049.94,1210.84 1050.53,1210.84 1051.12,1210.84 1051.7,1210.84 1052.29,1210.84 1052.88,1210.84 1053.46,1210.84 1054.05,1210.84 1054.64,1210.84 1055.22,1210.84 1055.81,1210.84 1056.39,1210.84 1056.98,1210.84 1057.57,1210.84 1058.15,1210.84 1058.74,1210.84 1059.33,1210.84 1059.91,1210.84 1060.5,1210.84 1061.09,1210.84 1061.67,1210.84 1062.26,1210.84 1062.85,1210.84 1063.43,1210.84 1064.02,1210.84 1064.6,1210.84 1065.19,1210.84 1065.78,1210.84 1066.36,1210.84 1066.95,1210.84 1067.54,1210.84 1068.12,1210.84 1068.71,1210.84 1069.3,1210.84 1069.88,1210.84 1070.47,1210.84 1071.06,1210.84 1071.64,1210.84 1072.23,1210.84 1072.81,1210.84 1073.4,1210.84 1073.99,1210.84 1074.57,1210.84 1075.16,1210.84 1075.75,1210.84 1076.33,1210.84 1076.92,1210.84 1077.51,1210.84 1078.09,1210.84 1078.68,1210.84 1079.26,1210.84 1079.85,1210.84 1080.44,1210.84 1081.02,1210.84 1081.61,1210.84 1082.2,1210.84 1082.78,1210.84 1083.37,1210.84 1083.96,1210.84 1084.54,1210.84 1085.13,1210.84 1085.72,1210.84 1086.3,1210.84 1086.89,1210.84 1087.47,1210.84 1088.06,1210.84 1088.65,1210.84 1089.23,1210.84 1089.82,1210.84 1090.41,1210.84 1090.99,1210.84 1091.58,1210.84 1092.17,1210.84 1092.75,1210.84 1093.34,1210.84 1093.93,1210.84 1094.51,1210.84 1095.1,1210.84 1095.68,1210.84 1096.27,1210.84 1096.86,1210.84 1097.44,1210.84 1098.03,1210.84 1098.62,1210.84 1099.2,1210.84 1099.79,1210.84 1100.38,1210.84 1100.96,1210.84 1101.55,1210.84 1102.14,1210.84 1102.72,1210.84 1103.31,1210.84 1103.89,1210.84 1104.48,1210.84 1105.07,1210.84 1105.65,1210.84 1106.24,1210.84 1106.83,1210.84 1107.41,1210.84 1108,1210.84 1108.59,1210.84 1109.17,1210.84 1109.76,1210.84 1110.34,1210.84 1110.93,1210.84 1111.52,1210.84 1112.1,1210.84 1112.69,1210.84 1113.28,1210.84 1113.86,1210.84 1114.45,1210.84 1115.04,1210.84 1115.62,1210.84 1116.21,1210.84 1116.8,1210.84 1117.38,1210.84 1117.97,1210.84 1118.55,1210.84 1119.14,1210.84 1119.73,1210.84 1120.31,1210.84 1120.9,1210.84 1121.49,1210.84 1122.07,1210.84 1122.66,1210.84 1123.25,1210.84 1123.83,1210.84 1124.42,1210.84 1125.01,1210.84 1125.59,1210.84 1126.18,1210.84 1126.76,1210.84 1127.35,1210.84 1127.94,1210.84 1128.52,1210.84 1129.11,1210.84 1129.7,1210.84 1130.28,1210.84 1130.87,1210.84 1131.46,1210.84 1132.04,1210.84 1132.63,1210.84 1133.21,1210.84 1133.8,1210.84 1134.39,1210.84 1134.97,1210.84 1135.56,1210.84 1136.15,1210.84 1136.73,1210.84 1137.32,1210.84 1137.91,1210.84 1138.49,1210.84 1139.08,1210.84 1139.67,1210.84 1140.25,1210.84 1140.84,1210.84 1141.42,1210.84 1142.01,1210.84 1142.6,1210.84 1143.18,1210.84 1143.77,1210.84 1144.36,1210.84 1144.94,1210.84 1145.53,1210.84 1146.12,1210.84 1146.7,1210.84 1147.29,1210.84 1147.88,1210.84 1148.46,1210.84 1149.05,1210.84 1149.63,1210.84 1150.22,1210.84 1150.81,1210.84 1151.39,1210.84 1151.98,1210.84 1152.57,1210.84 1153.15,1210.84 1153.74,1210.84 1154.33,1210.84 1154.91,1210.84 1155.5,1210.84 1156.09,1210.84 1156.67,1210.84 1157.26,1210.84 1157.84,1210.84 1158.43,1210.84 1159.02,1210.84 1159.6,1210.84 1160.19,1210.84 1160.78,1210.84 1161.36,1210.84 1161.95,1210.84 1162.54,1210.84 1163.12,1210.84 1163.71,1210.84 1164.29,1210.84 1164.88,1210.84 1165.47,1210.84 1166.05,1210.84 1166.64,1210.84 1167.23,1210.84 1167.81,1210.84 1168.4,1210.84 1168.99,1210.84 1169.57,1210.84 1170.16,1210.84 1170.75,1210.84 1171.33,1210.84 1171.92,1210.84 1172.5,1210.84 1173.09,1210.84 1173.68,1210.84 1174.26,1210.84 1174.85,1210.84 1175.44,1210.84 1176.02,1210.84 1176.61,1210.84 1177.2,1210.84 1177.78,1210.84 1178.37,1210.84 1178.96,1210.84 1179.54,1210.84 1180.13,1210.84 1180.71,1210.84 1181.3,1210.84 1181.89,1210.84 1182.47,1210.84 1183.06,1210.84 1183.65,1210.84 1184.23,1210.84 1184.82,1210.84 1185.41,1210.84 1185.99,1210.84 1186.58,1210.84 1187.16,1210.84 1187.75,1210.84 1188.34,1210.84 1188.92,1210.84 1189.51,1210.84 1190.1,1210.84 1190.68,1210.84 1191.27,1210.84 1191.86,1210.84 1192.44,1210.84 1193.03,1210.84 1193.62,1210.84 1194.2,1210.84 1194.79,1210.84 1195.37,1210.84 1195.96,1210.84 1196.55,1210.84 1197.13,1210.84 1197.72,1210.84 1198.31,1210.84 1198.89,1210.84 1199.48,1210.84 1200.07,1210.84 1200.65,1210.84 1201.24,1210.84 1201.83,1210.84 1202.41,1210.84 1203,1210.84 1203.58,1210.84 1204.17,1210.84 1204.76,1210.84 1205.34,1210.84 1205.93,1210.84 1206.52,1210.84 1207.1,1210.84 1207.69,1210.84 1208.28,1210.84 1208.86,1210.84 1209.45,1210.84 1210.03,1210.84 1210.62,1210.84 1211.21,1210.84 1211.79,1210.84 1212.38,1210.84 1212.97,1210.84 1213.55,1210.84 1214.14,1210.84 1214.73,1210.84 1215.31,1210.84 1215.9,1210.84 1216.49,1210.84 1217.07,1210.84 1217.66,1210.84 1218.24,1210.84 1218.83,1210.84 1219.42,1210.84 1220,1210.84 1220.59,1210.84 1221.18,1210.84 1221.76,1210.84 1222.35,1210.84 1222.94,1210.84 1223.52,1210.84 1224.11,1210.84 1224.7,1210.84 1225.28,1210.84 1225.87,1210.84 1226.45,1210.84 1227.04,1210.84 1227.63,1210.84 1228.21,1210.84 1228.8,1210.84 1229.39,1210.84 1229.97,1210.84 1230.56,1210.84 1231.15,1210.84 1231.73,1210.84 1232.32,1210.84 1232.91,1210.84 1233.49,1210.84 1234.08,1210.84 1234.66,1210.84 1235.25,1210.84 1235.84,1210.84 1236.42,1210.84 1237.01,1210.84 1237.6,1210.84 1238.18,1210.84 1238.77,1210.84 1239.36,1210.84 1239.94,1210.84 1240.53,1210.84 1241.11,1210.84 1241.7,1210.84 1242.29,1210.84 1242.87,1210.84 1243.46,1210.84 1244.05,1210.84 1244.63,1210.84 1245.22,1210.84 1245.81,1210.84 1246.39,1210.84 1246.98,1210.84 1247.57,1210.84 1248.15,1210.84 1248.74,1210.84 1249.32,1210.84 1249.91,1210.84 1250.5,1210.84 1251.08,1210.84 1251.67,1210.84 1252.26,1210.84 1252.84,1210.84 1253.43,1210.84 1254.02,1210.84 1254.6,1210.84 1255.19,1210.84 1255.78,1210.84 1256.36,1210.84 1256.95,1210.84 1257.53,1210.84 1258.12,1210.84 1258.71,1210.84 1259.29,1210.84 1259.88,1210.84 1260.47,1210.84 1261.05,1210.84 1261.64,1210.84 1262.23,1210.84 1262.81,1210.84 1263.4,1210.84 1263.98,1210.84 1264.57,1210.84 1265.16,1210.84 1265.74,1210.84 1266.33,1210.84 1266.92,1210.84 1267.5,1210.84 1268.09,1210.84 1268.68,1210.84 1269.26,1210.84 1269.85,1210.84 1270.44,1210.84 1271.02,1210.84 1271.61,1210.84 1272.19,1210.84 1272.78,1210.84 1273.37,1210.84 1273.95,1210.84 1274.54,1210.84 1275.13,1210.84 1275.71,1210.84 1276.3,1210.84 1276.89,1210.84 1277.47,1210.84 1278.06,1210.84 1278.65,1210.84 1279.23,1210.84 1279.82,1210.84 1280.4,1210.84 1280.99,1210.84 1281.58,1210.84 1282.16,1210.84 1282.75,1210.84 1283.34,1210.84 1283.92,1210.84 1284.51,1210.84 1285.1,1210.84 1285.68,1210.84 1286.27,1210.84 1286.86,1210.84 1287.44,1210.84 1288.03,1210.84 1288.61,1210.84 1289.2,1210.84 1289.79,1210.84 1290.37,1210.84 1290.96,1210.84 1291.55,1210.84 1292.13,1210.84 1292.72,1210.84 1293.31,1210.84 1293.89,1210.84 1294.48,1210.84 1295.06,1210.84 1295.65,1210.84 1296.24,1210.84 1296.82,1210.84 1297.41,1210.84 1298,1210.84 1298.58,1210.84 1299.17,1210.84 1299.76,1210.84 1300.34,1210.84 1300.93,1210.84 1301.52,1210.84 1302.1,1210.84 1302.69,1210.84 1303.27,1210.84 1303.86,1210.84 1304.45,1210.84 1305.03,1210.84 1305.62,1210.84 1306.21,1210.84 1306.79,1210.84 1307.38,1210.84 1307.97,1210.84 1308.55,1210.84 1309.14,1210.84 1309.73,1210.84 1310.31,1210.84 1310.9,1210.84 1311.48,1210.84 1312.07,1210.84 1312.66,1210.84 1313.24,1210.84 1313.83,1210.84 1314.42,1210.84 1315,1210.84 1315.59,1210.84 1316.18,1210.84 1316.76,1210.84 1317.35,1210.84 1317.93,1210.84 1318.52,1210.84 1319.11,1210.84 1319.69,1210.84 1320.28,1210.84 1320.87,1210.84 1321.45,1210.84 1322.04,1210.84 1322.63,1210.84 1323.21,1210.84 1323.8,1210.84 1324.39,1210.84 1324.97,1210.84 1325.56,1210.84 1326.14,1210.84 1326.73,1210.84 1327.32,1210.84 1327.9,1210.84 1328.49,1210.84 1329.08,1210.84 1329.66,1210.84 1330.25,1210.84 1330.84,1210.84 1331.42,1210.84 1332.01,1210.84 1332.6,1210.84 1333.18,1210.84 1333.77,1210.84 1334.35,1210.84 1334.94,1210.84 1335.53,1210.84 1336.11,1210.84 1336.7,1210.84 1337.29,1210.84 1337.87,1210.84 1338.46,1210.84 1339.05,1210.84 1339.63,1210.84 1340.22,1210.84 1340.8,1210.84 1341.39,1210.84 1341.98,1210.84 1342.56,1210.84 1343.15,1210.84 1343.74,1210.84 1344.32,1210.84 1344.91,1210.84 1345.5,1210.84 1346.08,1210.84 1346.67,1210.84 1347.26,1210.84 1347.84,1210.84 1348.43,1210.84 1349.01,1210.84 1349.6,1210.84 1350.19,1210.84 1350.77,1210.84 1351.36,1210.84 1351.95,1210.84 1352.53,1210.84 1353.12,1210.84 1353.71,1210.84 1354.29,1210.84 1354.88,1210.84 1355.47,1210.84 1356.05,1210.84 1356.64,1210.84 1357.22,1210.84 1357.81,1210.84 1358.4,1210.84 1358.98,1210.84 1359.57,1210.84 1360.16,1210.84 1360.74,1210.84 1361.33,1210.84 1361.92,1210.84 1362.5,1210.84 1363.09,1210.84 1363.68,1210.84 1364.26,1210.84 1364.85,1210.84 1365.43,1210.84 1366.02,1210.84 1366.61,1210.84 1367.19,1210.84 1367.78,1210.84 1368.37,1210.84 1368.95,1210.84 1369.54,1210.84 1370.13,1210.84 1370.71,1210.84 1371.3,1210.84 1371.88,1210.84 1372.47,1210.84 1373.06,1210.84 1373.64,1210.84 1374.23,1210.84 1374.82,1210.84 1375.4,1210.84 1375.99,1210.84 1376.58,1210.84 1377.16,1210.84 1377.75,1210.84 1378.34,1210.84 1378.92,1210.84 1379.51,1210.84 1380.09,1210.84 1380.68,1210.84 1381.27,1210.84 1381.85,1210.84 1382.44,1210.84 1383.03,1210.84 1383.61,1210.84 1384.2,1210.84 1384.79,1210.84 1385.37,1210.84 1385.96,1210.84 1386.55,1210.84 1387.13,1210.84 1387.72,1210.84 1388.3,1210.84 1388.89,1210.84 1389.48,1210.84 1390.06,1210.84 1390.65,1210.84 1391.24,1210.84 1391.82,1210.84 1392.41,1210.84 1393,1210.84 1393.58,1210.84 1394.17,1210.84 1394.75,1210.84 1395.34,1210.84 1395.93,1210.84 1396.51,1210.84 1397.1,1210.84 1397.69,1210.84 1398.27,1210.84 1398.86,1210.84 1399.45,1210.84 1400.03,1210.84 1400.62,1210.84 1401.21,1210.84 1401.79,1210.84 1402.38,1210.84 1402.96,1210.84 1403.55,1210.84 1404.14,1210.84 1404.72,1210.84 1405.31,1210.84 1405.9,1210.84 1406.48,1210.84 1407.07,1210.84 1407.66,1210.84 1408.24,1210.84 1408.83,1210.84 1409.42,1210.84 1410,1210.84 1410.59,1210.84 1411.17,1210.84 1411.76,1210.84 1412.35,1210.84 1412.93,1210.84 1413.52,1210.84 1414.11,1210.84 1414.69,1210.84 1415.28,1210.84 1415.87,1210.84 1416.45,1210.84 1417.04,1210.84 1417.63,1210.84 1418.21,1210.84 1418.8,1210.84 1419.38,1210.84 1419.97,1210.84 1420.56,1210.84 1421.14,1210.84 1421.73,1210.84 1422.32,1210.84 1422.9,1210.84 1423.49,1210.84 1424.08,1210.84 1424.66,1210.84 1425.25,1210.84 1425.83,1210.84 1426.42,1210.84 1427.01,1210.84 1427.59,1210.84 1428.18,1210.84 1428.77,1210.84 1429.35,1210.84 1429.94,1210.84 1430.53,1210.84 1431.11,1210.84 1431.7,1210.84 1432.29,1210.84 1432.87,1210.84 1433.46,1210.84 1434.04,1210.84 1434.63,1210.84 1435.22,1210.84 1435.8,1210.84 1436.39,1210.84 1436.98,1210.84 1437.56,1210.84 1438.15,1210.84 1438.74,1210.84 1439.32,1210.84 1439.91,1210.84 1440.5,1210.84 1441.08,1210.84 1441.67,1210.84 1442.25,1210.84 1442.84,1210.84 1443.43,1210.84 1444.01,1210.84 1444.6,1210.84 1445.19,1210.84 1445.77,1210.84 1446.36,1210.84 1446.95,1210.84 1447.53,1210.84 1448.12,1210.84 1448.7,1210.84 1449.29,1210.84 1449.88,1210.84 1450.46,1210.84 1451.05,1210.84 1451.64,1210.84 1452.22,1210.84 1452.81,1210.84 1453.4,1210.84 1453.98,1210.84 1454.57,1210.84 1455.16,1210.84 1455.74,1210.84 1456.33,1210.84 1456.91,1210.84 1457.5,1210.84 1458.09,1210.84 1458.67,1210.84 1459.26,1210.84 1459.85,1210.84 1460.43,1210.84 1461.02,1210.84 1461.61,1210.84 1462.19,1210.84 1462.78,1210.84 1463.37,1210.84 1463.95,1210.84 1464.54,1210.84 1465.12,1210.84 1465.71,1210.84 1466.3,1210.84 1466.88,1210.84 1467.47,1210.84 1468.06,1210.84 1468.64,1210.84 1469.23,1210.84 1469.82,1210.84 1470.4,1210.84 1470.99,1210.84 1471.57,1210.84 1472.16,1210.84 1472.75,1210.84 1473.33,1210.84 1473.92,1210.84 1474.51,1210.84 1475.09,1210.84 1475.68,1210.84 1476.27,1210.84 1476.85,1210.84 1477.44,1210.84 1478.03,1210.84 1478.61,1210.84 1479.2,1210.84 1479.78,1210.84 1480.37,1210.84 1480.96,1210.84 1481.54,1210.84 1482.13,1210.84 1482.72,1210.84 1483.3,1210.84 1483.89,1210.84 1484.48,1210.84 1485.06,1210.84 1485.65,1210.84 1486.24,1210.84 1486.82,1210.84 1487.41,1210.84 1487.99,1210.84 1488.58,1210.84 1489.17,1210.84 1489.75,1210.84 1490.34,1210.84 1490.93,1210.84 1491.51,1210.84 1492.1,1210.84 1492.69,1210.84 1493.27,1210.84 1493.86,1210.84 1494.45,1210.84 1495.03,1210.84 1495.62,1210.84 1496.2,1210.84 1496.79,1210.84 1497.38,1210.84 1497.96,1210.84 1498.55,1210.84 1499.14,1210.84 1499.72,1210.84 1500.31,1210.84 1500.9,1210.84 1501.48,1210.84 1502.07,1210.84 1502.65,1210.84 1503.24,1210.84 1503.83,1210.84 1504.41,1210.84 1505,1210.84 1505.59,1210.84 1506.17,1210.84 1506.76,1210.84 1507.35,1210.84 1507.93,1210.84 1508.52,1210.84 1509.11,1210.84 1509.69,1210.84 1510.28,1210.84 1510.86,1210.84 1511.45,1210.84 1512.04,1210.84 1512.62,1210.84 1513.21,1210.84 1513.8,1210.84 1514.38,1210.84 1514.97,1210.84 1515.56,1210.84 1516.14,1210.84 1516.73,1210.84 1517.32,1210.84 1517.9,1210.84 1518.49,1210.84 1519.07,1210.84 1519.66,1210.84 1520.25,1210.84 1520.83,1210.84 1521.42,1210.84 1522.01,1210.84 1522.59,1210.84 1523.18,1210.84 1523.77,1210.84 1524.35,1210.84 1524.94,1210.84 1525.52,1210.84 1526.11,1210.84 1526.7,1210.84 1527.28,1210.84 1527.87,1210.84 1528.46,1210.84 1529.04,1210.84 1529.63,1210.84 1530.22,1210.84 1530.8,1210.84 1531.39,1210.84 1531.98,1210.84 1532.56,1210.84 1533.15,1210.84 1533.73,1210.84 1534.32,1210.84 1534.91,1210.84 1535.49,1210.84 1536.08,1210.84 1536.67,1210.84 1537.25,1210.84 1537.84,1210.84 1538.43,1210.84 1539.01,1210.84 1539.6,1210.84 1540.19,1210.84 1540.77,1210.84 1541.36,1210.84 1541.94,1210.84 1542.53,1210.84 1543.12,1210.84 1543.7,1210.84 1544.29,1210.84 1544.88,1210.84 1545.46,1210.84 1546.05,1210.84 1546.64,1210.84 1547.22,1210.84 1547.81,1210.84 1548.4,1210.84 1548.98,1210.84 1549.57,1210.84 1550.15,1210.84 1550.74,1210.84 1551.33,1210.84 1551.91,1210.84 1552.5,1210.84 1553.09,1210.84 1553.67,1210.84 1554.26,1210.84 1554.85,1210.84 1555.43,1210.84 1556.02,1210.84 1556.6,1210.84 1557.19,1210.84 1557.78,1210.84 1558.36,1210.84 1558.95,1210.84 1559.54,1210.84 1560.12,1210.84 1560.71,1210.84 1561.3,1210.84 1561.88,1210.84 1562.47,1210.84 1563.06,1210.84 1563.64,1210.84 1564.23,1210.84 1564.81,1210.84 1565.4,1210.84 1565.99,1210.84 1566.57,1210.84 1567.16,1210.84 1567.75,1210.84 1568.33,1210.84 1568.92,1210.84 1569.51,1210.84 1570.09,1210.84 1570.68,1210.84 1571.27,1210.84 1571.85,1210.84 1572.44,1210.84 1573.02,1210.84 1573.61,1210.84 1574.2,1210.84 1574.78,1210.84 1575.37,1210.84 1575.96,1210.84 1576.54,1210.84 1577.13,1210.84 1577.72,1210.84 1578.3,1210.84 1578.89,1210.84 1579.47,1210.84 1580.06,1210.84 1580.65,1210.84 1581.23,1210.84 1581.82,1210.84 1582.41,1210.84 1582.99,1210.84 1583.58,1210.84 1584.17,1210.84 1584.75,1210.84 1585.34,1210.84 1585.93,1210.84 1586.51,1210.84 1587.1,1210.84 1587.68,1210.84 1588.27,1210.84 1588.86,1210.84 1589.44,1210.84 1590.03,1210.84 1590.62,1210.84 1591.2,1210.84 1591.79,1210.84 1592.38,1210.84 1592.96,1210.84 1593.55,1210.84 1594.14,1210.84 1594.72,1210.84 1595.31,1210.84 1595.89,1210.84 1596.48,1210.84 1597.07,1210.84 1597.65,1210.84 1598.24,1210.84 1598.83,1210.84 1599.41,1210.84 1600,1210.84 1600.59,1210.84 1601.17,1210.84 1601.76,1210.84 1602.34,1210.84 1602.93,1210.84 1603.52,1210.84 1604.1,1210.84 1604.69,1210.84 1605.28,1210.84 1605.86,1210.84 1606.45,1210.84 1607.04,1210.84 1607.62,1210.84 1608.21,1210.84 1608.8,1210.84 1609.38,1210.84 1609.97,1210.84 1610.55,1210.84 1611.14,1210.84 1611.73,1210.84 1612.31,1210.84 1612.9,1210.84 1613.49,1210.84 1614.07,1210.84 1614.66,1210.84 1615.25,1210.84 1615.83,1210.84 1616.42,1210.84 1617.01,1210.84 1617.59,1210.84 1618.18,1210.84 1618.76,1210.84 1619.35,1210.84 1619.94,1210.84 1620.52,1210.84 1621.11,1210.84 1621.7,1210.84 1622.28,1210.84 1622.87,1210.84 1623.46,1210.84 1624.04,1210.84 1624.63,1210.84 1625.22,1210.84 1625.8,1210.84 1626.39,1210.84 1626.97,1210.84 1627.56,1210.84 1628.15,1210.84 1628.73,1210.84 1629.32,1210.84 1629.91,1210.84 1630.49,1210.84 1631.08,1210.84 1631.67,1210.84 1632.25,1210.84 1632.84,1210.84 1633.42,1210.84 1634.01,1210.84 1634.6,1210.84 1635.18,1210.84 1635.77,1210.84 1636.36,1210.84 1636.94,1210.84 1637.53,1210.84 1638.12,1210.84 1638.7,1210.84 1639.29,1210.84 1639.88,1210.84 1640.46,1210.84 1641.05,1210.84 1641.63,1210.84 1642.22,1210.84 1642.81,1210.84 1643.39,1210.84 1643.98,1210.84 1644.57,1210.84 1645.15,1210.84 1645.74,1210.84 1646.33,1210.84 1646.91,1210.84 1647.5,1210.84 1648.09,1210.84 1648.67,1210.84 1649.26,1210.84 1649.84,1210.84 1650.43,1210.84 1651.02,1210.84 1651.6,1210.84 1652.19,1210.84 1652.78,1210.84 1653.36,1210.84 1653.95,1210.84 1654.54,1210.84 1655.12,1210.84 1655.71,1210.84 1656.29,1210.84 1656.88,1210.84 1657.47,1210.84 1658.05,1210.84 1658.64,1210.84 1659.23,1210.84 1659.81,1210.84 1660.4,1210.84 1660.99,1210.84 1661.57,1210.84 1662.16,1210.84 1662.75,1210.84 1663.33,1210.84 1663.92,1210.84 1664.5,1210.84 1665.09,1210.84 1665.68,1210.84 1666.26,1210.84 1666.85,1210.84 1667.44,1210.84 1668.02,1210.84 1668.61,1210.84 1669.2,1210.84 1669.78,1210.84 1670.37,1210.84 1670.96,1210.84 1671.54,1210.84 1672.13,1210.84 1672.71,1210.84 1673.3,1210.84 1673.89,1210.84 1674.47,1210.84 1675.06,1210.84 1675.65,1210.84 1676.23,1210.84 1676.82,1210.84 1677.41,1210.84 1677.99,1210.84 1678.58,1210.84 1679.17,1210.84 1679.75,1210.84 1680.34,1210.84 1680.92,1210.84 1681.51,1210.84 1682.1,1210.84 1682.68,1210.84 1683.27,1210.84 1683.86,1210.84 1684.44,1210.84 1685.03,1210.84 1685.62,1210.84 1686.2,1210.84 1686.79,1210.84 1687.37,1210.84 1687.96,1210.84 1688.55,1210.84 1689.13,1210.84 1689.72,1210.84 1690.31,1210.84 1690.89,1210.84 1691.48,1210.84 1692.07,1210.84 1692.65,1210.84 1693.24,1210.84 1693.83,1210.84 1694.41,1210.84 1695,1210.84 1695.58,1210.84 1696.17,1210.84 1696.76,1210.84 1697.34,1210.84 1697.93,1210.84 1698.52,1210.84 1699.1,1210.84 1699.69,1210.84 1700.28,1210.84 1700.86,1210.84 1701.45,1210.84 1702.04,1210.84 1702.62,1210.84 1703.21,1210.84 1703.79,1210.84 1704.38,1210.84 1704.97,1210.84 1705.55,1210.84 1706.14,1210.84 1706.73,1210.84 1707.31,1210.84 1707.9,1210.84 1708.49,1210.84 1709.07,1210.84 1709.66,1210.84 1710.24,1210.84 1710.83,1210.84 1711.42,1210.84 1712,1210.84 1712.59,1210.84 1713.18,1210.84 1713.76,1210.84 1714.35,1210.84 1714.94,1210.84 1715.52,1210.84 1716.11,1210.84 1716.7,1210.84 1717.28,1210.84 1717.87,1210.84 1718.45,1210.84 1719.04,1210.84 1719.63,1210.84 1720.21,1210.84 1720.8,1210.84 1721.39,1210.84 1721.97,1210.84 1722.56,1210.84 1723.15,1210.84 1723.73,1210.84 1724.32,1210.84 1724.91,1210.84 1725.49,1210.84 1726.08,1210.84 1726.66,1210.84 1727.25,1210.84 1727.84,1210.84 1728.42,1210.84 1729.01,1210.84 1729.6,1210.84 1730.18,1210.84 1730.77,1210.84 1731.36,1210.84 1731.94,1210.84 1732.53,1210.84 1733.11,1210.84 1733.7,1210.84 1734.29,1210.84 1734.87,1210.84 1735.46,1210.84 1736.05,1210.84 1736.63,1210.84 1737.22,1210.84 1737.81,1210.84 1738.39,1210.84 1738.98,1210.84 1739.57,1210.84 1740.15,1210.84 1740.74,1210.84 1741.32,1210.84 1741.91,1210.84 1742.5,1210.84 1743.08,1210.84 1743.67,1210.84 1744.26,1210.84 1744.84,1210.84 1745.43,1210.84 1746.02,1210.84 1746.6,1210.84 1747.19,1210.84 1747.78,1210.84 1748.36,1210.84 1748.95,1210.84 1749.53,1210.84 1750.12,1210.84 1750.71,1210.84 1751.29,1210.84 1751.88,1210.84 1752.47,1210.84 1753.05,1210.84 1753.64,1210.84 1754.23,1210.84 1754.81,1210.84 1755.4,1210.84 1755.99,1210.84 1756.57,1210.84 1757.16,1210.84 1757.74,1210.84 1758.33,1210.84 1758.92,1210.84 1759.5,1210.84 1760.09,1210.84 1760.68,1210.84 1761.26,1210.84 1761.85,1210.84 1762.44,1210.84 1763.02,1210.84 1763.61,1210.84 1764.19,1210.84 1764.78,1210.84 1765.37,1210.84 1765.95,1210.84 1766.54,1210.84 1767.13,1210.84 1767.71,1210.84 1768.3,1210.84 1768.89,1210.84 1769.47,1210.84 1770.06,1210.84 1770.65,1210.84 1771.23,1210.84 1771.82,1210.84 1772.4,1210.84 1772.99,1210.84 1773.58,1210.84 1774.16,1210.84 1774.75,1210.84 1775.34,1210.84 1775.92,1210.84 1776.51,1210.84 1777.1,1210.84 1777.68,1210.84 1778.27,1210.84 1778.86,1210.84 1779.44,1210.84 1780.03,1210.84 1780.61,1210.84 1781.2,1210.84 1781.79,1210.84 1782.37,1210.84 1782.96,1210.84 1783.55,1210.84 1784.13,1210.84 1784.72,1210.84 1785.31,1210.84 1785.89,1210.84 1786.48,1210.84 1787.06,1210.84 1787.65,1210.84 1788.24,1210.84 1788.82,1210.84 1789.41,1210.84 1790,1210.84 1790.58,1210.84 1791.17,1210.84 1791.76,1210.84 1792.34,1210.84 1792.93,1210.84 1793.52,1210.84 1794.1,1210.84 1794.69,1210.84 1795.27,1210.84 1795.86,1210.84 1796.45,1210.84 1797.03,1210.84 1797.62,1210.84 1798.21,1210.84 1798.79,1210.84 1799.38,1210.84 1799.97,1210.84 1800.55,1210.84 1801.14,1210.84 1801.73,1210.84 1802.31,1210.84 1802.9,1210.84 1803.48,1210.84 1804.07,1210.84 1804.66,1210.84 1805.24,1210.84 1805.83,1210.84 1806.42,1210.84 1807,1210.84 1807.59,1210.84 1808.18,1210.84 1808.76,1210.84 1809.35,1210.84 1809.94,1210.84 1810.52,1210.84 1811.11,1210.84 1811.69,1210.84 1812.28,1210.84 1812.87,1210.84 1813.45,1210.84 1814.04,1210.84 1814.63,1210.84 1815.21,1210.84 1815.8,1210.84 1816.39,1210.84 1816.97,1210.84 1817.56,1210.84 1818.14,1210.84 1818.73,1210.84 1819.32,1210.84 1819.9,1210.84 1820.49,1210.84 1821.08,1210.84 1821.66,1210.84 1822.25,1210.84 1822.84,1210.84 1823.42,1210.84 1824.01,1210.84 1824.6,1210.84 1825.18,1210.84 1825.77,1210.84 1826.35,1210.84 1826.94,1210.84 1827.53,1210.84 1828.11,1210.84 1828.7,1210.84 1829.29,1210.84 1829.87,1210.84 1830.46,1210.84 1831.05,1210.84 1831.63,1210.84 1832.22,1210.84 1832.81,1210.84 1833.39,1210.84 1833.98,1210.84 1834.56,1210.84 1835.15,1210.84 1835.74,1210.84 1836.32,1210.84 1836.91,1210.84 1837.5,1210.84 1838.08,1210.84 1838.67,1210.84 1839.26,1210.84 1839.84,1210.84 1840.43,1210.84 1841.01,1210.84 1841.6,1210.84 1842.19,1210.84 1842.77,1210.84 1843.36,1210.84 1843.95,1210.84 1844.53,1210.84 1845.12,1210.84 1845.71,1210.84 1846.29,1210.84 1846.88,1210.84 1847.47,1210.84 1848.05,1210.84 1848.64,1210.84 1849.22,1210.84 1849.81,1210.84 1850.4,1210.84 1850.98,1210.84 1851.57,1210.84 1852.16,1210.84 1852.74,1210.84 1853.33,1210.84 1853.92,1210.84 1854.5,1210.84 1855.09,1210.84 1855.68,1210.84 1856.26,1210.84 1856.85,1210.84 1857.43,1210.84 1858.02,1210.84 1858.61,1210.84 1859.19,1210.84 1859.78,1210.84 1860.37,1210.84 1860.95,1210.84 1861.54,1210.84 1862.13,1210.84 1862.71,1210.84 1863.3,1210.84 1863.88,1210.84 1864.47,1210.84 1865.06,1210.84 1865.64,1210.84 1866.23,1210.84 1866.82,1210.84 1867.4,1210.84 1867.99,1210.84 1868.58,1210.84 1869.16,1210.84 1869.75,1210.84 1870.34,1210.84 1870.92,1210.84 1871.51,1210.84 1872.09,1210.84 1872.68,1210.84 1873.27,1210.84 1873.85,1210.84 1874.44,1210.84 1875.03,1210.84 1875.61,1210.84 1876.2,1210.84 1876.79,1210.84 1877.37,1210.84 1877.96,1210.84 1878.55,1210.84 1879.13,1210.84 1879.72,1210.84 1880.3,1210.84 1880.89,1210.84 1881.48,1210.84 1882.06,1210.84 1882.65,1210.84 1883.24,1210.84 1883.82,1210.84 1884.41,1210.84 1885,1210.84 1885.58,1210.84 1886.17,1210.84 1886.76,1210.84 1887.34,1210.84 1887.93,1210.84 1888.51,1210.84 1889.1,1210.84 1889.69,1210.84 1890.27,1210.84 1890.86,1210.84 1891.45,1210.84 1892.03,1210.84 1892.62,1210.84 1893.21,1210.84 1893.79,1210.84 1894.38,1210.84 1894.96,1210.84 1895.55,1210.84 1896.14,1210.84 1896.72,1210.84 1897.31,1210.84 1897.9,1210.84 1898.48,1210.84 1899.07,1210.84 1899.66,1210.84 1900.24,1210.84 1900.83,1210.84 1901.42,1210.84 1902,1210.84 1902.59,1210.84 1903.17,1210.84 1903.76,1210.84 1904.35,1210.84 1904.93,1210.84 1905.52,1210.84 1906.11,1210.84 1906.69,1210.84 1907.28,1210.84 1907.87,1210.84 1908.45,1210.84 1909.04,1210.84 1909.63,1210.84 1910.21,1210.84 1910.8,1210.84 1911.38,1210.84 1911.97,1210.84 1912.56,1210.84 1913.14,1210.84 1913.73,1210.84 1914.32,1210.84 1914.9,1210.84 1915.49,1210.84 1916.08,1210.84 1916.66,1210.84 1917.25,1210.84 1917.83,1210.84 1918.42,1210.84 1919.01,1210.84 1919.59,1210.84 1920.18,1210.84 1920.77,1210.84 1921.35,1210.84 1921.94,1210.84 1922.53,1210.84 1923.11,1210.84 1923.7,1210.84 1924.29,1210.84 1924.87,1210.84 1925.46,1210.84 1926.04,1210.84 1926.63,1210.84 1927.22,1210.84 1927.8,1210.84 1928.39,1210.84 1928.98,1210.84 1929.56,1210.84 1930.15,1210.84 1930.74,1210.84 1931.32,1210.84 1931.91,1210.84 1932.5,1210.84 1933.08,1210.84 1933.67,1210.84 1934.25,1210.84 1934.84,1210.84 1935.43,1210.84 1936.01,1210.84 1936.6,1210.84 1937.19,1210.84 1937.77,1210.84 1938.36,1210.84 1938.95,1210.84 1939.53,1210.84 1940.12,1210.84 1940.71,1210.84 1941.29,1210.84 1941.88,1210.84 1942.46,1210.84 1943.05,1210.84 1943.64,1210.84 1944.22,1210.84 1944.81,1210.84 1945.4,1210.84 1945.98,1210.84 1946.57,1210.84 1947.16,1210.84 1947.74,1210.84 1948.33,1210.84 1948.91,1210.84 1949.5,1210.84 1950.09,1210.84 1950.67,1210.84 1951.26,1210.84 1951.85,1210.84 1952.43,1210.84 1953.02,1210.84 1953.61,1210.84 1954.19,1210.84 1954.78,1210.84 1955.37,1210.84 1955.95,1210.84 1956.54,1210.84 1957.12,1210.84 1957.71,1210.84 1958.3,1210.84 1958.88,1210.84 1959.47,1210.84 1960.06,1210.84 1960.64,1210.84 1961.23,1210.84 1961.82,1210.84 1962.4,1210.84 1962.99,1210.84 1963.58,1210.84 1964.16,1210.84 1964.75,1210.84 1965.33,1210.84 1965.92,1210.84 1966.51,1210.84 1967.09,1210.84 1967.68,1210.84 1968.27,1210.84 1968.85,1210.84 1969.44,1210.84 1970.03,1210.84 1970.61,1210.84 1971.2,1210.84 1971.78,1210.84 1972.37,1210.84 1972.96,1210.84 1973.54,1210.84 1974.13,1210.84 1974.72,1210.84 1975.3,1210.84 1975.89,1210.84 1976.48,1210.84 1977.06,1210.84 1977.65,1210.84 1978.24,1210.84 1978.82,1210.84 1979.41,1210.84 1979.99,1210.84 1980.58,1210.84 1981.17,1210.84 1981.75,1210.84 1982.34,1210.84 1982.93,1210.84 1983.51,1210.84 1984.1,1210.84 1984.69,1210.84 1985.27,1210.84 1985.86,1210.84 1986.45,1210.84 1987.03,1210.84 1987.62,1210.84 1988.2,1210.84 1988.79,1210.84 1989.38,1210.84 1989.96,1210.84 1990.55,1210.84 1991.14,1210.84 1991.72,1210.84 1992.31,1210.84 1992.9,1210.84 1993.48,1210.84 1994.07,1210.84 1994.65,1210.84 1995.24,1210.84 1995.83,1210.84 1996.41,1210.84 1997,1210.84 1997.59,1210.84 1998.17,1210.84 1998.76,1210.84 1999.35,1210.84 1999.93,1210.84 2000.52,1210.84 2001.11,1210.84 2001.69,1210.84 2002.28,1210.84 2002.86,1210.84 2003.45,1210.84 2004.04,1210.84 2004.62,1210.84 2005.21,1210.84 2005.8,1210.84 2006.38,1210.84 2006.97,1210.84 2007.56,1210.84 2008.14,1210.84 2008.73,1210.84 2009.32,1210.84 2009.9,1210.84 2010.49,1210.84 2011.07,1210.84 2011.66,1210.84 2012.25,1210.84 2012.83,1210.84 2013.42,1210.84 2014.01,1210.84 2014.59,1210.84 2015.18,1210.84 2015.77,1210.84 2016.35,1210.84 2016.94,1210.84 2017.53,1210.84 2018.11,1210.84 2018.7,1210.84 2019.28,1210.84 2019.87,1210.84 2020.46,1210.84 2021.04,1210.84 2021.63,1210.84 2022.22,1210.84 2022.8,1210.84 2023.39,1210.84 2023.98,1210.84 2024.56,1210.84 2025.15,1210.84 2025.73,1210.84 2026.32,1210.84 2026.91,1210.84 2027.49,1210.84 2028.08,1210.84 2028.67,1210.84 2029.25,1210.84 2029.84,1210.84 2030.43,1210.84 2031.01,1210.84 2031.6,1210.84 2032.19,1210.84 2032.77,1210.84 2033.36,1210.84 2033.94,1210.84 2034.53,1210.84 2035.12,1210.84 2035.7,1210.84 2036.29,1210.84 2036.88,1210.84 2037.46,1210.84 2038.05,1210.84 2038.64,1210.84 2039.22,1210.84 2039.81,1210.84 2040.4,1210.84 2040.98,1210.84 2041.57,1210.84 2042.15,1210.84 2042.74,1210.84 2043.33,1210.84 2043.91,1210.84 2044.5,1210.84 2045.09,1210.84 2045.67,1210.84 2046.26,1210.84 2046.85,1210.84 2047.43,1210.84 2048.02,1210.84 2048.6,1210.84 2049.19,1210.84 2049.78,1210.84 2050.36,1210.84 2050.95,1210.84 2051.54,1210.84 2052.12,1210.84 2052.71,1210.84 2053.3,1210.84 2053.88,1210.84 2054.47,1210.84 2055.06,1210.84 2055.64,1210.84 2056.23,1210.84 2056.81,1210.84 2057.4,1210.84 2057.99,1210.84 2058.57,1210.84 2059.16,1210.84 2059.75,1210.84 2060.33,1210.84 2060.92,1210.84 2061.51,1210.84 2062.09,1210.84 2062.68,1210.84 2063.27,1210.84 2063.85,1210.84 2064.44,1210.84 2065.02,1210.84 2065.61,1210.84 2066.2,1210.84 2066.78,1210.84 2067.37,1210.84 2067.96,1210.84 2068.54,1210.84 2069.13,1210.84 2069.72,1210.84 2070.3,1210.84 2070.89,1210.84 2071.48,1210.84 2072.06,1210.84 2072.65,1210.84 2073.23,1210.84 2073.82,1210.84 2074.41,1210.84 2074.99,1210.84 2075.58,1210.84 2076.17,1210.84 2076.75,1210.84 2077.34,1210.84 2077.93,1210.84 2078.51,1210.84 2079.1,1210.84 2079.68,1210.84 2080.27,1210.84 2080.86,1210.84 2081.44,1210.84 2082.03,1210.84 2082.62,1210.84 2083.2,1210.84 2083.79,1210.84 2084.38,1210.84 2084.96,1210.84 2085.55,1210.84 2086.14,1210.84 2086.72,1210.84 2087.31,1210.84 2087.89,1210.84 2088.48,1210.84 2089.07,1210.84 2089.65,1210.84 2090.24,1210.84 2090.83,1210.84 2091.41,1210.84 2092,1210.84 2092.59,1210.84 2093.17,1210.84 2093.76,1210.84 2094.35,1210.84 2094.93,1210.84 2095.52,1210.84 2096.1,1210.84 2096.69,1210.84 2097.28,1210.84 2097.86,1210.84 2098.45,1210.84 2099.04,1210.84 2099.62,1210.84 2100.21,1210.84 2100.8,1210.84 2101.38,1210.84 2101.97,1210.84 2102.55,1210.84 2103.14,1210.84 2103.73,1210.84 2104.31,1210.84 2104.9,1210.84 2105.49,1210.84 2106.07,1210.84 2106.66,1210.84 2107.25,1210.84 2107.83,1210.84 2108.42,1210.84 2109.01,1210.84 2109.59,1210.84 2110.18,1210.84 2110.76,1210.84 2111.35,1210.84 2111.94,1210.84 2112.52,1210.84 2113.11,1210.84 2113.7,1210.84 2114.28,1210.84 2114.87,1210.84 2115.46,1210.84 2116.04,1210.84 2116.63,1210.84 2117.22,1210.84 2117.8,1210.84 2118.39,1210.84 2118.97,1210.84 2119.56,1210.84 2120.15,1210.84 2120.73,1210.84 2121.32,1210.84 2121.91,1210.84 2122.49,1210.84 2123.08,1210.84 2123.67,1210.84 2124.25,1210.84 2124.84,1210.84 2125.42,1210.84 2126.01,1210.84 2126.6,1210.84 2127.18,1210.84 2127.77,1210.84 2128.36,1210.84 2128.94,1210.84 2129.53,1210.84 2130.12,1210.84 2130.7,1210.84 2131.29,1210.84 2131.88,1210.84 2132.46,1210.84 2133.05,1210.84 2133.63,1210.84 2134.22,1210.84 2134.81,1210.84 2135.39,1210.84 2135.98,1210.84 2136.57,1210.84 2137.15,1210.84 2137.74,1210.84 2138.33,1210.84 2138.91,1210.84 2139.5,1210.84 2140.09,1210.84 2140.67,1210.84 2141.26,1210.84 2141.84,1210.84 2142.43,1210.84 2143.02,1210.84 2143.6,1210.84 2144.19,1210.84 2144.78,1210.84 2145.36,1210.84 2145.95,1210.84 2146.54,1210.84 2147.12,1210.84 2147.71,1210.84 2148.3,1210.84 2148.88,1210.84 2149.47,1210.84 2150.05,1210.84 2150.64,1210.84 2151.23,1210.84 2151.81,1210.84 2152.4,1210.84 2152.99,1210.84 2153.57,1210.84 2154.16,1210.84 2154.75,1210.84 2155.33,1210.84 2155.92,1210.84 2156.5,1210.84 2157.09,1210.84 2157.68,1210.84 2158.26,1210.84 \"/>\n<polyline clip-path=\"url(#clip712)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1562.81,1194.26 1399.68,899.083 \"/>\n<polyline clip-path=\"url(#clip712)\" style=\"stroke:#d3d3d3; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"985.439,1226.99 985.439,1194.26 2158.26,1194.26 2158.26,1226.99 985.439,1226.99 \"/>\n<path clip-path=\"url(#clip710)\" d=\"M1564.14 432.752 L2148.88 432.752 L2148.88 225.392 L1564.14 225.392  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1564.14,432.752 2148.88,432.752 2148.88,225.392 1564.14,225.392 1564.14,432.752 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,277.232 1709.13,277.232 \"/>\n<path clip-path=\"url(#clip710)\" d=\"M1748.27 269.35 L1748.27 273.378 Q1746.46 272.452 1744.52 271.989 Q1742.57 271.526 1740.49 271.526 Q1737.32 271.526 1735.72 272.498 Q1734.15 273.471 1734.15 275.415 Q1734.15 276.896 1735.28 277.753 Q1736.41 278.586 1739.84 279.35 L1741.3 279.674 Q1745.84 280.646 1747.73 282.429 Q1749.66 284.188 1749.66 287.359 Q1749.66 290.97 1746.78 293.077 Q1743.94 295.183 1738.94 295.183 Q1736.85 295.183 1734.59 294.767 Q1732.34 294.373 1729.84 293.563 L1729.84 289.165 Q1732.2 290.392 1734.49 291.017 Q1736.78 291.619 1739.03 291.619 Q1742.04 291.619 1743.66 290.6 Q1745.28 289.558 1745.28 287.683 Q1745.28 285.947 1744.1 285.021 Q1742.94 284.095 1738.98 283.239 L1737.5 282.892 Q1733.54 282.058 1731.78 280.345 Q1730.03 278.609 1730.03 275.6 Q1730.03 271.943 1732.62 269.952 Q1735.21 267.961 1739.98 267.961 Q1742.34 267.961 1744.42 268.309 Q1746.51 268.656 1748.27 269.35 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1777.99 278.864 L1777.99 294.512 L1773.73 294.512 L1773.73 279.003 Q1773.73 275.322 1772.29 273.494 Q1770.86 271.665 1767.99 271.665 Q1764.54 271.665 1762.55 273.864 Q1760.56 276.063 1760.56 279.859 L1760.56 294.512 L1756.28 294.512 L1756.28 258.494 L1760.56 258.494 L1760.56 272.614 Q1762.09 270.276 1764.15 269.119 Q1766.23 267.961 1768.94 267.961 Q1773.4 267.961 1775.7 270.739 Q1777.99 273.494 1777.99 278.864 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1786.48 268.586 L1790.74 268.586 L1790.74 294.512 L1786.48 294.512 L1786.48 268.586 M1786.48 258.494 L1790.74 258.494 L1790.74 263.887 L1786.48 263.887 L1786.48 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1812.78 258.494 L1812.78 262.035 L1808.71 262.035 Q1806.41 262.035 1805.51 262.961 Q1804.63 263.887 1804.63 266.295 L1804.63 268.586 L1811.65 268.586 L1811.65 271.896 L1804.63 271.896 L1804.63 294.512 L1800.35 294.512 L1800.35 271.896 L1796.28 271.896 L1796.28 268.586 L1800.35 268.586 L1800.35 266.781 Q1800.35 262.452 1802.36 260.484 Q1804.38 258.494 1808.75 258.494 L1812.78 258.494 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1819.72 261.225 L1819.72 268.586 L1828.5 268.586 L1828.5 271.896 L1819.72 271.896 L1819.72 285.97 Q1819.72 289.142 1820.58 290.045 Q1821.46 290.947 1824.12 290.947 L1828.5 290.947 L1828.5 294.512 L1824.12 294.512 Q1819.19 294.512 1817.32 292.683 Q1815.44 290.832 1815.44 285.97 L1815.44 271.896 L1812.32 271.896 L1812.32 268.586 L1815.44 268.586 L1815.44 261.225 L1819.72 261.225 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip710)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,329.072 1709.13,329.072 \"/>\n<path clip-path=\"url(#clip710)\" d=\"M1748.27 321.19 L1748.27 325.218 Q1746.46 324.292 1744.52 323.829 Q1742.57 323.366 1740.49 323.366 Q1737.32 323.366 1735.72 324.338 Q1734.15 325.311 1734.15 327.255 Q1734.15 328.736 1735.28 329.593 Q1736.41 330.426 1739.84 331.19 L1741.3 331.514 Q1745.84 332.486 1747.73 334.269 Q1749.66 336.028 1749.66 339.199 Q1749.66 342.81 1746.78 344.917 Q1743.94 347.023 1738.94 347.023 Q1736.85 347.023 1734.59 346.607 Q1732.34 346.213 1729.84 345.403 L1729.84 341.005 Q1732.2 342.232 1734.49 342.857 Q1736.78 343.459 1739.03 343.459 Q1742.04 343.459 1743.66 342.44 Q1745.28 341.398 1745.28 339.523 Q1745.28 337.787 1744.1 336.861 Q1742.94 335.935 1738.98 335.079 L1737.5 334.732 Q1733.54 333.898 1731.78 332.185 Q1730.03 330.449 1730.03 327.44 Q1730.03 323.783 1732.62 321.792 Q1735.21 319.801 1739.98 319.801 Q1742.34 319.801 1744.42 320.149 Q1746.51 320.496 1748.27 321.19 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1777.99 330.704 L1777.99 346.352 L1773.73 346.352 L1773.73 330.843 Q1773.73 327.162 1772.29 325.334 Q1770.86 323.505 1767.99 323.505 Q1764.54 323.505 1762.55 325.704 Q1760.56 327.903 1760.56 331.699 L1760.56 346.352 L1756.28 346.352 L1756.28 310.334 L1760.56 310.334 L1760.56 324.454 Q1762.09 322.116 1764.15 320.959 Q1766.23 319.801 1768.94 319.801 Q1773.4 319.801 1775.7 322.579 Q1777.99 325.334 1777.99 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1786.48 320.426 L1790.74 320.426 L1790.74 346.352 L1786.48 346.352 L1786.48 320.426 M1786.48 310.334 L1790.74 310.334 L1790.74 315.727 L1786.48 315.727 L1786.48 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1812.78 310.334 L1812.78 313.875 L1808.71 313.875 Q1806.41 313.875 1805.51 314.801 Q1804.63 315.727 1804.63 318.135 L1804.63 320.426 L1811.65 320.426 L1811.65 323.736 L1804.63 323.736 L1804.63 346.352 L1800.35 346.352 L1800.35 323.736 L1796.28 323.736 L1796.28 320.426 L1800.35 320.426 L1800.35 318.621 Q1800.35 314.292 1802.36 312.324 Q1804.38 310.334 1808.75 310.334 L1812.78 310.334 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1819.72 313.065 L1819.72 320.426 L1828.5 320.426 L1828.5 323.736 L1819.72 323.736 L1819.72 337.81 Q1819.72 340.982 1820.58 341.885 Q1821.46 342.787 1824.12 342.787 L1828.5 342.787 L1828.5 346.352 L1824.12 346.352 Q1819.19 346.352 1817.32 344.523 Q1815.44 342.672 1815.44 337.81 L1815.44 323.736 L1812.32 323.736 L1812.32 320.426 L1815.44 320.426 L1815.44 313.065 L1819.72 313.065 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1869.35 325.403 Q1870.95 322.533 1873.17 321.167 Q1875.4 319.801 1878.4 319.801 Q1882.46 319.801 1884.65 322.649 Q1886.85 325.473 1886.85 330.704 L1886.85 346.352 L1882.57 346.352 L1882.57 330.843 Q1882.57 327.116 1881.25 325.311 Q1879.93 323.505 1877.22 323.505 Q1873.91 323.505 1871.99 325.704 Q1870.07 327.903 1870.07 331.699 L1870.07 346.352 L1865.79 346.352 L1865.79 330.843 Q1865.79 327.093 1864.47 325.311 Q1863.15 323.505 1860.4 323.505 Q1857.13 323.505 1855.21 325.727 Q1853.29 327.926 1853.29 331.699 L1853.29 346.352 L1849.01 346.352 L1849.01 320.426 L1853.29 320.426 L1853.29 324.454 Q1854.75 322.07 1856.78 320.936 Q1858.82 319.801 1861.62 319.801 Q1864.45 319.801 1866.41 321.236 Q1868.4 322.672 1869.35 325.403 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1917.52 332.324 L1917.52 334.408 L1897.94 334.408 Q1898.22 338.806 1900.58 341.121 Q1902.96 343.412 1907.2 343.412 Q1909.65 343.412 1911.95 342.81 Q1914.26 342.209 1916.53 341.005 L1916.53 345.033 Q1914.24 346.005 1911.83 346.514 Q1909.42 347.023 1906.95 347.023 Q1900.74 347.023 1897.11 343.412 Q1893.5 339.801 1893.5 333.644 Q1893.5 327.278 1896.92 323.551 Q1900.37 319.801 1906.21 319.801 Q1911.44 319.801 1914.47 323.181 Q1917.52 326.537 1917.52 332.324 M1913.27 331.074 Q1913.22 327.579 1911.3 325.496 Q1909.4 323.412 1906.25 323.412 Q1902.69 323.412 1900.53 325.426 Q1898.4 327.44 1898.08 331.098 L1913.27 331.074 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1936.3 333.32 Q1931.14 333.32 1929.14 334.5 Q1927.15 335.681 1927.15 338.528 Q1927.15 340.797 1928.64 342.139 Q1930.14 343.459 1932.71 343.459 Q1936.25 343.459 1938.38 340.959 Q1940.53 338.435 1940.53 334.269 L1940.53 333.32 L1936.3 333.32 M1944.79 331.56 L1944.79 346.352 L1940.53 346.352 L1940.53 342.417 Q1939.08 344.778 1936.9 345.912 Q1934.72 347.023 1931.58 347.023 Q1927.59 347.023 1925.23 344.801 Q1922.89 342.556 1922.89 338.806 Q1922.89 334.431 1925.81 332.209 Q1928.75 329.986 1934.56 329.986 L1940.53 329.986 L1940.53 329.57 Q1940.53 326.63 1938.59 325.033 Q1936.67 323.412 1933.17 323.412 Q1930.95 323.412 1928.84 323.945 Q1926.74 324.477 1924.79 325.542 L1924.79 321.607 Q1927.13 320.704 1929.33 320.264 Q1931.53 319.801 1933.61 319.801 Q1939.24 319.801 1942.02 322.718 Q1944.79 325.635 1944.79 331.56 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1975.12 330.704 L1975.12 346.352 L1970.86 346.352 L1970.86 330.843 Q1970.86 327.162 1969.42 325.334 Q1967.99 323.505 1965.12 323.505 Q1961.67 323.505 1959.68 325.704 Q1957.69 327.903 1957.69 331.699 L1957.69 346.352 L1953.4 346.352 L1953.4 320.426 L1957.69 320.426 L1957.69 324.454 Q1959.21 322.116 1961.27 320.959 Q1963.36 319.801 1966.07 319.801 Q1970.53 319.801 1972.83 322.579 Q1975.12 325.334 1975.12 330.704 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip710)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1584.85,380.912 1709.13,380.912 \"/>\n<path clip-path=\"url(#clip710)\" d=\"M1734.12 394.303 L1734.12 408.053 L1729.84 408.053 L1729.84 372.266 L1734.12 372.266 L1734.12 376.201 Q1735.47 373.887 1737.5 372.776 Q1739.56 371.641 1742.41 371.641 Q1747.13 371.641 1750.07 375.391 Q1753.03 379.141 1753.03 385.252 Q1753.03 391.363 1750.07 395.113 Q1747.13 398.863 1742.41 398.863 Q1739.56 398.863 1737.5 397.752 Q1735.47 396.618 1734.12 394.303 M1748.61 385.252 Q1748.61 380.553 1746.67 377.891 Q1744.75 375.206 1741.37 375.206 Q1737.99 375.206 1736.04 377.891 Q1734.12 380.553 1734.12 385.252 Q1734.12 389.951 1736.04 392.637 Q1737.99 395.299 1741.37 395.299 Q1744.75 395.299 1746.67 392.637 Q1748.61 389.951 1748.61 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1775.12 376.248 Q1774.4 375.831 1773.54 375.646 Q1772.71 375.438 1771.69 375.438 Q1768.08 375.438 1766.14 377.799 Q1764.22 380.137 1764.22 384.535 L1764.22 398.192 L1759.93 398.192 L1759.93 372.266 L1764.22 372.266 L1764.22 376.294 Q1765.56 373.933 1767.71 372.799 Q1769.86 371.641 1772.94 371.641 Q1773.38 371.641 1773.91 371.711 Q1774.45 371.757 1775.09 371.873 L1775.12 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1788.59 375.252 Q1785.16 375.252 1783.17 377.938 Q1781.18 380.6 1781.18 385.252 Q1781.18 389.905 1783.15 392.59 Q1785.14 395.252 1788.59 395.252 Q1791.99 395.252 1793.98 392.567 Q1795.97 389.882 1795.97 385.252 Q1795.97 380.646 1793.98 377.961 Q1791.99 375.252 1788.59 375.252 M1788.59 371.641 Q1794.15 371.641 1797.32 375.252 Q1800.49 378.863 1800.49 385.252 Q1800.49 391.618 1797.32 395.252 Q1794.15 398.863 1788.59 398.863 Q1783.01 398.863 1779.84 395.252 Q1776.69 391.618 1776.69 385.252 Q1776.69 378.863 1779.84 375.252 Q1783.01 371.641 1788.59 371.641 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1807.55 372.266 L1811.81 372.266 L1811.81 398.655 Q1811.81 403.609 1809.91 405.831 Q1808.03 408.053 1803.84 408.053 L1802.22 408.053 L1802.22 404.442 L1803.36 404.442 Q1805.79 404.442 1806.67 403.308 Q1807.55 402.197 1807.55 398.655 L1807.55 372.266 M1807.55 362.174 L1811.81 362.174 L1811.81 367.567 L1807.55 367.567 L1807.55 362.174 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1842.9 384.164 L1842.9 386.248 L1823.31 386.248 Q1823.59 390.646 1825.95 392.961 Q1828.34 395.252 1832.57 395.252 Q1835.03 395.252 1837.32 394.65 Q1839.63 394.049 1841.9 392.845 L1841.9 396.873 Q1839.61 397.845 1837.2 398.354 Q1834.79 398.863 1832.32 398.863 Q1826.11 398.863 1822.48 395.252 Q1818.87 391.641 1818.87 385.484 Q1818.87 379.118 1822.29 375.391 Q1825.74 371.641 1831.58 371.641 Q1836.81 371.641 1839.84 375.021 Q1842.9 378.377 1842.9 384.164 M1838.64 382.914 Q1838.59 379.419 1836.67 377.336 Q1834.77 375.252 1831.62 375.252 Q1828.06 375.252 1825.9 377.266 Q1823.78 379.28 1823.45 382.938 L1838.64 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1868.54 373.262 L1868.54 377.243 Q1866.74 376.248 1864.91 375.762 Q1863.1 375.252 1861.25 375.252 Q1857.11 375.252 1854.82 377.891 Q1852.52 380.507 1852.52 385.252 Q1852.52 389.998 1854.82 392.637 Q1857.11 395.252 1861.25 395.252 Q1863.1 395.252 1864.91 394.766 Q1866.74 394.257 1868.54 393.262 L1868.54 397.197 Q1866.76 398.03 1864.84 398.447 Q1862.94 398.863 1860.79 398.863 Q1854.93 398.863 1851.48 395.183 Q1848.03 391.502 1848.03 385.252 Q1848.03 378.91 1851.51 375.276 Q1855 371.641 1861.07 371.641 Q1863.03 371.641 1864.91 372.058 Q1866.78 372.451 1868.54 373.262 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1880.16 364.905 L1880.16 372.266 L1888.94 372.266 L1888.94 375.576 L1880.16 375.576 L1880.16 389.65 Q1880.16 392.822 1881.02 393.725 Q1881.9 394.627 1884.56 394.627 L1888.94 394.627 L1888.94 398.192 L1884.56 398.192 Q1879.63 398.192 1877.76 396.363 Q1875.88 394.512 1875.88 389.65 L1875.88 375.576 L1872.76 375.576 L1872.76 372.266 L1875.88 372.266 L1875.88 364.905 L1880.16 364.905 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1916.71 384.164 L1916.71 386.248 L1897.13 386.248 Q1897.41 390.646 1899.77 392.961 Q1902.15 395.252 1906.39 395.252 Q1908.84 395.252 1911.14 394.65 Q1913.45 394.049 1915.72 392.845 L1915.72 396.873 Q1913.43 397.845 1911.02 398.354 Q1908.61 398.863 1906.14 398.863 Q1899.93 398.863 1896.3 395.252 Q1892.69 391.641 1892.69 385.484 Q1892.69 379.118 1896.11 375.391 Q1899.56 371.641 1905.4 371.641 Q1910.63 371.641 1913.66 375.021 Q1916.71 378.377 1916.71 384.164 M1912.46 382.914 Q1912.41 379.419 1910.49 377.336 Q1908.59 375.252 1905.44 375.252 Q1901.88 375.252 1899.72 377.266 Q1897.59 379.28 1897.27 382.938 L1912.46 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1940.77 376.201 L1940.77 362.174 L1945.02 362.174 L1945.02 398.192 L1940.77 398.192 L1940.77 394.303 Q1939.42 396.618 1937.36 397.752 Q1935.33 398.863 1932.46 398.863 Q1927.76 398.863 1924.79 395.113 Q1921.85 391.363 1921.85 385.252 Q1921.85 379.141 1924.79 375.391 Q1927.76 371.641 1932.46 371.641 Q1935.33 371.641 1937.36 372.776 Q1939.42 373.887 1940.77 376.201 M1926.25 385.252 Q1926.25 389.951 1928.17 392.637 Q1930.12 395.299 1933.5 395.299 Q1936.88 395.299 1938.82 392.637 Q1940.77 389.951 1940.77 385.252 Q1940.77 380.553 1938.82 377.891 Q1936.88 375.206 1933.5 375.206 Q1930.12 375.206 1928.17 377.891 Q1926.25 380.553 1926.25 385.252 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1991.04 384.164 L1991.04 386.248 L1971.46 386.248 Q1971.74 390.646 1974.1 392.961 Q1976.48 395.252 1980.72 395.252 Q1983.17 395.252 1985.46 394.65 Q1987.78 394.049 1990.05 392.845 L1990.05 396.873 Q1987.76 397.845 1985.35 398.354 Q1982.94 398.863 1980.46 398.863 Q1974.26 398.863 1970.63 395.252 Q1967.02 391.641 1967.02 385.484 Q1967.02 379.118 1970.44 375.391 Q1973.89 371.641 1979.72 371.641 Q1984.95 371.641 1987.99 375.021 Q1991.04 378.377 1991.04 384.164 M1986.78 382.914 Q1986.74 379.419 1984.82 377.336 Q1982.92 375.252 1979.77 375.252 Q1976.2 375.252 1974.05 377.266 Q1971.92 379.28 1971.6 382.938 L1986.78 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M2019.58 382.544 L2019.58 398.192 L2015.32 398.192 L2015.32 382.683 Q2015.32 379.002 2013.89 377.174 Q2012.45 375.345 2009.58 375.345 Q2006.14 375.345 2004.14 377.544 Q2002.15 379.743 2002.15 383.539 L2002.15 398.192 L1997.87 398.192 L1997.87 372.266 L2002.15 372.266 L2002.15 376.294 Q2003.68 373.956 2005.74 372.799 Q2007.83 371.641 2010.53 371.641 Q2015 371.641 2017.29 374.419 Q2019.58 377.174 2019.58 382.544 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M2050.26 384.164 L2050.26 386.248 L2030.67 386.248 Q2030.95 390.646 2033.31 392.961 Q2035.7 395.252 2039.93 395.252 Q2042.39 395.252 2044.68 394.65 Q2046.99 394.049 2049.26 392.845 L2049.26 396.873 Q2046.97 397.845 2044.56 398.354 Q2042.15 398.863 2039.68 398.863 Q2033.47 398.863 2029.84 395.252 Q2026.23 391.641 2026.23 385.484 Q2026.23 379.118 2029.65 375.391 Q2033.1 371.641 2038.94 371.641 Q2044.17 371.641 2047.2 375.021 Q2050.26 378.377 2050.26 384.164 M2046 382.914 Q2045.95 379.419 2044.03 377.336 Q2042.13 375.252 2038.98 375.252 Q2035.42 375.252 2033.26 377.266 Q2031.14 379.28 2030.81 382.938 L2046 382.914 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M2072.27 376.248 Q2071.55 375.831 2070.7 375.646 Q2069.86 375.438 2068.84 375.438 Q2065.23 375.438 2063.29 377.799 Q2061.37 380.137 2061.37 384.535 L2061.37 398.192 L2057.08 398.192 L2057.08 372.266 L2061.37 372.266 L2061.37 376.294 Q2062.71 373.933 2064.86 372.799 Q2067.01 371.641 2070.09 371.641 Q2070.53 371.641 2071.07 371.711 Q2071.6 371.757 2072.25 371.873 L2072.27 376.248 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M2092.96 384.928 Q2092.96 380.299 2091.04 377.752 Q2089.14 375.206 2085.69 375.206 Q2082.27 375.206 2080.35 377.752 Q2078.45 380.299 2078.45 384.928 Q2078.45 389.535 2080.35 392.081 Q2082.27 394.627 2085.69 394.627 Q2089.14 394.627 2091.04 392.081 Q2092.96 389.535 2092.96 384.928 M2097.22 394.975 Q2097.22 401.595 2094.28 404.812 Q2091.34 408.053 2085.28 408.053 Q2083.03 408.053 2081.04 407.706 Q2079.05 407.382 2077.18 406.687 L2077.18 402.544 Q2079.05 403.562 2080.88 404.049 Q2082.71 404.535 2084.61 404.535 Q2088.8 404.535 2090.88 402.336 Q2092.96 400.16 2092.96 395.738 L2092.96 393.632 Q2091.64 395.924 2089.58 397.058 Q2087.52 398.192 2084.65 398.192 Q2079.88 398.192 2076.97 394.558 Q2074.05 390.924 2074.05 384.928 Q2074.05 378.91 2076.97 375.276 Q2079.88 371.641 2084.65 371.641 Q2087.52 371.641 2089.58 372.776 Q2091.64 373.91 2092.96 376.201 L2092.96 372.266 L2097.22 372.266 L2097.22 394.975 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M2116.78 400.599 Q2114.98 405.229 2113.26 406.641 Q2111.55 408.053 2108.68 408.053 L2105.28 408.053 L2105.28 404.488 L2107.78 404.488 Q2109.54 404.488 2110.51 403.655 Q2111.48 402.822 2112.66 399.72 L2113.43 397.775 L2102.94 372.266 L2107.45 372.266 L2115.56 392.544 L2123.66 372.266 L2128.17 372.266 L2116.78 400.599 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M719.687 899.083 L1838.19 899.083 L1838.19 462.094 L719.687 462.094  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip713\">\n    <rect x=\"719\" y=\"462\" width=\"1120\" height=\"438\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip713)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip713)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"999.313,899.083 999.313,462.094 \"/>\n<polyline clip-path=\"url(#clip713)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1278.94,899.083 1278.94,462.094 \"/>\n<polyline clip-path=\"url(#clip713)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1558.56,899.083 1558.56,462.094 \"/>\n<polyline clip-path=\"url(#clip713)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1838.19,899.083 1838.19,462.094 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 1838.19,899.083 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,880.185 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"999.313,899.083 999.313,880.185 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1278.94,899.083 1278.94,880.185 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1558.56,899.083 1558.56,880.185 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1838.19,899.083 1838.19,880.185 \"/>\n<path clip-path=\"url(#clip710)\" d=\"M664.213 957.547 L671.852 957.547 L671.852 931.182 L663.542 932.849 L663.542 928.589 L671.806 926.923 L676.482 926.923 L676.482 957.547 L684.12 957.547 L684.12 961.483 L664.213 961.483 L664.213 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M703.565 930.001 Q699.954 930.001 698.125 933.566 Q696.319 937.108 696.319 944.237 Q696.319 951.344 698.125 954.909 Q699.954 958.45 703.565 958.45 Q707.199 958.45 709.005 954.909 Q710.833 951.344 710.833 944.237 Q710.833 937.108 709.005 933.566 Q707.199 930.001 703.565 930.001 M703.565 926.298 Q709.375 926.298 712.43 930.904 Q715.509 935.487 715.509 944.237 Q715.509 952.964 712.43 957.571 Q709.375 962.154 703.565 962.154 Q697.755 962.154 694.676 957.571 Q691.62 952.964 691.62 944.237 Q691.62 935.487 694.676 930.904 Q697.755 926.298 703.565 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M733.727 930.001 Q730.116 930.001 728.287 933.566 Q726.481 937.108 726.481 944.237 Q726.481 951.344 728.287 954.909 Q730.116 958.45 733.727 958.45 Q737.361 958.45 739.166 954.909 Q740.995 951.344 740.995 944.237 Q740.995 937.108 739.166 933.566 Q737.361 930.001 733.727 930.001 M733.727 926.298 Q739.537 926.298 742.592 930.904 Q745.671 935.487 745.671 944.237 Q745.671 952.964 742.592 957.571 Q739.537 962.154 733.727 962.154 Q727.916 962.154 724.838 957.571 Q721.782 952.964 721.782 944.237 Q721.782 935.487 724.838 930.904 Q727.916 926.298 733.727 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M763.888 930.001 Q760.277 930.001 758.449 933.566 Q756.643 937.108 756.643 944.237 Q756.643 951.344 758.449 954.909 Q760.277 958.45 763.888 958.45 Q767.523 958.45 769.328 954.909 Q771.157 951.344 771.157 944.237 Q771.157 937.108 769.328 933.566 Q767.523 930.001 763.888 930.001 M763.888 926.298 Q769.699 926.298 772.754 930.904 Q775.833 935.487 775.833 944.237 Q775.833 952.964 772.754 957.571 Q769.699 962.154 763.888 962.154 Q758.078 962.154 755 957.571 Q751.944 952.964 751.944 944.237 Q751.944 935.487 755 930.904 Q758.078 926.298 763.888 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M943.839 957.547 L951.477 957.547 L951.477 931.182 L943.167 932.849 L943.167 928.589 L951.431 926.923 L956.107 926.923 L956.107 957.547 L963.746 957.547 L963.746 961.483 L943.839 961.483 L943.839 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M973.237 926.923 L991.593 926.923 L991.593 930.858 L977.519 930.858 L977.519 939.33 Q978.538 938.983 979.556 938.821 Q980.575 938.636 981.593 938.636 Q987.38 938.636 990.76 941.807 Q994.139 944.978 994.139 950.395 Q994.139 955.973 990.667 959.075 Q987.195 962.154 980.875 962.154 Q978.7 962.154 976.431 961.784 Q974.186 961.413 971.778 960.672 L971.778 955.973 Q973.862 957.108 976.084 957.663 Q978.306 958.219 980.783 958.219 Q984.788 958.219 987.125 956.112 Q989.463 954.006 989.463 950.395 Q989.463 946.784 987.125 944.677 Q984.788 942.571 980.783 942.571 Q978.908 942.571 977.033 942.987 Q975.181 943.404 973.237 944.284 L973.237 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1013.35 930.001 Q1009.74 930.001 1007.91 933.566 Q1006.11 937.108 1006.11 944.237 Q1006.11 951.344 1007.91 954.909 Q1009.74 958.45 1013.35 958.45 Q1016.99 958.45 1018.79 954.909 Q1020.62 951.344 1020.62 944.237 Q1020.62 937.108 1018.79 933.566 Q1016.99 930.001 1013.35 930.001 M1013.35 926.298 Q1019.16 926.298 1022.22 930.904 Q1025.3 935.487 1025.3 944.237 Q1025.3 952.964 1022.22 957.571 Q1019.16 962.154 1013.35 962.154 Q1007.54 962.154 1004.46 957.571 Q1001.41 952.964 1001.41 944.237 Q1001.41 935.487 1004.46 930.904 Q1007.54 926.298 1013.35 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1043.51 930.001 Q1039.9 930.001 1038.07 933.566 Q1036.27 937.108 1036.27 944.237 Q1036.27 951.344 1038.07 954.909 Q1039.9 958.45 1043.51 958.45 Q1047.15 958.45 1048.95 954.909 Q1050.78 951.344 1050.78 944.237 Q1050.78 937.108 1048.95 933.566 Q1047.15 930.001 1043.51 930.001 M1043.51 926.298 Q1049.32 926.298 1052.38 930.904 Q1055.46 935.487 1055.46 944.237 Q1055.46 952.964 1052.38 957.571 Q1049.32 962.154 1043.51 962.154 Q1037.7 962.154 1034.63 957.571 Q1031.57 952.964 1031.57 944.237 Q1031.57 935.487 1034.63 930.904 Q1037.7 926.298 1043.51 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1227.55 957.547 L1243.87 957.547 L1243.87 961.483 L1221.92 961.483 L1221.92 957.547 Q1224.59 954.793 1229.17 950.163 Q1233.78 945.511 1234.96 944.168 Q1237.2 941.645 1238.08 939.909 Q1238.98 938.149 1238.98 936.46 Q1238.98 933.705 1237.04 931.969 Q1235.12 930.233 1232.02 930.233 Q1229.82 930.233 1227.36 930.997 Q1224.93 931.761 1222.16 933.312 L1222.16 928.589 Q1224.98 927.455 1227.43 926.876 Q1229.89 926.298 1231.92 926.298 Q1237.3 926.298 1240.49 928.983 Q1243.68 931.668 1243.68 936.159 Q1243.68 938.288 1242.87 940.21 Q1242.09 942.108 1239.98 944.7 Q1239.4 945.372 1236.3 948.589 Q1233.2 951.784 1227.55 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1263.68 930.001 Q1260.07 930.001 1258.24 933.566 Q1256.44 937.108 1256.44 944.237 Q1256.44 951.344 1258.24 954.909 Q1260.07 958.45 1263.68 958.45 Q1267.32 958.45 1269.12 954.909 Q1270.95 951.344 1270.95 944.237 Q1270.95 937.108 1269.12 933.566 Q1267.32 930.001 1263.68 930.001 M1263.68 926.298 Q1269.49 926.298 1272.55 930.904 Q1275.63 935.487 1275.63 944.237 Q1275.63 952.964 1272.55 957.571 Q1269.49 962.154 1263.68 962.154 Q1257.87 962.154 1254.8 957.571 Q1251.74 952.964 1251.74 944.237 Q1251.74 935.487 1254.8 930.904 Q1257.87 926.298 1263.68 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1293.85 930.001 Q1290.23 930.001 1288.41 933.566 Q1286.6 937.108 1286.6 944.237 Q1286.6 951.344 1288.41 954.909 Q1290.23 958.45 1293.85 958.45 Q1297.48 958.45 1299.29 954.909 Q1301.11 951.344 1301.11 944.237 Q1301.11 937.108 1299.29 933.566 Q1297.48 930.001 1293.85 930.001 M1293.85 926.298 Q1299.66 926.298 1302.71 930.904 Q1305.79 935.487 1305.79 944.237 Q1305.79 952.964 1302.71 957.571 Q1299.66 962.154 1293.85 962.154 Q1288.04 962.154 1284.96 957.571 Q1281.9 952.964 1281.9 944.237 Q1281.9 935.487 1284.96 930.904 Q1288.04 926.298 1293.85 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1324.01 930.001 Q1320.4 930.001 1318.57 933.566 Q1316.76 937.108 1316.76 944.237 Q1316.76 951.344 1318.57 954.909 Q1320.4 958.45 1324.01 958.45 Q1327.64 958.45 1329.45 954.909 Q1331.28 951.344 1331.28 944.237 Q1331.28 937.108 1329.45 933.566 Q1327.64 930.001 1324.01 930.001 M1324.01 926.298 Q1329.82 926.298 1332.87 930.904 Q1335.95 935.487 1335.95 944.237 Q1335.95 952.964 1332.87 957.571 Q1329.82 962.154 1324.01 962.154 Q1318.2 962.154 1315.12 957.571 Q1312.06 952.964 1312.06 944.237 Q1312.06 935.487 1315.12 930.904 Q1318.2 926.298 1324.01 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1507.18 957.547 L1523.49 957.547 L1523.49 961.483 L1501.55 961.483 L1501.55 957.547 Q1504.21 954.793 1508.8 950.163 Q1513.4 945.511 1514.58 944.168 Q1516.83 941.645 1517.71 939.909 Q1518.61 938.149 1518.61 936.46 Q1518.61 933.705 1516.67 931.969 Q1514.74 930.233 1511.64 930.233 Q1509.44 930.233 1506.99 930.997 Q1504.56 931.761 1501.78 933.312 L1501.78 928.589 Q1504.61 927.455 1507.06 926.876 Q1509.51 926.298 1511.55 926.298 Q1516.92 926.298 1520.12 928.983 Q1523.31 931.668 1523.31 936.159 Q1523.31 938.288 1522.5 940.21 Q1521.71 942.108 1519.61 944.7 Q1519.03 945.372 1515.93 948.589 Q1512.82 951.784 1507.18 957.547 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1533.36 926.923 L1551.71 926.923 L1551.71 930.858 L1537.64 930.858 L1537.64 939.33 Q1538.66 938.983 1539.68 938.821 Q1540.69 938.636 1541.71 938.636 Q1547.5 938.636 1550.88 941.807 Q1554.26 944.978 1554.26 950.395 Q1554.26 955.973 1550.79 959.075 Q1547.31 962.154 1540.99 962.154 Q1538.82 962.154 1536.55 961.784 Q1534.3 961.413 1531.9 960.672 L1531.9 955.973 Q1533.98 957.108 1536.2 957.663 Q1538.43 958.219 1540.9 958.219 Q1544.91 958.219 1547.24 956.112 Q1549.58 954.006 1549.58 950.395 Q1549.58 946.784 1547.24 944.677 Q1544.91 942.571 1540.9 942.571 Q1539.03 942.571 1537.15 942.987 Q1535.3 943.404 1533.36 944.284 L1533.36 926.923 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1573.47 930.001 Q1569.86 930.001 1568.03 933.566 Q1566.23 937.108 1566.23 944.237 Q1566.23 951.344 1568.03 954.909 Q1569.86 958.45 1573.47 958.45 Q1577.11 958.45 1578.91 954.909 Q1580.74 951.344 1580.74 944.237 Q1580.74 937.108 1578.91 933.566 Q1577.11 930.001 1573.47 930.001 M1573.47 926.298 Q1579.28 926.298 1582.34 930.904 Q1585.42 935.487 1585.42 944.237 Q1585.42 952.964 1582.34 957.571 Q1579.28 962.154 1573.47 962.154 Q1567.66 962.154 1564.58 957.571 Q1561.53 952.964 1561.53 944.237 Q1561.53 935.487 1564.58 930.904 Q1567.66 926.298 1573.47 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1603.63 930.001 Q1600.02 930.001 1598.19 933.566 Q1596.39 937.108 1596.39 944.237 Q1596.39 951.344 1598.19 954.909 Q1600.02 958.45 1603.63 958.45 Q1607.27 958.45 1609.07 954.909 Q1610.9 951.344 1610.9 944.237 Q1610.9 937.108 1609.07 933.566 Q1607.27 930.001 1603.63 930.001 M1603.63 926.298 Q1609.44 926.298 1612.5 930.904 Q1615.58 935.487 1615.58 944.237 Q1615.58 952.964 1612.5 957.571 Q1609.44 962.154 1603.63 962.154 Q1597.82 962.154 1594.74 957.571 Q1591.69 952.964 1591.69 944.237 Q1591.69 935.487 1594.74 930.904 Q1597.82 926.298 1603.63 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1796.87 942.848 Q1800.23 943.566 1802.1 945.835 Q1804 948.103 1804 951.436 Q1804 956.552 1800.48 959.353 Q1796.96 962.154 1790.48 962.154 Q1788.31 962.154 1785.99 961.714 Q1783.7 961.297 1781.25 960.441 L1781.25 955.927 Q1783.19 957.061 1785.5 957.64 Q1787.82 958.219 1790.34 958.219 Q1794.74 958.219 1797.03 956.483 Q1799.35 954.747 1799.35 951.436 Q1799.35 948.381 1797.19 946.668 Q1795.06 944.932 1791.25 944.932 L1787.22 944.932 L1787.22 941.089 L1791.43 941.089 Q1794.88 941.089 1796.71 939.724 Q1798.54 938.335 1798.54 935.742 Q1798.54 933.08 1796.64 931.668 Q1794.76 930.233 1791.25 930.233 Q1789.32 930.233 1787.13 930.649 Q1784.93 931.066 1782.29 931.946 L1782.29 927.779 Q1784.95 927.038 1787.26 926.668 Q1789.6 926.298 1791.66 926.298 Q1796.99 926.298 1800.09 928.728 Q1803.19 931.136 1803.19 935.256 Q1803.19 938.126 1801.55 940.117 Q1799.9 942.085 1796.87 942.848 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1822.87 930.001 Q1819.25 930.001 1817.43 933.566 Q1815.62 937.108 1815.62 944.237 Q1815.62 951.344 1817.43 954.909 Q1819.25 958.45 1822.87 958.45 Q1826.5 958.45 1828.31 954.909 Q1830.13 951.344 1830.13 944.237 Q1830.13 937.108 1828.31 933.566 Q1826.5 930.001 1822.87 930.001 M1822.87 926.298 Q1828.68 926.298 1831.73 930.904 Q1834.81 935.487 1834.81 944.237 Q1834.81 952.964 1831.73 957.571 Q1828.68 962.154 1822.87 962.154 Q1817.06 962.154 1813.98 957.571 Q1810.92 952.964 1810.92 944.237 Q1810.92 935.487 1813.98 930.904 Q1817.06 926.298 1822.87 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1853.03 930.001 Q1849.42 930.001 1847.59 933.566 Q1845.78 937.108 1845.78 944.237 Q1845.78 951.344 1847.59 954.909 Q1849.42 958.45 1853.03 958.45 Q1856.66 958.45 1858.47 954.909 Q1860.3 951.344 1860.3 944.237 Q1860.3 937.108 1858.47 933.566 Q1856.66 930.001 1853.03 930.001 M1853.03 926.298 Q1858.84 926.298 1861.89 930.904 Q1864.97 935.487 1864.97 944.237 Q1864.97 952.964 1861.89 957.571 Q1858.84 962.154 1853.03 962.154 Q1847.22 962.154 1844.14 957.571 Q1841.08 952.964 1841.08 944.237 Q1841.08 935.487 1844.14 930.904 Q1847.22 926.298 1853.03 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M1883.19 930.001 Q1879.58 930.001 1877.75 933.566 Q1875.94 937.108 1875.94 944.237 Q1875.94 951.344 1877.75 954.909 Q1879.58 958.45 1883.19 958.45 Q1886.82 958.45 1888.63 954.909 Q1890.46 951.344 1890.46 944.237 Q1890.46 937.108 1888.63 933.566 Q1886.82 930.001 1883.19 930.001 M1883.19 926.298 Q1889 926.298 1892.06 930.904 Q1895.13 935.487 1895.13 944.237 Q1895.13 952.964 1892.06 957.571 Q1889 962.154 1883.19 962.154 Q1877.38 962.154 1874.3 957.571 Q1871.24 952.964 1871.24 944.237 Q1871.24 935.487 1874.3 930.904 Q1877.38 926.298 1883.19 926.298 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip713)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,879.22 1838.19,879.22 \"/>\n<polyline clip-path=\"url(#clip713)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,779.904 1838.19,779.904 \"/>\n<polyline clip-path=\"url(#clip713)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,680.588 1838.19,680.588 \"/>\n<polyline clip-path=\"url(#clip713)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,581.273 1838.19,581.273 \"/>\n<polyline clip-path=\"url(#clip713)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"719.687,481.957 1838.19,481.957 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,899.083 719.687,462.094 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,879.22 738.585,879.22 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,779.904 738.585,779.904 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,680.588 738.585,680.588 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,581.273 738.585,581.273 \"/>\n<polyline clip-path=\"url(#clip710)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"719.687,481.957 738.585,481.957 \"/>\n<path clip-path=\"url(#clip710)\" d=\"M576.743 879.671 L606.419 879.671 L606.419 883.606 L576.743 883.606 L576.743 879.671 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M616.558 861.94 L634.914 861.94 L634.914 865.875 L620.84 865.875 L620.84 874.347 Q621.859 874 622.877 873.838 Q623.896 873.652 624.914 873.652 Q630.702 873.652 634.081 876.824 Q637.461 879.995 637.461 885.412 Q637.461 890.99 633.989 894.092 Q630.516 897.171 624.197 897.171 Q622.021 897.171 619.752 896.8 Q617.507 896.43 615.1 895.689 L615.1 890.99 Q617.183 892.125 619.405 892.68 Q621.627 893.236 624.104 893.236 Q628.109 893.236 630.447 891.129 Q632.785 889.023 632.785 885.412 Q632.785 881.801 630.447 879.694 Q628.109 877.588 624.104 877.588 Q622.229 877.588 620.354 878.004 Q618.502 878.421 616.558 879.301 L616.558 861.94 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M646.674 890.62 L651.558 890.62 L651.558 896.5 L646.674 896.5 L646.674 890.62 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M671.743 865.018 Q668.132 865.018 666.303 868.583 Q664.498 872.125 664.498 879.254 Q664.498 886.361 666.303 889.925 Q668.132 893.467 671.743 893.467 Q675.377 893.467 677.183 889.925 Q679.011 886.361 679.011 879.254 Q679.011 872.125 677.183 868.583 Q675.377 865.018 671.743 865.018 M671.743 861.315 Q677.553 861.315 680.609 865.921 Q683.687 870.504 683.687 879.254 Q683.687 887.981 680.609 892.588 Q677.553 897.171 671.743 897.171 Q665.933 897.171 662.854 892.588 Q659.799 887.981 659.799 879.254 Q659.799 870.504 662.854 865.921 Q665.933 861.315 671.743 861.315 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M577.739 780.355 L607.415 780.355 L607.415 784.291 L577.739 784.291 L577.739 780.355 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M630.354 766.698 L618.549 785.147 L630.354 785.147 L630.354 766.698 M629.127 762.624 L635.007 762.624 L635.007 785.147 L639.938 785.147 L639.938 789.036 L635.007 789.036 L635.007 797.184 L630.354 797.184 L630.354 789.036 L614.753 789.036 L614.753 784.522 L629.127 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M647.669 791.304 L652.553 791.304 L652.553 797.184 L647.669 797.184 L647.669 791.304 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M662.785 762.624 L681.141 762.624 L681.141 766.559 L667.067 766.559 L667.067 775.031 Q668.086 774.684 669.104 774.522 Q670.123 774.337 671.141 774.337 Q676.928 774.337 680.308 777.508 Q683.687 780.679 683.687 786.096 Q683.687 791.675 680.215 794.777 Q676.743 797.855 670.424 797.855 Q668.248 797.855 665.979 797.485 Q663.734 797.115 661.326 796.374 L661.326 791.675 Q663.41 792.809 665.632 793.365 Q667.854 793.92 670.331 793.92 Q674.336 793.92 676.673 791.814 Q679.011 789.707 679.011 786.096 Q679.011 782.485 676.673 780.379 Q674.336 778.272 670.331 778.272 Q668.456 778.272 666.581 778.689 Q664.729 779.105 662.785 779.985 L662.785 762.624 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M576.743 681.04 L606.419 681.04 L606.419 684.975 L576.743 684.975 L576.743 681.04 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M629.359 667.382 L617.553 685.831 L629.359 685.831 L629.359 667.382 M628.132 663.308 L634.012 663.308 L634.012 685.831 L638.942 685.831 L638.942 689.72 L634.012 689.72 L634.012 697.868 L629.359 697.868 L629.359 689.72 L613.757 689.72 L613.757 685.206 L628.132 663.308 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M646.674 691.989 L651.558 691.989 L651.558 697.868 L646.674 697.868 L646.674 691.989 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M671.743 666.387 Q668.132 666.387 666.303 669.952 Q664.498 673.494 664.498 680.623 Q664.498 687.73 666.303 691.294 Q668.132 694.836 671.743 694.836 Q675.377 694.836 677.183 691.294 Q679.011 687.73 679.011 680.623 Q679.011 673.494 677.183 669.952 Q675.377 666.387 671.743 666.387 M671.743 662.683 Q677.553 662.683 680.609 667.29 Q683.687 671.873 683.687 680.623 Q683.687 689.35 680.609 693.956 Q677.553 698.54 671.743 698.54 Q665.933 698.54 662.854 693.956 Q659.799 689.35 659.799 680.623 Q659.799 671.873 662.854 667.29 Q665.933 662.683 671.743 662.683 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M577.739 581.724 L607.415 581.724 L607.415 585.659 L577.739 585.659 L577.739 581.724 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M631.674 579.919 Q635.03 580.636 636.905 582.905 Q638.803 585.173 638.803 588.507 Q638.803 593.622 635.285 596.423 Q631.766 599.224 625.285 599.224 Q623.109 599.224 620.794 598.784 Q618.502 598.368 616.049 597.511 L616.049 592.997 Q617.993 594.132 620.308 594.71 Q622.623 595.289 625.146 595.289 Q629.544 595.289 631.836 593.553 Q634.151 591.817 634.151 588.507 Q634.151 585.451 631.998 583.738 Q629.868 582.002 626.049 582.002 L622.021 582.002 L622.021 578.159 L626.234 578.159 Q629.683 578.159 631.512 576.794 Q633.34 575.405 633.34 572.812 Q633.34 570.15 631.442 568.738 Q629.567 567.303 626.049 567.303 Q624.127 567.303 621.928 567.72 Q619.729 568.136 617.09 569.016 L617.09 564.849 Q619.752 564.109 622.067 563.738 Q624.405 563.368 626.465 563.368 Q631.789 563.368 634.891 565.798 Q637.993 568.206 637.993 572.326 Q637.993 575.196 636.35 577.187 Q634.706 579.155 631.674 579.919 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M647.669 592.673 L652.553 592.673 L652.553 598.553 L647.669 598.553 L647.669 592.673 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M662.785 563.993 L681.141 563.993 L681.141 567.928 L667.067 567.928 L667.067 576.4 Q668.086 576.053 669.104 575.891 Q670.123 575.706 671.141 575.706 Q676.928 575.706 680.308 578.877 Q683.687 582.048 683.687 587.465 Q683.687 593.044 680.215 596.145 Q676.743 599.224 670.424 599.224 Q668.248 599.224 665.979 598.854 Q663.734 598.483 661.326 597.743 L661.326 593.044 Q663.41 594.178 665.632 594.733 Q667.854 595.289 670.331 595.289 Q674.336 595.289 676.673 593.183 Q679.011 591.076 679.011 587.465 Q679.011 583.854 676.673 581.747 Q674.336 579.641 670.331 579.641 Q668.456 579.641 666.581 580.058 Q664.729 580.474 662.785 581.354 L662.785 563.993 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M576.743 482.409 L606.419 482.409 L606.419 486.344 L576.743 486.344 L576.743 482.409 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M630.678 480.603 Q634.035 481.321 635.91 483.589 Q637.808 485.858 637.808 489.191 Q637.808 494.307 634.289 497.108 Q630.771 499.909 624.29 499.909 Q622.114 499.909 619.799 499.469 Q617.507 499.052 615.053 498.196 L615.053 493.682 Q616.998 494.816 619.313 495.395 Q621.627 495.973 624.151 495.973 Q628.549 495.973 630.84 494.237 Q633.155 492.501 633.155 489.191 Q633.155 486.136 631.002 484.423 Q628.873 482.686 625.053 482.686 L621.026 482.686 L621.026 478.844 L625.239 478.844 Q628.688 478.844 630.516 477.478 Q632.345 476.089 632.345 473.497 Q632.345 470.835 630.447 469.423 Q628.572 467.987 625.053 467.987 Q623.132 467.987 620.933 468.404 Q618.734 468.821 616.095 469.7 L616.095 465.534 Q618.757 464.793 621.072 464.423 Q623.41 464.052 625.47 464.052 Q630.794 464.052 633.896 466.483 Q636.998 468.89 636.998 473.011 Q636.998 475.881 635.354 477.872 Q633.711 479.839 630.678 480.603 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M646.674 493.358 L651.558 493.358 L651.558 499.237 L646.674 499.237 L646.674 493.358 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip710)\" d=\"M671.743 467.756 Q668.132 467.756 666.303 471.321 Q664.498 474.862 664.498 481.992 Q664.498 489.098 666.303 492.663 Q668.132 496.205 671.743 496.205 Q675.377 496.205 677.183 492.663 Q679.011 489.098 679.011 481.992 Q679.011 474.862 677.183 471.321 Q675.377 467.756 671.743 467.756 M671.743 464.052 Q677.553 464.052 680.609 468.659 Q683.687 473.242 683.687 481.992 Q683.687 490.719 680.609 495.325 Q677.553 499.909 671.743 499.909 Q665.933 499.909 662.854 495.325 Q659.799 490.719 659.799 481.992 Q659.799 473.242 662.854 468.659 Q665.933 464.052 671.743 464.052 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip713)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"160.995,-1577.5 161.555,-2922.08 162.114,-4155.78 162.673,-5286.05 163.232,-6319.78 163.792,-7263.33 164.351,-8122.62 164.91,-8903.13 165.469,-9609.97 166.029,-10247.9 166.588,-10821.4 167.147,-10246.9 167.706,-10738.2 168.266,-11189.2 168.825,-10715.7 169.384,-11103.6 169.943,-11444.6 170.503,-11741.8 171.062,-11998.2 171.621,-12216.4 172.18,-12399.1 172.74,-12548.7 173.299,-12144.5 173.858,-12243 174.417,-12321.5 174.977,-12374.7 175.536,-12404.3 176.095,-12039.3 176.655,-11678.4 177.214,-11655.4 177.773,-11317.7 178.332,-11270.2 178.892,-11208.1 179.451,-10888.1 180.01,-10575 180.569,-10066.6 181.129,-9598.08 181.688,-9324.71 182.247,-9068.91 182.806,-8995.31 183.366,-8756.32 183.925,-8663.09 184.484,-8415.09 185.043,-8309.01 185.603,-7828.17 186.162,-7607.21 186.721,-7396.18 187.28,-7084.15 187.84,-6981.58 188.399,-6702.28 188.958,-6513.99 189.517,-6422.24 190.077,-6329.09 190.636,-6156.32 191.195,-6055.78 191.754,-5877.19 192.314,-5627.15 192.873,-5524.55 193.432,-5354.27 193.991,-5242.78 194.551,-5130.88 195.11,-5017.79 195.669,-4736.23 196.228,-4523.32 196.788,-4423.72 197.347,-4275.98 197.906,-4128.49 198.465,-3935.72 199.025,-3754.16 199.584,-3572.02 200.143,-3400.33 200.702,-3279.72 201.262,-3197.93 201.821,-3123.28 202.38,-3005.36 202.939,-2852.45 203.499,-2708.38 204.058,-2572.39 204.617,-2405.27 205.176,-2312.95 205.736,-2257.51 206.295,-2130.18 206.854,-1979.74 207.413,-1835.87 207.973,-1756 208.532,-1620.83 209.091,-1548.35 209.65,-1506.92 210.21,-1434.66 210.769,-1333.53 211.328,-1209.56 211.887,-1144.47 212.447,-1028.59 213.006,-993.663 213.565,-911.758 214.124,-828.578 214.684,-717.617 215.243,-712.537 215.802,-681.199 216.361,-623.415 216.921,-593.203 217.48,-538.356 218.039,-508.271 218.598,-475.31 219.158,-376.954 219.717,-396.848 220.276,-296.819 220.835,-270.882 221.395,-245.73 221.954,-217.936 222.513,-145.762 223.072,-77.1129 223.632,-33.991 224.191,-10.146 224.75,14.0224 225.309,54.7023 225.869,75.4131 226.428,117.393 226.987,118.597 227.546,159.882 228.106,244.877 228.665,302.44 229.224,331.42 229.783,343.864 230.343,433.676 230.902,481.476 231.461,507.461 232.02,555.448 232.58,579.817 233.139,565.439 233.698,571.208 234.257,597.124 234.817,602.224 235.376,606.507 235.935,629.036 236.494,671.479 237.054,672.719 237.613,731.533 238.172,786.148 238.731,836.582 239.291,850.507 239.85,826.051 240.409,877.543 240.968,891.689 241.528,921.831 242.087,970.052 242.646,963.391 243.205,975.895 243.765,931.35 244.324,924.638 244.883,995.193 245.442,1001.85 246.002,1012.65 246.561,1008.41 247.12,1002.56 247.679,1016.43 248.239,1047.36 248.798,1057.51 249.357,1085.87 249.916,1065.22 250.476,1075.96 251.035,1066.78 251.594,1041.35 252.153,1069.97 252.713,1048.65 253.272,1091.67 253.831,1131.09 254.39,1153.41 254.95,1175.27 255.509,1213.44 256.068,1200.37 256.627,1168.78 257.187,1139.08 257.746,1129.52 258.305,1135.23 258.864,1123.15 259.424,1129.23 259.983,1121.72 260.542,1128.48 261.101,1121.34 261.661,1148.57 262.22,1135.72 262.779,1105.9 263.338,1114.49 263.898,1140.97 264.457,1179.9 265.016,1150.11 265.575,1154.05 266.135,1158.88 266.694,1196.88 267.253,1200.2 267.812,1203.86 268.372,1208.67 268.931,1194.43 269.49,1198.34 270.049,1204.43 270.609,1190.87 271.168,1180.25 271.727,1153.37 272.286,1143.75 272.846,1167.59 273.405,1188.12 273.964,1157.36 274.523,1160.57 275.083,1165.41 275.642,1173.69 276.201,1158.88 276.76,1129.46 277.32,1134.9 277.879,1093.87 278.438,1070.82 278.997,1047.44 279.557,1060.1 280.116,1056.43 280.675,1068.46 281.234,1063.27 281.794,1075.34 282.353,1051.31 282.912,1046.58 283.471,1041.3 284.031,1051.67 284.59,1045.56 285.149,1038.81 285.708,1083.04 286.268,1064.65 286.827,1089.62 287.386,1065.71 287.945,1075.96 288.505,1070.31 289.064,1063.59 289.623,1074.94 290.182,1085.67 290.742,1080.06 291.301,1074.24 291.86,1018.11 292.419,996.167 292.979,1012.78 293.538,1007.41 294.097,1019.57 294.656,1048.8 295.216,1058.97 295.775,1020.97 296.334,996.687 296.893,1027.12 297.453,1040.3 298.012,1047.57 298.571,1059.34 299.13,1032.58 299.69,1026.13 300.249,1019.69 300.808,1030.9 301.368,1010.59 301.927,1055.49 302.486,1013.42 303.045,991.247 303.605,1002.24 304.164,1012.4 304.723,1053.03 305.282,1059.62 305.842,1069.32 306.401,1077.58 306.96,1034.26 307.519,1044.08 308.079,1001.72 308.638,993.532 309.197,970.484 309.756,972.449 310.316,967.368 310.875,947.613 311.434,977.98 311.993,990.113 312.553,968.512 313.112,963.714 313.671,977.81 314.23,1008.43 314.79,1021 315.349,1029.19 315.908,1036.53 316.467,1043.04 317.027,1016.12 317.586,1041.79 318.145,998.88 318.704,1013.2 319.264,1023.12 319.823,1020.36 320.382,996.015 320.941,1025.64 321.501,1002.99 322.06,995.656 322.619,1004.45 323.178,1015.38 323.738,991.033 324.297,985.696 324.856,997.134 325.415,1021.24 325.975,979.808 326.534,974.175 327.093,970.553 327.652,999.415 328.212,993.073 328.771,1000.31 329.33,994.482 329.889,955.278 330.449,981.489 331.008,993.639 331.567,984.108 332.126,944.291 332.686,941.175 333.245,935.681 333.804,948.06 334.363,1005.47 334.923,1004.82 335.482,999.165 336.041,973.376 336.6,951.676 337.16,917.03 337.719,927.451 338.278,907.015 338.837,936.438 339.397,964.576 339.956,927.228 340.515,943.333 341.074,953.822 341.634,935.42 342.193,930.393 342.752,944.335 343.311,938.823 343.871,948.066 344.43,926.572 344.989,891.263 345.548,905.566 346.108,899.004 346.667,893.055 347.226,906.52 347.785,901.535 348.345,914.038 348.904,862.258 349.463,874.103 350.022,873.584 350.582,873.761 351.141,872.491 351.7,868.358 352.259,848.059 352.819,853.201 353.378,838.535 353.937,836.904 354.496,851.861 355.056,867.914 355.615,865.659 356.174,849.378 356.733,853.327 357.293,882.849 357.852,847.684 358.411,850.403 358.97,851.423 359.53,835.463 360.089,835.803 360.648,852.038 361.207,868.743 361.767,900.381 362.326,895.888 362.885,906.118 363.444,886.032 364.004,899.73 364.563,898.895 365.122,946.391 365.681,940.126 366.241,932.272 366.8,923.283 367.359,899.597 367.918,863.49 368.478,839.326 369.037,856.035 369.596,871.627 370.155,886.43 370.715,865.115 371.274,895.87 371.833,874.937 372.392,887.229 372.952,868.241 373.511,867.683 374.07,900.711 374.629,893.743 375.189,888.596 375.748,901.65 376.307,899.662 376.866,909.739 377.426,921.538 377.985,900.153 378.544,912.799 379.103,939.017 379.663,932.207 380.222,908.664 380.781,904.405 381.34,896.886 381.9,923.507 382.459,902.07 383.018,912.662 383.577,907.098 384.137,900.913 384.696,909.753 385.255,952.423 385.814,926.247 386.374,918.466 386.933,908.545 387.492,937.232 388.051,911.556 388.611,937.386 389.17,913.276 389.729,938.163 390.288,965.34 390.848,953.509 391.407,957.404 391.966,978.024 392.525,999.13 393.085,1002.53 393.644,969.862 394.203,962.595 394.762,966.232 395.322,959.936 395.881,903.443 396.44,898.958 396.999,845.019 397.559,826.009 398.118,806.758 398.677,806.273 399.236,819.309 399.796,802.257 400.355,782.232 400.914,817.363 401.473,833.901 402.033,848.764 402.592,829.955 403.151,826.629 403.71,809.419 404.27,807.205 404.829,819.011 405.388,816.508 405.947,813.538 406.507,811.361 407.066,826.369 407.625,825.985 408.184,869.647 408.744,865.323 409.303,877.176 409.862,853.64 410.421,883.866 410.981,895.434 411.54,886.071 412.099,897.972 412.658,891.074 413.218,869.953 413.777,878.062 414.336,853.921 414.895,849.526 415.455,848.179 416.014,830.808 416.573,859.006 417.132,824.581 417.692,809.485 418.251,743.197 418.81,760.588 419.369,760.232 419.929,758.236 420.488,773.101 421.047,771.958 421.606,771.379 422.166,723.324 422.725,712.806 423.284,735.016 423.843,753.612 424.403,755.546 424.962,772.892 425.521,736.045 426.08,688.005 426.64,692.291 427.199,697.857 427.758,734.78 428.318,755.13 428.877,741.527 429.436,740.04 429.995,739.802 430.555,742.389 431.114,762.022 431.673,714.306 432.232,798.991 432.792,795.572 433.351,808.759 433.91,789.536 434.469,791.149 435.029,790.792 435.588,770.891 436.147,755.161 436.706,755.4 437.266,821.526 437.825,807.602 438.384,808.094 438.943,838.215 439.503,835.138 440.062,829.675 440.621,841.231 441.18,786.83 441.74,804.358 442.299,822.465 442.858,835.662 443.417,848.543 443.977,877.913 444.536,825.042 445.095,824.042 445.654,821.045 446.214,836.404 446.773,818 447.332,795.402 447.891,822.662 448.451,818.49 449.01,817.193 449.569,801.241 450.128,846.641 450.688,859.622 451.247,855.292 451.806,819.475 452.365,881.628 452.925,891.592 453.484,832.95 454.043,846.075 454.602,809.104 455.162,787.164 455.721,799.863 456.28,845.793 456.839,839.466 457.399,866.291 457.958,857.428 458.517,867.474 459.076,829.459 459.636,827.222 460.195,888.949 460.754,899.66 461.313,907.743 461.873,864.676 462.432,858.206 462.991,853.421 463.55,861.786 464.11,853.963 464.669,831.969 465.228,794.052 465.787,790.228 466.347,771.387 466.906,770.309 467.465,768.337 468.024,780.758 468.584,763.331 469.143,692.979 469.702,647.538 470.261,667.227 470.821,643.47 471.38,649.75 471.939,670.097 472.498,657.309 473.058,676.979 473.617,680.922 474.176,685.678 474.735,703.159 475.295,705.653 475.854,657.488 476.413,631.285 476.972,624.62 477.532,615.276 478.091,618.111 478.65,619.154 479.209,643.482 479.769,664.273 480.328,650.869 480.887,658.065 481.446,699.925 482.006,733.136 482.565,715.265 483.124,700.447 483.683,704.094 484.243,719.808 484.802,706.091 485.361,724.84 485.92,725.001 486.48,744.228 487.039,794.568 487.598,808.393 488.157,775.955 488.717,758.774 489.276,777.597 489.835,808.601 490.394,806.236 490.954,818.611 491.513,832.308 492.072,794.302 492.631,772.401 493.191,770.566 493.75,751.772 494.309,763.8 494.868,766.46 495.428,762.066 495.987,777.398 496.546,806.512 497.105,817.742 497.665,799.07 498.224,796.851 498.783,810.754 499.342,853.297 499.902,814.706 500.461,809.431 501.02,807.334 501.579,784.745 502.139,778.868 502.698,775.51 503.257,788.893 503.816,821.071 504.376,784.588 504.935,781.002 505.494,792.704 506.053,808.57 506.613,789.72 507.172,787.212 507.731,802.306 508.29,795.431 508.85,805.421 509.409,800.816 509.968,815.397 510.527,826.514 511.087,791.299 511.646,720.168 512.205,734.854 512.764,732.233 513.324,714.168 513.883,716.254 514.442,670.065 515.001,708.075 515.561,677.4 516.12,647.248 516.679,635.076 517.238,638.942 517.798,626.631 518.357,631.426 518.916,635.727 519.475,641.265 520.035,613.508 520.594,603.831 521.153,596.277 521.712,619.798 522.272,644.43 522.831,648.557 523.39,636.892 523.949,657.097 524.509,660.967 525.068,650.183 525.627,652.89 526.186,641.837 526.746,630.2 527.305,635.094 527.864,626.816 528.423,600.995 528.983,625.913 529.542,664.702 530.101,653.252 530.66,677.074 531.22,681.451 531.779,683.091 532.338,672.557 532.897,694.378 533.457,712.221 534.016,729.624 534.575,732.775 535.134,717.675 535.694,738.984 536.253,739.417 536.812,736.859 537.371,753.377 537.931,766.973 538.49,782.244 539.049,793.494 539.608,775.387 540.168,754.578 540.727,785.858 541.286,843.872 541.845,835.274 542.405,845.079 542.964,837.936 543.523,831.654 544.082,841.09 544.642,817.081 545.201,759.466 545.76,740.28 546.319,706.992 546.879,693.163 547.438,713.188 547.997,697.627 548.556,701.109 549.116,703.027 549.675,720.387 550.234,709.145 550.793,709.534 551.353,677.089 551.912,660.9 552.471,678.845 553.031,669.86 553.59,718.291 554.149,703.021 554.708,686.496 555.268,705.498 555.827,706.837 556.386,712.333 556.945,728.097 557.505,726.943 558.064,740.338 558.623,735.769 559.182,736.278 559.742,733.282 560.301,733.021 560.86,727.462 561.419,733.407 561.979,733.033 562.538,748.301 563.097,747.522 563.656,780.049 564.216,778.155 564.775,770.482 565.334,769.152 565.893,783.833 566.453,781.82 567.012,777.513 567.571,757.847 568.13,770.165 568.69,753.327 569.249,732.935 569.808,747.903 570.367,731.042 570.927,763.698 571.486,725.48 572.045,741.866 572.604,759.338 573.164,761.792 573.723,776.349 574.282,792.134 574.841,772.486 575.401,751.041 575.96,733.149 576.519,734.837 577.078,732.261 577.638,714.716 578.197,698.766 578.756,734.512 579.315,731.871 579.875,733.394 580.434,738.341 580.993,719.398 581.552,735.546 582.112,750.987 582.671,763.197 583.23,775.888 583.789,803.648 584.349,831.049 584.908,824.296 585.467,788.816 586.026,767.437 586.586,762.706 587.145,755.777 587.704,733.407 588.263,730.155 588.823,728.851 589.382,747.378 589.941,728.445 590.5,745.681 591.06,744.073 591.619,773.062 592.178,753.195 592.737,752.268 593.297,735.734 593.856,719.443 594.415,704.04 594.974,720.694 595.534,720.306 596.093,751.319 596.652,763.352 597.211,791.258 597.771,769.753 598.33,749.294 598.889,763.56 599.448,742.706 600.008,693.435 600.567,695.532 601.126,695.635 601.685,659.214 602.245,662.342 602.804,697.847 603.363,715.145 603.922,717.004 604.482,748.636 605.041,793.709 605.6,823.163 606.159,817.747 606.719,747.638 607.278,743.753 607.837,710.128 608.396,724.59 608.956,677.174 609.515,679.335 610.074,665.774 610.633,703.685 611.193,706.316 611.752,687.587 612.311,675.062 612.87,694.006 613.43,708.557 613.989,702.862 614.548,700.916 615.107,711.739 615.667,711.546 616.226,710.511 616.785,709.89 617.344,738.853 617.904,734.345 618.463,733.353 619.022,715.321 619.581,700.149 620.141,685.91 620.7,684.121 621.259,733.581 621.818,731.333 622.378,760.641 622.937,756.075 623.496,735.647 624.055,688.579 624.615,721.176 625.174,683.078 625.733,690.47 626.292,705.132 626.852,703.87 627.411,672.344 627.97,720.136 628.529,701.164 629.089,700.408 629.648,651.579 630.207,652.488 630.766,654.414 631.326,656.417 631.885,628.121 632.444,629.462 633.003,651.234 633.563,668.915 634.122,685.777 634.681,671.414 635.24,671.504 635.8,673.235 636.359,678.095 636.918,661.652 637.477,666.514 638.037,682.769 638.596,700.354 639.155,712.803 639.714,693.056 640.274,693.081 640.833,675.556 641.392,644.623 641.951,614.004 642.511,587.498 643.07,578.554 643.629,570.11 644.188,545.126 644.748,523.404 645.307,536.136 645.866,576.039 646.425,584.986 646.985,572.423 647.544,582.496 648.103,621.58 648.662,639.57 649.222,626.245 649.781,630.087 650.34,620.29 650.899,609.056 651.459,617.055 652.018,623.714 652.577,629.559 653.136,634.519 653.696,655.542 654.255,677.051 654.814,711.136 655.373,660.581 655.933,678.787 656.492,648.813 657.051,657.405 657.61,660.871 658.17,644.355 658.729,664.721 659.288,682.668 659.847,669.999 660.407,672.544 660.966,673.762 661.525,639.786 662.084,643.677 662.644,648.346 663.203,648.952 663.762,636.246 664.321,653.479 664.881,626.096 665.44,631.042 665.999,633.253 666.558,619.853 667.118,588.48 667.677,593.533 668.236,578.839 668.795,569.83 669.355,578.584 669.914,571.079 670.473,580.011 671.032,588.57 671.592,594.195 672.151,600.613 672.71,626.871 673.269,646.829 673.829,681.622 674.388,700.616 674.947,683.939 675.506,670.028 676.066,688.177 676.625,691.599 677.184,690.226 677.743,708.455 678.303,759.002 678.862,772.717 679.421,799.126 679.981,827.756 680.54,802.751 681.099,768.231 681.658,765.568 682.218,793.443 682.777,773.174 683.336,799.257 683.895,793.717 684.455,739.652 685.014,751.251 685.573,731.369 686.132,744.874 686.692,790.658 687.251,783.861 687.81,793.301 688.369,785.4 688.929,781.903 689.488,743.893 690.047,728.159 690.606,728.929 691.166,725.855 691.725,741.134 692.284,721.209 692.843,702.174 693.403,698.549 693.962,715.666 694.521,728.667 695.08,724.986 695.64,772.065 696.199,748.009 696.758,712.035 697.317,713.071 697.877,696.095 698.436,695.498 698.995,695.665 699.554,730.917 700.114,680.427 700.673,695.825 701.232,696.025 701.791,712.219 702.351,741.621 702.91,738.272 703.469,753.252 704.028,750.563 704.588,729.278 705.147,744.081 705.706,754.927 706.265,752.094 706.825,750.097 707.384,745.873 707.943,762.11 708.502,741.238 709.062,738.968 709.621,704.336 710.18,657.251 710.739,660.94 711.299,665.831 711.858,669.267 712.417,672.847 712.976,688.889 713.536,689.259 714.095,687.507 714.654,671.38 715.213,667.726 715.773,669.635 716.332,638.736 716.891,626.559 717.45,633.662 718.01,620.194 718.569,638.471 719.128,656.192 719.687,673.876 720.247,670.375 720.806,688.375 721.365,666.671 721.924,666.876 722.484,651.597 723.043,670.335 723.602,672.243 724.161,686.762 724.721,670.997 725.28,656.214 725.839,689.367 726.398,705.198 726.958,754.009 727.517,737.99 728.076,738.121 728.635,706.392 729.195,721.667 729.754,735.657 730.313,769.609 730.872,781.527 731.432,775.814 731.991,773.52 732.55,753.034 733.109,763.571 733.669,759.776 734.228,774.561 734.787,787.682 735.346,766.994 735.906,777.901 736.465,759.887 737.024,773.056 737.583,735.301 738.143,749.549 738.702,760.204 739.261,773.614 739.82,803.607 740.38,796.965 740.939,807.018 741.498,784.913 742.057,731.177 742.617,726.249 743.176,725.215 743.735,708.339 744.294,706.757 744.854,708.78 745.413,771.214 745.972,770.101 746.531,752.77 747.091,749.884 747.65,748.243 748.209,733.171 748.768,781.29 749.328,794.323 749.887,790.961 750.446,734.638 751.005,767.014 751.565,762.446 752.124,758.168 752.683,771.223 753.242,767.293 753.802,745.106 754.361,725.086 754.92,706.335 755.479,659.342 756.039,656.827 756.598,723.436 757.157,700.374 757.716,715.576 758.276,731.197 758.835,728.228 759.394,742.016 759.953,707.755 760.513,690.588 761.072,677.304 761.631,709.778 762.19,678.474 762.75,679.848 763.309,695.174 763.868,679.759 764.427,647.58 764.987,633.715 765.546,634.117 766.105,620.911 766.664,608.745 767.224,582.136 767.783,587.545 768.342,607.992 768.901,631.219 769.461,618.867 770.02,594.032 770.579,613.634 771.138,617.515 771.698,571.201 772.257,609.601 772.816,564.884 773.375,586.914 773.935,589.598 774.494,596.366 775.053,617.963 775.612,607.613 776.172,643.659 776.731,679.038 777.29,651.74 777.849,671.628 778.409,657.227 778.968,675.667 779.527,661.564 780.086,666.679 780.646,667.104 781.205,653.53 781.764,654.294 782.323,736.991 782.883,765.116 783.442,746.666 784.001,726.631 784.56,773.684 785.12,816.866 785.679,793.269 786.238,791.127 786.797,738.5 787.357,739.513 787.916,735.572 788.475,712.853 789.034,744.098 789.594,759.445 790.153,773.212 790.712,757.221 791.271,705.728 791.831,687.415 792.39,651.837 792.949,747.609 793.508,728.998 794.068,697.756 794.627,729.651 795.186,710.925 795.745,741.441 796.305,707.135 796.864,736.448 797.423,716.09 797.982,733.121 798.542,716.232 799.101,712.28 799.66,711.103 800.219,727.8 800.779,709.374 801.338,673.369 801.897,673.013 802.456,671.908 803.016,656.021 803.575,657.359 804.134,624.504 804.693,624.254 805.253,657.458 805.812,659.804 806.371,664.071 806.931,652.026 807.49,651.075 808.049,634.869 808.608,638.866 809.168,658.222 809.727,629.134 810.286,632.803 810.845,604.382 811.405,562.09 811.964,536.306 812.523,561.986 813.082,551.14 813.642,556.713 814.201,615.741 814.76,618.863 815.319,624.35 815.879,627.86 816.438,600.297 816.997,632.093 817.556,619.46 818.116,638.66 818.675,659.641 819.234,660.583 819.793,614.219 820.353,622.462 820.912,655.554 821.471,657.327 822.03,688.123 822.59,689.78 823.149,705.365 823.708,687.624 824.267,691.098 824.827,640.744 825.386,658.082 825.945,672.48 826.504,674.097 827.064,673.829 827.623,642.854 828.182,628.147 828.741,631.968 829.301,660.592 829.86,694.315 830.419,713.46 830.978,756.846 831.538,724.902 832.097,723.638 832.656,719.893 833.215,718.54 833.775,717.958 834.334,700.268 834.893,733.316 835.452,747.037 836.012,773.589 836.571,735.748 837.13,765.992 837.689,746.835 838.249,761.575 838.808,804.709 839.367,810.941 839.926,789.64 840.486,771.834 841.045,781.418 841.604,796.996 842.163,774.846 842.723,752.792 843.282,748.047 843.841,728.502 844.4,742.384 844.96,736.576 845.519,747.391 846.078,725.115 846.637,711.998 847.197,726.512 847.756,705.035 848.315,738.367 848.874,721.353 849.434,703.254 849.993,684.176 850.552,668.393 851.111,671.815 851.671,638.592 852.23,674.273 852.789,693.454 853.348,708.982 853.908,690.615 854.467,656.347 855.026,609.639 855.585,624.271 856.145,628.062 856.704,644.072 857.263,645.162 857.822,648.056 858.382,651.156 858.941,671.893 859.5,676.775 860.059,681.19 860.619,669.17 861.178,654.516 861.737,656.65 862.296,655.52 862.856,654.867 863.415,690.042 863.974,706.764 864.533,686.706 865.093,688.887 865.652,639.068 866.211,658.346 866.77,641.374 867.33,644.79 867.889,664.992 868.448,683.879 869.007,696.929 869.567,681.806 870.126,679.484 870.685,696.682 871.244,761.988 871.804,757.829 872.363,736.412 872.922,750.525 873.481,728.215 874.041,727.048 874.6,744.439 875.159,744.555 875.718,710.809 876.278,724.845 876.837,739.761 877.396,753.914 877.955,733.743 878.515,682.608 879.074,665.805 879.633,681.082 880.192,698.766 880.752,698.871 881.311,692.321 881.87,705.894 882.429,706.745 882.989,706.301 883.548,689.824 884.107,669.223 884.666,669.687 885.226,670.37 885.785,671.088 886.344,657.719 886.903,691.253 887.463,706.876 888.022,689.166 888.581,707.099 889.14,687.964 889.7,707.194 890.259,709.079 890.818,724.939 891.377,712.048 891.937,711.316 892.496,694.444 893.055,707.532 893.614,688.449 894.174,673.552 894.733,690.781 895.292,673.65 895.851,659.616 896.411,661.199 896.97,644.972 897.529,613.513 898.088,635.09 898.648,651.993 899.207,636.01 899.766,605.067 900.325,592.51 900.885,630.582 901.444,646.842 902.003,632.59 902.562,666.924 903.122,682.639 903.681,683.204 904.24,699.21 904.799,696.107 905.359,679.679 905.918,730.49 906.477,728.97 907.036,791.393 907.596,771.431 908.155,765.514 908.714,765.293 909.273,746.422 909.833,710.629 910.392,726.768 910.951,712.225 911.51,713.331 912.07,677.754 912.629,659.928 913.188,629.588 913.747,600.389 914.307,601.14 914.866,585.895 915.425,574.983 915.984,579.439 916.544,586.321 917.103,575.229 917.662,614.403 918.221,614.945 918.781,585.994 919.34,575.139 919.899,578.547 920.458,600.628 921.018,606.487 921.577,595.69 922.136,634.199 922.695,653.813 923.255,655.867 923.814,656.249 924.373,660.42 924.932,677.473 925.492,693.807 926.051,693.556 926.61,629.723 927.169,619.52 927.729,622.642 928.288,626.021 928.847,646.541 929.406,650.348 929.966,667.593 930.525,669.154 931.084,667.911 931.644,649.478 932.203,640.878 932.762,673.742 933.321,679.924 933.881,696.973 934.44,745.136 934.999,724.956 935.558,722.66 936.118,684.591 936.677,671.506 937.236,671.971 937.795,670.966 938.355,653.903 938.914,656.715 939.473,692.762 940.032,690.064 940.592,704.76 941.151,703.825 941.71,717.337 942.269,715.364 942.829,716.624 943.388,713.915 943.947,696.691 944.506,680.111 945.066,713.439 945.625,713.162 946.184,758.243 946.743,736.762 947.303,733.73 947.862,716.44 948.421,664.917 948.98,663.427 949.54,649.151 950.099,665.665 950.658,666.615 951.217,667.187 951.777,685.606 952.336,671.063 952.895,689.364 953.454,670.774 954.014,669.66 954.573,670.088 955.132,652.697 955.691,639.658 956.251,641.352 956.81,642.671 957.369,660.165 957.928,645.778 958.488,613.037 959.047,633.092 959.606,652.261 960.165,640.881 960.725,661.464 961.284,649.342 961.843,687.309 962.402,705.231 962.962,725.168 963.521,710.568 964.08,723.457 964.639,719.008 965.199,716.211 965.758,728.824 966.317,759.484 966.876,756.803 967.436,754.479 967.995,736.199 968.554,783.28 969.113,761.817 969.673,825.568 970.232,869.892 970.791,848.234 971.35,823.247 971.91,796.537 972.469,789.193 973.028,798.029 973.587,775.162 974.147,737.9 974.706,736.343 975.265,730.874 975.824,713.9 976.384,695.961 976.943,693.921 977.502,662.211 978.061,628.058 978.621,631.048 979.18,618.387 979.739,619.32 980.298,637.552 980.858,641.611 981.417,657.43 981.976,672.896 982.535,671.465 983.095,721.665 983.654,736.875 984.213,716.857 984.772,729.901 985.332,710.386 985.891,693.343 986.45,725.583 987.009,739.972 987.569,753.689 988.128,750.801 988.687,744.492 989.246,739.69 989.806,723.685 990.365,706.285 990.924,718.473 991.483,701.498 992.043,718.964 992.602,717.791 993.161,664.093 993.72,664.771 994.28,665.061 994.839,663.061 995.398,697.694 995.957,679.445 996.517,682.525 997.076,681.395 997.635,682.077 998.194,649.036 998.754,649.85 999.313,664.651 999.872,633.899 1000.43,615.955 1000.99,652.116 1001.55,670.104 1002.11,654.494 1002.67,672.737 1003.23,640.123 1003.79,627.362 1004.35,631.36 1004.91,633.7 1005.46,667.001 1006.02,653.01 1006.58,652.458 1007.14,671.324 1007.7,685.702 1008.26,700.142 1008.82,684.091 1009.38,669.324 1009.94,654.056 1010.5,622.926 1011.06,641.929 1011.62,645.943 1012.18,629.772 1012.73,601.013 1013.29,588.755 1013.85,593.546 1014.41,597.123 1014.97,645.134 1015.53,644.981 1016.09,650.765 1016.65,635.349 1017.21,638.596 1017.77,646.106 1018.33,693.591 1018.89,638.287 1019.45,622.089 1020.01,623.675 1020.56,645.122 1021.12,679.816 1021.68,694.823 1022.24,690.944 1022.8,706.238 1023.36,703.817 1023.92,687.191 1024.48,672.603 1025.04,674.35 1025.6,660.318 1026.16,663.121 1026.72,680.783 1027.28,696.551 1027.83,647.941 1028.39,633.924 1028.95,656.095 1029.51,657.717 1030.07,658.638 1030.63,645.332 1031.19,663.66 1031.75,682.651 1032.31,698.887 1032.87,696.494 1033.43,712.736 1033.99,696.745 1034.55,647.262 1035.1,648.1 1035.66,650.444 1036.22,636.173 1036.78,625.589 1037.34,630.849 1037.9,631.718 1038.46,620.143 1039.02,642.647 1039.58,644.446 1040.14,726.712 1040.7,713.145 1041.26,729.192 1041.82,755.318 1042.38,719.513 1042.93,703.254 1043.49,689.856 1044.05,690.029 1044.61,707.517 1045.17,705.904 1045.73,687.578 1046.29,668.593 1046.85,668.749 1047.41,683.813 1047.97,714.894 1048.53,743.132 1049.09,750.678 1049.65,744.9 1050.2,738.862 1050.76,738.418 1051.32,785.83 1051.88,749.219 1052.44,749.069 1053,778.902 1053.56,771.846 1054.12,786.067 1054.68,812.776 1055.24,789.223 1055.8,778.57 1056.36,758.125 1056.92,783.921 1057.48,764.408 1058.03,771.583 1058.59,751.738 1059.15,714.962 1059.71,712.134 1060.27,696.511 1060.83,714.841 1061.39,732.232 1061.95,728.373 1062.51,727.03 1063.07,743.541 1063.63,704.053 1064.19,670.043 1064.75,685.709 1065.3,684.441 1065.86,684.053 1066.42,717.445 1066.98,714.779 1067.54,747.048 1068.1,711.364 1068.66,726.456 1069.22,708.901 1069.78,674.234 1070.34,642.758 1070.9,660.019 1071.46,693.661 1072.02,659.916 1072.57,663.202 1073.13,694.392 1073.69,679.56 1074.25,666.998 1074.81,682.697 1075.37,682.594 1075.93,698.977 1076.49,695.917 1077.05,711.115 1077.61,740.293 1078.17,703.937 1078.73,704.675 1079.29,687.197 1079.85,657.911 1080.4,626.734 1080.96,646.495 1081.52,664.544 1082.08,714.693 1082.64,758.722 1083.2,771.161 1083.76,767.024 1084.32,762.706 1084.88,788.95 1085.44,747.435 1086,727.105 1086.56,738.426 1087.12,687.773 1087.67,654.836 1088.23,653.755 1088.79,701.832 1089.35,687.444 1089.91,671.088 1090.47,703.649 1091.03,719.163 1091.59,700.159 1092.15,698.862 1092.71,714.871 1093.27,697.315 1093.83,647.783 1094.39,681.79 1094.94,648.655 1095.5,616.471 1096.06,620.459 1096.62,641.111 1097.18,628.219 1097.74,631.241 1098.3,614.364 1098.86,615.217 1099.42,583.832 1099.98,587.009 1100.54,609.242 1101.1,632.309 1101.66,636.822 1102.22,637.379 1102.77,642.11 1103.33,644.099 1103.89,648.096 1104.45,652.138 1105.01,652.122 1105.57,654.204 1106.13,671.339 1106.69,655.197 1107.25,642.865 1107.81,596.694 1108.37,549.705 1108.93,589.612 1109.49,614.06 1110.04,587.595 1110.6,656.006 1111.16,656.15 1111.72,674.508 1112.28,690.16 1112.84,695.669 1113.4,692.412 1113.96,691.45 1114.52,676.569 1115.08,661.709 1115.64,694.059 1116.2,710.899 1116.76,725.086 1117.31,724.02 1117.87,724.062 1118.43,719.94 1118.99,716.668 1119.55,711.956 1120.11,709.452 1120.67,708.157 1121.23,692.007 1121.79,689.99 1122.35,708.372 1122.91,676.94 1123.47,642.135 1124.03,659.523 1124.59,709.81 1125.14,710.324 1125.7,693.093 1126.26,711.136 1126.82,694.267 1127.38,691.095 1127.94,706.265 1128.5,705.854 1129.06,752.737 1129.62,767.962 1130.18,758.611 1130.74,734.05 1131.3,746.857 1131.86,726.447 1132.41,722.916 1132.97,699.555 1133.53,682.82 1134.09,697.069 1134.65,713.502 1135.21,728.818 1135.77,696.353 1136.33,729.258 1136.89,759.191 1137.45,758.905 1138.01,754.891 1138.57,748.872 1139.13,699.932 1139.68,715.968 1140.24,734.301 1140.8,715.61 1141.36,694.405 1141.92,706.685 1142.48,690.215 1143.04,688.53 1143.6,686.646 1144.16,684.401 1144.72,696.639 1145.28,649.516 1145.84,651.645 1146.4,670.807 1146.96,687.329 1147.51,619.965 1148.07,620.839 1148.63,577.842 1149.19,565.375 1149.75,571.273 1150.31,582.218 1150.87,588.489 1151.43,592.866 1151.99,594.209 1152.55,567.156 1153.11,570.436 1153.67,593.806 1154.23,548.982 1154.78,525.187 1155.34,536.811 1155.9,546.069 1156.46,568.949 1157.02,627.157 1157.58,647.775 1158.14,617.896 1158.7,604.562 1159.26,611.231 1159.82,612.822 1160.38,619.614 1160.94,607.199 1161.5,648.701 1162.05,633.507 1162.61,623.697 1163.17,608.437 1163.73,624.767 1164.29,692.811 1164.85,708.73 1165.41,707.498 1165.97,690.882 1166.53,703.783 1167.09,704.664 1167.65,687.902 1168.21,723.71 1168.77,703.834 1169.33,701.473 1169.88,701.431 1170.44,735.217 1171,734.756 1171.56,734.513 1172.12,716.093 1172.68,713.334 1173.24,680.022 1173.8,661.968 1174.36,630.448 1174.92,633.981 1175.48,606.335 1176.04,640.848 1176.6,643.268 1177.15,660.128 1177.71,680.092 1178.27,679.643 1178.83,680.482 1179.39,697.33 1179.95,697.588 1180.51,696.686 1181.07,710.307 1181.63,743.266 1182.19,724.143 1182.75,741.326 1183.31,738.633 1183.87,749.355 1184.43,779.644 1184.98,740.583 1185.54,755.597 1186.1,749.835 1186.66,730.57 1187.22,761.374 1187.78,710.795 1188.34,725.226 1188.9,705.262 1189.46,690.927 1190.02,690.617 1190.58,689.101 1191.14,676.408 1191.7,675.734 1192.25,694.411 1192.81,692.897 1193.37,710.666 1193.93,691.867 1194.49,725.223 1195.05,690.675 1195.61,690.7 1196.17,675.603 1196.73,644.511 1197.29,646.886 1197.85,681.861 1198.41,695.428 1198.97,696.303 1199.52,710.866 1200.08,706.031 1200.64,705.224 1201.2,704.445 1201.76,702.469 1202.32,713.908 1202.88,696.104 1203.44,694.624 1204,689.681 1204.56,690.717 1205.12,706.495 1205.68,707.903 1206.24,708.535 1206.8,708.047 1207.35,708.421 1207.91,742.328 1208.47,754.957 1209.03,751.726 1209.59,730.099 1210.15,744.316 1210.71,709.745 1211.27,728.951 1211.83,708.771 1212.39,687.642 1212.95,686.746 1213.51,670.641 1214.07,656.846 1214.62,657.412 1215.18,627.665 1215.74,662.148 1216.3,660.67 1216.86,627.945 1217.42,630.256 1217.98,631.269 1218.54,651.628 1219.1,619.176 1219.66,583.778 1220.22,607.01 1220.78,561.35 1221.34,581.65 1221.89,553.716 1222.45,593.421 1223.01,579.592 1223.57,586.266 1224.13,560.816 1224.69,569.734 1225.25,570.445 1225.81,603.889 1226.37,609.271 1226.93,647.243 1227.49,651.35 1228.05,668.467 1228.61,669.967 1229.17,672.486 1229.72,671.524 1230.28,685.741 1230.84,651.292 1231.4,685.862 1231.96,673.655 1232.52,675.822 1233.08,646.868 1233.64,648.102 1234.2,652.107 1234.76,669.045 1235.32,685.386 1235.88,703.944 1236.44,703.856 1236.99,720.303 1237.55,749.868 1238.11,778.82 1238.67,774.182 1239.23,771.277 1239.79,737.5 1240.35,751.279 1240.91,764.449 1241.47,760.036 1242.03,741.082 1242.59,719.031 1243.15,783.621 1243.71,811.548 1244.26,805.19 1244.82,815.499 1245.38,809.194 1245.94,802.089 1246.5,780.013 1247.06,773.081 1247.62,751.48 1248.18,731.405 1248.74,728.584 1249.3,713.116 1249.86,711.875 1250.42,724.114 1250.98,706.217 1251.54,723.596 1252.09,721.813 1252.65,687.208 1253.21,671.773 1253.77,690.791 1254.33,704.919 1254.89,736.922 1255.45,703.669 1256.01,736.401 1256.57,734.448 1257.13,763.242 1257.69,763.321 1258.25,755.895 1258.81,755.743 1259.36,738.327 1259.92,752.146 1260.48,731.369 1261.04,746.324 1261.6,741.793 1262.16,720.71 1262.72,689.222 1263.28,704.85 1263.84,702.336 1264.4,685.223 1264.96,701.965 1265.52,700.259 1266.08,681.075 1266.63,682.464 1267.19,664.624 1267.75,733.148 1268.31,733.641 1268.87,733.944 1269.43,731.106 1269.99,761.19 1270.55,759.168 1271.11,770.461 1271.67,780.966 1272.23,754.999 1272.79,752.011 1273.35,766.293 1273.91,777.999 1274.46,757.649 1275.02,771.627 1275.58,783.748 1276.14,795.324 1276.7,774.039 1277.26,769.715 1277.82,781.628 1278.38,759.292 1278.94,769.538 1279.5,718.635 1280.06,730.987 1280.62,713.322 1281.18,742.434 1281.73,723.836 1282.29,733.022 1282.85,728.72 1283.41,726.801 1283.97,758.969 1284.53,737.061 1285.09,702.506 1285.65,700.669 1286.21,682.578 1286.77,683.307 1287.33,683.562 1287.89,682.193 1288.45,649.788 1289,665.704 1289.56,666.698 1290.12,637.576 1290.68,624.239 1291.24,640.702 1291.8,643.002 1292.36,647.263 1292.92,630.978 1293.48,633.238 1294.04,636.89 1294.6,640.176 1295.16,640.822 1295.72,671.916 1296.28,718.327 1296.83,681.915 1297.39,710.985 1297.95,741.548 1298.51,754.913 1299.07,751.258 1299.63,731.783 1300.19,728.757 1300.75,709.398 1301.31,740.508 1301.87,721.425 1302.43,735.767 1302.99,746.132 1303.55,727.173 1304.1,738.647 1304.66,734.321 1305.22,715.652 1305.78,729.84 1306.34,709.187 1306.9,693.137 1307.46,661.108 1308.02,645.444 1308.58,631.014 1309.14,651.078 1309.7,650.234 1310.26,670.722 1310.82,657.754 1311.38,625.138 1311.93,628.228 1312.49,629.336 1313.05,646.697 1313.61,650.178 1314.17,634.29 1314.73,602.275 1315.29,608.908 1315.85,612.336 1316.41,615.887 1316.97,617.08 1317.53,600.42 1318.09,638.753 1318.65,642.214 1319.2,644.851 1319.76,644.303 1320.32,663.138 1320.88,666.412 1321.44,678.698 1322,725.81 1322.56,722.53 1323.12,749.878 1323.68,730.189 1324.24,728.995 1324.8,759.253 1325.36,753.899 1325.92,766.123 1326.47,777.624 1327.03,742.226 1327.59,736.344 1328.15,795.966 1328.71,821.652 1329.27,768.754 1329.83,702.004 1330.39,667.135 1330.95,666.344 1331.51,698.728 1332.07,666.336 1332.63,648.907 1333.19,650.136 1333.75,667.084 1334.3,636.044 1334.86,639.766 1335.42,625.023 1335.98,630.821 1336.54,652.194 1337.1,654.148 1337.66,688.753 1338.22,706.625 1338.78,688.648 1339.34,657.61 1339.9,642.767 1340.46,662.162 1341.02,662.025 1341.57,662.217 1342.13,682.122 1342.69,698.252 1343.25,662.429 1343.81,679.69 1344.37,724.1 1344.93,688.435 1345.49,657.611 1346.05,676.009 1346.61,662.514 1347.17,661.721 1347.73,730.714 1348.29,761.406 1348.84,711.112 1349.4,710.662 1349.96,710.446 1350.52,711.429 1351.08,759.852 1351.64,724.643 1352.2,689.025 1352.76,706.558 1353.32,686.512 1353.88,685.56 1354.44,686.606 1355,681.245 1355.56,664.915 1356.12,665.907 1356.67,667.994 1357.23,653.413 1357.79,670.567 1358.35,655.858 1358.91,655.68 1359.47,690.129 1360.03,687.564 1360.59,703.106 1361.15,717.923 1361.71,735.357 1362.27,734.693 1362.83,665.206 1363.39,683.234 1363.94,683.305 1364.5,682.27 1365.06,698.931 1365.62,701.956 1366.18,720.272 1366.74,702.053 1367.3,669.104 1367.86,731.859 1368.42,710.208 1368.98,696.1 1369.54,737.739 1370.1,733.095 1370.66,759.602 1371.21,801.002 1371.77,763.638 1372.33,790.206 1372.89,772.466 1373.45,782.027 1374.01,778.222 1374.57,761.546 1375.13,769.536 1375.69,749.9 1376.25,732.963 1376.81,717.293 1377.37,699.762 1377.93,666.561 1378.49,651.329 1379.04,622.366 1379.6,628.036 1380.16,645.33 1380.72,682.071 1381.28,678.68 1381.84,656.577 1382.4,655.115 1382.96,638.466 1383.52,653.696 1384.08,676.434 1384.64,691.074 1385.2,671.73 1385.76,673.711 1386.31,671.467 1386.87,639.838 1387.43,658.159 1387.99,629.646 1388.55,616.502 1389.11,621.194 1389.67,610.242 1390.23,581.397 1390.79,602.855 1391.35,639.148 1391.91,622.734 1392.47,610.477 1393.03,613.561 1393.58,616.71 1394.14,604.998 1394.7,625.913 1395.26,612.982 1395.82,636.124 1396.38,669.94 1396.94,669.69 1397.5,655.831 1398.06,672.48 1398.62,676.909 1399.18,676.586 1399.74,659.912 1400.3,680.789 1400.86,667.673 1401.41,701.332 1401.97,701.533 1402.53,701.086 1403.09,701.572 1403.65,683.135 1404.21,663.212 1404.77,678.48 1405.33,680.707 1405.89,665.762 1406.45,654.075 1407.01,624.363 1407.57,610.559 1408.13,598.223 1408.68,571.497 1409.24,625.486 1409.8,628.6 1410.36,614.975 1410.92,606.168 1411.48,593.465 1412.04,632.276 1412.6,635.893 1413.16,624.113 1413.72,626.793 1414.28,631.25 1414.84,603.794 1415.4,626.307 1415.95,629.494 1416.51,614.984 1417.07,604.65 1417.63,611.279 1418.19,617.482 1418.75,620.737 1419.31,604.925 1419.87,593.503 1420.43,579.699 1420.99,586.669 1421.55,623.337 1422.11,626.404 1422.67,630.542 1423.23,645.849 1423.78,649.005 1424.34,677.92 1424.9,631.609 1425.46,635.786 1426.02,621.207 1426.58,644.951 1427.14,637.371 1427.7,591.514 1428.26,611.339 1428.82,580.932 1429.38,551.859 1429.94,561.374 1430.5,552.31 1431.05,623.535 1431.61,643.79 1432.17,712.007 1432.73,711.347 1433.29,740.59 1433.85,756.806 1434.41,736.657 1434.97,732.82 1435.53,734.844 1436.09,698.661 1436.65,699.302 1437.21,699.49 1437.77,727.7 1438.33,708.94 1438.88,690.517 1439.44,644.183 1440,648.548 1440.56,682.707 1441.12,685.389 1441.68,687.061 1442.24,690.704 1442.8,679.937 1443.36,682.155 1443.92,733.494 1444.48,748.564 1445.04,761.493 1445.6,758.007 1446.15,769.232 1446.71,780.989 1447.27,761.84 1447.83,759.283 1448.39,755.825 1448.95,783.9 1449.51,729.686 1450.07,691.556 1450.63,727.314 1451.19,758.452 1451.75,770.616 1452.31,733.958 1452.87,719.751 1453.42,731.879 1453.98,730.262 1454.54,697.927 1455.1,680.093 1455.66,666.201 1456.22,635.505 1456.78,672.203 1457.34,690.936 1457.9,672.336 1458.46,652.671 1459.02,656.962 1459.58,676.467 1460.14,693.321 1460.7,659.772 1461.25,657.033 1461.81,660.331 1462.37,678.271 1462.93,680.586 1463.49,728.131 1464.05,708.65 1464.61,684.411 1465.17,685.669 1465.73,701.077 1466.29,665.846 1466.85,650.208 1467.41,667.452 1467.97,672.092 1468.52,706.057 1469.08,687.178 1469.64,686.961 1470.2,638.866 1470.76,610.916 1471.32,562.241 1471.88,570.299 1472.44,589.955 1473,594.401 1473.56,581.965 1474.12,572.578 1474.68,530.784 1475.24,540.148 1475.79,534.485 1476.35,511.557 1476.91,522.629 1477.47,548.138 1478.03,589.235 1478.59,597.4 1479.15,619.065 1479.71,591.387 1480.27,594.49 1480.83,600.481 1481.39,620.692 1481.95,640.35 1482.51,643.329 1483.07,662.892 1483.62,650.37 1484.18,649.988 1484.74,699.84 1485.3,714.534 1485.86,695.656 1486.42,726.223 1486.98,729.718 1487.54,712.428 1488.1,712.4 1488.66,696.458 1489.22,712.684 1489.78,726.754 1490.34,725.302 1490.89,722.409 1491.45,705.229 1492.01,721.908 1492.57,720.961 1493.13,721.39 1493.69,717.483 1494.25,733.715 1494.81,732.124 1495.37,732.021 1495.93,748.61 1496.49,729.65 1497.05,727.839 1497.61,710.418 1498.16,692.213 1498.72,675.452 1499.28,658.822 1499.84,660.847 1500.4,692.194 1500.96,676.542 1501.52,675.076 1502.08,670.527 1502.64,687.628 1503.2,700.076 1503.76,728.695 1504.32,744.852 1504.88,711.202 1505.44,726.482 1505.99,710.081 1506.55,726.845 1507.11,741.914 1507.67,738.201 1508.23,750.965 1508.79,747.172 1509.35,742.392 1509.91,723.123 1510.47,726.957 1511.03,706.048 1511.59,705.197 1512.15,690.665 1512.71,723.15 1513.26,658.156 1513.82,659.337 1514.38,672.939 1514.94,670.412 1515.5,669.113 1516.06,687.201 1516.62,719.574 1517.18,734.751 1517.74,735.214 1518.3,767.83 1518.86,798.479 1519.42,758.217 1519.98,723.028 1520.53,750.096 1521.09,747.024 1521.65,694.363 1522.21,693.511 1522.77,725.203 1523.33,758.065 1523.89,705.028 1524.45,705.267 1525.01,670.374 1525.57,654.499 1526.13,637.425 1526.69,623.328 1527.25,644.267 1527.81,642.601 1528.36,662.654 1528.92,648.138 1529.48,651.007 1530.04,671.319 1530.6,672.302 1531.16,658.987 1531.72,662.17 1532.28,664.583 1532.84,680.563 1533.4,679.851 1533.96,694.367 1534.52,690.81 1535.08,722.976 1535.63,722.922 1536.19,734.916 1536.75,731.408 1537.31,729.564 1537.87,712.286 1538.43,714.626 1538.99,680.852 1539.55,679.956 1540.11,699.221 1540.67,729.484 1541.23,725.694 1541.79,673.481 1542.35,691.061 1542.9,708.454 1543.46,690.301 1544.02,723.44 1544.58,721.052 1545.14,701.442 1545.7,681.819 1546.26,663.832 1546.82,680.093 1547.38,699.475 1547.94,682.766 1548.5,664.601 1549.06,649.537 1549.62,636.204 1550.18,619.924 1550.73,620.164 1551.29,671.898 1551.85,691.622 1552.41,705.081 1552.97,703.94 1553.53,701.289 1554.09,701.598 1554.65,717.093 1555.21,730.391 1555.77,727.463 1556.33,707.207 1556.89,690.234 1557.45,691.766 1558,689.352 1558.56,719.324 1559.12,720.099 1559.68,718.749 1560.24,733.543 1560.8,778.87 1561.36,770.227 1561.92,704.872 1562.48,704.913 1563.04,721.745 1563.6,733.88 1564.16,728.739 1564.72,741.993 1565.28,788.132 1565.83,766.765 1566.39,763.058 1566.95,743.548 1567.51,738.976 1568.07,738.292 1568.63,752.933 1569.19,747.024 1569.75,726.457 1570.31,769.417 1570.87,764.497 1571.43,726.514 1571.99,741.045 1572.55,737.084 1573.1,767.3 1573.66,797.918 1574.22,809.067 1574.78,833.844 1575.34,826.962 1575.9,834.852 1576.46,843.589 1577.02,837.853 1577.58,860.32 1578.14,868.805 1578.7,814.673 1579.26,823.383 1579.82,816.473 1580.37,824.929 1580.93,812.139 1581.49,816.704 1582.05,808.953 1582.61,770.312 1583.17,716.829 1583.73,683.494 1584.29,649.47 1584.85,661.755 1585.41,662.667 1585.97,677.131 1586.53,693.883 1587.09,691.166 1587.65,691.772 1588.2,658.82 1588.76,673.438 1589.32,654.369 1589.88,655.39 1590.44,672.536 1591,625.08 1591.56,611.609 1592.12,603.982 1592.68,637.328 1593.24,606.803 1593.8,609.557 1594.36,596.059 1594.92,581.591 1595.47,586.527 1596.03,574.738 1596.59,561.584 1597.15,552.494 1597.71,527.311 1598.27,537.543 1598.83,546.336 1599.39,557.153 1599.95,549.968 1600.51,554.271 1601.07,560.424 1601.63,584.267 1602.19,607.338 1602.74,610.66 1603.3,584.908 1603.86,590.923 1604.42,564.627 1604.98,602.685 1605.54,573.786 1606.1,565.841 1606.66,588.059 1607.22,612.379 1607.78,649.598 1608.34,621.365 1608.9,639.41 1609.46,622.466 1610.02,644.144 1610.57,663.145 1611.13,601.535 1611.69,589.598 1612.25,610.442 1612.81,613.96 1613.37,617.112 1613.93,635.942 1614.49,640.481 1615.05,643.075 1615.61,677.694 1616.17,691.462 1616.73,643.547 1617.29,660.556 1617.84,663.266 1618.4,682.515 1618.96,701.583 1619.52,700.068 1620.08,715.108 1620.64,669.268 1621.2,671.78 1621.76,658.386 1622.32,661.705 1622.88,646.528 1623.44,588.564 1624,595.368 1624.56,600.487 1625.11,603.696 1625.67,608.215 1626.23,609.418 1626.79,611.23 1627.35,648.747 1627.91,648.825 1628.47,650.57 1629.03,684.839 1629.59,667.256 1630.15,698.585 1630.71,711.71 1631.27,728.599 1631.83,738.428 1632.39,737.176 1632.94,732.543 1633.5,714.785 1634.06,680.218 1634.62,696.915 1635.18,714.51 1635.74,695.704 1636.3,709.629 1636.86,689.381 1637.42,688.856 1637.98,720.491 1638.54,683.854 1639.1,666.378 1639.66,665.028 1640.21,664.272 1640.77,662.038 1641.33,696.711 1641.89,680.413 1642.45,669.388 1643.01,639.033 1643.57,662.519 1644.13,683.342 1644.69,698.604 1645.25,698.51 1645.81,682.414 1646.37,700.641 1646.93,716.608 1647.48,730.702 1648.04,682.956 1648.6,700.532 1649.16,650.248 1649.72,635.627 1650.28,638.895 1650.84,674.981 1651.4,675.613 1651.96,708.087 1652.52,706.336 1653.08,737.009 1653.64,724.688 1654.2,704.31 1654.76,654.584 1655.31,670.945 1655.87,671.933 1656.43,641.865 1656.99,644.08 1657.55,648.293 1658.11,652.491 1658.67,672.541 1659.23,673.679 1659.79,640.79 1660.35,675.666 1660.91,688.923 1661.47,705.03 1662.03,734.326 1662.58,729.17 1663.14,739.325 1663.7,754.686 1664.26,735.587 1664.82,766.55 1665.38,761.942 1665.94,742.129 1666.5,758.615 1667.06,723.351 1667.62,723.394 1668.18,720.855 1668.74,698.418 1669.3,698.111 1669.85,666.371 1670.41,650.515 1670.97,685.354 1671.53,699.728 1672.09,714.058 1672.65,711.138 1673.21,709.48 1673.77,707.687 1674.33,704.614 1674.89,717.872 1675.45,703.326 1676.01,652.125 1676.57,653.566 1677.13,673.502 1677.68,675.173 1678.24,673.246 1678.8,672.245 1679.36,640.626 1679.92,659.343 1680.48,659.691 1681.04,676.316 1681.6,661.387 1682.16,663.095 1682.72,682.882 1683.28,651.058 1683.84,636.05 1684.4,654.876 1684.95,672.348 1685.51,657.219 1686.07,658.937 1686.63,677.711 1687.19,693.421 1687.75,647.595 1688.31,682.29 1688.87,651.352 1689.43,685.231 1689.99,668.02 1690.55,671.08 1691.11,690.058 1691.67,689.584 1692.23,750.767 1692.78,780.877 1693.34,759.914 1693.9,724.343 1694.46,769.295 1695.02,749.326 1695.58,763.112 1696.14,792.326 1696.7,754.126 1697.26,730.936 1697.82,761.36 1698.38,709.867 1698.94,709.398 1699.5,723.999 1700.05,737.745 1700.61,720.518 1701.17,685.509 1701.73,690.542 1702.29,705.184 1702.85,705.903 1703.41,704.727 1703.97,671.491 1704.53,657.702 1705.09,625.378 1705.65,578.412 1706.21,616.356 1706.77,622.511 1707.32,622.504 1707.88,608.416 1708.44,659.157 1709,658.857 1709.56,647.211 1710.12,646.632 1710.68,662.977 1711.24,651.815 1711.8,656.588 1712.36,656.839 1712.92,677.546 1713.48,675.73 1714.04,662.245 1714.6,679.743 1715.15,684.313 1715.71,683.841 1716.27,710.998 1716.83,708.102 1717.39,723.882 1717.95,736.865 1718.51,702.816 1719.07,732.896 1719.63,729.743 1720.19,726.422 1720.75,758.612 1721.31,705.032 1721.87,687.166 1722.42,685.971 1722.98,685.04 1723.54,668.082 1724.1,669.542 1724.66,671.091 1725.22,686.057 1725.78,691.101 1726.34,696.946 1726.9,729.46 1727.46,727.98 1728.02,692.643 1728.58,738.93 1729.14,752.215 1729.69,700.223 1730.25,697.113 1730.81,678.905 1731.37,694.273 1731.93,673.139 1732.49,658.669 1733.05,650.23 1733.61,633.956 1734.17,634.763 1734.73,637.743 1735.29,689.24 1735.85,687.823 1736.41,669.969 1736.97,653.666 1737.52,685.083 1738.08,682.731 1738.64,684.815 1739.2,700.992 1739.76,671.032 1740.32,685.237 1740.88,687.808 1741.44,685.394 1742,685.693 1742.56,666.597 1743.12,697.265 1743.68,666.885 1744.24,670.268 1744.79,639.767 1745.35,676.202 1745.91,693.07 1746.47,673.851 1747.03,658.151 1747.59,660.544 1748.15,693.283 1748.71,689.892 1749.27,707.338 1749.83,705.449 1750.39,640.819 1750.95,672.719 1751.51,661.484 1752.06,678.654 1752.62,682.317 1753.18,666.684 1753.74,700.161 1754.3,729.631 1754.86,729.726 1755.42,730.528 1755.98,664.851 1756.54,681.011 1757.1,683.705 1757.66,683.64 1758.22,701.782 1758.78,733.766 1759.34,731.755 1759.89,745.681 1760.45,740.919 1761.01,752.891 1761.57,750.152 1762.13,748.107 1762.69,761.683 1763.25,743.357 1763.81,740.376 1764.37,737.443 1764.93,749.886 1765.49,730.136 1766.05,726.391 1766.61,741.581 1767.16,738.556 1767.72,735.585 1768.28,715.811 1768.84,734.04 1769.4,732.668 1769.96,744.777 1770.52,725.914 1771.08,739.668 1771.64,736.376 1772.2,751.147 1772.76,760.799 1773.32,756.652 1773.88,734.143 1774.43,730.179 1774.99,726.447 1775.55,724.093 1776.11,685.221 1776.67,687.183 1777.23,667.723 1777.79,654.341 1778.35,668.207 1778.91,652.941 1779.47,655.082 1780.03,659.426 1780.59,643.924 1781.15,647.604 1781.71,651.08 1782.26,653.801 1782.82,622.845 1783.38,656.606 1783.94,656.967 1784.5,659.189 1785.06,676.773 1785.62,673.696 1786.18,658.644 1786.74,609.159 1787.3,597.735 1787.86,616.821 1788.42,618.237 1788.98,635.809 1789.53,637.777 1790.09,654.317 1790.65,641.926 1791.21,595.364 1791.77,585.646 1792.33,595.915 1792.89,552.295 1793.45,577.854 1794.01,582.43 1794.57,585.532 1795.13,573.482 1795.69,563.039 1796.25,589.649 1796.8,595.03 1797.36,598.207 1797.92,590.275 1798.48,612.22 1799.04,649.693 1799.6,669.834 1800.16,672.473 1800.72,702.009 1801.28,688.284 1801.84,668.55 1802.4,671.621 1802.96,669.476 1803.52,671.902 1804.08,702.67 1804.63,689.405 1805.19,673.715 1805.75,671.706 1806.31,657.257 1806.87,673.943 1807.43,675.789 1807.99,675.96 1808.55,661.455 1809.11,682.298 1809.67,682.285 1810.23,713.433 1810.79,696.948 1811.35,681.135 1811.9,665.209 1812.46,665.379 1813.02,649.204 1813.58,664.981 1814.14,669.496 1814.7,670.763 1815.26,671.221 1815.82,688.013 1816.38,703.257 1816.94,670.104 1817.5,669.599 1818.06,685.632 1818.62,685.274 1819.18,702.804 1819.73,698.358 1820.29,695.868 1820.85,724.629 1821.41,722.693 1821.97,749.229 1822.53,744.02 1823.09,756.637 1823.65,753.258 1824.21,783.321 1824.77,777.147 1825.33,755.005 1825.89,767.295 1826.45,762.896 1827,761.195 1827.56,738.741 1828.12,721.33 1828.68,752.316 1829.24,761.346 1829.8,755.358 1830.36,750.201 1830.92,732.566 1831.48,746.572 1832.04,725.899 1832.6,740.615 1833.16,708.146 1833.72,691.79 1834.27,611.082 1834.83,599.774 1835.39,622.501 1835.95,611.41 1836.51,599.73 1837.07,570.158 1837.63,561.829 1838.19,565.948 \"/>\n<path clip-path=\"url(#clip713)\" d=\"M720.247 690.679 L720.806 690.679 L721.365 690.679 L721.924 690.679 L722.484 690.679 L723.043 690.679 L723.602 690.679 L724.161 690.679 L724.721 690.679 L725.28 690.679 L725.839 690.679 L726.398 690.679 L726.958 690.679 L727.517 690.679 L728.076 690.679 L728.635 690.679 L729.195 690.679 L729.754 690.679 L730.313 690.679 L730.872 690.679 L731.432 690.679 L731.991 690.679 L732.55 690.679 L733.109 690.679 L733.669 690.679 L734.228 690.679 L734.787 690.679 L735.346 690.679 L735.906 690.679 L736.465 690.679 L737.024 690.679 L737.583 690.679 L738.143 690.679 L738.702 690.679 L739.261 690.679 L739.82 690.679 L740.38 690.679 L740.939 690.679 L741.498 690.679 L742.057 690.679 L742.617 690.679 L743.176 690.679 L743.735 690.679 L744.294 690.679 L744.854 690.679 L745.413 690.679 L745.972 690.679 L746.531 690.679 L747.091 690.679 L747.65 690.679 L748.209 690.679 L748.768 690.679 L749.328 690.679 L749.887 690.679 L750.446 690.679 L751.005 690.679 L751.565 690.679 L752.124 690.679 L752.683 690.679 L753.242 690.679 L753.802 690.679 L754.361 690.679 L754.92 690.679 L755.479 690.679 L756.039 690.679 L756.598 690.679 L757.157 690.679 L757.716 690.679 L758.276 690.679 L758.835 690.679 L759.394 690.679 L759.953 690.679 L760.513 690.679 L761.072 690.679 L761.631 690.679 L762.19 690.679 L762.75 690.679 L763.309 690.679 L763.868 690.679 L764.427 690.679 L764.987 690.679 L765.546 690.679 L766.105 690.679 L766.664 690.679 L767.224 690.679 L767.783 690.679 L768.342 690.679 L768.901 690.679 L769.461 690.679 L770.02 690.679 L770.579 690.679 L771.138 690.679 L771.698 690.679 L772.257 690.679 L772.816 690.679 L773.375 690.679 L773.935 690.679 L774.494 690.679 L775.053 690.679 L775.612 690.679 L776.172 690.679 L776.731 690.679 L777.29 690.679 L777.849 690.679 L778.409 690.679 L778.968 690.679 L779.527 690.679 L780.086 690.679 L780.646 690.679 L781.205 690.679 L781.764 690.679 L782.323 690.679 L782.883 690.679 L783.442 690.679 L784.001 690.679 L784.56 690.679 L785.12 690.679 L785.679 690.679 L786.238 690.679 L786.797 690.679 L787.357 690.679 L787.916 690.679 L788.475 690.679 L789.034 690.679 L789.594 690.679 L790.153 690.679 L790.712 690.679 L791.271 690.679 L791.831 690.679 L792.39 690.679 L792.949 690.679 L793.508 690.679 L794.068 690.679 L794.627 690.679 L795.186 690.679 L795.745 690.679 L796.305 690.679 L796.864 690.679 L797.423 690.679 L797.982 690.679 L798.542 690.679 L799.101 690.679 L799.66 690.679 L800.219 690.679 L800.779 690.679 L801.338 690.679 L801.897 690.679 L802.456 690.679 L803.016 690.679 L803.575 690.679 L804.134 690.679 L804.693 690.679 L805.253 690.679 L805.812 690.679 L806.371 690.679 L806.931 690.679 L807.49 690.679 L808.049 690.679 L808.608 690.679 L809.168 690.679 L809.727 690.679 L810.286 690.679 L810.845 690.679 L811.405 690.679 L811.964 690.679 L812.523 690.679 L813.082 690.679 L813.642 690.679 L814.201 690.679 L814.76 690.679 L815.319 690.679 L815.879 690.679 L816.438 690.679 L816.997 690.679 L817.556 690.679 L818.116 690.679 L818.675 690.679 L819.234 690.679 L819.793 690.679 L820.353 690.679 L820.912 690.679 L821.471 690.679 L822.03 690.679 L822.59 690.679 L823.149 690.679 L823.708 690.679 L824.267 690.679 L824.827 690.679 L825.386 690.679 L825.945 690.679 L826.504 690.679 L827.064 690.679 L827.623 690.679 L828.182 690.679 L828.741 690.679 L829.301 690.679 L829.86 690.679 L830.419 690.679 L830.978 690.679 L831.538 690.679 L832.097 690.679 L832.656 690.679 L833.215 690.679 L833.775 690.679 L834.334 690.679 L834.893 690.679 L835.452 690.679 L836.012 690.679 L836.571 690.679 L837.13 690.679 L837.689 690.679 L838.249 690.679 L838.808 690.679 L839.367 690.679 L839.926 690.679 L840.486 690.679 L841.045 690.679 L841.604 690.679 L842.163 690.679 L842.723 690.679 L843.282 690.679 L843.841 690.679 L844.4 690.679 L844.96 690.679 L845.519 690.679 L846.078 690.679 L846.637 690.679 L847.197 690.679 L847.756 690.679 L848.315 690.679 L848.874 690.679 L849.434 690.679 L849.993 690.679 L850.552 690.679 L851.111 690.679 L851.671 690.679 L852.23 690.679 L852.789 690.679 L853.348 690.679 L853.908 690.679 L854.467 690.679 L855.026 690.679 L855.585 690.679 L856.145 690.679 L856.704 690.679 L857.263 690.679 L857.822 690.679 L858.382 690.679 L858.941 690.679 L859.5 690.679 L860.059 690.679 L860.619 690.679 L861.178 690.679 L861.737 690.679 L862.296 690.679 L862.856 690.679 L863.415 690.679 L863.974 690.679 L864.533 690.679 L865.093 690.679 L865.652 690.679 L866.211 690.679 L866.77 690.679 L867.33 690.679 L867.889 690.679 L868.448 690.679 L869.007 690.679 L869.567 690.679 L870.126 690.679 L870.685 690.679 L871.244 690.679 L871.804 690.679 L872.363 690.679 L872.922 690.679 L873.481 690.679 L874.041 690.679 L874.6 690.679 L875.159 690.679 L875.718 690.679 L876.278 690.679 L876.837 690.679 L877.396 690.679 L877.955 690.679 L878.515 690.679 L879.074 690.679 L879.633 690.679 L880.192 690.679 L880.752 690.679 L881.311 690.679 L881.87 690.679 L882.429 690.679 L882.989 690.679 L883.548 690.679 L884.107 690.679 L884.666 690.679 L885.226 690.679 L885.785 690.679 L886.344 690.679 L886.903 690.679 L887.463 690.679 L888.022 690.679 L888.581 690.679 L889.14 690.679 L889.7 690.679 L890.259 690.679 L890.818 690.679 L891.377 690.679 L891.937 690.679 L892.496 690.679 L893.055 690.679 L893.614 690.679 L894.174 690.679 L894.733 690.679 L895.292 690.679 L895.851 690.679 L896.411 690.679 L896.97 690.679 L897.529 690.679 L898.088 690.679 L898.648 690.679 L899.207 690.679 L899.766 690.679 L900.325 690.679 L900.885 690.679 L901.444 690.679 L902.003 690.679 L902.562 690.679 L903.122 690.679 L903.681 690.679 L904.24 690.679 L904.799 690.679 L905.359 690.679 L905.918 690.679 L906.477 690.679 L907.036 690.679 L907.596 690.679 L908.155 690.679 L908.714 690.679 L909.273 690.679 L909.833 690.679 L910.392 690.679 L910.951 690.679 L911.51 690.679 L912.07 690.679 L912.629 690.679 L913.188 690.679 L913.747 690.679 L914.307 690.679 L914.866 690.679 L915.425 690.679 L915.984 690.679 L916.544 690.679 L917.103 690.679 L917.662 690.679 L918.221 690.679 L918.781 690.679 L919.34 690.679 L919.899 690.679 L920.458 690.679 L921.018 690.679 L921.577 690.679 L922.136 690.679 L922.695 690.679 L923.255 690.679 L923.814 690.679 L924.373 690.679 L924.932 690.679 L925.492 690.679 L926.051 690.679 L926.61 690.679 L927.169 690.679 L927.729 690.679 L928.288 690.679 L928.847 690.679 L929.406 690.679 L929.966 690.679 L930.525 690.679 L931.084 690.679 L931.644 690.679 L932.203 690.679 L932.762 690.679 L933.321 690.679 L933.881 690.679 L934.44 690.679 L934.999 690.679 L935.558 690.679 L936.118 690.679 L936.677 690.679 L937.236 690.679 L937.795 690.679 L938.355 690.679 L938.914 690.679 L939.473 690.679 L940.032 690.679 L940.592 690.679 L941.151 690.679 L941.71 690.679 L942.269 690.679 L942.829 690.679 L943.388 690.679 L943.947 690.679 L944.506 690.679 L945.066 690.679 L945.625 690.679 L946.184 690.679 L946.743 690.679 L947.303 690.679 L947.862 690.679 L948.421 690.679 L948.98 690.679 L949.54 690.679 L950.099 690.679 L950.658 690.679 L951.217 690.679 L951.777 690.679 L952.336 690.679 L952.895 690.679 L953.454 690.679 L954.014 690.679 L954.573 690.679 L955.132 690.679 L955.691 690.679 L956.251 690.679 L956.81 690.679 L957.369 690.679 L957.928 690.679 L958.488 690.679 L959.047 690.679 L959.606 690.679 L960.165 690.679 L960.725 690.679 L961.284 690.679 L961.843 690.679 L962.402 690.679 L962.962 690.679 L963.521 690.679 L964.08 690.679 L964.639 690.679 L965.199 690.679 L965.758 690.679 L966.317 690.679 L966.876 690.679 L967.436 690.679 L967.995 690.679 L968.554 690.679 L969.113 690.679 L969.673 690.679 L970.232 690.679 L970.791 690.679 L971.35 690.679 L971.91 690.679 L972.469 690.679 L973.028 690.679 L973.587 690.679 L974.147 690.679 L974.706 690.679 L975.265 690.679 L975.824 690.679 L976.384 690.679 L976.943 690.679 L977.502 690.679 L978.061 690.679 L978.621 690.679 L979.18 690.679 L979.739 690.679 L980.298 690.679 L980.858 690.679 L981.417 690.679 L981.976 690.679 L982.535 690.679 L983.095 690.679 L983.654 690.679 L984.213 690.679 L984.772 690.679 L985.332 690.679 L985.891 690.679 L986.45 690.679 L987.009 690.679 L987.569 690.679 L988.128 690.679 L988.687 690.679 L989.246 690.679 L989.806 690.679 L990.365 690.679 L990.924 690.679 L991.483 690.679 L992.043 690.679 L992.602 690.679 L993.161 690.679 L993.72 690.679 L994.28 690.679 L994.839 690.679 L995.398 690.679 L995.957 690.679 L996.517 690.679 L997.076 690.679 L997.635 690.679 L998.194 690.679 L998.754 690.679 L999.313 690.679 L999.872 690.679 L1000.43 690.679 L1000.99 690.679 L1001.55 690.679 L1002.11 690.679 L1002.67 690.679 L1003.23 690.679 L1003.79 690.679 L1004.35 690.679 L1004.91 690.679 L1005.46 690.679 L1006.02 690.679 L1006.58 690.679 L1007.14 690.679 L1007.7 690.679 L1008.26 690.679 L1008.82 690.679 L1009.38 690.679 L1009.94 690.679 L1010.5 690.679 L1011.06 690.679 L1011.62 690.679 L1012.18 690.679 L1012.73 690.679 L1013.29 690.679 L1013.85 690.679 L1014.41 690.679 L1014.97 690.679 L1015.53 690.679 L1016.09 690.679 L1016.65 690.679 L1017.21 690.679 L1017.77 690.679 L1018.33 690.679 L1018.89 690.679 L1019.45 690.679 L1020.01 690.679 L1020.56 690.679 L1021.12 690.679 L1021.68 690.679 L1022.24 690.679 L1022.8 690.679 L1023.36 690.679 L1023.92 690.679 L1024.48 690.679 L1025.04 690.679 L1025.6 690.679 L1026.16 690.679 L1026.72 690.679 L1027.28 690.679 L1027.83 690.679 L1028.39 690.679 L1028.95 690.679 L1029.51 690.679 L1030.07 690.679 L1030.63 690.679 L1031.19 690.679 L1031.75 690.679 L1032.31 690.679 L1032.87 690.679 L1033.43 690.679 L1033.99 690.679 L1034.55 690.679 L1035.1 690.679 L1035.66 690.679 L1036.22 690.679 L1036.78 690.679 L1037.34 690.679 L1037.9 690.679 L1038.46 690.679 L1039.02 690.679 L1039.58 690.679 L1040.14 690.679 L1040.7 690.679 L1041.26 690.679 L1041.82 690.679 L1042.38 690.679 L1042.93 690.679 L1043.49 690.679 L1044.05 690.679 L1044.61 690.679 L1045.17 690.679 L1045.73 690.679 L1046.29 690.679 L1046.85 690.679 L1047.41 690.679 L1047.97 690.679 L1048.53 690.679 L1049.09 690.679 L1049.65 690.679 L1050.2 690.679 L1050.76 690.679 L1051.32 690.679 L1051.88 690.679 L1052.44 690.679 L1053 690.679 L1053.56 690.679 L1054.12 690.679 L1054.68 690.679 L1055.24 690.679 L1055.8 690.679 L1056.36 690.679 L1056.92 690.679 L1057.48 690.679 L1058.03 690.679 L1058.59 690.679 L1059.15 690.679 L1059.71 690.679 L1060.27 690.679 L1060.83 690.679 L1061.39 690.679 L1061.95 690.679 L1062.51 690.679 L1063.07 690.679 L1063.63 690.679 L1064.19 690.679 L1064.75 690.679 L1065.3 690.679 L1065.86 690.679 L1066.42 690.679 L1066.98 690.679 L1067.54 690.679 L1068.1 690.679 L1068.66 690.679 L1069.22 690.679 L1069.78 690.679 L1070.34 690.679 L1070.9 690.679 L1071.46 690.679 L1072.02 690.679 L1072.57 690.679 L1073.13 690.679 L1073.69 690.679 L1074.25 690.679 L1074.81 690.679 L1075.37 690.679 L1075.93 690.679 L1076.49 690.679 L1077.05 690.679 L1077.61 690.679 L1078.17 690.679 L1078.73 690.679 L1079.29 690.679 L1079.85 690.679 L1080.4 690.679 L1080.96 690.679 L1081.52 690.679 L1082.08 690.679 L1082.64 690.679 L1083.2 690.679 L1083.76 690.679 L1084.32 690.679 L1084.88 690.679 L1085.44 690.679 L1086 690.679 L1086.56 690.679 L1087.12 690.679 L1087.67 690.679 L1088.23 690.679 L1088.79 690.679 L1089.35 690.679 L1089.91 690.679 L1090.47 690.679 L1091.03 690.679 L1091.59 690.679 L1092.15 690.679 L1092.71 690.679 L1093.27 690.679 L1093.83 690.679 L1094.39 690.679 L1094.94 690.679 L1095.5 690.679 L1096.06 690.679 L1096.62 690.679 L1097.18 690.679 L1097.74 690.679 L1098.3 690.679 L1098.86 690.679 L1099.42 690.679 L1099.98 690.679 L1100.54 690.679 L1101.1 690.679 L1101.66 690.679 L1102.22 690.679 L1102.77 690.679 L1103.33 690.679 L1103.89 690.679 L1104.45 690.679 L1105.01 690.679 L1105.57 690.679 L1106.13 690.679 L1106.69 690.679 L1107.25 690.679 L1107.81 690.679 L1108.37 690.679 L1108.93 690.679 L1109.49 690.679 L1110.04 690.679 L1110.6 690.679 L1111.16 690.679 L1111.72 690.679 L1112.28 690.679 L1112.84 690.679 L1113.4 690.679 L1113.96 690.679 L1114.52 690.679 L1115.08 690.679 L1115.64 690.679 L1116.2 690.679 L1116.76 690.679 L1117.31 690.679 L1117.87 690.679 L1118.43 690.679 L1118.99 690.679 L1119.55 690.679 L1120.11 690.679 L1120.67 690.679 L1121.23 690.679 L1121.79 690.679 L1122.35 690.679 L1122.91 690.679 L1123.47 690.679 L1124.03 690.679 L1124.59 690.679 L1125.14 690.679 L1125.7 690.679 L1126.26 690.679 L1126.82 690.679 L1127.38 690.679 L1127.94 690.679 L1128.5 690.679 L1129.06 690.679 L1129.62 690.679 L1130.18 690.679 L1130.74 690.679 L1131.3 690.679 L1131.86 690.679 L1132.41 690.679 L1132.97 690.679 L1133.53 690.679 L1134.09 690.679 L1134.65 690.679 L1135.21 690.679 L1135.77 690.679 L1136.33 690.679 L1136.89 690.679 L1137.45 690.679 L1138.01 690.679 L1138.57 690.679 L1139.13 690.679 L1139.68 690.679 L1140.24 690.679 L1140.8 690.679 L1141.36 690.679 L1141.92 690.679 L1142.48 690.679 L1143.04 690.679 L1143.6 690.679 L1144.16 690.679 L1144.72 690.679 L1145.28 690.679 L1145.84 690.679 L1146.4 690.679 L1146.96 690.679 L1147.51 690.679 L1148.07 690.679 L1148.63 690.679 L1149.19 690.679 L1149.75 690.679 L1150.31 690.679 L1150.87 690.679 L1151.43 690.679 L1151.99 690.679 L1152.55 690.679 L1153.11 690.679 L1153.67 690.679 L1154.23 690.679 L1154.78 690.679 L1155.34 690.679 L1155.9 690.679 L1156.46 690.679 L1157.02 690.679 L1157.58 690.679 L1158.14 690.679 L1158.7 690.679 L1159.26 690.679 L1159.82 690.679 L1160.38 690.679 L1160.94 690.679 L1161.5 690.679 L1162.05 690.679 L1162.61 690.679 L1163.17 690.679 L1163.73 690.679 L1164.29 690.679 L1164.85 690.679 L1165.41 690.679 L1165.97 690.679 L1166.53 690.679 L1167.09 690.679 L1167.65 690.679 L1168.21 690.679 L1168.77 690.679 L1169.33 690.679 L1169.88 690.679 L1170.44 690.679 L1171 690.679 L1171.56 690.679 L1172.12 690.679 L1172.68 690.679 L1173.24 690.679 L1173.8 690.679 L1174.36 690.679 L1174.92 690.679 L1175.48 690.679 L1176.04 690.679 L1176.6 690.679 L1177.15 690.679 L1177.71 690.679 L1178.27 690.679 L1178.83 690.679 L1179.39 690.679 L1179.95 690.679 L1180.51 690.679 L1181.07 690.679 L1181.63 690.679 L1182.19 690.679 L1182.75 690.679 L1183.31 690.679 L1183.87 690.679 L1184.43 690.679 L1184.98 690.679 L1185.54 690.679 L1186.1 690.679 L1186.66 690.679 L1187.22 690.679 L1187.78 690.679 L1188.34 690.679 L1188.9 690.679 L1189.46 690.679 L1190.02 690.679 L1190.58 690.679 L1191.14 690.679 L1191.7 690.679 L1192.25 690.679 L1192.81 690.679 L1193.37 690.679 L1193.93 690.679 L1194.49 690.679 L1195.05 690.679 L1195.61 690.679 L1196.17 690.679 L1196.73 690.679 L1197.29 690.679 L1197.85 690.679 L1198.41 690.679 L1198.97 690.679 L1199.52 690.679 L1200.08 690.679 L1200.64 690.679 L1201.2 690.679 L1201.76 690.679 L1202.32 690.679 L1202.88 690.679 L1203.44 690.679 L1204 690.679 L1204.56 690.679 L1205.12 690.679 L1205.68 690.679 L1206.24 690.679 L1206.8 690.679 L1207.35 690.679 L1207.91 690.679 L1208.47 690.679 L1209.03 690.679 L1209.59 690.679 L1210.15 690.679 L1210.71 690.679 L1211.27 690.679 L1211.83 690.679 L1212.39 690.679 L1212.95 690.679 L1213.51 690.679 L1214.07 690.679 L1214.62 690.679 L1215.18 690.679 L1215.74 690.679 L1216.3 690.679 L1216.86 690.679 L1217.42 690.679 L1217.98 690.679 L1218.54 690.679 L1219.1 690.679 L1219.66 690.679 L1220.22 690.679 L1220.78 690.679 L1221.34 690.679 L1221.89 690.679 L1222.45 690.679 L1223.01 690.679 L1223.57 690.679 L1224.13 690.679 L1224.69 690.679 L1225.25 690.679 L1225.81 690.679 L1226.37 690.679 L1226.93 690.679 L1227.49 690.679 L1228.05 690.679 L1228.61 690.679 L1229.17 690.679 L1229.72 690.679 L1230.28 690.679 L1230.84 690.679 L1231.4 690.679 L1231.96 690.679 L1232.52 690.679 L1233.08 690.679 L1233.64 690.679 L1234.2 690.679 L1234.76 690.679 L1235.32 690.679 L1235.88 690.679 L1236.44 690.679 L1236.99 690.679 L1237.55 690.679 L1238.11 690.679 L1238.67 690.679 L1239.23 690.679 L1239.79 690.679 L1240.35 690.679 L1240.91 690.679 L1241.47 690.679 L1242.03 690.679 L1242.59 690.679 L1243.15 690.679 L1243.71 690.679 L1244.26 690.679 L1244.82 690.679 L1245.38 690.679 L1245.94 690.679 L1246.5 690.679 L1247.06 690.679 L1247.62 690.679 L1248.18 690.679 L1248.74 690.679 L1249.3 690.679 L1249.86 690.679 L1250.42 690.679 L1250.98 690.679 L1251.54 690.679 L1252.09 690.679 L1252.65 690.679 L1253.21 690.679 L1253.77 690.679 L1254.33 690.679 L1254.89 690.679 L1255.45 690.679 L1256.01 690.679 L1256.57 690.679 L1257.13 690.679 L1257.69 690.679 L1258.25 690.679 L1258.81 690.679 L1259.36 690.679 L1259.92 690.679 L1260.48 690.679 L1261.04 690.679 L1261.6 690.679 L1262.16 690.679 L1262.72 690.679 L1263.28 690.679 L1263.84 690.679 L1264.4 690.679 L1264.96 690.679 L1265.52 690.679 L1266.08 690.679 L1266.63 690.679 L1267.19 690.679 L1267.75 690.679 L1268.31 690.679 L1268.87 690.679 L1269.43 690.679 L1269.99 690.679 L1270.55 690.679 L1271.11 690.679 L1271.67 690.679 L1272.23 690.679 L1272.79 690.679 L1273.35 690.679 L1273.91 690.679 L1274.46 690.679 L1275.02 690.679 L1275.58 690.679 L1276.14 690.679 L1276.7 690.679 L1277.26 690.679 L1277.82 690.679 L1278.38 690.679 L1278.94 690.679 L1279.5 690.679 L1280.06 690.679 L1280.62 690.679 L1281.18 690.679 L1281.73 690.679 L1282.29 690.679 L1282.85 690.679 L1283.41 690.679 L1283.97 690.679 L1284.53 690.679 L1285.09 690.679 L1285.65 690.679 L1286.21 690.679 L1286.77 690.679 L1287.33 690.679 L1287.89 690.679 L1288.45 690.679 L1289 690.679 L1289.56 690.679 L1290.12 690.679 L1290.68 690.679 L1291.24 690.679 L1291.8 690.679 L1292.36 690.679 L1292.92 690.679 L1293.48 690.679 L1294.04 690.679 L1294.6 690.679 L1295.16 690.679 L1295.72 690.679 L1296.28 690.679 L1296.83 690.679 L1297.39 690.679 L1297.95 690.679 L1298.51 690.679 L1299.07 690.679 L1299.63 690.679 L1300.19 690.679 L1300.75 690.679 L1301.31 690.679 L1301.87 690.679 L1302.43 690.679 L1302.99 690.679 L1303.55 690.679 L1304.1 690.679 L1304.66 690.679 L1305.22 690.679 L1305.78 690.679 L1306.34 690.679 L1306.9 690.679 L1307.46 690.679 L1308.02 690.679 L1308.58 690.679 L1309.14 690.679 L1309.7 690.679 L1310.26 690.679 L1310.82 690.679 L1311.38 690.679 L1311.93 690.679 L1312.49 690.679 L1313.05 690.679 L1313.61 690.679 L1314.17 690.679 L1314.73 690.679 L1315.29 690.679 L1315.85 690.679 L1316.41 690.679 L1316.97 690.679 L1317.53 690.679 L1318.09 690.679 L1318.65 690.679 L1319.2 690.679 L1319.76 690.679 L1320.32 690.679 L1320.88 690.679 L1321.44 690.679 L1322 690.679 L1322.56 690.679 L1323.12 690.679 L1323.68 690.679 L1324.24 690.679 L1324.8 690.679 L1325.36 690.679 L1325.92 690.679 L1326.47 690.679 L1327.03 690.679 L1327.59 690.679 L1328.15 690.679 L1328.71 690.679 L1329.27 690.679 L1329.83 690.679 L1330.39 690.679 L1330.95 690.679 L1331.51 690.679 L1332.07 690.679 L1332.63 690.679 L1333.19 690.679 L1333.75 690.679 L1334.3 690.679 L1334.86 690.679 L1335.42 690.679 L1335.98 690.679 L1336.54 690.679 L1337.1 690.679 L1337.66 690.679 L1338.22 690.679 L1338.78 690.679 L1339.34 690.679 L1339.9 690.679 L1340.46 690.679 L1341.02 690.679 L1341.57 690.679 L1342.13 690.679 L1342.69 690.679 L1343.25 690.679 L1343.81 690.679 L1344.37 690.679 L1344.93 690.679 L1345.49 690.679 L1346.05 690.679 L1346.61 690.679 L1347.17 690.679 L1347.73 690.679 L1348.29 690.679 L1348.84 690.679 L1349.4 690.679 L1349.96 690.679 L1350.52 690.679 L1351.08 690.679 L1351.64 690.679 L1352.2 690.679 L1352.76 690.679 L1353.32 690.679 L1353.88 690.679 L1354.44 690.679 L1355 690.679 L1355.56 690.679 L1356.12 690.679 L1356.67 690.679 L1357.23 690.679 L1357.79 690.679 L1358.35 690.679 L1358.91 690.679 L1359.47 690.679 L1360.03 690.679 L1360.59 690.679 L1361.15 690.679 L1361.71 690.679 L1362.27 690.679 L1362.83 690.679 L1363.39 690.679 L1363.94 690.679 L1364.5 690.679 L1365.06 690.679 L1365.62 690.679 L1366.18 690.679 L1366.74 690.679 L1367.3 690.679 L1367.86 690.679 L1368.42 690.679 L1368.98 690.679 L1369.54 690.679 L1370.1 690.679 L1370.66 690.679 L1371.21 690.679 L1371.77 690.679 L1372.33 690.679 L1372.89 690.679 L1373.45 690.679 L1374.01 690.679 L1374.57 690.679 L1375.13 690.679 L1375.69 690.679 L1376.25 690.679 L1376.81 690.679 L1377.37 690.679 L1377.93 690.679 L1378.49 690.679 L1379.04 690.679 L1379.6 690.679 L1380.16 690.679 L1380.72 690.679 L1381.28 690.679 L1381.84 690.679 L1382.4 690.679 L1382.96 690.679 L1383.52 690.679 L1384.08 690.679 L1384.64 690.679 L1385.2 690.679 L1385.76 690.679 L1386.31 690.679 L1386.87 690.679 L1387.43 690.679 L1387.99 690.679 L1388.55 690.679 L1389.11 690.679 L1389.67 690.679 L1390.23 690.679 L1390.79 690.679 L1391.35 690.679 L1391.91 690.679 L1392.47 690.679 L1393.03 690.679 L1393.58 690.679 L1394.14 690.679 L1394.7 690.679 L1395.26 690.679 L1395.82 690.679 L1396.38 690.679 L1396.94 690.679 L1397.5 690.679 L1398.06 690.679 L1398.62 690.679 L1399.18 690.679 L1399.74 690.679 L1400.3 690.679 L1400.86 690.679 L1401.41 690.679 L1401.97 690.679 L1402.53 690.679 L1403.09 690.679 L1403.65 690.679 L1404.21 690.679 L1404.77 690.679 L1405.33 690.679 L1405.89 690.679 L1406.45 690.679 L1407.01 690.679 L1407.57 690.679 L1408.13 690.679 L1408.68 690.679 L1409.24 690.679 L1409.8 690.679 L1410.36 690.679 L1410.92 690.679 L1411.48 690.679 L1412.04 690.679 L1412.6 690.679 L1413.16 690.679 L1413.72 690.679 L1414.28 690.679 L1414.84 690.679 L1415.4 690.679 L1415.95 690.679 L1416.51 690.679 L1417.07 690.679 L1417.63 690.679 L1418.19 690.679 L1418.75 690.679 L1419.31 690.679 L1419.87 690.679 L1420.43 690.679 L1420.99 690.679 L1421.55 690.679 L1422.11 690.679 L1422.67 690.679 L1423.23 690.679 L1423.78 690.679 L1424.34 690.679 L1424.9 690.679 L1425.46 690.679 L1426.02 690.679 L1426.58 690.679 L1427.14 690.679 L1427.7 690.679 L1428.26 690.679 L1428.82 690.679 L1429.38 690.679 L1429.94 690.679 L1430.5 690.679 L1431.05 690.679 L1431.61 690.679 L1432.17 690.679 L1432.73 690.679 L1433.29 690.679 L1433.85 690.679 L1434.41 690.679 L1434.97 690.679 L1435.53 690.679 L1436.09 690.679 L1436.65 690.679 L1437.21 690.679 L1437.77 690.679 L1438.33 690.679 L1438.88 690.679 L1439.44 690.679 L1440 690.679 L1440.56 690.679 L1441.12 690.679 L1441.68 690.679 L1442.24 690.679 L1442.8 690.679 L1443.36 690.679 L1443.92 690.679 L1444.48 690.679 L1445.04 690.679 L1445.6 690.679 L1446.15 690.679 L1446.71 690.679 L1447.27 690.679 L1447.83 690.679 L1448.39 690.679 L1448.95 690.679 L1449.51 690.679 L1450.07 690.679 L1450.63 690.679 L1451.19 690.679 L1451.75 690.679 L1452.31 690.679 L1452.87 690.679 L1453.42 690.679 L1453.98 690.679 L1454.54 690.679 L1455.1 690.679 L1455.66 690.679 L1456.22 690.679 L1456.78 690.679 L1457.34 690.679 L1457.9 690.679 L1458.46 690.679 L1459.02 690.679 L1459.58 690.679 L1460.14 690.679 L1460.7 690.679 L1461.25 690.679 L1461.81 690.679 L1462.37 690.679 L1462.93 690.679 L1463.49 690.679 L1464.05 690.679 L1464.61 690.679 L1465.17 690.679 L1465.73 690.679 L1466.29 690.679 L1466.85 690.679 L1467.41 690.679 L1467.97 690.679 L1468.52 690.679 L1469.08 690.679 L1469.64 690.679 L1470.2 690.679 L1470.76 690.679 L1471.32 690.679 L1471.88 690.679 L1472.44 690.679 L1473 690.679 L1473.56 690.679 L1474.12 690.679 L1474.68 690.679 L1475.24 690.679 L1475.79 690.679 L1476.35 690.679 L1476.91 690.679 L1477.47 690.679 L1478.03 690.679 L1478.59 690.679 L1479.15 690.679 L1479.71 690.679 L1480.27 690.679 L1480.83 690.679 L1481.39 690.679 L1481.95 690.679 L1482.51 690.679 L1483.07 690.679 L1483.62 690.679 L1484.18 690.679 L1484.74 690.679 L1485.3 690.679 L1485.86 690.679 L1486.42 690.679 L1486.98 690.679 L1487.54 690.679 L1488.1 690.679 L1488.66 690.679 L1489.22 690.679 L1489.78 690.679 L1490.34 690.679 L1490.89 690.679 L1491.45 690.679 L1492.01 690.679 L1492.57 690.679 L1493.13 690.679 L1493.69 690.679 L1494.25 690.679 L1494.81 690.679 L1495.37 690.679 L1495.93 690.679 L1496.49 690.679 L1497.05 690.679 L1497.61 690.679 L1498.16 690.679 L1498.72 690.679 L1499.28 690.679 L1499.84 690.679 L1500.4 690.679 L1500.96 690.679 L1501.52 690.679 L1502.08 690.679 L1502.64 690.679 L1503.2 690.679 L1503.76 690.679 L1504.32 690.679 L1504.88 690.679 L1505.44 690.679 L1505.99 690.679 L1506.55 690.679 L1507.11 690.679 L1507.67 690.679 L1508.23 690.679 L1508.79 690.679 L1509.35 690.679 L1509.91 690.679 L1510.47 690.679 L1511.03 690.679 L1511.59 690.679 L1512.15 690.679 L1512.71 690.679 L1513.26 690.679 L1513.82 690.679 L1514.38 690.679 L1514.94 690.679 L1515.5 690.679 L1516.06 690.679 L1516.62 690.679 L1517.18 690.679 L1517.74 690.679 L1518.3 690.679 L1518.86 690.679 L1519.42 690.679 L1519.98 690.679 L1520.53 690.679 L1521.09 690.679 L1521.65 690.679 L1522.21 690.679 L1522.77 690.679 L1523.33 690.679 L1523.89 690.679 L1524.45 690.679 L1525.01 690.679 L1525.57 690.679 L1526.13 690.679 L1526.69 690.679 L1527.25 690.679 L1527.81 690.679 L1528.36 690.679 L1528.92 690.679 L1529.48 690.679 L1530.04 690.679 L1530.6 690.679 L1531.16 690.679 L1531.72 690.679 L1532.28 690.679 L1532.84 690.679 L1533.4 690.679 L1533.96 690.679 L1534.52 690.679 L1535.08 690.679 L1535.63 690.679 L1536.19 690.679 L1536.75 690.679 L1537.31 690.679 L1537.87 690.679 L1538.43 690.679 L1538.99 690.679 L1539.55 690.679 L1540.11 690.679 L1540.67 690.679 L1541.23 690.679 L1541.79 690.679 L1542.35 690.679 L1542.9 690.679 L1543.46 690.679 L1544.02 690.679 L1544.58 690.679 L1545.14 690.679 L1545.7 690.679 L1546.26 690.679 L1546.82 690.679 L1547.38 690.679 L1547.94 690.679 L1548.5 690.679 L1549.06 690.679 L1549.62 690.679 L1550.18 690.679 L1550.73 690.679 L1551.29 690.679 L1551.85 690.679 L1552.41 690.679 L1552.97 690.679 L1553.53 690.679 L1554.09 690.679 L1554.65 690.679 L1555.21 690.679 L1555.77 690.679 L1556.33 690.679 L1556.89 690.679 L1557.45 690.679 L1558 690.679 L1558.56 690.679 L1559.12 690.679 L1559.68 690.679 L1560.24 690.679 L1560.8 690.679 L1561.36 690.679 L1561.92 690.679 L1562.48 690.679 L1563.04 690.679 L1563.6 690.679 L1564.16 690.679 L1564.72 690.679 L1565.28 690.679 L1565.83 690.679 L1566.39 690.679 L1566.95 690.679 L1567.51 690.679 L1568.07 690.679 L1568.63 690.679 L1569.19 690.679 L1569.75 690.679 L1570.31 690.679 L1570.87 690.679 L1571.43 690.679 L1571.99 690.679 L1572.55 690.679 L1573.1 690.679 L1573.66 690.679 L1574.22 690.679 L1574.78 690.679 L1575.34 690.679 L1575.9 690.679 L1576.46 690.679 L1577.02 690.679 L1577.58 690.679 L1578.14 690.679 L1578.7 690.679 L1579.26 690.679 L1579.82 690.679 L1580.37 690.679 L1580.93 690.679 L1581.49 690.679 L1582.05 690.679 L1582.61 690.679 L1583.17 690.679 L1583.73 690.679 L1584.29 690.679 L1584.85 690.679 L1585.41 690.679 L1585.97 690.679 L1586.53 690.679 L1587.09 690.679 L1587.65 690.679 L1588.2 690.679 L1588.76 690.679 L1589.32 690.679 L1589.88 690.679 L1590.44 690.679 L1591 690.679 L1591.56 690.679 L1592.12 690.679 L1592.68 690.679 L1593.24 690.679 L1593.8 690.679 L1594.36 690.679 L1594.92 690.679 L1595.47 690.679 L1596.03 690.679 L1596.59 690.679 L1597.15 690.679 L1597.71 690.679 L1598.27 690.679 L1598.83 690.679 L1599.39 690.679 L1599.95 690.679 L1600.51 690.679 L1601.07 690.679 L1601.63 690.679 L1602.19 690.679 L1602.74 690.679 L1603.3 690.679 L1603.86 690.679 L1604.42 690.679 L1604.98 690.679 L1605.54 690.679 L1606.1 690.679 L1606.66 690.679 L1607.22 690.679 L1607.78 690.679 L1608.34 690.679 L1608.9 690.679 L1609.46 690.679 L1610.02 690.679 L1610.57 690.679 L1611.13 690.679 L1611.69 690.679 L1612.25 690.679 L1612.81 690.679 L1613.37 690.679 L1613.93 690.679 L1614.49 690.679 L1615.05 690.679 L1615.61 690.679 L1616.17 690.679 L1616.73 690.679 L1617.29 690.679 L1617.84 690.679 L1618.4 690.679 L1618.96 690.679 L1619.52 690.679 L1620.08 690.679 L1620.64 690.679 L1621.2 690.679 L1621.76 690.679 L1622.32 690.679 L1622.88 690.679 L1623.44 690.679 L1624 690.679 L1624.56 690.679 L1625.11 690.679 L1625.67 690.679 L1626.23 690.679 L1626.79 690.679 L1627.35 690.679 L1627.91 690.679 L1628.47 690.679 L1629.03 690.679 L1629.59 690.679 L1630.15 690.679 L1630.71 690.679 L1631.27 690.679 L1631.83 690.679 L1632.39 690.679 L1632.94 690.679 L1633.5 690.679 L1634.06 690.679 L1634.62 690.679 L1635.18 690.679 L1635.74 690.679 L1636.3 690.679 L1636.86 690.679 L1637.42 690.679 L1637.98 690.679 L1638.54 690.679 L1639.1 690.679 L1639.66 690.679 L1640.21 690.679 L1640.77 690.679 L1641.33 690.679 L1641.89 690.679 L1642.45 690.679 L1643.01 690.679 L1643.57 690.679 L1644.13 690.679 L1644.69 690.679 L1645.25 690.679 L1645.81 690.679 L1646.37 690.679 L1646.93 690.679 L1647.48 690.679 L1648.04 690.679 L1648.6 690.679 L1649.16 690.679 L1649.72 690.679 L1650.28 690.679 L1650.84 690.679 L1651.4 690.679 L1651.96 690.679 L1652.52 690.679 L1653.08 690.679 L1653.64 690.679 L1654.2 690.679 L1654.76 690.679 L1655.31 690.679 L1655.87 690.679 L1656.43 690.679 L1656.99 690.679 L1657.55 690.679 L1658.11 690.679 L1658.67 690.679 L1659.23 690.679 L1659.79 690.679 L1660.35 690.679 L1660.91 690.679 L1661.47 690.679 L1662.03 690.679 L1662.58 690.679 L1663.14 690.679 L1663.7 690.679 L1664.26 690.679 L1664.82 690.679 L1665.38 690.679 L1665.94 690.679 L1666.5 690.679 L1667.06 690.679 L1667.62 690.679 L1668.18 690.679 L1668.74 690.679 L1669.3 690.679 L1669.85 690.679 L1670.41 690.679 L1670.97 690.679 L1671.53 690.679 L1672.09 690.679 L1672.65 690.679 L1673.21 690.679 L1673.77 690.679 L1674.33 690.679 L1674.89 690.679 L1675.45 690.679 L1676.01 690.679 L1676.57 690.679 L1677.13 690.679 L1677.68 690.679 L1678.24 690.679 L1678.8 690.679 L1679.36 690.679 L1679.92 690.679 L1680.48 690.679 L1681.04 690.679 L1681.6 690.679 L1682.16 690.679 L1682.72 690.679 L1683.28 690.679 L1683.84 690.679 L1684.4 690.679 L1684.95 690.679 L1685.51 690.679 L1686.07 690.679 L1686.63 690.679 L1687.19 690.679 L1687.75 690.679 L1688.31 690.679 L1688.87 690.679 L1689.43 690.679 L1689.99 690.679 L1690.55 690.679 L1691.11 690.679 L1691.67 690.679 L1692.23 690.679 L1692.78 690.679 L1693.34 690.679 L1693.9 690.679 L1694.46 690.679 L1695.02 690.679 L1695.58 690.679 L1696.14 690.679 L1696.7 690.679 L1697.26 690.679 L1697.82 690.679 L1698.38 690.679 L1698.94 690.679 L1699.5 690.679 L1700.05 690.679 L1700.61 690.679 L1701.17 690.679 L1701.73 690.679 L1702.29 690.679 L1702.85 690.679 L1703.41 690.679 L1703.97 690.679 L1704.53 690.679 L1705.09 690.679 L1705.65 690.679 L1706.21 690.679 L1706.77 690.679 L1707.32 690.679 L1707.88 690.679 L1708.44 690.679 L1709 690.679 L1709.56 690.679 L1710.12 690.679 L1710.68 690.679 L1711.24 690.679 L1711.8 690.679 L1712.36 690.679 L1712.92 690.679 L1713.48 690.679 L1714.04 690.679 L1714.6 690.679 L1715.15 690.679 L1715.71 690.679 L1716.27 690.679 L1716.83 690.679 L1717.39 690.679 L1717.95 690.679 L1718.51 690.679 L1719.07 690.679 L1719.63 690.679 L1720.19 690.679 L1720.75 690.679 L1721.31 690.679 L1721.87 690.679 L1722.42 690.679 L1722.98 690.679 L1723.54 690.679 L1724.1 690.679 L1724.66 690.679 L1725.22 690.679 L1725.78 690.679 L1726.34 690.679 L1726.9 690.679 L1727.46 690.679 L1728.02 690.679 L1728.58 690.679 L1729.14 690.679 L1729.69 690.679 L1730.25 690.679 L1730.81 690.679 L1731.37 690.679 L1731.93 690.679 L1732.49 690.679 L1733.05 690.679 L1733.61 690.679 L1734.17 690.679 L1734.73 690.679 L1735.29 690.679 L1735.85 690.679 L1736.41 690.679 L1736.97 690.679 L1737.52 690.679 L1738.08 690.679 L1738.64 690.679 L1739.2 690.679 L1739.76 690.679 L1740.32 690.679 L1740.88 690.679 L1741.44 690.679 L1742 690.679 L1742.56 690.679 L1743.12 690.679 L1743.68 690.679 L1744.24 690.679 L1744.79 690.679 L1745.35 690.679 L1745.91 690.679 L1746.47 690.679 L1747.03 690.679 L1747.59 690.679 L1748.15 690.679 L1748.71 690.679 L1749.27 690.679 L1749.83 690.679 L1750.39 690.679 L1750.95 690.679 L1751.51 690.679 L1752.06 690.679 L1752.62 690.679 L1753.18 690.679 L1753.74 690.679 L1754.3 690.679 L1754.86 690.679 L1755.42 690.679 L1755.98 690.679 L1756.54 690.679 L1757.1 690.679 L1757.66 690.679 L1758.22 690.679 L1758.78 690.679 L1759.34 690.679 L1759.89 690.679 L1760.45 690.679 L1761.01 690.679 L1761.57 690.679 L1762.13 690.679 L1762.69 690.679 L1763.25 690.679 L1763.81 690.679 L1764.37 690.679 L1764.93 690.679 L1765.49 690.679 L1766.05 690.679 L1766.61 690.679 L1767.16 690.679 L1767.72 690.679 L1768.28 690.679 L1768.84 690.679 L1769.4 690.679 L1769.96 690.679 L1770.52 690.679 L1771.08 690.679 L1771.64 690.679 L1772.2 690.679 L1772.76 690.679 L1773.32 690.679 L1773.88 690.679 L1774.43 690.679 L1774.99 690.679 L1775.55 690.679 L1776.11 690.679 L1776.67 690.679 L1777.23 690.679 L1777.79 690.679 L1778.35 690.679 L1778.91 690.679 L1779.47 690.679 L1780.03 690.679 L1780.59 690.679 L1781.15 690.679 L1781.71 690.679 L1782.26 690.679 L1782.82 690.679 L1783.38 690.679 L1783.94 690.679 L1784.5 690.679 L1785.06 690.679 L1785.62 690.679 L1786.18 690.679 L1786.74 690.679 L1787.3 690.679 L1787.86 690.679 L1788.42 690.679 L1788.98 690.679 L1789.53 690.679 L1790.09 690.679 L1790.65 690.679 L1791.21 690.679 L1791.77 690.679 L1792.33 690.679 L1792.89 690.679 L1793.45 690.679 L1794.01 690.679 L1794.57 690.679 L1795.13 690.679 L1795.69 690.679 L1796.25 690.679 L1796.8 690.679 L1797.36 690.679 L1797.92 690.679 L1798.48 690.679 L1799.04 690.679 L1799.6 690.679 L1800.16 690.679 L1800.72 690.679 L1801.28 690.679 L1801.84 690.679 L1802.4 690.679 L1802.96 690.679 L1803.52 690.679 L1804.08 690.679 L1804.63 690.679 L1805.19 690.679 L1805.75 690.679 L1806.31 690.679 L1806.87 690.679 L1807.43 690.679 L1807.99 690.679 L1808.55 690.679 L1809.11 690.679 L1809.67 690.679 L1810.23 690.679 L1810.79 690.679 L1811.35 690.679 L1811.9 690.679 L1812.46 690.679 L1813.02 690.679 L1813.58 690.679 L1814.14 690.679 L1814.7 690.679 L1815.26 690.679 L1815.82 690.679 L1816.38 690.679 L1816.94 690.679 L1817.5 690.679 L1818.06 690.679 L1818.62 690.679 L1819.18 690.679 L1819.73 690.679 L1820.29 690.679 L1820.85 690.679 L1821.41 690.679 L1821.97 690.679 L1822.53 690.679 L1823.09 690.679 L1823.65 690.679 L1824.21 690.679 L1824.77 690.679 L1825.33 690.679 L1825.89 690.679 L1826.45 690.679 L1827 690.679 L1827.56 690.679 L1828.12 690.679 L1828.68 690.679 L1829.24 690.679 L1829.8 690.679 L1830.36 690.679 L1830.92 690.679 L1831.48 690.679 L1832.04 690.679 L1832.6 690.679 L1833.16 690.679 L1833.72 690.679 L1834.27 690.679 L1834.83 690.679 L1835.39 690.679 L1835.95 690.679 L1836.51 690.679 L1837.07 690.679 L1837.63 690.679 L1838.19 690.679 L1838.19 681.717 L1837.63 681.717 L1837.07 681.717 L1836.51 681.717 L1835.95 681.717 L1835.39 681.717 L1834.83 681.717 L1834.27 681.717 L1833.72 681.717 L1833.16 681.717 L1832.6 681.717 L1832.04 681.717 L1831.48 681.717 L1830.92 681.717 L1830.36 681.717 L1829.8 681.717 L1829.24 681.717 L1828.68 681.717 L1828.12 681.717 L1827.56 681.717 L1827 681.717 L1826.45 681.717 L1825.89 681.717 L1825.33 681.717 L1824.77 681.717 L1824.21 681.717 L1823.65 681.717 L1823.09 681.717 L1822.53 681.717 L1821.97 681.717 L1821.41 681.717 L1820.85 681.717 L1820.29 681.717 L1819.73 681.717 L1819.18 681.717 L1818.62 681.717 L1818.06 681.717 L1817.5 681.717 L1816.94 681.717 L1816.38 681.717 L1815.82 681.717 L1815.26 681.717 L1814.7 681.717 L1814.14 681.717 L1813.58 681.717 L1813.02 681.717 L1812.46 681.717 L1811.9 681.717 L1811.35 681.717 L1810.79 681.717 L1810.23 681.717 L1809.67 681.717 L1809.11 681.717 L1808.55 681.717 L1807.99 681.717 L1807.43 681.717 L1806.87 681.717 L1806.31 681.717 L1805.75 681.717 L1805.19 681.717 L1804.63 681.717 L1804.08 681.717 L1803.52 681.717 L1802.96 681.717 L1802.4 681.717 L1801.84 681.717 L1801.28 681.717 L1800.72 681.717 L1800.16 681.717 L1799.6 681.717 L1799.04 681.717 L1798.48 681.717 L1797.92 681.717 L1797.36 681.717 L1796.8 681.717 L1796.25 681.717 L1795.69 681.717 L1795.13 681.717 L1794.57 681.717 L1794.01 681.717 L1793.45 681.717 L1792.89 681.717 L1792.33 681.717 L1791.77 681.717 L1791.21 681.717 L1790.65 681.717 L1790.09 681.717 L1789.53 681.717 L1788.98 681.717 L1788.42 681.717 L1787.86 681.717 L1787.3 681.717 L1786.74 681.717 L1786.18 681.717 L1785.62 681.717 L1785.06 681.717 L1784.5 681.717 L1783.94 681.717 L1783.38 681.717 L1782.82 681.717 L1782.26 681.717 L1781.71 681.717 L1781.15 681.717 L1780.59 681.717 L1780.03 681.717 L1779.47 681.717 L1778.91 681.717 L1778.35 681.717 L1777.79 681.717 L1777.23 681.717 L1776.67 681.717 L1776.11 681.717 L1775.55 681.717 L1774.99 681.717 L1774.43 681.717 L1773.88 681.717 L1773.32 681.717 L1772.76 681.717 L1772.2 681.717 L1771.64 681.717 L1771.08 681.717 L1770.52 681.717 L1769.96 681.717 L1769.4 681.717 L1768.84 681.717 L1768.28 681.717 L1767.72 681.717 L1767.16 681.717 L1766.61 681.717 L1766.05 681.717 L1765.49 681.717 L1764.93 681.717 L1764.37 681.717 L1763.81 681.717 L1763.25 681.717 L1762.69 681.717 L1762.13 681.717 L1761.57 681.717 L1761.01 681.717 L1760.45 681.717 L1759.89 681.717 L1759.34 681.717 L1758.78 681.717 L1758.22 681.717 L1757.66 681.717 L1757.1 681.717 L1756.54 681.717 L1755.98 681.717 L1755.42 681.717 L1754.86 681.717 L1754.3 681.717 L1753.74 681.717 L1753.18 681.717 L1752.62 681.717 L1752.06 681.717 L1751.51 681.717 L1750.95 681.717 L1750.39 681.717 L1749.83 681.717 L1749.27 681.717 L1748.71 681.717 L1748.15 681.717 L1747.59 681.717 L1747.03 681.717 L1746.47 681.717 L1745.91 681.717 L1745.35 681.717 L1744.79 681.717 L1744.24 681.717 L1743.68 681.717 L1743.12 681.717 L1742.56 681.717 L1742 681.717 L1741.44 681.717 L1740.88 681.717 L1740.32 681.717 L1739.76 681.717 L1739.2 681.717 L1738.64 681.717 L1738.08 681.717 L1737.52 681.717 L1736.97 681.717 L1736.41 681.717 L1735.85 681.717 L1735.29 681.717 L1734.73 681.717 L1734.17 681.717 L1733.61 681.717 L1733.05 681.717 L1732.49 681.717 L1731.93 681.717 L1731.37 681.717 L1730.81 681.717 L1730.25 681.717 L1729.69 681.717 L1729.14 681.717 L1728.58 681.717 L1728.02 681.717 L1727.46 681.717 L1726.9 681.717 L1726.34 681.717 L1725.78 681.717 L1725.22 681.717 L1724.66 681.717 L1724.1 681.717 L1723.54 681.717 L1722.98 681.717 L1722.42 681.717 L1721.87 681.717 L1721.31 681.717 L1720.75 681.717 L1720.19 681.717 L1719.63 681.717 L1719.07 681.717 L1718.51 681.717 L1717.95 681.717 L1717.39 681.717 L1716.83 681.717 L1716.27 681.717 L1715.71 681.717 L1715.15 681.717 L1714.6 681.717 L1714.04 681.717 L1713.48 681.717 L1712.92 681.717 L1712.36 681.717 L1711.8 681.717 L1711.24 681.717 L1710.68 681.717 L1710.12 681.717 L1709.56 681.717 L1709 681.717 L1708.44 681.717 L1707.88 681.717 L1707.32 681.717 L1706.77 681.717 L1706.21 681.717 L1705.65 681.717 L1705.09 681.717 L1704.53 681.717 L1703.97 681.717 L1703.41 681.717 L1702.85 681.717 L1702.29 681.717 L1701.73 681.717 L1701.17 681.717 L1700.61 681.717 L1700.05 681.717 L1699.5 681.717 L1698.94 681.717 L1698.38 681.717 L1697.82 681.717 L1697.26 681.717 L1696.7 681.717 L1696.14 681.717 L1695.58 681.717 L1695.02 681.717 L1694.46 681.717 L1693.9 681.717 L1693.34 681.717 L1692.78 681.717 L1692.23 681.717 L1691.67 681.717 L1691.11 681.717 L1690.55 681.717 L1689.99 681.717 L1689.43 681.717 L1688.87 681.717 L1688.31 681.717 L1687.75 681.717 L1687.19 681.717 L1686.63 681.717 L1686.07 681.717 L1685.51 681.717 L1684.95 681.717 L1684.4 681.717 L1683.84 681.717 L1683.28 681.717 L1682.72 681.717 L1682.16 681.717 L1681.6 681.717 L1681.04 681.717 L1680.48 681.717 L1679.92 681.717 L1679.36 681.717 L1678.8 681.717 L1678.24 681.717 L1677.68 681.717 L1677.13 681.717 L1676.57 681.717 L1676.01 681.717 L1675.45 681.717 L1674.89 681.717 L1674.33 681.717 L1673.77 681.717 L1673.21 681.717 L1672.65 681.717 L1672.09 681.717 L1671.53 681.717 L1670.97 681.717 L1670.41 681.717 L1669.85 681.717 L1669.3 681.717 L1668.74 681.717 L1668.18 681.717 L1667.62 681.717 L1667.06 681.717 L1666.5 681.717 L1665.94 681.717 L1665.38 681.717 L1664.82 681.717 L1664.26 681.717 L1663.7 681.717 L1663.14 681.717 L1662.58 681.717 L1662.03 681.717 L1661.47 681.717 L1660.91 681.717 L1660.35 681.717 L1659.79 681.717 L1659.23 681.717 L1658.67 681.717 L1658.11 681.717 L1657.55 681.717 L1656.99 681.717 L1656.43 681.717 L1655.87 681.717 L1655.31 681.717 L1654.76 681.717 L1654.2 681.717 L1653.64 681.717 L1653.08 681.717 L1652.52 681.717 L1651.96 681.717 L1651.4 681.717 L1650.84 681.717 L1650.28 681.717 L1649.72 681.717 L1649.16 681.717 L1648.6 681.717 L1648.04 681.717 L1647.48 681.717 L1646.93 681.717 L1646.37 681.717 L1645.81 681.717 L1645.25 681.717 L1644.69 681.717 L1644.13 681.717 L1643.57 681.717 L1643.01 681.717 L1642.45 681.717 L1641.89 681.717 L1641.33 681.717 L1640.77 681.717 L1640.21 681.717 L1639.66 681.717 L1639.1 681.717 L1638.54 681.717 L1637.98 681.717 L1637.42 681.717 L1636.86 681.717 L1636.3 681.717 L1635.74 681.717 L1635.18 681.717 L1634.62 681.717 L1634.06 681.717 L1633.5 681.717 L1632.94 681.717 L1632.39 681.717 L1631.83 681.717 L1631.27 681.717 L1630.71 681.717 L1630.15 681.717 L1629.59 681.717 L1629.03 681.717 L1628.47 681.717 L1627.91 681.717 L1627.35 681.717 L1626.79 681.717 L1626.23 681.717 L1625.67 681.717 L1625.11 681.717 L1624.56 681.717 L1624 681.717 L1623.44 681.717 L1622.88 681.717 L1622.32 681.717 L1621.76 681.717 L1621.2 681.717 L1620.64 681.717 L1620.08 681.717 L1619.52 681.717 L1618.96 681.717 L1618.4 681.717 L1617.84 681.717 L1617.29 681.717 L1616.73 681.717 L1616.17 681.717 L1615.61 681.717 L1615.05 681.717 L1614.49 681.717 L1613.93 681.717 L1613.37 681.717 L1612.81 681.717 L1612.25 681.717 L1611.69 681.717 L1611.13 681.717 L1610.57 681.717 L1610.02 681.717 L1609.46 681.717 L1608.9 681.717 L1608.34 681.717 L1607.78 681.717 L1607.22 681.717 L1606.66 681.717 L1606.1 681.717 L1605.54 681.717 L1604.98 681.717 L1604.42 681.717 L1603.86 681.717 L1603.3 681.717 L1602.74 681.717 L1602.19 681.717 L1601.63 681.717 L1601.07 681.717 L1600.51 681.717 L1599.95 681.717 L1599.39 681.717 L1598.83 681.717 L1598.27 681.717 L1597.71 681.717 L1597.15 681.717 L1596.59 681.717 L1596.03 681.717 L1595.47 681.717 L1594.92 681.717 L1594.36 681.717 L1593.8 681.717 L1593.24 681.717 L1592.68 681.717 L1592.12 681.717 L1591.56 681.717 L1591 681.717 L1590.44 681.717 L1589.88 681.717 L1589.32 681.717 L1588.76 681.717 L1588.2 681.717 L1587.65 681.717 L1587.09 681.717 L1586.53 681.717 L1585.97 681.717 L1585.41 681.717 L1584.85 681.717 L1584.29 681.717 L1583.73 681.717 L1583.17 681.717 L1582.61 681.717 L1582.05 681.717 L1581.49 681.717 L1580.93 681.717 L1580.37 681.717 L1579.82 681.717 L1579.26 681.717 L1578.7 681.717 L1578.14 681.717 L1577.58 681.717 L1577.02 681.717 L1576.46 681.717 L1575.9 681.717 L1575.34 681.717 L1574.78 681.717 L1574.22 681.717 L1573.66 681.717 L1573.1 681.717 L1572.55 681.717 L1571.99 681.717 L1571.43 681.717 L1570.87 681.717 L1570.31 681.717 L1569.75 681.717 L1569.19 681.717 L1568.63 681.717 L1568.07 681.717 L1567.51 681.717 L1566.95 681.717 L1566.39 681.717 L1565.83 681.717 L1565.28 681.717 L1564.72 681.717 L1564.16 681.717 L1563.6 681.717 L1563.04 681.717 L1562.48 681.717 L1561.92 681.717 L1561.36 681.717 L1560.8 681.717 L1560.24 681.717 L1559.68 681.717 L1559.12 681.717 L1558.56 681.717 L1558 681.717 L1557.45 681.717 L1556.89 681.717 L1556.33 681.717 L1555.77 681.717 L1555.21 681.717 L1554.65 681.717 L1554.09 681.717 L1553.53 681.717 L1552.97 681.717 L1552.41 681.717 L1551.85 681.717 L1551.29 681.717 L1550.73 681.717 L1550.18 681.717 L1549.62 681.717 L1549.06 681.717 L1548.5 681.717 L1547.94 681.717 L1547.38 681.717 L1546.82 681.717 L1546.26 681.717 L1545.7 681.717 L1545.14 681.717 L1544.58 681.717 L1544.02 681.717 L1543.46 681.717 L1542.9 681.717 L1542.35 681.717 L1541.79 681.717 L1541.23 681.717 L1540.67 681.717 L1540.11 681.717 L1539.55 681.717 L1538.99 681.717 L1538.43 681.717 L1537.87 681.717 L1537.31 681.717 L1536.75 681.717 L1536.19 681.717 L1535.63 681.717 L1535.08 681.717 L1534.52 681.717 L1533.96 681.717 L1533.4 681.717 L1532.84 681.717 L1532.28 681.717 L1531.72 681.717 L1531.16 681.717 L1530.6 681.717 L1530.04 681.717 L1529.48 681.717 L1528.92 681.717 L1528.36 681.717 L1527.81 681.717 L1527.25 681.717 L1526.69 681.717 L1526.13 681.717 L1525.57 681.717 L1525.01 681.717 L1524.45 681.717 L1523.89 681.717 L1523.33 681.717 L1522.77 681.717 L1522.21 681.717 L1521.65 681.717 L1521.09 681.717 L1520.53 681.717 L1519.98 681.717 L1519.42 681.717 L1518.86 681.717 L1518.3 681.717 L1517.74 681.717 L1517.18 681.717 L1516.62 681.717 L1516.06 681.717 L1515.5 681.717 L1514.94 681.717 L1514.38 681.717 L1513.82 681.717 L1513.26 681.717 L1512.71 681.717 L1512.15 681.717 L1511.59 681.717 L1511.03 681.717 L1510.47 681.717 L1509.91 681.717 L1509.35 681.717 L1508.79 681.717 L1508.23 681.717 L1507.67 681.717 L1507.11 681.717 L1506.55 681.717 L1505.99 681.717 L1505.44 681.717 L1504.88 681.717 L1504.32 681.717 L1503.76 681.717 L1503.2 681.717 L1502.64 681.717 L1502.08 681.717 L1501.52 681.717 L1500.96 681.717 L1500.4 681.717 L1499.84 681.717 L1499.28 681.717 L1498.72 681.717 L1498.16 681.717 L1497.61 681.717 L1497.05 681.717 L1496.49 681.717 L1495.93 681.717 L1495.37 681.717 L1494.81 681.717 L1494.25 681.717 L1493.69 681.717 L1493.13 681.717 L1492.57 681.717 L1492.01 681.717 L1491.45 681.717 L1490.89 681.717 L1490.34 681.717 L1489.78 681.717 L1489.22 681.717 L1488.66 681.717 L1488.1 681.717 L1487.54 681.717 L1486.98 681.717 L1486.42 681.717 L1485.86 681.717 L1485.3 681.717 L1484.74 681.717 L1484.18 681.717 L1483.62 681.717 L1483.07 681.717 L1482.51 681.717 L1481.95 681.717 L1481.39 681.717 L1480.83 681.717 L1480.27 681.717 L1479.71 681.717 L1479.15 681.717 L1478.59 681.717 L1478.03 681.717 L1477.47 681.717 L1476.91 681.717 L1476.35 681.717 L1475.79 681.717 L1475.24 681.717 L1474.68 681.717 L1474.12 681.717 L1473.56 681.717 L1473 681.717 L1472.44 681.717 L1471.88 681.717 L1471.32 681.717 L1470.76 681.717 L1470.2 681.717 L1469.64 681.717 L1469.08 681.717 L1468.52 681.717 L1467.97 681.717 L1467.41 681.717 L1466.85 681.717 L1466.29 681.717 L1465.73 681.717 L1465.17 681.717 L1464.61 681.717 L1464.05 681.717 L1463.49 681.717 L1462.93 681.717 L1462.37 681.717 L1461.81 681.717 L1461.25 681.717 L1460.7 681.717 L1460.14 681.717 L1459.58 681.717 L1459.02 681.717 L1458.46 681.717 L1457.9 681.717 L1457.34 681.717 L1456.78 681.717 L1456.22 681.717 L1455.66 681.717 L1455.1 681.717 L1454.54 681.717 L1453.98 681.717 L1453.42 681.717 L1452.87 681.717 L1452.31 681.717 L1451.75 681.717 L1451.19 681.717 L1450.63 681.717 L1450.07 681.717 L1449.51 681.717 L1448.95 681.717 L1448.39 681.717 L1447.83 681.717 L1447.27 681.717 L1446.71 681.717 L1446.15 681.717 L1445.6 681.717 L1445.04 681.717 L1444.48 681.717 L1443.92 681.717 L1443.36 681.717 L1442.8 681.717 L1442.24 681.717 L1441.68 681.717 L1441.12 681.717 L1440.56 681.717 L1440 681.717 L1439.44 681.717 L1438.88 681.717 L1438.33 681.717 L1437.77 681.717 L1437.21 681.717 L1436.65 681.717 L1436.09 681.717 L1435.53 681.717 L1434.97 681.717 L1434.41 681.717 L1433.85 681.717 L1433.29 681.717 L1432.73 681.717 L1432.17 681.717 L1431.61 681.717 L1431.05 681.717 L1430.5 681.717 L1429.94 681.717 L1429.38 681.717 L1428.82 681.717 L1428.26 681.717 L1427.7 681.717 L1427.14 681.717 L1426.58 681.717 L1426.02 681.717 L1425.46 681.717 L1424.9 681.717 L1424.34 681.717 L1423.78 681.717 L1423.23 681.717 L1422.67 681.717 L1422.11 681.717 L1421.55 681.717 L1420.99 681.717 L1420.43 681.717 L1419.87 681.717 L1419.31 681.717 L1418.75 681.717 L1418.19 681.717 L1417.63 681.717 L1417.07 681.717 L1416.51 681.717 L1415.95 681.717 L1415.4 681.717 L1414.84 681.717 L1414.28 681.717 L1413.72 681.717 L1413.16 681.717 L1412.6 681.717 L1412.04 681.717 L1411.48 681.717 L1410.92 681.717 L1410.36 681.717 L1409.8 681.717 L1409.24 681.717 L1408.68 681.717 L1408.13 681.717 L1407.57 681.717 L1407.01 681.717 L1406.45 681.717 L1405.89 681.717 L1405.33 681.717 L1404.77 681.717 L1404.21 681.717 L1403.65 681.717 L1403.09 681.717 L1402.53 681.717 L1401.97 681.717 L1401.41 681.717 L1400.86 681.717 L1400.3 681.717 L1399.74 681.717 L1399.18 681.717 L1398.62 681.717 L1398.06 681.717 L1397.5 681.717 L1396.94 681.717 L1396.38 681.717 L1395.82 681.717 L1395.26 681.717 L1394.7 681.717 L1394.14 681.717 L1393.58 681.717 L1393.03 681.717 L1392.47 681.717 L1391.91 681.717 L1391.35 681.717 L1390.79 681.717 L1390.23 681.717 L1389.67 681.717 L1389.11 681.717 L1388.55 681.717 L1387.99 681.717 L1387.43 681.717 L1386.87 681.717 L1386.31 681.717 L1385.76 681.717 L1385.2 681.717 L1384.64 681.717 L1384.08 681.717 L1383.52 681.717 L1382.96 681.717 L1382.4 681.717 L1381.84 681.717 L1381.28 681.717 L1380.72 681.717 L1380.16 681.717 L1379.6 681.717 L1379.04 681.717 L1378.49 681.717 L1377.93 681.717 L1377.37 681.717 L1376.81 681.717 L1376.25 681.717 L1375.69 681.717 L1375.13 681.717 L1374.57 681.717 L1374.01 681.717 L1373.45 681.717 L1372.89 681.717 L1372.33 681.717 L1371.77 681.717 L1371.21 681.717 L1370.66 681.717 L1370.1 681.717 L1369.54 681.717 L1368.98 681.717 L1368.42 681.717 L1367.86 681.717 L1367.3 681.717 L1366.74 681.717 L1366.18 681.717 L1365.62 681.717 L1365.06 681.717 L1364.5 681.717 L1363.94 681.717 L1363.39 681.717 L1362.83 681.717 L1362.27 681.717 L1361.71 681.717 L1361.15 681.717 L1360.59 681.717 L1360.03 681.717 L1359.47 681.717 L1358.91 681.717 L1358.35 681.717 L1357.79 681.717 L1357.23 681.717 L1356.67 681.717 L1356.12 681.717 L1355.56 681.717 L1355 681.717 L1354.44 681.717 L1353.88 681.717 L1353.32 681.717 L1352.76 681.717 L1352.2 681.717 L1351.64 681.717 L1351.08 681.717 L1350.52 681.717 L1349.96 681.717 L1349.4 681.717 L1348.84 681.717 L1348.29 681.717 L1347.73 681.717 L1347.17 681.717 L1346.61 681.717 L1346.05 681.717 L1345.49 681.717 L1344.93 681.717 L1344.37 681.717 L1343.81 681.717 L1343.25 681.717 L1342.69 681.717 L1342.13 681.717 L1341.57 681.717 L1341.02 681.717 L1340.46 681.717 L1339.9 681.717 L1339.34 681.717 L1338.78 681.717 L1338.22 681.717 L1337.66 681.717 L1337.1 681.717 L1336.54 681.717 L1335.98 681.717 L1335.42 681.717 L1334.86 681.717 L1334.3 681.717 L1333.75 681.717 L1333.19 681.717 L1332.63 681.717 L1332.07 681.717 L1331.51 681.717 L1330.95 681.717 L1330.39 681.717 L1329.83 681.717 L1329.27 681.717 L1328.71 681.717 L1328.15 681.717 L1327.59 681.717 L1327.03 681.717 L1326.47 681.717 L1325.92 681.717 L1325.36 681.717 L1324.8 681.717 L1324.24 681.717 L1323.68 681.717 L1323.12 681.717 L1322.56 681.717 L1322 681.717 L1321.44 681.717 L1320.88 681.717 L1320.32 681.717 L1319.76 681.717 L1319.2 681.717 L1318.65 681.717 L1318.09 681.717 L1317.53 681.717 L1316.97 681.717 L1316.41 681.717 L1315.85 681.717 L1315.29 681.717 L1314.73 681.717 L1314.17 681.717 L1313.61 681.717 L1313.05 681.717 L1312.49 681.717 L1311.93 681.717 L1311.38 681.717 L1310.82 681.717 L1310.26 681.717 L1309.7 681.717 L1309.14 681.717 L1308.58 681.717 L1308.02 681.717 L1307.46 681.717 L1306.9 681.717 L1306.34 681.717 L1305.78 681.717 L1305.22 681.717 L1304.66 681.717 L1304.1 681.717 L1303.55 681.717 L1302.99 681.717 L1302.43 681.717 L1301.87 681.717 L1301.31 681.717 L1300.75 681.717 L1300.19 681.717 L1299.63 681.717 L1299.07 681.717 L1298.51 681.717 L1297.95 681.717 L1297.39 681.717 L1296.83 681.717 L1296.28 681.717 L1295.72 681.717 L1295.16 681.717 L1294.6 681.717 L1294.04 681.717 L1293.48 681.717 L1292.92 681.717 L1292.36 681.717 L1291.8 681.717 L1291.24 681.717 L1290.68 681.717 L1290.12 681.717 L1289.56 681.717 L1289 681.717 L1288.45 681.717 L1287.89 681.717 L1287.33 681.717 L1286.77 681.717 L1286.21 681.717 L1285.65 681.717 L1285.09 681.717 L1284.53 681.717 L1283.97 681.717 L1283.41 681.717 L1282.85 681.717 L1282.29 681.717 L1281.73 681.717 L1281.18 681.717 L1280.62 681.717 L1280.06 681.717 L1279.5 681.717 L1278.94 681.717 L1278.38 681.717 L1277.82 681.717 L1277.26 681.717 L1276.7 681.717 L1276.14 681.717 L1275.58 681.717 L1275.02 681.717 L1274.46 681.717 L1273.91 681.717 L1273.35 681.717 L1272.79 681.717 L1272.23 681.717 L1271.67 681.717 L1271.11 681.717 L1270.55 681.717 L1269.99 681.717 L1269.43 681.717 L1268.87 681.717 L1268.31 681.717 L1267.75 681.717 L1267.19 681.717 L1266.63 681.717 L1266.08 681.717 L1265.52 681.717 L1264.96 681.717 L1264.4 681.717 L1263.84 681.717 L1263.28 681.717 L1262.72 681.717 L1262.16 681.717 L1261.6 681.717 L1261.04 681.717 L1260.48 681.717 L1259.92 681.717 L1259.36 681.717 L1258.81 681.717 L1258.25 681.717 L1257.69 681.717 L1257.13 681.717 L1256.57 681.717 L1256.01 681.717 L1255.45 681.717 L1254.89 681.717 L1254.33 681.717 L1253.77 681.717 L1253.21 681.717 L1252.65 681.717 L1252.09 681.717 L1251.54 681.717 L1250.98 681.717 L1250.42 681.717 L1249.86 681.717 L1249.3 681.717 L1248.74 681.717 L1248.18 681.717 L1247.62 681.717 L1247.06 681.717 L1246.5 681.717 L1245.94 681.717 L1245.38 681.717 L1244.82 681.717 L1244.26 681.717 L1243.71 681.717 L1243.15 681.717 L1242.59 681.717 L1242.03 681.717 L1241.47 681.717 L1240.91 681.717 L1240.35 681.717 L1239.79 681.717 L1239.23 681.717 L1238.67 681.717 L1238.11 681.717 L1237.55 681.717 L1236.99 681.717 L1236.44 681.717 L1235.88 681.717 L1235.32 681.717 L1234.76 681.717 L1234.2 681.717 L1233.64 681.717 L1233.08 681.717 L1232.52 681.717 L1231.96 681.717 L1231.4 681.717 L1230.84 681.717 L1230.28 681.717 L1229.72 681.717 L1229.17 681.717 L1228.61 681.717 L1228.05 681.717 L1227.49 681.717 L1226.93 681.717 L1226.37 681.717 L1225.81 681.717 L1225.25 681.717 L1224.69 681.717 L1224.13 681.717 L1223.57 681.717 L1223.01 681.717 L1222.45 681.717 L1221.89 681.717 L1221.34 681.717 L1220.78 681.717 L1220.22 681.717 L1219.66 681.717 L1219.1 681.717 L1218.54 681.717 L1217.98 681.717 L1217.42 681.717 L1216.86 681.717 L1216.3 681.717 L1215.74 681.717 L1215.18 681.717 L1214.62 681.717 L1214.07 681.717 L1213.51 681.717 L1212.95 681.717 L1212.39 681.717 L1211.83 681.717 L1211.27 681.717 L1210.71 681.717 L1210.15 681.717 L1209.59 681.717 L1209.03 681.717 L1208.47 681.717 L1207.91 681.717 L1207.35 681.717 L1206.8 681.717 L1206.24 681.717 L1205.68 681.717 L1205.12 681.717 L1204.56 681.717 L1204 681.717 L1203.44 681.717 L1202.88 681.717 L1202.32 681.717 L1201.76 681.717 L1201.2 681.717 L1200.64 681.717 L1200.08 681.717 L1199.52 681.717 L1198.97 681.717 L1198.41 681.717 L1197.85 681.717 L1197.29 681.717 L1196.73 681.717 L1196.17 681.717 L1195.61 681.717 L1195.05 681.717 L1194.49 681.717 L1193.93 681.717 L1193.37 681.717 L1192.81 681.717 L1192.25 681.717 L1191.7 681.717 L1191.14 681.717 L1190.58 681.717 L1190.02 681.717 L1189.46 681.717 L1188.9 681.717 L1188.34 681.717 L1187.78 681.717 L1187.22 681.717 L1186.66 681.717 L1186.1 681.717 L1185.54 681.717 L1184.98 681.717 L1184.43 681.717 L1183.87 681.717 L1183.31 681.717 L1182.75 681.717 L1182.19 681.717 L1181.63 681.717 L1181.07 681.717 L1180.51 681.717 L1179.95 681.717 L1179.39 681.717 L1178.83 681.717 L1178.27 681.717 L1177.71 681.717 L1177.15 681.717 L1176.6 681.717 L1176.04 681.717 L1175.48 681.717 L1174.92 681.717 L1174.36 681.717 L1173.8 681.717 L1173.24 681.717 L1172.68 681.717 L1172.12 681.717 L1171.56 681.717 L1171 681.717 L1170.44 681.717 L1169.88 681.717 L1169.33 681.717 L1168.77 681.717 L1168.21 681.717 L1167.65 681.717 L1167.09 681.717 L1166.53 681.717 L1165.97 681.717 L1165.41 681.717 L1164.85 681.717 L1164.29 681.717 L1163.73 681.717 L1163.17 681.717 L1162.61 681.717 L1162.05 681.717 L1161.5 681.717 L1160.94 681.717 L1160.38 681.717 L1159.82 681.717 L1159.26 681.717 L1158.7 681.717 L1158.14 681.717 L1157.58 681.717 L1157.02 681.717 L1156.46 681.717 L1155.9 681.717 L1155.34 681.717 L1154.78 681.717 L1154.23 681.717 L1153.67 681.717 L1153.11 681.717 L1152.55 681.717 L1151.99 681.717 L1151.43 681.717 L1150.87 681.717 L1150.31 681.717 L1149.75 681.717 L1149.19 681.717 L1148.63 681.717 L1148.07 681.717 L1147.51 681.717 L1146.96 681.717 L1146.4 681.717 L1145.84 681.717 L1145.28 681.717 L1144.72 681.717 L1144.16 681.717 L1143.6 681.717 L1143.04 681.717 L1142.48 681.717 L1141.92 681.717 L1141.36 681.717 L1140.8 681.717 L1140.24 681.717 L1139.68 681.717 L1139.13 681.717 L1138.57 681.717 L1138.01 681.717 L1137.45 681.717 L1136.89 681.717 L1136.33 681.717 L1135.77 681.717 L1135.21 681.717 L1134.65 681.717 L1134.09 681.717 L1133.53 681.717 L1132.97 681.717 L1132.41 681.717 L1131.86 681.717 L1131.3 681.717 L1130.74 681.717 L1130.18 681.717 L1129.62 681.717 L1129.06 681.717 L1128.5 681.717 L1127.94 681.717 L1127.38 681.717 L1126.82 681.717 L1126.26 681.717 L1125.7 681.717 L1125.14 681.717 L1124.59 681.717 L1124.03 681.717 L1123.47 681.717 L1122.91 681.717 L1122.35 681.717 L1121.79 681.717 L1121.23 681.717 L1120.67 681.717 L1120.11 681.717 L1119.55 681.717 L1118.99 681.717 L1118.43 681.717 L1117.87 681.717 L1117.31 681.717 L1116.76 681.717 L1116.2 681.717 L1115.64 681.717 L1115.08 681.717 L1114.52 681.717 L1113.96 681.717 L1113.4 681.717 L1112.84 681.717 L1112.28 681.717 L1111.72 681.717 L1111.16 681.717 L1110.6 681.717 L1110.04 681.717 L1109.49 681.717 L1108.93 681.717 L1108.37 681.717 L1107.81 681.717 L1107.25 681.717 L1106.69 681.717 L1106.13 681.717 L1105.57 681.717 L1105.01 681.717 L1104.45 681.717 L1103.89 681.717 L1103.33 681.717 L1102.77 681.717 L1102.22 681.717 L1101.66 681.717 L1101.1 681.717 L1100.54 681.717 L1099.98 681.717 L1099.42 681.717 L1098.86 681.717 L1098.3 681.717 L1097.74 681.717 L1097.18 681.717 L1096.62 681.717 L1096.06 681.717 L1095.5 681.717 L1094.94 681.717 L1094.39 681.717 L1093.83 681.717 L1093.27 681.717 L1092.71 681.717 L1092.15 681.717 L1091.59 681.717 L1091.03 681.717 L1090.47 681.717 L1089.91 681.717 L1089.35 681.717 L1088.79 681.717 L1088.23 681.717 L1087.67 681.717 L1087.12 681.717 L1086.56 681.717 L1086 681.717 L1085.44 681.717 L1084.88 681.717 L1084.32 681.717 L1083.76 681.717 L1083.2 681.717 L1082.64 681.717 L1082.08 681.717 L1081.52 681.717 L1080.96 681.717 L1080.4 681.717 L1079.85 681.717 L1079.29 681.717 L1078.73 681.717 L1078.17 681.717 L1077.61 681.717 L1077.05 681.717 L1076.49 681.717 L1075.93 681.717 L1075.37 681.717 L1074.81 681.717 L1074.25 681.717 L1073.69 681.717 L1073.13 681.717 L1072.57 681.717 L1072.02 681.717 L1071.46 681.717 L1070.9 681.717 L1070.34 681.717 L1069.78 681.717 L1069.22 681.717 L1068.66 681.717 L1068.1 681.717 L1067.54 681.717 L1066.98 681.717 L1066.42 681.717 L1065.86 681.717 L1065.3 681.717 L1064.75 681.717 L1064.19 681.717 L1063.63 681.717 L1063.07 681.717 L1062.51 681.717 L1061.95 681.717 L1061.39 681.717 L1060.83 681.717 L1060.27 681.717 L1059.71 681.717 L1059.15 681.717 L1058.59 681.717 L1058.03 681.717 L1057.48 681.717 L1056.92 681.717 L1056.36 681.717 L1055.8 681.717 L1055.24 681.717 L1054.68 681.717 L1054.12 681.717 L1053.56 681.717 L1053 681.717 L1052.44 681.717 L1051.88 681.717 L1051.32 681.717 L1050.76 681.717 L1050.2 681.717 L1049.65 681.717 L1049.09 681.717 L1048.53 681.717 L1047.97 681.717 L1047.41 681.717 L1046.85 681.717 L1046.29 681.717 L1045.73 681.717 L1045.17 681.717 L1044.61 681.717 L1044.05 681.717 L1043.49 681.717 L1042.93 681.717 L1042.38 681.717 L1041.82 681.717 L1041.26 681.717 L1040.7 681.717 L1040.14 681.717 L1039.58 681.717 L1039.02 681.717 L1038.46 681.717 L1037.9 681.717 L1037.34 681.717 L1036.78 681.717 L1036.22 681.717 L1035.66 681.717 L1035.1 681.717 L1034.55 681.717 L1033.99 681.717 L1033.43 681.717 L1032.87 681.717 L1032.31 681.717 L1031.75 681.717 L1031.19 681.717 L1030.63 681.717 L1030.07 681.717 L1029.51 681.717 L1028.95 681.717 L1028.39 681.717 L1027.83 681.717 L1027.28 681.717 L1026.72 681.717 L1026.16 681.717 L1025.6 681.717 L1025.04 681.717 L1024.48 681.717 L1023.92 681.717 L1023.36 681.717 L1022.8 681.717 L1022.24 681.717 L1021.68 681.717 L1021.12 681.717 L1020.56 681.717 L1020.01 681.717 L1019.45 681.717 L1018.89 681.717 L1018.33 681.717 L1017.77 681.717 L1017.21 681.717 L1016.65 681.717 L1016.09 681.717 L1015.53 681.717 L1014.97 681.717 L1014.41 681.717 L1013.85 681.717 L1013.29 681.717 L1012.73 681.717 L1012.18 681.717 L1011.62 681.717 L1011.06 681.717 L1010.5 681.717 L1009.94 681.717 L1009.38 681.717 L1008.82 681.717 L1008.26 681.717 L1007.7 681.717 L1007.14 681.717 L1006.58 681.717 L1006.02 681.717 L1005.46 681.717 L1004.91 681.717 L1004.35 681.717 L1003.79 681.717 L1003.23 681.717 L1002.67 681.717 L1002.11 681.717 L1001.55 681.717 L1000.99 681.717 L1000.43 681.717 L999.872 681.717 L999.313 681.717 L998.754 681.717 L998.194 681.717 L997.635 681.717 L997.076 681.717 L996.517 681.717 L995.957 681.717 L995.398 681.717 L994.839 681.717 L994.28 681.717 L993.72 681.717 L993.161 681.717 L992.602 681.717 L992.043 681.717 L991.483 681.717 L990.924 681.717 L990.365 681.717 L989.806 681.717 L989.246 681.717 L988.687 681.717 L988.128 681.717 L987.569 681.717 L987.009 681.717 L986.45 681.717 L985.891 681.717 L985.332 681.717 L984.772 681.717 L984.213 681.717 L983.654 681.717 L983.095 681.717 L982.535 681.717 L981.976 681.717 L981.417 681.717 L980.858 681.717 L980.298 681.717 L979.739 681.717 L979.18 681.717 L978.621 681.717 L978.061 681.717 L977.502 681.717 L976.943 681.717 L976.384 681.717 L975.824 681.717 L975.265 681.717 L974.706 681.717 L974.147 681.717 L973.587 681.717 L973.028 681.717 L972.469 681.717 L971.91 681.717 L971.35 681.717 L970.791 681.717 L970.232 681.717 L969.673 681.717 L969.113 681.717 L968.554 681.717 L967.995 681.717 L967.436 681.717 L966.876 681.717 L966.317 681.717 L965.758 681.717 L965.199 681.717 L964.639 681.717 L964.08 681.717 L963.521 681.717 L962.962 681.717 L962.402 681.717 L961.843 681.717 L961.284 681.717 L960.725 681.717 L960.165 681.717 L959.606 681.717 L959.047 681.717 L958.488 681.717 L957.928 681.717 L957.369 681.717 L956.81 681.717 L956.251 681.717 L955.691 681.717 L955.132 681.717 L954.573 681.717 L954.014 681.717 L953.454 681.717 L952.895 681.717 L952.336 681.717 L951.777 681.717 L951.217 681.717 L950.658 681.717 L950.099 681.717 L949.54 681.717 L948.98 681.717 L948.421 681.717 L947.862 681.717 L947.303 681.717 L946.743 681.717 L946.184 681.717 L945.625 681.717 L945.066 681.717 L944.506 681.717 L943.947 681.717 L943.388 681.717 L942.829 681.717 L942.269 681.717 L941.71 681.717 L941.151 681.717 L940.592 681.717 L940.032 681.717 L939.473 681.717 L938.914 681.717 L938.355 681.717 L937.795 681.717 L937.236 681.717 L936.677 681.717 L936.118 681.717 L935.558 681.717 L934.999 681.717 L934.44 681.717 L933.881 681.717 L933.321 681.717 L932.762 681.717 L932.203 681.717 L931.644 681.717 L931.084 681.717 L930.525 681.717 L929.966 681.717 L929.406 681.717 L928.847 681.717 L928.288 681.717 L927.729 681.717 L927.169 681.717 L926.61 681.717 L926.051 681.717 L925.492 681.717 L924.932 681.717 L924.373 681.717 L923.814 681.717 L923.255 681.717 L922.695 681.717 L922.136 681.717 L921.577 681.717 L921.018 681.717 L920.458 681.717 L919.899 681.717 L919.34 681.717 L918.781 681.717 L918.221 681.717 L917.662 681.717 L917.103 681.717 L916.544 681.717 L915.984 681.717 L915.425 681.717 L914.866 681.717 L914.307 681.717 L913.747 681.717 L913.188 681.717 L912.629 681.717 L912.07 681.717 L911.51 681.717 L910.951 681.717 L910.392 681.717 L909.833 681.717 L909.273 681.717 L908.714 681.717 L908.155 681.717 L907.596 681.717 L907.036 681.717 L906.477 681.717 L905.918 681.717 L905.359 681.717 L904.799 681.717 L904.24 681.717 L903.681 681.717 L903.122 681.717 L902.562 681.717 L902.003 681.717 L901.444 681.717 L900.885 681.717 L900.325 681.717 L899.766 681.717 L899.207 681.717 L898.648 681.717 L898.088 681.717 L897.529 681.717 L896.97 681.717 L896.411 681.717 L895.851 681.717 L895.292 681.717 L894.733 681.717 L894.174 681.717 L893.614 681.717 L893.055 681.717 L892.496 681.717 L891.937 681.717 L891.377 681.717 L890.818 681.717 L890.259 681.717 L889.7 681.717 L889.14 681.717 L888.581 681.717 L888.022 681.717 L887.463 681.717 L886.903 681.717 L886.344 681.717 L885.785 681.717 L885.226 681.717 L884.666 681.717 L884.107 681.717 L883.548 681.717 L882.989 681.717 L882.429 681.717 L881.87 681.717 L881.311 681.717 L880.752 681.717 L880.192 681.717 L879.633 681.717 L879.074 681.717 L878.515 681.717 L877.955 681.717 L877.396 681.717 L876.837 681.717 L876.278 681.717 L875.718 681.717 L875.159 681.717 L874.6 681.717 L874.041 681.717 L873.481 681.717 L872.922 681.717 L872.363 681.717 L871.804 681.717 L871.244 681.717 L870.685 681.717 L870.126 681.717 L869.567 681.717 L869.007 681.717 L868.448 681.717 L867.889 681.717 L867.33 681.717 L866.77 681.717 L866.211 681.717 L865.652 681.717 L865.093 681.717 L864.533 681.717 L863.974 681.717 L863.415 681.717 L862.856 681.717 L862.296 681.717 L861.737 681.717 L861.178 681.717 L860.619 681.717 L860.059 681.717 L859.5 681.717 L858.941 681.717 L858.382 681.717 L857.822 681.717 L857.263 681.717 L856.704 681.717 L856.145 681.717 L855.585 681.717 L855.026 681.717 L854.467 681.717 L853.908 681.717 L853.348 681.717 L852.789 681.717 L852.23 681.717 L851.671 681.717 L851.111 681.717 L850.552 681.717 L849.993 681.717 L849.434 681.717 L848.874 681.717 L848.315 681.717 L847.756 681.717 L847.197 681.717 L846.637 681.717 L846.078 681.717 L845.519 681.717 L844.96 681.717 L844.4 681.717 L843.841 681.717 L843.282 681.717 L842.723 681.717 L842.163 681.717 L841.604 681.717 L841.045 681.717 L840.486 681.717 L839.926 681.717 L839.367 681.717 L838.808 681.717 L838.249 681.717 L837.689 681.717 L837.13 681.717 L836.571 681.717 L836.012 681.717 L835.452 681.717 L834.893 681.717 L834.334 681.717 L833.775 681.717 L833.215 681.717 L832.656 681.717 L832.097 681.717 L831.538 681.717 L830.978 681.717 L830.419 681.717 L829.86 681.717 L829.301 681.717 L828.741 681.717 L828.182 681.717 L827.623 681.717 L827.064 681.717 L826.504 681.717 L825.945 681.717 L825.386 681.717 L824.827 681.717 L824.267 681.717 L823.708 681.717 L823.149 681.717 L822.59 681.717 L822.03 681.717 L821.471 681.717 L820.912 681.717 L820.353 681.717 L819.793 681.717 L819.234 681.717 L818.675 681.717 L818.116 681.717 L817.556 681.717 L816.997 681.717 L816.438 681.717 L815.879 681.717 L815.319 681.717 L814.76 681.717 L814.201 681.717 L813.642 681.717 L813.082 681.717 L812.523 681.717 L811.964 681.717 L811.405 681.717 L810.845 681.717 L810.286 681.717 L809.727 681.717 L809.168 681.717 L808.608 681.717 L808.049 681.717 L807.49 681.717 L806.931 681.717 L806.371 681.717 L805.812 681.717 L805.253 681.717 L804.693 681.717 L804.134 681.717 L803.575 681.717 L803.016 681.717 L802.456 681.717 L801.897 681.717 L801.338 681.717 L800.779 681.717 L800.219 681.717 L799.66 681.717 L799.101 681.717 L798.542 681.717 L797.982 681.717 L797.423 681.717 L796.864 681.717 L796.305 681.717 L795.745 681.717 L795.186 681.717 L794.627 681.717 L794.068 681.717 L793.508 681.717 L792.949 681.717 L792.39 681.717 L791.831 681.717 L791.271 681.717 L790.712 681.717 L790.153 681.717 L789.594 681.717 L789.034 681.717 L788.475 681.717 L787.916 681.717 L787.357 681.717 L786.797 681.717 L786.238 681.717 L785.679 681.717 L785.12 681.717 L784.56 681.717 L784.001 681.717 L783.442 681.717 L782.883 681.717 L782.323 681.717 L781.764 681.717 L781.205 681.717 L780.646 681.717 L780.086 681.717 L779.527 681.717 L778.968 681.717 L778.409 681.717 L777.849 681.717 L777.29 681.717 L776.731 681.717 L776.172 681.717 L775.612 681.717 L775.053 681.717 L774.494 681.717 L773.935 681.717 L773.375 681.717 L772.816 681.717 L772.257 681.717 L771.698 681.717 L771.138 681.717 L770.579 681.717 L770.02 681.717 L769.461 681.717 L768.901 681.717 L768.342 681.717 L767.783 681.717 L767.224 681.717 L766.664 681.717 L766.105 681.717 L765.546 681.717 L764.987 681.717 L764.427 681.717 L763.868 681.717 L763.309 681.717 L762.75 681.717 L762.19 681.717 L761.631 681.717 L761.072 681.717 L760.513 681.717 L759.953 681.717 L759.394 681.717 L758.835 681.717 L758.276 681.717 L757.716 681.717 L757.157 681.717 L756.598 681.717 L756.039 681.717 L755.479 681.717 L754.92 681.717 L754.361 681.717 L753.802 681.717 L753.242 681.717 L752.683 681.717 L752.124 681.717 L751.565 681.717 L751.005 681.717 L750.446 681.717 L749.887 681.717 L749.328 681.717 L748.768 681.717 L748.209 681.717 L747.65 681.717 L747.091 681.717 L746.531 681.717 L745.972 681.717 L745.413 681.717 L744.854 681.717 L744.294 681.717 L743.735 681.717 L743.176 681.717 L742.617 681.717 L742.057 681.717 L741.498 681.717 L740.939 681.717 L740.38 681.717 L739.82 681.717 L739.261 681.717 L738.702 681.717 L738.143 681.717 L737.583 681.717 L737.024 681.717 L736.465 681.717 L735.906 681.717 L735.346 681.717 L734.787 681.717 L734.228 681.717 L733.669 681.717 L733.109 681.717 L732.55 681.717 L731.991 681.717 L731.432 681.717 L730.872 681.717 L730.313 681.717 L729.754 681.717 L729.195 681.717 L728.635 681.717 L728.076 681.717 L727.517 681.717 L726.958 681.717 L726.398 681.717 L725.839 681.717 L725.28 681.717 L724.721 681.717 L724.161 681.717 L723.602 681.717 L723.043 681.717 L722.484 681.717 L721.924 681.717 L721.365 681.717 L720.806 681.717 L720.247 681.717  Z\" fill=\"#e26f46\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip713)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,686.198 720.806,686.198 721.365,686.198 721.924,686.198 722.484,686.198 723.043,686.198 723.602,686.198 724.161,686.198 724.721,686.198 725.28,686.198 725.839,686.198 726.398,686.198 726.958,686.198 727.517,686.198 728.076,686.198 728.635,686.198 729.195,686.198 729.754,686.198 730.313,686.198 730.872,686.198 731.432,686.198 731.991,686.198 732.55,686.198 733.109,686.198 733.669,686.198 734.228,686.198 734.787,686.198 735.346,686.198 735.906,686.198 736.465,686.198 737.024,686.198 737.583,686.198 738.143,686.198 738.702,686.198 739.261,686.198 739.82,686.198 740.38,686.198 740.939,686.198 741.498,686.198 742.057,686.198 742.617,686.198 743.176,686.198 743.735,686.198 744.294,686.198 744.854,686.198 745.413,686.198 745.972,686.198 746.531,686.198 747.091,686.198 747.65,686.198 748.209,686.198 748.768,686.198 749.328,686.198 749.887,686.198 750.446,686.198 751.005,686.198 751.565,686.198 752.124,686.198 752.683,686.198 753.242,686.198 753.802,686.198 754.361,686.198 754.92,686.198 755.479,686.198 756.039,686.198 756.598,686.198 757.157,686.198 757.716,686.198 758.276,686.198 758.835,686.198 759.394,686.198 759.953,686.198 760.513,686.198 761.072,686.198 761.631,686.198 762.19,686.198 762.75,686.198 763.309,686.198 763.868,686.198 764.427,686.198 764.987,686.198 765.546,686.198 766.105,686.198 766.664,686.198 767.224,686.198 767.783,686.198 768.342,686.198 768.901,686.198 769.461,686.198 770.02,686.198 770.579,686.198 771.138,686.198 771.698,686.198 772.257,686.198 772.816,686.198 773.375,686.198 773.935,686.198 774.494,686.198 775.053,686.198 775.612,686.198 776.172,686.198 776.731,686.198 777.29,686.198 777.849,686.198 778.409,686.198 778.968,686.198 779.527,686.198 780.086,686.198 780.646,686.198 781.205,686.198 781.764,686.198 782.323,686.198 782.883,686.198 783.442,686.198 784.001,686.198 784.56,686.198 785.12,686.198 785.679,686.198 786.238,686.198 786.797,686.198 787.357,686.198 787.916,686.198 788.475,686.198 789.034,686.198 789.594,686.198 790.153,686.198 790.712,686.198 791.271,686.198 791.831,686.198 792.39,686.198 792.949,686.198 793.508,686.198 794.068,686.198 794.627,686.198 795.186,686.198 795.745,686.198 796.305,686.198 796.864,686.198 797.423,686.198 797.982,686.198 798.542,686.198 799.101,686.198 799.66,686.198 800.219,686.198 800.779,686.198 801.338,686.198 801.897,686.198 802.456,686.198 803.016,686.198 803.575,686.198 804.134,686.198 804.693,686.198 805.253,686.198 805.812,686.198 806.371,686.198 806.931,686.198 807.49,686.198 808.049,686.198 808.608,686.198 809.168,686.198 809.727,686.198 810.286,686.198 810.845,686.198 811.405,686.198 811.964,686.198 812.523,686.198 813.082,686.198 813.642,686.198 814.201,686.198 814.76,686.198 815.319,686.198 815.879,686.198 816.438,686.198 816.997,686.198 817.556,686.198 818.116,686.198 818.675,686.198 819.234,686.198 819.793,686.198 820.353,686.198 820.912,686.198 821.471,686.198 822.03,686.198 822.59,686.198 823.149,686.198 823.708,686.198 824.267,686.198 824.827,686.198 825.386,686.198 825.945,686.198 826.504,686.198 827.064,686.198 827.623,686.198 828.182,686.198 828.741,686.198 829.301,686.198 829.86,686.198 830.419,686.198 830.978,686.198 831.538,686.198 832.097,686.198 832.656,686.198 833.215,686.198 833.775,686.198 834.334,686.198 834.893,686.198 835.452,686.198 836.012,686.198 836.571,686.198 837.13,686.198 837.689,686.198 838.249,686.198 838.808,686.198 839.367,686.198 839.926,686.198 840.486,686.198 841.045,686.198 841.604,686.198 842.163,686.198 842.723,686.198 843.282,686.198 843.841,686.198 844.4,686.198 844.96,686.198 845.519,686.198 846.078,686.198 846.637,686.198 847.197,686.198 847.756,686.198 848.315,686.198 848.874,686.198 849.434,686.198 849.993,686.198 850.552,686.198 851.111,686.198 851.671,686.198 852.23,686.198 852.789,686.198 853.348,686.198 853.908,686.198 854.467,686.198 855.026,686.198 855.585,686.198 856.145,686.198 856.704,686.198 857.263,686.198 857.822,686.198 858.382,686.198 858.941,686.198 859.5,686.198 860.059,686.198 860.619,686.198 861.178,686.198 861.737,686.198 862.296,686.198 862.856,686.198 863.415,686.198 863.974,686.198 864.533,686.198 865.093,686.198 865.652,686.198 866.211,686.198 866.77,686.198 867.33,686.198 867.889,686.198 868.448,686.198 869.007,686.198 869.567,686.198 870.126,686.198 870.685,686.198 871.244,686.198 871.804,686.198 872.363,686.198 872.922,686.198 873.481,686.198 874.041,686.198 874.6,686.198 875.159,686.198 875.718,686.198 876.278,686.198 876.837,686.198 877.396,686.198 877.955,686.198 878.515,686.198 879.074,686.198 879.633,686.198 880.192,686.198 880.752,686.198 881.311,686.198 881.87,686.198 882.429,686.198 882.989,686.198 883.548,686.198 884.107,686.198 884.666,686.198 885.226,686.198 885.785,686.198 886.344,686.198 886.903,686.198 887.463,686.198 888.022,686.198 888.581,686.198 889.14,686.198 889.7,686.198 890.259,686.198 890.818,686.198 891.377,686.198 891.937,686.198 892.496,686.198 893.055,686.198 893.614,686.198 894.174,686.198 894.733,686.198 895.292,686.198 895.851,686.198 896.411,686.198 896.97,686.198 897.529,686.198 898.088,686.198 898.648,686.198 899.207,686.198 899.766,686.198 900.325,686.198 900.885,686.198 901.444,686.198 902.003,686.198 902.562,686.198 903.122,686.198 903.681,686.198 904.24,686.198 904.799,686.198 905.359,686.198 905.918,686.198 906.477,686.198 907.036,686.198 907.596,686.198 908.155,686.198 908.714,686.198 909.273,686.198 909.833,686.198 910.392,686.198 910.951,686.198 911.51,686.198 912.07,686.198 912.629,686.198 913.188,686.198 913.747,686.198 914.307,686.198 914.866,686.198 915.425,686.198 915.984,686.198 916.544,686.198 917.103,686.198 917.662,686.198 918.221,686.198 918.781,686.198 919.34,686.198 919.899,686.198 920.458,686.198 921.018,686.198 921.577,686.198 922.136,686.198 922.695,686.198 923.255,686.198 923.814,686.198 924.373,686.198 924.932,686.198 925.492,686.198 926.051,686.198 926.61,686.198 927.169,686.198 927.729,686.198 928.288,686.198 928.847,686.198 929.406,686.198 929.966,686.198 930.525,686.198 931.084,686.198 931.644,686.198 932.203,686.198 932.762,686.198 933.321,686.198 933.881,686.198 934.44,686.198 934.999,686.198 935.558,686.198 936.118,686.198 936.677,686.198 937.236,686.198 937.795,686.198 938.355,686.198 938.914,686.198 939.473,686.198 940.032,686.198 940.592,686.198 941.151,686.198 941.71,686.198 942.269,686.198 942.829,686.198 943.388,686.198 943.947,686.198 944.506,686.198 945.066,686.198 945.625,686.198 946.184,686.198 946.743,686.198 947.303,686.198 947.862,686.198 948.421,686.198 948.98,686.198 949.54,686.198 950.099,686.198 950.658,686.198 951.217,686.198 951.777,686.198 952.336,686.198 952.895,686.198 953.454,686.198 954.014,686.198 954.573,686.198 955.132,686.198 955.691,686.198 956.251,686.198 956.81,686.198 957.369,686.198 957.928,686.198 958.488,686.198 959.047,686.198 959.606,686.198 960.165,686.198 960.725,686.198 961.284,686.198 961.843,686.198 962.402,686.198 962.962,686.198 963.521,686.198 964.08,686.198 964.639,686.198 965.199,686.198 965.758,686.198 966.317,686.198 966.876,686.198 967.436,686.198 967.995,686.198 968.554,686.198 969.113,686.198 969.673,686.198 970.232,686.198 970.791,686.198 971.35,686.198 971.91,686.198 972.469,686.198 973.028,686.198 973.587,686.198 974.147,686.198 974.706,686.198 975.265,686.198 975.824,686.198 976.384,686.198 976.943,686.198 977.502,686.198 978.061,686.198 978.621,686.198 979.18,686.198 979.739,686.198 980.298,686.198 980.858,686.198 981.417,686.198 981.976,686.198 982.535,686.198 983.095,686.198 983.654,686.198 984.213,686.198 984.772,686.198 985.332,686.198 985.891,686.198 986.45,686.198 987.009,686.198 987.569,686.198 988.128,686.198 988.687,686.198 989.246,686.198 989.806,686.198 990.365,686.198 990.924,686.198 991.483,686.198 992.043,686.198 992.602,686.198 993.161,686.198 993.72,686.198 994.28,686.198 994.839,686.198 995.398,686.198 995.957,686.198 996.517,686.198 997.076,686.198 997.635,686.198 998.194,686.198 998.754,686.198 999.313,686.198 999.872,686.198 1000.43,686.198 1000.99,686.198 1001.55,686.198 1002.11,686.198 1002.67,686.198 1003.23,686.198 1003.79,686.198 1004.35,686.198 1004.91,686.198 1005.46,686.198 1006.02,686.198 1006.58,686.198 1007.14,686.198 1007.7,686.198 1008.26,686.198 1008.82,686.198 1009.38,686.198 1009.94,686.198 1010.5,686.198 1011.06,686.198 1011.62,686.198 1012.18,686.198 1012.73,686.198 1013.29,686.198 1013.85,686.198 1014.41,686.198 1014.97,686.198 1015.53,686.198 1016.09,686.198 1016.65,686.198 1017.21,686.198 1017.77,686.198 1018.33,686.198 1018.89,686.198 1019.45,686.198 1020.01,686.198 1020.56,686.198 1021.12,686.198 1021.68,686.198 1022.24,686.198 1022.8,686.198 1023.36,686.198 1023.92,686.198 1024.48,686.198 1025.04,686.198 1025.6,686.198 1026.16,686.198 1026.72,686.198 1027.28,686.198 1027.83,686.198 1028.39,686.198 1028.95,686.198 1029.51,686.198 1030.07,686.198 1030.63,686.198 1031.19,686.198 1031.75,686.198 1032.31,686.198 1032.87,686.198 1033.43,686.198 1033.99,686.198 1034.55,686.198 1035.1,686.198 1035.66,686.198 1036.22,686.198 1036.78,686.198 1037.34,686.198 1037.9,686.198 1038.46,686.198 1039.02,686.198 1039.58,686.198 1040.14,686.198 1040.7,686.198 1041.26,686.198 1041.82,686.198 1042.38,686.198 1042.93,686.198 1043.49,686.198 1044.05,686.198 1044.61,686.198 1045.17,686.198 1045.73,686.198 1046.29,686.198 1046.85,686.198 1047.41,686.198 1047.97,686.198 1048.53,686.198 1049.09,686.198 1049.65,686.198 1050.2,686.198 1050.76,686.198 1051.32,686.198 1051.88,686.198 1052.44,686.198 1053,686.198 1053.56,686.198 1054.12,686.198 1054.68,686.198 1055.24,686.198 1055.8,686.198 1056.36,686.198 1056.92,686.198 1057.48,686.198 1058.03,686.198 1058.59,686.198 1059.15,686.198 1059.71,686.198 1060.27,686.198 1060.83,686.198 1061.39,686.198 1061.95,686.198 1062.51,686.198 1063.07,686.198 1063.63,686.198 1064.19,686.198 1064.75,686.198 1065.3,686.198 1065.86,686.198 1066.42,686.198 1066.98,686.198 1067.54,686.198 1068.1,686.198 1068.66,686.198 1069.22,686.198 1069.78,686.198 1070.34,686.198 1070.9,686.198 1071.46,686.198 1072.02,686.198 1072.57,686.198 1073.13,686.198 1073.69,686.198 1074.25,686.198 1074.81,686.198 1075.37,686.198 1075.93,686.198 1076.49,686.198 1077.05,686.198 1077.61,686.198 1078.17,686.198 1078.73,686.198 1079.29,686.198 1079.85,686.198 1080.4,686.198 1080.96,686.198 1081.52,686.198 1082.08,686.198 1082.64,686.198 1083.2,686.198 1083.76,686.198 1084.32,686.198 1084.88,686.198 1085.44,686.198 1086,686.198 1086.56,686.198 1087.12,686.198 1087.67,686.198 1088.23,686.198 1088.79,686.198 1089.35,686.198 1089.91,686.198 1090.47,686.198 1091.03,686.198 1091.59,686.198 1092.15,686.198 1092.71,686.198 1093.27,686.198 1093.83,686.198 1094.39,686.198 1094.94,686.198 1095.5,686.198 1096.06,686.198 1096.62,686.198 1097.18,686.198 1097.74,686.198 1098.3,686.198 1098.86,686.198 1099.42,686.198 1099.98,686.198 1100.54,686.198 1101.1,686.198 1101.66,686.198 1102.22,686.198 1102.77,686.198 1103.33,686.198 1103.89,686.198 1104.45,686.198 1105.01,686.198 1105.57,686.198 1106.13,686.198 1106.69,686.198 1107.25,686.198 1107.81,686.198 1108.37,686.198 1108.93,686.198 1109.49,686.198 1110.04,686.198 1110.6,686.198 1111.16,686.198 1111.72,686.198 1112.28,686.198 1112.84,686.198 1113.4,686.198 1113.96,686.198 1114.52,686.198 1115.08,686.198 1115.64,686.198 1116.2,686.198 1116.76,686.198 1117.31,686.198 1117.87,686.198 1118.43,686.198 1118.99,686.198 1119.55,686.198 1120.11,686.198 1120.67,686.198 1121.23,686.198 1121.79,686.198 1122.35,686.198 1122.91,686.198 1123.47,686.198 1124.03,686.198 1124.59,686.198 1125.14,686.198 1125.7,686.198 1126.26,686.198 1126.82,686.198 1127.38,686.198 1127.94,686.198 1128.5,686.198 1129.06,686.198 1129.62,686.198 1130.18,686.198 1130.74,686.198 1131.3,686.198 1131.86,686.198 1132.41,686.198 1132.97,686.198 1133.53,686.198 1134.09,686.198 1134.65,686.198 1135.21,686.198 1135.77,686.198 1136.33,686.198 1136.89,686.198 1137.45,686.198 1138.01,686.198 1138.57,686.198 1139.13,686.198 1139.68,686.198 1140.24,686.198 1140.8,686.198 1141.36,686.198 1141.92,686.198 1142.48,686.198 1143.04,686.198 1143.6,686.198 1144.16,686.198 1144.72,686.198 1145.28,686.198 1145.84,686.198 1146.4,686.198 1146.96,686.198 1147.51,686.198 1148.07,686.198 1148.63,686.198 1149.19,686.198 1149.75,686.198 1150.31,686.198 1150.87,686.198 1151.43,686.198 1151.99,686.198 1152.55,686.198 1153.11,686.198 1153.67,686.198 1154.23,686.198 1154.78,686.198 1155.34,686.198 1155.9,686.198 1156.46,686.198 1157.02,686.198 1157.58,686.198 1158.14,686.198 1158.7,686.198 1159.26,686.198 1159.82,686.198 1160.38,686.198 1160.94,686.198 1161.5,686.198 1162.05,686.198 1162.61,686.198 1163.17,686.198 1163.73,686.198 1164.29,686.198 1164.85,686.198 1165.41,686.198 1165.97,686.198 1166.53,686.198 1167.09,686.198 1167.65,686.198 1168.21,686.198 1168.77,686.198 1169.33,686.198 1169.88,686.198 1170.44,686.198 1171,686.198 1171.56,686.198 1172.12,686.198 1172.68,686.198 1173.24,686.198 1173.8,686.198 1174.36,686.198 1174.92,686.198 1175.48,686.198 1176.04,686.198 1176.6,686.198 1177.15,686.198 1177.71,686.198 1178.27,686.198 1178.83,686.198 1179.39,686.198 1179.95,686.198 1180.51,686.198 1181.07,686.198 1181.63,686.198 1182.19,686.198 1182.75,686.198 1183.31,686.198 1183.87,686.198 1184.43,686.198 1184.98,686.198 1185.54,686.198 1186.1,686.198 1186.66,686.198 1187.22,686.198 1187.78,686.198 1188.34,686.198 1188.9,686.198 1189.46,686.198 1190.02,686.198 1190.58,686.198 1191.14,686.198 1191.7,686.198 1192.25,686.198 1192.81,686.198 1193.37,686.198 1193.93,686.198 1194.49,686.198 1195.05,686.198 1195.61,686.198 1196.17,686.198 1196.73,686.198 1197.29,686.198 1197.85,686.198 1198.41,686.198 1198.97,686.198 1199.52,686.198 1200.08,686.198 1200.64,686.198 1201.2,686.198 1201.76,686.198 1202.32,686.198 1202.88,686.198 1203.44,686.198 1204,686.198 1204.56,686.198 1205.12,686.198 1205.68,686.198 1206.24,686.198 1206.8,686.198 1207.35,686.198 1207.91,686.198 1208.47,686.198 1209.03,686.198 1209.59,686.198 1210.15,686.198 1210.71,686.198 1211.27,686.198 1211.83,686.198 1212.39,686.198 1212.95,686.198 1213.51,686.198 1214.07,686.198 1214.62,686.198 1215.18,686.198 1215.74,686.198 1216.3,686.198 1216.86,686.198 1217.42,686.198 1217.98,686.198 1218.54,686.198 1219.1,686.198 1219.66,686.198 1220.22,686.198 1220.78,686.198 1221.34,686.198 1221.89,686.198 1222.45,686.198 1223.01,686.198 1223.57,686.198 1224.13,686.198 1224.69,686.198 1225.25,686.198 1225.81,686.198 1226.37,686.198 1226.93,686.198 1227.49,686.198 1228.05,686.198 1228.61,686.198 1229.17,686.198 1229.72,686.198 1230.28,686.198 1230.84,686.198 1231.4,686.198 1231.96,686.198 1232.52,686.198 1233.08,686.198 1233.64,686.198 1234.2,686.198 1234.76,686.198 1235.32,686.198 1235.88,686.198 1236.44,686.198 1236.99,686.198 1237.55,686.198 1238.11,686.198 1238.67,686.198 1239.23,686.198 1239.79,686.198 1240.35,686.198 1240.91,686.198 1241.47,686.198 1242.03,686.198 1242.59,686.198 1243.15,686.198 1243.71,686.198 1244.26,686.198 1244.82,686.198 1245.38,686.198 1245.94,686.198 1246.5,686.198 1247.06,686.198 1247.62,686.198 1248.18,686.198 1248.74,686.198 1249.3,686.198 1249.86,686.198 1250.42,686.198 1250.98,686.198 1251.54,686.198 1252.09,686.198 1252.65,686.198 1253.21,686.198 1253.77,686.198 1254.33,686.198 1254.89,686.198 1255.45,686.198 1256.01,686.198 1256.57,686.198 1257.13,686.198 1257.69,686.198 1258.25,686.198 1258.81,686.198 1259.36,686.198 1259.92,686.198 1260.48,686.198 1261.04,686.198 1261.6,686.198 1262.16,686.198 1262.72,686.198 1263.28,686.198 1263.84,686.198 1264.4,686.198 1264.96,686.198 1265.52,686.198 1266.08,686.198 1266.63,686.198 1267.19,686.198 1267.75,686.198 1268.31,686.198 1268.87,686.198 1269.43,686.198 1269.99,686.198 1270.55,686.198 1271.11,686.198 1271.67,686.198 1272.23,686.198 1272.79,686.198 1273.35,686.198 1273.91,686.198 1274.46,686.198 1275.02,686.198 1275.58,686.198 1276.14,686.198 1276.7,686.198 1277.26,686.198 1277.82,686.198 1278.38,686.198 1278.94,686.198 1279.5,686.198 1280.06,686.198 1280.62,686.198 1281.18,686.198 1281.73,686.198 1282.29,686.198 1282.85,686.198 1283.41,686.198 1283.97,686.198 1284.53,686.198 1285.09,686.198 1285.65,686.198 1286.21,686.198 1286.77,686.198 1287.33,686.198 1287.89,686.198 1288.45,686.198 1289,686.198 1289.56,686.198 1290.12,686.198 1290.68,686.198 1291.24,686.198 1291.8,686.198 1292.36,686.198 1292.92,686.198 1293.48,686.198 1294.04,686.198 1294.6,686.198 1295.16,686.198 1295.72,686.198 1296.28,686.198 1296.83,686.198 1297.39,686.198 1297.95,686.198 1298.51,686.198 1299.07,686.198 1299.63,686.198 1300.19,686.198 1300.75,686.198 1301.31,686.198 1301.87,686.198 1302.43,686.198 1302.99,686.198 1303.55,686.198 1304.1,686.198 1304.66,686.198 1305.22,686.198 1305.78,686.198 1306.34,686.198 1306.9,686.198 1307.46,686.198 1308.02,686.198 1308.58,686.198 1309.14,686.198 1309.7,686.198 1310.26,686.198 1310.82,686.198 1311.38,686.198 1311.93,686.198 1312.49,686.198 1313.05,686.198 1313.61,686.198 1314.17,686.198 1314.73,686.198 1315.29,686.198 1315.85,686.198 1316.41,686.198 1316.97,686.198 1317.53,686.198 1318.09,686.198 1318.65,686.198 1319.2,686.198 1319.76,686.198 1320.32,686.198 1320.88,686.198 1321.44,686.198 1322,686.198 1322.56,686.198 1323.12,686.198 1323.68,686.198 1324.24,686.198 1324.8,686.198 1325.36,686.198 1325.92,686.198 1326.47,686.198 1327.03,686.198 1327.59,686.198 1328.15,686.198 1328.71,686.198 1329.27,686.198 1329.83,686.198 1330.39,686.198 1330.95,686.198 1331.51,686.198 1332.07,686.198 1332.63,686.198 1333.19,686.198 1333.75,686.198 1334.3,686.198 1334.86,686.198 1335.42,686.198 1335.98,686.198 1336.54,686.198 1337.1,686.198 1337.66,686.198 1338.22,686.198 1338.78,686.198 1339.34,686.198 1339.9,686.198 1340.46,686.198 1341.02,686.198 1341.57,686.198 1342.13,686.198 1342.69,686.198 1343.25,686.198 1343.81,686.198 1344.37,686.198 1344.93,686.198 1345.49,686.198 1346.05,686.198 1346.61,686.198 1347.17,686.198 1347.73,686.198 1348.29,686.198 1348.84,686.198 1349.4,686.198 1349.96,686.198 1350.52,686.198 1351.08,686.198 1351.64,686.198 1352.2,686.198 1352.76,686.198 1353.32,686.198 1353.88,686.198 1354.44,686.198 1355,686.198 1355.56,686.198 1356.12,686.198 1356.67,686.198 1357.23,686.198 1357.79,686.198 1358.35,686.198 1358.91,686.198 1359.47,686.198 1360.03,686.198 1360.59,686.198 1361.15,686.198 1361.71,686.198 1362.27,686.198 1362.83,686.198 1363.39,686.198 1363.94,686.198 1364.5,686.198 1365.06,686.198 1365.62,686.198 1366.18,686.198 1366.74,686.198 1367.3,686.198 1367.86,686.198 1368.42,686.198 1368.98,686.198 1369.54,686.198 1370.1,686.198 1370.66,686.198 1371.21,686.198 1371.77,686.198 1372.33,686.198 1372.89,686.198 1373.45,686.198 1374.01,686.198 1374.57,686.198 1375.13,686.198 1375.69,686.198 1376.25,686.198 1376.81,686.198 1377.37,686.198 1377.93,686.198 1378.49,686.198 1379.04,686.198 1379.6,686.198 1380.16,686.198 1380.72,686.198 1381.28,686.198 1381.84,686.198 1382.4,686.198 1382.96,686.198 1383.52,686.198 1384.08,686.198 1384.64,686.198 1385.2,686.198 1385.76,686.198 1386.31,686.198 1386.87,686.198 1387.43,686.198 1387.99,686.198 1388.55,686.198 1389.11,686.198 1389.67,686.198 1390.23,686.198 1390.79,686.198 1391.35,686.198 1391.91,686.198 1392.47,686.198 1393.03,686.198 1393.58,686.198 1394.14,686.198 1394.7,686.198 1395.26,686.198 1395.82,686.198 1396.38,686.198 1396.94,686.198 1397.5,686.198 1398.06,686.198 1398.62,686.198 1399.18,686.198 1399.74,686.198 1400.3,686.198 1400.86,686.198 1401.41,686.198 1401.97,686.198 1402.53,686.198 1403.09,686.198 1403.65,686.198 1404.21,686.198 1404.77,686.198 1405.33,686.198 1405.89,686.198 1406.45,686.198 1407.01,686.198 1407.57,686.198 1408.13,686.198 1408.68,686.198 1409.24,686.198 1409.8,686.198 1410.36,686.198 1410.92,686.198 1411.48,686.198 1412.04,686.198 1412.6,686.198 1413.16,686.198 1413.72,686.198 1414.28,686.198 1414.84,686.198 1415.4,686.198 1415.95,686.198 1416.51,686.198 1417.07,686.198 1417.63,686.198 1418.19,686.198 1418.75,686.198 1419.31,686.198 1419.87,686.198 1420.43,686.198 1420.99,686.198 1421.55,686.198 1422.11,686.198 1422.67,686.198 1423.23,686.198 1423.78,686.198 1424.34,686.198 1424.9,686.198 1425.46,686.198 1426.02,686.198 1426.58,686.198 1427.14,686.198 1427.7,686.198 1428.26,686.198 1428.82,686.198 1429.38,686.198 1429.94,686.198 1430.5,686.198 1431.05,686.198 1431.61,686.198 1432.17,686.198 1432.73,686.198 1433.29,686.198 1433.85,686.198 1434.41,686.198 1434.97,686.198 1435.53,686.198 1436.09,686.198 1436.65,686.198 1437.21,686.198 1437.77,686.198 1438.33,686.198 1438.88,686.198 1439.44,686.198 1440,686.198 1440.56,686.198 1441.12,686.198 1441.68,686.198 1442.24,686.198 1442.8,686.198 1443.36,686.198 1443.92,686.198 1444.48,686.198 1445.04,686.198 1445.6,686.198 1446.15,686.198 1446.71,686.198 1447.27,686.198 1447.83,686.198 1448.39,686.198 1448.95,686.198 1449.51,686.198 1450.07,686.198 1450.63,686.198 1451.19,686.198 1451.75,686.198 1452.31,686.198 1452.87,686.198 1453.42,686.198 1453.98,686.198 1454.54,686.198 1455.1,686.198 1455.66,686.198 1456.22,686.198 1456.78,686.198 1457.34,686.198 1457.9,686.198 1458.46,686.198 1459.02,686.198 1459.58,686.198 1460.14,686.198 1460.7,686.198 1461.25,686.198 1461.81,686.198 1462.37,686.198 1462.93,686.198 1463.49,686.198 1464.05,686.198 1464.61,686.198 1465.17,686.198 1465.73,686.198 1466.29,686.198 1466.85,686.198 1467.41,686.198 1467.97,686.198 1468.52,686.198 1469.08,686.198 1469.64,686.198 1470.2,686.198 1470.76,686.198 1471.32,686.198 1471.88,686.198 1472.44,686.198 1473,686.198 1473.56,686.198 1474.12,686.198 1474.68,686.198 1475.24,686.198 1475.79,686.198 1476.35,686.198 1476.91,686.198 1477.47,686.198 1478.03,686.198 1478.59,686.198 1479.15,686.198 1479.71,686.198 1480.27,686.198 1480.83,686.198 1481.39,686.198 1481.95,686.198 1482.51,686.198 1483.07,686.198 1483.62,686.198 1484.18,686.198 1484.74,686.198 1485.3,686.198 1485.86,686.198 1486.42,686.198 1486.98,686.198 1487.54,686.198 1488.1,686.198 1488.66,686.198 1489.22,686.198 1489.78,686.198 1490.34,686.198 1490.89,686.198 1491.45,686.198 1492.01,686.198 1492.57,686.198 1493.13,686.198 1493.69,686.198 1494.25,686.198 1494.81,686.198 1495.37,686.198 1495.93,686.198 1496.49,686.198 1497.05,686.198 1497.61,686.198 1498.16,686.198 1498.72,686.198 1499.28,686.198 1499.84,686.198 1500.4,686.198 1500.96,686.198 1501.52,686.198 1502.08,686.198 1502.64,686.198 1503.2,686.198 1503.76,686.198 1504.32,686.198 1504.88,686.198 1505.44,686.198 1505.99,686.198 1506.55,686.198 1507.11,686.198 1507.67,686.198 1508.23,686.198 1508.79,686.198 1509.35,686.198 1509.91,686.198 1510.47,686.198 1511.03,686.198 1511.59,686.198 1512.15,686.198 1512.71,686.198 1513.26,686.198 1513.82,686.198 1514.38,686.198 1514.94,686.198 1515.5,686.198 1516.06,686.198 1516.62,686.198 1517.18,686.198 1517.74,686.198 1518.3,686.198 1518.86,686.198 1519.42,686.198 1519.98,686.198 1520.53,686.198 1521.09,686.198 1521.65,686.198 1522.21,686.198 1522.77,686.198 1523.33,686.198 1523.89,686.198 1524.45,686.198 1525.01,686.198 1525.57,686.198 1526.13,686.198 1526.69,686.198 1527.25,686.198 1527.81,686.198 1528.36,686.198 1528.92,686.198 1529.48,686.198 1530.04,686.198 1530.6,686.198 1531.16,686.198 1531.72,686.198 1532.28,686.198 1532.84,686.198 1533.4,686.198 1533.96,686.198 1534.52,686.198 1535.08,686.198 1535.63,686.198 1536.19,686.198 1536.75,686.198 1537.31,686.198 1537.87,686.198 1538.43,686.198 1538.99,686.198 1539.55,686.198 1540.11,686.198 1540.67,686.198 1541.23,686.198 1541.79,686.198 1542.35,686.198 1542.9,686.198 1543.46,686.198 1544.02,686.198 1544.58,686.198 1545.14,686.198 1545.7,686.198 1546.26,686.198 1546.82,686.198 1547.38,686.198 1547.94,686.198 1548.5,686.198 1549.06,686.198 1549.62,686.198 1550.18,686.198 1550.73,686.198 1551.29,686.198 1551.85,686.198 1552.41,686.198 1552.97,686.198 1553.53,686.198 1554.09,686.198 1554.65,686.198 1555.21,686.198 1555.77,686.198 1556.33,686.198 1556.89,686.198 1557.45,686.198 1558,686.198 1558.56,686.198 1559.12,686.198 1559.68,686.198 1560.24,686.198 1560.8,686.198 1561.36,686.198 1561.92,686.198 1562.48,686.198 1563.04,686.198 1563.6,686.198 1564.16,686.198 1564.72,686.198 1565.28,686.198 1565.83,686.198 1566.39,686.198 1566.95,686.198 1567.51,686.198 1568.07,686.198 1568.63,686.198 1569.19,686.198 1569.75,686.198 1570.31,686.198 1570.87,686.198 1571.43,686.198 1571.99,686.198 1572.55,686.198 1573.1,686.198 1573.66,686.198 1574.22,686.198 1574.78,686.198 1575.34,686.198 1575.9,686.198 1576.46,686.198 1577.02,686.198 1577.58,686.198 1578.14,686.198 1578.7,686.198 1579.26,686.198 1579.82,686.198 1580.37,686.198 1580.93,686.198 1581.49,686.198 1582.05,686.198 1582.61,686.198 1583.17,686.198 1583.73,686.198 1584.29,686.198 1584.85,686.198 1585.41,686.198 1585.97,686.198 1586.53,686.198 1587.09,686.198 1587.65,686.198 1588.2,686.198 1588.76,686.198 1589.32,686.198 1589.88,686.198 1590.44,686.198 1591,686.198 1591.56,686.198 1592.12,686.198 1592.68,686.198 1593.24,686.198 1593.8,686.198 1594.36,686.198 1594.92,686.198 1595.47,686.198 1596.03,686.198 1596.59,686.198 1597.15,686.198 1597.71,686.198 1598.27,686.198 1598.83,686.198 1599.39,686.198 1599.95,686.198 1600.51,686.198 1601.07,686.198 1601.63,686.198 1602.19,686.198 1602.74,686.198 1603.3,686.198 1603.86,686.198 1604.42,686.198 1604.98,686.198 1605.54,686.198 1606.1,686.198 1606.66,686.198 1607.22,686.198 1607.78,686.198 1608.34,686.198 1608.9,686.198 1609.46,686.198 1610.02,686.198 1610.57,686.198 1611.13,686.198 1611.69,686.198 1612.25,686.198 1612.81,686.198 1613.37,686.198 1613.93,686.198 1614.49,686.198 1615.05,686.198 1615.61,686.198 1616.17,686.198 1616.73,686.198 1617.29,686.198 1617.84,686.198 1618.4,686.198 1618.96,686.198 1619.52,686.198 1620.08,686.198 1620.64,686.198 1621.2,686.198 1621.76,686.198 1622.32,686.198 1622.88,686.198 1623.44,686.198 1624,686.198 1624.56,686.198 1625.11,686.198 1625.67,686.198 1626.23,686.198 1626.79,686.198 1627.35,686.198 1627.91,686.198 1628.47,686.198 1629.03,686.198 1629.59,686.198 1630.15,686.198 1630.71,686.198 1631.27,686.198 1631.83,686.198 1632.39,686.198 1632.94,686.198 1633.5,686.198 1634.06,686.198 1634.62,686.198 1635.18,686.198 1635.74,686.198 1636.3,686.198 1636.86,686.198 1637.42,686.198 1637.98,686.198 1638.54,686.198 1639.1,686.198 1639.66,686.198 1640.21,686.198 1640.77,686.198 1641.33,686.198 1641.89,686.198 1642.45,686.198 1643.01,686.198 1643.57,686.198 1644.13,686.198 1644.69,686.198 1645.25,686.198 1645.81,686.198 1646.37,686.198 1646.93,686.198 1647.48,686.198 1648.04,686.198 1648.6,686.198 1649.16,686.198 1649.72,686.198 1650.28,686.198 1650.84,686.198 1651.4,686.198 1651.96,686.198 1652.52,686.198 1653.08,686.198 1653.64,686.198 1654.2,686.198 1654.76,686.198 1655.31,686.198 1655.87,686.198 1656.43,686.198 1656.99,686.198 1657.55,686.198 1658.11,686.198 1658.67,686.198 1659.23,686.198 1659.79,686.198 1660.35,686.198 1660.91,686.198 1661.47,686.198 1662.03,686.198 1662.58,686.198 1663.14,686.198 1663.7,686.198 1664.26,686.198 1664.82,686.198 1665.38,686.198 1665.94,686.198 1666.5,686.198 1667.06,686.198 1667.62,686.198 1668.18,686.198 1668.74,686.198 1669.3,686.198 1669.85,686.198 1670.41,686.198 1670.97,686.198 1671.53,686.198 1672.09,686.198 1672.65,686.198 1673.21,686.198 1673.77,686.198 1674.33,686.198 1674.89,686.198 1675.45,686.198 1676.01,686.198 1676.57,686.198 1677.13,686.198 1677.68,686.198 1678.24,686.198 1678.8,686.198 1679.36,686.198 1679.92,686.198 1680.48,686.198 1681.04,686.198 1681.6,686.198 1682.16,686.198 1682.72,686.198 1683.28,686.198 1683.84,686.198 1684.4,686.198 1684.95,686.198 1685.51,686.198 1686.07,686.198 1686.63,686.198 1687.19,686.198 1687.75,686.198 1688.31,686.198 1688.87,686.198 1689.43,686.198 1689.99,686.198 1690.55,686.198 1691.11,686.198 1691.67,686.198 1692.23,686.198 1692.78,686.198 1693.34,686.198 1693.9,686.198 1694.46,686.198 1695.02,686.198 1695.58,686.198 1696.14,686.198 1696.7,686.198 1697.26,686.198 1697.82,686.198 1698.38,686.198 1698.94,686.198 1699.5,686.198 1700.05,686.198 1700.61,686.198 1701.17,686.198 1701.73,686.198 1702.29,686.198 1702.85,686.198 1703.41,686.198 1703.97,686.198 1704.53,686.198 1705.09,686.198 1705.65,686.198 1706.21,686.198 1706.77,686.198 1707.32,686.198 1707.88,686.198 1708.44,686.198 1709,686.198 1709.56,686.198 1710.12,686.198 1710.68,686.198 1711.24,686.198 1711.8,686.198 1712.36,686.198 1712.92,686.198 1713.48,686.198 1714.04,686.198 1714.6,686.198 1715.15,686.198 1715.71,686.198 1716.27,686.198 1716.83,686.198 1717.39,686.198 1717.95,686.198 1718.51,686.198 1719.07,686.198 1719.63,686.198 1720.19,686.198 1720.75,686.198 1721.31,686.198 1721.87,686.198 1722.42,686.198 1722.98,686.198 1723.54,686.198 1724.1,686.198 1724.66,686.198 1725.22,686.198 1725.78,686.198 1726.34,686.198 1726.9,686.198 1727.46,686.198 1728.02,686.198 1728.58,686.198 1729.14,686.198 1729.69,686.198 1730.25,686.198 1730.81,686.198 1731.37,686.198 1731.93,686.198 1732.49,686.198 1733.05,686.198 1733.61,686.198 1734.17,686.198 1734.73,686.198 1735.29,686.198 1735.85,686.198 1736.41,686.198 1736.97,686.198 1737.52,686.198 1738.08,686.198 1738.64,686.198 1739.2,686.198 1739.76,686.198 1740.32,686.198 1740.88,686.198 1741.44,686.198 1742,686.198 1742.56,686.198 1743.12,686.198 1743.68,686.198 1744.24,686.198 1744.79,686.198 1745.35,686.198 1745.91,686.198 1746.47,686.198 1747.03,686.198 1747.59,686.198 1748.15,686.198 1748.71,686.198 1749.27,686.198 1749.83,686.198 1750.39,686.198 1750.95,686.198 1751.51,686.198 1752.06,686.198 1752.62,686.198 1753.18,686.198 1753.74,686.198 1754.3,686.198 1754.86,686.198 1755.42,686.198 1755.98,686.198 1756.54,686.198 1757.1,686.198 1757.66,686.198 1758.22,686.198 1758.78,686.198 1759.34,686.198 1759.89,686.198 1760.45,686.198 1761.01,686.198 1761.57,686.198 1762.13,686.198 1762.69,686.198 1763.25,686.198 1763.81,686.198 1764.37,686.198 1764.93,686.198 1765.49,686.198 1766.05,686.198 1766.61,686.198 1767.16,686.198 1767.72,686.198 1768.28,686.198 1768.84,686.198 1769.4,686.198 1769.96,686.198 1770.52,686.198 1771.08,686.198 1771.64,686.198 1772.2,686.198 1772.76,686.198 1773.32,686.198 1773.88,686.198 1774.43,686.198 1774.99,686.198 1775.55,686.198 1776.11,686.198 1776.67,686.198 1777.23,686.198 1777.79,686.198 1778.35,686.198 1778.91,686.198 1779.47,686.198 1780.03,686.198 1780.59,686.198 1781.15,686.198 1781.71,686.198 1782.26,686.198 1782.82,686.198 1783.38,686.198 1783.94,686.198 1784.5,686.198 1785.06,686.198 1785.62,686.198 1786.18,686.198 1786.74,686.198 1787.3,686.198 1787.86,686.198 1788.42,686.198 1788.98,686.198 1789.53,686.198 1790.09,686.198 1790.65,686.198 1791.21,686.198 1791.77,686.198 1792.33,686.198 1792.89,686.198 1793.45,686.198 1794.01,686.198 1794.57,686.198 1795.13,686.198 1795.69,686.198 1796.25,686.198 1796.8,686.198 1797.36,686.198 1797.92,686.198 1798.48,686.198 1799.04,686.198 1799.6,686.198 1800.16,686.198 1800.72,686.198 1801.28,686.198 1801.84,686.198 1802.4,686.198 1802.96,686.198 1803.52,686.198 1804.08,686.198 1804.63,686.198 1805.19,686.198 1805.75,686.198 1806.31,686.198 1806.87,686.198 1807.43,686.198 1807.99,686.198 1808.55,686.198 1809.11,686.198 1809.67,686.198 1810.23,686.198 1810.79,686.198 1811.35,686.198 1811.9,686.198 1812.46,686.198 1813.02,686.198 1813.58,686.198 1814.14,686.198 1814.7,686.198 1815.26,686.198 1815.82,686.198 1816.38,686.198 1816.94,686.198 1817.5,686.198 1818.06,686.198 1818.62,686.198 1819.18,686.198 1819.73,686.198 1820.29,686.198 1820.85,686.198 1821.41,686.198 1821.97,686.198 1822.53,686.198 1823.09,686.198 1823.65,686.198 1824.21,686.198 1824.77,686.198 1825.33,686.198 1825.89,686.198 1826.45,686.198 1827,686.198 1827.56,686.198 1828.12,686.198 1828.68,686.198 1829.24,686.198 1829.8,686.198 1830.36,686.198 1830.92,686.198 1831.48,686.198 1832.04,686.198 1832.6,686.198 1833.16,686.198 1833.72,686.198 1834.27,686.198 1834.83,686.198 1835.39,686.198 1835.95,686.198 1836.51,686.198 1837.07,686.198 1837.63,686.198 1838.19,686.198 \"/>\n<path clip-path=\"url(#clip713)\" d=\"M720.247 684.279 L720.806 684.279 L721.365 684.279 L721.924 684.279 L722.484 684.279 L723.043 684.279 L723.602 684.279 L724.161 684.279 L724.721 684.279 L725.28 684.279 L725.839 684.279 L726.398 684.279 L726.958 684.279 L727.517 684.279 L728.076 684.279 L728.635 684.279 L729.195 684.279 L729.754 684.279 L730.313 684.279 L730.872 684.279 L731.432 684.279 L731.991 684.279 L732.55 684.279 L733.109 684.279 L733.669 684.279 L734.228 684.279 L734.787 684.279 L735.346 684.279 L735.906 684.279 L736.465 684.279 L737.024 684.279 L737.583 684.279 L738.143 684.279 L738.702 684.279 L739.261 684.279 L739.82 684.279 L740.38 684.279 L740.939 684.279 L741.498 684.279 L742.057 684.279 L742.617 684.279 L743.176 684.279 L743.735 684.279 L744.294 684.279 L744.854 684.279 L745.413 684.279 L745.972 684.279 L746.531 684.279 L747.091 684.279 L747.65 684.279 L748.209 684.279 L748.768 684.279 L749.328 684.279 L749.887 684.279 L750.446 684.279 L751.005 684.279 L751.565 684.279 L752.124 684.279 L752.683 684.279 L753.242 684.279 L753.802 684.279 L754.361 684.279 L754.92 684.279 L755.479 684.279 L756.039 684.279 L756.598 684.279 L757.157 684.279 L757.716 684.279 L758.276 684.279 L758.835 684.279 L759.394 684.279 L759.953 684.279 L760.513 684.279 L761.072 684.279 L761.631 684.279 L762.19 684.279 L762.75 684.279 L763.309 684.279 L763.868 684.279 L764.427 684.279 L764.987 684.279 L765.546 684.279 L766.105 684.279 L766.664 684.279 L767.224 684.279 L767.783 684.279 L768.342 684.279 L768.901 684.279 L769.461 684.279 L770.02 684.279 L770.579 684.279 L771.138 684.279 L771.698 684.279 L772.257 684.279 L772.816 684.279 L773.375 684.279 L773.935 684.279 L774.494 684.279 L775.053 684.279 L775.612 684.279 L776.172 684.279 L776.731 684.279 L777.29 684.279 L777.849 684.279 L778.409 684.279 L778.968 684.279 L779.527 684.279 L780.086 684.279 L780.646 684.279 L781.205 684.279 L781.764 684.279 L782.323 684.279 L782.883 684.279 L783.442 684.279 L784.001 684.279 L784.56 684.279 L785.12 684.279 L785.679 684.279 L786.238 684.279 L786.797 684.279 L787.357 684.279 L787.916 684.279 L788.475 684.279 L789.034 684.279 L789.594 684.279 L790.153 684.279 L790.712 684.279 L791.271 684.279 L791.831 684.279 L792.39 684.279 L792.949 684.279 L793.508 684.279 L794.068 684.279 L794.627 684.279 L795.186 684.279 L795.745 684.279 L796.305 684.279 L796.864 684.279 L797.423 684.279 L797.982 684.279 L798.542 684.279 L799.101 684.279 L799.66 684.279 L800.219 684.279 L800.779 684.279 L801.338 684.279 L801.897 684.279 L802.456 684.279 L803.016 684.279 L803.575 684.279 L804.134 684.279 L804.693 684.279 L805.253 684.279 L805.812 684.279 L806.371 684.279 L806.931 684.279 L807.49 684.279 L808.049 684.279 L808.608 684.279 L809.168 684.279 L809.727 684.279 L810.286 684.279 L810.845 684.279 L811.405 684.279 L811.964 684.279 L812.523 684.279 L813.082 684.279 L813.642 684.279 L814.201 684.279 L814.76 684.279 L815.319 684.279 L815.879 684.279 L816.438 684.279 L816.997 684.279 L817.556 684.279 L818.116 684.279 L818.675 684.279 L819.234 684.279 L819.793 684.279 L820.353 684.279 L820.912 684.279 L821.471 684.279 L822.03 684.279 L822.59 684.279 L823.149 684.279 L823.708 684.279 L824.267 684.279 L824.827 684.279 L825.386 684.279 L825.945 684.279 L826.504 684.279 L827.064 684.279 L827.623 684.279 L828.182 684.279 L828.741 684.279 L829.301 684.279 L829.86 684.279 L830.419 684.279 L830.978 684.279 L831.538 684.279 L832.097 684.279 L832.656 684.279 L833.215 684.279 L833.775 684.279 L834.334 684.279 L834.893 684.279 L835.452 684.279 L836.012 684.279 L836.571 684.279 L837.13 684.279 L837.689 684.279 L838.249 684.279 L838.808 684.279 L839.367 684.279 L839.926 684.279 L840.486 684.279 L841.045 684.279 L841.604 684.279 L842.163 684.279 L842.723 684.279 L843.282 684.279 L843.841 684.279 L844.4 684.279 L844.96 684.279 L845.519 684.279 L846.078 684.279 L846.637 684.279 L847.197 684.279 L847.756 684.279 L848.315 684.279 L848.874 684.279 L849.434 684.279 L849.993 684.279 L850.552 684.279 L851.111 684.279 L851.671 684.279 L852.23 684.279 L852.789 684.279 L853.348 684.279 L853.908 684.279 L854.467 684.279 L855.026 684.279 L855.585 684.279 L856.145 684.279 L856.704 684.279 L857.263 684.279 L857.822 684.279 L858.382 684.279 L858.941 684.279 L859.5 684.279 L860.059 684.279 L860.619 684.279 L861.178 684.279 L861.737 684.279 L862.296 684.279 L862.856 684.279 L863.415 684.279 L863.974 684.279 L864.533 684.279 L865.093 684.279 L865.652 684.279 L866.211 684.279 L866.77 684.279 L867.33 684.279 L867.889 684.279 L868.448 684.279 L869.007 684.279 L869.567 684.279 L870.126 684.279 L870.685 684.279 L871.244 684.279 L871.804 684.279 L872.363 684.279 L872.922 684.279 L873.481 684.279 L874.041 684.279 L874.6 684.279 L875.159 684.279 L875.718 684.279 L876.278 684.279 L876.837 684.279 L877.396 684.279 L877.955 684.279 L878.515 684.279 L879.074 684.279 L879.633 684.279 L880.192 684.279 L880.752 684.279 L881.311 684.279 L881.87 684.279 L882.429 684.279 L882.989 684.279 L883.548 684.279 L884.107 684.279 L884.666 684.279 L885.226 684.279 L885.785 684.279 L886.344 684.279 L886.903 684.279 L887.463 684.279 L888.022 684.279 L888.581 684.279 L889.14 684.279 L889.7 684.279 L890.259 684.279 L890.818 684.279 L891.377 684.279 L891.937 684.279 L892.496 684.279 L893.055 684.279 L893.614 684.279 L894.174 684.279 L894.733 684.279 L895.292 684.279 L895.851 684.279 L896.411 684.279 L896.97 684.279 L897.529 684.279 L898.088 684.279 L898.648 684.279 L899.207 684.279 L899.766 684.279 L900.325 684.279 L900.885 684.279 L901.444 684.279 L902.003 684.279 L902.562 684.279 L903.122 684.279 L903.681 684.279 L904.24 684.279 L904.799 684.279 L905.359 684.279 L905.918 684.279 L906.477 684.279 L907.036 684.279 L907.596 684.279 L908.155 684.279 L908.714 684.279 L909.273 684.279 L909.833 684.279 L910.392 684.279 L910.951 684.279 L911.51 684.279 L912.07 684.279 L912.629 684.279 L913.188 684.279 L913.747 684.279 L914.307 684.279 L914.866 684.279 L915.425 684.279 L915.984 684.279 L916.544 684.279 L917.103 684.279 L917.662 684.279 L918.221 684.279 L918.781 684.279 L919.34 684.279 L919.899 684.279 L920.458 684.279 L921.018 684.279 L921.577 684.279 L922.136 684.279 L922.695 684.279 L923.255 684.279 L923.814 684.279 L924.373 684.279 L924.932 684.279 L925.492 684.279 L926.051 684.279 L926.61 684.279 L927.169 684.279 L927.729 684.279 L928.288 684.279 L928.847 684.279 L929.406 684.279 L929.966 684.279 L930.525 684.279 L931.084 684.279 L931.644 684.279 L932.203 684.279 L932.762 684.279 L933.321 684.279 L933.881 684.279 L934.44 684.279 L934.999 684.279 L935.558 684.279 L936.118 684.279 L936.677 684.279 L937.236 684.279 L937.795 684.279 L938.355 684.279 L938.914 684.279 L939.473 684.279 L940.032 684.279 L940.592 684.279 L941.151 684.279 L941.71 684.279 L942.269 684.279 L942.829 684.279 L943.388 684.279 L943.947 684.279 L944.506 684.279 L945.066 684.279 L945.625 684.279 L946.184 684.279 L946.743 684.279 L947.303 684.279 L947.862 684.279 L948.421 684.279 L948.98 684.279 L949.54 684.279 L950.099 684.279 L950.658 684.279 L951.217 684.279 L951.777 684.279 L952.336 684.279 L952.895 684.279 L953.454 684.279 L954.014 684.279 L954.573 684.279 L955.132 684.279 L955.691 684.279 L956.251 684.279 L956.81 684.279 L957.369 684.279 L957.928 684.279 L958.488 684.279 L959.047 684.279 L959.606 684.279 L960.165 684.279 L960.725 684.279 L961.284 684.279 L961.843 684.279 L962.402 684.279 L962.962 684.279 L963.521 684.279 L964.08 684.279 L964.639 684.279 L965.199 684.279 L965.758 684.279 L966.317 684.279 L966.876 684.279 L967.436 684.279 L967.995 684.279 L968.554 684.279 L969.113 684.279 L969.673 684.279 L970.232 684.279 L970.791 684.279 L971.35 684.279 L971.91 684.279 L972.469 684.279 L973.028 684.279 L973.587 684.279 L974.147 684.279 L974.706 684.279 L975.265 684.279 L975.824 684.279 L976.384 684.279 L976.943 684.279 L977.502 684.279 L978.061 684.279 L978.621 684.279 L979.18 684.279 L979.739 684.279 L980.298 684.279 L980.858 684.279 L981.417 684.279 L981.976 684.279 L982.535 684.279 L983.095 684.279 L983.654 684.279 L984.213 684.279 L984.772 684.279 L985.332 684.279 L985.891 684.279 L986.45 684.279 L987.009 684.279 L987.569 684.279 L988.128 684.279 L988.687 684.279 L989.246 684.279 L989.806 684.279 L990.365 684.279 L990.924 684.279 L991.483 684.279 L992.043 684.279 L992.602 684.279 L993.161 684.279 L993.72 684.279 L994.28 684.279 L994.839 684.279 L995.398 684.279 L995.957 684.279 L996.517 684.279 L997.076 684.279 L997.635 684.279 L998.194 684.279 L998.754 684.279 L999.313 684.279 L999.872 684.279 L1000.43 684.279 L1000.99 684.279 L1001.55 684.279 L1002.11 684.279 L1002.67 684.279 L1003.23 684.279 L1003.79 684.279 L1004.35 684.279 L1004.91 684.279 L1005.46 684.279 L1006.02 684.279 L1006.58 684.279 L1007.14 684.279 L1007.7 684.279 L1008.26 684.279 L1008.82 684.279 L1009.38 684.279 L1009.94 684.279 L1010.5 684.279 L1011.06 684.279 L1011.62 684.279 L1012.18 684.279 L1012.73 684.279 L1013.29 684.279 L1013.85 684.279 L1014.41 684.279 L1014.97 684.279 L1015.53 684.279 L1016.09 684.279 L1016.65 684.279 L1017.21 684.279 L1017.77 684.279 L1018.33 684.279 L1018.89 684.279 L1019.45 684.279 L1020.01 684.279 L1020.56 684.279 L1021.12 684.279 L1021.68 684.279 L1022.24 684.279 L1022.8 684.279 L1023.36 684.279 L1023.92 684.279 L1024.48 684.279 L1025.04 684.279 L1025.6 684.279 L1026.16 684.279 L1026.72 684.279 L1027.28 684.279 L1027.83 684.279 L1028.39 684.279 L1028.95 684.279 L1029.51 684.279 L1030.07 684.279 L1030.63 684.279 L1031.19 684.279 L1031.75 684.279 L1032.31 684.279 L1032.87 684.279 L1033.43 684.279 L1033.99 684.279 L1034.55 684.279 L1035.1 684.279 L1035.66 684.279 L1036.22 684.279 L1036.78 684.279 L1037.34 684.279 L1037.9 684.279 L1038.46 684.279 L1039.02 684.279 L1039.58 684.279 L1040.14 684.279 L1040.7 684.279 L1041.26 684.279 L1041.82 684.279 L1042.38 684.279 L1042.93 684.279 L1043.49 684.279 L1044.05 684.279 L1044.61 684.279 L1045.17 684.279 L1045.73 684.279 L1046.29 684.279 L1046.85 684.279 L1047.41 684.279 L1047.97 684.279 L1048.53 684.279 L1049.09 684.279 L1049.65 684.279 L1050.2 684.279 L1050.76 684.279 L1051.32 684.279 L1051.88 684.279 L1052.44 684.279 L1053 684.279 L1053.56 684.279 L1054.12 684.279 L1054.68 684.279 L1055.24 684.279 L1055.8 684.279 L1056.36 684.279 L1056.92 684.279 L1057.48 684.279 L1058.03 684.279 L1058.59 684.279 L1059.15 684.279 L1059.71 684.279 L1060.27 684.279 L1060.83 684.279 L1061.39 684.279 L1061.95 684.279 L1062.51 684.279 L1063.07 684.279 L1063.63 684.279 L1064.19 684.279 L1064.75 684.279 L1065.3 684.279 L1065.86 684.279 L1066.42 684.279 L1066.98 684.279 L1067.54 684.279 L1068.1 684.279 L1068.66 684.279 L1069.22 684.279 L1069.78 684.279 L1070.34 684.279 L1070.9 684.279 L1071.46 684.279 L1072.02 684.279 L1072.57 684.279 L1073.13 684.279 L1073.69 684.279 L1074.25 684.279 L1074.81 684.279 L1075.37 684.279 L1075.93 684.279 L1076.49 684.279 L1077.05 684.279 L1077.61 684.279 L1078.17 684.279 L1078.73 684.279 L1079.29 684.279 L1079.85 684.279 L1080.4 684.279 L1080.96 684.279 L1081.52 684.279 L1082.08 684.279 L1082.64 684.279 L1083.2 684.279 L1083.76 684.279 L1084.32 684.279 L1084.88 684.279 L1085.44 684.279 L1086 684.279 L1086.56 684.279 L1087.12 684.279 L1087.67 684.279 L1088.23 684.279 L1088.79 684.279 L1089.35 684.279 L1089.91 684.279 L1090.47 684.279 L1091.03 684.279 L1091.59 684.279 L1092.15 684.279 L1092.71 684.279 L1093.27 684.279 L1093.83 684.279 L1094.39 684.279 L1094.94 684.279 L1095.5 684.279 L1096.06 684.279 L1096.62 684.279 L1097.18 684.279 L1097.74 684.279 L1098.3 684.279 L1098.86 684.279 L1099.42 684.279 L1099.98 684.279 L1100.54 684.279 L1101.1 684.279 L1101.66 684.279 L1102.22 684.279 L1102.77 684.279 L1103.33 684.279 L1103.89 684.279 L1104.45 684.279 L1105.01 684.279 L1105.57 684.279 L1106.13 684.279 L1106.69 684.279 L1107.25 684.279 L1107.81 684.279 L1108.37 684.279 L1108.93 684.279 L1109.49 684.279 L1110.04 684.279 L1110.6 684.279 L1111.16 684.279 L1111.72 684.279 L1112.28 684.279 L1112.84 684.279 L1113.4 684.279 L1113.96 684.279 L1114.52 684.279 L1115.08 684.279 L1115.64 684.279 L1116.2 684.279 L1116.76 684.279 L1117.31 684.279 L1117.87 684.279 L1118.43 684.279 L1118.99 684.279 L1119.55 684.279 L1120.11 684.279 L1120.67 684.279 L1121.23 684.279 L1121.79 684.279 L1122.35 684.279 L1122.91 684.279 L1123.47 684.279 L1124.03 684.279 L1124.59 684.279 L1125.14 684.279 L1125.7 684.279 L1126.26 684.279 L1126.82 684.279 L1127.38 684.279 L1127.94 684.279 L1128.5 684.279 L1129.06 684.279 L1129.62 684.279 L1130.18 684.279 L1130.74 684.279 L1131.3 684.279 L1131.86 684.279 L1132.41 684.279 L1132.97 684.279 L1133.53 684.279 L1134.09 684.279 L1134.65 684.279 L1135.21 684.279 L1135.77 684.279 L1136.33 684.279 L1136.89 684.279 L1137.45 684.279 L1138.01 684.279 L1138.57 684.279 L1139.13 684.279 L1139.68 684.279 L1140.24 684.279 L1140.8 684.279 L1141.36 684.279 L1141.92 684.279 L1142.48 684.279 L1143.04 684.279 L1143.6 684.279 L1144.16 684.279 L1144.72 684.279 L1145.28 684.279 L1145.84 684.279 L1146.4 684.279 L1146.96 684.279 L1147.51 684.279 L1148.07 684.279 L1148.63 684.279 L1149.19 684.279 L1149.75 684.279 L1150.31 684.279 L1150.87 684.279 L1151.43 684.279 L1151.99 684.279 L1152.55 684.279 L1153.11 684.279 L1153.67 684.279 L1154.23 684.279 L1154.78 684.279 L1155.34 684.279 L1155.9 684.279 L1156.46 684.279 L1157.02 684.279 L1157.58 684.279 L1158.14 684.279 L1158.7 684.279 L1159.26 684.279 L1159.82 684.279 L1160.38 684.279 L1160.94 684.279 L1161.5 684.279 L1162.05 684.279 L1162.61 684.279 L1163.17 684.279 L1163.73 684.279 L1164.29 684.279 L1164.85 684.279 L1165.41 684.279 L1165.97 684.279 L1166.53 684.279 L1167.09 684.279 L1167.65 684.279 L1168.21 684.279 L1168.77 684.279 L1169.33 684.279 L1169.88 684.279 L1170.44 684.279 L1171 684.279 L1171.56 684.279 L1172.12 684.279 L1172.68 684.279 L1173.24 684.279 L1173.8 684.279 L1174.36 684.279 L1174.92 684.279 L1175.48 684.279 L1176.04 684.279 L1176.6 684.279 L1177.15 684.279 L1177.71 684.279 L1178.27 684.279 L1178.83 684.279 L1179.39 684.279 L1179.95 684.279 L1180.51 684.279 L1181.07 684.279 L1181.63 684.279 L1182.19 684.279 L1182.75 684.279 L1183.31 684.279 L1183.87 684.279 L1184.43 684.279 L1184.98 684.279 L1185.54 684.279 L1186.1 684.279 L1186.66 684.279 L1187.22 684.279 L1187.78 684.279 L1188.34 684.279 L1188.9 684.279 L1189.46 684.279 L1190.02 684.279 L1190.58 684.279 L1191.14 684.279 L1191.7 684.279 L1192.25 684.279 L1192.81 684.279 L1193.37 684.279 L1193.93 684.279 L1194.49 684.279 L1195.05 684.279 L1195.61 684.279 L1196.17 684.279 L1196.73 684.279 L1197.29 684.279 L1197.85 684.279 L1198.41 684.279 L1198.97 684.279 L1199.52 684.279 L1200.08 684.279 L1200.64 684.279 L1201.2 684.279 L1201.76 684.279 L1202.32 684.279 L1202.88 684.279 L1203.44 684.279 L1204 684.279 L1204.56 684.279 L1205.12 684.279 L1205.68 684.279 L1206.24 684.279 L1206.8 684.279 L1207.35 684.279 L1207.91 684.279 L1208.47 684.279 L1209.03 684.279 L1209.59 684.279 L1210.15 684.279 L1210.71 684.279 L1211.27 684.279 L1211.83 684.279 L1212.39 684.279 L1212.95 684.279 L1213.51 684.279 L1214.07 684.279 L1214.62 684.279 L1215.18 684.279 L1215.74 684.279 L1216.3 684.279 L1216.86 684.279 L1217.42 684.279 L1217.98 684.279 L1218.54 684.279 L1219.1 684.279 L1219.66 684.279 L1220.22 684.279 L1220.78 684.279 L1221.34 684.279 L1221.89 684.279 L1222.45 684.279 L1223.01 684.279 L1223.57 684.279 L1224.13 684.279 L1224.69 684.279 L1225.25 684.279 L1225.81 684.279 L1226.37 684.279 L1226.93 684.279 L1227.49 684.279 L1228.05 684.279 L1228.61 684.279 L1229.17 684.279 L1229.72 684.279 L1230.28 684.279 L1230.84 684.279 L1231.4 684.279 L1231.96 684.279 L1232.52 684.279 L1233.08 684.279 L1233.64 684.279 L1234.2 684.279 L1234.76 684.279 L1235.32 684.279 L1235.88 684.279 L1236.44 684.279 L1236.99 684.279 L1237.55 684.279 L1238.11 684.279 L1238.67 684.279 L1239.23 684.279 L1239.79 684.279 L1240.35 684.279 L1240.91 684.279 L1241.47 684.279 L1242.03 684.279 L1242.59 684.279 L1243.15 684.279 L1243.71 684.279 L1244.26 684.279 L1244.82 684.279 L1245.38 684.279 L1245.94 684.279 L1246.5 684.279 L1247.06 684.279 L1247.62 684.279 L1248.18 684.279 L1248.74 684.279 L1249.3 684.279 L1249.86 684.279 L1250.42 684.279 L1250.98 684.279 L1251.54 684.279 L1252.09 684.279 L1252.65 684.279 L1253.21 684.279 L1253.77 684.279 L1254.33 684.279 L1254.89 684.279 L1255.45 684.279 L1256.01 684.279 L1256.57 684.279 L1257.13 684.279 L1257.69 684.279 L1258.25 684.279 L1258.81 684.279 L1259.36 684.279 L1259.92 684.279 L1260.48 684.279 L1261.04 684.279 L1261.6 684.279 L1262.16 684.279 L1262.72 684.279 L1263.28 684.279 L1263.84 684.279 L1264.4 684.279 L1264.96 684.279 L1265.52 684.279 L1266.08 684.279 L1266.63 684.279 L1267.19 684.279 L1267.75 684.279 L1268.31 684.279 L1268.87 684.279 L1269.43 684.279 L1269.99 684.279 L1270.55 684.279 L1271.11 684.279 L1271.67 684.279 L1272.23 684.279 L1272.79 684.279 L1273.35 684.279 L1273.91 684.279 L1274.46 684.279 L1275.02 684.279 L1275.58 684.279 L1276.14 684.279 L1276.7 684.279 L1277.26 684.279 L1277.82 684.279 L1278.38 684.279 L1278.94 684.279 L1279.5 684.279 L1280.06 684.279 L1280.62 684.279 L1281.18 684.279 L1281.73 684.279 L1282.29 684.279 L1282.85 684.279 L1283.41 684.279 L1283.97 684.279 L1284.53 684.279 L1285.09 684.279 L1285.65 684.279 L1286.21 684.279 L1286.77 684.279 L1287.33 684.279 L1287.89 684.279 L1288.45 684.279 L1289 684.279 L1289.56 684.279 L1290.12 684.279 L1290.68 684.279 L1291.24 684.279 L1291.8 684.279 L1292.36 684.279 L1292.92 684.279 L1293.48 684.279 L1294.04 684.279 L1294.6 684.279 L1295.16 684.279 L1295.72 684.279 L1296.28 684.279 L1296.83 684.279 L1297.39 684.279 L1297.95 684.279 L1298.51 684.279 L1299.07 684.279 L1299.63 684.279 L1300.19 684.279 L1300.75 684.279 L1301.31 684.279 L1301.87 684.279 L1302.43 684.279 L1302.99 684.279 L1303.55 684.279 L1304.1 684.279 L1304.66 684.279 L1305.22 684.279 L1305.78 684.279 L1306.34 684.279 L1306.9 684.279 L1307.46 684.279 L1308.02 684.279 L1308.58 684.279 L1309.14 684.279 L1309.7 684.279 L1310.26 684.279 L1310.82 684.279 L1311.38 684.279 L1311.93 684.279 L1312.49 684.279 L1313.05 684.279 L1313.61 684.279 L1314.17 684.279 L1314.73 684.279 L1315.29 684.279 L1315.85 684.279 L1316.41 684.279 L1316.97 684.279 L1317.53 684.279 L1318.09 684.279 L1318.65 684.279 L1319.2 684.279 L1319.76 684.279 L1320.32 684.279 L1320.88 684.279 L1321.44 684.279 L1322 684.279 L1322.56 684.279 L1323.12 684.279 L1323.68 684.279 L1324.24 684.279 L1324.8 684.279 L1325.36 684.279 L1325.92 684.279 L1326.47 684.279 L1327.03 684.279 L1327.59 684.279 L1328.15 684.279 L1328.71 684.279 L1329.27 684.279 L1329.83 684.279 L1330.39 684.279 L1330.95 684.279 L1331.51 684.279 L1332.07 684.279 L1332.63 684.279 L1333.19 684.279 L1333.75 684.279 L1334.3 684.279 L1334.86 684.279 L1335.42 684.279 L1335.98 684.279 L1336.54 684.279 L1337.1 684.279 L1337.66 684.279 L1338.22 684.279 L1338.78 684.279 L1339.34 684.279 L1339.9 684.279 L1340.46 684.279 L1341.02 684.279 L1341.57 684.279 L1342.13 684.279 L1342.69 684.279 L1343.25 684.279 L1343.81 684.279 L1344.37 684.279 L1344.93 684.279 L1345.49 684.279 L1346.05 684.279 L1346.61 684.279 L1347.17 684.279 L1347.73 684.279 L1348.29 684.279 L1348.84 684.279 L1349.4 684.279 L1349.96 684.279 L1350.52 684.279 L1351.08 684.279 L1351.64 684.279 L1352.2 684.279 L1352.76 684.279 L1353.32 684.279 L1353.88 684.279 L1354.44 684.279 L1355 684.279 L1355.56 684.279 L1356.12 684.279 L1356.67 684.279 L1357.23 684.279 L1357.79 684.279 L1358.35 684.279 L1358.91 684.279 L1359.47 684.279 L1360.03 684.279 L1360.59 684.279 L1361.15 684.279 L1361.71 684.279 L1362.27 684.279 L1362.83 684.279 L1363.39 684.279 L1363.94 684.279 L1364.5 684.279 L1365.06 684.279 L1365.62 684.279 L1366.18 684.279 L1366.74 684.279 L1367.3 684.279 L1367.86 684.279 L1368.42 684.279 L1368.98 684.279 L1369.54 684.279 L1370.1 684.279 L1370.66 684.279 L1371.21 684.279 L1371.77 684.279 L1372.33 684.279 L1372.89 684.279 L1373.45 684.279 L1374.01 684.279 L1374.57 684.279 L1375.13 684.279 L1375.69 684.279 L1376.25 684.279 L1376.81 684.279 L1377.37 684.279 L1377.93 684.279 L1378.49 684.279 L1379.04 684.279 L1379.6 684.279 L1380.16 684.279 L1380.72 684.279 L1381.28 684.279 L1381.84 684.279 L1382.4 684.279 L1382.96 684.279 L1383.52 684.279 L1384.08 684.279 L1384.64 684.279 L1385.2 684.279 L1385.76 684.279 L1386.31 684.279 L1386.87 684.279 L1387.43 684.279 L1387.99 684.279 L1388.55 684.279 L1389.11 684.279 L1389.67 684.279 L1390.23 684.279 L1390.79 684.279 L1391.35 684.279 L1391.91 684.279 L1392.47 684.279 L1393.03 684.279 L1393.58 684.279 L1394.14 684.279 L1394.7 684.279 L1395.26 684.279 L1395.82 684.279 L1396.38 684.279 L1396.94 684.279 L1397.5 684.279 L1398.06 684.279 L1398.62 684.279 L1399.18 684.279 L1399.74 684.279 L1400.3 684.279 L1400.86 684.279 L1401.41 684.279 L1401.97 684.279 L1402.53 684.279 L1403.09 684.279 L1403.65 684.279 L1404.21 684.279 L1404.77 684.279 L1405.33 684.279 L1405.89 684.279 L1406.45 684.279 L1407.01 684.279 L1407.57 684.279 L1408.13 684.279 L1408.68 684.279 L1409.24 684.279 L1409.8 684.279 L1410.36 684.279 L1410.92 684.279 L1411.48 684.279 L1412.04 684.279 L1412.6 684.279 L1413.16 684.279 L1413.72 684.279 L1414.28 684.279 L1414.84 684.279 L1415.4 684.279 L1415.95 684.279 L1416.51 684.279 L1417.07 684.279 L1417.63 684.279 L1418.19 684.279 L1418.75 684.279 L1419.31 684.279 L1419.87 684.279 L1420.43 684.279 L1420.99 684.279 L1421.55 684.279 L1422.11 684.279 L1422.67 684.279 L1423.23 684.279 L1423.78 684.279 L1424.34 684.279 L1424.9 684.279 L1425.46 684.279 L1426.02 684.279 L1426.58 684.279 L1427.14 684.279 L1427.7 684.279 L1428.26 684.279 L1428.82 684.279 L1429.38 684.279 L1429.94 684.279 L1430.5 684.279 L1431.05 684.279 L1431.61 684.279 L1432.17 684.279 L1432.73 684.279 L1433.29 684.279 L1433.85 684.279 L1434.41 684.279 L1434.97 684.279 L1435.53 684.279 L1436.09 684.279 L1436.65 684.279 L1437.21 684.279 L1437.77 684.279 L1438.33 684.279 L1438.88 684.279 L1439.44 684.279 L1440 684.279 L1440.56 684.279 L1441.12 684.279 L1441.68 684.279 L1442.24 684.279 L1442.8 684.279 L1443.36 684.279 L1443.92 684.279 L1444.48 684.279 L1445.04 684.279 L1445.6 684.279 L1446.15 684.279 L1446.71 684.279 L1447.27 684.279 L1447.83 684.279 L1448.39 684.279 L1448.95 684.279 L1449.51 684.279 L1450.07 684.279 L1450.63 684.279 L1451.19 684.279 L1451.75 684.279 L1452.31 684.279 L1452.87 684.279 L1453.42 684.279 L1453.98 684.279 L1454.54 684.279 L1455.1 684.279 L1455.66 684.279 L1456.22 684.279 L1456.78 684.279 L1457.34 684.279 L1457.9 684.279 L1458.46 684.279 L1459.02 684.279 L1459.58 684.279 L1460.14 684.279 L1460.7 684.279 L1461.25 684.279 L1461.81 684.279 L1462.37 684.279 L1462.93 684.279 L1463.49 684.279 L1464.05 684.279 L1464.61 684.279 L1465.17 684.279 L1465.73 684.279 L1466.29 684.279 L1466.85 684.279 L1467.41 684.279 L1467.97 684.279 L1468.52 684.279 L1469.08 684.279 L1469.64 684.279 L1470.2 684.279 L1470.76 684.279 L1471.32 684.279 L1471.88 684.279 L1472.44 684.279 L1473 684.279 L1473.56 684.279 L1474.12 684.279 L1474.68 684.279 L1475.24 684.279 L1475.79 684.279 L1476.35 684.279 L1476.91 684.279 L1477.47 684.279 L1478.03 684.279 L1478.59 684.279 L1479.15 684.279 L1479.71 684.279 L1480.27 684.279 L1480.83 684.279 L1481.39 684.279 L1481.95 684.279 L1482.51 684.279 L1483.07 684.279 L1483.62 684.279 L1484.18 684.279 L1484.74 684.279 L1485.3 684.279 L1485.86 684.279 L1486.42 684.279 L1486.98 684.279 L1487.54 684.279 L1488.1 684.279 L1488.66 684.279 L1489.22 684.279 L1489.78 684.279 L1490.34 684.279 L1490.89 684.279 L1491.45 684.279 L1492.01 684.279 L1492.57 684.279 L1493.13 684.279 L1493.69 684.279 L1494.25 684.279 L1494.81 684.279 L1495.37 684.279 L1495.93 684.279 L1496.49 684.279 L1497.05 684.279 L1497.61 684.279 L1498.16 684.279 L1498.72 684.279 L1499.28 684.279 L1499.84 684.279 L1500.4 684.279 L1500.96 684.279 L1501.52 684.279 L1502.08 684.279 L1502.64 684.279 L1503.2 684.279 L1503.76 684.279 L1504.32 684.279 L1504.88 684.279 L1505.44 684.279 L1505.99 684.279 L1506.55 684.279 L1507.11 684.279 L1507.67 684.279 L1508.23 684.279 L1508.79 684.279 L1509.35 684.279 L1509.91 684.279 L1510.47 684.279 L1511.03 684.279 L1511.59 684.279 L1512.15 684.279 L1512.71 684.279 L1513.26 684.279 L1513.82 684.279 L1514.38 684.279 L1514.94 684.279 L1515.5 684.279 L1516.06 684.279 L1516.62 684.279 L1517.18 684.279 L1517.74 684.279 L1518.3 684.279 L1518.86 684.279 L1519.42 684.279 L1519.98 684.279 L1520.53 684.279 L1521.09 684.279 L1521.65 684.279 L1522.21 684.279 L1522.77 684.279 L1523.33 684.279 L1523.89 684.279 L1524.45 684.279 L1525.01 684.279 L1525.57 684.279 L1526.13 684.279 L1526.69 684.279 L1527.25 684.279 L1527.81 684.279 L1528.36 684.279 L1528.92 684.279 L1529.48 684.279 L1530.04 684.279 L1530.6 684.279 L1531.16 684.279 L1531.72 684.279 L1532.28 684.279 L1532.84 684.279 L1533.4 684.279 L1533.96 684.279 L1534.52 684.279 L1535.08 684.279 L1535.63 684.279 L1536.19 684.279 L1536.75 684.279 L1537.31 684.279 L1537.87 684.279 L1538.43 684.279 L1538.99 684.279 L1539.55 684.279 L1540.11 684.279 L1540.67 684.279 L1541.23 684.279 L1541.79 684.279 L1542.35 684.279 L1542.9 684.279 L1543.46 684.279 L1544.02 684.279 L1544.58 684.279 L1545.14 684.279 L1545.7 684.279 L1546.26 684.279 L1546.82 684.279 L1547.38 684.279 L1547.94 684.279 L1548.5 684.279 L1549.06 684.279 L1549.62 684.279 L1550.18 684.279 L1550.73 684.279 L1551.29 684.279 L1551.85 684.279 L1552.41 684.279 L1552.97 684.279 L1553.53 684.279 L1554.09 684.279 L1554.65 684.279 L1555.21 684.279 L1555.77 684.279 L1556.33 684.279 L1556.89 684.279 L1557.45 684.279 L1558 684.279 L1558.56 684.279 L1559.12 684.279 L1559.68 684.279 L1560.24 684.279 L1560.8 684.279 L1561.36 684.279 L1561.92 684.279 L1562.48 684.279 L1563.04 684.279 L1563.6 684.279 L1564.16 684.279 L1564.72 684.279 L1565.28 684.279 L1565.83 684.279 L1566.39 684.279 L1566.95 684.279 L1567.51 684.279 L1568.07 684.279 L1568.63 684.279 L1569.19 684.279 L1569.75 684.279 L1570.31 684.279 L1570.87 684.279 L1571.43 684.279 L1571.99 684.279 L1572.55 684.279 L1573.1 684.279 L1573.66 684.279 L1574.22 684.279 L1574.78 684.279 L1575.34 684.279 L1575.9 684.279 L1576.46 684.279 L1577.02 684.279 L1577.58 684.279 L1578.14 684.279 L1578.7 684.279 L1579.26 684.279 L1579.82 684.279 L1580.37 684.279 L1580.93 684.279 L1581.49 684.279 L1582.05 684.279 L1582.61 684.279 L1583.17 684.279 L1583.73 684.279 L1584.29 684.279 L1584.85 684.279 L1585.41 684.279 L1585.97 684.279 L1586.53 684.279 L1587.09 684.279 L1587.65 684.279 L1588.2 684.279 L1588.76 684.279 L1589.32 684.279 L1589.88 684.279 L1590.44 684.279 L1591 684.279 L1591.56 684.279 L1592.12 684.279 L1592.68 684.279 L1593.24 684.279 L1593.8 684.279 L1594.36 684.279 L1594.92 684.279 L1595.47 684.279 L1596.03 684.279 L1596.59 684.279 L1597.15 684.279 L1597.71 684.279 L1598.27 684.279 L1598.83 684.279 L1599.39 684.279 L1599.95 684.279 L1600.51 684.279 L1601.07 684.279 L1601.63 684.279 L1602.19 684.279 L1602.74 684.279 L1603.3 684.279 L1603.86 684.279 L1604.42 684.279 L1604.98 684.279 L1605.54 684.279 L1606.1 684.279 L1606.66 684.279 L1607.22 684.279 L1607.78 684.279 L1608.34 684.279 L1608.9 684.279 L1609.46 684.279 L1610.02 684.279 L1610.57 684.279 L1611.13 684.279 L1611.69 684.279 L1612.25 684.279 L1612.81 684.279 L1613.37 684.279 L1613.93 684.279 L1614.49 684.279 L1615.05 684.279 L1615.61 684.279 L1616.17 684.279 L1616.73 684.279 L1617.29 684.279 L1617.84 684.279 L1618.4 684.279 L1618.96 684.279 L1619.52 684.279 L1620.08 684.279 L1620.64 684.279 L1621.2 684.279 L1621.76 684.279 L1622.32 684.279 L1622.88 684.279 L1623.44 684.279 L1624 684.279 L1624.56 684.279 L1625.11 684.279 L1625.67 684.279 L1626.23 684.279 L1626.79 684.279 L1627.35 684.279 L1627.91 684.279 L1628.47 684.279 L1629.03 684.279 L1629.59 684.279 L1630.15 684.279 L1630.71 684.279 L1631.27 684.279 L1631.83 684.279 L1632.39 684.279 L1632.94 684.279 L1633.5 684.279 L1634.06 684.279 L1634.62 684.279 L1635.18 684.279 L1635.74 684.279 L1636.3 684.279 L1636.86 684.279 L1637.42 684.279 L1637.98 684.279 L1638.54 684.279 L1639.1 684.279 L1639.66 684.279 L1640.21 684.279 L1640.77 684.279 L1641.33 684.279 L1641.89 684.279 L1642.45 684.279 L1643.01 684.279 L1643.57 684.279 L1644.13 684.279 L1644.69 684.279 L1645.25 684.279 L1645.81 684.279 L1646.37 684.279 L1646.93 684.279 L1647.48 684.279 L1648.04 684.279 L1648.6 684.279 L1649.16 684.279 L1649.72 684.279 L1650.28 684.279 L1650.84 684.279 L1651.4 684.279 L1651.96 684.279 L1652.52 684.279 L1653.08 684.279 L1653.64 684.279 L1654.2 684.279 L1654.76 684.279 L1655.31 684.279 L1655.87 684.279 L1656.43 684.279 L1656.99 684.279 L1657.55 684.279 L1658.11 684.279 L1658.67 684.279 L1659.23 684.279 L1659.79 684.279 L1660.35 684.279 L1660.91 684.279 L1661.47 684.279 L1662.03 684.279 L1662.58 684.279 L1663.14 684.279 L1663.7 684.279 L1664.26 684.279 L1664.82 684.279 L1665.38 684.279 L1665.94 684.279 L1666.5 684.279 L1667.06 684.279 L1667.62 684.279 L1668.18 684.279 L1668.74 684.279 L1669.3 684.279 L1669.85 684.279 L1670.41 684.279 L1670.97 684.279 L1671.53 684.279 L1672.09 684.279 L1672.65 684.279 L1673.21 684.279 L1673.77 684.279 L1674.33 684.279 L1674.89 684.279 L1675.45 684.279 L1676.01 684.279 L1676.57 684.279 L1677.13 684.279 L1677.68 684.279 L1678.24 684.279 L1678.8 684.279 L1679.36 684.279 L1679.92 684.279 L1680.48 684.279 L1681.04 684.279 L1681.6 684.279 L1682.16 684.279 L1682.72 684.279 L1683.28 684.279 L1683.84 684.279 L1684.4 684.279 L1684.95 684.279 L1685.51 684.279 L1686.07 684.279 L1686.63 684.279 L1687.19 684.279 L1687.75 684.279 L1688.31 684.279 L1688.87 684.279 L1689.43 684.279 L1689.99 684.279 L1690.55 684.279 L1691.11 684.279 L1691.67 684.279 L1692.23 684.279 L1692.78 684.279 L1693.34 684.279 L1693.9 684.279 L1694.46 684.279 L1695.02 684.279 L1695.58 684.279 L1696.14 684.279 L1696.7 684.279 L1697.26 684.279 L1697.82 684.279 L1698.38 684.279 L1698.94 684.279 L1699.5 684.279 L1700.05 684.279 L1700.61 684.279 L1701.17 684.279 L1701.73 684.279 L1702.29 684.279 L1702.85 684.279 L1703.41 684.279 L1703.97 684.279 L1704.53 684.279 L1705.09 684.279 L1705.65 684.279 L1706.21 684.279 L1706.77 684.279 L1707.32 684.279 L1707.88 684.279 L1708.44 684.279 L1709 684.279 L1709.56 684.279 L1710.12 684.279 L1710.68 684.279 L1711.24 684.279 L1711.8 684.279 L1712.36 684.279 L1712.92 684.279 L1713.48 684.279 L1714.04 684.279 L1714.6 684.279 L1715.15 684.279 L1715.71 684.279 L1716.27 684.279 L1716.83 684.279 L1717.39 684.279 L1717.95 684.279 L1718.51 684.279 L1719.07 684.279 L1719.63 684.279 L1720.19 684.279 L1720.75 684.279 L1721.31 684.279 L1721.87 684.279 L1722.42 684.279 L1722.98 684.279 L1723.54 684.279 L1724.1 684.279 L1724.66 684.279 L1725.22 684.279 L1725.78 684.279 L1726.34 684.279 L1726.9 684.279 L1727.46 684.279 L1728.02 684.279 L1728.58 684.279 L1729.14 684.279 L1729.69 684.279 L1730.25 684.279 L1730.81 684.279 L1731.37 684.279 L1731.93 684.279 L1732.49 684.279 L1733.05 684.279 L1733.61 684.279 L1734.17 684.279 L1734.73 684.279 L1735.29 684.279 L1735.85 684.279 L1736.41 684.279 L1736.97 684.279 L1737.52 684.279 L1738.08 684.279 L1738.64 684.279 L1739.2 684.279 L1739.76 684.279 L1740.32 684.279 L1740.88 684.279 L1741.44 684.279 L1742 684.279 L1742.56 684.279 L1743.12 684.279 L1743.68 684.279 L1744.24 684.279 L1744.79 684.279 L1745.35 684.279 L1745.91 684.279 L1746.47 684.279 L1747.03 684.279 L1747.59 684.279 L1748.15 684.279 L1748.71 684.279 L1749.27 684.279 L1749.83 684.279 L1750.39 684.279 L1750.95 684.279 L1751.51 684.279 L1752.06 684.279 L1752.62 684.279 L1753.18 684.279 L1753.74 684.279 L1754.3 684.279 L1754.86 684.279 L1755.42 684.279 L1755.98 684.279 L1756.54 684.279 L1757.1 684.279 L1757.66 684.279 L1758.22 684.279 L1758.78 684.279 L1759.34 684.279 L1759.89 684.279 L1760.45 684.279 L1761.01 684.279 L1761.57 684.279 L1762.13 684.279 L1762.69 684.279 L1763.25 684.279 L1763.81 684.279 L1764.37 684.279 L1764.93 684.279 L1765.49 684.279 L1766.05 684.279 L1766.61 684.279 L1767.16 684.279 L1767.72 684.279 L1768.28 684.279 L1768.84 684.279 L1769.4 684.279 L1769.96 684.279 L1770.52 684.279 L1771.08 684.279 L1771.64 684.279 L1772.2 684.279 L1772.76 684.279 L1773.32 684.279 L1773.88 684.279 L1774.43 684.279 L1774.99 684.279 L1775.55 684.279 L1776.11 684.279 L1776.67 684.279 L1777.23 684.279 L1777.79 684.279 L1778.35 684.279 L1778.91 684.279 L1779.47 684.279 L1780.03 684.279 L1780.59 684.279 L1781.15 684.279 L1781.71 684.279 L1782.26 684.279 L1782.82 684.279 L1783.38 684.279 L1783.94 684.279 L1784.5 684.279 L1785.06 684.279 L1785.62 684.279 L1786.18 684.279 L1786.74 684.279 L1787.3 684.279 L1787.86 684.279 L1788.42 684.279 L1788.98 684.279 L1789.53 684.279 L1790.09 684.279 L1790.65 684.279 L1791.21 684.279 L1791.77 684.279 L1792.33 684.279 L1792.89 684.279 L1793.45 684.279 L1794.01 684.279 L1794.57 684.279 L1795.13 684.279 L1795.69 684.279 L1796.25 684.279 L1796.8 684.279 L1797.36 684.279 L1797.92 684.279 L1798.48 684.279 L1799.04 684.279 L1799.6 684.279 L1800.16 684.279 L1800.72 684.279 L1801.28 684.279 L1801.84 684.279 L1802.4 684.279 L1802.96 684.279 L1803.52 684.279 L1804.08 684.279 L1804.63 684.279 L1805.19 684.279 L1805.75 684.279 L1806.31 684.279 L1806.87 684.279 L1807.43 684.279 L1807.99 684.279 L1808.55 684.279 L1809.11 684.279 L1809.67 684.279 L1810.23 684.279 L1810.79 684.279 L1811.35 684.279 L1811.9 684.279 L1812.46 684.279 L1813.02 684.279 L1813.58 684.279 L1814.14 684.279 L1814.7 684.279 L1815.26 684.279 L1815.82 684.279 L1816.38 684.279 L1816.94 684.279 L1817.5 684.279 L1818.06 684.279 L1818.62 684.279 L1819.18 684.279 L1819.73 684.279 L1820.29 684.279 L1820.85 684.279 L1821.41 684.279 L1821.97 684.279 L1822.53 684.279 L1823.09 684.279 L1823.65 684.279 L1824.21 684.279 L1824.77 684.279 L1825.33 684.279 L1825.89 684.279 L1826.45 684.279 L1827 684.279 L1827.56 684.279 L1828.12 684.279 L1828.68 684.279 L1829.24 684.279 L1829.8 684.279 L1830.36 684.279 L1830.92 684.279 L1831.48 684.279 L1832.04 684.279 L1832.6 684.279 L1833.16 684.279 L1833.72 684.279 L1834.27 684.279 L1834.83 684.279 L1835.39 684.279 L1835.95 684.279 L1836.51 684.279 L1837.07 684.279 L1837.63 684.279 L1838.19 684.279 L1838.19 682.609 L1837.63 682.609 L1837.07 682.609 L1836.51 682.609 L1835.95 682.609 L1835.39 682.609 L1834.83 682.609 L1834.27 682.609 L1833.72 682.609 L1833.16 682.609 L1832.6 682.609 L1832.04 682.609 L1831.48 682.609 L1830.92 682.609 L1830.36 682.609 L1829.8 682.609 L1829.24 682.609 L1828.68 682.609 L1828.12 682.609 L1827.56 682.609 L1827 682.609 L1826.45 682.609 L1825.89 682.609 L1825.33 682.609 L1824.77 682.609 L1824.21 682.609 L1823.65 682.609 L1823.09 682.609 L1822.53 682.609 L1821.97 682.609 L1821.41 682.609 L1820.85 682.609 L1820.29 682.609 L1819.73 682.609 L1819.18 682.609 L1818.62 682.609 L1818.06 682.609 L1817.5 682.609 L1816.94 682.609 L1816.38 682.609 L1815.82 682.609 L1815.26 682.609 L1814.7 682.609 L1814.14 682.609 L1813.58 682.609 L1813.02 682.609 L1812.46 682.609 L1811.9 682.609 L1811.35 682.609 L1810.79 682.609 L1810.23 682.609 L1809.67 682.609 L1809.11 682.609 L1808.55 682.609 L1807.99 682.609 L1807.43 682.609 L1806.87 682.609 L1806.31 682.609 L1805.75 682.609 L1805.19 682.609 L1804.63 682.609 L1804.08 682.609 L1803.52 682.609 L1802.96 682.609 L1802.4 682.609 L1801.84 682.609 L1801.28 682.609 L1800.72 682.609 L1800.16 682.609 L1799.6 682.609 L1799.04 682.609 L1798.48 682.609 L1797.92 682.609 L1797.36 682.609 L1796.8 682.609 L1796.25 682.609 L1795.69 682.609 L1795.13 682.609 L1794.57 682.609 L1794.01 682.609 L1793.45 682.609 L1792.89 682.609 L1792.33 682.609 L1791.77 682.609 L1791.21 682.609 L1790.65 682.609 L1790.09 682.609 L1789.53 682.609 L1788.98 682.609 L1788.42 682.609 L1787.86 682.609 L1787.3 682.609 L1786.74 682.609 L1786.18 682.609 L1785.62 682.609 L1785.06 682.609 L1784.5 682.609 L1783.94 682.609 L1783.38 682.609 L1782.82 682.609 L1782.26 682.609 L1781.71 682.609 L1781.15 682.609 L1780.59 682.609 L1780.03 682.609 L1779.47 682.609 L1778.91 682.609 L1778.35 682.609 L1777.79 682.609 L1777.23 682.609 L1776.67 682.609 L1776.11 682.609 L1775.55 682.609 L1774.99 682.609 L1774.43 682.609 L1773.88 682.609 L1773.32 682.609 L1772.76 682.609 L1772.2 682.609 L1771.64 682.609 L1771.08 682.609 L1770.52 682.609 L1769.96 682.609 L1769.4 682.609 L1768.84 682.609 L1768.28 682.609 L1767.72 682.609 L1767.16 682.609 L1766.61 682.609 L1766.05 682.609 L1765.49 682.609 L1764.93 682.609 L1764.37 682.609 L1763.81 682.609 L1763.25 682.609 L1762.69 682.609 L1762.13 682.609 L1761.57 682.609 L1761.01 682.609 L1760.45 682.609 L1759.89 682.609 L1759.34 682.609 L1758.78 682.609 L1758.22 682.609 L1757.66 682.609 L1757.1 682.609 L1756.54 682.609 L1755.98 682.609 L1755.42 682.609 L1754.86 682.609 L1754.3 682.609 L1753.74 682.609 L1753.18 682.609 L1752.62 682.609 L1752.06 682.609 L1751.51 682.609 L1750.95 682.609 L1750.39 682.609 L1749.83 682.609 L1749.27 682.609 L1748.71 682.609 L1748.15 682.609 L1747.59 682.609 L1747.03 682.609 L1746.47 682.609 L1745.91 682.609 L1745.35 682.609 L1744.79 682.609 L1744.24 682.609 L1743.68 682.609 L1743.12 682.609 L1742.56 682.609 L1742 682.609 L1741.44 682.609 L1740.88 682.609 L1740.32 682.609 L1739.76 682.609 L1739.2 682.609 L1738.64 682.609 L1738.08 682.609 L1737.52 682.609 L1736.97 682.609 L1736.41 682.609 L1735.85 682.609 L1735.29 682.609 L1734.73 682.609 L1734.17 682.609 L1733.61 682.609 L1733.05 682.609 L1732.49 682.609 L1731.93 682.609 L1731.37 682.609 L1730.81 682.609 L1730.25 682.609 L1729.69 682.609 L1729.14 682.609 L1728.58 682.609 L1728.02 682.609 L1727.46 682.609 L1726.9 682.609 L1726.34 682.609 L1725.78 682.609 L1725.22 682.609 L1724.66 682.609 L1724.1 682.609 L1723.54 682.609 L1722.98 682.609 L1722.42 682.609 L1721.87 682.609 L1721.31 682.609 L1720.75 682.609 L1720.19 682.609 L1719.63 682.609 L1719.07 682.609 L1718.51 682.609 L1717.95 682.609 L1717.39 682.609 L1716.83 682.609 L1716.27 682.609 L1715.71 682.609 L1715.15 682.609 L1714.6 682.609 L1714.04 682.609 L1713.48 682.609 L1712.92 682.609 L1712.36 682.609 L1711.8 682.609 L1711.24 682.609 L1710.68 682.609 L1710.12 682.609 L1709.56 682.609 L1709 682.609 L1708.44 682.609 L1707.88 682.609 L1707.32 682.609 L1706.77 682.609 L1706.21 682.609 L1705.65 682.609 L1705.09 682.609 L1704.53 682.609 L1703.97 682.609 L1703.41 682.609 L1702.85 682.609 L1702.29 682.609 L1701.73 682.609 L1701.17 682.609 L1700.61 682.609 L1700.05 682.609 L1699.5 682.609 L1698.94 682.609 L1698.38 682.609 L1697.82 682.609 L1697.26 682.609 L1696.7 682.609 L1696.14 682.609 L1695.58 682.609 L1695.02 682.609 L1694.46 682.609 L1693.9 682.609 L1693.34 682.609 L1692.78 682.609 L1692.23 682.609 L1691.67 682.609 L1691.11 682.609 L1690.55 682.609 L1689.99 682.609 L1689.43 682.609 L1688.87 682.609 L1688.31 682.609 L1687.75 682.609 L1687.19 682.609 L1686.63 682.609 L1686.07 682.609 L1685.51 682.609 L1684.95 682.609 L1684.4 682.609 L1683.84 682.609 L1683.28 682.609 L1682.72 682.609 L1682.16 682.609 L1681.6 682.609 L1681.04 682.609 L1680.48 682.609 L1679.92 682.609 L1679.36 682.609 L1678.8 682.609 L1678.24 682.609 L1677.68 682.609 L1677.13 682.609 L1676.57 682.609 L1676.01 682.609 L1675.45 682.609 L1674.89 682.609 L1674.33 682.609 L1673.77 682.609 L1673.21 682.609 L1672.65 682.609 L1672.09 682.609 L1671.53 682.609 L1670.97 682.609 L1670.41 682.609 L1669.85 682.609 L1669.3 682.609 L1668.74 682.609 L1668.18 682.609 L1667.62 682.609 L1667.06 682.609 L1666.5 682.609 L1665.94 682.609 L1665.38 682.609 L1664.82 682.609 L1664.26 682.609 L1663.7 682.609 L1663.14 682.609 L1662.58 682.609 L1662.03 682.609 L1661.47 682.609 L1660.91 682.609 L1660.35 682.609 L1659.79 682.609 L1659.23 682.609 L1658.67 682.609 L1658.11 682.609 L1657.55 682.609 L1656.99 682.609 L1656.43 682.609 L1655.87 682.609 L1655.31 682.609 L1654.76 682.609 L1654.2 682.609 L1653.64 682.609 L1653.08 682.609 L1652.52 682.609 L1651.96 682.609 L1651.4 682.609 L1650.84 682.609 L1650.28 682.609 L1649.72 682.609 L1649.16 682.609 L1648.6 682.609 L1648.04 682.609 L1647.48 682.609 L1646.93 682.609 L1646.37 682.609 L1645.81 682.609 L1645.25 682.609 L1644.69 682.609 L1644.13 682.609 L1643.57 682.609 L1643.01 682.609 L1642.45 682.609 L1641.89 682.609 L1641.33 682.609 L1640.77 682.609 L1640.21 682.609 L1639.66 682.609 L1639.1 682.609 L1638.54 682.609 L1637.98 682.609 L1637.42 682.609 L1636.86 682.609 L1636.3 682.609 L1635.74 682.609 L1635.18 682.609 L1634.62 682.609 L1634.06 682.609 L1633.5 682.609 L1632.94 682.609 L1632.39 682.609 L1631.83 682.609 L1631.27 682.609 L1630.71 682.609 L1630.15 682.609 L1629.59 682.609 L1629.03 682.609 L1628.47 682.609 L1627.91 682.609 L1627.35 682.609 L1626.79 682.609 L1626.23 682.609 L1625.67 682.609 L1625.11 682.609 L1624.56 682.609 L1624 682.609 L1623.44 682.609 L1622.88 682.609 L1622.32 682.609 L1621.76 682.609 L1621.2 682.609 L1620.64 682.609 L1620.08 682.609 L1619.52 682.609 L1618.96 682.609 L1618.4 682.609 L1617.84 682.609 L1617.29 682.609 L1616.73 682.609 L1616.17 682.609 L1615.61 682.609 L1615.05 682.609 L1614.49 682.609 L1613.93 682.609 L1613.37 682.609 L1612.81 682.609 L1612.25 682.609 L1611.69 682.609 L1611.13 682.609 L1610.57 682.609 L1610.02 682.609 L1609.46 682.609 L1608.9 682.609 L1608.34 682.609 L1607.78 682.609 L1607.22 682.609 L1606.66 682.609 L1606.1 682.609 L1605.54 682.609 L1604.98 682.609 L1604.42 682.609 L1603.86 682.609 L1603.3 682.609 L1602.74 682.609 L1602.19 682.609 L1601.63 682.609 L1601.07 682.609 L1600.51 682.609 L1599.95 682.609 L1599.39 682.609 L1598.83 682.609 L1598.27 682.609 L1597.71 682.609 L1597.15 682.609 L1596.59 682.609 L1596.03 682.609 L1595.47 682.609 L1594.92 682.609 L1594.36 682.609 L1593.8 682.609 L1593.24 682.609 L1592.68 682.609 L1592.12 682.609 L1591.56 682.609 L1591 682.609 L1590.44 682.609 L1589.88 682.609 L1589.32 682.609 L1588.76 682.609 L1588.2 682.609 L1587.65 682.609 L1587.09 682.609 L1586.53 682.609 L1585.97 682.609 L1585.41 682.609 L1584.85 682.609 L1584.29 682.609 L1583.73 682.609 L1583.17 682.609 L1582.61 682.609 L1582.05 682.609 L1581.49 682.609 L1580.93 682.609 L1580.37 682.609 L1579.82 682.609 L1579.26 682.609 L1578.7 682.609 L1578.14 682.609 L1577.58 682.609 L1577.02 682.609 L1576.46 682.609 L1575.9 682.609 L1575.34 682.609 L1574.78 682.609 L1574.22 682.609 L1573.66 682.609 L1573.1 682.609 L1572.55 682.609 L1571.99 682.609 L1571.43 682.609 L1570.87 682.609 L1570.31 682.609 L1569.75 682.609 L1569.19 682.609 L1568.63 682.609 L1568.07 682.609 L1567.51 682.609 L1566.95 682.609 L1566.39 682.609 L1565.83 682.609 L1565.28 682.609 L1564.72 682.609 L1564.16 682.609 L1563.6 682.609 L1563.04 682.609 L1562.48 682.609 L1561.92 682.609 L1561.36 682.609 L1560.8 682.609 L1560.24 682.609 L1559.68 682.609 L1559.12 682.609 L1558.56 682.609 L1558 682.609 L1557.45 682.609 L1556.89 682.609 L1556.33 682.609 L1555.77 682.609 L1555.21 682.609 L1554.65 682.609 L1554.09 682.609 L1553.53 682.609 L1552.97 682.609 L1552.41 682.609 L1551.85 682.609 L1551.29 682.609 L1550.73 682.609 L1550.18 682.609 L1549.62 682.609 L1549.06 682.609 L1548.5 682.609 L1547.94 682.609 L1547.38 682.609 L1546.82 682.609 L1546.26 682.609 L1545.7 682.609 L1545.14 682.609 L1544.58 682.609 L1544.02 682.609 L1543.46 682.609 L1542.9 682.609 L1542.35 682.609 L1541.79 682.609 L1541.23 682.609 L1540.67 682.609 L1540.11 682.609 L1539.55 682.609 L1538.99 682.609 L1538.43 682.609 L1537.87 682.609 L1537.31 682.609 L1536.75 682.609 L1536.19 682.609 L1535.63 682.609 L1535.08 682.609 L1534.52 682.609 L1533.96 682.609 L1533.4 682.609 L1532.84 682.609 L1532.28 682.609 L1531.72 682.609 L1531.16 682.609 L1530.6 682.609 L1530.04 682.609 L1529.48 682.609 L1528.92 682.609 L1528.36 682.609 L1527.81 682.609 L1527.25 682.609 L1526.69 682.609 L1526.13 682.609 L1525.57 682.609 L1525.01 682.609 L1524.45 682.609 L1523.89 682.609 L1523.33 682.609 L1522.77 682.609 L1522.21 682.609 L1521.65 682.609 L1521.09 682.609 L1520.53 682.609 L1519.98 682.609 L1519.42 682.609 L1518.86 682.609 L1518.3 682.609 L1517.74 682.609 L1517.18 682.609 L1516.62 682.609 L1516.06 682.609 L1515.5 682.609 L1514.94 682.609 L1514.38 682.609 L1513.82 682.609 L1513.26 682.609 L1512.71 682.609 L1512.15 682.609 L1511.59 682.609 L1511.03 682.609 L1510.47 682.609 L1509.91 682.609 L1509.35 682.609 L1508.79 682.609 L1508.23 682.609 L1507.67 682.609 L1507.11 682.609 L1506.55 682.609 L1505.99 682.609 L1505.44 682.609 L1504.88 682.609 L1504.32 682.609 L1503.76 682.609 L1503.2 682.609 L1502.64 682.609 L1502.08 682.609 L1501.52 682.609 L1500.96 682.609 L1500.4 682.609 L1499.84 682.609 L1499.28 682.609 L1498.72 682.609 L1498.16 682.609 L1497.61 682.609 L1497.05 682.609 L1496.49 682.609 L1495.93 682.609 L1495.37 682.609 L1494.81 682.609 L1494.25 682.609 L1493.69 682.609 L1493.13 682.609 L1492.57 682.609 L1492.01 682.609 L1491.45 682.609 L1490.89 682.609 L1490.34 682.609 L1489.78 682.609 L1489.22 682.609 L1488.66 682.609 L1488.1 682.609 L1487.54 682.609 L1486.98 682.609 L1486.42 682.609 L1485.86 682.609 L1485.3 682.609 L1484.74 682.609 L1484.18 682.609 L1483.62 682.609 L1483.07 682.609 L1482.51 682.609 L1481.95 682.609 L1481.39 682.609 L1480.83 682.609 L1480.27 682.609 L1479.71 682.609 L1479.15 682.609 L1478.59 682.609 L1478.03 682.609 L1477.47 682.609 L1476.91 682.609 L1476.35 682.609 L1475.79 682.609 L1475.24 682.609 L1474.68 682.609 L1474.12 682.609 L1473.56 682.609 L1473 682.609 L1472.44 682.609 L1471.88 682.609 L1471.32 682.609 L1470.76 682.609 L1470.2 682.609 L1469.64 682.609 L1469.08 682.609 L1468.52 682.609 L1467.97 682.609 L1467.41 682.609 L1466.85 682.609 L1466.29 682.609 L1465.73 682.609 L1465.17 682.609 L1464.61 682.609 L1464.05 682.609 L1463.49 682.609 L1462.93 682.609 L1462.37 682.609 L1461.81 682.609 L1461.25 682.609 L1460.7 682.609 L1460.14 682.609 L1459.58 682.609 L1459.02 682.609 L1458.46 682.609 L1457.9 682.609 L1457.34 682.609 L1456.78 682.609 L1456.22 682.609 L1455.66 682.609 L1455.1 682.609 L1454.54 682.609 L1453.98 682.609 L1453.42 682.609 L1452.87 682.609 L1452.31 682.609 L1451.75 682.609 L1451.19 682.609 L1450.63 682.609 L1450.07 682.609 L1449.51 682.609 L1448.95 682.609 L1448.39 682.609 L1447.83 682.609 L1447.27 682.609 L1446.71 682.609 L1446.15 682.609 L1445.6 682.609 L1445.04 682.609 L1444.48 682.609 L1443.92 682.609 L1443.36 682.609 L1442.8 682.609 L1442.24 682.609 L1441.68 682.609 L1441.12 682.609 L1440.56 682.609 L1440 682.609 L1439.44 682.609 L1438.88 682.609 L1438.33 682.609 L1437.77 682.609 L1437.21 682.609 L1436.65 682.609 L1436.09 682.609 L1435.53 682.609 L1434.97 682.609 L1434.41 682.609 L1433.85 682.609 L1433.29 682.609 L1432.73 682.609 L1432.17 682.609 L1431.61 682.609 L1431.05 682.609 L1430.5 682.609 L1429.94 682.609 L1429.38 682.609 L1428.82 682.609 L1428.26 682.609 L1427.7 682.609 L1427.14 682.609 L1426.58 682.609 L1426.02 682.609 L1425.46 682.609 L1424.9 682.609 L1424.34 682.609 L1423.78 682.609 L1423.23 682.609 L1422.67 682.609 L1422.11 682.609 L1421.55 682.609 L1420.99 682.609 L1420.43 682.609 L1419.87 682.609 L1419.31 682.609 L1418.75 682.609 L1418.19 682.609 L1417.63 682.609 L1417.07 682.609 L1416.51 682.609 L1415.95 682.609 L1415.4 682.609 L1414.84 682.609 L1414.28 682.609 L1413.72 682.609 L1413.16 682.609 L1412.6 682.609 L1412.04 682.609 L1411.48 682.609 L1410.92 682.609 L1410.36 682.609 L1409.8 682.609 L1409.24 682.609 L1408.68 682.609 L1408.13 682.609 L1407.57 682.609 L1407.01 682.609 L1406.45 682.609 L1405.89 682.609 L1405.33 682.609 L1404.77 682.609 L1404.21 682.609 L1403.65 682.609 L1403.09 682.609 L1402.53 682.609 L1401.97 682.609 L1401.41 682.609 L1400.86 682.609 L1400.3 682.609 L1399.74 682.609 L1399.18 682.609 L1398.62 682.609 L1398.06 682.609 L1397.5 682.609 L1396.94 682.609 L1396.38 682.609 L1395.82 682.609 L1395.26 682.609 L1394.7 682.609 L1394.14 682.609 L1393.58 682.609 L1393.03 682.609 L1392.47 682.609 L1391.91 682.609 L1391.35 682.609 L1390.79 682.609 L1390.23 682.609 L1389.67 682.609 L1389.11 682.609 L1388.55 682.609 L1387.99 682.609 L1387.43 682.609 L1386.87 682.609 L1386.31 682.609 L1385.76 682.609 L1385.2 682.609 L1384.64 682.609 L1384.08 682.609 L1383.52 682.609 L1382.96 682.609 L1382.4 682.609 L1381.84 682.609 L1381.28 682.609 L1380.72 682.609 L1380.16 682.609 L1379.6 682.609 L1379.04 682.609 L1378.49 682.609 L1377.93 682.609 L1377.37 682.609 L1376.81 682.609 L1376.25 682.609 L1375.69 682.609 L1375.13 682.609 L1374.57 682.609 L1374.01 682.609 L1373.45 682.609 L1372.89 682.609 L1372.33 682.609 L1371.77 682.609 L1371.21 682.609 L1370.66 682.609 L1370.1 682.609 L1369.54 682.609 L1368.98 682.609 L1368.42 682.609 L1367.86 682.609 L1367.3 682.609 L1366.74 682.609 L1366.18 682.609 L1365.62 682.609 L1365.06 682.609 L1364.5 682.609 L1363.94 682.609 L1363.39 682.609 L1362.83 682.609 L1362.27 682.609 L1361.71 682.609 L1361.15 682.609 L1360.59 682.609 L1360.03 682.609 L1359.47 682.609 L1358.91 682.609 L1358.35 682.609 L1357.79 682.609 L1357.23 682.609 L1356.67 682.609 L1356.12 682.609 L1355.56 682.609 L1355 682.609 L1354.44 682.609 L1353.88 682.609 L1353.32 682.609 L1352.76 682.609 L1352.2 682.609 L1351.64 682.609 L1351.08 682.609 L1350.52 682.609 L1349.96 682.609 L1349.4 682.609 L1348.84 682.609 L1348.29 682.609 L1347.73 682.609 L1347.17 682.609 L1346.61 682.609 L1346.05 682.609 L1345.49 682.609 L1344.93 682.609 L1344.37 682.609 L1343.81 682.609 L1343.25 682.609 L1342.69 682.609 L1342.13 682.609 L1341.57 682.609 L1341.02 682.609 L1340.46 682.609 L1339.9 682.609 L1339.34 682.609 L1338.78 682.609 L1338.22 682.609 L1337.66 682.609 L1337.1 682.609 L1336.54 682.609 L1335.98 682.609 L1335.42 682.609 L1334.86 682.609 L1334.3 682.609 L1333.75 682.609 L1333.19 682.609 L1332.63 682.609 L1332.07 682.609 L1331.51 682.609 L1330.95 682.609 L1330.39 682.609 L1329.83 682.609 L1329.27 682.609 L1328.71 682.609 L1328.15 682.609 L1327.59 682.609 L1327.03 682.609 L1326.47 682.609 L1325.92 682.609 L1325.36 682.609 L1324.8 682.609 L1324.24 682.609 L1323.68 682.609 L1323.12 682.609 L1322.56 682.609 L1322 682.609 L1321.44 682.609 L1320.88 682.609 L1320.32 682.609 L1319.76 682.609 L1319.2 682.609 L1318.65 682.609 L1318.09 682.609 L1317.53 682.609 L1316.97 682.609 L1316.41 682.609 L1315.85 682.609 L1315.29 682.609 L1314.73 682.609 L1314.17 682.609 L1313.61 682.609 L1313.05 682.609 L1312.49 682.609 L1311.93 682.609 L1311.38 682.609 L1310.82 682.609 L1310.26 682.609 L1309.7 682.609 L1309.14 682.609 L1308.58 682.609 L1308.02 682.609 L1307.46 682.609 L1306.9 682.609 L1306.34 682.609 L1305.78 682.609 L1305.22 682.609 L1304.66 682.609 L1304.1 682.609 L1303.55 682.609 L1302.99 682.609 L1302.43 682.609 L1301.87 682.609 L1301.31 682.609 L1300.75 682.609 L1300.19 682.609 L1299.63 682.609 L1299.07 682.609 L1298.51 682.609 L1297.95 682.609 L1297.39 682.609 L1296.83 682.609 L1296.28 682.609 L1295.72 682.609 L1295.16 682.609 L1294.6 682.609 L1294.04 682.609 L1293.48 682.609 L1292.92 682.609 L1292.36 682.609 L1291.8 682.609 L1291.24 682.609 L1290.68 682.609 L1290.12 682.609 L1289.56 682.609 L1289 682.609 L1288.45 682.609 L1287.89 682.609 L1287.33 682.609 L1286.77 682.609 L1286.21 682.609 L1285.65 682.609 L1285.09 682.609 L1284.53 682.609 L1283.97 682.609 L1283.41 682.609 L1282.85 682.609 L1282.29 682.609 L1281.73 682.609 L1281.18 682.609 L1280.62 682.609 L1280.06 682.609 L1279.5 682.609 L1278.94 682.609 L1278.38 682.609 L1277.82 682.609 L1277.26 682.609 L1276.7 682.609 L1276.14 682.609 L1275.58 682.609 L1275.02 682.609 L1274.46 682.609 L1273.91 682.609 L1273.35 682.609 L1272.79 682.609 L1272.23 682.609 L1271.67 682.609 L1271.11 682.609 L1270.55 682.609 L1269.99 682.609 L1269.43 682.609 L1268.87 682.609 L1268.31 682.609 L1267.75 682.609 L1267.19 682.609 L1266.63 682.609 L1266.08 682.609 L1265.52 682.609 L1264.96 682.609 L1264.4 682.609 L1263.84 682.609 L1263.28 682.609 L1262.72 682.609 L1262.16 682.609 L1261.6 682.609 L1261.04 682.609 L1260.48 682.609 L1259.92 682.609 L1259.36 682.609 L1258.81 682.609 L1258.25 682.609 L1257.69 682.609 L1257.13 682.609 L1256.57 682.609 L1256.01 682.609 L1255.45 682.609 L1254.89 682.609 L1254.33 682.609 L1253.77 682.609 L1253.21 682.609 L1252.65 682.609 L1252.09 682.609 L1251.54 682.609 L1250.98 682.609 L1250.42 682.609 L1249.86 682.609 L1249.3 682.609 L1248.74 682.609 L1248.18 682.609 L1247.62 682.609 L1247.06 682.609 L1246.5 682.609 L1245.94 682.609 L1245.38 682.609 L1244.82 682.609 L1244.26 682.609 L1243.71 682.609 L1243.15 682.609 L1242.59 682.609 L1242.03 682.609 L1241.47 682.609 L1240.91 682.609 L1240.35 682.609 L1239.79 682.609 L1239.23 682.609 L1238.67 682.609 L1238.11 682.609 L1237.55 682.609 L1236.99 682.609 L1236.44 682.609 L1235.88 682.609 L1235.32 682.609 L1234.76 682.609 L1234.2 682.609 L1233.64 682.609 L1233.08 682.609 L1232.52 682.609 L1231.96 682.609 L1231.4 682.609 L1230.84 682.609 L1230.28 682.609 L1229.72 682.609 L1229.17 682.609 L1228.61 682.609 L1228.05 682.609 L1227.49 682.609 L1226.93 682.609 L1226.37 682.609 L1225.81 682.609 L1225.25 682.609 L1224.69 682.609 L1224.13 682.609 L1223.57 682.609 L1223.01 682.609 L1222.45 682.609 L1221.89 682.609 L1221.34 682.609 L1220.78 682.609 L1220.22 682.609 L1219.66 682.609 L1219.1 682.609 L1218.54 682.609 L1217.98 682.609 L1217.42 682.609 L1216.86 682.609 L1216.3 682.609 L1215.74 682.609 L1215.18 682.609 L1214.62 682.609 L1214.07 682.609 L1213.51 682.609 L1212.95 682.609 L1212.39 682.609 L1211.83 682.609 L1211.27 682.609 L1210.71 682.609 L1210.15 682.609 L1209.59 682.609 L1209.03 682.609 L1208.47 682.609 L1207.91 682.609 L1207.35 682.609 L1206.8 682.609 L1206.24 682.609 L1205.68 682.609 L1205.12 682.609 L1204.56 682.609 L1204 682.609 L1203.44 682.609 L1202.88 682.609 L1202.32 682.609 L1201.76 682.609 L1201.2 682.609 L1200.64 682.609 L1200.08 682.609 L1199.52 682.609 L1198.97 682.609 L1198.41 682.609 L1197.85 682.609 L1197.29 682.609 L1196.73 682.609 L1196.17 682.609 L1195.61 682.609 L1195.05 682.609 L1194.49 682.609 L1193.93 682.609 L1193.37 682.609 L1192.81 682.609 L1192.25 682.609 L1191.7 682.609 L1191.14 682.609 L1190.58 682.609 L1190.02 682.609 L1189.46 682.609 L1188.9 682.609 L1188.34 682.609 L1187.78 682.609 L1187.22 682.609 L1186.66 682.609 L1186.1 682.609 L1185.54 682.609 L1184.98 682.609 L1184.43 682.609 L1183.87 682.609 L1183.31 682.609 L1182.75 682.609 L1182.19 682.609 L1181.63 682.609 L1181.07 682.609 L1180.51 682.609 L1179.95 682.609 L1179.39 682.609 L1178.83 682.609 L1178.27 682.609 L1177.71 682.609 L1177.15 682.609 L1176.6 682.609 L1176.04 682.609 L1175.48 682.609 L1174.92 682.609 L1174.36 682.609 L1173.8 682.609 L1173.24 682.609 L1172.68 682.609 L1172.12 682.609 L1171.56 682.609 L1171 682.609 L1170.44 682.609 L1169.88 682.609 L1169.33 682.609 L1168.77 682.609 L1168.21 682.609 L1167.65 682.609 L1167.09 682.609 L1166.53 682.609 L1165.97 682.609 L1165.41 682.609 L1164.85 682.609 L1164.29 682.609 L1163.73 682.609 L1163.17 682.609 L1162.61 682.609 L1162.05 682.609 L1161.5 682.609 L1160.94 682.609 L1160.38 682.609 L1159.82 682.609 L1159.26 682.609 L1158.7 682.609 L1158.14 682.609 L1157.58 682.609 L1157.02 682.609 L1156.46 682.609 L1155.9 682.609 L1155.34 682.609 L1154.78 682.609 L1154.23 682.609 L1153.67 682.609 L1153.11 682.609 L1152.55 682.609 L1151.99 682.609 L1151.43 682.609 L1150.87 682.609 L1150.31 682.609 L1149.75 682.609 L1149.19 682.609 L1148.63 682.609 L1148.07 682.609 L1147.51 682.609 L1146.96 682.609 L1146.4 682.609 L1145.84 682.609 L1145.28 682.609 L1144.72 682.609 L1144.16 682.609 L1143.6 682.609 L1143.04 682.609 L1142.48 682.609 L1141.92 682.609 L1141.36 682.609 L1140.8 682.609 L1140.24 682.609 L1139.68 682.609 L1139.13 682.609 L1138.57 682.609 L1138.01 682.609 L1137.45 682.609 L1136.89 682.609 L1136.33 682.609 L1135.77 682.609 L1135.21 682.609 L1134.65 682.609 L1134.09 682.609 L1133.53 682.609 L1132.97 682.609 L1132.41 682.609 L1131.86 682.609 L1131.3 682.609 L1130.74 682.609 L1130.18 682.609 L1129.62 682.609 L1129.06 682.609 L1128.5 682.609 L1127.94 682.609 L1127.38 682.609 L1126.82 682.609 L1126.26 682.609 L1125.7 682.609 L1125.14 682.609 L1124.59 682.609 L1124.03 682.609 L1123.47 682.609 L1122.91 682.609 L1122.35 682.609 L1121.79 682.609 L1121.23 682.609 L1120.67 682.609 L1120.11 682.609 L1119.55 682.609 L1118.99 682.609 L1118.43 682.609 L1117.87 682.609 L1117.31 682.609 L1116.76 682.609 L1116.2 682.609 L1115.64 682.609 L1115.08 682.609 L1114.52 682.609 L1113.96 682.609 L1113.4 682.609 L1112.84 682.609 L1112.28 682.609 L1111.72 682.609 L1111.16 682.609 L1110.6 682.609 L1110.04 682.609 L1109.49 682.609 L1108.93 682.609 L1108.37 682.609 L1107.81 682.609 L1107.25 682.609 L1106.69 682.609 L1106.13 682.609 L1105.57 682.609 L1105.01 682.609 L1104.45 682.609 L1103.89 682.609 L1103.33 682.609 L1102.77 682.609 L1102.22 682.609 L1101.66 682.609 L1101.1 682.609 L1100.54 682.609 L1099.98 682.609 L1099.42 682.609 L1098.86 682.609 L1098.3 682.609 L1097.74 682.609 L1097.18 682.609 L1096.62 682.609 L1096.06 682.609 L1095.5 682.609 L1094.94 682.609 L1094.39 682.609 L1093.83 682.609 L1093.27 682.609 L1092.71 682.609 L1092.15 682.609 L1091.59 682.609 L1091.03 682.609 L1090.47 682.609 L1089.91 682.609 L1089.35 682.609 L1088.79 682.609 L1088.23 682.609 L1087.67 682.609 L1087.12 682.609 L1086.56 682.609 L1086 682.609 L1085.44 682.609 L1084.88 682.609 L1084.32 682.609 L1083.76 682.609 L1083.2 682.609 L1082.64 682.609 L1082.08 682.609 L1081.52 682.609 L1080.96 682.609 L1080.4 682.609 L1079.85 682.609 L1079.29 682.609 L1078.73 682.609 L1078.17 682.609 L1077.61 682.609 L1077.05 682.609 L1076.49 682.609 L1075.93 682.609 L1075.37 682.609 L1074.81 682.609 L1074.25 682.609 L1073.69 682.609 L1073.13 682.609 L1072.57 682.609 L1072.02 682.609 L1071.46 682.609 L1070.9 682.609 L1070.34 682.609 L1069.78 682.609 L1069.22 682.609 L1068.66 682.609 L1068.1 682.609 L1067.54 682.609 L1066.98 682.609 L1066.42 682.609 L1065.86 682.609 L1065.3 682.609 L1064.75 682.609 L1064.19 682.609 L1063.63 682.609 L1063.07 682.609 L1062.51 682.609 L1061.95 682.609 L1061.39 682.609 L1060.83 682.609 L1060.27 682.609 L1059.71 682.609 L1059.15 682.609 L1058.59 682.609 L1058.03 682.609 L1057.48 682.609 L1056.92 682.609 L1056.36 682.609 L1055.8 682.609 L1055.24 682.609 L1054.68 682.609 L1054.12 682.609 L1053.56 682.609 L1053 682.609 L1052.44 682.609 L1051.88 682.609 L1051.32 682.609 L1050.76 682.609 L1050.2 682.609 L1049.65 682.609 L1049.09 682.609 L1048.53 682.609 L1047.97 682.609 L1047.41 682.609 L1046.85 682.609 L1046.29 682.609 L1045.73 682.609 L1045.17 682.609 L1044.61 682.609 L1044.05 682.609 L1043.49 682.609 L1042.93 682.609 L1042.38 682.609 L1041.82 682.609 L1041.26 682.609 L1040.7 682.609 L1040.14 682.609 L1039.58 682.609 L1039.02 682.609 L1038.46 682.609 L1037.9 682.609 L1037.34 682.609 L1036.78 682.609 L1036.22 682.609 L1035.66 682.609 L1035.1 682.609 L1034.55 682.609 L1033.99 682.609 L1033.43 682.609 L1032.87 682.609 L1032.31 682.609 L1031.75 682.609 L1031.19 682.609 L1030.63 682.609 L1030.07 682.609 L1029.51 682.609 L1028.95 682.609 L1028.39 682.609 L1027.83 682.609 L1027.28 682.609 L1026.72 682.609 L1026.16 682.609 L1025.6 682.609 L1025.04 682.609 L1024.48 682.609 L1023.92 682.609 L1023.36 682.609 L1022.8 682.609 L1022.24 682.609 L1021.68 682.609 L1021.12 682.609 L1020.56 682.609 L1020.01 682.609 L1019.45 682.609 L1018.89 682.609 L1018.33 682.609 L1017.77 682.609 L1017.21 682.609 L1016.65 682.609 L1016.09 682.609 L1015.53 682.609 L1014.97 682.609 L1014.41 682.609 L1013.85 682.609 L1013.29 682.609 L1012.73 682.609 L1012.18 682.609 L1011.62 682.609 L1011.06 682.609 L1010.5 682.609 L1009.94 682.609 L1009.38 682.609 L1008.82 682.609 L1008.26 682.609 L1007.7 682.609 L1007.14 682.609 L1006.58 682.609 L1006.02 682.609 L1005.46 682.609 L1004.91 682.609 L1004.35 682.609 L1003.79 682.609 L1003.23 682.609 L1002.67 682.609 L1002.11 682.609 L1001.55 682.609 L1000.99 682.609 L1000.43 682.609 L999.872 682.609 L999.313 682.609 L998.754 682.609 L998.194 682.609 L997.635 682.609 L997.076 682.609 L996.517 682.609 L995.957 682.609 L995.398 682.609 L994.839 682.609 L994.28 682.609 L993.72 682.609 L993.161 682.609 L992.602 682.609 L992.043 682.609 L991.483 682.609 L990.924 682.609 L990.365 682.609 L989.806 682.609 L989.246 682.609 L988.687 682.609 L988.128 682.609 L987.569 682.609 L987.009 682.609 L986.45 682.609 L985.891 682.609 L985.332 682.609 L984.772 682.609 L984.213 682.609 L983.654 682.609 L983.095 682.609 L982.535 682.609 L981.976 682.609 L981.417 682.609 L980.858 682.609 L980.298 682.609 L979.739 682.609 L979.18 682.609 L978.621 682.609 L978.061 682.609 L977.502 682.609 L976.943 682.609 L976.384 682.609 L975.824 682.609 L975.265 682.609 L974.706 682.609 L974.147 682.609 L973.587 682.609 L973.028 682.609 L972.469 682.609 L971.91 682.609 L971.35 682.609 L970.791 682.609 L970.232 682.609 L969.673 682.609 L969.113 682.609 L968.554 682.609 L967.995 682.609 L967.436 682.609 L966.876 682.609 L966.317 682.609 L965.758 682.609 L965.199 682.609 L964.639 682.609 L964.08 682.609 L963.521 682.609 L962.962 682.609 L962.402 682.609 L961.843 682.609 L961.284 682.609 L960.725 682.609 L960.165 682.609 L959.606 682.609 L959.047 682.609 L958.488 682.609 L957.928 682.609 L957.369 682.609 L956.81 682.609 L956.251 682.609 L955.691 682.609 L955.132 682.609 L954.573 682.609 L954.014 682.609 L953.454 682.609 L952.895 682.609 L952.336 682.609 L951.777 682.609 L951.217 682.609 L950.658 682.609 L950.099 682.609 L949.54 682.609 L948.98 682.609 L948.421 682.609 L947.862 682.609 L947.303 682.609 L946.743 682.609 L946.184 682.609 L945.625 682.609 L945.066 682.609 L944.506 682.609 L943.947 682.609 L943.388 682.609 L942.829 682.609 L942.269 682.609 L941.71 682.609 L941.151 682.609 L940.592 682.609 L940.032 682.609 L939.473 682.609 L938.914 682.609 L938.355 682.609 L937.795 682.609 L937.236 682.609 L936.677 682.609 L936.118 682.609 L935.558 682.609 L934.999 682.609 L934.44 682.609 L933.881 682.609 L933.321 682.609 L932.762 682.609 L932.203 682.609 L931.644 682.609 L931.084 682.609 L930.525 682.609 L929.966 682.609 L929.406 682.609 L928.847 682.609 L928.288 682.609 L927.729 682.609 L927.169 682.609 L926.61 682.609 L926.051 682.609 L925.492 682.609 L924.932 682.609 L924.373 682.609 L923.814 682.609 L923.255 682.609 L922.695 682.609 L922.136 682.609 L921.577 682.609 L921.018 682.609 L920.458 682.609 L919.899 682.609 L919.34 682.609 L918.781 682.609 L918.221 682.609 L917.662 682.609 L917.103 682.609 L916.544 682.609 L915.984 682.609 L915.425 682.609 L914.866 682.609 L914.307 682.609 L913.747 682.609 L913.188 682.609 L912.629 682.609 L912.07 682.609 L911.51 682.609 L910.951 682.609 L910.392 682.609 L909.833 682.609 L909.273 682.609 L908.714 682.609 L908.155 682.609 L907.596 682.609 L907.036 682.609 L906.477 682.609 L905.918 682.609 L905.359 682.609 L904.799 682.609 L904.24 682.609 L903.681 682.609 L903.122 682.609 L902.562 682.609 L902.003 682.609 L901.444 682.609 L900.885 682.609 L900.325 682.609 L899.766 682.609 L899.207 682.609 L898.648 682.609 L898.088 682.609 L897.529 682.609 L896.97 682.609 L896.411 682.609 L895.851 682.609 L895.292 682.609 L894.733 682.609 L894.174 682.609 L893.614 682.609 L893.055 682.609 L892.496 682.609 L891.937 682.609 L891.377 682.609 L890.818 682.609 L890.259 682.609 L889.7 682.609 L889.14 682.609 L888.581 682.609 L888.022 682.609 L887.463 682.609 L886.903 682.609 L886.344 682.609 L885.785 682.609 L885.226 682.609 L884.666 682.609 L884.107 682.609 L883.548 682.609 L882.989 682.609 L882.429 682.609 L881.87 682.609 L881.311 682.609 L880.752 682.609 L880.192 682.609 L879.633 682.609 L879.074 682.609 L878.515 682.609 L877.955 682.609 L877.396 682.609 L876.837 682.609 L876.278 682.609 L875.718 682.609 L875.159 682.609 L874.6 682.609 L874.041 682.609 L873.481 682.609 L872.922 682.609 L872.363 682.609 L871.804 682.609 L871.244 682.609 L870.685 682.609 L870.126 682.609 L869.567 682.609 L869.007 682.609 L868.448 682.609 L867.889 682.609 L867.33 682.609 L866.77 682.609 L866.211 682.609 L865.652 682.609 L865.093 682.609 L864.533 682.609 L863.974 682.609 L863.415 682.609 L862.856 682.609 L862.296 682.609 L861.737 682.609 L861.178 682.609 L860.619 682.609 L860.059 682.609 L859.5 682.609 L858.941 682.609 L858.382 682.609 L857.822 682.609 L857.263 682.609 L856.704 682.609 L856.145 682.609 L855.585 682.609 L855.026 682.609 L854.467 682.609 L853.908 682.609 L853.348 682.609 L852.789 682.609 L852.23 682.609 L851.671 682.609 L851.111 682.609 L850.552 682.609 L849.993 682.609 L849.434 682.609 L848.874 682.609 L848.315 682.609 L847.756 682.609 L847.197 682.609 L846.637 682.609 L846.078 682.609 L845.519 682.609 L844.96 682.609 L844.4 682.609 L843.841 682.609 L843.282 682.609 L842.723 682.609 L842.163 682.609 L841.604 682.609 L841.045 682.609 L840.486 682.609 L839.926 682.609 L839.367 682.609 L838.808 682.609 L838.249 682.609 L837.689 682.609 L837.13 682.609 L836.571 682.609 L836.012 682.609 L835.452 682.609 L834.893 682.609 L834.334 682.609 L833.775 682.609 L833.215 682.609 L832.656 682.609 L832.097 682.609 L831.538 682.609 L830.978 682.609 L830.419 682.609 L829.86 682.609 L829.301 682.609 L828.741 682.609 L828.182 682.609 L827.623 682.609 L827.064 682.609 L826.504 682.609 L825.945 682.609 L825.386 682.609 L824.827 682.609 L824.267 682.609 L823.708 682.609 L823.149 682.609 L822.59 682.609 L822.03 682.609 L821.471 682.609 L820.912 682.609 L820.353 682.609 L819.793 682.609 L819.234 682.609 L818.675 682.609 L818.116 682.609 L817.556 682.609 L816.997 682.609 L816.438 682.609 L815.879 682.609 L815.319 682.609 L814.76 682.609 L814.201 682.609 L813.642 682.609 L813.082 682.609 L812.523 682.609 L811.964 682.609 L811.405 682.609 L810.845 682.609 L810.286 682.609 L809.727 682.609 L809.168 682.609 L808.608 682.609 L808.049 682.609 L807.49 682.609 L806.931 682.609 L806.371 682.609 L805.812 682.609 L805.253 682.609 L804.693 682.609 L804.134 682.609 L803.575 682.609 L803.016 682.609 L802.456 682.609 L801.897 682.609 L801.338 682.609 L800.779 682.609 L800.219 682.609 L799.66 682.609 L799.101 682.609 L798.542 682.609 L797.982 682.609 L797.423 682.609 L796.864 682.609 L796.305 682.609 L795.745 682.609 L795.186 682.609 L794.627 682.609 L794.068 682.609 L793.508 682.609 L792.949 682.609 L792.39 682.609 L791.831 682.609 L791.271 682.609 L790.712 682.609 L790.153 682.609 L789.594 682.609 L789.034 682.609 L788.475 682.609 L787.916 682.609 L787.357 682.609 L786.797 682.609 L786.238 682.609 L785.679 682.609 L785.12 682.609 L784.56 682.609 L784.001 682.609 L783.442 682.609 L782.883 682.609 L782.323 682.609 L781.764 682.609 L781.205 682.609 L780.646 682.609 L780.086 682.609 L779.527 682.609 L778.968 682.609 L778.409 682.609 L777.849 682.609 L777.29 682.609 L776.731 682.609 L776.172 682.609 L775.612 682.609 L775.053 682.609 L774.494 682.609 L773.935 682.609 L773.375 682.609 L772.816 682.609 L772.257 682.609 L771.698 682.609 L771.138 682.609 L770.579 682.609 L770.02 682.609 L769.461 682.609 L768.901 682.609 L768.342 682.609 L767.783 682.609 L767.224 682.609 L766.664 682.609 L766.105 682.609 L765.546 682.609 L764.987 682.609 L764.427 682.609 L763.868 682.609 L763.309 682.609 L762.75 682.609 L762.19 682.609 L761.631 682.609 L761.072 682.609 L760.513 682.609 L759.953 682.609 L759.394 682.609 L758.835 682.609 L758.276 682.609 L757.716 682.609 L757.157 682.609 L756.598 682.609 L756.039 682.609 L755.479 682.609 L754.92 682.609 L754.361 682.609 L753.802 682.609 L753.242 682.609 L752.683 682.609 L752.124 682.609 L751.565 682.609 L751.005 682.609 L750.446 682.609 L749.887 682.609 L749.328 682.609 L748.768 682.609 L748.209 682.609 L747.65 682.609 L747.091 682.609 L746.531 682.609 L745.972 682.609 L745.413 682.609 L744.854 682.609 L744.294 682.609 L743.735 682.609 L743.176 682.609 L742.617 682.609 L742.057 682.609 L741.498 682.609 L740.939 682.609 L740.38 682.609 L739.82 682.609 L739.261 682.609 L738.702 682.609 L738.143 682.609 L737.583 682.609 L737.024 682.609 L736.465 682.609 L735.906 682.609 L735.346 682.609 L734.787 682.609 L734.228 682.609 L733.669 682.609 L733.109 682.609 L732.55 682.609 L731.991 682.609 L731.432 682.609 L730.872 682.609 L730.313 682.609 L729.754 682.609 L729.195 682.609 L728.635 682.609 L728.076 682.609 L727.517 682.609 L726.958 682.609 L726.398 682.609 L725.839 682.609 L725.28 682.609 L724.721 682.609 L724.161 682.609 L723.602 682.609 L723.043 682.609 L722.484 682.609 L721.924 682.609 L721.365 682.609 L720.806 682.609 L720.247 682.609  Z\" fill=\"#3da44d\" fill-rule=\"evenodd\" fill-opacity=\"0.5\"/>\n<polyline clip-path=\"url(#clip713)\" style=\"stroke:#3da44d; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"720.247,683.481 720.806,683.481 721.365,683.481 721.924,683.481 722.484,683.481 723.043,683.481 723.602,683.481 724.161,683.481 724.721,683.481 725.28,683.481 725.839,683.481 726.398,683.481 726.958,683.481 727.517,683.481 728.076,683.481 728.635,683.481 729.195,683.481 729.754,683.481 730.313,683.481 730.872,683.481 731.432,683.481 731.991,683.481 732.55,683.481 733.109,683.481 733.669,683.481 734.228,683.481 734.787,683.481 735.346,683.481 735.906,683.481 736.465,683.481 737.024,683.481 737.583,683.481 738.143,683.481 738.702,683.481 739.261,683.481 739.82,683.481 740.38,683.481 740.939,683.481 741.498,683.481 742.057,683.481 742.617,683.481 743.176,683.481 743.735,683.481 744.294,683.481 744.854,683.481 745.413,683.481 745.972,683.481 746.531,683.481 747.091,683.481 747.65,683.481 748.209,683.481 748.768,683.481 749.328,683.481 749.887,683.481 750.446,683.481 751.005,683.481 751.565,683.481 752.124,683.481 752.683,683.481 753.242,683.481 753.802,683.481 754.361,683.481 754.92,683.481 755.479,683.481 756.039,683.481 756.598,683.481 757.157,683.481 757.716,683.481 758.276,683.481 758.835,683.481 759.394,683.481 759.953,683.481 760.513,683.481 761.072,683.481 761.631,683.481 762.19,683.481 762.75,683.481 763.309,683.481 763.868,683.481 764.427,683.481 764.987,683.481 765.546,683.481 766.105,683.481 766.664,683.481 767.224,683.481 767.783,683.481 768.342,683.481 768.901,683.481 769.461,683.481 770.02,683.481 770.579,683.481 771.138,683.481 771.698,683.481 772.257,683.481 772.816,683.481 773.375,683.481 773.935,683.481 774.494,683.481 775.053,683.481 775.612,683.481 776.172,683.481 776.731,683.481 777.29,683.481 777.849,683.481 778.409,683.481 778.968,683.481 779.527,683.481 780.086,683.481 780.646,683.481 781.205,683.481 781.764,683.481 782.323,683.481 782.883,683.481 783.442,683.481 784.001,683.481 784.56,683.481 785.12,683.481 785.679,683.481 786.238,683.481 786.797,683.481 787.357,683.481 787.916,683.481 788.475,683.481 789.034,683.481 789.594,683.481 790.153,683.481 790.712,683.481 791.271,683.481 791.831,683.481 792.39,683.481 792.949,683.481 793.508,683.481 794.068,683.481 794.627,683.481 795.186,683.481 795.745,683.481 796.305,683.481 796.864,683.481 797.423,683.481 797.982,683.481 798.542,683.481 799.101,683.481 799.66,683.481 800.219,683.481 800.779,683.481 801.338,683.481 801.897,683.481 802.456,683.481 803.016,683.481 803.575,683.481 804.134,683.481 804.693,683.481 805.253,683.481 805.812,683.481 806.371,683.481 806.931,683.481 807.49,683.481 808.049,683.481 808.608,683.481 809.168,683.481 809.727,683.481 810.286,683.481 810.845,683.481 811.405,683.481 811.964,683.481 812.523,683.481 813.082,683.481 813.642,683.481 814.201,683.481 814.76,683.481 815.319,683.481 815.879,683.481 816.438,683.481 816.997,683.481 817.556,683.481 818.116,683.481 818.675,683.481 819.234,683.481 819.793,683.481 820.353,683.481 820.912,683.481 821.471,683.481 822.03,683.481 822.59,683.481 823.149,683.481 823.708,683.481 824.267,683.481 824.827,683.481 825.386,683.481 825.945,683.481 826.504,683.481 827.064,683.481 827.623,683.481 828.182,683.481 828.741,683.481 829.301,683.481 829.86,683.481 830.419,683.481 830.978,683.481 831.538,683.481 832.097,683.481 832.656,683.481 833.215,683.481 833.775,683.481 834.334,683.481 834.893,683.481 835.452,683.481 836.012,683.481 836.571,683.481 837.13,683.481 837.689,683.481 838.249,683.481 838.808,683.481 839.367,683.481 839.926,683.481 840.486,683.481 841.045,683.481 841.604,683.481 842.163,683.481 842.723,683.481 843.282,683.481 843.841,683.481 844.4,683.481 844.96,683.481 845.519,683.481 846.078,683.481 846.637,683.481 847.197,683.481 847.756,683.481 848.315,683.481 848.874,683.481 849.434,683.481 849.993,683.481 850.552,683.481 851.111,683.481 851.671,683.481 852.23,683.481 852.789,683.481 853.348,683.481 853.908,683.481 854.467,683.481 855.026,683.481 855.585,683.481 856.145,683.481 856.704,683.481 857.263,683.481 857.822,683.481 858.382,683.481 858.941,683.481 859.5,683.481 860.059,683.481 860.619,683.481 861.178,683.481 861.737,683.481 862.296,683.481 862.856,683.481 863.415,683.481 863.974,683.481 864.533,683.481 865.093,683.481 865.652,683.481 866.211,683.481 866.77,683.481 867.33,683.481 867.889,683.481 868.448,683.481 869.007,683.481 869.567,683.481 870.126,683.481 870.685,683.481 871.244,683.481 871.804,683.481 872.363,683.481 872.922,683.481 873.481,683.481 874.041,683.481 874.6,683.481 875.159,683.481 875.718,683.481 876.278,683.481 876.837,683.481 877.396,683.481 877.955,683.481 878.515,683.481 879.074,683.481 879.633,683.481 880.192,683.481 880.752,683.481 881.311,683.481 881.87,683.481 882.429,683.481 882.989,683.481 883.548,683.481 884.107,683.481 884.666,683.481 885.226,683.481 885.785,683.481 886.344,683.481 886.903,683.481 887.463,683.481 888.022,683.481 888.581,683.481 889.14,683.481 889.7,683.481 890.259,683.481 890.818,683.481 891.377,683.481 891.937,683.481 892.496,683.481 893.055,683.481 893.614,683.481 894.174,683.481 894.733,683.481 895.292,683.481 895.851,683.481 896.411,683.481 896.97,683.481 897.529,683.481 898.088,683.481 898.648,683.481 899.207,683.481 899.766,683.481 900.325,683.481 900.885,683.481 901.444,683.481 902.003,683.481 902.562,683.481 903.122,683.481 903.681,683.481 904.24,683.481 904.799,683.481 905.359,683.481 905.918,683.481 906.477,683.481 907.036,683.481 907.596,683.481 908.155,683.481 908.714,683.481 909.273,683.481 909.833,683.481 910.392,683.481 910.951,683.481 911.51,683.481 912.07,683.481 912.629,683.481 913.188,683.481 913.747,683.481 914.307,683.481 914.866,683.481 915.425,683.481 915.984,683.481 916.544,683.481 917.103,683.481 917.662,683.481 918.221,683.481 918.781,683.481 919.34,683.481 919.899,683.481 920.458,683.481 921.018,683.481 921.577,683.481 922.136,683.481 922.695,683.481 923.255,683.481 923.814,683.481 924.373,683.481 924.932,683.481 925.492,683.481 926.051,683.481 926.61,683.481 927.169,683.481 927.729,683.481 928.288,683.481 928.847,683.481 929.406,683.481 929.966,683.481 930.525,683.481 931.084,683.481 931.644,683.481 932.203,683.481 932.762,683.481 933.321,683.481 933.881,683.481 934.44,683.481 934.999,683.481 935.558,683.481 936.118,683.481 936.677,683.481 937.236,683.481 937.795,683.481 938.355,683.481 938.914,683.481 939.473,683.481 940.032,683.481 940.592,683.481 941.151,683.481 941.71,683.481 942.269,683.481 942.829,683.481 943.388,683.481 943.947,683.481 944.506,683.481 945.066,683.481 945.625,683.481 946.184,683.481 946.743,683.481 947.303,683.481 947.862,683.481 948.421,683.481 948.98,683.481 949.54,683.481 950.099,683.481 950.658,683.481 951.217,683.481 951.777,683.481 952.336,683.481 952.895,683.481 953.454,683.481 954.014,683.481 954.573,683.481 955.132,683.481 955.691,683.481 956.251,683.481 956.81,683.481 957.369,683.481 957.928,683.481 958.488,683.481 959.047,683.481 959.606,683.481 960.165,683.481 960.725,683.481 961.284,683.481 961.843,683.481 962.402,683.481 962.962,683.481 963.521,683.481 964.08,683.481 964.639,683.481 965.199,683.481 965.758,683.481 966.317,683.481 966.876,683.481 967.436,683.481 967.995,683.481 968.554,683.481 969.113,683.481 969.673,683.481 970.232,683.481 970.791,683.481 971.35,683.481 971.91,683.481 972.469,683.481 973.028,683.481 973.587,683.481 974.147,683.481 974.706,683.481 975.265,683.481 975.824,683.481 976.384,683.481 976.943,683.481 977.502,683.481 978.061,683.481 978.621,683.481 979.18,683.481 979.739,683.481 980.298,683.481 980.858,683.481 981.417,683.481 981.976,683.481 982.535,683.481 983.095,683.481 983.654,683.481 984.213,683.481 984.772,683.481 985.332,683.481 985.891,683.481 986.45,683.481 987.009,683.481 987.569,683.481 988.128,683.481 988.687,683.481 989.246,683.481 989.806,683.481 990.365,683.481 990.924,683.481 991.483,683.481 992.043,683.481 992.602,683.481 993.161,683.481 993.72,683.481 994.28,683.481 994.839,683.481 995.398,683.481 995.957,683.481 996.517,683.481 997.076,683.481 997.635,683.481 998.194,683.481 998.754,683.481 999.313,683.481 999.872,683.481 1000.43,683.481 1000.99,683.481 1001.55,683.481 1002.11,683.481 1002.67,683.481 1003.23,683.481 1003.79,683.481 1004.35,683.481 1004.91,683.481 1005.46,683.481 1006.02,683.481 1006.58,683.481 1007.14,683.481 1007.7,683.481 1008.26,683.481 1008.82,683.481 1009.38,683.481 1009.94,683.481 1010.5,683.481 1011.06,683.481 1011.62,683.481 1012.18,683.481 1012.73,683.481 1013.29,683.481 1013.85,683.481 1014.41,683.481 1014.97,683.481 1015.53,683.481 1016.09,683.481 1016.65,683.481 1017.21,683.481 1017.77,683.481 1018.33,683.481 1018.89,683.481 1019.45,683.481 1020.01,683.481 1020.56,683.481 1021.12,683.481 1021.68,683.481 1022.24,683.481 1022.8,683.481 1023.36,683.481 1023.92,683.481 1024.48,683.481 1025.04,683.481 1025.6,683.481 1026.16,683.481 1026.72,683.481 1027.28,683.481 1027.83,683.481 1028.39,683.481 1028.95,683.481 1029.51,683.481 1030.07,683.481 1030.63,683.481 1031.19,683.481 1031.75,683.481 1032.31,683.481 1032.87,683.481 1033.43,683.481 1033.99,683.481 1034.55,683.481 1035.1,683.481 1035.66,683.481 1036.22,683.481 1036.78,683.481 1037.34,683.481 1037.9,683.481 1038.46,683.481 1039.02,683.481 1039.58,683.481 1040.14,683.481 1040.7,683.481 1041.26,683.481 1041.82,683.481 1042.38,683.481 1042.93,683.481 1043.49,683.481 1044.05,683.481 1044.61,683.481 1045.17,683.481 1045.73,683.481 1046.29,683.481 1046.85,683.481 1047.41,683.481 1047.97,683.481 1048.53,683.481 1049.09,683.481 1049.65,683.481 1050.2,683.481 1050.76,683.481 1051.32,683.481 1051.88,683.481 1052.44,683.481 1053,683.481 1053.56,683.481 1054.12,683.481 1054.68,683.481 1055.24,683.481 1055.8,683.481 1056.36,683.481 1056.92,683.481 1057.48,683.481 1058.03,683.481 1058.59,683.481 1059.15,683.481 1059.71,683.481 1060.27,683.481 1060.83,683.481 1061.39,683.481 1061.95,683.481 1062.51,683.481 1063.07,683.481 1063.63,683.481 1064.19,683.481 1064.75,683.481 1065.3,683.481 1065.86,683.481 1066.42,683.481 1066.98,683.481 1067.54,683.481 1068.1,683.481 1068.66,683.481 1069.22,683.481 1069.78,683.481 1070.34,683.481 1070.9,683.481 1071.46,683.481 1072.02,683.481 1072.57,683.481 1073.13,683.481 1073.69,683.481 1074.25,683.481 1074.81,683.481 1075.37,683.481 1075.93,683.481 1076.49,683.481 1077.05,683.481 1077.61,683.481 1078.17,683.481 1078.73,683.481 1079.29,683.481 1079.85,683.481 1080.4,683.481 1080.96,683.481 1081.52,683.481 1082.08,683.481 1082.64,683.481 1083.2,683.481 1083.76,683.481 1084.32,683.481 1084.88,683.481 1085.44,683.481 1086,683.481 1086.56,683.481 1087.12,683.481 1087.67,683.481 1088.23,683.481 1088.79,683.481 1089.35,683.481 1089.91,683.481 1090.47,683.481 1091.03,683.481 1091.59,683.481 1092.15,683.481 1092.71,683.481 1093.27,683.481 1093.83,683.481 1094.39,683.481 1094.94,683.481 1095.5,683.481 1096.06,683.481 1096.62,683.481 1097.18,683.481 1097.74,683.481 1098.3,683.481 1098.86,683.481 1099.42,683.481 1099.98,683.481 1100.54,683.481 1101.1,683.481 1101.66,683.481 1102.22,683.481 1102.77,683.481 1103.33,683.481 1103.89,683.481 1104.45,683.481 1105.01,683.481 1105.57,683.481 1106.13,683.481 1106.69,683.481 1107.25,683.481 1107.81,683.481 1108.37,683.481 1108.93,683.481 1109.49,683.481 1110.04,683.481 1110.6,683.481 1111.16,683.481 1111.72,683.481 1112.28,683.481 1112.84,683.481 1113.4,683.481 1113.96,683.481 1114.52,683.481 1115.08,683.481 1115.64,683.481 1116.2,683.481 1116.76,683.481 1117.31,683.481 1117.87,683.481 1118.43,683.481 1118.99,683.481 1119.55,683.481 1120.11,683.481 1120.67,683.481 1121.23,683.481 1121.79,683.481 1122.35,683.481 1122.91,683.481 1123.47,683.481 1124.03,683.481 1124.59,683.481 1125.14,683.481 1125.7,683.481 1126.26,683.481 1126.82,683.481 1127.38,683.481 1127.94,683.481 1128.5,683.481 1129.06,683.481 1129.62,683.481 1130.18,683.481 1130.74,683.481 1131.3,683.481 1131.86,683.481 1132.41,683.481 1132.97,683.481 1133.53,683.481 1134.09,683.481 1134.65,683.481 1135.21,683.481 1135.77,683.481 1136.33,683.481 1136.89,683.481 1137.45,683.481 1138.01,683.481 1138.57,683.481 1139.13,683.481 1139.68,683.481 1140.24,683.481 1140.8,683.481 1141.36,683.481 1141.92,683.481 1142.48,683.481 1143.04,683.481 1143.6,683.481 1144.16,683.481 1144.72,683.481 1145.28,683.481 1145.84,683.481 1146.4,683.481 1146.96,683.481 1147.51,683.481 1148.07,683.481 1148.63,683.481 1149.19,683.481 1149.75,683.481 1150.31,683.481 1150.87,683.481 1151.43,683.481 1151.99,683.481 1152.55,683.481 1153.11,683.481 1153.67,683.481 1154.23,683.481 1154.78,683.481 1155.34,683.481 1155.9,683.481 1156.46,683.481 1157.02,683.481 1157.58,683.481 1158.14,683.481 1158.7,683.481 1159.26,683.481 1159.82,683.481 1160.38,683.481 1160.94,683.481 1161.5,683.481 1162.05,683.481 1162.61,683.481 1163.17,683.481 1163.73,683.481 1164.29,683.481 1164.85,683.481 1165.41,683.481 1165.97,683.481 1166.53,683.481 1167.09,683.481 1167.65,683.481 1168.21,683.481 1168.77,683.481 1169.33,683.481 1169.88,683.481 1170.44,683.481 1171,683.481 1171.56,683.481 1172.12,683.481 1172.68,683.481 1173.24,683.481 1173.8,683.481 1174.36,683.481 1174.92,683.481 1175.48,683.481 1176.04,683.481 1176.6,683.481 1177.15,683.481 1177.71,683.481 1178.27,683.481 1178.83,683.481 1179.39,683.481 1179.95,683.481 1180.51,683.481 1181.07,683.481 1181.63,683.481 1182.19,683.481 1182.75,683.481 1183.31,683.481 1183.87,683.481 1184.43,683.481 1184.98,683.481 1185.54,683.481 1186.1,683.481 1186.66,683.481 1187.22,683.481 1187.78,683.481 1188.34,683.481 1188.9,683.481 1189.46,683.481 1190.02,683.481 1190.58,683.481 1191.14,683.481 1191.7,683.481 1192.25,683.481 1192.81,683.481 1193.37,683.481 1193.93,683.481 1194.49,683.481 1195.05,683.481 1195.61,683.481 1196.17,683.481 1196.73,683.481 1197.29,683.481 1197.85,683.481 1198.41,683.481 1198.97,683.481 1199.52,683.481 1200.08,683.481 1200.64,683.481 1201.2,683.481 1201.76,683.481 1202.32,683.481 1202.88,683.481 1203.44,683.481 1204,683.481 1204.56,683.481 1205.12,683.481 1205.68,683.481 1206.24,683.481 1206.8,683.481 1207.35,683.481 1207.91,683.481 1208.47,683.481 1209.03,683.481 1209.59,683.481 1210.15,683.481 1210.71,683.481 1211.27,683.481 1211.83,683.481 1212.39,683.481 1212.95,683.481 1213.51,683.481 1214.07,683.481 1214.62,683.481 1215.18,683.481 1215.74,683.481 1216.3,683.481 1216.86,683.481 1217.42,683.481 1217.98,683.481 1218.54,683.481 1219.1,683.481 1219.66,683.481 1220.22,683.481 1220.78,683.481 1221.34,683.481 1221.89,683.481 1222.45,683.481 1223.01,683.481 1223.57,683.481 1224.13,683.481 1224.69,683.481 1225.25,683.481 1225.81,683.481 1226.37,683.481 1226.93,683.481 1227.49,683.481 1228.05,683.481 1228.61,683.481 1229.17,683.481 1229.72,683.481 1230.28,683.481 1230.84,683.481 1231.4,683.481 1231.96,683.481 1232.52,683.481 1233.08,683.481 1233.64,683.481 1234.2,683.481 1234.76,683.481 1235.32,683.481 1235.88,683.481 1236.44,683.481 1236.99,683.481 1237.55,683.481 1238.11,683.481 1238.67,683.481 1239.23,683.481 1239.79,683.481 1240.35,683.481 1240.91,683.481 1241.47,683.481 1242.03,683.481 1242.59,683.481 1243.15,683.481 1243.71,683.481 1244.26,683.481 1244.82,683.481 1245.38,683.481 1245.94,683.481 1246.5,683.481 1247.06,683.481 1247.62,683.481 1248.18,683.481 1248.74,683.481 1249.3,683.481 1249.86,683.481 1250.42,683.481 1250.98,683.481 1251.54,683.481 1252.09,683.481 1252.65,683.481 1253.21,683.481 1253.77,683.481 1254.33,683.481 1254.89,683.481 1255.45,683.481 1256.01,683.481 1256.57,683.481 1257.13,683.481 1257.69,683.481 1258.25,683.481 1258.81,683.481 1259.36,683.481 1259.92,683.481 1260.48,683.481 1261.04,683.481 1261.6,683.481 1262.16,683.481 1262.72,683.481 1263.28,683.481 1263.84,683.481 1264.4,683.481 1264.96,683.481 1265.52,683.481 1266.08,683.481 1266.63,683.481 1267.19,683.481 1267.75,683.481 1268.31,683.481 1268.87,683.481 1269.43,683.481 1269.99,683.481 1270.55,683.481 1271.11,683.481 1271.67,683.481 1272.23,683.481 1272.79,683.481 1273.35,683.481 1273.91,683.481 1274.46,683.481 1275.02,683.481 1275.58,683.481 1276.14,683.481 1276.7,683.481 1277.26,683.481 1277.82,683.481 1278.38,683.481 1278.94,683.481 1279.5,683.481 1280.06,683.481 1280.62,683.481 1281.18,683.481 1281.73,683.481 1282.29,683.481 1282.85,683.481 1283.41,683.481 1283.97,683.481 1284.53,683.481 1285.09,683.481 1285.65,683.481 1286.21,683.481 1286.77,683.481 1287.33,683.481 1287.89,683.481 1288.45,683.481 1289,683.481 1289.56,683.481 1290.12,683.481 1290.68,683.481 1291.24,683.481 1291.8,683.481 1292.36,683.481 1292.92,683.481 1293.48,683.481 1294.04,683.481 1294.6,683.481 1295.16,683.481 1295.72,683.481 1296.28,683.481 1296.83,683.481 1297.39,683.481 1297.95,683.481 1298.51,683.481 1299.07,683.481 1299.63,683.481 1300.19,683.481 1300.75,683.481 1301.31,683.481 1301.87,683.481 1302.43,683.481 1302.99,683.481 1303.55,683.481 1304.1,683.481 1304.66,683.481 1305.22,683.481 1305.78,683.481 1306.34,683.481 1306.9,683.481 1307.46,683.481 1308.02,683.481 1308.58,683.481 1309.14,683.481 1309.7,683.481 1310.26,683.481 1310.82,683.481 1311.38,683.481 1311.93,683.481 1312.49,683.481 1313.05,683.481 1313.61,683.481 1314.17,683.481 1314.73,683.481 1315.29,683.481 1315.85,683.481 1316.41,683.481 1316.97,683.481 1317.53,683.481 1318.09,683.481 1318.65,683.481 1319.2,683.481 1319.76,683.481 1320.32,683.481 1320.88,683.481 1321.44,683.481 1322,683.481 1322.56,683.481 1323.12,683.481 1323.68,683.481 1324.24,683.481 1324.8,683.481 1325.36,683.481 1325.92,683.481 1326.47,683.481 1327.03,683.481 1327.59,683.481 1328.15,683.481 1328.71,683.481 1329.27,683.481 1329.83,683.481 1330.39,683.481 1330.95,683.481 1331.51,683.481 1332.07,683.481 1332.63,683.481 1333.19,683.481 1333.75,683.481 1334.3,683.481 1334.86,683.481 1335.42,683.481 1335.98,683.481 1336.54,683.481 1337.1,683.481 1337.66,683.481 1338.22,683.481 1338.78,683.481 1339.34,683.481 1339.9,683.481 1340.46,683.481 1341.02,683.481 1341.57,683.481 1342.13,683.481 1342.69,683.481 1343.25,683.481 1343.81,683.481 1344.37,683.481 1344.93,683.481 1345.49,683.481 1346.05,683.481 1346.61,683.481 1347.17,683.481 1347.73,683.481 1348.29,683.481 1348.84,683.481 1349.4,683.481 1349.96,683.481 1350.52,683.481 1351.08,683.481 1351.64,683.481 1352.2,683.481 1352.76,683.481 1353.32,683.481 1353.88,683.481 1354.44,683.481 1355,683.481 1355.56,683.481 1356.12,683.481 1356.67,683.481 1357.23,683.481 1357.79,683.481 1358.35,683.481 1358.91,683.481 1359.47,683.481 1360.03,683.481 1360.59,683.481 1361.15,683.481 1361.71,683.481 1362.27,683.481 1362.83,683.481 1363.39,683.481 1363.94,683.481 1364.5,683.481 1365.06,683.481 1365.62,683.481 1366.18,683.481 1366.74,683.481 1367.3,683.481 1367.86,683.481 1368.42,683.481 1368.98,683.481 1369.54,683.481 1370.1,683.481 1370.66,683.481 1371.21,683.481 1371.77,683.481 1372.33,683.481 1372.89,683.481 1373.45,683.481 1374.01,683.481 1374.57,683.481 1375.13,683.481 1375.69,683.481 1376.25,683.481 1376.81,683.481 1377.37,683.481 1377.93,683.481 1378.49,683.481 1379.04,683.481 1379.6,683.481 1380.16,683.481 1380.72,683.481 1381.28,683.481 1381.84,683.481 1382.4,683.481 1382.96,683.481 1383.52,683.481 1384.08,683.481 1384.64,683.481 1385.2,683.481 1385.76,683.481 1386.31,683.481 1386.87,683.481 1387.43,683.481 1387.99,683.481 1388.55,683.481 1389.11,683.481 1389.67,683.481 1390.23,683.481 1390.79,683.481 1391.35,683.481 1391.91,683.481 1392.47,683.481 1393.03,683.481 1393.58,683.481 1394.14,683.481 1394.7,683.481 1395.26,683.481 1395.82,683.481 1396.38,683.481 1396.94,683.481 1397.5,683.481 1398.06,683.481 1398.62,683.481 1399.18,683.481 1399.74,683.481 1400.3,683.481 1400.86,683.481 1401.41,683.481 1401.97,683.481 1402.53,683.481 1403.09,683.481 1403.65,683.481 1404.21,683.481 1404.77,683.481 1405.33,683.481 1405.89,683.481 1406.45,683.481 1407.01,683.481 1407.57,683.481 1408.13,683.481 1408.68,683.481 1409.24,683.481 1409.8,683.481 1410.36,683.481 1410.92,683.481 1411.48,683.481 1412.04,683.481 1412.6,683.481 1413.16,683.481 1413.72,683.481 1414.28,683.481 1414.84,683.481 1415.4,683.481 1415.95,683.481 1416.51,683.481 1417.07,683.481 1417.63,683.481 1418.19,683.481 1418.75,683.481 1419.31,683.481 1419.87,683.481 1420.43,683.481 1420.99,683.481 1421.55,683.481 1422.11,683.481 1422.67,683.481 1423.23,683.481 1423.78,683.481 1424.34,683.481 1424.9,683.481 1425.46,683.481 1426.02,683.481 1426.58,683.481 1427.14,683.481 1427.7,683.481 1428.26,683.481 1428.82,683.481 1429.38,683.481 1429.94,683.481 1430.5,683.481 1431.05,683.481 1431.61,683.481 1432.17,683.481 1432.73,683.481 1433.29,683.481 1433.85,683.481 1434.41,683.481 1434.97,683.481 1435.53,683.481 1436.09,683.481 1436.65,683.481 1437.21,683.481 1437.77,683.481 1438.33,683.481 1438.88,683.481 1439.44,683.481 1440,683.481 1440.56,683.481 1441.12,683.481 1441.68,683.481 1442.24,683.481 1442.8,683.481 1443.36,683.481 1443.92,683.481 1444.48,683.481 1445.04,683.481 1445.6,683.481 1446.15,683.481 1446.71,683.481 1447.27,683.481 1447.83,683.481 1448.39,683.481 1448.95,683.481 1449.51,683.481 1450.07,683.481 1450.63,683.481 1451.19,683.481 1451.75,683.481 1452.31,683.481 1452.87,683.481 1453.42,683.481 1453.98,683.481 1454.54,683.481 1455.1,683.481 1455.66,683.481 1456.22,683.481 1456.78,683.481 1457.34,683.481 1457.9,683.481 1458.46,683.481 1459.02,683.481 1459.58,683.481 1460.14,683.481 1460.7,683.481 1461.25,683.481 1461.81,683.481 1462.37,683.481 1462.93,683.481 1463.49,683.481 1464.05,683.481 1464.61,683.481 1465.17,683.481 1465.73,683.481 1466.29,683.481 1466.85,683.481 1467.41,683.481 1467.97,683.481 1468.52,683.481 1469.08,683.481 1469.64,683.481 1470.2,683.481 1470.76,683.481 1471.32,683.481 1471.88,683.481 1472.44,683.481 1473,683.481 1473.56,683.481 1474.12,683.481 1474.68,683.481 1475.24,683.481 1475.79,683.481 1476.35,683.481 1476.91,683.481 1477.47,683.481 1478.03,683.481 1478.59,683.481 1479.15,683.481 1479.71,683.481 1480.27,683.481 1480.83,683.481 1481.39,683.481 1481.95,683.481 1482.51,683.481 1483.07,683.481 1483.62,683.481 1484.18,683.481 1484.74,683.481 1485.3,683.481 1485.86,683.481 1486.42,683.481 1486.98,683.481 1487.54,683.481 1488.1,683.481 1488.66,683.481 1489.22,683.481 1489.78,683.481 1490.34,683.481 1490.89,683.481 1491.45,683.481 1492.01,683.481 1492.57,683.481 1493.13,683.481 1493.69,683.481 1494.25,683.481 1494.81,683.481 1495.37,683.481 1495.93,683.481 1496.49,683.481 1497.05,683.481 1497.61,683.481 1498.16,683.481 1498.72,683.481 1499.28,683.481 1499.84,683.481 1500.4,683.481 1500.96,683.481 1501.52,683.481 1502.08,683.481 1502.64,683.481 1503.2,683.481 1503.76,683.481 1504.32,683.481 1504.88,683.481 1505.44,683.481 1505.99,683.481 1506.55,683.481 1507.11,683.481 1507.67,683.481 1508.23,683.481 1508.79,683.481 1509.35,683.481 1509.91,683.481 1510.47,683.481 1511.03,683.481 1511.59,683.481 1512.15,683.481 1512.71,683.481 1513.26,683.481 1513.82,683.481 1514.38,683.481 1514.94,683.481 1515.5,683.481 1516.06,683.481 1516.62,683.481 1517.18,683.481 1517.74,683.481 1518.3,683.481 1518.86,683.481 1519.42,683.481 1519.98,683.481 1520.53,683.481 1521.09,683.481 1521.65,683.481 1522.21,683.481 1522.77,683.481 1523.33,683.481 1523.89,683.481 1524.45,683.481 1525.01,683.481 1525.57,683.481 1526.13,683.481 1526.69,683.481 1527.25,683.481 1527.81,683.481 1528.36,683.481 1528.92,683.481 1529.48,683.481 1530.04,683.481 1530.6,683.481 1531.16,683.481 1531.72,683.481 1532.28,683.481 1532.84,683.481 1533.4,683.481 1533.96,683.481 1534.52,683.481 1535.08,683.481 1535.63,683.481 1536.19,683.481 1536.75,683.481 1537.31,683.481 1537.87,683.481 1538.43,683.481 1538.99,683.481 1539.55,683.481 1540.11,683.481 1540.67,683.481 1541.23,683.481 1541.79,683.481 1542.35,683.481 1542.9,683.481 1543.46,683.481 1544.02,683.481 1544.58,683.481 1545.14,683.481 1545.7,683.481 1546.26,683.481 1546.82,683.481 1547.38,683.481 1547.94,683.481 1548.5,683.481 1549.06,683.481 1549.62,683.481 1550.18,683.481 1550.73,683.481 1551.29,683.481 1551.85,683.481 1552.41,683.481 1552.97,683.481 1553.53,683.481 1554.09,683.481 1554.65,683.481 1555.21,683.481 1555.77,683.481 1556.33,683.481 1556.89,683.481 1557.45,683.481 1558,683.481 1558.56,683.481 1559.12,683.481 1559.68,683.481 1560.24,683.481 1560.8,683.481 1561.36,683.481 1561.92,683.481 1562.48,683.481 1563.04,683.481 1563.6,683.481 1564.16,683.481 1564.72,683.481 1565.28,683.481 1565.83,683.481 1566.39,683.481 1566.95,683.481 1567.51,683.481 1568.07,683.481 1568.63,683.481 1569.19,683.481 1569.75,683.481 1570.31,683.481 1570.87,683.481 1571.43,683.481 1571.99,683.481 1572.55,683.481 1573.1,683.481 1573.66,683.481 1574.22,683.481 1574.78,683.481 1575.34,683.481 1575.9,683.481 1576.46,683.481 1577.02,683.481 1577.58,683.481 1578.14,683.481 1578.7,683.481 1579.26,683.481 1579.82,683.481 1580.37,683.481 1580.93,683.481 1581.49,683.481 1582.05,683.481 1582.61,683.481 1583.17,683.481 1583.73,683.481 1584.29,683.481 1584.85,683.481 1585.41,683.481 1585.97,683.481 1586.53,683.481 1587.09,683.481 1587.65,683.481 1588.2,683.481 1588.76,683.481 1589.32,683.481 1589.88,683.481 1590.44,683.481 1591,683.481 1591.56,683.481 1592.12,683.481 1592.68,683.481 1593.24,683.481 1593.8,683.481 1594.36,683.481 1594.92,683.481 1595.47,683.481 1596.03,683.481 1596.59,683.481 1597.15,683.481 1597.71,683.481 1598.27,683.481 1598.83,683.481 1599.39,683.481 1599.95,683.481 1600.51,683.481 1601.07,683.481 1601.63,683.481 1602.19,683.481 1602.74,683.481 1603.3,683.481 1603.86,683.481 1604.42,683.481 1604.98,683.481 1605.54,683.481 1606.1,683.481 1606.66,683.481 1607.22,683.481 1607.78,683.481 1608.34,683.481 1608.9,683.481 1609.46,683.481 1610.02,683.481 1610.57,683.481 1611.13,683.481 1611.69,683.481 1612.25,683.481 1612.81,683.481 1613.37,683.481 1613.93,683.481 1614.49,683.481 1615.05,683.481 1615.61,683.481 1616.17,683.481 1616.73,683.481 1617.29,683.481 1617.84,683.481 1618.4,683.481 1618.96,683.481 1619.52,683.481 1620.08,683.481 1620.64,683.481 1621.2,683.481 1621.76,683.481 1622.32,683.481 1622.88,683.481 1623.44,683.481 1624,683.481 1624.56,683.481 1625.11,683.481 1625.67,683.481 1626.23,683.481 1626.79,683.481 1627.35,683.481 1627.91,683.481 1628.47,683.481 1629.03,683.481 1629.59,683.481 1630.15,683.481 1630.71,683.481 1631.27,683.481 1631.83,683.481 1632.39,683.481 1632.94,683.481 1633.5,683.481 1634.06,683.481 1634.62,683.481 1635.18,683.481 1635.74,683.481 1636.3,683.481 1636.86,683.481 1637.42,683.481 1637.98,683.481 1638.54,683.481 1639.1,683.481 1639.66,683.481 1640.21,683.481 1640.77,683.481 1641.33,683.481 1641.89,683.481 1642.45,683.481 1643.01,683.481 1643.57,683.481 1644.13,683.481 1644.69,683.481 1645.25,683.481 1645.81,683.481 1646.37,683.481 1646.93,683.481 1647.48,683.481 1648.04,683.481 1648.6,683.481 1649.16,683.481 1649.72,683.481 1650.28,683.481 1650.84,683.481 1651.4,683.481 1651.96,683.481 1652.52,683.481 1653.08,683.481 1653.64,683.481 1654.2,683.481 1654.76,683.481 1655.31,683.481 1655.87,683.481 1656.43,683.481 1656.99,683.481 1657.55,683.481 1658.11,683.481 1658.67,683.481 1659.23,683.481 1659.79,683.481 1660.35,683.481 1660.91,683.481 1661.47,683.481 1662.03,683.481 1662.58,683.481 1663.14,683.481 1663.7,683.481 1664.26,683.481 1664.82,683.481 1665.38,683.481 1665.94,683.481 1666.5,683.481 1667.06,683.481 1667.62,683.481 1668.18,683.481 1668.74,683.481 1669.3,683.481 1669.85,683.481 1670.41,683.481 1670.97,683.481 1671.53,683.481 1672.09,683.481 1672.65,683.481 1673.21,683.481 1673.77,683.481 1674.33,683.481 1674.89,683.481 1675.45,683.481 1676.01,683.481 1676.57,683.481 1677.13,683.481 1677.68,683.481 1678.24,683.481 1678.8,683.481 1679.36,683.481 1679.92,683.481 1680.48,683.481 1681.04,683.481 1681.6,683.481 1682.16,683.481 1682.72,683.481 1683.28,683.481 1683.84,683.481 1684.4,683.481 1684.95,683.481 1685.51,683.481 1686.07,683.481 1686.63,683.481 1687.19,683.481 1687.75,683.481 1688.31,683.481 1688.87,683.481 1689.43,683.481 1689.99,683.481 1690.55,683.481 1691.11,683.481 1691.67,683.481 1692.23,683.481 1692.78,683.481 1693.34,683.481 1693.9,683.481 1694.46,683.481 1695.02,683.481 1695.58,683.481 1696.14,683.481 1696.7,683.481 1697.26,683.481 1697.82,683.481 1698.38,683.481 1698.94,683.481 1699.5,683.481 1700.05,683.481 1700.61,683.481 1701.17,683.481 1701.73,683.481 1702.29,683.481 1702.85,683.481 1703.41,683.481 1703.97,683.481 1704.53,683.481 1705.09,683.481 1705.65,683.481 1706.21,683.481 1706.77,683.481 1707.32,683.481 1707.88,683.481 1708.44,683.481 1709,683.481 1709.56,683.481 1710.12,683.481 1710.68,683.481 1711.24,683.481 1711.8,683.481 1712.36,683.481 1712.92,683.481 1713.48,683.481 1714.04,683.481 1714.6,683.481 1715.15,683.481 1715.71,683.481 1716.27,683.481 1716.83,683.481 1717.39,683.481 1717.95,683.481 1718.51,683.481 1719.07,683.481 1719.63,683.481 1720.19,683.481 1720.75,683.481 1721.31,683.481 1721.87,683.481 1722.42,683.481 1722.98,683.481 1723.54,683.481 1724.1,683.481 1724.66,683.481 1725.22,683.481 1725.78,683.481 1726.34,683.481 1726.9,683.481 1727.46,683.481 1728.02,683.481 1728.58,683.481 1729.14,683.481 1729.69,683.481 1730.25,683.481 1730.81,683.481 1731.37,683.481 1731.93,683.481 1732.49,683.481 1733.05,683.481 1733.61,683.481 1734.17,683.481 1734.73,683.481 1735.29,683.481 1735.85,683.481 1736.41,683.481 1736.97,683.481 1737.52,683.481 1738.08,683.481 1738.64,683.481 1739.2,683.481 1739.76,683.481 1740.32,683.481 1740.88,683.481 1741.44,683.481 1742,683.481 1742.56,683.481 1743.12,683.481 1743.68,683.481 1744.24,683.481 1744.79,683.481 1745.35,683.481 1745.91,683.481 1746.47,683.481 1747.03,683.481 1747.59,683.481 1748.15,683.481 1748.71,683.481 1749.27,683.481 1749.83,683.481 1750.39,683.481 1750.95,683.481 1751.51,683.481 1752.06,683.481 1752.62,683.481 1753.18,683.481 1753.74,683.481 1754.3,683.481 1754.86,683.481 1755.42,683.481 1755.98,683.481 1756.54,683.481 1757.1,683.481 1757.66,683.481 1758.22,683.481 1758.78,683.481 1759.34,683.481 1759.89,683.481 1760.45,683.481 1761.01,683.481 1761.57,683.481 1762.13,683.481 1762.69,683.481 1763.25,683.481 1763.81,683.481 1764.37,683.481 1764.93,683.481 1765.49,683.481 1766.05,683.481 1766.61,683.481 1767.16,683.481 1767.72,683.481 1768.28,683.481 1768.84,683.481 1769.4,683.481 1769.96,683.481 1770.52,683.481 1771.08,683.481 1771.64,683.481 1772.2,683.481 1772.76,683.481 1773.32,683.481 1773.88,683.481 1774.43,683.481 1774.99,683.481 1775.55,683.481 1776.11,683.481 1776.67,683.481 1777.23,683.481 1777.79,683.481 1778.35,683.481 1778.91,683.481 1779.47,683.481 1780.03,683.481 1780.59,683.481 1781.15,683.481 1781.71,683.481 1782.26,683.481 1782.82,683.481 1783.38,683.481 1783.94,683.481 1784.5,683.481 1785.06,683.481 1785.62,683.481 1786.18,683.481 1786.74,683.481 1787.3,683.481 1787.86,683.481 1788.42,683.481 1788.98,683.481 1789.53,683.481 1790.09,683.481 1790.65,683.481 1791.21,683.481 1791.77,683.481 1792.33,683.481 1792.89,683.481 1793.45,683.481 1794.01,683.481 1794.57,683.481 1795.13,683.481 1795.69,683.481 1796.25,683.481 1796.8,683.481 1797.36,683.481 1797.92,683.481 1798.48,683.481 1799.04,683.481 1799.6,683.481 1800.16,683.481 1800.72,683.481 1801.28,683.481 1801.84,683.481 1802.4,683.481 1802.96,683.481 1803.52,683.481 1804.08,683.481 1804.63,683.481 1805.19,683.481 1805.75,683.481 1806.31,683.481 1806.87,683.481 1807.43,683.481 1807.99,683.481 1808.55,683.481 1809.11,683.481 1809.67,683.481 1810.23,683.481 1810.79,683.481 1811.35,683.481 1811.9,683.481 1812.46,683.481 1813.02,683.481 1813.58,683.481 1814.14,683.481 1814.7,683.481 1815.26,683.481 1815.82,683.481 1816.38,683.481 1816.94,683.481 1817.5,683.481 1818.06,683.481 1818.62,683.481 1819.18,683.481 1819.73,683.481 1820.29,683.481 1820.85,683.481 1821.41,683.481 1821.97,683.481 1822.53,683.481 1823.09,683.481 1823.65,683.481 1824.21,683.481 1824.77,683.481 1825.33,683.481 1825.89,683.481 1826.45,683.481 1827,683.481 1827.56,683.481 1828.12,683.481 1828.68,683.481 1829.24,683.481 1829.8,683.481 1830.36,683.481 1830.92,683.481 1831.48,683.481 1832.04,683.481 1832.6,683.481 1833.16,683.481 1833.72,683.481 1834.27,683.481 1834.83,683.481 1835.39,683.481 1835.95,683.481 1836.51,683.481 1837.07,683.481 1837.63,683.481 1838.19,683.481 \"/>\n</svg>\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case the projected energy and the shift are close to each other and the error bars are hard to see.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"The problem was just a toy example, as the dimension of the Hamiltonian is rather small:","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"dimension(H)","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"462","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"In this case, it's easy (and more efficient) to calculate the exact ground state energy using standard linear algebra. Read more about Rimu's capabilities for exact diagonalization in the example \"Exact diagonalization\".","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"edp = ExactDiagonalizationProblem(H)\nexact_energy = solve(edp).values[1]","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"-4.021502406906472","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"We finish by comparing our FCIQMC results with the exact computation.","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"println(\n    \"\"\"\n    Energy from $steps_measure steps with $targetwalkers walkers:\n    Shift: $(se.mean) ± $(se.err)\n    Projected Energy: $(v.val) ± ($(v.val_l), $(v.val_u))\n    Exact Energy: $exact_energy\n    \"\"\"\n)\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"Energy from 2000 steps with 1000 walkers:\nShift: -4.028239620648013 ± 0.022560189716606574\nProjected Energy: -4.01456289249185 ± (0.004016308045760475, 0.004390811879886769)\nExact Energy: -4.021502406906472\n\n","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"","category":"page"},{"location":"generated/BHM-example.html","page":"1D Bose-Hubbard Model","title":"1D Bose-Hubbard Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"statstools.html#Module-StatsTools","page":"StatsTools","title":"Module StatsTools","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"The  module StatsTools contains helper function for analysis and post processing of Monte Carlo data.","category":"page"},{"location":"statstools.html#Blocking-analysis","page":"StatsTools","title":"Blocking analysis","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"After equilibration, FCIQMC produces information about observables through correlated time series. In order to estimate the statistical errors the time series need to be decorrelated. The main workhorse for achieving this is the blocking_analysis, which is based on the paper by Flyvberg and Peterson JCP (1989), and automated with the M test of Jonsson PRE (2018).","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Analysing the stochastic errors of observables obtained from the ratio of sample means is done with ratio_of_means, where error propagation of correlated uncertainties is done with the help of the package MonteCarloMeasurements.","category":"page"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Many convenience functions are implemented for directly analysing data obtained from lomc! as a DataFrame. See, e.g., shift_estimator and projected_energy. Asymptotically unbiased estimators are implemented as mixed_estimator, growth_estimator and rayleigh_replica_estimator.","category":"page"},{"location":"statstools.html#Exported","page":"StatsTools","title":"Exported","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\", \"fidelity.jl\", \"variational_energy_estimator.jl\"\n]\nPrivate = false","category":"page"},{"location":"statstools.html#Rimu.StatsTools","page":"StatsTools","title":"Rimu.StatsTools","text":"Tools for the statistical analysis of Monte Carlo data.\n\nExports:\n\nblocking_analysis\nblocking_analysis_data\nratio_of_means\ngrowth_witness\nsmoothen\nshift_estimator\nprojected_energy\nvariational_energy_estimator\ngrowth_estimator\ngrowth_estimator_analysis\nmixed_estimator\nmixed_estimator_analysis\nrayleigh_replica_estimator\nrayleigh_replica_estimator_analysis\nval_and_errs\nval\nmean_and_se\n\n\n\n\n\n","category":"module"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis","text":"blocking_analysis(v::AbstractVector; α = 0.01, corrected = true, skip=0, warn=true)\n-> BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nCompute the sample mean mean and estimate the standard deviation of the mean (standard error) err of a correlated time series. It uses the blocking algorithm from Flyvberg and Peterson JCP (1989) and the M test of Jonsson PRE (2018) at significance level 1-α.\n\nUse skip to skip the first skip elements in v. corrected controls whether bias correction for variances is used. If decorrelating the time series fails according to the M test, NaN is returned as the standard error and -1 for k. The keyword argument warn controls whether a warning message is logged.\n\nThe summary result is returned as a BlockingResult. k - 1 is the number of blocking transformations required to pass the hypothesis test for an uncorrelated time series and err_err the estimated standard error or err.\n\nThe detailed results from each reblocking step can be obtained with blocking_analysis_data.\n\nSee BlockingResult, shift_estimator, ratio_of_means, blocking_analysis_data.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocking_analysis_data-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.blocking_analysis_data","text":"blocking_analysis_data(v::AbstractVector; kwargs...) ->\n(; br::BlockingResult, df::DataFrame)\n\nPerform a blocking_analysis and return the summary result br as well as a DataFrame df with information about the standard error in each blocking step.\n\nFor a description of the keyword arguments see blocking_analysis.\n\nExample\n\njulia> data = smoothen(rand(10_000), 2^6); # generate correlated data\n\njulia> br, df = blocking_analysis_data(data)\n(br = BlockingResult{Float64}\n  mean = 0.5088 ± 0.0029\n  with uncertainty of ± 0.00023454488294744232\n  from 78 blocks after 7 transformations (k = 8).\n, df = 13×6 DataFrame\n Row │ blocks  mean      std_err      std_err_err  p_cov       mj\n     │ Int64   Float64   Float64      Float64      Float64     Float64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │  10000  0.508806  0.000375044  2.6521e-6    1.40658e-7  9715.08\n   2 │   5000  0.508806  0.000528547  5.28599e-6   2.79361e-7  4778.14\n   3 │   2500  0.508806  0.000743386  1.05152e-5   5.52622e-7  2298.64\n   4 │   1250  0.508806  0.00104064   2.08212e-5   1.08293e-6  1056.24\n   5 │    625  0.508806  0.00144177   4.08121e-5   2.07871e-6   427.949\n   6 │    312  0.508736  0.00194209   7.78707e-5   3.77171e-6   128.711\n   7 │    156  0.508736  0.00247921   0.00014081   6.14647e-6    17.3075\n   8 │     78  0.508736  0.00291063   0.000234545  8.47174e-6     0.731386\n   9 │     39  0.508736  0.00284613   0.000326474  8.10046e-6     0.901054\n  10 │     19  0.508241  0.0026998    0.000449967  7.28892e-6     2.85915\n  11 │      9  0.507939  0.00359907   0.000899766  1.29533e-5     1.08644\n  12 │      4  0.509327  0.00440559   0.00179857   1.94092e-5     0.0370381\n  13 │      2  0.509327  0.00432708   0.00305971   1.87237e-5     0.125)\n\njulia> using StatsPlots; unicodeplots();\n\njulia> plot([br.k,br.k],[0.0,maximum(df.std_err.+df.std_err_err)], label=\"m test\");\n\njulia> @df df plot!(\n           1:length(:std_err), :std_err;\n           err=:std_err_err, xlabel=\"k\", label=\"std err\",\n           title=\"std err vs blocking steps\"\n       )\n               ⠀⠀⠀⠀⠀⠀⠀⠀⠀std err vs blocking steps⠀⠀⠀⠀⠀⠀⠀⠀\n               ┌────────────────────────────────────────┐\n    0.00423501 │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀│ m test\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⢸⠀⠀⠀⠀│ std err\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⢸⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡠⢺⠒⠒⢺⠀⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡀⠀⠀⡆⣀⠤⡗⠉⠀⢸⠀⠀⢸⡆⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡧⠤⠔⡗⠊⠉⡏⠀⠀⡇⠀⠀⢸⠀⠀⢸⢣⠀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⡇⠀⠀⠁⠀⠀⠁⠀⠀⠁⠀⠀⠀⠀⠀⢸⠸⡀⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠴⠁⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⡇⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠁⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠊⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣦⠀│\n               │⠀⠀⠀⠀⠀⠀⠀⠀⡠⠔⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⠀│\n               │⠀⠀⠀⢀⣀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n               │⠀⠒⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀│\n   -0.00012335 │⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠧⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤⠤│\n               └────────────────────────────────────────┘\n               ⠀0.64⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀k⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀13.36⠀\n\nA vertical line at k==8 indicates the blocking step identified by hypothesis testing to decorrelate the time series data. The decorrelation length can thus be estimated at 2^k-1 = 2^7 = 128. Note that the data was correlated with a sliding window of 2^6 steps.\n\nSee blocking_analysis, BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mean_and_se-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Rimu.StatsTools.mean_and_se","text":"mean_and_se(v::AbstractVector; α = 0.01, corrected::Bool=true, skip=0) -> mean, err\nmean_and_se(r::BlockingResult) -> mean, err\n\nReturn the mean and standard error (as a tuple) of a time series obtained from blocking_analysis. See also BlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Statistics.cov-Tuple{Rimu.StatsTools.BlockingResult{<:Complex}}","page":"StatsTools","title":"Statistics.cov","text":"cov(r::BlockingResult{<:Complex})\n\nReturn the covariance matrix of the multivariate normal distribution approximating the uncertainty of the blocking result r of a complex time series. See (https://en.wikipedia.org/wiki/Complexnormaldistribution).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_of_means-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.ratio_of_means","text":"ratio_of_means(num, denom; α=0.01, corrected=true, mc_samples=nothing, skip=0, warn=true)\n-> r::RatioBlockingResult\n\nEstimate the ratio of mean(num)/mean(denom) assuming that num and denom are possibly correlated time series, skipping the first skip elements. A blocking analysis with m-test is used to uncorrelate the time series, see blocking_analysis. The remaining standard error and correlation of the means is propagated using MonteCarloMeasurements. The results are reported as a RatioBlockingResult.\n\nRobust estimates for the ratio are obtained from pmedian(r) and confidence intervals from pquantile(), e.g. pquantile(r, [0.025, 0.975]) for the 95% confidence interval.\n\nEstimates from linear uncertainty propagation are returned as r.f and r.σ_f using x_by_y_linear. The standard error estimate r.σ_f should only be trusted when the coefficient of variation std(denom)/mean(denom) is small: abs(r.δ_y) < 0.1. Under this condition can the ratio be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013)\n\nThe keyword mc_samples controls the number of samples used for error propagation by MonteCarloMeasurements. Use nothing for the default and Val(1000) to set the number to 1000 samples in a type-consistent way.\n\nThe keyword warn controls whether warning messages are logged when blocking fails or noisy denominators are encountered.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.errs-Tuple","page":"StatsTools","title":"Rimu.StatsTools.errs","text":"errs(x; n=1, p=nothing, name=:err) -> (; err_l, err_u)\n\nReturn the lower and upper error bar for the uncertain value x.\n\nSee val_and_errs.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.to_measurement-Tuple{MonteCarloMeasurements.Particles}","page":"StatsTools","title":"Rimu.StatsTools.to_measurement","text":"to_measurement(p::MonteCarloMeasurements.Particles) -> ::Measurements.measurement\n\nConvert an uncertain number from MonteCarloMeasurements  to Measurements format  using the median as the central point. The new ± boundaries will include  the 68% quantile around the median.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val","text":"val(x)\n\nReturn the best estimate value for an uncertain x. Defaults to the median for uncertain x represented by a (sampled) distribution. Supports  MonteCarloMeasurements and Measurements.\n\nSee errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.val_and_errs-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.val_and_errs","text":"val_and_errs(x; n=1, p=nothing, name=:val) -> (;val, val_l, val_u)\n\nReturn the median and the lower and upper error bar for the uncertain value x as a NamedTuple. This is useful for plotting scripts. The interval [val - val_l, val + val_u] represents the confidence interval at level n*σ, or at probability p. Setting p overrides n. Supports  MonteCarloMeasurements and Measurements. The  names in the NamedTuple can be changed with name.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> v = val_and_errs.(results, name=\"res\"); # Vector of NamedTuple's with standard errors\n\njulia> DataFrame(v)\n3×3 DataFrame\n Row │ res      res_l    res_u\n     │ Float64  Float64  Float64\n─────┼───────────────────────────\n   1 │    11.5  1.7282   1.7282\n   2 │    13.0  1.7282   1.7282\n   3 │    14.5  1.78885  1.78885\n\nSee NamedTuple, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_witness","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(df::DataFrame, [b]; shift=:shift, norm=:norm, dτ=df.dτ[end], skip=0)\n\nCalculate the growth witness directly from a DataFrame returned by lomc!. The keyword arguments shift and norm can be used to change the names of the relevant columns.\n\n\n\n\n\n","category":"function"},{"location":"statstools.html#Rimu.StatsTools.growth_witness-Tuple{AbstractArray, AbstractArray, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_witness","text":"growth_witness(shift::AbstractArray, norm::AbstractArray, dt, [b]; skip=0) -> g\ngrowth_witness(df::DataFrame, [b]; skip=0) -> g\n\nCompute the growth witness\n\nG^(n) = S^(n) - fracvertmathbfc^(n+1)vert -\n          vertmathbfc^(n)vertvertmathbfc^(n)vert dtau\n\nwhere S is the shift and vertmathbfc^(n)vert == norm[n, 1]. Setting b ≥ 1 a sliding average over b time steps is computed using smoothen(). The first skip time steps are skipped. mean(growth_witness) is approximately the same as growth_estimator with h=0.\n\nSee also growth_estimator.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.smoothen-Tuple{AbstractVector, Integer}","page":"StatsTools","title":"Rimu.StatsTools.smoothen","text":"smoothen(noisy::AbstractVector, b)\n\nSmoothen the array noisy by averaging over a sliding window of length b and wrapping noisy periodically. The mean(noisy) is preserved.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator-NTuple{4, Any}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator","text":"growth_estimator(\n    shift, wn, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    change_type = identity,\n    kwargs...\n) -> r::RatioBlockingResult\ngrowth_estimator(\n    df::DataFrame, h;\n    shift_name=:shift,\n    norm_name=:norm,\n    dτ=df.dτ[end],\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the growth estimator with reference energy E_r by the reweighting technique described in Umrigar et al. (1993), see Eq. (20). shift and wn are equal length vectors containing the shift and walker number time series, respectively. Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin().\n\nE_gr = E_r - frac1dτln\n    fracsum_n w_h+1^(n+1) N_mathrmw^(n+1)\n        sum_m w_h^(m) N_mathrmw^(m)\n\nWhen h is greater than the autocorrelation time scale of the shift, then E_gr (returned as r.ratio) is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the (biased) shift estimator. Error propagation is done with MonteCarloMeasurements. Progagation through the logarithm can be modified by setting change_type to to_measurement in order to avoid NaN results from negative outliers.\n\nIf success==true the blocking analysis was successful in k-1 steps, using blocks uncorrelated data points.\n\nThe second method calculates the growth estimator directly from a DataFrame returned by lomc!. The keyword arguments shift_name and norm_name can be used to change the names of the relevant columns.\n\nSee also mixed_estimator() and RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.growth_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.growth_estimator_analysis","text":"growth_estimator_analysis(df::DataFrame; kwargs...)\n-> (;df_ge, correlation_estimate, se, se_l, se_u)\n\nCompute the growth_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_ge: DataFrame with reweighting depth and growth_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nnorm_name = :norm name of column in df with walkernumber data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_ge, correlation_estimate, se, se_l, se_u = growth_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_ge plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_ge plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_gr\") # growth estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: growth_estimator, mixed_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator","text":"mixed_estimator(\n    hproj, vproj, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nmixed_estimator(\n    df::DataFrame, h;\n    hproj_name=:hproj,\n    vproj_name=:vproj,\n    shift_name=:shift,\n    dτ=df.dτ[end],\n    kwargs...\n)\n\nCompute the mixed estimator by the reweighting technique described in Umrigar et al. (1993), Eq. (19)\n\nE_mathrmmix = fracsum_n w_h^(n)  (Hmathbfv)mathbfc^(n)\n        sum_m w_h^(m)  mathbfvmathbfc^(m) \n\nwhere the time series hproj == (Hmathbfv)mathbfc^(n) and vproj == mathbfvmathbfc^(m) have the same length as shift (See ProjectedEnergy on how to set these up). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nWhen h is greater than the autocorrelation time scale of the shift, then r.ratio is an unbiased but approximate estimator for the ground state energy E_0 with an error mathcalO(dτ^2) and potentially increased confidence intervals compared to the unweighted ratio. Error propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nThe second method calculates the mixed energy estimator directly from a DataFrame returned by lomc!. The keyword arguments hproj_name, vproj_name, and shift_name can be used to change the names of the relevant columns.\n\nSee also growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mixed_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.mixed_estimator_analysis","text":"mixed_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_me, correlation_estimate, se, se_l, se_u)\n\nCompute the mixed_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_me: DataFrame with reweighting depth and mixed_estiamator data. See example below.\ncorrelation_estimate: estimated correlation time from blocking analysis\nse, se_l, se_u: shift_estimator and error\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = :shift name of column in df with shift data\nhproj_name = :hproj name of column in df with operator overlap data\nvproj_name = :vproj name of column in df with projector overlap data\nwarn = true whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_me, correlation_estimate, se, se_l, se_u = mixed_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_me plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_me plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # mixed estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: mixed_estimator, growth_estimator_analysis.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.projected_energy-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.projected_energy","text":"projected_energy(\n    df::DataFrame;\n    skip=0, hproj=:hproj, vproj=:vproj, kwargs...\n) -> r::RatioBlockingResult\n\nCompute the projected energy estimator\n\nE_mathrmp = fracsum_n  mathbfvHmathbfc^(n)\n        sum_m mathbfvmathbfc^(m) \n\nwhere the time series df.hproj == mathbfvHmathbfc^(n) and df.vproj == mathbfvmathbfc^(m) are taken from df, skipping the first skip entries (use post_step_strategy =ProjectedEnergy() to set these up in lomc!()). projected_energy is equivalent to mixed_estimator with h=0.\n\nThe keyword arguments hproj and vproj can be used to change the names of the relevant columns. Other kwargs are passed on to ratio_of_means. Returns a RatioBlockingResult.\n\nSee NamedTuple, val_and_errs, val, errs for processing results.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator-Tuple{Vector, Vector, Vector, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator","text":"rayleigh_replica_estimator(\n    op_ol, vec_ol, shift, h, dτ;\n    skip = 0,\n    E_r = mean(shift[skip+1:end]),\n    weights = w_exp,\n    kwargs...\n) -> r::RatioBlockingResult\nrayleigh_replica_estimator(\n    df::DataFrame;\n    shift_name=\"shift\",\n    op_name=\"Op1\",\n    vec_name=\"dot\",\n    h=0,\n    skip=0,\n    Anorm=1,\n    kwargs...\n) -> r::RatioBlockingResult\n\nCompute the estimator of a Rayleigh quotient of operator hatA with reweighting,\n\nA_mathrmest(h) = fracsum_ab sum_n w_ha^(n) w_hb^(n)\n    mathbfc_a^(n) cdot hatA cdot mathbfc_b^(n)\n    sum_ab sum_n w_ha^(n) w_hb^(n) mathbfc_a^(n) cdot mathbfc_b^(n)\n\nusing data from multiple replicas.\n\nArgument op_ol holds data for the operator overlap mathbfc_a^(n) hatA mathbfc_b^(n) and vec_ol holds data for the vector overlap mathbfc_a^(n) mathbfc_b^(n). They are of type Vector{Vector}, with each element Vector holding the data for a pair of replicas. Argument shift is of type Vector{Vector}, with each element Vector holding the shift data for each individual replica.\n\nThe second method computes the Rayleigh quotient directly from a DataFrame returned by lomc!. The keyword arguments shift_name, op_name and vec_name can be used to change the names of the relevant columns, see AllOverlaps for default formatting. The operator overlap data can be scaled by a prefactor Anorm. A specific reweighting depth can be set with keyword argument h. The default is h = 0 which calculates the Rayleigh quotient without reweighting.\n\nThe reweighting is an extension of the mixed estimator using the reweighting technique described in Umrigar et al. (1993). Reweighting is done over h time steps and length(shift) - skip time steps are used for the blocking analysis done with ratio_of_means(). dτ is the time step and weights a function that calulates the weights. See w_exp() and w_lin(). Additional keyword arguments are passed on to ratio_of_means().\n\nError propagation is done with MonteCarloMeasurements. Results are returned as RatioBlockingResult.\n\nSee also mixed_estimator, growth_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.rayleigh_replica_estimator_analysis-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.rayleigh_replica_estimator_analysis","text":"rayleigh_replica_estimator_analysis(df::DataFrame; kwargs...)\n-> (; df_rre, df_se)\n\nCompute the rayleigh_replica_estimator on a DataFrame df returned from lomc! repeatedly over a range of reweighting depths.\n\nReturns a NamedTuple with the fields\n\ndf_rre: DataFrame with reweighting depth and rayleigh_replica_estimator data. See example below.\ndf_se: DataFrame with shift_estimator output, one row per replica\n\nKeyword arguments\n\nh_range: The default is about h_values values from 0 to twice the estimated correlation time\nh_values = 100: minimum number of reweighting depths\nskip = 0: initial time steps to exclude from averaging\nthreading = Threads.nthreads() > 1: if false a progress meter is displayed\nshift_name = \"shift\": shift data corresponding to column in df with names <shift>_1, ...\nop_name = \"Op1\": name of operator overlap corresponding to column in df with names c1_<op_ol>_c2, ...\nvec_name = \"dot\": name of vector-vector overlap corresponding to column in df with names c1_<vec_ol>_c2, ...\nAnorm = 1: a scalar prefactor to scale the operator overlap data\nwarn = true: whether to log warning messages when blocking fails or denominators are small\n\nExample\n\ndf, _ = lomc!(...)\ndf_rre, df_se = rayleigh_replica_estimator_analysis(df; skip=5_000)\n\nusing StatsPlots\n@df df_rre plot(_ -> se, :h, ribbon = (se_l, se_u), label = \"⟨S⟩\") # constant line and ribbon for shift estimator\n@df df_rre plot!(:h, :val, ribbon = (:val_l, :val_u), label=\"E_mix\") # Rayleigh quotient estimator as a function of reweighting depth\nxlabel!(\"h\")\n\nSee also: rayleigh_replica_estimator, mixed_estimator_analysis, AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.shift_estimator-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.shift_estimator","text":"shift_estimator(df::DataFrame; shift=:shift, kwargs...) -> r::BlockingResult\n\nReturn the shift estimator from the data in df.shift. The keyword argument shift can be used to change the name of the relevant column. Other keyword arguments are passed on to blocking_analysis. Returns a BlockingResult.\n\nSee also growth_estimator, projected_energy.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_exp-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_exp","text":"w_exp(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the exponential formula\n\nw_h^(n) = prod_j=1^h exp-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_lin(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.w_lin-Tuple{Union{SubArray{<:Any, 1, <:Vector, <:Any, true}, Vector}, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.w_lin","text":"w_lin(shift, h, dτ; E_r = mean(shift), skip = 0)\n\nCompute the weights for reweighting over h time steps with reference energy E_r from the linearised formula\n\nw_h^(n) = prod_j=1^h 1-dτ(S^(q+n-j)-E_r) \n\nwhere q = skip.\n\nSee also w_exp(), growth_estimator(), mixed_estimator().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.replica_fidelity-Tuple{DataFrame}","page":"StatsTools","title":"Rimu.StatsTools.replica_fidelity","text":"replica_fidelity(df::DataFrame; p_field = :hproj, skip = 0)\n\nCompute the fidelity of the average coefficient vector and the projector defined in p_field from the result of replica lomc! passed as  argument df, using replicas _1 and _2. Calls ratio_of_means() to perform a blocking analysis on a ratio of the means of separate time series and returns a RatioBlockingResult. The first skip steps in the time series are skipped.\n\nThe fidelity of states |ψ⟩ and |ϕ⟩ is defined as\n\nF(ψϕ) = fracψϕ^2ψψϕϕ \n\nSpecifically, replica_fidelity computes\n\nF(mathbfvmathbfc) =\n    frac(mathbfc_1mathbfv)(mathbfvmathbfc_1)\n    mathbfc_1mathbfc_1 \n\nwhere v is the projector specified by p_field, which is assumed to be normalised to unity with the two-norm (i.e. v⋅v == 1), and mathbfc_1 and mathbfc_2 are two replica coefficient vectors.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.variational_energy_estimator-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.variational_energy_estimator","text":"variational_energy_estimator(shifts, overlaps; kwargs...)\nvariational_energy_estimator(df::DataFrame; max_replicas=:all, kwargs...)\n-> r::RatioBlockingResult\n\nCompute the variational energy estimator from the replica time series of the shifts and coefficient vector overlaps by blocking analysis. The keyword argument max_replicas can be used to constrain the number of replicas processed to be smaller than all available in df. Other keyword arguments are passed on to ratio_of_means(). Returns a RatioBlockingResult.\n\nAn estimator for the variational energy\n\nfracmathbfc^ mathbfHmathbfcmathbfc^mathbfc\n\nis calculated from\n\nE_v  =  fracsum_ab^R overline(S_a+S_b) mathbfc_a^ mathbfc_b\n               2sum_ab^R overlinemathbfc_a^ mathbfc_b \n\nwhere the sum goes over distinct pairs out of the R replicas. See arXiv:2103.07800.\n\nThe DataFrame version can extract the relevant information from the result of lomc!. Set up lomc! with the keyword argument replica = AllOverlaps(R) and R ≥ 2. If passing shifts and overlaps, the data has to be arranged in the correct order (as provided in the DataFrame version).\n\nSee AllOverlaps.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Additional-docstrings","page":"StatsTools","title":"Additional docstrings","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Modules = [StatsTools]\nPages = [\"StatsTools.jl\", \"blocking.jl\", \"ratio_of_means.jl\", \"convenience.jl\",\n  \"variances.jl\", \"growth_witness.jl\", \"reweighting.jl\"\n]\nPublic = false","category":"page"},{"location":"statstools.html#MonteCarloMeasurements.Particles-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"MonteCarloMeasurements.Particles","text":"MonteCarloMeasurements.Particles(r::BlockingResult; mc_samples = 2000)\nMonteCarloMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Particles object for nonlinear error propagation with MonteCarloMeasurements.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.BlockingResult","page":"StatsTools","title":"Rimu.StatsTools.BlockingResult","text":"BlockingResult(mean, err, err_err, p_cov, k, blocks)\n\nResult of blocking_analysis.\n\nFields:\n\nmean: sample mean\nerr: standard error (estimated standard deviation of the mean)\nerr_err: estimated uncertainty of err\np_cov: estimated pseudo covariance of mean, relevant for complex time series\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of uncorrelated values after blocking\n\nHas methods for NamedTuple, val_and_errs, val, errs, mean_and_se, Measurements.:±, MonteCarloMeasurements.Particles, and Statistics.cov for Complex data.\n\nExample:\n\njulia> blocking_analysis(smoothen(randn(2^10), 2^5))\nBlockingResult{Float64}\n  mean = -0.026 ± 0.029\n  with uncertainty of ± 0.003638545517264226\n  from 32 blocks after 5 transformations (k = 6).\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Measurements.measurement-Tuple{Rimu.StatsTools.BlockingResult{<:Real}}","page":"StatsTools","title":"Measurements.measurement","text":"measurement(r::BlockingResult)\nMeasurements.±(r::BlockingResult)\n\nConvert a BlockingResult into a Measurement for linear error propagation with Measurements.\n\nLimitation: Does not account for covariance in complex BlockingResult. Consider using MonteCarloMeasurements.Particles(r)!\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocker-Union{Tuple{AbstractVector{T}}, Tuple{T}} where T","page":"StatsTools","title":"Rimu.StatsTools.blocker","text":"blocker(v::Vector) -> new_v::Vector\n\nReblock the data by successively taking the mean of two adjacent data points to form a new vector with a half of the length(v). The last data point will be discarded if length(v) is odd.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.blocks_with_m-Tuple{Any}","page":"StatsTools","title":"Rimu.StatsTools.blocks_with_m","text":"blocks_with_m(v; corrected = true) -> (;blocks, mean, std_err, std_err_err, p_cov, mj)\n\nPerform the blocking algorithm from Flyvberg and Peterson JCP (1989). Returns named tuple with the results from all blocking steps. See mtest().\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.mtest-Tuple{AbstractVector}","page":"StatsTools","title":"Rimu.StatsTools.mtest","text":"mtest(mj::AbstractVector; α = 0.01) -> k\nmtest(table::NamedTuple; α = 0.01) -> k\n\nHypothesis test for decorrelation of a time series after blocking transformations with significance level 1-α after Jonson PRE (2018). mj or table.mj is expected to be a vector with relevant M_j values from a blocking analysis as obtained from blocks_with_m(). Returns the row number k where the M-test is passed. If the M-test has failed mtest() returns the value -1.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.RatioBlockingResult","page":"StatsTools","title":"Rimu.StatsTools.RatioBlockingResult","text":"RatioBlockingResult(ratio, f, σ_f, δ_y, k, success)\n\nResult of ratio_of_means().\n\nFields:\n\nratio::P: ratio with uncertainties propagated by MonteCarloMeasurements\nf::T: ratio of means\nσ_f::T: std from linear propagation\nδ_y::T: coefficient of variation for denominator (≤ 0.1 for normal approx)\nk::Int: k-1 blocking steps were used to uncorrelate time series\nblocks::Int: number of data values after blocking\nsuccess::Bool: false if any of the blocking steps failed\n\nHas methods for NamedTuple, val_and_errs, val, errs.\n\nNote: to compute statistics on the RatioBlockingResult, use functions pmedian, pquantile, pmiddle, piterate, pextrema, pminimum, pmaximum, pmean, and pcov.\n\n\n\n\n\n","category":"type"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, μ, σ)\nparticles(samples, μ::AbstractVector, Σ::AbstractMatrix)\n\nReturn Particles object from MonteCarloMeasurements with single- or multivariate normal distribution. Zero variance parameters are supported.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.particles-Tuple{Any, Distributions.Distribution}","page":"StatsTools","title":"Rimu.StatsTools.particles","text":"particles(samples, d)\nparticles(::Nothing, d)\nparticles(::Val{T}, d) where T\n\nReturn Particles object from  MonteCarloMeasurements using  a type-stable constructor if possible. Pass nothing for the default number of particles or Val(1_000) for using 1000 particles in a type-stable manner. If d is a Particles object it is passed through without re-sampling.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.ratio_estimators-Tuple{AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"StatsTools","title":"Rimu.StatsTools.ratio_estimators","text":"ratio_estimators(x, y, [k]; corrected=true, mc_samples=10_000) -> (; r, f, σ_f, δ_y, n)\n\nEstimators for the ratio of means mean(x)/mean(y). If k is given, k-1 blocking steps are performed to remove internal correlations in the time series x and y. Otherwise these are assumed to be free of internal correlations. Correlations between x and y may be present and are taken into account.\n\nReturn values:\n\nr::Particles is the Monte Carlo sampled ratio estimator, see Particles\nf = mean(x)/mean(y)\nσ_f standard deviation of f from linear error propagation (normal approximation)\nδ_y = std(y)/mean(y) coefficient of variation; < 0.1 for normal approximation to work\nn: number of uncorrelated data used for uncertainty estimation\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.x_by_y_linear-NTuple{5, Any}","page":"StatsTools","title":"Rimu.StatsTools.x_by_y_linear","text":"x_by_y_linear(μ_x,μ_y,σ_x,σ_y,ρ) -> f, σ_f\n\nLinear error propagation for ratio f = x/y assuming x and y are correlated normal random variables and assuming the ratio can be approximated as a normal distribution. See wikipedia and Díaz-Francés, Rubio (2013).\n\nσ_f = sqrtfracσ_xμ_y^2 + fracμ_x σ_yμ_y^2^2 - frac2 ρ μ_xμ_y^3\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Core.NamedTuple-Tuple{Rimu.StatsTools.BlockingResult}","page":"StatsTools","title":"Core.NamedTuple","text":"NamedTuple(x::BlockingResult; n=1, p=nothing, name=:val)\nNamedTuple(x::RatioBlockingResult; n=1, p=nothing, name=:val)\n\nReturn a named tuple with value and error bars (see val_and_errs) as well as additional numerical fields relevant for x.\n\nExample:\n\njulia> results = [blocking_analysis(i:0.1:2i+20) for i in 1:3]; # mock results\n\njulia> df = NamedTuple.(results, name=:res)|>DataFrame\n3×7 DataFrame\n Row │ res      res_l    res_u    res_err_err  res_p_cov  res_k  res_blocks\n     │ Float64  Float64  Float64  Float64      Float64    Int64  Int64\n─────┼──────────────────────────────────────────────────────────────────────\n   1 │    11.5  1.7282   1.7282      0.352767    2.98667      5          13\n   2 │    13.0  1.7282   1.7282      0.352767    2.98667      5          13\n   3 │    14.5  1.78885  1.78885     0.350823    3.2          5          14\n\njulia> rbs = ratio_of_means(1 .+sin.(1:0.1:11),2 .+sin.(2:0.1:12)); # more mock results\n\njulia> [NamedTuple(rbs),]|>DataFrame\n1×9 DataFrame\n Row │ val       val_l      val_u      val_f     val_σ_f    val_δ_y    val_k  val_blocks  val_success\n     │ Float64   Float64    Float64    Float64   Float64    Float64    Int64  Int64       Bool\n─────┼────────────────────────────────────────────────────────────────────────────────────────────────\n   1 │ 0.581549  0.0925669  0.0812292  0.560532  0.0875548  0.0875548      4          12         true\n\n\nSee val_and_errs, val, errs, BlockingResult, RatioBlockingResult.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.autocovariance-Tuple{AbstractVector, Int64}","page":"StatsTools","title":"Rimu.StatsTools.autocovariance","text":"autocovariance(v::Vector,h::Int; corrected::Bool=true)\n\nhatgamma(h) =frac1nsum_t=1^n-h(v_t+h-barv)(v_t-barv)^* Calculate the autocovariance of dataset v with a delay h. If corrected is true (the default) then the sum is scaled with n-h, whereas the sum is scaled with n if corrected is false where n = length(v).\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Rimu.StatsTools.pseudo_cov-Tuple{Any, Any}","page":"StatsTools","title":"Rimu.StatsTools.pseudo_cov","text":"pseudo_cov(x, y; xmean = mean(x), ymean = mean(y), corrected = true)\n\nCompute the pseudo covariance between collections x and y returning a scalar:\n\nfrac1nsum_i=1^n (x_i - barx)(y_i - bary)\n\nOptionally, precomputed means can be passed as keyword arguments. pseudo_cov(x,y) is functionally equivalent to Statistics.cov(x, conj(y); corrected = false) but it is found to be significantly faster and avoids allocations.\n\n\n\n\n\n","category":"method"},{"location":"statstools.html#Index","page":"StatsTools","title":"Index","text":"","category":"section"},{"location":"statstools.html","page":"StatsTools","title":"StatsTools","text":"Pages   = [\"statstools.md\"]","category":"page"},{"location":"interfaces.html#Module-Interfaces","page":"Interfaces","title":"Module Interfaces","text":"","category":"section"},{"location":"interfaces.html","page":"Interfaces","title":"Interfaces","text":"Interfaces","category":"page"},{"location":"interfaces.html#Rimu.Interfaces","page":"Interfaces","title":"Rimu.Interfaces","text":"module Interfaces\n\nThis module contains interfaces that can be used to extend and modify the algorithms and behaviours of Rimu.\n\nInterfaces\n\nFollow the links for the definitions of the interfaces!\n\nAbstractHamiltonian for defining Hamiltonians\nAbstractDVec for defining data structures for Rimu as in DictVectors\nStochasticStyle for controlling the stochastic algorithms used by lomc! as implemented in StochasticStyles\n\nAdditional exports\n\nInterface functions forAbstractHamiltonians:\n\ndiagonal_element\nnum_offdiagonals\nget_offdiagonal\noffdiagonals.\nrandom_offdiagonal\nstarting_address\nLOStructure\nallowed_address_type\n\nworking with  AbstractDVecs and StochasticStyle\n\ndeposit!\ndefault_style\nCompressionStrategy\nThe interface from VectorInterface.jl.\n\nFunctions Rimu.jl uses to do FCIQMC:\n\napply_column!\napply_operator!\nstep_stats\n\n\n\n\n\n","category":"module"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"EditURL = \"../../../scripts/HO-example.jl\"","category":"page"},{"location":"generated/HO-example.html#Example-5:-Degenerate-perturbation-theory-in-a-harmonic-oscillator-basis","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Example 5: Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"section"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu can also handle non-lattice systems. This example looks at weakly-interacting bosonic particles in a harmonic oscillator external potential using a basis of (Cartesian product) single-particle eigenstates of the harmonic oscillator potential. Blocks of degenerate non-interacting states are coupled by a contact interaction in first order degenerate perturbation theory. This example shows how to generate these blocks and find the energy and angular momentum eigenstates.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"A runnable script for this example is located here. Run it with julia HO-example.jl.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, load all needed packages.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"using Rimu\nusing DataFrames\nusing LinearAlgebra","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Define the system size for N=2 particles in a 2D harmonic oscillator allowing M=4 levels in each dimension, including the groundstate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"N = 2\nM = 4;","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Use a tuple S to define the range of harmonic oscillator states in a Cartesian basis, in this isotropic case n_xn_y=01ldotsM-1.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"S = (M, M);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"In Rimu the N-particle states are still stored as Fock states.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"P = prod(S)\naddr = BoseFS(P, M => N)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"BoseFS{2,16}(0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Here, the numbering of the modes folds in the two spatial dimensions.  Use the utility function fock_to_cart to convert a Fock address to human-readable Cartesian quantum numbers for inspection.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"fock_to_cart(addr, S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"2-element StaticArraysCore.SVector{2, Tuple{Int64, Int64}} with indices SOneTo(2):\n (3, 0)\n (3, 0)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The output shows that all N particles are in single-particle state n_x=M-1 n_y=0.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The harmonic oscillator Hamiltonian HOCartesianContactInteractions handles contact interactions with first-order perturbation theory, so the matrix representation will block according to the non-interacting energy of the basis states. The first task is to find all blocks of basis states with the same energy. The strength of the interaction is not relevant at this point, just that it is non-zero. Use an arbitrary N-particle starting address to build the Hamiltonian.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"H = HOCartesianContactInteractions(BoseFS(P, 1 => N); S);","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Then, use the utility function get_all_blocks to find all blocks. The blocks are found by looping over all possible states with N particles in Cartesian states defined by S. Note that this will only work for total energy up to the maximum accessible by a single particle. The N-particle groundstate energy for a 2D harmonic oscillator is E_0 = N hbar omega and the maximum single-particle energy is E = (E_0 + M - 1) hbar omega.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"block_df = get_all_blocks(H; max_energy = N + M - 1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"<div><div style = \"float: left;\"><span>7×6 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">block_id</th><th style = \"text-align: left;\">block_E0</th><th style = \"text-align: left;\">block_size</th><th style = \"text-align: left;\">addr</th><th style = \"text-align: left;\">indices</th><th style = \"text-align: left;\">t_basis</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"BoseFS{2, 16, BitString{17, 1, UInt32}}\" style = \"text-align: left;\">BoseFS…</th><th title = \"Tuple{Int64, Int64}\" style = \"text-align: left;\">Tuple…</th><th title = \"Float64\" style = \"text-align: left;\">Float64</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: right;\">1</td><td style = \"text-align: right;\">2.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(1, 1)</td><td style = \"text-align: right;\">0.469202</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: right;\">2</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 1)</td><td style = \"text-align: right;\">1.2504e-5</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: right;\">3</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">4</td><td style = \"text-align: left;\">fs&quot;|0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(2, 2)</td><td style = \"text-align: right;\">9.628e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: right;\">4</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(3, 2)</td><td style = \"text-align: right;\">8.977e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: right;\">5</td><td style = \"text-align: right;\">3.0</td><td style = \"text-align: right;\">1</td><td style = \"text-align: left;\">fs&quot;|1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 1)</td><td style = \"text-align: right;\">1.322e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: right;\">6</td><td style = \"text-align: right;\">4.0</td><td style = \"text-align: right;\">2</td><td style = \"text-align: left;\">fs&quot;|0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 2)</td><td style = \"text-align: right;\">2.735e-6</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: right;\">7</td><td style = \"text-align: right;\">5.0</td><td style = \"text-align: right;\">5</td><td style = \"text-align: left;\">fs&quot;|0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0⟩&quot;</td><td style = \"text-align: left;\">(5, 3)</td><td style = \"text-align: right;\">7.775e-6</td></tr></tbody></table></div>","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This outputs a list of blocks in H indexed by the noninteracting energy of all states in the block, and a single address that can be used to rebuild the block for further analysis.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr1 = block_df[7,:addr]\nE = block_df[7,:block_E0]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"First, notice that all basis states have the same energy, defined by the block.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"basis1 = build_basis(H, addr1)\nmap(b -> Hamiltonians.noninteracting_energy(H, b), basis1)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"There are two blocks at each energy level (except the groundstate), which are different due to parity conservation, which is the only other symmetry in the Cartesian harmonic oscillator. The basis of this other block is different,","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"addr2 = block_df[4,:addr]\nbasis2 = build_basis(H, addr2);\nbasis1 ≠ basis2","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"true","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"but its basis elements have the same energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"map(b -> Hamiltonians.noninteracting_energy(H, b), basis2)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n 5.0\n 5.0\n 5.0\n 5.0\n 5.0","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"However, since this system is an isotropic harmonic oscillator, it is possible to build simultaneous eigenstates of the angular momentum operator L_z, implemented with AxialAngularMomentumHO.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz = AxialAngularMomentumHO(S)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"AxialAngularMomentumHO((4, 4); z_dim = 3, addr = BoseFS{0,16}(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"L_z does not conserve parity, so both blocks are required. First combine the bases of each block and convert to DVecs.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"dvs = map(b -> DVec(b => 1.0), vcat(basis1, basis2));","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"and then compute overlaps for the matrix elements of L_z.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_mat = [dot(v, Lz, w) for v in dvs, w in dvs]","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"10×10 Matrix{ComplexF64}:\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0-1.41421im  0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im  0.0+0.0im      0.0+0.0im      0.0-2.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.41421im  0.0+1.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+1.73205im\n 0.0-1.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+1.41421im  0.0+1.0im      0.0+0.0im      0.0-1.41421im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+1.41421im  0.0+0.0im      0.0-1.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im\n 0.0+0.0im      0.0+0.0im      0.0+2.0im      0.0+0.0im      0.0-1.73205im  0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im      0.0+0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"By diagonalising this matrix the eigenstate have energy E and well-defined angular momentum.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Diagonalise this matrix to obtain the eigenstates of L_z. The eigenvectors provide the linear combinations of basis states with well-defined angular momentum, within the subspace of energy E.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Lz_vals, Lz_vecs = eigen(Lz_mat)","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Eigen{ComplexF64, Float64, Matrix{ComplexF64}, Vector{Float64}}\nvalues:\n10-element Vector{Float64}:\n -2.9999999999999956\n -2.999999999999991\n -0.9999999999999991\n -0.9999999999999982\n -0.9999999999999973\n  1.0000000000000002\n  1.0000000000000027\n  1.0000000000000027\n  3.0\n  3.0000000000000004\nvectors:\n10×10 Matrix{ComplexF64}:\n       0.0+0.0im       -5.55112e-17-0.353553im         0.534676-0.217841im      2.77556e-17-0.204124im             0.0+0.0im           0.534676+0.217841im      2.77556e-17+0.204124im             0.0+0.0im       -5.55112e-17+0.353553im           0.0+0.0im\n       0.0+0.0im        5.55112e-17-0.5im             -0.378073+0.154037im              0.0-0.288675im             0.0+0.0im          -0.378073-0.154037im     -5.55112e-17+0.288675im             0.0+0.0im                0.0+0.5im                0.0+0.0im\n       0.0+0.612372im           0.0+0.0im          -5.55112e-17+0.0im           -1.2326e-32+2.77556e-17im          0.0+0.353553im           0.0+0.0im                   0.0+2.77556e-17im          0.0+0.353553im           0.0+0.0im                0.0+0.612372im\n       0.0+0.0im                0.0+0.353553im      5.55112e-17+6.93889e-17im           0.0-0.612372im             0.0+0.0im        5.55112e-17-1.38778e-16im           0.0+0.612372im             0.0+0.0im                0.0-0.353553im           0.0+0.0im\n       0.0-0.353553im    1.2326e-32+1.11022e-16im   5.55112e-17-2.77556e-17im  -2.46519e-32-2.77556e-17im          0.0+0.612372im  -1.11022e-16-2.77556e-17im   4.93038e-32-2.77556e-17im          0.0+0.612372im   -1.2326e-32+8.32667e-17im        0.0-0.353553im\n       0.0+0.0im           0.353553+0.0im                   0.0+0.0im              0.612372+0.0im                  0.0+0.0im                0.0+0.0im              0.612372+0.0im                  0.0+0.0im           0.353553+0.0im                0.0+0.0im\n -0.353553+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.612372+0.0im                0.0+0.0im                   0.0+0.0im             0.612372+0.0im                0.0+0.0im           0.353553+0.0im\n       0.0+0.0im               -0.5+7.02973e-17im     -0.154037-0.378073im         0.288675-1.95105e-16im          0.0+0.0im          -0.154037+0.378073im         0.288675+2.29062e-16im          0.0+0.0im               -0.5-7.48398e-17im        0.0+0.0im\n       0.0+0.0im          -0.353553+8.84171e-17im      0.217841+0.534676im         0.204124-1.1389e-16im   8.32667e-17+0.0im           0.217841-0.534676im         0.204124+2.4427e-16im   8.32667e-17+0.0im          -0.353553-8.31718e-17im        0.0+0.0im\n  0.612372+0.0im                0.0+0.0im                   0.0+0.0im                   0.0+0.0im            -0.353553-0.0im                0.0+0.0im                   0.0+0.0im             0.353553+0.0im                0.0+0.0im          -0.612372-0.0im","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Finally, consider the effect of interactions by looking at how states in a single block are perturbed. Only the energy shift due to the interaction is relevant so now rebuild the Hamiltonian without the non-interacting energy.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Hint = HOCartesianContactInteractions(addr1; S, interaction_only = true)\nΔE = eigvals(Matrix(Hint, addr1))","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"5-element Vector{Float64}:\n -1.6810327175633306e-17\n  3.469966302164114e-17\n  0.15915494309189535\n  0.1591549430918954\n  0.1591549430918954","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Two eigenstates in this block are unaffected by the interaction and three have a non-zero energy shift.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"The default strength of the interaction is g = 1.0. Other interactions strengths can be obtained by using keyword argument g in HOCartesianContactInteractions or by rescaling ΔE since the interactions are handled with first-order perturbation theory.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"Rimu also contains HOCartesianEnergyConservedPerDim which is a similar Hamiltonian but with the stricter condition that the contact interaction only connects states that have the same total energy in each dimension, rather than conserving the overall total energy. Both Hamiltonians can handle anisotropic systems by passing a tuple S whose elements are not all the same. This will alter which states are connected by the interaction, but assumes that the harmonic trapping frequencies in each dimension are commensurate.","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"","category":"page"},{"location":"generated/HO-example.html","page":"Degenerate perturbation theory in a harmonic oscillator basis","title":"Degenerate perturbation theory in a harmonic oscillator basis","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"EditURL = \"../../../scripts/exact-example.jl\"","category":"page"},{"location":"generated/exact-example.html#Example-4:-Exact-diagonalization","page":"Exact diagonalization","title":"Example 4: Exact diagonalization","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When working with smaller systems or when multiple eigenvalues of a system are required, one can use an exact diagonalization method. There are a few ways to go about this, each with its pros and cons. The purpose of this tutorial is to show off the methods as well as provide a few tips regarding them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"A runnable script for this example is located here. Run it with julia exact-example.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We start by loading Rimu.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Rimu","category":"page"},{"location":"generated/exact-example.html#Introduction","page":"Exact diagonalization","title":"Introduction","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"We will look at a bosonic system of 4 particles in 5 sites, formulated in momentum space. Let's start by building the Hamiltonian. To create a Fock state where all particles have zero momentum, we put all the particles in the mode at the centre of the address.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"M = 5\nN = 4\nadd = BoseFS(M, cld(M, 2) => N)\nham = HubbardMom1D(add)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"HubbardMom1D(BoseFS{4,5}(0, 0, 4, 0, 0); u=1.0, t=1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Before performing exact diagonalization, it is a good idea to check the dimension of the Hamiltonian.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dimension(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"70","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that this is an estimate of the number of Fock states the Hamiltonian can act on, not the actual matrix size - the matrix size can sometimes be smaller. It can still be used as a guide to decide whether a Hamiltonian is amenable to exact diagonalization and to determine which algorithm would be best suited to diagonalising it.","category":"page"},{"location":"generated/exact-example.html#The-BasisSetRepresentation","page":"Exact diagonalization","title":"The BasisSetRepresentation","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As we'll see later, there are two ways to construct the matrices from Hamiltonians directly, but they both use BasisSetRepresentation under the hood. The BasisSetRepresentation, when called with a Hamiltonian and optionally a starting address, constructs the sparse matrix of the system, as well as its basis. The starting address defaults to the one that was used to initialize the Hamiltonian. BasisSetRepresentation only returns the part of the matrix that is accessible from this starting address through non-zero offdiagonal elements.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr = BasisSetRepresentation(ham);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To access the matrix or basis, access the sparse_matrix and basis fields, respectively.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.sparse_matrix","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"bsr.basis","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{BoseFS{4, 5, BitString{8, 1, UInt8}}}:\n fs\"|0 0 4 0 0⟩\"\n fs\"|0 1 2 1 0⟩\"\n fs\"|1 0 2 0 1⟩\"\n fs\"|1 0 1 2 0⟩\"\n fs\"|0 0 1 1 2⟩\"\n fs\"|0 2 1 0 1⟩\"\n fs\"|2 1 1 0 0⟩\"\n fs\"|0 2 0 2 0⟩\"\n fs\"|1 1 0 1 1⟩\"\n fs\"|2 0 0 0 2⟩\"\n fs\"|0 0 0 3 1⟩\"\n fs\"|3 0 0 1 0⟩\"\n fs\"|0 1 0 0 3⟩\"\n fs\"|1 3 0 0 0⟩\"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"When the basis is not needed, we can use Matrix or sparse directly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Matrix(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -6.8       0.69282   0.69282   0.0       0.0       0.0       0.0        0.0       0.0       0.0       0.0       0.0       0.0       0.0\n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843  0.0       0.0       0.0       0.0       0.0\n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8        0.0       0.282843  0.565685  0.0       0.0       0.0       0.0\n  0.0       0.8       0.4       0.581966  0.4       0.0       0.4        0.282843  0.565685  0.0       0.69282   0.69282   0.0       0.0\n  0.0       0.4       0.8       0.4       2.81803   0.4       0.0        0.0       0.565685  0.282843  0.69282   0.0       0.69282   0.0\n  0.0       0.8       0.4       0.0       0.4       0.581966  0.4        0.282843  0.565685  0.0       0.0       0.0       0.69282   0.69282\n  0.0       0.4       0.8       0.4       0.0       0.4       2.81803    0.0       0.565685  0.282843  0.0       0.69282   0.0       0.69282\n  0.0       0.565685  0.0       0.282843  0.0       0.282843  0.0       -0.472136  0.8       0.0       0.489898  0.0       0.0       0.489898\n  0.0       0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n  0.0       0.0       0.565685  0.0       0.282843  0.0       0.282843   0.0       0.8       8.47214   0.0       0.489898  0.489898  0.0\n  0.0       0.0       0.0       0.69282   0.69282   0.0       0.0        0.489898  0.489898  0.0       1.56393   0.0       0.0       0.0\n  0.0       0.0       0.0       0.69282   0.0       0.0       0.69282    0.0       0.489898  0.489898  0.0       6.03607   0.0       0.0\n  0.0       0.0       0.0       0.0       0.69282   0.69282   0.0        0.0       0.489898  0.489898  0.0       0.0       6.03607   0.0\n  0.0       0.0       0.0       0.0       0.0       0.69282   0.69282    0.489898  0.489898  0.0       0.0       0.0       0.0       1.56393","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sparse(ham)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 SparseArrays.SparseMatrixCSC{Float64, Int64} with 104 stored entries:\n -6.8       0.69282   0.69282    ⋅         ⋅         ⋅         ⋅          ⋅         ⋅         ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282  -3.03607   0.4       0.8       0.4       0.8       0.4        0.565685  0.282843   ⋅         ⋅         ⋅         ⋅         ⋅ \n  0.69282   0.4       1.43607   0.4       0.8       0.4       0.8         ⋅        0.282843  0.565685   ⋅         ⋅         ⋅         ⋅ \n   ⋅        0.8       0.4       0.581966  0.4        ⋅        0.4        0.282843  0.565685   ⋅        0.69282   0.69282    ⋅         ⋅ \n   ⋅        0.4       0.8       0.4       2.81803   0.4        ⋅          ⋅        0.565685  0.282843  0.69282    ⋅        0.69282    ⋅ \n   ⋅        0.8       0.4        ⋅        0.4       0.581966  0.4        0.282843  0.565685   ⋅         ⋅         ⋅        0.69282   0.69282\n   ⋅        0.4       0.8       0.4        ⋅        0.4       2.81803     ⋅        0.565685  0.282843   ⋅        0.69282    ⋅        0.69282\n   ⋅        0.565685   ⋅        0.282843   ⋅        0.282843   ⋅        -0.472136  0.8        ⋅        0.489898   ⋅         ⋅        0.489898\n   ⋅        0.282843  0.282843  0.565685  0.565685  0.565685  0.565685   0.8       4.4       0.8       0.489898  0.489898  0.489898  0.489898\n   ⋅         ⋅        0.565685   ⋅        0.282843   ⋅        0.282843    ⋅        0.8       8.47214    ⋅        0.489898  0.489898   ⋅ \n   ⋅         ⋅         ⋅        0.69282   0.69282    ⋅         ⋅         0.489898  0.489898   ⋅        1.56393    ⋅         ⋅         ⋅ \n   ⋅         ⋅         ⋅        0.69282    ⋅         ⋅        0.69282     ⋅        0.489898  0.489898   ⋅        6.03607    ⋅         ⋅ \n   ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    ⋅          ⋅        0.489898  0.489898   ⋅         ⋅        6.03607    ⋅ \n   ⋅         ⋅         ⋅         ⋅         ⋅        0.69282   0.69282    0.489898  0.489898   ⋅         ⋅         ⋅         ⋅        1.56393","category":"page"},{"location":"generated/exact-example.html#Computing-eigenvalues","page":"Exact diagonalization","title":"Computing eigenvalues","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now that we have a way of constructing matrices from Hamiltonians, we can use standard Julia functionality to diagonalise them.","category":"page"},{"location":"generated/exact-example.html#The-built-in-method","page":"Exact diagonalization","title":"The built-in method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's begin by looking at the eigen, eigvecs, and eigvals functions from the LinearAlgebra standard library. They operate on dense matrices and return the full spectra, hence they are only useful for small systems, or when all eigenvalues are required.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using LinearAlgebra\n\nmat = Matrix(ham)\neig = eigen(mat);","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The values can be accessed like so:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.values","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.9798639983216155\n -3.363124291613371\n -0.7590191922770746\n  0.1358418221962303\n  0.1578999869460933\n  0.8767114411781396\n  1.530592997097333\n  1.5835732611867464\n  3.072870330325867\n  3.125672653951849\n  4.862107221562182\n  6.26069485038059\n  6.402671211183119\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The vectors are stored as columns in eig.vectors:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eig.vectors","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14×14 Matrix{Float64}:\n -0.980348     0.175378     0.0135766   -2.81719e-15  -0.0221221  -0.0697193   1.3739e-15    0.0314466   -2.35922e-16  -0.0360987   -0.0161557  -5.55112e-17   0.00625248  -0.0058099\n  0.177701     0.932229     0.105473     3.01009e-14   0.225254   -0.132826    9.71445e-17  -0.00292026  -2.09555e-15  -0.0861158   -0.0907789  -4.996e-16     0.0591715   -0.0264275\n  0.0768085   -0.0622307    0.0129069   -6.06251e-14  -0.447424   -0.63969     2.05322e-14   0.383444    -6.54338e-15  -0.431051    -0.181167   -6.10623e-16   0.0599783   -0.106852\n -0.0214153   -0.175119    -0.20169      0.616673      0.522017   -0.296818   -0.31234      -0.122119    -0.123629     -0.106455    -0.126661    0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797    0.0693699     0.0495446   0.416847    0.33773       0.0584554   -0.601232     -0.467179    -0.215841   -0.140166      0.190543    -0.114342\n -0.0214153   -0.175119    -0.20169     -0.616673      0.522017   -0.296818    0.31234      -0.122119     0.123629     -0.106455    -0.126661   -0.0829132     0.148347    -0.0574235\n -0.0119687   -0.0373038    0.0678797   -0.0693699     0.0495446   0.416847   -0.33773       0.0584554    0.601232     -0.467179    -0.215841    0.140166      0.190543    -0.114342\n -0.0138439   -0.165902     0.922758     1.00753e-14   0.1111     -0.172508   -1.30521e-14  -0.207974     2.66454e-15   0.0848902   -0.149153   -8.32667e-16   0.0712921   -0.0301968\n -0.00234782   0.00840544  -0.098969    -9.6867e-15   -0.0847116   0.082999    1.51129e-14   0.274424     3.60822e-15   0.575786    -0.61385    -2.72005e-15   0.353775    -0.259338\n -0.00237613   0.00294196   0.00143189   5.56152e-15   0.0427486   0.0110863  -3.72619e-15  -0.0663108    9.50628e-16   0.00167015   0.0832916   2.91434e-15  -0.448519    -0.8863\n  0.00363555   0.0455298   -0.133824    -0.332825     -0.290831   -0.057199   -0.527627     -0.588225    -0.332816     -0.0472302   -0.18528    -0.00844536    0.0915588   -0.0346434\n  0.00195478   0.0150664    0.0206752   -0.0642658    -0.0638689  -0.0250518   0.0999631    -0.012992    -0.111668      0.0393523    0.423534    0.688046      0.513839    -0.222499\n  0.00195478   0.0150664    0.0206752    0.0642658    -0.0638689  -0.0250518  -0.0999631    -0.012992     0.111668      0.0393523    0.423534   -0.688046      0.513839    -0.222499\n  0.00363555   0.0455298   -0.133824     0.332825     -0.290831   -0.057199    0.527627     -0.588225     0.332816     -0.0472302   -0.18528     0.00844536    0.0915588   -0.0346434","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If you need the full spectrum, but would like to use less memory, consider using the in-place eigen!.","category":"page"},{"location":"generated/exact-example.html#Iterative-sparse-solvers","page":"Exact diagonalization","title":"Iterative sparse solvers","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"For larger Hamiltonians, it is better to use an iterative solver. There are several options. We will look at eigs from Arpack.jl and eigsolve from KrylovKit.jl.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Let's start with Arpack's eigs. It is important to set the nev and which keyword arguments. nev sets the number of eigenpairs to find. which should in most cases be set to :SR, which will find the eigenvalues with the smallest real part.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using Arpack\n\nnum_eigvals = 3\n\nsparse_matrix = sparse(ham)\nvals_ar, vecs_ar = eigs(sparse_matrix; which=:SR, nev=num_eigvals)\nvals_ar","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"3-element Vector{Float64}:\n -6.979863998321619\n -3.3631242916133606\n -0.7590191922770747","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Using KrylovKit's eigsolve is similar, but the nev and which are given as positional arguments. Note that KrylovKit may sometimes return more than nev eigenpairs if it happens to find them.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"using KrylovKit\n\nvals_kk, vecs_kk = eigsolve(sparse_matrix, num_eigvals, :SR)\nvals_kk","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element Vector{Float64}:\n -6.979863998321601\n -3.363124291613371\n -0.7590191922770853\n  0.13584182219621077\n  0.15789998694609508\n  0.876711441178136\n  1.530592997097317\n  1.5835732611867481\n  3.0728703303258706\n  3.1256726539518365\n  4.862107221562165\n  6.260694850380596\n  6.4026712111831126\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Both solvers use variants of the Lanczos algorithm for Hermitian matrices and the Arnoldi algorithm for non-Hermitian ones. These may in some cases miss degenerate eigenpairs.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"If diagonalization takes too long, you can reduce the tolerance by setting the tol keyword argument to eigs or eigsolve. Using drastically lower tolerances than the default can still produce good results in practice. This, however, should be checked on a case-by-case basis.","category":"page"},{"location":"generated/exact-example.html#The-matrix-free-method","page":"Exact diagonalization","title":"The matrix-free method","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"KrylovKit's eigsolve function is implemented in a way that does not require the linear operator and vector to be Julia arrays. Rimu leverages this functionality, which allows diagonalising Hamiltonians without ever needing to construct the matrix - all matrix elements are generated on the fly.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"While this method is by far the slowest of the ones discussed, it also uses drastically less memory. This allows us to diagonalise much larger Hamiltonians.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To use this method, you first need a starting vector. It's best to use PDVec here as it leverages threading during the diagonalization.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(add => 1.0)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|0 0 4 0 0⟩\" => 1.0","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Then, pass that vector and the Hamiltonian to eigsolve.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"vals_mf, vecs_mf = eigsolve(ham, dvec, num_eigvals, :SR; issymmetric=true)\nvals_mf","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321612\n -3.3631242916133406\n -0.7590191922770728\n  0.1578999869460862\n  0.8767114411781503\n  1.5835732611867401\n  3.125672653951839\n  4.862107221562172\n  6.402671211183112\n  9.093371706203953","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Keep in mind that if an eigenvector is orthogonal to dvec, KrylovKit will miss it. Consider the following example:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"eigsolve(ham, vecs_mf[2], num_eigvals, :SR, issymmetric=true)[1]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"1-element Vector{Float64}:\n -3.3631242916133606","category":"page"},{"location":"generated/exact-example.html#Reducing-matrix-size-with-symmetries","page":"Exact diagonalization","title":"Reducing matrix size with symmetries","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"As these matrices tend to get large quickly, memory is usually the bottleneck.  There are currently two methods implemented to reduce the matrix size, ParitySymmetry and TimeReversalSymmetry. These symmetries work by performing a unitary transformation on the Hamiltonian which causes it to become block-diagonal. When building a matrix from a block-diagonal Hamiltonian, only the block that contains the starting address is constructed.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"You should only use these where the relevant symmetries actually apply - no checks are performed to make sure they do. There is also currently no way of using both at the same time. Please consult the documentation for a more in-depth description of these options.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The Hamiltonian presented in this example is compatible with ParitySymmetry. Let's see how the matrix size is reduced when applying it.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ham))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(14, 14)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"size(sparse(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"(10, 10)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"In this small example, the size reduction is modest, but for larger systems, you can expect to reduce the dimension of the matrix by about half.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"all_eigs = eigvals(Matrix(ham))\neven_eigs = eigvals(Matrix(ParitySymmetry(ham)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"10-element Vector{Float64}:\n -6.979863998321621\n -3.3631242916133637\n -0.759019192277076\n  0.1578999869460802\n  0.8767114411781437\n  1.5835732611867417\n  3.125672653951844\n  4.862107221562179\n  6.402671211183117\n  9.093371706203957","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvalues of the transformed Hamiltonian are a subset of the full spectrum. To get the other half, we can pass the even=false keyword argument to ParitySymmetry. When doing that, we need to make sure the starting address of the Hamiltonian is not symmetric under reversal:","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"add_odd = BoseFS(M, cld(M, 2) => N - 3, cld(M, 2) - 1 => 2, cld(M, 2) + 2 => 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"BoseFS{4,5}(0, 2, 1, 0, 1)","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"odd_eigs = eigvals(Matrix(ParitySymmetry(HubbardMom1D(add_odd); even=false)))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"4-element Vector{Float64}:\n 0.135841822196218\n 1.530592997097328\n 3.0728703303258613\n 6.260694850380591","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Now, let's check that combining the two sets of eigenvalues indeed recovers the whole spectrum.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"sort([even_eigs; odd_eigs]) ≈ all_eigs","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"true","category":"page"},{"location":"generated/exact-example.html#Computing-observables","page":"Exact diagonalization","title":"Computing observables","text":"","category":"section"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"Since building a matrix from an operator only builds the part that is reachable from the starting address, we need to use a different approach when computing observables.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"To demonstrate this, we will use the DensityMatrixDiagonal operator, which in this case will give the momentum density.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The idea here is to construct a PDVec from the computed eigenvector and use it directly with the operator.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"dvec = PDVec(zip(bsr.basis, eigvecs(Matrix(ham))[:, 1]))","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"14-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 0 1 2 0⟩\" => -0.0214153\n  fs\"|2 0 0 0 2⟩\" => -0.00237613\n  fs\"|0 0 4 0 0⟩\" => -0.980348\n  fs\"|0 0 0 3 1⟩\" => 0.00363555\n  fs\"|2 1 1 0 0⟩\" => -0.0119687\n  fs\"|1 0 2 0 1⟩\" => 0.0768085\n  fs\"|1 3 0 0 0⟩\" => 0.00363555\n  fs\"|0 1 2 1 0⟩\" => 0.177701\n  fs\"|0 0 1 1 2⟩\" => -0.0119687\n  fs\"|3 0 0 1 0⟩\" => 0.00195478\n  fs\"|0 2 0 2 0⟩\" => -0.0138439\n  fs\"|1 1 0 1 1⟩\" => -0.00234782\n  fs\"|0 1 0 0 3⟩\" => 0.00195478\n  fs\"|0 2 1 0 1⟩\" => -0.0214153","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"The eigenvectors these methods produce are normalized, hence we can use the three-argument dot to compute the values of observables. Here we are computing the single particle momentum density distribution, which is just the diagonal of the single-particle density matrix in momentum space.","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"[dot(dvec, DensityMatrixDiagonal(i), dvec) for i in 1:M]","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"5-element Vector{Float64}:\n 0.0066861389450877905\n 0.033070399772041625\n 3.9204869225657406\n 0.03307039977204162\n 0.006686138945087839","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"","category":"page"},{"location":"generated/exact-example.html","page":"Exact diagonalization","title":"Exact diagonalization","text":"This page was generated using Literate.jl.","category":"page"},{"location":"rimuio.html#Module-RimuIO","page":"I/O","title":"Module RimuIO","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Modules = [RimuIO]","category":"page"},{"location":"rimuio.html#Rimu.RimuIO","page":"I/O","title":"Rimu.RimuIO","text":"Module to provide file input and output functionality for Rimu. Provides convenience functions:\n\nRimuIO.save_df(filename, df::DataFrame) Save dataframe in Arrow format.\nRimuIO.load_df(filename) Load Arrow file into dataframe.\n\n\n\n\n\n","category":"module"},{"location":"rimuio.html#Rimu.RimuIO.load_df-Tuple{Any}","page":"I/O","title":"Rimu.RimuIO.load_df","text":"RimuIO.load_df(filename; propagate_metadata = true, add_filename = true) -> DataFrame\n\nLoad Arrow file into DataFrame. Optionally propagate metadata to DataFrame and add the file name as metadata.\n\nSee also RimuIO.save_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Rimu.RimuIO.save_df-Tuple{Any, DataFrame}","page":"I/O","title":"Rimu.RimuIO.save_df","text":"RimuIO.save_df(filename, df::DataFrame; kwargs...)\n\nSave dataframe in Arrow format.\n\nKeyword arguments are passed on to Arrow.write. Compression is enabled by default for large DataFrames (over 10,000 rows).\n\nTable-level metadata of the DataFrame is saved as Arrow metadata (with String value) unless overwritten with the keyword argument metadata.\n\nSee also RimuIO.load_df.\n\n\n\n\n\n","category":"method"},{"location":"rimuio.html#Index","page":"I/O","title":"Index","text":"","category":"section"},{"location":"rimuio.html","page":"I/O","title":"I/O","text":"Pages   = [\"rimuio.md\"]","category":"page"},{"location":"hamiltonians.html#Module-Hamiltonians","page":"Hamiltonians","title":"Module Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This module contains definitions of Hamiltonians, in particular specific physical models of interest. These are organised by means of an interface around the abstract type AbstractHamiltonian, in the spirit of the AbstractArray interface as discussed in the Julia Documentation.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The Hamiltonians can be used for projector quantum Monte Carlo with ProjectorMonteCarloProblem or for exact diagonalization with ExactDiagonalizationProblem, see Exact Diagonalization.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians","page":"Hamiltonians","title":"Rimu.Hamiltonians","text":"The module Rimu.Hamiltonians defines types and functions for working with Hamiltonians.\n\nExported concrete Hamiltonian types\n\nReal space Hubbard models\n\nHubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D\n\nMomentum space Hubbard models\n\nHubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP\n\nHarmonic oscillator models\n\nHOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity\n\nOther\n\nFroehlichPolaron\nMatrixHamiltonian\nTranscorrelated1D\n\nWrappers\n\nGutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic\n\nObservables\n\nParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO\n\nInterface for working with Hamiltonians\n\nAbstractHamiltonian: defined in the module Interfaces\n\n\n\n\n\n","category":"module"},{"location":"hamiltonians.html#Model-Hamiltonians","page":"Hamiltonians","title":"Model Hamiltonians","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Here is a list of fully implemented model Hamiltonians. There are several variants of the Hubbard model in real and momentum space, as well as some other models.","category":"page"},{"location":"hamiltonians.html#Real-space-Hubbard-models","page":"Hamiltonians","title":"Real space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardReal1D\nBoseHubbardReal1D2C\nHubbardReal1DEP\nHubbardRealSpace\nExtendedHubbardReal1D","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1D","text":"HubbardReal1D(address; u=1.0, t=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\n\nSee also\n\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardReal1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardReal1D2C","text":"BoseHubbardReal1D2C(address::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0)\n\nImplements a two-component one-dimensional Bose Hubbard chain in real space.\n\nhatH = hatH_a + hatH_b + Vsum_i n_a_in_b_i\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nua: the on-site interaction parameter parameter for Hamiltonian a.\nub: the on-site interaction parameter parameter for Hamiltonian b.\nta: the hopping strength for Hamiltonian a.\ntb: the hopping strength for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nSee also\n\nHubbardReal1D\nBoseHubbardMom1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardReal1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardReal1DEP","text":"HubbardReal1DEP(address; u=1.0, t=1.0, v_ho=1.0)\n\nImplements a one-dimensional Bose Hubbard chain in real space with external potential.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + sum_i ϵ_i n_i\n+ fracu2sum_i n_i (n_i-1)\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\nv_ho: strength of the external harmonic oscillator potential ϵ_i = v_ho i^2.\n\nThe first index is i=0 and the maximum of the potential occurs in the centre of the lattice.\n\nSee also\n\nHubbardReal1D\nHubbardMom1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardRealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardRealSpace","text":"HubbardRealSpace(address; geometry=PeriodicBoundaries(M,), t=ones(C), u=ones(C, C), v=zeros(C, D))\n\nHubbard model in real space. Supports single or multi-component Fock state addresses (with C components) and various (rectangular) lattice geometries in D dimensions.\n\n  hatH = -sum_langle ijrangleσ t_σ a^_iσ a_jσ +\n  frac12sum_iσ u_σσ n_iσ (n_iσ - 1) +\n  sum_iστu_στ n_iσ n_iτ\n\nIf v is nonzero then this calculates hatH + hatV by adding the harmonic trapping potential\n\n    hatV = sum_iσd v_σd x_di^2 n_iσ\n\nwhere x_di is the distance of site i from the centre of the trap along dimension d.\n\nAddress types\n\nBoseFS: Single-component Bose-Hubbard model.\nFermiFS: Single-component Fermi-Hubbard model.\nCompositeFS: For multi-component models.\n\nNote that a single component of fermions cannot interact with itself. A warning is produced if addressis incompatible with the interaction parameters u.\n\nGeometries\n\nImplemented CubicGrids for keyword geometry\n\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries\n\nDefault is geometry=PeriodicBoundaries(M,), i.e. a one-dimensional lattice with the number of sites M inferred from the number of modes in address.\n\nOther parameters\n\nt: the hopping strengths. Must be a vector of length C. The i-th element of the vector corresponds to the hopping strength of the i-th component.\nu: the on-site interaction parameters. Must be a symmetric matrix. u[i, j] corresponds to the interaction between the i-th and j-th component. u[i, i] corresponds to the interaction of a component with itself. Note that u[i,i] must be zero for fermionic components.\nv: the trap potential strengths. Must be a matrix of size C × D. v[i,j] is the strength of the trap for component i in the jth dimension.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ExtendedHubbardReal1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.ExtendedHubbardReal1D","text":"ExtendedHubbardReal1D(address; u=1.0, v=1.0, t=1.0)\n\nImplements the extended Hubbard model on a one-dimensional chain in real space.\n\nhatH = -t sum_langle ijrangle a_i^ a_j + fracu2sum_i n_i (n_i-1) + v sum_langle ijrangle n_i n_j\n\nArguments\n\naddress: the starting address.\nu: on-site interaction parameter\nv: the next-neighbor interaction\nt: the hopping strength\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Momentum-space-Hubbard-models","page":"Hamiltonians","title":"Momentum space Hubbard models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HubbardMom1D\nBoseHubbardMom1D2C\nHubbardMom1DEP","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1D","text":"HubbardMom1D(address; u=1.0, t=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space.\n\nhatH =  sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\n\nSee also\n\nHubbardReal1D\nExtendedHubbardReal1D\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.BoseHubbardMom1D2C","page":"Hamiltonians","title":"Rimu.Hamiltonians.BoseHubbardMom1D2C","text":"BoseHubbardMom1D2C(add::BoseFS2C; ua=1.0, ub=1.0, ta=1.0, tb=1.0, v=1.0, kwargs...)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with a two-component Bose gas.\n\nhatH = hatH_a + hatH_b + fracVMsum_kpqr b^_r a^_q b_p a_k δ_r+qp+k\n\nArguments\n\nadd: the starting address.\nua: the u parameter for Hamiltonian a.\nub: the u parameter for Hamiltonian b.\nta: the t parameter for Hamiltonian a.\ntb: the t parameter for Hamiltonian b.\nv: the inter-species interaction parameter V.\n\nFurther keyword arguments are passed on to the constructor of HubbardMom1D.\n\nSee also\n\nBoseFS2C\nBoseHubbardReal1D2C\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HubbardMom1DEP","page":"Hamiltonians","title":"Rimu.Hamiltonians.HubbardMom1DEP","text":"HubbardMom1DEP(address; u=1.0, t=1.0, v_ho=1.0, dispersion=hubbard_dispersion)\n\nImplements a one-dimensional Bose Hubbard chain in momentum space with harmonic external potential.\n\nH = sum_k ϵ_k n_k + fracuMsum_kpqr a^_r a^_q a_p a_k δ_r+qp+k\n            + V_mathrmho \n\nwhere\n\nbeginaligned\nV_mathrmho  = frac1M sum_pq  mathrmDFTV_ext_p-q \n                    a^_p a_q \nV_mathrmext(x) = v_mathrmho x^2 \nendaligned\n\nis an external harmonic potential in momentum space, mathrmDFT_k is a discrete Fourier transform performed by fft()[k%M + 1], and M == num_modes(address).\n\nArguments\n\naddress: the starting address, defines number of particles and sites.\nu: the interaction parameter.\nt: the hopping strength.\ndispersion: defines ϵ_k =t*dispersion(k)\nhubbard_dispersion: ϵ_k = -2t cos(k)\ncontinuum_dispersion: ϵ_k = tk^2\nv_ho: strength of the external harmonic oscillator potential v_mathrmho.\n\nSee also HubbardMom1D, HubbardReal1DEP, Transcorrelated1D, Hamiltonians.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Harmonic-oscillator-models","page":"Hamiltonians","title":"Harmonic oscillator models","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"HOCartesianContactInteractions\nHOCartesianEnergyConservedPerDim\nHOCartesianCentralImpurity","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianContactInteractions","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianContactInteractions","text":"HOCartesianContactInteractions(addr; S, η, g = 1.0, interaction_only = false, block_by_level = true)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i epsilon_mathbfi n_mathbfi + fracg2sum_mathbfijkl \n    V_mathbfijkl a^_mathbfi a^_mathbfj a_mathbfk a_mathbfl\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nBy default the offdiagonal elements due to the interactions are consistent with first-order  degenerate perturbation theory\n\n    V_mathbfijkl = delta_epsilon_mathbfi + epsilon_mathbfj\n        ^epsilon_mathbfk + epsilon_mathbfl \n        prod_d in x yldots mathcalI(i_dj_dk_dl_d)\n\nwhere the delta function indicates that the total noninteracting energy is conserved meaning all states with the same noninteracting energy are connected by this interaction and  the Hamiltonian blocks according to noninteracting energy levels. Setting block_by_level = false will disable this restriction and allow coupling between  basis states of any noninteracting energy level, leading to many more offdiagonals and  fewer but larger blocks (the blocks are still distinguished by parity of basis states). Alternatively, see HOCartesianEnergyConservedPerDim for a model with the stronger  restriction that conserves energy separately per spatial dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, implemented in four_oscillator_integral_general.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. The    allowed couplings between states is defined by the aspect ratio of S .- 1. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to make    the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. This will only affect the single particle energy scale and not the    interactions. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) bare interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\nblock_by_level: if set to false will allow the interactions to couple all states without    comparing their noninteracting energy.\n\nwarning: Warning\nnum_offdiagonals is a bad estimate for this Hamiltonian. Take care when building  a matrix or using QMC methods. Use get_all_blocks first then pass option col_hint = block_size to BasisSetRep to safely build the matrix.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianEnergyConservedPerDim","text":"HOCartesianEnergyConservedPerDim(addr; S, η, g = 1.0, interaction_only = false)\n\nImplements a bosonic harmonic oscillator in Cartesian basis with contact interactions \n\nhatH = sum_i ϵ_i n_i + fracg2sum_ijkl V_ijkl a^_i a^_j a_k a_l\n\nwith the additional restriction that the interactions only couple states with the same energy in each dimension separately. See HOCartesianContactInteractions for a model that  conserves total energy.\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfijkl are for a contact interaction calculated in this basis using  first-order degenerate perturbation theory.\n\n    V_mathbfijkl = prod_d in x yldots mathcalI(i_dj_dk_dl_d) \n        delta_i_d + j_d^k_d + l_d\n\nwhere the delta-function indicates that the noninteracting energy is conserved along each dimension. The integral mathcalI(abcd) is of four one dimensional harmonic oscillator  basis functions, see four_oscillator_integral_general, with the additional restriction  that energy is conserved in each dimension.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nS: Tuple of the number of levels in each dimension, including the groundstate. Defaults    to a 1D spectrum with number of levels matching modes of addr. Will be sorted to    make the first dimension the largest.\nη: Define a custom aspect ratio for the trapping potential strengths, instead of deriving   from S .- 1. The values are always scaled relative to the first dimension, which sets    the energy scale of the system, hbaromega_x.\ng: the (isotropic) interparticle interaction parameter. The value of g is assumed    to be in trap units.\ninteraction_only: if set to true then the noninteracting single-particle terms are    ignored. Useful if only energy shifts due to interactions are required.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HOCartesianCentralImpurity","page":"Hamiltonians","title":"Rimu.Hamiltonians.HOCartesianCentralImpurity","text":"HOCartesianCentralImpurity(addr; kwargs...)\n\nHamiltonian of non-interacting particles in an arbitrary harmonic trap with a delta-function  potential at the centre, with strength g,\n\nhatH_mathrmrel = sum_mathbfi ϵ_mathbfi n_mathbfi \n    + gsum_mathbfij V_mathbfij a^_mathbfi a_mathbfj\n\nFor a D-dimensional harmonic oscillator indices mathbfi mathbfj ldots  are D-tuples. The energy scale is defined by the first dimension i.e. hbar omega_x  so that single particle energies are \n\n    fracepsilon_mathbfihbar omega_x = (i_x + 12) + eta_y (i_y+12) + ldots\n\nThe factors eta_y ldots allow for anisotropic trapping geometries and are assumed to  be greater than 1 so that omega_x is the smallest trapping frequency.\n\nMatrix elements V_mathbfij are for a delta function potential calculated in this basis\n\n    V_mathbfij = prod_d in x yldots psi_i_d(0) psi_j_d(0)\n\nOnly even parity states feel this impurity, so all i_d are even. Note that the matrix  representation of this Hamiltonian for a single particle is completely dense in the even-parity  subspace.\n\nArguments\n\naddr: the starting address, defines number of particles and total number of modes.\nmax_nx = num_modes(addr) - 1: the maximum harmonic oscillator index number in the x-dimension.   Must be even. Index number for the harmonic oscillator groundstate is 0.\nηs = (): a tuple of aspect ratios for the remaining dimensions (η_y, ...). Should be empty    for a 1D trap or contain values greater than 1.0. The maximum index    in other dimensions will be the largest even number less than M/η_y.\nS = nothing: Instead of max_nx, manually set the number of levels in each dimension,    including the groundstate. Must be a Tuple of Ints.\ng = 1.0: the strength of the delta impurity in (x-dimension) trap units.\nimpurity_only=false: if set to true then the trap energy terms are ignored. Useful if    only energy shifts due to the impurity are required.\n\nwarning: Warning\nDue to use of `SpecialFunctions` with large arguments the matrix representation of \nthis Hamiltonian may not be strictly symmetric, but is approximately symmetric within\nmachine precision.\n\nSee also HOCartesianContactInteractions andHOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Other","page":"Hamiltonians","title":"Other","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"MatrixHamiltonian\nTranscorrelated1D\nFroehlichPolaron","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.MatrixHamiltonian","page":"Hamiltonians","title":"Rimu.Hamiltonians.MatrixHamiltonian","text":"MatrixHamiltonian(\n    mat::AbstractMatrix{T};\n    starting_address::Int = starting_address(mat)\n) <: AbstractHamiltonian{T}\n\nWrap an abstract matrix mat as an AbstractHamiltonian object. Works with stochastic methods of lomc!() and DVec. Optionally, a valid index can be provided as the starting_address.\n\nSpecialised methods are implemented for sparse matrices of type AbstractSparseMatrixCSC. One based indexing is required for the matrix mat.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Transcorrelated1D","page":"Hamiltonians","title":"Rimu.Hamiltonians.Transcorrelated1D","text":"Transcorrelated1D(address; t=1.0, v=1.0, v_ho=0.0, cutoff=1, three_body_term=true)\n\nImplements a transcorrelated Hamiltonian for contact interactions in one dimensional momentum space from Jeszenski et al. (2018). Currently limited to two component fermionic addresses.\n\nbeginaligned\n\ntildeH = t sum_kσk^2 n_kσ \n    quad + sum_pqkσσ T_pqk a^_p-kσ a^_q+kσ a_qσ a_pσ \n    quad + sum_pqskkσσ Q_kka^_p-kσ a^_q+kσ a^_s+k-kσ\n                                       a_sσ a_qσ a_pσ \n    quad + V_mathrmho\nendaligned\n\nwhere\n\nbeginaligned\ntildeu(k) = begincases -frac2k^2 mathrmif  k  k_c\n0  mathrmotherwise\nendcases\n\n\nT_pqk = fracvM + frac2vMleftk^2tildeu(k)\n          - (p - q)ktildeu(k)right + frac2v^2tW(k)\nW(k) = frac1M^2sum_q (k - q)q tildeu(q)tildeu(k - q) \nQ_kl = -fracv^2t M^2k tildeu(k)ltildeu(l)\nendaligned\n\nArguments\n\naddress: The starting address, defines number of particles and sites.\nv: The interaction parameter.\nt: The kinetic energy prefactor.\nv_ho: Strength of the external harmonic oscillator potential V_mathrmho. See HubbardMom1DEP.\ncutoff controls k_c in equations above. Note: skipping generating off-diagonal elements below the cutoff is not implemented - zero-valued elements are returned instead.\nthree_body_term: If set to false, generating three body excitations is skipped. Note: when disabling three body terms, cutoff should be set to a higher value for best results.\n\nSee also\n\nHubbardMom1D\nHubbardMom1DEP\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.FroehlichPolaron","page":"Hamiltonians","title":"Rimu.Hamiltonians.FroehlichPolaron","text":"FroehlichPolaron(address::OccupationNumberFS{M}; kwargs...) <: AbstractHamiltonian\n\nThe Froehlich polaron Hamiltonian for a 1D lattice with M momentum modes is given by\n\nH = (p_f - p)^2m + ωN - v Σₖ(aₖ^ + aₖ)\n\nwhere p is the total momentum, p_f = Σ_k k aₖ^ aₖ is the momentum operator for the bosons, and k part of the momentum lattice with separation 2πl. N is the number operator for the bosons.\n\nKeyword Arguments\n\np=0.0: the total momentum p.\nv=1.0: the coupling strength v.\nmass=1.0: the particle mass m.\nomega=1.0: the oscillation frequency of the phonons ω.\nl=1.0: the box size in real space l. Provides scale parameter of the momentum   lattice.\nmomentum_cutoff=nothing: the maximum boson momentum allowed for an address.\nmode_cutoff: the maximum number of bosons in each momentum mode. Defaults to the maximum   value supported by the address type OccupationNumberFS.\n\nExamples\n\njulia> fs = OccupationNumberFS(0,0,0)\nOccupationNumberFS{3, UInt8}(0, 0, 0)\n\njulia> ham = FroehlichPolaron(fs; v=0.5)\nFroehlichPolaron(fs\"|0 0 0⟩{8}\"; v=0.5, mass=1.0, omega=1.0, l=1.0, p=0.0, mode_cutoff=255)\n\njulia> dimension(ham)\n16777216\n\njulia> dimension(FroehlichPolaron(fs; v=0.5, mode_cutoff=5))\n216\n\nSee also OccupationNumberFS, dimension, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Convenience-functions","page":"Hamiltonians","title":"Convenience functions","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"rayleigh_quotient\nmomentum\nhubbard_dispersion\ncontinuum_dispersion\nshift_lattice\nshift_lattice_inv","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.rayleigh_quotient","page":"Hamiltonians","title":"Rimu.Hamiltonians.rayleigh_quotient","text":"rayleigh_quotient(H, v)\n\nReturn the Rayleigh quotient of the linear operator H and the vector v:\n\nfrac v  H  v  vv \n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.momentum","text":"momentum(ham::AbstractHamiltonian)\n\nMomentum as a linear operator in Fock space. Pass a Hamiltonian ham in order to convey information about the Fock basis. Returns an AbstractHamiltonian that represents the momentum operator.\n\nNote: momentum is currently only defined on HubbardMom1D.\n\nExample\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3));\n\n\njulia> ham = HubbardMom1D(add; u = 2.0, t = 1.0);\n\n\njulia> mom = momentum(ham);\n\n\njulia> diagonal_element(mom, add) # calculate the momentum of a single configuration\n-1.5707963267948966\n\njulia> v = DVec(add => 10; capacity=1000);\n\n\njulia> rayleigh_quotient(mom, v) # momentum expectation value for state vector `v`\n-1.5707963267948966\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.hubbard_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.hubbard_dispersion","text":"hubbard_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns -2cos(k).\n\nSee also continuum_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.continuum_dispersion","page":"Hamiltonians","title":"Rimu.Hamiltonians.continuum_dispersion","text":"continuum_dispersion(k)\n\nDispersion relation for HubbardMom1D. Returns k^2.\n\nSee also hubbard_dispersion.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice","text":"shift_lattice(is)\n\nCircular shift contiguous indices is in interval [M÷2, M÷2) such that set starts with 0, where M=length(is).\n\nInverse operation: shift_lattice_inv. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.shift_lattice_inv","page":"Hamiltonians","title":"Rimu.Hamiltonians.shift_lattice_inv","text":"shift_lattice_inv(js)\n\nCircular shift indices starting with 0 into a contiguous set in interval [M÷2, M÷2), where M=length(js).\n\nInverse operation of shift_lattice. Used in HubbardReal1DEP and HubbardMom1DEP\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Hamiltonian-wrappers","page":"Hamiltonians","title":"Hamiltonian wrappers","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following Hamiltonians are constructed from an existing Hamiltonian instance and change its behaviour:","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"GutzwillerSampling\nGuidingVectorSampling\nParitySymmetry\nTimeReversalSymmetry\nStoquastic","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GutzwillerSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GutzwillerSampling","text":"GutzwillerSampling(::AbstractHamiltonian; g)\n\nWrapper over any AbstractHamiltonian that implements Gutzwiller sampling. In this importance sampling scheme the Hamiltonian is modified as follows\n\ntildeH_ij = H_ij e^-g(H_ii - H_jj) \n\nThis way off-diagonal spawns to higher-energy configurations are discouraged and spawns to lower-energy configurations encouraged for positive g.\n\nConstructor\n\nGutzwillerSampling(::AbstractHamiltonian, g)\nGutzwillerSampling(::AbstractHamiltonian; g)\n\nAfter construction, we can access the underlying Hamiltonian with G.hamiltonian and the g parameter with G.g.\n\nExample\n\njulia> H = HubbardMom1D(BoseFS(1,1,1); u=6.0, t=1.0)\nHubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0)\n\njulia> G = GutzwillerSampling(H, g=0.3)\nGutzwillerSampling(HubbardMom1D(BoseFS{3,3}(1, 1, 1); u=6.0, t=1.0); g=0.3)\n\njulia> get_offdiagonal(H, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 2.0)\n\njulia> get_offdiagonal(G, BoseFS(2, 1, 0), 1)\n(BoseFS{3,3}(1, 0, 2), 0.8131393194811987)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.GuidingVectorSampling","page":"Hamiltonians","title":"Rimu.Hamiltonians.GuidingVectorSampling","text":"GuidingVectorSampling\n\nWrapper over any AbstractHamiltonian that implements guided vector a.k.a. guided wave function sampling. In this importance sampling scheme the Hamiltonian is modified as follows.\n\ntildeH_ij = v_i H_ij v_j^-1\n\nand where v is the guiding vector. v_i and v_j are also thresholded to avoid dividing by zero (see below).\n\nConstructors\n\nGuidingVectorSampling(::AbstractHamiltonian, vector, eps)\nGuidingVectorSampling(::AbstractHamiltonian; vector, eps)\n\neps is a thresholding parameter used to avoid dividing by zero; all values below eps are set to eps. It is recommended that eps is in the same value range as the guiding vector. The default value is set to eps=norm(v, Inf) * 1e-2\n\nAfter construction, we can access the underlying hamiltonian with G.hamiltonian, the eps parameter with G.eps, and the guiding vector with G.vector.\n\nExample\n\njulia> H = HubbardReal1D(BoseFS(1,1,1); u=6.0, t=1.0);\n\njulia> v = DVec(starting_address(H) => 10; capacity=1);\n\njulia> G = GuidingVectorSampling(H, v, 0.1);\n\njulia> get_offdiagonal(H, starting_address(H), 4)\n(BoseFS{3,3}(2, 0, 1), -1.4142135623730951)\n\njulia> get_offdiagonal(G, starting_address(G), 4)\n(BoseFS{3,3}(2, 0, 1), -0.014142135623730952)\n\nObservables\n\nTo calculate observables, pass the transformed Hamiltonian G to AllOverlaps with keyword argument transform=G.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParitySymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParitySymmetry","text":"ParitySymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd parity on all states and the Hamiltonian ham as controlled by the keyword argument even. Parity symmetry of the Hamiltonian is assumed. For some Hamiltonians, ParitySymmetry reduces the size of the Hilbert space by half.\n\nParitySymmetry performs a unitary transformation, leaving the eigenvalues unchanged and preserving the LOStructure. This is achieved by changing the basis set to states with defined parity. Effectively, a non-even address α is replaced by frac12(α  α) for even and odd parity, respectively, where ᾱ == reverse(α).\n\nNotes\n\nThis modifier currently only works on starting_addresss with an odd number of modes.\nFor odd parity, the starting_address of the underlying Hamiltonian cannot be symmetric.\nIf parity is not a symmetry of the Hamiltonian ham then the result is undefined.\nParitySymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardReal1D(BoseFS(0,2,1))\nHubbardReal1D(BoseFS{3,3}(0, 2, 1); u=1.0, t=1.0)\n\njulia> size(Matrix(ham))\n(10, 10)\n\njulia> size(Matrix(ParitySymmetry(ham)))\n(6, 6)\n\njulia> size(Matrix(ParitySymmetry(ham; odd=true)))\n(4, 4)\n\njulia> eigvals(Matrix(ham))[1] ≈ eigvals(Matrix(ParitySymmetry(ham)))[1]\ntrue\n\nSee also TimeReversalSymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.TimeReversalSymmetry","page":"Hamiltonians","title":"Rimu.Hamiltonians.TimeReversalSymmetry","text":"TimeReversalSymmetry(ham::AbstractHamiltonian{T}; even=true) <: AbstractHamiltonian{T}\n\nImpose even or odd time reversal on all states and the Hamiltonian ham as controlled by the keyword argument even. If time reversal is a symmetry of the Hamiltonian it will block (reducing Hilbert space dimension) preserving the eigenvalues and LOStructure.\n\nNotes\n\nThis modifier only works two component starting_addresses.\nFor odd time reversal symmetry, the starting_address of the underlying Hamiltonian must not be symmetric.\nIf time reversal is not a symmetry of the Hamiltonian ham then the result is undefined.\nTimeReversalSymmetry works by modifying the offdiagonals iterator.\n\njulia> ham = HubbardMom1D(FermiFS2C((1,0,1),(0,1,1)));\n\njulia> size(Matrix(ham))\n(3, 3)\n\njulia> size(Matrix(TimeReversalSymmetry(ham)))\n(2, 2)\n\njulia> size(Matrix(TimeReversalSymmetry(ham, even=false)))\n(1, 1)\n\njulia> eigvals(Matrix(TimeReversalSymmetry(ham)))[1] ≈ eigvals(Matrix(ham))[1]\ntrue\n\nSee also ParitySymmetry.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Stoquastic","page":"Hamiltonians","title":"Rimu.Hamiltonians.Stoquastic","text":"Stoquastic(ham <: AbstractHamiltonian) <: AbstractHamiltonian\n\nA wrapper for an AbstractHamiltonian that replaces all off-diagonal matrix elements v by -abs(v), thus making the new Hamiltonian stoquastic.\n\nA stoquastic Hamiltonian does not have a Monte Carlo sign problem. For a hermitian ham the smallest eigenvalue of Stoquastic(ham) is ≤ the smallest eigenvalue of ham.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Observables","page":"Hamiltonians","title":"Observables","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Observables are AbstractHamiltonians that represent a physical observable. Their ground state expectation values can be sampled by passing them into AllOverlaps.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"ParticleNumberOperator\nG2RealCorrelator\nG2RealSpace\nG2MomCorrelator\nSuperfluidCorrelator\nStringCorrelator\nDensityMatrixDiagonal\nMomentum\nAxialAngularMomentumHO","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ParticleNumberOperator","page":"Hamiltonians","title":"Rimu.Hamiltonians.ParticleNumberOperator","text":"ParticleNumberOperator([address]) <: AbstractHamiltonian\n\nThe number operator in Fock space. This operator is diagonal in the Fock basis and returns the number of particles in the Fock state. Passing an address is optional.\n\njulia> h = FroehlichPolaron(fs\"|0 0⟩{}\"; mode_cutoff=5, v=3); bsr = BasisSetRepresentation(h);\n\njulia> gs = DVec(zip(bsr.basis, eigen(Matrix(bsr)).vectors[:,1])); # ground state\n\njulia> dot(gs, ParticleNumberOperator(), gs) # particle number expectation value\n2.8823297252925917\n\nSee also AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealCorrelator","text":"G2RealCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nTwo-body operator for density-density correlation between sites separated by d with 0 ≤ d < M.\n\n    hatG^(2)(d) = frac1M sum_i^M hatn_i (hatn_i+d - delta_0d)\n\nAssumes a one-dimensional lattice with periodic boundary conditions where\n\n    hatG^(2)(-M2 leq d  0) = hatG^(2)(d)\n\n    hatG^(2)(M2  d  M) = hatG^(2)(M - d)\n\nand normalisation\n\n    sum_d=0^M-1 langle hatG^(2)(d) rangle = fracN (N-1)M\n\nFor multicomponent basis, calculates correlations between all particles equally, equivalent to stacking all components into a single Fock state.\n\nArguments\n\nd::Integer: distance between sites.\n\nSee also\n\nHubbardReal1D\nG2RealSpace\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2RealSpace","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2RealSpace","text":"G2RealSpace(geometry::CubicGrid, σ=1, τ=1; sum_components=false) <: AbstractHamiltonian{SArray}\n\nTwo-body operator for density-density correlation for all Displacements d in the specified geometry.\n\n    hatG^(2)_στ(d) = frac1M _i n_σi (n_τi+d - δ_0dδ_στ)\n\nFor multicomponent addresses, σ and τ control the components involved. Alternatively, sum_components can be set to true, which treats all particles as belonging to the same component.\n\nExamples\n\njulia> geom = CubicGrid(2, 2);\n\njulia> g2 = G2RealSpace(geom)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,1)\n\njulia> diagonal_element(g2, BoseFS(2,0,1,1))\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\njulia> g2_cross = G2RealSpace(geom, 1, 2)\nG2RealSpace(CubicGrid((2, 2), (true, true)), 1,2)\n\njulia> g2_sum = G2RealSpace(geom, sum_components=true)\nG2RealSpace(CubicGrid((2, 2), (true, true)); sum_components=true)\n\njulia> diagonal_element(g2, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.0  0.0\n 0.0  0.5\n\njulia> diagonal_element(g2_cross, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.25  0.25\n 0.25  0.25\n\njulia> diagonal_element(g2_sum, fs\"|⇅⋅↓↑⟩\")\n2×2 StaticArraysCore.SMatrix{2, 2, Float64, 4} with indices SOneTo(2)×SOneTo(2):\n 0.5  1.0\n 0.5  1.0\n\nSee also\n\nCubicGrid\nHubbardRealSpace\nG2RealCorrelator\nG2MomCorrelator\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.G2MomCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.G2MomCorrelator","text":"G2MomCorrelator(d::Int,c=:cross) <: AbstractHamiltonian{ComplexF64}\n\nTwo-body correlation operator representing the density-density correlation at distance d of a two component system in a momentum-space Fock-state basis. It returns a Complex value.\n\nCorrelation across two components:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s b^_p  b_q a_r δ_s+pq+r\n\nCorrelation within a single component:\n\nhatG^(2)(d) = frac1Msum_spqr=1^M e^-id(p-q)2πM a^_s a^_p  a_q a_r δ_s+pq+r\n\nThe diagonal element, where (p-q)=0, is\n\nfrac1Msum_kp=1^M a^_k b^_p  b_p a_k \n\nArguments\n\nd::Integer: the distance between two particles.\nc: possible instructions: :cross: default instruction, computing correlation between particles across two components; :first: computing correlation between particles within the first component; :second: computing correlation between particles within the second component. These are the only defined instructions, using anything else will produce errors.\n\nTo use on a one-component system\n\nFor a system with only one component, e.g. with BoseFS, the second argument c is irrelevant and can be any of the above instructions, one could simply skip this argument and let it be the default value.\n\nSee also\n\nBoseHubbardMom1D2C\nBoseFS2C\nG2RealCorrelator\nG2RealSpace\nAbstractHamiltonian\nAllOverlaps\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.SuperfluidCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.SuperfluidCorrelator","text":"SuperfluidCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting superfluid correlation between sites separated by a distance d with 0 ≤ d < M:\n\n    hatC_textSF(d) = frac1M sum_i^M a_i^dagger a_i + d\n\nAssumes a one-dimensional lattice with M sites and periodic boundary conditions. M is also the number of modes in the Fock state address.\n\nUsage\n\nSuperfluid correlations can be extracted from a Monte Carlo calculation by wrapping SuperfluidCorrelator with AllOverlaps and passing into lomc! with the replica keyword argument. For an example with a similar use of G2RealCorrelator see G2 Correlator Example.\n\nSee also HubbardReal1D, G2RealCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.StringCorrelator","page":"Hamiltonians","title":"Rimu.Hamiltonians.StringCorrelator","text":"StringCorrelator(d::Int) <: AbstractHamiltonian{Float64}\n\nOperator for extracting string correlation between lattice sites on a one-dimensional Hubbard lattice separated by a distance d with 0 ≤ d < M\n\n    hatC_textstring(d) = frac1M sum_j^M delta n_j (e^i pi sum_j leq k  j + d delta n_k) delta n_j+d\n\nHere, delta hatn_j = hatn_j - barn is the boson number deviation from the mean filling number and barn = NM is the mean filling number of lattice sites with N particles and M lattice sites (or modes).\n\nAssumes a one-dimensional lattice with periodic boundary conditions. For usage see SuperfluidCorrelator and AllOverlaps.\n\nSee also HubbardReal1D, G2RealCorrelator, SuperfluidCorrelator, AbstractHamiltonian, and AllOverlaps.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.DensityMatrixDiagonal","page":"Hamiltonians","title":"Rimu.Hamiltonians.DensityMatrixDiagonal","text":"DensityMatrixDiagonal(mode; component=0) <: AbstractHamiltonian\n\nRepresent a diagonal element of the single-particle density:\n\nhatn_iσ = hat a^_iσ hat a_iσ\n\nwhere i is the mode and σ is the component. If component is zero, the sum over all components is computed.\n\nSee also\n\nsingle_particle_density\nSingleParticleDensity\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Momentum","page":"Hamiltonians","title":"Rimu.Hamiltonians.Momentum","text":"Momentum(component=0; fold=true) <: AbstractHamiltonian\n\nThe momentum operator hatp.\n\nThe component argument controls which component of the address is taken into consideration. A value of 0 sums the contributions of all components. If fold is true, the momentum is folded into the Brillouin zone.\n\njulia> add = BoseFS((1, 0, 2, 1, 2, 1, 1, 3))\nBoseFS{11,8}(1, 0, 2, 1, 2, 1, 1, 3)\n\njulia> v = DVec(add => 10);\n\njulia> rayleigh_quotient(Momentum(), DVec(add => 1))\n-2.0\n\njulia> rayleigh_quotient(Momentum(fold=false), DVec(add => 1))\n14.0\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AxialAngularMomentumHO","page":"Hamiltonians","title":"Rimu.Hamiltonians.AxialAngularMomentumHO","text":"AxialAngularMomentumHO(S; z_dim = 3, addr = BoseFS(prod(S))) <: AbstractHamiltonian\n\nAngular momentum operator for application to Cartesian harmonic oscillator basis, see HOCartesianContactInteractions or HOCartesianEnergyConservedPerDim. Represents the projection of angular momentum onto z-axis:\n\nhatL_z = i hbar sum_j=1^N left( b_x b_y^dag - b_y b_x^dag right)\n\nwhere b_x^dag and b_x are raising and lowering (ladder) operators for  a harmonic oscillator in the x dimension, and simlarly for y.\n\nThis is implemented for an N particle Fock space with creation and annihilation operators as\n\nfrac1hbar hatL_z = i sum_n_x=1^M_x sum_n_y=1^M_y\n    left( a_n_x-1n_y+1^dag - a_n_x+1n_y-1^dag right) a_n_x n_y\n\nin units of hbar.\n\nArgument S is a tuple defining the range of Cartesian modes in each dimension and their mapping to Fock space modes in a SingleComponentFockAddress. If S indicates a 3D system the z dimension can be changed by setting z_dim; S should be be isotropic in the remaining x-y plane, i.e. must have S[x_dim] == S[y_dim]. The starting address addr only needs to satisfy num_modes(addr) == prod(S).\n\nExample\n\nCalculate the overlap of two Fock addresses interpreted as harmonic oscillator states in a 2D Cartesian basis\n\njulia> S = (2,2)\n(2, 2)\n\njulia> Lz = AxialAngularMomentumHO(S)\nAxialAngularMomentumHO((2, 2); z_dim = 3, addr = BoseFS{0,4}(0, 0, 0, 0))\n\njulia> v = DVec(BoseFS(prod(S), 2 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 1 0 0⟩\" => 1.0\n\njulia> w = DVec(BoseFS(prod(S), 3 => 1) => 1.0)\nDVec{BoseFS{1, 4, BitString{4, 1, UInt8}},Float64} with 1 entry, style = IsDeterministic{Float64}()\n  fs\"|0 0 1 0⟩\" => 1.0\n\njulia> dot(w, Lz, v)\n0.0 + 1.0im\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Hamiltonians-interface","page":"Hamiltonians","title":"Hamiltonians interface","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Behind the implementation of a particular model is a more abstract interface for defining Hamiltonians. If you want to define a new model you should make use of this interface. The most general form of a model Hamiltonian should subtype to AbstractHamiltonian and implement the relevant methods.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"AbstractHamiltonian\noffdiagonals\ndiagonal_element\nstarting_address","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.AbstractHamiltonian","page":"Hamiltonians","title":"Rimu.Interfaces.AbstractHamiltonian","text":"AbstractHamiltonian{T}\n\nSupertype that provides an interface for linear operators over a linear space with scalar type T that are suitable for FCIQMC (with lomc!). Indexing is done with addresses (typically not integers) from an address space that may be large (and will not need to be completely generated).\n\nAbstractHamiltonian instances operate on vectors of type AbstractDVec from the module DictVectors and work well with addresses of type AbstractFockAddress from the module BitStringAddresses. The type works well with the external package KrylovKit.jl.\n\nFor available implementations see Hamiltonians.\n\nInterface\n\nBasic interface methods to implement:\n\nstarting_address(::AbstractHamiltonian)\ndiagonal_element(::AbstractHamiltonian, address)\nnum_offdiagonals(::AbstractHamiltonian, address)\nget_offdiagonal(::AbstractHamiltonian, address, chosen::Integer) (optional, see   below)\n\nOptional additional methods to implement:\n\nLOStructure(::Type{typeof(lo)}): defaults to AdjointUnknown\ndimension(::AbstractHamiltonian, addr): defaults to dimension of address space\nallowed_address_type(h::AbstractHamiltonian): defaults to typeof(starting_address(h))\nmomentum(::AbstractHamiltonian): no default\n\nProvides the following functions and methods:\n\noffdiagonals: iterator over reachable off-diagonal matrix elements\nrandom_offdiagonal: function to generate random off-diagonal matrix element\n*(H, v): deterministic matrix-vector multiply (allocating)\nH(v): equivalent to H * v.\nmul!(w, H, v): mutating matrix-vector multiply.\ndot(x, H, v): compute x⋅(H*v) minimizing allocations.\nH[address1, address2]: indexing with getindex() - mostly for testing purposes (slow!)\nBasisSetRepresentation: construct a basis set repesentation\nsparse, Matrix: construct a (sparse) matrix representation\n\nAlternatively to the above, offdiagonals can be implemented instead of get_offdiagonal. Sometimes this can be done efficiently. In this case num_offdiagonals should provide an upper bound on the number of elements obtained when iterating offdiagonals.\n\nSee also Hamiltonians, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Interfaces.offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.offdiagonals","text":"offdiagonals(h::AbstractHamiltonian, address)\n\nReturn an iterator over nonzero off-diagonal matrix elements of h in the same column as address. Will iterate over pairs (newaddress, matrixelement).\n\nExample\n\njulia> address = BoseFS(3,2,1);\n\n\njulia> H = HubbardReal1D(address);\n\n\njulia> h = offdiagonals(H, address)\n6-element Rimu.Hamiltonians.Offdiagonals{BoseFS{6, 3, BitString{8, 1, UInt8}}, Float64, HubbardReal1D{Float64, BoseFS{6, 3, BitString{8, 1, UInt8}}, 1.0, 1.0}}:\n (fs\"|2 3 1⟩\", -3.0)\n (fs\"|2 2 2⟩\", -2.449489742783178)\n (fs\"|3 1 2⟩\", -2.0)\n (fs\"|4 1 1⟩\", -2.8284271247461903)\n (fs\"|4 2 0⟩\", -2.0)\n (fs\"|3 3 0⟩\", -1.7320508075688772)\n\nPart of the AbstractHamiltonian interface.\n\nExtemded help\n\noffdiagonals return and iterator of type <:AbstractOffdiagonals. It defaults to returning Offdiagonals(h, a)\n\nSee also Offdiagonals, AbstractOffdiagonals.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.diagonal_element","page":"Hamiltonians","title":"Rimu.Interfaces.diagonal_element","text":"diagonal_element(ham, address)\n\nCompute the diagonal matrix element of the linear operator ham at address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> diagonal_element(H, address)\n8.666666666666664\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.starting_address","page":"Hamiltonians","title":"Rimu.Interfaces.starting_address","text":"starting_address(h)\n\nReturn the starting address for Hamiltonian h. When called on an AbstractMatrix, starting_address returns the index of the lowest diagonal element.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> address == starting_address(H)\ntrue\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions may be implemented instead of offdiagonals.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"num_offdiagonals\nget_offdiagonal","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.num_offdiagonals","page":"Hamiltonians","title":"Rimu.Interfaces.num_offdiagonals","text":"num_offdiagonals(ham, address)\n\nCompute the number of number of reachable configurations from address address.\n\nExample\n\njulia> address = BoseFS((3, 2, 1));\n\n\njulia> H = HubbardMom1D(address);\n\n\njulia> num_offdiagonals(H, address)\n10\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.get_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.get_offdiagonal","text":"newadd, me = get_offdiagonal(ham, add, chosen)\n\nCompute value me and new address newadd of a single (off-diagonal) matrix element in a Hamiltonian ham. The off-diagonal element is in the same column as address add and is indexed by integer index chosen.\n\nExample\n\njulia> addr = BoseFS(3, 2, 1);\n\njulia> H = HubbardMom1D(addr);\n\njulia> get_offdiagonal(H, addr, 3)\n(BoseFS{6,3}(2, 1, 3), 1.0)\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"The following functions come with default implementations, but may be customized.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"random_offdiagonal\nHamiltonians.LOStructure\ndimension\nhas_adjoint\nallowed_address_type","category":"page"},{"location":"hamiltonians.html#Rimu.Interfaces.random_offdiagonal","page":"Hamiltonians","title":"Rimu.Interfaces.random_offdiagonal","text":"random_offdiagonal(offdiagonals::AbstractOffdiagonals)\nrandom_offdiagonal(ham::AbstractHamiltonian, add)\n\nGenerate a single random excitation, i.e. choose from one of the accessible off-diagonal elements in the column corresponding to address add of the Hamiltonian matrix represented by ham. Alternatively, pass as argument an iterator over the accessible matrix elements.\n\nPart of the AbstractHamiltonian interface.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.LOStructure","page":"Hamiltonians","title":"Rimu.Interfaces.LOStructure","text":"LOStructure(op::AbstractHamiltonian)\nLOStructure(typeof(op))\n\nReturn information about the structure of the linear operator op. LOStructure is used as a trait to speficy symmetries or other properties of the linear operator op that may simplify or speed up calculations. Implemented instances are:\n\nIsDiagonal(): The operator is diagonal.\nIsHermitian(): The operator is complex and Hermitian or real and symmetric.\nAdjointKnown(): The operator is not Hermitian, but its   adjoint is implemented.\nAdjointUnknown(): adjoint for this operator is not   implemented.\n\nPart of the AbstractHamiltonian interface.\n\nIn order to define this trait for a new linear operator type, define a method for LOStructure(::Type{<:MyNewLOType}) = ….\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.dimension","text":"dimension(h::AbstractHamiltonian, addr=starting_address(h))\ndimension(addr::AbstractFockAddress)\ndimension(::Type{<:AbstractFockAddress})\n\nReturn the estimated dimension of Hilbert space. May return a BigInt number.\n\nWhen called on an address or address type, the dimension of the linear space spanned by the address type is returned. When called on an AbstractHamiltonian, an upper bound on the dimension of the matrix representing the Hamiltonian is returned.\n\nExamples\n\njulia> dimension(OccupationNumberFS(1,2,3))\n16777216\n\njulia> dimension(HubbardReal1D(OccupationNumberFS(1,2,3)))\n28\n\njulia> dimension(BoseFS{200,100})\n1386083821086188248261127842108801860093488668581216236221011219101585442774669540\n\njulia> Float64(ans)\n1.3860838210861882e81\n\nPart of the AbstractHamiltonian interface. See also BasisSetRep.\n\nExtended Help\n\nThe default fallback for dimension called on an AbstractHamiltonian is to return the dimension of the address space, which provides an upper bound. For new Hamiltonians a tighter bound can be provided by defining a custom method.\n\nWhen extending AbstractHamiltonian, define a method for the two-argument form dimension(h::MyNewHamiltonian, addr). For number-conserving Hamiltonians, the function Hamiltonians.number_conserving_dimension may be useful.\n\nWhen extending AbstractFockAddress, define a method for dimension(::Type{MyNewFockAddress}).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.has_adjoint","page":"Hamiltonians","title":"Rimu.Interfaces.has_adjoint","text":"has_adjoint(op)\n\nReturn true if adjoint is defined on op.\n\nPart of the AbstractHamiltonian interface.\n\nSee also LOStructure.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Interfaces.allowed_address_type","page":"Hamiltonians","title":"Rimu.Interfaces.allowed_address_type","text":"allowed_address_type(h::AbstractHamiltonian)\n\nReturn the type of addresses that can be used with Hamiltonian h.\n\nPart of the AbstractHamiltonian interface.\n\nDefaults to typeof(starting_address(h)). Overload this function if the Hamiltonian can be used with addresses of different types.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"This interface relies on unexported functionality, including","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.adjoint\nHamiltonians.dot\nHamiltonians.AbstractOffdiagonals\nHamiltonians.Offdiagonals\nHamiltonians.check_address_type\nHamiltonians.number_conserving_dimension\nHamiltonians.number_conserving_bose_dimension\nHamiltonians.number_conserving_fermi_dimension","category":"page"},{"location":"hamiltonians.html#Base.adjoint","page":"Hamiltonians","title":"Base.adjoint","text":"adjoint(::LOStructure, op::AbstractHamiltonian)\n\nRepresent the adjoint of an AbstractHamiltonian. Extend this method to define custom adjoints.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#LinearAlgebra.dot","page":"Hamiltonians","title":"LinearAlgebra.dot","text":"dot(map::OccupiedModeMap, vec::AbstractVector)\ndot(map1::OccupiedModeMap, map2::OccupiedModeMap)\n\nDot product extracting mode occupation numbers from an OccupiedModeMap similar to onr.\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> dot(mb, 1:7)\n27\n\njulia> mb⋅(1:7) == onr(b)⋅(1:7)\ntrue\n\nSee also SingleComponentFockAddress.\n\n\n\n\n\ndot(w, op::AbstractHamiltonian, v)\n\nEvaluate w⋅op(v) minimizing memory allocations.\n\n\n\n\n\ndot(y::PDVec, A::AbstractHamiltonian, x::PDVec[, w::PDWorkingMemory])\n\nPerform y ⋅ A ⋅ x. The working memory w is required to facilitate threaded/distributed operations with non-diagonal A. If needed and not passed a new instance will be allocated. A can be replaced with a tuple of operators.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.AbstractOffdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.AbstractOffdiagonals","text":"AbstractOffdiagonals{A,T}<:AbstractVector{Tuple{A,T}}\n\nIterator over new address and matrix elements for reachable off-diagonal matrix elements of a linear operator.\n\nSee Offdiagonals for a default implementation.\n\nMethods to define\n\noffdiagonals(h, a)::AbstractOffdiagonals: This function is used to construct the correct type of offdiagonals for a given combination of Hamiltonian h and Fock address a.\nBase.getindex(::AbstractOffdiagonals, i): should be equivalent to get_offdiagonal(h, a, i).\nBase.size(::AbstractOffdiagonals): should be equivalent to num_offdiagonals(h, a).\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Offdiagonals","page":"Hamiltonians","title":"Rimu.Hamiltonians.Offdiagonals","text":"Offdiagonals(h, address) <: AbstractOffdiagonals\n\nIterator over new address and matrix element for reachable off-diagonal matrix elements of linear operator h from address address.  Represents an abstract vector containing the non-zero off-diagonal matrix elements of the column of h indexed by address. To construct this iterator use offdiagonals.\n\nThis is the default implementation of AbstractOffdiagonals defined in terms of num_offdiagonals and get_offdiagonal.\n\nSee also offdiagonals, AbstractHamiltonian.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.check_address_type","page":"Hamiltonians","title":"Rimu.Hamiltonians.check_address_type","text":"check_address_type(h::AbstractHamiltonian, addr_or_type)\n\nThrow an ArgumentError if addr_or_type is not compatible with h. Acceptable arguments are either an address or an address type, or a tuple or array thereof.\n\nSee also allowed_address_type.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_dimension","text":"number_conserving_dimension(address <: AbstractFockAddress)\n\nReturn the dimension of the Fock space spanned by the address type assuming particle number conservation.\n\nSee also number_conserving_bose_dimension, number_conserving_fermi_dimension, dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_bose_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_bose_dimension","text":"number_conserving_bose_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n bosons in m modes: binomial(n + m - 1, n).\n\nSee also number_conserving_fermi_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.number_conserving_fermi_dimension","page":"Hamiltonians","title":"Rimu.Hamiltonians.number_conserving_fermi_dimension","text":"number_conserving_fermi_dimension(n, m)\n\nReturn the dimension of the number-conserving Fock space for n fermions in m modes: binomial(m, n).\n\nSee also number_conserving_bose_dimension, number_conserving_dimension.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Geometry","page":"Hamiltonians","title":"Geometry","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Lattices in higher dimensions are defined here for HubbardRealSpace and G2RealSpace.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"CubicGrid\nHamiltonians.Directions\nHamiltonians.Displacements\nHamiltonians.neighbor_site\nPeriodicBoundaries\nHardwallBoundaries\nLadderBoundaries","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.CubicGrid","page":"Hamiltonians","title":"Rimu.Hamiltonians.CubicGrid","text":"CubicGrid(dims::NTuple{D,Int}, fold::NTuple{D,Bool})\n\nRepresents a D-dimensional grid. Used to define a cubic lattice and boundary conditions for some AbstractHamiltonians. The type instance can be used to convert between cartesian vector indices (tuples or SVectors) and linear indices (integers). When indexed with vectors, it folds them back into the grid if the out-of-bounds dimension is periodic and 0 otherwise (see example below).\n\ndims controls the size of the grid in each dimension.\nfold controls whether the boundaries in each dimension are periodic (or folded in the case of momentum space).\n\njulia> geo = CubicGrid((2,3), (true,false))\nCubicGrid{2}((2, 3), (true, false))\n\njulia> geo[1]\n(1, 1)\n\njulia> geo[2]\n(2, 1)\n\njulia> geo[3]\n(1, 2)\n\njulia> geo[(1,2)]\n3\n\njulia> geo[(3,2)] # 3 is folded back into 1\n3\n\njulia> geo[(3,3)]\n5\n\njulia> geo[(3,4)] # returns 0 if out of bounds\n0\n\nSee also PeriodicBoundaries, HardwallBoundaries and LadderBoundaries for special-case constructors.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Directions","page":"Hamiltonians","title":"Rimu.Hamiltonians.Directions","text":"Directions(D) <: AbstractVector{SVector{D,Int}}\nDirections(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nIterate over axis-aligned direction vectors in D dimensions.\n\njulia> Directions(3)\n6-element Directions{3}:\n [1, 0, 0]\n [0, 1, 0]\n [0, 0, 1]\n [-1, 0, 0]\n [0, -1, 0]\n [0, 0, -1]\n\n\nSee also CubicGrid.\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.Displacements","page":"Hamiltonians","title":"Rimu.Hamiltonians.Displacements","text":"Displacements(geometry::CubicGrid) <: AbstractVector{SVector{D,Int}}\n\nReturn all valid offset vectors in a CubicGrid. If center=true the (0,0) displacement is placed at the centre of the array.\n\njulia> geometry = CubicGrid((3,4));\n\njulia> reshape(Displacements(geometry), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [0, 0]  [0, 1]  [0, 2]  [0, 3]\n [1, 0]  [1, 1]  [1, 2]  [1, 3]\n [2, 0]  [2, 1]  [2, 2]  [2, 3]\n\njulia> reshape(Displacements(geometry; center=true), (3,4))\n3×4 reshape(::Displacements{2}, 3, 4) with eltype StaticArraysCore.SVector{2, Int64}:\n [-1, -1]  [-1, 0]  [-1, 1]  [-1, 2]\n [0, -1]   [0, 0]   [0, 1]   [0, 2]\n [1, -1]   [1, 0]   [1, 1]   [1, 2]\n\n\n\n\n\n\n","category":"type"},{"location":"hamiltonians.html#Rimu.Hamiltonians.neighbor_site","page":"Hamiltonians","title":"Rimu.Hamiltonians.neighbor_site","text":"neighbor_site(geom::CubicGrid, site, i)\n\nFind the i-th neighbor of site in the geometry. If the move is illegal, return 0.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.PeriodicBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.PeriodicBoundaries","text":"PeriodicBoundaries(dims...) -> CubicGrid\nPeriodicBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions periodic. Equivalent to CubicGrid(dims).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.HardwallBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.HardwallBoundaries","text":"HardwallBoundaries(dims...) -> CubicGrid\nHardwallBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid with all dimensions non-periodic. Equivalent to CubicGrid(dims, (false, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.LadderBoundaries","page":"Hamiltonians","title":"Rimu.Hamiltonians.LadderBoundaries","text":"LadderBoundaries(dims...) -> CubicGrid\nLadderBoundaries(dims) -> CubicGrid\n\nReturn CubicGrid where the first dimension is dimensions non-periodic and the rest are periodic. Equivalent to CubicGrid(dims, (true, false, ...)).\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Harmonic-Oscillator","page":"Hamiltonians","title":"Harmonic Oscillator","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Useful utilities for harmonic oscillator in Cartesian basis, see HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"get_all_blocks\nfock_to_cart","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.get_all_blocks","page":"Hamiltonians","title":"Rimu.Hamiltonians.get_all_blocks","text":"get_all_blocks(h::Union{HOCartesianContactInteractions,HOCartesianEnergyConservedPerDim}; \n    target_energy = nothing, \n    max_energy = nothing, \n    max_blocks = nothing, \n    method = :vertices,\n    kwargs...) -> df\n\nFind all distinct blocks of h. Returns a DataFrame with columns \n\nblock_id: index of block in order found\nblock_E0: noninteracting energy of all elements in the block\nblock_size: number of elements in the block\naddr: first address that generates the block with e.g. BasisSetRep\nindices: tuple of mode indices that allow recreation of the generating address    addr; in this case use e.g. BoseFS(M; indices .=> 1) This is useful when    the DataFrame is loaded from file since Arrow.jl converts custom   types to NamedTuples.\nt_basis: time to generate the basis for each block\n\nKeyword arguments:\n\ntarget_energy: only blocks with this noninteracting energy are found\nmax_energy: only blocks with noninteracting energy less than this are found\nmax_blocks: exit after finding this many blocks\nmethod: Choose between :vertices and :comb for method of enumerating    tuples of quantum numbers\nsave_to_file=nothing: if set then the DataFrame recording blocks is saved    after each new block is found\nadditional kwargs: passed to isapprox for comparing block energies.    Useful for anisotropic traps\n\nNote: If h was constructed with option block_by_level = false then the block seeds  addr are determined by parity. In this case the blocks are not generated; t_basis  will be zero, and block_size will be an estimate. Pass the seed addresses to  BasisSetRep with an appropriate filter to generate the blocks.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.fock_to_cart","page":"Hamiltonians","title":"Rimu.Hamiltonians.fock_to_cart","text":"fock_to_cart(addr, S; zero_index = true)\n\nConvert a Fock state address addr to Cartesian harmonic oscillator basis  indices n_xn_yldots. These indices are bounded by S which is a  tuple of the maximum number of states in each dimension. By default the  groundstate in each dimension is indexed by 0, but this can be changed  by setting zero_index = false.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Underlying integrals for the interaction matrix elements are implemented in the following unexported functions","category":"page"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Hamiltonians.four_oscillator_integral_general\nHamiltonians.ho_delta_potential\nHamiltonians.log_abs_oscillator_zero","category":"page"},{"location":"hamiltonians.html#Rimu.Hamiltonians.four_oscillator_integral_general","page":"Hamiltonians","title":"Rimu.Hamiltonians.four_oscillator_integral_general","text":"four_oscillator_integral_general(i, j, k, l; max_level = typemax(Int))\n\nIntegral of four one-dimensional harmonic oscillator functions, \n\n    mathcalI(ijkl) = int_-infty^infty dx  \n    phi_i(x) phi_j(x) phi_k(x) phi_l(x)\n\nIndices i,j,k,l start at 0 for the groundstate.\n\nThis integral has a closed form in terms of the hypergeometric _3F_2 function,  and is non-zero unless i+j+k+l is odd. See e.g.  Titchmarsh (1948). This is a generalisation of the closed form in  Papenbrock (2002), which is is the special  case where i+j == k+l, but is numerically unstable for large arguments. Used in HOCartesianContactInteractions and HOCartesianEnergyConservedPerDim.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.ho_delta_potential","page":"Hamiltonians","title":"Rimu.Hamiltonians.ho_delta_potential","text":"ho_delta_potential(S, i, j; [vals])\n\nReturns the matrix element of a delta potential at the centre of a trap, i.e. the  product of two harmonic oscillator functions evaluated at the origin, \n\n    v_ij = phi_mathbfn_i(0) phi_mathbfn_j(0)\n\nwhich is only non-zero for even-parity states. The ith single particle state  corresponds to a D-tuple of harmonic oscillator indices mathbfn_i.  S defines the bounds of Cartesian harmonic oscillator indices for each dimension. The optional keyword argument vals allows passing pre-computed values of  phi_i(0) to speed-up the calculation. The values can be calculated with  log_abs_oscillator_zero.\n\nSee also HOCartesianCentralImpurity.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Rimu.Hamiltonians.log_abs_oscillator_zero","page":"Hamiltonians","title":"Rimu.Hamiltonians.log_abs_oscillator_zero","text":"log_abs_oscillator_zero(n)\n\nCompute the logarithm of the absolute value of the n^mathrmth 1D  harmonic oscillator function evaluated at the origin. The overall sign is determined when the matrix element is evaluated in ho_delta_potential.\n\n\n\n\n\n","category":"function"},{"location":"hamiltonians.html#Index","page":"Hamiltonians","title":"Index","text":"","category":"section"},{"location":"hamiltonians.html","page":"Hamiltonians","title":"Hamiltonians","text":"Pages   = [\"hamiltonians.md\"]","category":"page"},{"location":"RMPI.html#Module-RMPI","page":"RMPI","title":"Module RMPI","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI","category":"page"},{"location":"RMPI.html#Rimu.RMPI","page":"RMPI","title":"Rimu.RMPI","text":"Module for providing MPI functionality for Rimu. This module is unexported. To use it, run\n\nusing Rimu.RMPI\n\n\n\n\n\n","category":"module"},{"location":"RMPI.html#MPIData","page":"RMPI","title":"MPIData","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIData","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIData","page":"RMPI","title":"Rimu.RMPI.MPIData","text":"MPIData(data; kwargs...)\n\nWrapper used for signaling that this data is part of a distributed data structure and communication should happen with MPI. MPIData can generally be used where an AbstractDVec would be used otherwise. Unlike AbstractDVecs, MPIData does not support indexing, or iteration over keys, values, and pairs.\n\nKeyword arguments:\n\nsetup = mpi_point_to_point - controls the communication stratgy\nmpi_one_sided uses one-sided communication with remote memory access (RMA), sets MPIOneSided strategy.\nmpi_point_to_point uses MPIPointToPoint strategy.\nmpi_all_to_all uses MPIAllToAll strategy.\nmpi_no_exchange sets MPINoWalkerExchange strategy. Experimental. Use with caution!\ncomm = mpi_comm()\nroot = mpi_root\nThe rest of the keyword arguments are passed to setup.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Setup-functions","page":"RMPI","title":"Setup functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"The following distribute strategies are available. The functions are unexported.","category":"page"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.mpi_point_to_point\nRimu.RMPI.mpi_one_sided\nRimu.RMPI.mpi_all_to_all\nRimu.RMPI.mpi_no_exchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_point_to_point","page":"RMPI","title":"Rimu.RMPI.mpi_point_to_point","text":"mpi_point_to_point(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to point-to-point.\n\nSets up the MPIData structure with MPIPointToPoint strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_one_sided","page":"RMPI","title":"Rimu.RMPI.mpi_one_sided","text":"mpi_one_sided(data, comm = mpi_comm(), root = mpi_root; capacity)\n\nDeclare data as mpi-distributed and set communication strategy to one-sided with remote memory access (RMA). capacity sets the capacity of the RMA windows.\n\nSets up the MPIData structure with MPIOneSided strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_all_to_all","page":"RMPI","title":"Rimu.RMPI.mpi_all_to_all","text":"mpi_all_to_all(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to all-to-all.\n\nSets up the MPIData structure with MPIAllToAll strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_no_exchange","page":"RMPI","title":"Rimu.RMPI.mpi_no_exchange","text":"mpi_no_exchange(data, comm = mpi_comm(), root = mpi_root)\n\nDeclare data as mpi-distributed and set communication strategy to MPINoWalkerExchange. Sets up the MPIData structure with MPINoWalkerExchange strategy.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Strategies","page":"RMPI","title":"Strategies","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Rimu.RMPI.MPIPointToPoint\nRimu.RMPI.MPIOneSided\nRimu.RMPI.MPIAllToAll\nRimu.RMPI.MPINoWalkerExchange","category":"page"},{"location":"RMPI.html#Rimu.RMPI.MPIPointToPoint","page":"RMPI","title":"Rimu.RMPI.MPIPointToPoint","text":"MPIPointToPoint{N,A}\n\nPoint-to-point communication strategy. Uses circular communication using MPI.Send and MPI.Recv!.\n\nConstructor\n\nMPIPointToPoint(::Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIOneSided","page":"RMPI","title":"Rimu.RMPI.MPIOneSided","text":"MPIOneSided(nprocs, myrank, comm, ::Type{T}, capacity)\n\nCommunication buffer for use with MPI one-sided communication (remote memory access). Up to capacity elements of type T can be exchanged between MPI ranks via put. It is important that isbitstype(T) == true. Objects of type MPIOneSided have to be freed manually with a (blocking) call to free().\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPIAllToAll","page":"RMPI","title":"Rimu.RMPI.MPIAllToAll","text":" MPIAllToAll\n\nAll-to-all communication strategy. The communication works in two steps: first MPI.Alltoall! is used to communicate the number of walkers each rank wants to send to other ranks, then MPI.Alltoallv! is used to send the walkers around.\n\nConstructor\n\nMPIAllToAll(Type{P}, np, id, comm): Construct an instance with pair type P on np processes with current rank id.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#Rimu.RMPI.MPINoWalkerExchange","page":"RMPI","title":"Rimu.RMPI.MPINoWalkerExchange","text":"MPINoWalkerExchange(nprocs, my_rank, comm)\n\nStrategy for not exchanging walkers between ranks. Consequently there will be no cross-rank annihilations.\n\n\n\n\n\n","category":"type"},{"location":"RMPI.html#MPI-convenience-functions","page":"RMPI","title":"MPI convenience functions","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Modules = [Rimu.RMPI]\nPages = [\"helpers.jl\"]\nPrivate = true\nPublic = true","category":"page"},{"location":"RMPI.html#Rimu.RMPI.mpi_root","page":"RMPI","title":"Rimu.RMPI.mpi_root","text":"Default MPI root for RMPI.\n\n\n\n\n\n","category":"constant"},{"location":"RMPI.html#Rimu.DictVectors.mpi_comm-Tuple{}","page":"RMPI","title":"Rimu.DictVectors.mpi_comm","text":"Default MPI communicator for RMPI.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.DictVectors.mpi_rank","page":"RMPI","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(comm = mpi_comm())\n\nReturn the current MPI rank.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.DictVectors.mpi_size","page":"RMPI","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(comm = mpi_comm())\n\nSize of MPI communicator.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.is_mpi_root","page":"RMPI","title":"Rimu.RMPI.is_mpi_root","text":"is_mpi_root(root = mpi_root)\n\nReturns true if called from the root rank\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_allprintln-Tuple","page":"RMPI","title":"Rimu.RMPI.mpi_allprintln","text":"mpi_allprintln(args...)\n\nPrint a message to stdout from each rank separately, in order. MPI synchronizing.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_barrier","page":"RMPI","title":"Rimu.RMPI.mpi_barrier","text":"mpi_barrier(comm = mpi_comm())\n\nThe MPI barrier with optional argument. MPI syncronizing.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.mpi_combine_walkers!-Tuple{Rimu.RMPI.MPIData, AbstractDVec}","page":"RMPI","title":"Rimu.RMPI.mpi_combine_walkers!","text":"mpi_combine_walkers!(target, source, [strategy])\n\nDistribute the entries of source to the target data structure such that all entries in the target are on the process with the correct mpi rank as controlled by targetrank(). MPI syncronizing.\n\nNote: the storage of the source is communicated rather than the source itself.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.mpi_seed!","page":"RMPI","title":"Rimu.RMPI.mpi_seed!","text":"mpi_seed!(seed = rand(Random.RandomDevice(), UInt))\n\nRe-seed the random number generators in an MPI-safe way. If seed is provided, the random numbers from rand will follow a deterministic sequence.\n\nIndependence of the random number generators on different MPI ranks is achieved by adding hash(mpi_rank()) to seed.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.next_mpiID","page":"RMPI","title":"Rimu.RMPI.next_mpiID","text":"next_mpiID()\n\nProduce a new ID number for MPI distributed objects. Uses an internal counter.\n\n\n\n\n\n","category":"function"},{"location":"RMPI.html#Rimu.RMPI.targetrank-Tuple{Union{Integer, AbstractFockAddress}, Any}","page":"RMPI","title":"Rimu.RMPI.targetrank","text":"targetrank(key, np)\n\nCompute the rank where the key belongs.\n\n\n\n\n\n","category":"method"},{"location":"RMPI.html#Rimu.RMPI.@mpi_root-Tuple","page":"RMPI","title":"Rimu.RMPI.@mpi_root","text":"@mpi_root expr\n\nEvaluate expression only on the root rank. Extra care needs to be taken as expr must not contain any code that involves syncronising MPI operations, i.e. actions that would require syncronous action of all MPI ranks.\n\nExample:\n\nwn = walkernumber(dv)   # an MPI syncronising function call that gathers\n                        # information from all MPI ranks\n@mpi_root @info \"The current walker number is\" wn # print info message on root only\n\n\n\n\n\n","category":"macro"},{"location":"RMPI.html#Index","page":"RMPI","title":"Index","text":"","category":"section"},{"location":"RMPI.html","page":"RMPI","title":"RMPI","text":"Pages   = [\"RMPI.md\"]","category":"page"},{"location":"testing.html#Code-testing","page":"Code testing","title":"Code testing","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"The script runtest.jl in the test/ folder contains tests of the code. To run the test simply run the script from the Julia REPL or run","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"Rimu$ julia test/runtest.jl","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"from the command line.","category":"page"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"More tests should be added over time to test core functionality of the code. To add new tests, directly edit the file runtest.jl.","category":"page"},{"location":"testing.html#Automated-testing-with-GitHub-Actions","page":"Code testing","title":"Automated testing with GitHub Actions","text":"","category":"section"},{"location":"testing.html","page":"Code testing","title":"Code testing","text":"GitHub Actions are set up to run the test script automatically on the GitHub cloud server every time a new commit to the master branch is pushed to the server. The setup for this to happen is configured in the file actions.yml in the Rimu/.github/workflows folder.","category":"page"},{"location":"exactdiagonalization.html#Exact-Diagonalization","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"The main functionality of Rimu for exact diagonalization is contained in the module ExactDiagonalization.","category":"page"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalization","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization","text":"The module Rimu.ExactDiagonalization provides a framework for exact diagonalization of quantum many-body systems defined by an AbstractHamiltonian type.\n\nThe main usage is through defining an ExactDiagonalizationProblem and solving it with the solve function. The module provides a unified interface for accessing different solver algorithms, which make use of solvers provided by external packages.\n\nExports\n\nExactDiagonalizationProblem\nBasisSetRepresentation\nbuild_basis\nKrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver\n\n\n\n\n\n","category":"module"},{"location":"exactdiagonalization.html#ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"ExactDiagonalizationProblem","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"ExactDiagonalizationProblem\nsolve(::ExactDiagonalizationProblem)\ninit(::ExactDiagonalizationProblem)","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ExactDiagonalizationProblem","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ExactDiagonalizationProblem","text":"ExactDiagonalizationProblem(hamiltonian::AbstractHamiltonian, [v0]; kwargs...)\n\nDefines an exact diagonalization problem with an AbstractHamiltonian hamiltonian. Optionally, a starting vector of type AbstractDVec, or a single address or a collection of addresses can be passed as v0.\n\nExactDiagonalizationProblems can be solved with solve.\n\nKeyword arguments\n\nalgorithm=LinearAlgebraSolver(): The algorithm to use for solving the problem. The   algorithm can also be specified as the second positional argument in the init   function.\nOptional keyword arguments will be passed on to the init and solve functions.\n\nAlgorithms\n\nLinearAlgebraSolver(): An algorithm for solving the problem using the   dense-matrix eigensolver from the LinearAlgebra standard library (eventually using   LAPACK). Only suitable for small matrices.\nKrylovKitSolver(matrix_free=true): An algorithm for finding a few eigenvalues   and vectors. With matrix_free=true the problem is solved without instatiating a   matrix. This is suitable for large dimensions. With matrix_free=false the problem is   solved after instantiating a sparse matrix. This is faster if sufficient memory is   available. Requires using KrylovKit.\nArpackSolver(): An algorithm for solving the problem after instantiating a   sparse matrix and using the Arpack Fortran library. Requires using Arpack.\nLOBPCGSolver(): An algorithm for solving the problem after instantiating a   sparse matrix using the LOBPCG method. Requires using IterativeSolvers.\n\nKeyword arguments for matrix-based algorithms (also accepted by init)\n\nSee BasisSetRepresentation for more information.\n\nsizelim: The maximum size of the basis set representation. The default is 10^6 for   sparse matrices and 10^5 for dense matrices.\ncutoff: A cutoff value for the basis set representation.\nfilter: A filter function for the basis set representation.\nnnzs = 0: The number of non-zero elements in the basis set representation. Setting a   non-zero value can speed up the computation.\ncol_hint = 0: A hint for the number of columns in the basis set representation.\nsort = false: Whether to sort the basis set representation.\n\nKeyword arguments for iterative algorithms (also accepted by solve)\n\nverbose = false: Whether to print additional information.\nabstol = nothing: The absolute tolerance for the solver. If nothing, the solver   chooses a default value.\nhowmany = 1: The minimum number of eigenvalues to compute.\nwhich = :SR: Whether to compute the largest or smallest eigenvalues.\nmaxiters = nothing: The maximum number of iterations for the solver. If nothing, the   solver chooses a default value.\n\nSolving an ExactDiagonalizationProblem\n\nThe solve function can be called directly on an ExactDiagonalizationProblem to solve it. Alternatively, the init function can be used to initialize a solver, which can then be solved with solve. The solve function returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nResult type\n\nThe result type for the solve function is determined by the algorithm used. It has the following fields:\n\nvalues::Vector: The eigenvalues.\nvectors::Vector{<:AbstractDVec}: The eigenvectors.\nsuccess::Bool: A boolean flag indicating whether the solver was successful.\ninfo: Convergence information.\nalgorithm: The algorithm used for the computation.\nproblem: The ExactDiagonalizationProblem that was solved.\nAdditional fields may be present depending on the algorithm used.\n\nIterating the result type will yield the eigenvalues, eigenvectors, and a boolean flag success in that order.\n\nExamples\n\njulia> p = ExactDiagonalizationProblem(HubbardReal1D(BoseFS(1,1,1)))\nExactDiagonalizationProblem(\n  HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  nothing;\n  NamedTuple()...\n)\n\njulia> result = solve(p) # convert to dense matrix and solve with LinearAlgebra.eigen\nEDResult for algorithm LinearAlgebraSolver() with 10 eigenvalue(s),\n  values = [-5.09593, -1.51882, -1.51882, 1.55611, 1.6093, 1.6093, 4.0, 4.53982, 4.90952, 4.90952],\n  and vectors of length 10.\n  Convergence info: \"Dense matrix eigensolver solution from `LinearAlgebra.eigen`\", with howmany = 10 eigenvalues requested.\n  success = true.\n\njulia> using KrylovKit # an external package has to be installed and loaded\n\njulia> s = init(p; algorithm = KrylovKitSolver(true)) # solve without building a matrix\nKrylovKitDirectEDSolver\n with algorithm KrylovKitSolver(matrix_free = true,) for hamiltonian = HubbardReal1D(fs\"|1 1 1⟩\"; u=1.0, t=1.0),\n  v0 = 1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|1 1 1⟩\" => 1.0,\n  kwargs = NamedTuple()\n)\n\njulia> values, vectors, success = solve(s);\n\njulia> result.values[1] ≈ values[1]\ntrue\n\nSee also solve(::ExactDiagonalizationProblem), init(::ExactDiagonalizationProblem), KrylovKitSolver, ArpackSolver, LinearAlgebraSolver.\n\nnote: Note\nUsing the KrylovKitSolver() algorithms requires the KrylovKit.jl package. The package can be loaded with using KrylovKit. Using the ArpackSolver() algorithm requires the Arpack.jl package. The package can be loaded with using Arpack. Using the LOBPCGSolver() algorithm requires the IterativeSolvers.jl package. The package can be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#CommonSolve.solve-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.solve","text":"solve(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nSolve an ExactDiagonalizationProblem p directly. Optionally specify an algorithm. Returns a result type with the eigenvalues, eigenvectors, and convergence information.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\nSee also solve(::ProjectorMonteCarloProblem).\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#CommonSolve.init-Tuple{ExactDiagonalizationProblem}","page":"Exact Diagonalization","title":"CommonSolve.init","text":"init(p::ExactDiagonalizationProblem, [algorithm]; kwargs...)\n\nInitialize a solver for an ExactDiagonalizationProblem p with an optional algorithm. Returns a solver instance that can be solved with solve.\n\nFor a description of the keyword arguments, see the documentation for ExactDiagonalizationProblem.\n\n\n\n\n\n","category":"method"},{"location":"exactdiagonalization.html#Solver-algorithms","page":"Exact Diagonalization","title":"Solver algorithms","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"KrylovKitSolver\nLinearAlgebraSolver\nArpackSolver\nLOBPCGSolver","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.KrylovKitSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.KrylovKitSolver","text":"KrylovKitSolver(matrix_free::Bool; kwargs...)\nKrylovKitSolver(; matrix_free = false, kwargs...)\n\nAlgorithm for solving a large ExactDiagonalizationProblem to find a few eigenvalues and vectors using the KrylovKit.jl package. The Lanczos method is used for hermitian matrices, and the Arnoldi method is used for non-hermitian matrices.\n\nArguments\n\nmatrix_free = false: Whether to use a matrix-free algorithm. If false, a sparse matrix   will be instantiated. This is typically faster and recommended for small matrices,   but requires more memory. If true, the matrix is not instantiated, which is useful for   large matrices that would not fit into memory. The calculation will parallelise using   threading and MPI if available by making use of PDVec.\nkwargs: Additional keyword arguments are passed on to the function   KrylovKit.eigsolve().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the KrylovKit.jl package to be loaded with using KrylovKit.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LinearAlgebraSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LinearAlgebraSolver","text":"LinearAlgebraSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem using the dense-matrix eigensolver from the LinearAlgebra standard library. This is only suitable for small matrices.\n\nThe kwargs are passed on to function LinearAlgebra.eigen.\n\nKeyword arguments\n\npermute = true: Whether to permute the matrix before diagonalization.\nscale = true: Whether to scale the matrix before diagonalization.\nsortby: The sorting order for the eigenvalues.\n\nSee also ExactDiagonalizationProblem, solve.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.ArpackSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.ArpackSolver","text":"ArpackSolver(; kwargs...)\n\nAlgorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix. It uses the Lanzcos method for hermitian problems, and the Arnoldi method for non-hermitian problems, using the Arpack Fortran library. This is faster than KrylovKitSolver(; matrix_free=true), but it requires more memory and will only be useful if the matrix fits into memory.\n\nThe kwargs are passed on to the function Arpack.eigs().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the Arpack.jl package to be loaded with using Arpack.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.LOBPCGSolver","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.LOBPCGSolver","text":"LOBPCGSolver(; kwargs...)\n\nThe Locally Optimal Block Preconditioned Conjugate Gradient Method (LOBPCG). Algorithm for solving an ExactDiagonalizationProblem after instantiating a sparse matrix.\n\nLOBPCG is not suitable for non-hermitian eigenvalue problems.\n\nThe kwargs are passed on to the function IterativeSolvers.lobpcg().\n\nSee also ExactDiagonalizationProblem, solve.\n\nnote: Note\nRequires the IterativeSolvers.jl package to be loaded with using IterativeSolvers.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Converting-a-Hamiltonian-in-to-a-matrix","page":"Exact Diagonalization","title":"Converting a Hamiltonian in to a matrix","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRepresentation\nbuild_basis\nMatrix\nsparse","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRepresentation","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRepresentation","text":"BasisSetRepresentation(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^6, nnzs, cutoff, filter, sort=false, kwargs...\n)\nBasisSetRepresentation(hamiltonian::AbstractHamiltonian, addresses::AbstractVector; kwargs...)\n\nEagerly construct the basis set representation of the operator hamiltonian with all addresses reachable from addr. Instead of a single address, a vector of addresses can be passed.\n\nAn ArgumentError is thrown if dimension(hamiltonian) > sizelim in order to prevent memory overflow. Set sizelim = Inf in order to disable this behaviour.\n\nProviding the number nnzs of expected calculated matrix elements and col_hint for the estimated number of nonzero off-diagonal matrix elements in each matrix column may improve performance.\n\nProviding an energy cutoff will skip the columns and rows with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. To generate the matrix truncated to the subspace spanned by the addresses, use filter = Returns(false).\n\nSetting sort to true will sort the matrix rows and columns. This is useful when the order of the columns matters, e.g. when comparing matrices. Any additional keyword arguments are passed on to Base.sortperm.\n\nFields\n\nsparse_matrix: sparse matrix representing hamiltonian in the basis basis\nbasis: vector of addresses\nhamiltonian: the Hamiltonian hamiltonian\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,0,0));\n\njulia> bsr = BasisSetRepresentation(hamiltonian)\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 3 and 9 stored entries:3×3 SparseArrays.SparseMatrixCSC{Float64, Int64} with 9 stored entries:\n  0.0  -1.0  -1.0\n -1.0   0.0  -1.0\n -1.0  -1.0   0.0\n\njulia> BasisSetRepresentation(hamiltonian, bsr.basis[1:2]; filter = Returns(false)) # passing addresses and truncating\nBasisSetRepresentation(HubbardReal1D(BoseFS{1,3}(1, 0, 0); u=1.0, t=1.0)) with dimension 2 and 4 stored entries:2×2 SparseArrays.SparseMatrixCSC{Float64, Int64} with 4 stored entries:\n  0.0  -1.0\n -1.0   0.0\n\njulia> using LinearAlgebra; eigvals(Matrix(bsr)) # eigenvalues\n3-element Vector{Float64}:\n -1.9999999999999996\n  0.9999999999999997\n  1.0000000000000002\n\njulia> ev = eigvecs(Matrix(bsr))[:,1] # ground state eigenvector\n3-element Vector{Float64}:\n -0.5773502691896257\n -0.5773502691896255\n -0.5773502691896257\n\njulia> DVec(zip(bsr.basis,ev)) # ground state as DVec\nDVec{BoseFS{1, 3, BitString{3, 1, UInt8}},Float64} with 3 entries, style = IsDeterministic{Float64}()\n  fs\"|0 0 1⟩\" => -0.57735\n  fs\"|0 1 0⟩\" => -0.57735\n  fs\"|1 0 0⟩\" => -0.57735\n\nHas methods for dimension, sparse, Matrix, starting_address.\n\nPart of the AbstractHamiltonian interface. See also build_basis.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.build_basis","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.build_basis","text":"build_basis(\n    ham, address=starting_address(ham);\n    cutoff, filter, sizelim, sort=false, kwargs...\n) -> basis\nbuild_basis(ham, addresses::AbstractVector; kwargs...)\n\nGet all basis element of a linear operator ham that are reachable (via non-zero matrix elements) from the address address, returned as a vector. Instead of a single address, a vector of addresses can be passed. Does not return the matrix, for that purpose use BasisSetRepresentation.\n\nProviding an energy cutoff will skip addresses with diagonal elements greater than cutoff. Alternatively, an arbitrary filter function can be used instead. Addresses passed as arguments are not filtered. A maximum basis size sizelim can be set which will throw an error if the expected dimension of ham is larger than sizelim. This may be useful when memory may be a concern. These options are disabled by default.\n\nSetting sort to true will sort the basis. Any additional keyword arguments are passed on to Base.sort!.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Base.Matrix","page":"Exact Diagonalization","title":"Base.Matrix","text":"Matrix(\n    hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian);\n    sizelim=10^4, kwargs...\n)\nMatrix(bsr::BasisSetRepresentation)\n\nReturn a dense matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"type"},{"location":"exactdiagonalization.html#SparseArrays.sparse","page":"Exact Diagonalization","title":"SparseArrays.sparse","text":"sparse(hamiltonian::AbstractHamiltonian, addr=starting_address(hamiltonian); kwargs...)\nsparse(bsr::BasisSetRepresentation)\n\nReturn a sparse matrix representation of hamiltonian or bsr. kwargs are passed to BasisSetRepresentation.\n\nSee BasisSetRepresentation.\n\n\n\n\n\n","category":"function"},{"location":"exactdiagonalization.html#Deprecated","page":"Exact Diagonalization","title":"Deprecated","text":"","category":"section"},{"location":"exactdiagonalization.html","page":"Exact Diagonalization","title":"Exact Diagonalization","text":"BasisSetRep","category":"page"},{"location":"exactdiagonalization.html#Rimu.ExactDiagonalization.BasisSetRep","page":"Exact Diagonalization","title":"Rimu.ExactDiagonalization.BasisSetRep","text":"BasisSetRep(args...; kwargs...)\n\nBasisSetRep is deprecated. Use BasisSetRepresentation instead.\n\n\n\n\n\n","category":"function"},{"location":"randomnumbers.html#Random-numbers-in-Rimu","page":"Random numbers","title":"Random numbers in Rimu","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"Rimu uses Julia's built-in random number generator, which currently defaults to Xoshiro256++.","category":"page"},{"location":"randomnumbers.html#Reproducibility","page":"Random numbers","title":"Reproducibility","text":"","category":"section"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"If you want FCIQMC runs to be reproducible, make sure to seed the RNG with Random.seed!.","category":"page"},{"location":"randomnumbers.html","page":"Random numbers","title":"Random numbers","text":"MPI-distributed runs can also be made reproducible by seeding the RNG with Rimu.RMPI.mpi_seed!.","category":"page"},{"location":"documentation.html#Documentation-generation","page":"Documentation generation","title":"Documentation generation","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"We are using Documenter.jl to generate the documentation web site based on markdown files stored in docs/src. Please help keeping the documentation up-to-date by editing the markdown files! For instructions on how to write appropriate documentation please refer to the relevant chapter in the Julia documentation and the Documenter.jl documentation.","category":"page"},{"location":"documentation.html#Generating-the-documentation-web-site","page":"Documentation generation","title":"Generating the documentation web site","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"The documentation pages can be generated by running the build script by typing","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Rimu$ julia --project=docs docs/make.jl","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"on the shell prompt from the Rimu/ folder. A complete image of the static documentation web site will be generated in the folder docs/build/. It can be viewed locally by pointing a web browser to file docs/build/index.html, or by deploying it to the GitHub pages web server.","category":"page"},{"location":"documentation.html#Automatic-documentation-generation-and-deployment","page":"Documentation generation","title":"Automatic documentation generation and deployment","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Our documentation is hosted on GitHub pages. The documentation web site can be built and deployed automatically with GitHub Actions. This needs to be set up with an appropriate script in the file .github/workflows/docs.yml, where triggers for this to happen can be defined. In the current set up, a new documentation web site is generated and deployed whenever someone pushes to the develop branch on the GitHub server. The updated documentation can then be accessed here.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Previews for pull-requests can be accessed by replacing 101 in the following link with the PR number: https://joachimbrand.github.io/Rimu.jl/previews/PR101/","category":"page"},{"location":"documentation.html#Example-scripts","page":"Documentation generation","title":"Example scripts","text":"","category":"section"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Examples should be added to the scripts folder, in the form of .jl files suitable for  parsing by Literate. The process of generating  documentation is automated in the docs/make.jl file and assumes that the following line is  at (or near) the top of the script:","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"# # Example N: Title","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"where the number N and Title will be extracted automatically.","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"Tests for the results and output of specific scripts should be added at the end of each example. The code to run the test should be hidden from the final generated document by appending \"#hide\" to each line of testing code. For example, ","category":"page"},{"location":"documentation.html","page":"Documentation generation","title":"Documentation generation","text":"using Test                          #hide\n@test isfile(\"result.out\")          #hide\n@test result == expected_result     #hide","category":"page"},{"location":"addresses.html#Module-BitStringAddresses","page":"BitString addresses","title":"Module BitStringAddresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"This module contains the implementations of BitString and various Fock addresses. The addresses serve as a basis for a Hamiltonian.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"While there are not restrictions on the type of address a Hamiltonian uses, Rimu provides implementations for Bosonic, Fermionic, and mixed Fock States.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"When implementing a new address type, care must be taken to make them space-efficient and stack-allocated - avoid using (heap-allocated) arrays to represent your addresses at all costs!","category":"page"},{"location":"addresses.html#Fock-addresses","page":"BitString addresses","title":"Fock addresses","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Rimu provides a variety of address implementations that should make it straightforward to implement efficient Hamiltonians. Examples are:","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"BoseFS Single-component bosonic Fock state with fixed particle and mode number.\nFermiFS Single-component fermionic Fock state with fixed particle and mode number.\nCompositeFS Multi-component Fock state composed of the above types.\nOccupationNumberFS Single-component bosonic Fock state with a fixed number of modes. The number of particles is not part of the type and can be changed by operators.","category":"page"},{"location":"addresses.html#Fock-address-API","page":"BitString addresses","title":"Fock address API","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"fockaddress.jl\",\"bosefs.jl\",\"fermifs.jl\",\"multicomponent.jl\",\"occupationnumberfs.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.AbstractFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.AbstractFockAddress","text":"AbstractFockAddress{N,M}\n\nAbstract type representing a Fock state with N particles and M modes.\n\nSee also SingleComponentFockAddress, CompositeFS, BoseFS, FermiFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFSIndex","text":"BoseFSIndex\n\nStruct used for indexing and performing excitations on a BoseFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is the bit offset of the mode when\n\nthe address is represented by a bitstring, and the position in the list when it is  represented by SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFSIndex","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFSIndex","text":"FermiFSIndex\n\nStruct used for indexing and performing excitations on a FermiFS.\n\nFields:\n\noccnum: the occupation number.\nmode: the index of the mode.\noffset: the position of the mode in the address. This is mode - 1 when the address is represented by a bitstring, and the position in the list when using SortedParticleList.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedModeMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedModeMap","text":"OccupiedModeMap(addr) <: AbstractVector\n\nGet a map of occupied modes in address as an AbstractVector of indices compatible with excitation - BoseFSIndex or FermiFSIndex.\n\nOccupiedModeMap(addr)[i] contains the index for the i-th occupied mode. This is useful because repeatedly looking for occupied modes with find_occupied_mode can be time-consuming. OccupiedModeMap(addr) is an eager version of the iterator returned by occupied_modes. It is similar to onr but contains more information.\n\nExample\n\njulia> b = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> mb = OccupiedModeMap(b)\n3-element OccupiedModeMap{7, BoseFSIndex}:\n BoseFSIndex(occnum=10, mode=1, offset=0)\n BoseFSIndex(occnum=2, mode=5, offset=14)\n BoseFSIndex(occnum=1, mode=7, offset=18)\n\njulia> f = FermiFS(1,1,1,1,0,0,1,0,0)\nFermiFS{5,9}(1, 1, 1, 1, 0, 0, 1, 0, 0)\n\njulia> mf = OccupiedModeMap(f)\n5-element OccupiedModeMap{5, FermiFSIndex}:\n FermiFSIndex(occnum=1, mode=1, offset=0)\n FermiFSIndex(occnum=1, mode=2, offset=1)\n FermiFSIndex(occnum=1, mode=3, offset=2)\n FermiFSIndex(occnum=1, mode=4, offset=3)\n FermiFSIndex(occnum=1, mode=7, offset=6)\n\njulia> mf == collect(occupied_modes(f))\ntrue\n\njulia> dot(mf, mb)\n11\n\njulia> dot(mf, 1:20)\n17\n\nSee also dot, SingleComponentFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupiedPairsMap","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupiedPairsMap","text":"OccupiedPairsMap(addr::SingleComponentFockAddress) <: AbstractVector\n\nGet a map of all distinct pairs of indices in addr. Pairs involving multiply-occupied modes are counted once, (including self-pairing). This is useful for cases where identifying pairs of particles for eg. interactions is not well-defined or efficient to do on the fly. This is an eager iterator whose elements are a tuple of particle indices that can be given to excitation\n\nExample\n\njulia> addr = BoseFS(10, 0, 0, 0, 2, 0, 1)\nBoseFS{13,7}(10, 0, 0, 0, 2, 0, 1)\n\njulia> pairs = OccupiedPairsMap(addr)\n5-element OccupiedPairsMap{78, Tuple{BoseFSIndex, BoseFSIndex}}:\n (BoseFSIndex(occnum=10, mode=1, offset=0), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=2, mode=5, offset=14))\n (BoseFSIndex(occnum=2, mode=5, offset=14), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=10, mode=1, offset=0))\n (BoseFSIndex(occnum=1, mode=7, offset=18), BoseFSIndex(occnum=2, mode=5, offset=14))\n\njulia> excitation(addr, pairs[2], pairs[4])\n(BoseFS{13,7}(9, 0, 0, 0, 4, 0, 0), 10.954451150103322)\n\nSee also OccupiedModeMap.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SingleComponentFockAddress","page":"BitString addresses","title":"Rimu.BitStringAddresses.SingleComponentFockAddress","text":"SingleComponentFockAddress{N,M} <: AbstractFockAddress{N,M}\n\nA type representing a single component Fock state with N particles and M modes.\n\nImplemented subtypes: BoseFS, FermiFS.\n\nSupported functionality\n\nfind_mode\nfind_occupied_mode\nnum_occupied_modes\noccupied_modes: Lazy iterator.\nOccupiedModeMap: AbstractVector with eager construction.\nexcitation: Create a new address.\nBoseFSIndex and FermiFSIndex for indexing.\n\nSee also CompositeFS, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::SingleComponentFockAddress, creations::NTuple, destructions::NTuple)\n\nGenerate an excitation on address addr by applying creations and destructions, which are tuples of the appropriate address indices (i.e. BoseFSIndex for bosons, or FermiFSIndex for fermions).\n\na^_c_1 a^_c_2 ldots a_d_1 a_d_2 ldots mathrmaddrrangle to\nαmathrmnaddrrangle\n\nReturns the new address naddr and the factor α. The value of α is given by the square root of the product of mode occupations before destruction and after creation. If the excitation is illegal, returns an arbitrary address and the value 0.0.\n\nExample\n\njulia> f = FermiFS(1,1,0,0,1,1,1,1)\nFermiFS{6,8}(1, 1, 0, 0, 1, 1, 1, 1)\n\njulia> i, j, k, l = find_mode(f, (3,4,2,5))\n(FermiFSIndex(occnum=0, mode=3, offset=2), FermiFSIndex(occnum=0, mode=4, offset=3), FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=5, offset=4))\n\njulia> excitation(f, (i,j), (k,l))\n(FermiFS{6,8}(1, 0, 1, 1, 0, 1, 1, 1), -1.0)\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_mode","text":"find_mode(::SingleComponentFockAddress, i)\n\nFind the i-th mode in address. Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. Can work on a tuple of modes. Does not check bounds.\n\njulia> find_mode(BoseFS(1, 0, 2), 2)\nBoseFSIndex(occnum=0, mode=2, offset=2)\n\njulia> find_mode(FermiFS(1, 1, 1, 0), (2,3))\n(FermiFSIndex(occnum=1, mode=2, offset=1), FermiFSIndex(occnum=1, mode=3, offset=2))\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.find_occupied_mode","page":"BitString addresses","title":"Rimu.BitStringAddresses.find_occupied_mode","text":"find_occupied_mode(::SingleComponentFockAddress, k)\nfind_occupied_mode(::BoseFS, k, [n])\n\nFind the k-th occupied mode in address (with at least n particles). Returns BoseFSIndex for BoseFS, and FermiFSIndex for FermiFS. When unsuccessful it returns a zero index.\n\nExample\n\njulia> find_occupied_mode(FermiFS(1, 1, 1, 0), 2)\nFermiFSIndex(occnum=1, mode=2, offset=1)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1)\nBoseFSIndex(occnum=1, mode=1, offset=0)\n\njulia> find_occupied_mode(BoseFS(1, 0, 2), 1, 2)\nBoseFSIndex(occnum=2, mode=3, offset=3)\n\nSee also occupied_modes, OccupiedModeMap, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_components-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_components","text":"num_components(::Type{<:AbstractFockAddress})\nnum_components(::AbstractFockAddress)\n\nNumber of components in address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_modes-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_modes","text":"num_modes(::Type{<:AbstractFockAddress})\nnum_modes(::AbstractFockAddress)\n\nNumber of modes represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.num_occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_occupied_modes","text":"num_occupied_modes(::SingleComponentFockAddress)\n\nGet the number of occupied modes in address. Equivalent to length(occupied_modes(address)), or the number of non-zeros in its ONR representation.\n\nExample\n\njulia> num_occupied_modes(BoseFS((1, 0, 2)))\n2\njulia> num_occupied_modes(FermiFS((1, 1, 1, 0)))\n3\n\nSee SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.num_particles-Tuple{AbstractFockAddress}","page":"BitString addresses","title":"Rimu.BitStringAddresses.num_particles","text":"num_particles(::Type{<:AbstractFockAddress})\nnum_particles(::AbstractFockAddress)\n\nNumber of particles represented by address.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.occupied_modes","page":"BitString addresses","title":"Rimu.BitStringAddresses.occupied_modes","text":"occupied_modes(::SingleComponentFockAddress)\n\nReturn a lazy iterator over all occupied modes in an address. Iterates over BoseFSIndexs for BoseFS, and over FermiFSIndexs for FermiFS. See OccupiedModeMap for an eager version.\n\nExample\n\njulia> b = BoseFS((1,5,0,4));\n\njulia> foreach(println, occupied_modes(b))\nBoseFSIndex(occnum=1, mode=1, offset=0)\nBoseFSIndex(occnum=5, mode=2, offset=2)\nBoseFSIndex(occnum=4, mode=4, offset=9)\n\njulia> f = FermiFS((1,1,0,1,0,0,1));\n\njulia> foreach(println, occupied_modes(f))\nFermiFSIndex(occnum=1, mode=1, offset=0)\nFermiFSIndex(occnum=1, mode=2, offset=1)\nFermiFSIndex(occnum=1, mode=4, offset=3)\nFermiFSIndex(occnum=1, mode=7, offset=6)\n\nSee also find_occupied_mode, SingleComponentFockAddress.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.onr","page":"BitString addresses","title":"Rimu.BitStringAddresses.onr","text":"occupation_number_representation(fs::SingleComponentFockAddress)\nonr(fs::SingleComponentFockAddress)\n\nCompute and return the occupation number representation of the Fock state fs as an SVector{M}, where M is the number of modes.\n\n\n\n\n\n","category":"function"},{"location":"addresses.html#Rimu.BitStringAddresses.@fs_str-Tuple{Any}","page":"BitString addresses","title":"Rimu.BitStringAddresses.@fs_str","text":"fs\"$(string)\"\n\nParse the compact representation of a Fock state. Useful for copying the printout from a vector to the REPL.\n\nExample\n\njulia> DVec(BoseFS{3,4}(0, 1, 2, 0) => 1)\nDVec{BoseFS{3, 4, BitString{6, 1, UInt8}},Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  fs\"|0 1 2 0⟩\" => 1\n\njulia> fs\"|0 1 2 0⟩\" => 1 # Copied from above printout\nBoseFS{3,4}(0, 1, 2, 0) => 1\n\njulia> fs\"|1 2 3⟩⊗|0 1 0⟩\" # composite bosonic Fock state\nCompositeFS(\n  BoseFS{6,3}(1, 2, 3),\n  BoseFS{1,3}(0, 1, 0),\n)\n\njulia> fs\"|↑↓↑⟩\" # construct a fermionic Fock state\nCompositeFS(\n  FermiFS{2,3}(1, 0, 1),\n  FermiFS{1,3}(0, 1, 0),\n)\n\njulia> s = fs\"|0 1 2 0⟩{}\" # constructing OccupationNumberFS with default UInt8 container\nOccupationNumberFS{4, UInt8}(0, 1, 2, 0)\n\njulia> [s] # prints out with the signifcant number of bits specified in braces\n1-element Vector{OccupationNumberFS{4, UInt8}}:\n fs\"|0 1 2 0⟩{8}\"\n\nSee also FermiFS, BoseFS, CompositeFS, FermiFS2C, OccupationNumberFS.\n\n\n\n\n\n","category":"macro"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS","text":"BoseFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N spinless bosons in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nBoseFS{[N,M]}(val::Integer...): Create BoseFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nBoseFS{[N,M]}(onr): Create BoseFS{N,M} from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple or SVector.\nBoseFS{[N,M]}([M, ]pairs...): Provide the number of modes M and mode => occupation_number pairs. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nBoseFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> BoseFS{6,5}(0, 1, 2, 3, 0)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS([abs(i - 3) ≤ 1 ? i - 1 : 0 for i in 1:5])\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS(5, 2 => 1, 3 => 2, 4 => 3)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> BoseFS{6,5}(i => i - 1 for i in 2:4)\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|0 1 2 3 0⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\njulia> fs\"|b 5: 2 3 3 4 4 4⟩\"\nBoseFS{6,5}(0, 1, 2, 3, 0)\n\nSee also: SingleComponentFockAddress, OccupationNumberFS, FermiFS, CompositeFS, FermiFS2C.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.bose_hubbard_interaction-Union{Tuple{BoseFS{<:Any, <:Any, A}}, Tuple{A}} where A<:BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.bose_hubbard_interaction","text":"bose_hubbard_interaction(address)\n\nReturn Σ_i n_i (n_i-1) for computing the Bose-Hubbard on-site interaction (without the U prefactor.)\n\nExample\n\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((2,1,1,0)))\n2\njulia> Hamiltonians.bose_hubbard_interaction(BoseFS{4,4}((3,0,1,0)))\n6\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.hopnextneighbour-Union{Tuple{A}, Tuple{M}, Tuple{N}, Tuple{BoseFS{N, M, A}, Any}} where {N, M, A<:BitString}","page":"BitString addresses","title":"Rimu.BitStringAddresses.hopnextneighbour","text":"new_address, product = hopnextneighbour(add, chosen)\n\nCompute the new address of a hopping event for the Bose-Hubbard model. Returns the new address and the square root of product of occupation numbers of the involved modes.\n\nThe off-diagonals are indexed as follows:\n\n(chosen + 1) ÷ 2 selects the hopping site.\nEven chosen indicates a hop to the left.\nOdd chosen indicates a hop to the right.\nBoundary conditions are periodic.\n\nExample\n\njulia> using Rimu.Hamiltonians: hopnextneighbour\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 3)\n(BoseFS{2,3}(2, 0, 0), 1.4142135623730951)\n\njulia> hopnextneighbour(BoseFS(1, 0, 1), 4)\n(BoseFS{2,3}(1, 1, 0), 1.0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.near_uniform-Union{Tuple{Type{<:BoseFS{N, M}}}, Tuple{M}, Tuple{N}} where {N, M}","page":"BitString addresses","title":"Rimu.BitStringAddresses.near_uniform","text":"near_uniform(BoseFS{N,M}) -> BoseFS{N,M}\n\nCreate bosonic Fock state with near uniform occupation number of M modes with a total of N particles.\n\nExamples\n\njulia> near_uniform(BoseFS{7,5})\nBoseFS{7,5}(2, 2, 1, 1, 1)\n\njulia> near_uniform(FermiFS{3,5})\nFermiFS{3,5}(1, 1, 1, 0, 0)\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS","text":"FermiFS{N,M,S} <: SingleComponentFockAddress\n\nAddress type that represents a Fock state of N fermions of the same spin in M modes by wrapping a BitString, or a SortedParticleList. Which is wrapped is chosen automatically based on the properties of the address.\n\nConstructors\n\nFermiFS{[N,M]}(val::Integer...): Create FermiFS{N,M} from occupation numbers. This is type-stable if the number of modes M and the number of particles N are provided. Otherwise, M and N are inferred from the arguments.\nFermiFS{[N,M]}(onr): Create FermiFS{N,M}  from occupation number representation, see onr. This is efficient if N and M are provided, and onr is a statically-sized collection, such as a Tuple{M} or SVector{M}.\nFermiFS{[N,M]}([M, ]pairs...): Provide the number of modes M and pairs of the form mode => 1. If M is provided as a type parameter, it should not be provided as the first argument.  Useful for creating sparse addresses. pairs can be multiple arguments or an iterator of pairs.\nFermiFS{N,M,S}(bs::S): Unsafe constructor. Does not check whether the number of particles in bs is equal to N, or whether each mode only contains one particle.\n@fs_str: Addresses are sometimes printed in a compact manner. This representation can also be used as a constructor. See the last example below.\n\nExamples\n\njulia> FermiFS{3,5}(0, 1, 1, 1, 0)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS([abs(i - 3) ≤ 1 for i in 1:5])\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS(5, 2 => 1, 3 => 1, 4 => 1)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> FermiFS{3,5}(i => 1 for i in 2:4)\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|⋅↑↑↑⋅⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\njulia> fs\"|f 5: 2 3 4⟩\"\nFermiFS{3,5}(0, 1, 1, 1, 0)\n\nSee also: SingleComponentFockAddress, BoseFS, CompositeFS, FermiFS2C, BitString, OccupationNumberFS.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.BoseFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.BoseFS2C","text":"BoseFS2C{NA,NB,M,AA,AB} <: AbstractFockAddress\nBoseFS2C(onr_a, onr_b)\n\nAddress type that constructed with two BoseFS{N,M,S}. It represents a Fock state with two components, e.g. two different species of bosons with particle number NA from species S and particle number NB from species B. The number of modes M is expected to be the same for both components.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.CompositeFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.CompositeFS","text":"CompositeFS(addresses::SingleComponentFockAddress...) <: AbstractFockAddress\n\nUsed to encode addresses for multi-component models. All component addresses are expected have the same number of modes.\n\nSee also: BoseFS, FermiFS, SingleComponentFockAddress, num_modes, FermiFS2C, AbstractFockAddress.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.FermiFS2C","page":"BitString addresses","title":"Rimu.BitStringAddresses.FermiFS2C","text":"FermiFS2C <: AbstractFockAddress\nFermiFS2C(onr_a, onr_b)\n\nFock state address with two fermionic (spin) components. Alias for CompositeFS with two FermiFS components. Construct by specifying either two compatible FermiFSs, two onrs, or the number of modes followed by mode => occupation_number pairs, where occupation_number=1 will put a particle in the first component and occupation_number=-1 will put a particle in the second component. See examples below.\n\nExamples\n\njulia> FermiFS2C(FermiFS(1,0,0), FermiFS(0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C((1,0,0), (0,1,1))\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> FermiFS2C(3, 1 => 1, 2 => -1, 3 => -1)\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\njulia> fs\"|↑↓↓⟩\"\nCompositeFS(\n  FermiFS{1,3}(1, 0, 0),\n  FermiFS{2,3}(0, 1, 1),\n)\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.time_reverse-Union{Tuple{CompositeFS{2, N, M, T}}, Tuple{T}, Tuple{M}, Tuple{N}} where {N, M, T<:(Tuple{T, T} where T)}","page":"BitString addresses","title":"Rimu.BitStringAddresses.time_reverse","text":"time_reverse(addr)\n\nApply the time-reversal operation on a two-component Fock address that flips all the spins.\n\nRequires each component address to have the same type.\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Rimu.BitStringAddresses.OccupationNumberFS","page":"BitString addresses","title":"Rimu.BitStringAddresses.OccupationNumberFS","text":"OccupationNumberFS{M,T} <: SingleComponentFockAddress\n\nAddress type that stores the occupation numbers of a single component bosonic Fock state with M modes. The occupation numbers must fit into the type T <: Unsigned. The number of particles is runtime data, and can be retrieved with num_particles(address).\n\nConstructors\n\nOccupationNumberFS(val::Integer...): Construct from occupation numbers. Must be < 256 to fit into UInt8.\nOccupationNumberFS{[M,T]}(onr): Construct from collection onr with M occupation numbers with type T. If unspecified, the type T of the occupation numbers is inferred from the type of the arguments.\nOccupationNumberFS(fs::BoseFS): Construct from BoseFS.\nWith shortform macro @fs_str. Specify the number of significant bits in braces. See example below.\n\nExamples\n\njulia> ofs = OccupationNumberFS(1,2,3)\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> ofs == fs\"|1 2 3⟩{8}\"\ntrue\n\njulia> num_particles(ofs)\n6\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.excitation-Union{Tuple{T}, Tuple{OccupationNumberFS{<:Any, T}, Tuple{Vararg{Int64, var\"#s61\"}} where var\"#s61\", Tuple{Vararg{Int64, var\"#s5\"}} where var\"#s5\"}} where T","page":"BitString addresses","title":"Rimu.BitStringAddresses.excitation","text":"excitation(addr::OccupationNumberFS, c::NTuple, d::NTuple)\n→ (nadd, α)\n\nGenerate an excitation on an OccupationNumberFS by applying the creation and destruction operators specified by the tuples of mode numbers c and d to the Fock state addr. The modes are indexed by integers (starting at 1), or by indices of type BoseFSIndex. The value of α is given by the square root of the product of mode occupations before destruction and after creation.\n\nThe number of particles may change by this type of excitation.\n\nExample\n\njulia> s = fs\"|1 2 3⟩{8}\"\nOccupationNumberFS{3, UInt8}(1, 2, 3)\n\njulia> num_particles(s)\n6\n\njulia> es, α = excitation(s, (1,1), (3,))\n(OccupationNumberFS{3, UInt8}(3, 2, 2), 4.242640687119285)\n\njulia> num_particles(es)\n7\n\n\n\n\n\n","category":"method"},{"location":"addresses.html#Internal-representations","page":"BitString addresses","title":"Internal representations","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"The atomic addresses, BoseFS and FermiFS, are implemented as either bitstrings or sorted lists of particles. Using these approaches over an occupation number representation makes the addresses much more space-efficient.","category":"page"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Therewhile OccupationNumberFS internally uses the occupation number representation,  which allows it to handle excitation operations that change the particle number. This is fast but requires more storage space.","category":"page"},{"location":"addresses.html#Internal-APIs","page":"BitString addresses","title":"Internal APIs","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Modules = [BitStringAddresses]\nPages = [\"bitstring.jl\", \"sortedparticlelist.jl\"]\nPrivate = false","category":"page"},{"location":"addresses.html#Rimu.BitStringAddresses.BitString","page":"BitString addresses","title":"Rimu.BitStringAddresses.BitString","text":"BitString{B,N,T<:Unsigned}\n\nType for storing bitstrings of static size. Holds B bits in N chunks, where each chunk is of type T.\n\nN is chosen automatically to accommodate B bits as efficiently as possible.\n\nConstructors\n\nBitString{B,N,T}(::SVector{N,T}): unsafe constructor. Does not check for ghost bits.\nBitString{B,N,T}(i::T): as above, but sets i as the rightmost chunk.\nBitString{B}(::Integer): Convert integer to BitString. Integer is truncated to the correct number of bits.\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Rimu.BitStringAddresses.SortedParticleList","page":"BitString addresses","title":"Rimu.BitStringAddresses.SortedParticleList","text":"SortedParticleList{N,M,T<:Unsigned}\n\nType for storing sparse fock states. Stores the mode number of each particle as an entry with only its mode stored. The entries are always kept sorted.\n\nIterating over SortedParticleLists yields occupied modes as a tuple of occupation number, mode number, and position in list.\n\nConstructors\n\nSortedParticleList{N,M,T}(::SVector{N,T}): unsafe constructor. Does not sort input.\nSortedParticleList(arr::AbstractVector): convert ONR to SortedParticleList\n\n\n\n\n\n","category":"type"},{"location":"addresses.html#Index","page":"BitString addresses","title":"Index","text":"","category":"section"},{"location":"addresses.html","page":"BitString addresses","title":"BitString addresses","text":"Pages   = [\"addresses.md\"]","category":"page"},{"location":"API.html#API","page":"API","title":"API","text":"","category":"section"},{"location":"API.html#Rimu","page":"API","title":"Rimu","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"Modules = [Rimu]","category":"page"},{"location":"API.html#Rimu.Rimu","page":"API","title":"Rimu.Rimu","text":"Rimu\n\nRandom integrators for many-body quantum systems\n\nWelcome to Rimu version 0.12.0. Read the documentation online.\n\n\n\n\n\n","category":"module"},{"location":"API.html#Rimu.PACKAGE_VERSION","page":"API","title":"Rimu.PACKAGE_VERSION","text":"Rimu.PACKAGE_VERSION\n\nConstant that contains the current VersionNumber of Rimu.\n\n\n\n\n\n","category":"constant"},{"location":"API.html#DataFrames.DataFrame-Tuple{Rimu.Report}","page":"API","title":"DataFrames.DataFrame","text":"DataFrame(report::Report)\n\nConvert the Report to a DataFrame. Metadata is added as metadata to the DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.AllOverlaps","page":"API","title":"Rimu.AllOverlaps","text":"AllOverlaps(num_replicas=2; operator=nothing, transform=nothing, vecnorm=true) <: ReplicaStrategy{num_replicas}\n\nRun num_replicas replicas and report overlaps between all pairs of replica vectors. If operator is not nothing, the overlap dot(c1, operator, c2) is reported as well. If operator is a tuple of operators, the overlaps are computed for all operators.\n\nColumn names in the report are of the form c{i}_dot_c{j} for vector-vector overlaps, and c{i}_Op{k}_c{j} for operator overlaps.\n\nSee lomc!, ReplicaStrategy and AbstractHamiltonian (for an interface for implementing operators).\n\nTransformed Hamiltonians\n\nIf a transformed Hamiltonian G has been passed to lomc! then overlaps can be calculated by passing the same transformed Hamiltonian to AllOverlaps by setting transform=G. A warning is given if these two Hamiltonians do not match.\n\nImplemented transformations are:\n\nGutzwillerSampling\nGuidingVectorSampling\n\nIn the case of a transformed Hamiltonian the overlaps are defined as follows. For a similarity transformation G of the Hamiltonian (see e.g. GutzwillerSampling.)\n\n    hatG = f hatH f^-1\n\nThe expectation value of an operator hatA is\n\n    langle hatA rangle = langle psi  hatA  psi rangle\n        = fraclangle phi  f^-1 hatA f^-1  phi ranglelangle phi  f^-2  phi rangle\n\nwhere\n\n     phi rangle = f  psi rangle\n\nis the (right) eigenvector of hatG and  psi rangle is an eigenvector of hatH.\n\nFor a K-tuple of input operators (hatA_1  hatA_K), overlaps of langle phi  f^-1 hatA f^-1  phi rangle are reported as c{i}_Op{k}_c{j}. The correct vector-vector overlap langle phi  f^-2  phi rangle is reported last as c{i}_Op{K+1}_c{j}. This is in addition to the bare vector-vector overlap langle phi  f^-2  phi rangle that is reported as c{i}_dot_c{j}.\n\nIn either case the c{i}_dot_c{j} overlap can be omitted with the flag vecnorm=false.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ConstantTimeStep","page":"API","title":"Rimu.ConstantTimeStep","text":"ConstantTimeStep <: TimeStepStrategy\n\nKeep dτ constant.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DefaultShiftParameters","page":"API","title":"Rimu.DefaultShiftParameters","text":"DefaultShiftParameters\n\nDefault mutable struct for storing the shift parameters.\n\nSee ShiftStrategy, initialise_shift_parameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DontUpdate","page":"API","title":"Rimu.DontUpdate","text":"DontUpdate(; targetwalkers = 1_000_000) <: ShiftStrategy\n\nDon't update the shift.  Return when targetwalkers is reached.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogProjected","page":"API","title":"Rimu.DoubleLogProjected","text":"DoubleLogProjected(; target, projector, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ after projecting onto projector.\n\nS^n+1 = S^n -fracζdτlnleft(fracPΨ^(n+1)PΨ^(n)right)-fracξdτlnleft(fracPΨ^(n+1)texttargetright)\n\nNote that adjusting the keyword maxlength in lomc! is advised as the default may not be appropriate.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogSumUpdate","page":"API","title":"Rimu.DoubleLogSumUpdate","text":"DoubleLogSumUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4, α = 1/2) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameters ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracN_mathrmw^n+1N_mathrmw^nright)\n- fracξdτlnleft(fracN_mathrmw^n+1N_mathrmw^texttargetright)\n\nwhere N_mathrmw = (1-α)*walkernumber() + α*UniformProjector()⋅ψ computed with walkernumber() and UniformProjector(). When ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdate","page":"API","title":"Rimu.DoubleLogUpdate","text":"DoubleLogUpdate(; targetwalkers = 1000, ζ = 0.08, ξ = ζ^2/4) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ and ξ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)-fracξdτlnleft(fracΨ_1^n+1Ψ_1^texttargetright)\n\nWhen ξ = ζ^2/4 this corresponds to critical damping with a damping time scale T = 2/ζ.\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.DoubleLogUpdateAfterTargetWalkers","page":"API","title":"Rimu.DoubleLogUpdateAfterTargetWalkers","text":"DoubleLogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08, ξ = 0.0016) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ and ξ.\n\nSee DoubleLogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FCIQMC","page":"API","title":"Rimu.FCIQMC","text":"FCIQMC(; kwargs...) <: PMCAlgorithm\n\nAlgorithm for the full configuration interaction quantum Monte Carlo (FCIQMC) method. The default algorithm for ProjectorMonteCarloProblem.\n\nKeyword arguments and defaults:\n\nshift_strategy = DoubleLogUpdate(; targetwalkers = 1_000, ζ = 0.08,   ξ = ζ^2/4): How to update the shift.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not.\n\nSee also ProjectorMonteCarloProblem, ShiftStrategy, TimeStepStrategy, DoubleLogUpdate, ConstantTimeStep.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FciqmcRunStrategy","page":"API","title":"Rimu.FciqmcRunStrategy","text":" FciqmcRunStrategy{T}\n\nAbstract type representing the strategy for running and terminating lomc!(). The type parameter T is relevant for reporting the shift and the norm.\n\nImplemented strategies:\n\nRunTillLastStep\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.FirstOrderTransitionOperator","page":"API","title":"Rimu.FirstOrderTransitionOperator","text":"FirstOrderTransitionOperator(hamiltonian, shift, dτ) <: AbstractHamiltonian\nFirstOrderTransitionOperator(sp::DefaultShiftParameters, hamiltonian)\n\nFirst order transition operator\n\n𝐓 = 1 + dτ(S - 𝐇)\n\nwhere 𝐇 is the hamiltonian and S is the shift.\n\n𝐓 represents the first order expansion of the exponential evolution operator of the imaginary-time Schrödinger equation (Euler step) and repeated application will project out the ground state eigenvector of the hamiltonian.  It is the transition operator used in FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.GramSchmidt","page":"API","title":"Rimu.GramSchmidt","text":"GramSchmidt{S} <: SpectralStrategy{S}\n\nUse the Gram-Schmidt procedure to orthogonalize the excited states. A total of S spectral states are used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdate","page":"API","title":"Rimu.LogUpdate","text":"LogUpdate(ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift according to the log formula with damping parameter ζ.\n\nS^n+1 = S^n -fracζdτlnleft(fracΨ_1^n+1Ψ_1^nright)\n\nSee ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.LogUpdateAfterTargetWalkers","page":"API","title":"Rimu.LogUpdateAfterTargetWalkers","text":"LogUpdateAfterTargetWalkers(targetwalkers, ζ = 0.08) <: ShiftStrategy\n\nStrategy for updating the shift: After targetwalkers is reached, update the shift according to the log formula with damping parameter ζ.\n\nSee LogUpdate, ShiftStrategy, lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.MultiScalar","page":"API","title":"Rimu.MultiScalar","text":"MultiScalar\n\nWrapper over a tuple that supports +, *, min, and max. Used with MPI communication because SVectors are treated as arrays by MPI.Allreduce and Tuples do not support scalar operations.\n\nExample\n\nSuppose you want to compute the sum of a vector dv and also get the number of positive elements it has in a single pass. You can use MultiScalar:\n\njulia> dv = DVec(:a => 1, :b => -2, :c => 1);\n\njulia> s, p = mapreduce(+, values(dv)) do v\n    Rimu.MultiScalar(v, Int(sign(v) == 1))\nend;\n\njulia> s, p\n(0, 2)\n\nThis will work with MPIData.\n\nNote that only MultiScalars with the same types can be operated on. This is a feature, as it forces type stability.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.NoStats","page":"API","title":"Rimu.NoStats","text":"NoStats(N=1) <: ReplicaStrategy{N}\n\nThe default ReplicaStrategy. N replicas are run, but no statistics are collected.\n\nSee also lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCAlgorithm","page":"API","title":"Rimu.PMCAlgorithm","text":"PMCAlgorithm\n\nAbstract type for projector Monte Carlo algorithms.\n\nSee ProjectorMonteCarloProblem, FCIQMC.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PMCSimulation","page":"API","title":"Rimu.PMCSimulation","text":"PMCSimulation\n\nHolds the state and the results of a projector quantum Monte Carlo (PMC) simulation. Is returned by init(::ProjectorMonteCarloProblem) and solved with solve!(::PMCSimulation).\n\nObtain the results of a simulation sm as a DataFrame with DataFrame(sm).\n\nSee also state_vectors, ProjectorMonteCarloProblem, init, solve!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.PostStepStrategy","page":"API","title":"Rimu.PostStepStrategy","text":"PostStepStrategy\n\nSubtypes of PostStepStrategy can be used to perform arbitrary computation on a single state after an FCIQMC step is finished and report the results.\n\nImplemented strategies:\n\nProjectedEnergy\nProjector\nSignCoherence\nWalkerLoneliness\nTimer\n\nNote: A tuple of multiple strategies can be passed to lomc!. In that case, all reported column names must be distinct.\n\nInterface:\n\nA subtype of this type must implement post_step_action(::PostStepStrategy, ::SingleState, step::Int).\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectedEnergy","page":"API","title":"Rimu.ProjectedEnergy","text":"ProjectedEnergy(hamiltonian, projector; hproj=:hproj, vproj=:vproj) <: PostStepStrategy\n\nAfter every step, compute hproj = dot(projector, hamiltonian, dv) and vproj = dot(projector, dv), where dv is the instantaneous coefficient vector.  projector can be an AbstractDVec, or an AbstractProjector.\n\nReports to columns hproj and vproj, which can be used to compute projective energy, e.g. with projected_energy. The keyword arguments hproj and vproj can be used to change the names of these columns. This can be used to make the names unique when computing projected energies with different projectors in the same run.\n\nSee also projected_energy, ratio_of_means, mixed_estimator, and PostStepStrategy.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Projector","page":"API","title":"Rimu.Projector","text":"Projector(name=projector) <: PostStepStrategy\n\nAfter each step, compute dot(projector, dv) and report it in the DataFrame under name. projector can be an AbstractDVec, or an AbstractProjector.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ProjectorMonteCarloProblem","page":"API","title":"Rimu.ProjectorMonteCarloProblem","text":"ProjectorMonteCarloProblem(hamiltonian::AbstractHamiltonian; kwargs...)\n\nDefines a problem to be solved by projector quantum Monte Carlo (QMC) methods, such as the the FCIQMC algorithm.\n\nCommon keyword arguments and defaults:\n\ntime_step = 0.01: Initial time step size.\nlast_step = 100: Controls the number of steps.\ntargetwalkers = 1_000: Target for the 1-norm of the coefficient vector.\nstart_at = starting_address(hamiltonian): Define the initial state vector(s).   An r  s matrix of state vectors can be passed where r is the   number of replicas and s the number of spectral states. See also   default_starting_vector.\nstyle = IsDynamicSemistochastic(): The StochasticStyle of the simulation.\ninitiator = false: Whether to use initiators. Can be true, false, or a valid   InitiatorRule.\nthreading: Default is to use multithreading and/or MPI if available. Set to true to force PDVec for the starting vector, false for serial computation; may be overridden by start_at.\nreporting_strategy = ReportDFAndInfo(): How and when to report results, see ReportingStrategy.\npost_step_strategy = (): Extract observables (e.g. ProjectedEnergy), see PostStepStrategy.\nn_replicas = 1: Number of synchronised independent simulations.\nreplica_strategy = NoStats(n_replicas): Which results to report from replica simulations, see ReplicaStrategy.\n\nExample\n\njulia> hamiltonian = HubbardReal1D(BoseFS(1,2,3));\n\njulia> problem = ProjectorMonteCarloProblem(hamiltonian; targetwalkers = 500, last_step = 100);\n\njulia> simulation = solve(problem);\n\njulia> simulation.success[]\ntrue\n\njulia> size(DataFrame(simulation))\n(100, 10)\n\nFurther keyword arguments:\n\nstarting_step = 1: Starting step of the simulation.\nwalltime = Inf: Maximum time allowed for the simulation.\nsimulation_plan = SimulationPlan(; starting_step, last_step, walltime): Defines the   duration of the simulation. Takes precedence over last_step and walltime.\nζ = 0.08: Damping parameter for the shift update.\nξ = ζ^2/4: Forcing parameter for the shift update.\nshift_strategy = DoubleLogUpdate(; targetwalkers, ζ, ξ): How to update the shift,   see ShiftStrategy.\ntime_step_strategy = ConstantTimeStep(): Adjust time step or not, seeTimeStepStrategy`.\nalgorithm = FCIQMC(; shift_strategy, time_step_strategy): The algorithm to use.   Currenlty only FCIQMC is implemented.\nshift: Initial shift value or collection of shift values. Determined by default from the   Hamiltonian and the starting vectors.\ninitial_shift_parameters: Initial shift parameters or collection of initial shift   parameters. Overrides shift if provided.\nmaxlength = 2 * targetwalkers + 100: Maximum length of the vectors.\ndisplay_name = \"PMCSimulation\": Name displayed in progress bar (via ProgressLogging).\nmetadata: User-supplied metadata to be added to the report. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\nrandom_seed = true: Provide and store a seed for the random number generator. If set to   true, a random seed is generated. If set to number, this number is used as the seed.   The seed is used by solve such that solveing the problem twice will yield identical   results. If set to false, no seed is used and results are not reproducible.\n\nSee also init, solve.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaState","page":"API","title":"Rimu.ReplicaState","text":"ReplicaState <: AbstractMatrix{SingleState}\n\nHolds information about multiple replicas of SpectralStates.\n\nIndexing the ReplicaState state[i, j] returns a SingleState from the ith replica and jth spectral state.\n\nSee also ReplicaStrategy, SpectralState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReplicaStrategy","page":"API","title":"Rimu.ReplicaStrategy","text":"ReplicaStrategy{N}\n\nSupertype for strategies that can be passed to lomc! and control how many replicas are used, and what information is computed and returned. The number of replicas is N.\n\nConcrete implementations\n\nNoStats: run (possibly one) replica(s), but don't report any additional info.\nAllOverlaps: report overlaps between all pairs of replica vectors.\n\nInterface\n\nA subtype of ReplicaStrategy{N} must implement the following function:\n\nRimu.replica_stats - return a tuple of Strings or Symbols of names for replica statistics and a tuple of the values. These will be reported to the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Report","page":"API","title":"Rimu.Report","text":"Report()\nReport(df::DataFrame)\n\nInternal structure that holds the temporary reported values as well as metadata. It can be converted to a DataFrame with DataFrame(report::Report).\n\nSee report!, report_metadata!, get_metadata.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportDFAndInfo","page":"API","title":"Rimu.ReportDFAndInfo","text":"ReportDFAndInfo(; reporting_interval=1, info_interval=100, io=stdout, writeinfo=false) <: ReportingStrategy\n\nThe default ReportingStrategy. Report every reporting_intervalth step to a DataFrame and write info message to io every info_intervalth reported step (unless writeinfo == false). The flag writeinfo is useful for controlling info messages in MPI codes, e.g. by setting writeinfo =is_mpi_root().\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportToFile","page":"API","title":"Rimu.ReportToFile","text":"ReportToFile(; kwargs...) <: ReportingStrategy\n\nReportingStrategy that writes the report directly to a file in the Arrow format. Useful when dealing with long jobs or large numbers of replicas, when the report can incur a significant memory cost.\n\nThe arrow file can be read back in with load_df(filename) or using Arrow; Arrow.Table(filename).\n\nKeyword arguments\n\nfilename = \"out.arrow\": the file to report to. If the file already exists, a new file is created.\nreporting_interval = 1: interval between simulation steps that are reported.\nchunk_size = 1000: the size of each chunk that is written to the file. A DataFrame of this size is collected in memory and written to disk. When saving, an info message is also printed to io.\nsave_if =is_mpi_root(): if this value is true, save the report, otherwise ignore it.\nreturn_df = false: if this value is true, read the file and return the data frame at the end of computation. Otherwise, an empty DataFrame is returned.\nio = stdout: The IO to print messages to. Set to devnull if you don't want to see messages printed out.\ncompress = :zstd: compression algorithm to use. Can be :zstd, :lz4 or nothing.\n\nSee also load_df and save_df.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ReportingStrategy","page":"API","title":"Rimu.ReportingStrategy","text":"ReportingStrategy\n\nAbstract type for strategies for reporting data in a DataFrame with report!().\n\nImplemented strategies:\n\nReportDFAndInfo\nReportToFile\n\nInterface:\n\nA ReportingStrategy can define any of the following:\n\nrefine_reporting_strategy\nreport!\nreport_after_step!\nfinalize_report!\nreporting_interval\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.RunTillLastStep","page":"API","title":"Rimu.RunTillLastStep","text":"RunTillLastStep(step::Int = 0 # number of current/starting timestep\n             laststep::Int = 100 # number of final timestep\n             shiftMode::Bool = false # whether to adjust shift\n             shift = 0.0 # starting/current value of shift\n             dτ::Float64 = 0.01 # current value of time step\n) <: FciqmcRunStrategy\n\nParameters for running lomc!() for a fixed number of time steps. For alternative strategies, see FciqmcRunStrategy.\n\nwarning: Warning\nThe use of this strategy is deprecated. Pass the relevant arguments directly to ProjectorMonteCarloProblem or to lomc!() instead.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.ShiftStrategy","page":"API","title":"Rimu.ShiftStrategy","text":"ShiftStrategy\n\nAbstract type for defining the strategy for controlling the norm, potentially by updating the shift. Passed as a parameter to lomc!.\n\nImplemented strategies:\n\nDontUpdate\nDoubleLogUpdate - default in lomc!()\nLogUpdate\nLogUpdateAfterTargetWalkers - FCIQMC standard\nDoubleLogUpdateAfterTargetWalkers\n\nExtended help\n\nInternally To implement a custom strategy, define a new subtype of Rimu.ShiftStrategy and implement methods for:\n\nRimu.update_shift_parameters! - to update the shift_parameters\nRimu.initialise_shift_parameters - (optional) to initialise and construct a   custom implementation of the shift_parameters. The default implementation is   Rimu.DefaultShiftParameters.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SignCoherence","page":"API","title":"Rimu.SignCoherence","text":"SignCoherence(reference[; name=:coherence]) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that have the same sign as they do in the reference_dvec. Reports to a column named name, which defaults to coherence.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SimulationPlan","page":"API","title":"Rimu.SimulationPlan","text":"SimulationPlan(; starting_step = 1, last_step = 100, walltime = Inf)\n\nDefines the duration of the simulation. The simulation ends when the last_step is reached or the walltime is exceeded.\n\nSee ProjectorMonteCarloProblem, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleParticleDensity","page":"API","title":"Rimu.SingleParticleDensity","text":"SingleParticleDensity(; save_every=1, component) <: PostStepStrategy\n\nPostStepStrategy  to  compute the diagonal single_particle_density. It records a Tuple with the same eltype as the vector.\n\nComputing the density at every time step can be expensive. This cost can be reduced by setting the save_every argument to a higher value. If the value is set, a vector of zeros is recorded when the saving is skipped.\n\nIf the address type has multiple components, the component argument can be used to compute the density on a per-component basis.\n\nThe density is not normalized, and must be divided by the vector norm(⋅,2) squared.\n\nSee also\n\nsingle_particle_density\nDensityMatrixDiagonal\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SingleState","page":"API","title":"Rimu.SingleState","text":"SingleState(hamiltonian, algorithm, v, wm, pnorm, params, id)\n\nStruct that holds a single state vector and all information needed for an independent run of the algorithm. Can be advanced a step forward with advance!.\n\nSee also SpectralState, SpectralStrategy, ReplicaState, ReplicaStrategy, replica_stats, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralState","page":"API","title":"Rimu.SpectralState","text":"SpectralState <: AbstractVector{SingleState}\n\nHolds one or several SingleStates representing the ground state and excited states of a single replica.\n\nIndexing the SpectralState state[i] returns the ith SingleState.\n\nSee also SpectralStrategy, ReplicaState, SingleState, PMCSimulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.SpectralStrategy","page":"API","title":"Rimu.SpectralStrategy","text":"SpectralStrategy{S}\n\nAbstract type for spectral strategies. The spectral strategy is used to control the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.StateVectors","page":"API","title":"Rimu.StateVectors","text":"StateVectors <: AbstractMatrix{V}\n\nRepresents a matrix of configuration vectors from the state. Construct this object with state_vectors.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.TimeStepStrategy","page":"API","title":"Rimu.TimeStepStrategy","text":"TimeStepStrategy\n\nAbstract type for strategies for updating the time step with update_dτ(). Implemented strategies:\n\nConstantTimeStep\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.Timer","page":"API","title":"Rimu.Timer","text":"Timer <: PostStepStrategy\n\nRecord current time after every step. See Base.Libc.time for information on what time is recorded.\n\n\n\n\n\n","category":"type"},{"location":"API.html#Rimu.WalkerLoneliness","page":"API","title":"Rimu.WalkerLoneliness","text":"WalkerLoneliness(threshold=1) <: PostStepStrategy\n\nAfter each step, compute the proportion of configurations that are occupied by at most threshold walkers. Reports to a column named loneliness.\n\n\n\n\n\n","category":"type"},{"location":"API.html#CommonSolve.init-Tuple{ProjectorMonteCarloProblem}","page":"API","title":"CommonSolve.init","text":"init(problem::ProjectorMonteCarloProblem; copy_vectors=true)::PMCSimulation\n\nInitialise a Rimu.PMCSimulation.\n\nSee also ProjectorMonteCarloProblem, solve!, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.solve","page":"API","title":"CommonSolve.solve","text":"solve(::ProjectorMonteCarloProblem)::PMCSimulation\n\nInitialize and solve a ProjectorMonteCarloProblem until the last step is completed or the walltime limit is reached.\n\nSee also init, solve!, step!, Rimu.PMCSimulation, and solve(::ExactDiagonalizationProblem).\n\n\n\n\n\n","category":"function"},{"location":"API.html#CommonSolve.solve!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.solve!","text":"solve!(sm::PMCSimulation; kwargs...)::PMCSimulation\n\nSolve a Rimu.PMCSimulation until the last step is completed or the walltime limit is reached.\n\nTo continue a previously completed simulation, set a new last_step or walltime using the keyword arguments. Optionally, changes can be made to the replica_strategy, the post_step_strategy, or the reporting_strategy.\n\nOptional keyword arguments:\n\nlast_step = nothing: Set the last step to a new value and continue the simulation.\nwalltime = nothing: Set the allowed walltime to a new value and continue the simulation.\nreset_time = false: Reset the elapsed_time counter and continue the simulation.\nempty_report = false: Empty the report before continuing the simulation.\nreplica_strategy = nothing: Change the replica strategy. Requires the number of replicas   to match the number of replicas in the simulation sm. Implies empty_report = true.\npost_step_strategy = nothing: Change the post-step strategy. Implies   empty_report = true.\nreporting_strategy = nothing: Change the reporting strategy. Implies   empty_report = true.\nmetadata = nothing: Add metadata to the report.\n\nSee also ProjectorMonteCarloProblem, init, solve, step!, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#CommonSolve.step!-Tuple{Rimu.PMCSimulation}","page":"API","title":"CommonSolve.step!","text":"step!(sm::PMCSimulation)::PMCSimulation\n\nAdvance the simulation by one step.\n\nCalling solve! will advance the simulation until the last step or the walltime is exceeded. When completing the simulation without calling solve!, the simulation report needs to be finalised by calling Rimu.finalize_report!.\n\nSee also ProjectorMonteCarloProblem, init, solve!, solve, Rimu.PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu._n_walkers-Tuple{Any, Any}","page":"API","title":"Rimu._n_walkers","text":"_n_walkers(v, shift_strategy)\n\nReturns an estimate of the expected number of walkers as an integer.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.advance!-Tuple{FCIQMC, Any, Rimu.ReplicaState, Rimu.SingleState}","page":"API","title":"Rimu.advance!","text":"advance!(algorithm::PMCAlgorithm, report::Report, state::ReplicaState, s_state::SingleState)\n\nAdvance the s_state by one step according to the algorithm. The state is used only to access the various strategies involved. Steps, stats, and computed quantities are written to the report.\n\nReturns true if the step was successful and calculation should proceed, false when it should terminate.\n\nSee also solve!, step!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.all_overlaps-Union{Tuple{B}, Tuple{N}, Tuple{Tuple, Tuple{Vararg{AbstractDVec, N}}, Any, Val{B}}} where {N, B}","page":"API","title":"Rimu.all_overlaps","text":"all_overlaps(operators, vectors, working_memories, vecnorm=true)\n\nGet all overlaps between vectors and operators. This function is overloaded for MPIData. The flag vecnorm can disable the vector-vector overlap c{i}_dot_c{j}.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.check_transform-Tuple{AllOverlaps, AbstractHamiltonian}","page":"API","title":"Rimu.check_transform","text":"check_transform(r::AllOverlaps, ham)\n\nCheck that the transformation provided to r::AllOverlaps matches the given Hamiltonian ham. Used as a sanity check before starting main lomc! loop.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.clean_and_warn_if_others_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.clean_and_warn_if_others_present","text":"clean_and_warn_if_others_present(nt::NamedTuple{names}, keys) where {names}\n\nRemove keys from a NamedTuple that are not in keys and issue a warning if they are present.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_logger-Tuple","page":"API","title":"Rimu.default_logger","text":"default_logger(args...)\n\nReset the global_logger to Logging.ConsoleLogger. Undoes the effect of smart_logger. Arguments are passed on to Logging.ConsoleLogger.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.default_starting_vector-Tuple{AbstractHamiltonian}","page":"API","title":"Rimu.default_starting_vector","text":"default_starting_vector(hamiltonian::AbstractHamiltonian; kwargs...)\ndefault_starting_vector(\n    address=starting_address(hamiltonian);\n    style=IsDynamicSemistochastic(),\n    initiator=NonInitiator(),\n    threading=nothing,\n    population=10\n)\n\nReturn a default starting vector for ProjectorMonteCarloProblem. The default choice for the starting vector is\n\nv = PDVec(address => population; style, initiator)\n\nif threading is available, or otherwise\n\nv = DVec(address => population; style)\n\nif initiator == NonInitiator(), and\n\nv = InitiatorDVec(address => population; style, initiator)\n\nif not. See PDVec, DVec, InitiatorDVec, StochasticStyle, and InitiatorRule.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.delete_and_warn_if_present-Union{Tuple{names}, Tuple{NamedTuple{names}, Any}} where names","page":"API","title":"Rimu.delete_and_warn_if_present","text":"delete_and_warn_if_present(nt::NamedTuple, keys)\n\nDelete keys from a NamedTuple and issue a warning if they are present. This is useful for removing unused keyword arguments.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.finalize_report!-Tuple{ReportingStrategy, Any}","page":"API","title":"Rimu.finalize_report!","text":"finalize_report!(::ReportingStrategy, report)\n\nFinalize the report. This function is called after all steps in lomc! have finished.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.get_metadata-Tuple{Rimu.Report, Any}","page":"API","title":"Rimu.get_metadata","text":"get_metadata(report::Report, key)\n\nGet metadata key from report. key is converted to a String.\n\nSee also report_metadata!, Report, report!.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.initialise_shift_parameters","page":"API","title":"Rimu.initialise_shift_parameters","text":"initialise_shift_parameters(s::ShiftStrategy, shift, norm, time_step, counter=0, shift_mode=false)\n\nInitiatlise a struct to store the shift parameters.\n\nSee ShiftStrategy, update_shift_parameters!, DefaultShiftParameters.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.lomc!-Tuple{Any, Any}","page":"API","title":"Rimu.lomc!","text":"lomc!(ham::AbstractHamiltonian, [v]; kwargs...) -> df, state\nlomc!(state::ReplicaState, [df]; kwargs...) -> df, state\n\nLinear operator Monte Carlo: Perform a projector quantum Monte Carlo simulation for determining the lowest eigenvalue of ham. The details of the simulation are controlled by the optional keyword arguments and by the type of the optional starting vector v. Alternatively, a ReplicaState can be passed in to continue a previous simulation.\n\nCommon keyword arguments and defaults:\n\nlaststep = 100 - controls the number of steps.\ndτ = 0.01 - time step.\ntargetwalkers = 1000 - target for the 1-norm of the coefficient vector.\naddress = starting_address(ham) - set starting address for default v and shift.\nstyle = IsStochasticInteger() - set StochasticStyle for default v; unused if v is specified.\ninitiator = NonInitiator() - set InitiatorRule for default v; unused if v is specified.\nthreading - default is to use multithreading and MPI if multiple threads are available. Set to true to force PDVec for the starting vector, false for serial computation; unused if v is specified.\nshift = diagonal_element(ham, address) - initial value of shift.\npost_step_strategy::NTuple{N,<:PostStepStrategy} = () - extract observables (e.g. ProjectedEnergy), see PostStepStrategy. (Deprecated: post_step is accepted as an alias for post_step_strategy.)\nreplica_strategy::ReplicaStrategy = NoStats(1) - run several synchronised simulations, see ReplicaStrategy. (Deprecated: replica is accepted as an alias for replica_strategy.)\nreporting_strategy::ReportingStrategy = ReportDFAndInfo() - how and when to report results, see ReportingStrategy. (Deprecated: r_strat is accepted as an alias for reporting_strategy.)\nname = \"lomc!\" - name displayed in progress bar (via ProgressLogging)\nmetadata - user-supplied metadata to be added to the report df. Must be an iterable of pairs or a NamedTuple, e.g. metadata = (\"key1\" => \"value1\", \"key2\" => \"value2\"). All metadata is converted to strings.\n\nSome metadata is automatically added to the report df including Rimu.PACKAGE_VERSION and data from state.\n\nReturn values\n\nlomc! returns a named tuple with the following fields:\n\ndf: a DataFrame with all statistics being reported.\nstate: a ReplicaState that can be used for continuations.\n\nExample\n\njulia> add = BoseFS(1,2,3);\n\njulia> hamiltonian = HubbardReal1D(add);\n\njulia> df1, state = lomc!(hamiltonian; targetwalkers=500, laststep=100);\n\njulia> df2, _ = lomc!(state, df1; laststep=200, metadata=(;info=\"cont\")); # Continuation run\n\njulia> size(df1)\n(100, 10)\n\njulia> size(df2)\n(200, 10)\n\njulia> using DataFrames; metadata(df2, \"info\") # retrieve custom metadata\n\"cont\"\n\njulia> metadata(df2, \"hamiltonian\") # some metadata is automatically added\n\"HubbardReal1D(BoseFS{6,3}(1, 2, 3); u=1.0, t=1.0)\"\n\nFurther keyword arguments and defaults:\n\nτ_strat::TimeStepStrategy = ConstantTimeStep() - adjust time step or not, see TimeStepStrategy\ns_strat::ShiftStrategy = DoubleLogUpdate(; targetwalkers, ζ = 0.08, ξ = ζ^2/4) - how to update the shift, see ShiftStrategy.\nmaxlength = 2 * s_strat.targetwalkers + 100 - upper limit on the length of v; when reached, lomc! will abort\nwm - working memory for re-use in subsequent calculations; is mutated.\ndf = DataFrame() - when called with AbstractHamiltonian argument, a DataFrame can be passed for merging with the report df.\n\nThe default choice for the starting vector is v = default_starting_vector(; address, style, threading, initiator). See default_starting_vector, PDVec, DVec, StochasticStyle, and InitiatorRule.\n\nwarning: Warning\nThe use of this lomc! is deprecated. Use ProjectorMonteCarloProblem and solve instead.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_replicas-Union{Tuple{ReplicaStrategy{N}}, Tuple{N}} where N","page":"API","title":"Rimu.num_replicas","text":"num_replicas(state_or_strategy)\n\nReturn the number of replicas used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.num_spectral_states-Union{Tuple{Rimu.SpectralStrategy{S}}, Tuple{S}} where S","page":"API","title":"Rimu.num_spectral_states","text":"num_spectral_states(state_or_strategy)\n\nReturn the number of spectral states used in the simulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.post_step_action","page":"API","title":"Rimu.post_step_action","text":"post_step_action(::PostStepStrategy, ::SingleState, step) -> kvpairs\n\nCompute statistics after FCIQMC step. Should return a tuple of :key => value pairs. This function is only called every reporting_interval steps, as defined by the ReportingStrategy.\n\nSee also PostStepStrategy, ReportingStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.refine_reporting_strategy-Tuple{ReportingStrategy}","page":"API","title":"Rimu.refine_reporting_strategy","text":"refine_reporting_strategy(reporting_strategy::ReportingStrategy) -> reporting_strategy\n\nInitialize the reporting strategy. This can be used to set up filenames or other attributes that need to be unique for a run of FCIQMC.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replace_keys-Tuple{NamedTuple, Any}","page":"API","title":"Rimu.replace_keys","text":"replace_keys(nt::NamedTuple, (:old1 => :new1, :old2 => :new2, ...))\n\nReplace keys in a NamedTuple with new keys. This is useful for renaming fields in a NamedTuple. Ignores keys that are not present in the NamedTuple.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.replica_stats","page":"API","title":"Rimu.replica_stats","text":"replica_stats(RS::ReplicaStrategy{N}, spectral_states::NTuple{N,SingleState}) -> (names, values)\n\nReturn the names and values of statistics related to N replica states consistent with the ReplicaStrategy RS. names should be a tuple of Symbols or Strings and values should be a tuple of the same length. This function will be called every reporting_interval steps from lomc!, or once per time step if reporting_interval is not defined.\n\nPart of the ReplicaStrategy interface. See also SingleState.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Rimu.report!-Tuple{ReportingStrategy, Any, Vararg{Any}}","page":"API","title":"Rimu.report!","text":" report!(::ReportingStrategy, step, report::Report, keys, values, id=\"\")\n report!(::ReportingStrategy, step, report::Report, nt, id=\"\")\n\nReport keys and values to report, which will be converted to a DataFrame before lomc! exits. Alternatively, a nt::NamedTuple can be passed in place of keys and values. If id is specified, it is appended to all keys. This is used to differentiate between values reported by different replicas.\n\nTo overload this function for a new ReportingStrategy, overload report!(::ReportingStrategy, step, args...) and apply the report by calling report!(args...).\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, DataFrame}","page":"API","title":"Rimu.report!","text":"report!(report::Report, df::DataFrame)\n\nConvert the DataFrame df to a Report. This function does not copy the data.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report!-Tuple{Rimu.Report, Union{AbstractString, Symbol}, Any}","page":"API","title":"Rimu.report!","text":"report!(report, keys, values, id=\"\")\nreport!(report, pairs, id=\"\")\n\nWrite keys, values pairs to report that will be converted to a DataFrame later. Alternatively, a named tuple or a collection of pairs can be passed instead of keys and values.\n\nThe value of id is appended to the name of the column, e.g. report!(report, :key, value, :_1) will report value to a column named :key_1.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_after_step!-Tuple{ReportingStrategy, Any, Any, Vararg{Any}}","page":"API","title":"Rimu.report_after_step!","text":"report_after_step!(::ReportingStrategy, step, report, state) -> report\n\nThis function is called at the very end of a step, after reporting_interval steps. It may modify the report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.report_metadata!-Tuple{Rimu.Report, Any, Any}","page":"API","title":"Rimu.report_metadata!","text":"report_metadata!(report::Report, key, value)\nreport_metadata!(report::Report, kvpairs)\n\nSet metadata key to value in report. key and value are converted to Strings. Alternatively, an iterable of key-value pairs or a NamedTuple can be passed.\n\nSee also get_metadata, report!, Report.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.reporting_interval-Tuple{ReportingStrategy}","page":"API","title":"Rimu.reporting_interval","text":"reporting_interval(::ReportingStrategy)\n\nGet the interval between steps for which non-essential statistics are reported. Defaults to 1 if chosen ReportingStrategy does not specify an interval.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.set_up_initial_shift_parameters-Union{Tuple{R}, Tuple{S}, Tuple{FCIQMC, Any, StaticArraysCore.SMatrix{S, R}, Any, Any}} where {S, R}","page":"API","title":"Rimu.set_up_initial_shift_parameters","text":"set_up_initial_shift_parameters(\n    algorithm::FCIQMC, hamiltonian, starting_vectors, shift, time_step, initial_shift_parameters\n)\n\nSet up the initial shift parameters for the FCIQMC algorithm.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.single_particle_density-Tuple{Any}","page":"API","title":"Rimu.single_particle_density","text":"single_particle_density(dvec; component)\nsingle_particle_density(add; component)\n\nCompute the diagonal single particle density of vector dvec or address add. If the component argument is given, only that component of the addresses is taken into account. The result is always normalized so that sum(result) ≈ num_particles(address).\n\nExamples\n\njulia> v = DVec(fs\"|⋅↑⇅↓⋅⟩\" => 1.0, fs\"|↓↓⋅↑↑⟩\" => 0.5)\nDVec{FermiFS2C{2, 2, 5, 4, FermiFS{2, 5, BitString{5, 1, UInt8}}, FermiFS{2, 5, BitString{5, 1, UInt8}}},Float64} with 2 entries, style = IsDeterministic{Float64}()\n  fs\"|↓↓⋅↑↑⟩\" => 0.5\n  fs\"|⋅↑⇅↓⋅⟩\" => 1.0\n\njulia> single_particle_density(v)\n(0.2, 1.0, 1.6, 1.0, 0.2)\n\njulia> single_particle_density(v; component=1)\n(0.0, 1.6, 1.6, 0.4, 0.4)\n\nSee also\n\nSingleParticleDensity\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.smart_logger-Tuple","page":"API","title":"Rimu.smart_logger","text":"smart_logger(args...)\n\nEnable terminal progress bar during interactive use (i.e. unless running on CI or HPC). Arguments are passed on to the logger. This is run once during Rimu startup. Undo with default_logger or by setting Base.global_logger().\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.state_vectors-Tuple{R} where R<:Rimu.ReplicaState","page":"API","title":"Rimu.state_vectors","text":"state_vectors(state::ReplicaState)\nstate_vectors(sim::PMCSimulation)\n\nReturn an AbstractMatrix of configuration vectors from the state. The vectors can be accessed by indexing the resulting collection, where the row index corresponds to the replica index and the column index corresponds to the spectral state index.\n\nSee also SingleState, ReplicaState, SpectralState, PMCSimulation.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_dτ-Tuple{ConstantTimeStep, Any, Vararg{Any}}","page":"API","title":"Rimu.update_dτ","text":"update_dτ(s<:TimeStepStrategy, dτ, tnorm) -> new dτ\n\nUpdate the time step according to the strategy s.\n\n\n\n\n\n","category":"method"},{"location":"API.html#Rimu.update_shift_parameters!","page":"API","title":"Rimu.update_shift_parameters!","text":"update_shift_parameters!(\n    s <: ShiftStrategy,\n    shift_parameters,\n    tnorm,\n    v_new,\n    v_old,\n    step,\n    report\n) -> shift_stats, proceed\n\nUpdate the shift_parameters according to strategy s. See ShiftStrategy. Returns a named tuple of the shift statistics and a boolean proceed indicating whether the simulation should proceed.\n\nSee initialise_shift_parameters, ShiftStrategy.\n\n\n\n\n\n","category":"function"},{"location":"API.html#Reexported-Submodules","page":"API","title":"Reexported Submodules","text":"","category":"section"},{"location":"API.html#ExactDiagonalization","page":"API","title":"ExactDiagonalization","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Exact Diagonalization","category":"page"},{"location":"API.html#Interfaces","page":"API","title":"Interfaces","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Interfaces","category":"page"},{"location":"API.html#StochasticStyles","page":"API","title":"StochasticStyles","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StochasticStyles","category":"page"},{"location":"API.html#Hamiltonians","page":"API","title":"Hamiltonians","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module Hamiltonians","category":"page"},{"location":"API.html#BitStringAddresses","page":"API","title":"BitStringAddresses","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module BitStringAddresses","category":"page"},{"location":"API.html#DictVectors","page":"API","title":"DictVectors","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module DictVectors","category":"page"},{"location":"API.html#StatsTools","page":"API","title":"StatsTools","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module StatsTools","category":"page"},{"location":"API.html#RMPI","page":"API","title":"RMPI","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"See Module RMPI","category":"page"},{"location":"API.html#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"API.html","page":"API","title":"API","text":"","category":"page"},{"location":"stochasticstyles.html#Module-StochasticStyles","page":"Stochastic styles","title":"Module StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyles","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles","page":"Stochastic styles","title":"Rimu.StochasticStyles","text":"This module provides concrete implementations of StochasticStyles, which specify the algorithm used by lomc! when performing stochastic matrix-vector multiplication.\n\nImplemented stochastic styles:\n\nStochasticStyle: abstract type for stochastic styles\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nThe offdiagonal spawning is defined in spawning.jl and is controlled by setting a SpawningStrategy.\n\nThe vector compression strategies are defined in compression.jl and are controlled by setting a CompressionStrategy.\n\n\n\n\n\n","category":"module"},{"location":"stochasticstyles.html#Available-StochasticStyles","page":"Stochastic styles","title":"Available StochasticStyles","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StyleUnknown","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StyleUnknown","page":"Stochastic styles","title":"Rimu.Interfaces.StyleUnknown","text":"StyleUnknown{T}() <: StochasticStyle\n\nTrait for value types not (currently) compatible with FCIQMC. This style makes it possible to construct dict vectors with unsupported valtypes.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"styles.jl\"]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDeterministic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDeterministic","text":"IsDeterministic{T=Float64}(compression=NoCompression()) <: StochasticStyle{T}\n\nPropagate with deterministic vector matrix multiplications. Stochastic compression of the resultant vector (after annihilations) can be triggered by setting the optional compression argument to a relevant CompressionStrategy.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsDynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsDynamicSemistochastic","text":"IsDynamicSemistochastic{T=Float64}(; kwargs...) <: StochasticStyle{T}\n\nQMC propagation with floating-point walker numbers and reduced noise. All possible spawns (offdiagonal elements in vector-matrix multiplication) are performed deterministically when number of walkers in a configuration is high, as controlled by the rel_spawning_threshold and abs_spawning_threshold keywords. Stochastic selection of spawns is controlled by the spawning keyword.\n\nBy default, a stochastic vector compression is applied after annihilations are completed. This behaviour can be changed to on-the-fly projection (as in IsStochasticInteger or IsStochasticWithThreshold) by setting late_compression=false, or modifying spawning and compression. See parameters below for a more detailed explanation.\n\nParameters:\n\nthreshold = 1.0: Values below this number are stochastically projected to this value or zero. See also ThresholdCompression.\nlate_compression = true: If this is set to true, stochastic vector compression is performed after all the spawns are performed. If it is set to false, values are stochastically projected as they are being spawned. late_compression=true is equivalent to setting compression=ThresholdCompression(threshold) and spawning=WithReplacement().  late_compression=false is equivalent to compression=NoCompression() and spawning=WithReplacement(threshold).\nrel_spawning_threshold = 1.0: If the walker number on a configuration times this threshold is greater than the number of offdiagonals, spawning is done deterministically. Should be set to 1 or more for best performance.\nabs_spawning_threshold = Inf: If the walker number on a configuration is greater than this value, spawning is done deterministically. Can be set to e.g.  abs_spawning_threshold = 0.1 * target_walkers.\nspawning = WithReplacement(): SpawningStrategy to use for the non-exact spawns.\ncompression = ThresholdCompression(threshold): CompressionStrategy used to compress the vector after a step. Overrides threshold.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochastic2Pop","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochastic2Pop","text":"IsStochastic2Pop{T=Complex{Int}}() <: StochasticStyle{T}\n\nStochastic propagation with complex walker numbers representing two populations of integer walkers.\n\nWhen using this style, make sure to set a complex number as target walkers in the ShiftStrategy!\n\nThis style is experimental.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticInteger","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticInteger","text":"IsStochasticInteger{T=Int}() <: StochasticStyle{T}\n\nFCIQMC algorithm with integer walkers as in Booth et al. (2009). During the vector matrix product each individual diagonal and spawning step is rounded stochastically to a nearby integer value.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.IsStochasticWithThreshold","page":"Stochastic styles","title":"Rimu.StochasticStyles.IsStochasticWithThreshold","text":"IsStochasticWithThreshold{T=Float64}(threshold=1.0) <: StochasticStyle{T}\n\nStochastic propagation with floating point walker numbers. During the vector matrix product each individual diagonal and spawning result is rounded stochastically if smaller than threshold (before annihilations). For a more customizable stochastic style, see IsDynamicSemistochastic.\n\nSee also StochasticStyle.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#The-StochasticStyle-interface","page":"Stochastic styles","title":"The StochasticStyle interface","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"StochasticStyle\nstep_stats\napply_column!\ndefault_style","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.StochasticStyle","page":"Stochastic styles","title":"Rimu.Interfaces.StochasticStyle","text":"StochasticStyle(v)\n\nAbstract type. When called as a function it returns the native style of the generalised vector v that determines how simulations are to proceed.\n\nUsage\n\nConcrete StochasticStyles can be used for the style keyword argument of lomc!, DVec and PDVec. The following styles are available:\n\nIsStochasticInteger\nIsDeterministic\nIsStochasticWithThreshold\nIsDynamicSemistochastic\nStyleUnknown\n\nExtended Help\n\nInterface\n\nWhen defining a new StochasticStyle, subtype it as MyStyle<:StochasticStyle{T} where T is the concrete value type the style is designed to work with.\n\nFor it to work with lomc!, a StochasticStyle must define the following:\n\napply_column!(::StochasticStyle, w, H, address, value)\nstep_stats(::StochasticStyle)\n\nand optionally\n\nCompressionStrategy(::StochasticStyle) for vector compression after annihilations,\n\nSee also StochasticStyles, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.step_stats","page":"Stochastic styles","title":"Rimu.Interfaces.step_stats","text":"step_stats(::StochasticStyle)\nstep_stats(::CompressionStrategy)\n\nReturn a tuple of stat names (Symbol or String) and a tuple of zeros of the same length. These will be reported as columns in the DataFrame returned by lomc!.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.apply_column!","page":"Stochastic styles","title":"Rimu.Interfaces.apply_column!","text":"apply_column!(v, op, addr, num, boost=1) -> stats::Tuple\n\nApply the product of column addr of the operator op and the scalar num to the vector v according to the StochasticStyle of v. By expectation value this should be equivalent to\n\nv .+= op[:, add] .* num\n\nThis is used to perform the spawning step in FCIQMC and to implement operator-vector multiplications. Mutates v and reports spawning statistics.\n\nThe boost argument multiplicatively increases the number of spawns to be performed without affecting the expectation value of the procedure.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.Interfaces.default_style","page":"Stochastic styles","title":"Rimu.Interfaces.default_style","text":"default_style(::Type)\n\nPick a StochasticStyle based on the value type. Returns StyleUnknown if no known default style is set.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Compression-strategies","page":"Stochastic styles","title":"Compression strategies","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"CompressionStrategy\nNoCompression\nStochasticStyles.ThresholdCompression\ncompress!","category":"page"},{"location":"stochasticstyles.html#Rimu.Interfaces.CompressionStrategy","page":"Stochastic styles","title":"Rimu.Interfaces.CompressionStrategy","text":"CompressionStrategy\n\nThe CompressionStrategy controls how a vector is compressed after a step.\n\nDefault implementation:\n\nNoCompression: no vector compression\n\nUsage\n\nA subtype of CompressionStrategy can be passed as a keyword argument to the constructors for some StochasticStyles. Calling CompressionStrategy(s::StochasticStyle) returns a relevant subtype. The default is NoCompression.\n\nInterface\n\nWhen defining a new CompressionStrategy, subtype it as MyCompressionStrategy <: CompressionStrategy and define these methods:\n\ncompress!(s::CompressionStrategy, v)\ncompress!(s::CompressionStrategy, w, v)\nstep_stats(s::CompressionStrategy)\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.NoCompression","page":"Stochastic styles","title":"Rimu.Interfaces.NoCompression","text":"NoCompression <: CompressionStrategy end\n\nDefault CompressionStrategy. Leaves the vector intact.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.ThresholdCompression","page":"Stochastic styles","title":"Rimu.StochasticStyles.ThresholdCompression","text":"ThresholdCompression(threshold=1) <: CompressionStrategy\n\nCompressionStrategy that compresses a vector by threshold projection. Every entry in the vector with a value below the threshold is either set to zero, or increased to the threshold. The probabilty of setting it to zero is equal to abs(value) / threshold.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.Interfaces.compress!","page":"Stochastic styles","title":"Rimu.Interfaces.compress!","text":"compress!([::CompressionStrategy,] v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\ncompress!([::CompressionStrategy,] w, v) -> ::NTuple{N,::Symbol}, ::NTuple{N}\n\nCompress the vector v. The one-argument version compresses the vector in-place. The two-argument vector stores the result in w. The CompressionStrategy associated with the StochasticStyle of v is used to determine the type of compression.\n\nReturns two tuples, containing the names and values of statistics that are to be reported.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Spawning-strategies-and-convenience-functions","page":"Stochastic styles","title":"Spawning strategies and convenience functions","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"The following functions and types are unexported, but are useful when defining new styles.","category":"page"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Modules = [StochasticStyles]\nPages = [\"spawning.jl\"]\nOrder = [:function,:method,:type]","category":"page"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.diagonal_step!","page":"Stochastic styles","title":"Rimu.StochasticStyles.diagonal_step!","text":"diagonal_step!(w, op, add, val, threshold=0) -> (clones, deaths, zombies)\n\nPerform diagonal step on a walker add => val. Optional argument threshold sets the projection threshold. If eltype(w) is an Integer, the val is rounded to the nearest integer stochastically.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.projected_deposit!","page":"Stochastic styles","title":"Rimu.StochasticStyles.projected_deposit!","text":"projected_deposit!(w, add, val, parent, threshold=0)\n\nLike deposit!, but performs threshold projection before spawning. If eltype(w) is an Integer, values are stochastically rounded.\n\nReturns the value deposited.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.spawn!","page":"Stochastic styles","title":"Rimu.StochasticStyles.spawn!","text":"spawn!(s::SpawningStrategy, w, op::AbstractHamiltonian, add, val, boost)\nspawn!(s::SpawningStrategy, w, offdiags::AbstractOffdiagonals, add, val, boost)\n\nPerform stochastic spawns to w from address add with val walkers. val * boost controls the number of spawns performed.\n\nThis function should be overloaded in the second form, with offdiags as an argument.\n\nSee SpawningStrategy.\n\n\n\n\n\n","category":"function"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Bernoulli","page":"Stochastic styles","title":"Rimu.StochasticStyles.Bernoulli","text":"Bernoulli(threshold=0.0) <: SpawningStrategy\n\nPerform Bernoulli sampling. A spawn is attempted on each offdiagonal element with a probability that results in an expected number of spawns equal to the number of walkers on the spawning configuration. This is significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.DynamicSemistochastic","page":"Stochastic styles","title":"Rimu.StochasticStyles.DynamicSemistochastic","text":"DynamicSemistochastic(; strat, rel_threshold, abs_threshold) <: SpawningStrategy\n\nSpawningStrategy that behaves like strat when the number of walkers is low, but performs exact steps when it is high. What \"high\" means is controlled by the two thresholds described below.\n\nParameters\n\nstrat = WithReplacement(): a SpawningStrategy to use when the multiplication is not performed exactly. If the strat has a threshold different from zero, all spawns will be projected to that threshold.\nrel_threshold = 1.0: When deciding on whether to perform an exact spawn, this value is multiplied to the number of walkers. Should be set to 1 or more for best performance. This threshold is affected by the boost argument to spawn!.\nabs_threshold = Inf: When deciding on whether to perform an exact spawn, min(abs_threshold, num_offdiagonals) is used. This threshold is not affected by the boost argument to spawn!.\n\nSee e.g. WithoutReplacement for a description of the strat.threshold parameter.\n\nspawn! with this strategy returns the numbers of exact and inexact spawns, the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.Exact","page":"Stochastic styles","title":"Rimu.StochasticStyles.Exact","text":"Exact(threshold=0.0) <: SpawningStrategy\n\nPerform an exact spawning step.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SingleSpawn","page":"Stochastic styles","title":"Rimu.StochasticStyles.SingleSpawn","text":"SingleSpawn(threshold=0.0) <: SpawningStrategy\n\nPerform a single spawn. Useful as a building block for other stochastic styles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts (always 1) and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.SpawningStrategy","page":"Stochastic styles","title":"Rimu.StochasticStyles.SpawningStrategy","text":"SpawningStrategy\n\nA SpawningStrategy is used to control how spawns (multiplies with off-diagonal part of the column vector) are performed and can be passed to some of the StochasticStyles as keyword arguments.\n\nThe following concrete implementations are provided:\n\nExact: Perform exact spawns. Used by IsDeterministic.\nWithReplacement: The default stochastic spawning strategy. Spawns are chosen with replacement.\nDynamicSemistochastic: Behave like Exact when the number of spawns performed is high, and like a different substrategy otherwise. Used by IsDynamicSemistochastic.\nSingleSpawn: Perform a single spawn only. Used as a building block for other strategies.\nWithoutReplacement: Similar to WithReplacement, but ensures each spawn is only performed once. Only to be used as a substrategy of DynamicSemistochastic.\nBernoulli: Each spawn is attempted with a fixed probability. Only to be used as a substrategy of DynamicSemistochastic.\n\nInterface\n\nIn order to implement a new SpawningStrategy, define a method for spawn!.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithReplacement","text":"WithReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled with replacement. This is the default spawning strategy for most of the StochasticStyles.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Rimu.StochasticStyles.WithoutReplacement","page":"Stochastic styles","title":"Rimu.StochasticStyles.WithoutReplacement","text":"WithoutReplacement(threshold=0.0) <: SpawningStrategy\n\nSpawningStrategy where spawn targets are sampled without replacement. This strategy needs to allocate a temporary array during spawning, which makes it significantly less efficient than WithReplacement.\n\nIf the number of spawn attempts is greater than the number of offdiagonals, this functions like Exact, but is less efficient. For best performance, this strategy is to be used as a substrategy of DynamicSemistochastic.\n\nParameters\n\nthreshold sets the projection threshold. If set to zero, no projection is performed.\n\nspawn! with this strategy returns the number of spawn attempts and the number of spawns.\n\n\n\n\n\n","category":"type"},{"location":"stochasticstyles.html#Index","page":"Stochastic styles","title":"Index","text":"","category":"section"},{"location":"stochasticstyles.html","page":"Stochastic styles","title":"Stochastic styles","text":"Pages   = [\"stochasticstyles.md\"]","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"EditURL = \"../../../scripts/BHM-example-mpi.jl\"","category":"page"},{"location":"generated/BHM-example-mpi.html#Example-2:-Rimu-with-MPI","page":"Rimu with MPI","title":"Example 2: Rimu with MPI","text":"","category":"section"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"In this example, we will demonstrate using Rimu with MPI.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"A runnable script for this example is located here. Run it with mpirun julia BHM-example-mpi.jl.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We start by importing Rimu and Rimu.RMPI, which contains MPI-related functionality.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"using Rimu\nusing Rimu.RMPI","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Note that it is not necessary to initialise the MPI library, as this is already done automatically when Rimu is loaded.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will compute the ground state of a Bose-Hubbard model in momentum space with 10 particles in 10 sites.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"First, we define the Hamiltonian. We want to start from an address with zero momentum.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"address = BoseFS(10, 5 => 10)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We will set the interaction strength u to 6.0. The hopping strength t defaults to 1.0.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"H = HubbardMom1D(address; u=6.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Next, we construct the starting vector. We use a PDVec, which is automatically MPI-distributed if MPI is available. We set the vector's stochastic style to IsDynamicSemistochastic, which improves statistics and reduces the sign problem.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"initial_vector = PDVec(address => 1.0; style=IsDynamicSemistochastic())","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"1-element PDVec: style = IsDynamicSemistochastic{Float64,ThresholdCompression,DynamicSemistochastic}()\n  fs\"|0 0 0 0 10 0 0 0 0 0⟩\" => 1.0","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"We set a reporting strategy. We will use ReportToFile, which writes the reports directly to a file. This is useful for reducing memory use in long-running jobs, as we don't need to keep the results in memory. It also allows us to inspect the results before the computation finishes and recover some data if it fails. Setting save_if=is_mpi_root() will ensure only the root MPI rank will write to the file. The chunk_size parameter determines how often the data is saved to the file. Progress messages are suppressed with io=devnull.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"reporting_strategy = ReportToFile(\n    filename=\"result.arrow\",\n    save_if=is_mpi_root(),\n    reporting_interval=1,\n    chunk_size=1000,\n    io=devnull\n)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ReportToFile{Symbol}(\"result.arrow\", 1, 1000, true, false, Base.DevNull(), :zstd, nothing)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Now, we can set other parameters as usual. We will perform the computation with 10_000 walkers. We will also compute the projected energy.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"s_strat = DoubleLogUpdate(targetwalkers=10_000)\npost_step_strategy = ProjectedEnergy(H, initial_vector)","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"ProjectedEnergy{HubbardMom1D{Float64, 10, BoseFS{10, 10, BitString{19, 1, UInt32}}, 6.0, 1.0}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}, Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}}(:vproj, :hproj, HubbardMom1D(BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0); u=6.0, t=1.0), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 1.0],)), Rimu.DictVectors.FrozenPDVec{BoseFS{10, 10, BitString{19, 1, UInt32}}, Float64, 1}(([BoseFS{10,10}(1, 0, 0, 0, 8, 0, 0, 0, 1, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 0, 8, 0, 0, 0, 0, 2) => 4.024922359499621, BoseFS{10,10}(0, 0, 0, 0, 10, 0, 0, 0, 0, 0) => 7.0, BoseFS{10,10}(0, 0, 1, 0, 8, 0, 1, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 0, 0, 1, 8, 1, 0, 0, 0, 0) => 5.692099788303083, BoseFS{10,10}(0, 1, 0, 0, 8, 0, 0, 1, 0, 0) => 5.692099788303083],)))","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"The @mpi_root macro performs an action on the root rank only, which is useful for printing.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"@mpi_root println(\"Running FCIQMC with \", mpi_size(), \" rank(s).\")","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Running FCIQMC with 1 rank(s).\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"Finally, we can run the computation.","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"lomc!(H, initial_vector; reporting_strategy, s_strat, post_step_strategy, dτ=1e-4, laststep=10_000);\n","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"","category":"page"},{"location":"generated/BHM-example-mpi.html","page":"Rimu with MPI","title":"Rimu with MPI","text":"This page was generated using Literate.jl.","category":"page"},{"location":"index.html#Rimu.jl-Package-Guide","page":"Guide","title":"Rimu.jl Package Guide","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Random Integrators for many-body quantum systems","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The grand aim is to develop a toolbox for many-body quantum systems that can be represented by a Hamiltonian in second quantisation language. Currently supported features include:","category":"page"},{"location":"index.html#Interacting-with-quantum-many-body-models","page":"Guide","title":"Interacting with quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Full configuration interaction quantum Monte Carlo (FCIQMC), a flavour of projector quantum Monte Carlo for stochastically solving the time-independent Schrödinger equation. See References.\nMatrix-free exact diagonalisation of quantum Hamiltonians (with external package KrylovKit.jl).\nSparse matrix representation of quantum Hamiltonians for exact diagonalisation with sparse linear algebra package of your choice (fastest for small systems).","category":"page"},{"location":"index.html#Representing-quantum-many-body-models","page":"Guide","title":"Representing quantum many-body models","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"A composable and efficient type system for representing single- and multi-component Fock states of bosons, fermions, and mixtures thereof, to be used as a basis for representing Hamiltonians.\nAn interface for defining many-body Hamiltonians.\nPre-defined models include:\nHubbard model in real space for bosons and fermions and mixtures in 1, 2, and 3 spatial dimensions.\nHubbard and related lattice models in momentum space for bosons and fermions in one spatial dimension.\nTranscorrelated Hamiltonian for contact interactions in one dimension for fermions, as described in Jeszenski et al. arXiv:1806.11268.","category":"page"},{"location":"index.html#Statistical-analysis-of-Monte-Carlo-data","page":"Guide","title":"Statistical analysis of Monte Carlo data","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Blocking analysis following Flyvberg & Peterson JCP (1989), and automated with hypothesis testing by Jonsson","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"PRE (2018).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Unbiased estimators for the ground state energy by re-reweighting following Nightingale & Blöte PRB (1986) and Umrigar et al. JCP (1993).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code supports parallelisation with MPI (harnessing MPI.jl) as well as native Julia threading (experimental). In the future, we may add tools to solve the time-dependent Schrödinger equation and Master equations for open system time evolution.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Concept: Joachim Brand and Elke Pahl.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Contributors: Joachim Brand, Elke Pahl, Mingrui Yang, Matija Čufar, Chris Bradly.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Discussions, help, and additional contributions are acknowledged by Ali Alavi, Didier Adrien, Chris Scott (NeSI), Alexander Pletzer (NeSI).","category":"page"},{"location":"index.html#Installation","page":"Guide","title":"Installation","text":"","category":"section"},{"location":"index.html#Installing-Rimu-for-usage","page":"Guide","title":"Installing Rimu for usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is a registered package and can be installed with the package manager. Hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> add Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Alternatively, use","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Pkg; Pkg.add(name=\"Rimu\")","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"in order to install Rimu from a script.","category":"page"},{"location":"index.html#Installing-Rimu-for-development","page":"Guide","title":"Installing Rimu for development","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"In order to be able to edit the source code, push changes, change and make new git branches, etc., clone the git repository with git clone to a convenient location, e.g. ~/mygitpackagefolder/. Then hit the ] key at the Julia REPL to get into Pkg mode and type","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"pkg> develop ~/mygitpackagefolder/rimu.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"where the file path has to be adjusted to the location of the cloned git repository.","category":"page"},{"location":"index.html#Usage","page":"Guide","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The package is now installed and can be imported with","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Rimu","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"When planning to edit the code of the package it is advisable to use the Revise package by issuing","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"julia> using Revise","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"before using Rimu. This will track any changes made to the source code of Rimu and the changed package will be available after saving the source code (hopefully, and most of the time, without restarting the Julia REPL).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu offers a number of tools for representing Hamiltonians (see Hamiltonians) and state vectors / wave functions (see DictVectors) as well as algorithms to find the ground state, e.g. lomc!.","category":"page"},{"location":"index.html#Scripts","page":"Guide","title":"Scripts","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"Rimu is written as a Julia package to be imported with using Rimu as described above. It supplies useful functions and types. Performing actual calculations and analysing the results is done with scripts. The folder scripts/ contains a collections of scripts that are either examples for use of the Rimu package or useful scripts for data analysis. In particular:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"scripts/BHM-example.jl is an example script that runs fciqmc on the 1D Bose-Hubbard model. A data frame with results is written to the file fciqmcdata.arrow.\nscripts/BHM-example-mpi.jl demonstrates basic usage of Rimu with MPI.","category":"page"},{"location":"index.html#MPI","page":"Guide","title":"MPI","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The Rimu package can run in parallel on different processes or node and distribute work by making use of MPI, or \"message passing interface\". For example, running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> julia scripts/BHM-example.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"will run on one processor with the main lomc!() computation (i.e. after package loading and compilation) completing in 2.69 seconds.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Running","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"> mpirun -np 4 julia scripts/BHM-example-mpi.jl","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"on the same hardware makes use of 4 cores and the main part completes in 1.04 seconds, a speedup factor of 2.6. This seems reasonable, given that extra work needs to be done for communicating between different processes.","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Using MPI parallelism with Rimu is easy. Enabling MPI for use in lomc!() is enabled automatically if PDVec is used to store a vector. In that case, data will be stored in a distributed fashion among the MPI ranks and only communicated between ranks when necessary. Additional MPI-related functionality is provided by the module RMPI.","category":"page"},{"location":"index.html#Compatibility","page":"Guide","title":"Compatibility","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"We recommend using Rimu with the latest Julia release version. Rimu requires at least julia v1.9.","category":"page"},{"location":"index.html#References","page":"Guide","title":"References","text":"","category":"section"},{"location":"index.html","page":"Guide","title":"Guide","text":"The code implements the FCIQMC algorithm originally described in","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Fermion Monte Carlo without fixed nodes: A game of life, death, and annihilation in Slater determinant space\", G. H. Booth, A. J. W. Thom, A. Alavi, J. Chem. Phys. 131, 054106 (2009).\n\"Communications: Survival of the fittest: accelerating convergence in full configuration-interaction quantum Monte Carlo.\", D. Cleland,  G. H. Booth, A. Alavi, J. Chem. Phys. 132, 041103 (2010).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Scientific papers describing additional features implemented in Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Improved walker population control for full configuration interaction quantum Monte Carlo\", M. Yang, E. Pahl, J. Brand, J. Chem. Phys. 153, 170143 (2020); arXiv:2008.01927.\n\"Stochastic differential equation approach to understanding the population control bias in full configuration interaction quantum Monte Carlo\", J. Brand, M. Yang, E. Pahl, arXiv:2103.07800 (2021).","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"Papers discussing results obtained with Rimu:","category":"page"},{"location":"index.html","page":"Guide","title":"Guide","text":"\"Polaron-Depleton Transition in the Yrast Excitations of a One-Dimensional Bose Gas with a Mobile Impurity\", M. Yang, M. Čufar, E. Pahl, J. Brand, Condens. Matter 7, 15 (2022).\n\"Magnetic impurity in a one-dimensional few-fermion system\", L. Rammelmüller, D. Huber, M. Čufar, J. Brand, A. Volosniev, arXiv:2204.01606 (2022).","category":"page"},{"location":"dictvectors.html#Module-DictVectors","page":"Dict vectors","title":"Module DictVectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DictVectors\nAbstractDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors","page":"Dict vectors","title":"Rimu.DictVectors","text":"Module that provides concrete implementations of the AbstractDVec interface.\n\nDVec: basic AbstractDVec\nPDVec: parallel AbstractDVec with MPI and initiator support\nInitiatorDVec: allows storing information about initiator status\n\nSee Interfaces.\n\n\n\n\n\n","category":"module"},{"location":"dictvectors.html#Rimu.Interfaces.AbstractDVec","page":"Dict vectors","title":"Rimu.Interfaces.AbstractDVec","text":"AbstractDVec{K,V}\n\nAbstract data type for vector-like data structures with sparse storage. While conceptually AbstractDVecs represent elements of a vector space over a scalar type V, they are indexed by an arbitrary type K (could be non-integers) similar to dictionaries. They support the interface from VectorInterface.jl and are designed to work well for quantum Monte Carlo with lomc! and for matrix-free linear algebra with KrylovKit.\n\nConcrete implementations are available as PDVec, DVec, and InitiatorDVec.\n\nAbstractDVecs have a StochasticStyle which selects the spawning algorithm in FCIQMC. Looking up an element that is not stored in the AbstractDVec should return a zero, and setting a value to zero should remove it from the vector. To iterate over an AbstractDVec, use keys, pairs, or values. When possible, use reduction functions such as sum or mapreduce.\n\nInterface\n\nThe interface is similar to the AbstractDict interface, but with the changed behaviour as noted above.  Implement what would be needed for the AbstractDict interface (pairs, keys, values, setindex!, getindex, delete!, length, empty, empty!) and, in addition:\n\nStochasticStyle\nstorage returns an AbstractDict storing the raw data with possibly different valtype than V.\ndeposit!\n\nA default implementation for the VectorInterface.jl interface is provided through the above functions.\n\nSee also DictVectors, Interfaces.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Concrete-implementations","page":"Dict vectors","title":"Concrete implementations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"DVec\nInitiatorDVec\nPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.DVec","page":"Dict vectors","title":"Rimu.DictVectors.DVec","text":"DVec{K,V,D<:AbstractDict{K,V},S}\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot. It has a StochasticStyle that is used to select an appropriate spawning strategy in the FCIQMC algorithm.\n\nSee also: AbstractDVec, InitiatorDVec, PDVec.\n\nConstructors\n\nDVec(dict::AbstractDict[; style, capacity]): create a DVec with dict for storage. Note that the data may or may not be copied.\nDVec(args...[; style, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nDVec{K,V}([; style, capacity]): create an empty DVec{K,V}.\nDVec(dv::AbstractDVec[; style, capacity]): create a DVec with the same contents as  adv. The style is inherited from dv by default.\n\nThe default style is selected based on the DVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\n\nThe capacity argument is optional and sets the initial size of the DVec via Base.sizehint!.\n\nExamples\n\njulia> dv = DVec(:a => 1)\nDVec{Symbol,Int64} with 1 entry, style = IsStochasticInteger{Int64}()\n  :a => 1\n\njulia> dv = DVec(:a => 2, :b => 3; style=IsDeterministic())\nDVec{Symbol,Float64} with 2 entries, style = IsDeterministic{Float64}()\n  :a => 2.0\n  :b => 3.0\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorDVec","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorDVec","text":"InitiatorDVec{K,V} <: AbstractDVec{K,V}\n\nDictionary-based vector-like data structure for use with lomc! and KrylovKit.jl. See AbstractDVec. Functionally identical to DVec, but contains InitiatorValues internally in order to facilitate initiator methods. Initiator methods for controlling the Monte Carlo sign problem were first introduced in J. Chem. Phys. 132, 041103 (2010). How the initiators are handled is controlled by specifying an InitiatorRule with the initiator keyword argument (see below).\n\nSee also: AbstractDVec, DVec, PDVec.\n\nConstructors\n\nInitiatorDVec(dict::AbstractDict[; style, initiator, capacity]): create an InitiatorDVec with dict for storage.  Note that the data may or may not be copied.\nInitiatorDVec(args...[; style, initiator, capacity]): args... are passed to the Dict constructor. The Dict is used for storage.\nInitiatorDVec{K,V}([; style, initiator, capacity]): create an empty InitiatorDVec{K,V}.\nInitiatorDVec(dv::AbstractDVec[; style, initiator, capacity]): create an InitiatorDVec  with the same contents as dv. The style is inherited from dv by default.\n\nKeyword  arguments\n\nstyle: A valid StochasticStyle.  The default is selected based on the InitiatorDVec's valtype (see default_style). If a style is given and the valtype does not match the style's eltype, the values are converted to an appropriate type.\ninitiator = Initiator(1): A valid InitiatorRule. See Initiator.\ncapacity: Indicative size as Int. Optional. Sets the initial size of the InitiatorDVec via Base.sizehint!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDVec","page":"Dict vectors","title":"Rimu.DictVectors.PDVec","text":"PDVec{K,V}(; kwargs...)\nPDVec(iter; kwargs...)\nPDVec(pairs...; kwargs...)\n\nDictionary-based vector-like data structure for use with FCIQMC and KrylovKit.jl. While mostly behaving like a Dict, it supports various linear algebra operations such as norm and dot, and the interface defined in VectorInterface.\n\nThe P in PDVec stands for parallel. PDVecs perform mapreduce, foreach, and various linear algebra operations in a threaded manner. If MPI is available, these operations are automatically distributed as well. As such it is not recommended to iterate over pairs, keys, or values directly unless explicitly performing them on the localpart of the vector.\n\nSee also: AbstractDVec, DVec, InitiatorDVec.\n\nKeyword arguments\n\nstyle =default_style(V): A StochasticStyle that is used to select the spawning strategy in the FCIQMC algorithm.\ninitiator =NonInitiator(): An InitiatorRule, used in FCIQMC to remove the sign problem.\ncommunicator: A Communicator that controls how operations are performed when using MPI. The defaults are NotDistributed when not using MPI and PointToPoint when using MPI.\n\nExtended Help\n\nSegmentation\n\nThe vector is split into Threads.nthreads() subdictionaries called segments. Which dictionary a key-value pair is mapped to is determined by the hash of the key. The purpose of this segmentation is to allow parallel processing - functions such as mapreduce, add! or dot (full list below) process each subdictionary on a separate thread.\n\nExample\n\njulia> add = FermiFS2C((1,1,0,0), (0,0,1,1));\n\njulia> op = HubbardMom1D(add; t=4/π^2, u=4);\n\njulia> pv = PDVec(add => 1.0)\n1-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↑↓↓⟩\" => 1.0\n\njulia> pv = op * pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => 4.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => -1.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => -1.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> map!(x -> -x, values(pv)); pv\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => -1.0\n  fs\"|↑↑↓↓⟩\" => -4.0\n  fs\"|↓↑↓↑⟩\" => -1.0\n  fs\"|↓↑↑↓⟩\" => 1.0\n  fs\"|⇅⋅⋅⇅⟩\" => -1.0\n  fs\"|↑↓↓↑⟩\" => 1.0\n  fs\"|⋅⇅⇅⋅⟩\" => -1.0\n\njulia> dest = similar(pv)\n0-element PDVec: style = IsDeterministic{Float64}()\n\njulia> map!(x -> x + 2, dest, values(pv))\n7-element PDVec: style = IsDeterministic{Float64}()\n  fs\"|↑↓↑↓⟩\" => 1.0\n  fs\"|↑↑↓↓⟩\" => -2.0\n  fs\"|↓↑↓↑⟩\" => 1.0\n  fs\"|↓↑↑↓⟩\" => 3.0\n  fs\"|⇅⋅⋅⇅⟩\" => 1.0\n  fs\"|↑↓↓↑⟩\" => 3.0\n  fs\"|⋅⇅⇅⋅⟩\" => 1.0\n\njulia> sum(values(pv))\n-6.0\n\njulia> dot(dest, pv)\n10.0\n\njulia> dot(dest, op, pv)\n44.0\n\nMPI\n\nWhen MPI is active, all parallel reductions are automatically reduced across MPI ranks with a call to MPI.Allreduce.\n\nIn a distributed setting, PDVec does not support iteration without first making it explicit the iteration is only to be performed on the local segments of the vector. This is done with localpart. In general, even when not using MPI, it is best practice to use localpart when explicit iteration is required.\n\nUse with KrylovKit\n\nPDVec is compatible with eigsolve from KrylovKit.jl. When used, the diagonalisation is performed in a threaded and distributed manner. Using multiple MPI ranks with this method does not distribute the memory load effectively, but does result in significant speedups.\n\nExample\n\njulia> using KrylovKit\n\njulia> add = BoseFS((0,0,5,0,0));\n\njulia> op = HubbardMom1D(add; u=6.0);\n\njulia> pv = PDVec(add => 1.0);\n\njulia> results = eigsolve(op, pv, 4, :SR);\n\njulia> results[1][1:4]\n4-element Vector{Float64}:\n -3.4311156892322234\n  1.1821748602612363\n  3.7377753753082823\n  6.996390417443125\n\nParallel functionality\n\nThe following functions are threaded MPI-compatible:\n\nFrom Base: mapreduce and derivatives (sum, prod, reduce...), all, any,map! (on values only), +, -, *\nFrom LinearAlgebra: rmul!, lmul!, mul!, axpy!, axpby!, dot, norm, normalize, normalize!\nThe full interface defined in VectorInterface\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Interface-functions","page":"Dict vectors","title":"Interface functions","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"deposit!\nstorage\nfreeze\nlocalpart\napply_operator!\nsort_into_targets!\nworking_memory","category":"page"},{"location":"dictvectors.html#Rimu.Interfaces.deposit!","page":"Dict vectors","title":"Rimu.Interfaces.deposit!","text":"deposit!(w::InitiatorDVec, add, val, p_add=>p_val)\n\nAdd val into w at address add as an AbstractInitiatorValue.\n\n\n\n\n\ndeposit!(w::AbstractDVec, add, val, parent::Pair)\n\nAdd val into w at address add, taking into account initiator rules if applicable. parent contains the address => value pair from which the pair add => val was created. InitiatorDVec can intercept this and add its own functionality.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.storage","page":"Dict vectors","title":"Rimu.Interfaces.storage","text":"storage(dvec) -> AbstractDict\n\nReturn the raw storage associated with dvec as an AbstractDict. Used in MPI communication.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#OrderedCollections.freeze","page":"Dict vectors","title":"OrderedCollections.freeze","text":"freeze(dv)\n\nCreate a \"frozen\" version of dv which can no longer be modified or used in the conventional manner, but supports faster dot products.\n\nIf dv is an MPIData, synchronize its contents among the ranks first.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.localpart","page":"Dict vectors","title":"Rimu.Interfaces.localpart","text":"localpart(dv) -> AbstractDVec\n\nGet the part of dv that is located on this MPI rank. Returns dv itself for vectors that can't be MPI distributed (DVecs and InitiatorDVecs).\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.apply_operator!","page":"Dict vectors","title":"Rimu.Interfaces.apply_operator!","text":"apply_operator!(working_memory, target, source, operator, boost=1, compress=Val(true)) ->\n    stat_names, stats, working_memory, target\n\nPerform a single matrix(/operator)-vector multiplication:\n\nv^(n + 1) = hatT v^(n) \n\nwhere hatT is the operator, v^(n+1) is the target and v^(n) is the source. The working_memory can be used as temporary storage.\n\nThe boost argument is passed to apply_column! and increases the number of spawns performed. For the operator to be applied without compressing the vector after, set compress to Val(false).\n\nWhether the operation is performed in a stochastic, semistochastic, or determistic way is controlled by the trait StochasticStyle(target). See StochasticStyle.\n\nReturns the step stats generated by the StochasticStyle, the working memory and the target vector. target and working_memory may be mutated and/or swapped.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.sort_into_targets!","page":"Dict vectors","title":"Rimu.Interfaces.sort_into_targets!","text":"sort_into_targets!(target, source, stats) -> target, source, agg_stats\n\nAggregate coefficients from source to target and from stats to agg_stats according to thread- or MPI-level parallelism.\n\nReturns the new target and source, as the sorting process may involve swapping them.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.Interfaces.working_memory","page":"Dict vectors","title":"Rimu.Interfaces.working_memory","text":"working_memory(dv::AbstractDVec)\n\nCreate a working memory instance compatible with dv. The working memory must be compatible with sort_into_targets! and apply_operator!.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Supported-operations","page":"Dict vectors","title":"Supported operations","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractDVecs generally support most operations that are defined on Vectors and Dicts. This includes the interface from VectorInterface.jl, and many functions from the LinearAlgebra standard library.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"A significant difference between AbstractDVecs, Vectors, and Dicts, is that iteration on them is disabled by default. Iteration must be explicitly performed on keys, values, or pairs, however, it is highly recommended you use mapreduce, reduce, or similar functions when performing reductions, as that will make the operations compatible with MPI.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"In addition, Rimu defines the following function.","category":"page"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"walkernumber\ndot_from_right","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.walkernumber","page":"Dict vectors","title":"Rimu.DictVectors.walkernumber","text":"walkernumber(md::MPIData)\n\nCompute the walkernumber of the distributed data on every MPI rank with MPI.Allreduce. MPI syncronizing.\n\n\n\n\n\nwalkernumber(v)\n\nCompute the number of walkers in v. It is used for updating the shift. Overload this function for modifying population control.\n\nIn most cases walkernumber(v) is identical to norm(v, 1). For AbstractDVecs with complex coefficients it reports the one norm separately for the real and the imaginary part as a ComplexF64. See Norm1ProjectorPPop.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.dot_from_right","page":"Dict vectors","title":"Rimu.DictVectors.dot_from_right","text":"dot_from_right(w, op::AbstractHamiltonian, v)\n\nInternal function evaluates the 3-argument dot() function in order from right to left.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Projectors","page":"Dict vectors","title":"Projectors","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"AbstractProjector\nNormProjector\nNorm2Projector\nUniformProjector\nNorm1ProjectorPPop\nRimu.DictVectors.FrozenDVec\nRimu.DictVectors.FrozenPDVec","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractProjector","page":"Dict vectors","title":"Rimu.DictVectors.AbstractProjector","text":"Abstract supertype for projectors to be used in in lieu of DVecs or Vectors in dot products. Implemented subtypes:\n\nUniformProjector\nNormProjector\nNorm2Projector\nNorm1ProjectorPPop\n\nSee also PostStepStrategy for use of projectors in lomc!.\n\nInterface\n\nDefine a method for LinearAlgebra.dot(projector, v).\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NormProjector","page":"Dict vectors","title":"Rimu.DictVectors.NormProjector","text":"NormProjector() <: AbstractProjector\n\nResults in computing the one-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,1)\n\nNormProjector() thus represents the vector sign.(x).\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm2Projector","page":"Dict vectors","title":"Rimu.DictVectors.Norm2Projector","text":"Norm2Projector() <: AbstractProjector\n\nResults in computing the two-norm when used in dot(). E.g.\n\ndot(NormProjector(),x)\n-> norm(x,2) # with type Float64\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.UniformProjector","page":"Dict vectors","title":"Rimu.DictVectors.UniformProjector","text":"UniformProjector() <: AbstractProjector\n\nRepresents a vector with all elements 1. To be used with dot(). Minimizes memory allocations.\n\nUniformProjector()⋅v == sum(v)\ndot(UniformProjector(), LO, v) == sum(LO*v)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.Norm1ProjectorPPop","page":"Dict vectors","title":"Rimu.DictVectors.Norm1ProjectorPPop","text":"Norm1ProjectorPPop() <: AbstractProjector\n\nResults in computing the one-norm per population when used in dot(). E.g.\n\ndot(Norm1ProjectorPPop(),x)\n-> norm(real.(x),1) + im*norm(imag.(x),1)\n\nSee also PostStepStrategy, and AbstractProjector for use of projectors in lomc!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenDVec","text":"FrozenDVec\n\nA frozen DVec(s) can't be modified or used in the conventional manner, but support faster dot products. See: freeze.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.FrozenPDVec","page":"Dict vectors","title":"Rimu.DictVectors.FrozenPDVec","text":"FrozenPDVec\n\nParallel version of FrozenDVec. See: freeze, PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Initiator-rules","page":"Dict vectors","title":"Initiator rules","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Rimu.DictVectors.InitiatorRule\nRimu.DictVectors.AbstractInitiatorValue\nRimu.DictVectors.InitiatorValue\nRimu.DictVectors.initiator_valtype\nRimu.DictVectors.to_initiator_value\nRimu.DictVectors.from_initiator_value\nRimu.DictVectors.Initiator\nRimu.DictVectors.SimpleInitiator\nRimu.DictVectors.CoherentInitiator\nRimu.DictVectors.NonInitiator\nRimu.DictVectors.NonInitiatorValue","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorRule","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorRule","text":"InitiatorRule{V}\n\nAbstract type for defining initiator rules for InitiatorDVec. Concrete implementations:\n\nInitiator\nSimpleInitiator\nCoherentInitiator\nNonInitiator\n\nExtended Help\n\nInitiatorRules define how to store and retrieve data from associated AbstractInitiatorValues. When defining a new InitiatorRule, also define the following:\n\ninitiator_valtype\nfrom_initiator_value\nto_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.AbstractInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.AbstractInitiatorValue","text":"abstract type AbstractInitiatorValue{V}\n\nA value equipped with additional information that enables a variation of the initiator approximation. To be used with PDVec, InitiatorDVec and InitiatorRules.\n\nMust define:\n\nBase.zero, Base.:+, Base.:-, Base.:*\nfrom_initiator_value and to_initiator_value\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.InitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.InitiatorValue","text":"InitiatorValue{V}(; safe::V, unsafe::V, initiator::V) where V\n\nComposite \"walker\" with three fields. For use with InitiatorDVecs.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.initiator_valtype","page":"Dict vectors","title":"Rimu.DictVectors.initiator_valtype","text":"initiator_valtype(rule::InitiatorRule, T)\n\nReturn the AbstractInitiatorValue{T} that is employed by the rule.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.to_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.to_initiator_value","text":"to_initiator_value(::InitiatorRule, k::K, v::V, parent)\n\nConvert v to an AbstractInitiatorValue, taking the initiator rule and the parent that spawned it into account.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.from_initiator_value","page":"Dict vectors","title":"Rimu.DictVectors.from_initiator_value","text":"from_initiator_value(i::InitiatorRule, v::AbstractInitiatorValue)\n\nConvert the AbstractInitiatorValue v into a scalar value according to the InitiatorRule i.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.Initiator","page":"Dict vectors","title":"Rimu.DictVectors.Initiator","text":"Initiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SimpleInitiator","page":"Dict vectors","title":"Rimu.DictVectors.SimpleInitiator","text":"SimpleInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators cannot spawn.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.CoherentInitiator","page":"Dict vectors","title":"Rimu.DictVectors.CoherentInitiator","text":"CoherentInitiator(threshold = 1.0) <: InitiatorRule\n\nInitiator rule to be passed to PDVec or InitiatorDVec. An initiator is a configuration add with a coefficient with magnitude abs(v[add]) > threshold. The threshold can be passed as a keyword argument. Rules:\n\nInitiators can spawn anywhere.\nNon-initiators can spawn to initiators.\nMultiple non-initiators can spawn to a single non-initiator if their contributions add up to a value greater than the initiator threshold.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiator","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiator","text":"NonInitiator() <: InitiatorRule\n\nInitiator rule that disables the approximation. This is the default setting for PDVec.\n\nSee InitiatorRule.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NonInitiatorValue","page":"Dict vectors","title":"Rimu.DictVectors.NonInitiatorValue","text":"NonInitiatorValue{V}\n\nValue that does not contain any additional information - used with NonInitiator, the default initiator rule for PDVec.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#PDVec-internals","page":"Dict vectors","title":"PDVec internals","text":"","category":"section"},{"location":"dictvectors.html#Working-memory","page":"Dict vectors","title":"Working memory","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"pdworkingmemory.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.MainSegmentIterator","page":"Dict vectors","title":"Rimu.DictVectors.MainSegmentIterator","text":"MainSegmentIterator{W,D} <: AbstractVector{D}\n\nIterates the main segments of a specified rank. See remote_segments and local_segments.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemory","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemory","text":"PDWorkingMemory(t::PDVec)\n\nThe working memory that handles threading and MPI distribution for operations that involve operators, such as FCIQMC propagation, operator-vector multiplication and three-way dot products with PDVecs.\n\nThe working memory is structured in a series of columns, where each has a number of segments (see PDVec) equal to the number of segments across all MPI ranks. The purpose of this organisation is to allow spawning in parallel without using locks or atomic operations.\n\nThe steps performed on a PDWorkingMemory during a typical operation are perform_spawns!, collect_local!, synchronize_remote!, and move_and_compress!.\n\nWhen used with three-argument dot products, a full copy of the left-hand side vector is materialized in the first column of the working memory on all ranks.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PDWorkingMemoryColumn","page":"Dict vectors","title":"Rimu.DictVectors.PDWorkingMemoryColumn","text":"PDWorkingMemoryColumn\n\nA column in PDWorkingMemory. Supports deposit! and StochasticStyle and acts as a target for spawning.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.collect_local!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.collect_local!","text":"collect_local!(w::PDWorkingMemory)\n\nCollect each row in w into its main segment. This step must be performed before using local_segments or remote_segments to move the values elsewhere.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.local_segments-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.local_segments","text":"local_segments(w::PDWorkingMemory)\n\nReturns iterator over the main segments on the current rank. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.main_column-Union{Tuple{PDWorkingMemory{K, V, W, S}}, Tuple{S}, Tuple{W}, Tuple{V}, Tuple{K}} where {K, V, W, S}","page":"Dict vectors","title":"Rimu.DictVectors.main_column","text":"main_column(::PDWorkingMemory) -> PDVec\n\nReturn the \"main\" column of the working memory wrapped in a PDVec.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.move_and_compress!-Tuple{PDVec, PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.move_and_compress!","text":"move_and_compress!(dst::PDVec, src::PDWorkingMemory)\nmove_and_compress!(::CompressionStrategy, dst::PDVec, src::PDWorkingMemory)\n\nMove the values in src to dst, compressing the according to the CompressionStrategy on the way. This step can only be performed after collect_local! and synchronize_remote!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_columns-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_columns","text":"num_columns(w::PDWorkingMemory) -> Int\n\nNumber of columns in the working memory. The number of rows is equal to the number of segments in the local rank.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.num_rows-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.num_rows","text":"num_rows(w::PDWorkingMemory) -> Int\n\nNumber of rows in the working memory. The number of rows is equal to the number of segments accross all ranks.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.perform_spawns!-Tuple{PDWorkingMemory, PDVec, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.perform_spawns!","text":"perform_spawns!(w::PDWorkingMemory, t::PDVec, ham, boost)\n\nPerform spawns from t through ham to w.\n\nSee PDVec and PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.remote_segments-Tuple{PDWorkingMemory, Any}","page":"Dict vectors","title":"Rimu.DictVectors.remote_segments","text":"remote_segments(w::PDWorkingMemory, rank_id)\n\nReturns iterator over the main segments that belong to rank rank_id. Iterates Dicts.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!-Tuple{PDWorkingMemory}","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!(w::PDWorkingMemory)\n\nSynchronize non-local segments across MPI. Controlled by the Communicator. This can only be perfomed after collect_local!.\n\nSee PDWorkingMemory.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Communicators","page":"Dict vectors","title":"Communicators","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Modules = [DictVectors]\nPages = [\"communicators.jl\"]","category":"page"},{"location":"dictvectors.html#Rimu.DictVectors.Communicator","page":"Dict vectors","title":"Rimu.DictVectors.Communicator","text":"abstract type Communicator\n\nCommunicators are used to handle MPI communication when using PDVecs. Currently, two implementations are provided, NotDistributed, and PointToPoint. The communicator is picked automatically according to the number of MPI ranks available.\n\nWhen implementing a communicator, use local_segments and remote_segments.\n\nInterface\n\nsynchronize_remote!\nmpi_rank\nmpi_size\nmpi_comm\n\nOptional interface\n\nis_distributed: defaults to returning true.\nmerge_remote_reductions: defaults to using MPI.Allreduce.\ntotal_num_segments: defaults to n * mpi_size.\ntarget_segment: defaults to selecting using fastrange  to pick the segment.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.LocalPart","page":"Dict vectors","title":"Rimu.DictVectors.LocalPart","text":"LocalPart <: Communicator\n\nWhen localpart is used, the vector's Communicator is replaced with this. This allows iteration and local reductions.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.NotDistributed","page":"Dict vectors","title":"Rimu.DictVectors.NotDistributed","text":"NotDistributed <: Communicator\n\nThis Communicator is used when MPI is not available.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.PointToPoint","page":"Dict vectors","title":"Rimu.DictVectors.PointToPoint","text":"PointToPoint <: Communicator\n\nCommunicator that uses circular communication using MPI.Isend and MPI.Recv!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.SegmentedBuffer","page":"Dict vectors","title":"Rimu.DictVectors.SegmentedBuffer","text":"SegmentedBuffer\n\nMultiple vectors stored in a simple buffer with MPI communication.\n\nSee replace_collections!, mpi_send, mpi_recv_any!.\n\n\n\n\n\n","category":"type"},{"location":"dictvectors.html#Rimu.DictVectors.copy_to_local!","page":"Dict vectors","title":"Rimu.DictVectors.copy_to_local!","text":"copy_to_local!([::Communicator,] w::PDWorkingMemory, t::PDVec) -> PDVec\n\nCopy pairs in t from all ranks and return them as (possibly) new PDVec, possibly using the PDWorkingMemory as temporary storage.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.is_distributed-Tuple{Rimu.DictVectors.Communicator}","page":"Dict vectors","title":"Rimu.DictVectors.is_distributed","text":"is_distributed(::Communicator)\n\nReturn true if communicator operates over MPI.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.merge_remote_reductions-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.merge_remote_reductions","text":"merge_remote_reductions(c::Communicator, op, x)\n\nMerge the results of reductions over MPI. By default, it uses MPI.Allreduce.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_comm","page":"Dict vectors","title":"Rimu.DictVectors.mpi_comm","text":"mpi_comm(::Communicator) -> MPI.Comm\n\nReturn the MPI.Comm that the Communicator operates on.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_rank","page":"Dict vectors","title":"Rimu.DictVectors.mpi_rank","text":"mpi_rank(::Communicator) -> Int\n\nReturn the MPI rank of the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_recv_any!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_recv_any!","text":"mpi_recv_any!(buf::SegmentedBuffer, comm) -> Int\n\nFind a source that is ready to send a buffer and receive from it. Return the rank ID of the sender.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_send-Tuple{Rimu.DictVectors.SegmentedBuffer, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.mpi_send","text":"mpi_send(buf::SegmentedBuffer, dest, comm)\n\nSend the buffers to dest.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.mpi_size","page":"Dict vectors","title":"Rimu.DictVectors.mpi_size","text":"mpi_size(::Communicator) -> Int\n\nReturn the total number of MPI ranks in the Communicator.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.replace_collections!-Tuple{Rimu.DictVectors.SegmentedBuffer, Any}","page":"Dict vectors","title":"Rimu.DictVectors.replace_collections!","text":"replace_collections!(buf::SegmentedBuffer, iters)\n\nInsert collections in iters into buffers.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.synchronize_remote!","page":"Dict vectors","title":"Rimu.DictVectors.synchronize_remote!","text":"synchronize_remote!([::Communicator,] ::PDWorkingMemory)\n\nCopy pairs from remote ranks to the local part of the PDWorkingMemory.\n\n\n\n\n\n","category":"function"},{"location":"dictvectors.html#Rimu.DictVectors.target_segment-Tuple{Rimu.DictVectors.Communicator, Any, Any}","page":"Dict vectors","title":"Rimu.DictVectors.target_segment","text":"target_segment(c::Communicator, k, num_segments) -> target, is_local\n\nThis function is used to determine where in the PDVec a key should be stored.\n\nIf the key is local (stored on the same MPI rank), return its segment index and true. If the key is non-local, return any value and false.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Rimu.DictVectors.total_num_segments-Tuple{Rimu.DictVectors.Communicator, Any}","page":"Dict vectors","title":"Rimu.DictVectors.total_num_segments","text":"total_num_segments(c::Communicator, n) -> Int\n\nReturn the total number of segments, including the remote ones, where n is number of local segments.\n\n\n\n\n\n","category":"method"},{"location":"dictvectors.html#Index","page":"Dict vectors","title":"Index","text":"","category":"section"},{"location":"dictvectors.html","page":"Dict vectors","title":"Dict vectors","text":"Pages   = [\"dictvectors.md\"]","category":"page"}]
}
